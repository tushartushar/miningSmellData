Implementation smell,Namespace,Class,File,Method,Description
Long Method,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,FilterToQL,The method has 138 lines of code.
Long Method,Com.Googlecode.Genericdao.Search,InternalUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\InternalUtil.cs,ConvertIfNeeded,The method has 145 lines of code.
Complex Method,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,GenerateRowCountQL,Cyclomatic complexity of the method is 25
Complex Method,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,GenerateSelectClause,Cyclomatic complexity of the method is 37
Complex Method,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,FilterToQL,Cyclomatic complexity of the method is 70
Complex Method,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,GenerateSimpleAllOrSome,Cyclomatic complexity of the method is 19
Complex Method,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,Param,Cyclomatic complexity of the method is 8
Complex Method,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,GetFilterFromExampleRecursive,Cyclomatic complexity of the method is 20
Complex Method,Com.Googlecode.Genericdao.Search,Field,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Field.cs,ToString,Cyclomatic complexity of the method is 31
Complex Method,Com.Googlecode.Genericdao.Search,Filter,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Filter.cs,ToString,Cyclomatic complexity of the method is 52
Complex Method,Com.Googlecode.Genericdao.Search,InternalUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\InternalUtil.cs,ConvertIfNeeded,Cyclomatic complexity of the method is 60
Complex Method,Com.Googlecode.Genericdao.Search,InternalUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\InternalUtil.cs,ParamDisplayString,Cyclomatic complexity of the method is 9
Complex Method,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,ToString,Cyclomatic complexity of the method is 18
Complex Method,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,WalkList,Cyclomatic complexity of the method is 8
Complex Method,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,WalkFilter,Cyclomatic complexity of the method is 10
Complex Method,Com.Googlecode.Genericdao.Search.Nhibernate,NhibernateSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Nhibernate\NhibernateSearchProcessor.cs,AddResultMode,Cyclomatic complexity of the method is 18
Long Parameter List,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,GetFilterFromExampleRecursive,The method has 5 parameters.
Long Statement,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,GenerateRowCountQL,The length of the statement  "			throw new ArgumentException ("Unfortunately' Hibernate Generic DAO does not currently support " + "the count operation on a search that has distinct set with multiple fields."); " is 177.
Long Statement,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,FilterToQL,The length of the statement  "		foreach (var filterStr in ((IList)value).OfType<Filter> ().Select (o => FilterToQL (ctx' o)).Where (filterStr => filterStr != null)) { " is 134.
Long Statement,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,AppendCustomExpression,The length of the statement  "				throw new ArgumentException ("This custom filter expression (" + expression + ") contains a value placeholder for zero (?0)' but placeholders should be numbered starting at ?1."); " is 179.
Long Statement,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,AppendCustomExpression,The length of the statement  "				throw new ArgumentException ("This custom filter expression (" + expression + ") calls for a value placeholder number " + valueIndex + "' but no values were specified."); " is 170.
Long Statement,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,AppendCustomExpression,The length of the statement  "				throw new ArgumentException ("This custom filter expression (" + expression + ") calls for a value placeholder number " + valueIndex + "' but only " + values.Count + " values were specified."); " is 193.
Long Statement,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,SplitPath,The length of the statement  "		first = pos != -1 && lastSegment.Equals ("size") && _metadataUtil.Get (ctx.RootClass' currentPath.Substring (0' pos)).IsCollection (); " is 134.
Long Statement,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,SecurityCheckProperty,The length of the statement  "		throw new ArgumentException ("A property used in a Search may only contain word characters (alphabetic' numeric and underscore \"_\") and dot \".\" seperators. This constraint was violated: " + property); " is 204.
Long Statement,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,GetFilterFromExampleRecursive,The length of the statement  "			else if (options.ExcludeZeros && InternalUtil.IsNumeric (value) && ((IConvertible)value).ToInt64 (CultureInfo.InvariantCulture) == 0) { " is 135.
Long Statement,Com.Googlecode.Genericdao.Search,InternalUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\InternalUtil.cs,IsNumeric,The length of the statement  "	return (typeCode == TypeCode.Decimal || (type.IsPrimitive && typeCode != TypeCode.Object && typeCode != TypeCode.Boolean && typeCode != TypeCode.Char && typeCode != TypeCode.String)); " is 183.
Long Statement,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,RemoveField,The length of the statement  "	var fields = search.GetFields ().Where (field => !field.Property.Equals (property) || !field.Key.Equals (key)).ToList (); " is 121.
Long Statement,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,CalcFirstResult,The length of the statement  "	return (search.GetFirstResult () > 0) ? search.GetFirstResult () : (search.GetPage () > 0 && search.GetMaxResults () > 0) ? search.GetPage () * search.GetMaxResults () : 0; " is 172.
Long Statement,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,Equals,The length of the statement  "	if (search.GetSearchClass () == null ? s.GetSearchClass () != null : !(search.GetSearchClass () == s.GetSearchClass ())) " is 120.
Long Statement,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,Equals,The length of the statement  "	if (search.IsDisjunction () != s.IsDisjunction () || search.GetResultMode () != s.GetResultMode () || search.GetFirstResult () != s.GetFirstResult () || search.GetPage () != s.GetPage () || search.GetMaxResults () != s.GetMaxResults ()) " is 236.
Long Statement,Com.Googlecode.Genericdao.Search,Sort,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Sort.cs,Equals,The length of the statement  "	return string.Equals (_property' other._property) && _desc.Equals (other._desc) && _ignoreCase.Equals (other._ignoreCase) && _customExpression.Equals (other._customExpression); " is 176.
Long Statement,Com.Googlecode.Genericdao.Search.Nhibernate,NhibernateEntityMetadata,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Nhibernate\NhibernateEntityMetadata.cs,GetPropertyValue,The length of the statement  "	return GetIdProperty ().Equals (property) ? GetIdValue (theObject) : _metadata.GetPropertyValue (theObject' property' EntityMode.Poco); " is 135.
Long Statement,Com.Googlecode.Genericdao.Search.Nhibernate,NhibernateEntityMetadata,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Nhibernate\NhibernateEntityMetadata.cs,GetPropertyType,The length of the statement  "		return new NhibernateEntityMetadata (_sessionFactory' _sessionFactory.GetClassMetadata (((EntityType)pType).Name)' pCollectionType); " is 132.
Long Statement,Com.Googlecode.Genericdao.Search.Nhibernate,NhibernateMetadataUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Nhibernate\NhibernateMetadataUtil.cs,IsId,The length of the statement  "	if (propertyPath.Equals ("id") || (propertyPath.EndsWith (".id") && Get (rootClass' propertyPath.Substring (0' propertyPath.Length - 3)).IsEntity ())) " is 150.
Long Statement,Com.Googlecode.Genericdao.Search.Nhibernate,NhibernateNonEntityMetadata,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Nhibernate\NhibernateNonEntityMetadata.cs,IsString,The length of the statement  "	return types.Length == 1 && (types [0].DbType.Equals (DbType.String) || types [0].DbType.Equals (DbType.StringFixedLength)); " is 124.
Long Statement,Com.Googlecode.Genericdao.Search.Nhibernate,NhibernateNonEntityMetadata,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Nhibernate\NhibernateNonEntityMetadata.cs,GetPropertyType,The length of the statement  "		return new NhibernateEntityMetadata (_sessionFactory' _sessionFactory.GetClassMetadata (((EntityType)pType).Name)' pCollectionType); " is 132.
Complex Conditional,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,Equals,The conditional expression  "search.IsDisjunction () != s.IsDisjunction () || search.GetResultMode () != s.GetResultMode () || search.GetFirstResult () != s.GetFirstResult () || search.GetPage () != s.GetPage () || search.GetMaxResults () != s.GetMaxResults ()"  is complex.
Empty Catch Block,Com.Googlecode.Genericdao.Search,InternalUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\InternalUtil.cs,ConvertIfNeeded,The method has an empty catch block.
Empty Catch Block,Com.Googlecode.Genericdao.Search,InternalUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\InternalUtil.cs,ConvertIfNeeded,The method has an empty catch block.
Empty Catch Block,Com.Googlecode.Genericdao.Search,InternalUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\InternalUtil.cs,ConvertIfNeeded,The method has an empty catch block.
Empty Catch Block,Com.Googlecode.Genericdao.Search,InternalUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\InternalUtil.cs,ConvertIfNeeded,The method has an empty catch block.
Empty Catch Block,Com.Googlecode.Genericdao.Search,InternalUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\InternalUtil.cs,ConvertIfNeeded,The method has an empty catch block.
Empty Catch Block,Com.Googlecode.Genericdao.Search,InternalUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\InternalUtil.cs,ConvertIfNeeded,The method has an empty catch block.
Empty Catch Block,Com.Googlecode.Genericdao.Search,InternalUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\InternalUtil.cs,ConvertIfNeeded,The method has an empty catch block.
Magic Number,Com.Googlecode.Genericdao.Search,Field,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Field.cs,GetHashCode,The following statement contains a magic number: unchecked {  	// ReSharper disable NonReadonlyFieldInGetHashCode  	var hashCode = (_property != null ? _property.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (_key != null ? _key.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ _operator;  	// ReSharper restore NonReadonlyFieldInGetHashCode  	return hashCode;  }  
Magic Number,Com.Googlecode.Genericdao.Search,Field,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Field.cs,GetHashCode,The following statement contains a magic number: unchecked {  	// ReSharper disable NonReadonlyFieldInGetHashCode  	var hashCode = (_property != null ? _property.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (_key != null ? _key.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ _operator;  	// ReSharper restore NonReadonlyFieldInGetHashCode  	return hashCode;  }  
Magic Number,Com.Googlecode.Genericdao.Search,Field,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Field.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (_key != null ? _key.GetHashCode () : 0);  
Magic Number,Com.Googlecode.Genericdao.Search,Field,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Field.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ _operator;  
Magic Number,Com.Googlecode.Genericdao.Search,Filter,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Filter.cs,IsTakesSingleValue,The following statement contains a magic number: return _operator <= 7;  
Magic Number,Com.Googlecode.Genericdao.Search,Filter,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Filter.cs,IsTakesNoValue,The following statement contains a magic number: return (_operator >= 10 && _operator <= 13) || _operator == OP_CUSTOM;  
Magic Number,Com.Googlecode.Genericdao.Search,Filter,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Filter.cs,IsTakesNoValue,The following statement contains a magic number: return (_operator >= 10 && _operator <= 13) || _operator == OP_CUSTOM;  
Magic Number,Com.Googlecode.Genericdao.Search,Filter,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Filter.cs,IsTakesSingleSubFilter,The following statement contains a magic number: return _operator == OP_NOT || (_operator >= 200 && _operator < 300);  
Magic Number,Com.Googlecode.Genericdao.Search,Filter,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Filter.cs,IsTakesSingleSubFilter,The following statement contains a magic number: return _operator == OP_NOT || (_operator >= 200 && _operator < 300);  
Magic Number,Com.Googlecode.Genericdao.Search,Filter,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Filter.cs,IsTakesNoProperty,The following statement contains a magic number: return _operator >= 100 && _operator <= 102;  
Magic Number,Com.Googlecode.Genericdao.Search,Filter,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Filter.cs,IsTakesNoProperty,The following statement contains a magic number: return _operator >= 100 && _operator <= 102;  
Magic Number,Com.Googlecode.Genericdao.Search,Filter,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Filter.cs,GetHashCode,The following statement contains a magic number: unchecked {  	// ReSharper disable NonReadonlyFieldInGetHashCode  	var hashCode = (_property != null ? _property.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (_value != null ? _value.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ _operator;  	// ReSharper restore NonReadonlyFieldInGetHashCode  	return hashCode;  }  
Magic Number,Com.Googlecode.Genericdao.Search,Filter,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Filter.cs,GetHashCode,The following statement contains a magic number: unchecked {  	// ReSharper disable NonReadonlyFieldInGetHashCode  	var hashCode = (_property != null ? _property.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (_value != null ? _value.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ _operator;  	// ReSharper restore NonReadonlyFieldInGetHashCode  	return hashCode;  }  
Magic Number,Com.Googlecode.Genericdao.Search,Filter,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Filter.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (_value != null ? _value.GetHashCode () : 0);  
Magic Number,Com.Googlecode.Genericdao.Search,Filter,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Filter.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ _operator;  
Magic Number,Com.Googlecode.Genericdao.Search,Search,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Search.cs,SetResultMode,The following statement contains a magic number: if (resultMode < 0 || resultMode > 4)  	throw new ArgumentException ("Result Mode ( " + resultMode + " ) is not a valid option.");  
Magic Number,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,GetHashCode,The following statement contains a magic number: hash = hash * 31 + (search.GetSearchClass () == null ? 0 : search.GetSearchClass ().GetHashCode ());  
Magic Number,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,GetHashCode,The following statement contains a magic number: hash = hash * 31 + (search.GetFields () == null ? 0 : search.GetFields ().GetHashCode ());  
Magic Number,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,GetHashCode,The following statement contains a magic number: hash = hash * 31 + (search.GetFilters () == null ? 0 : search.GetFilters ().GetHashCode ());  
Magic Number,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,GetHashCode,The following statement contains a magic number: hash = hash * 31 + (search.GetSorts () == null ? 0 : search.GetSorts ().GetHashCode ());  
Magic Number,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,GetHashCode,The following statement contains a magic number: hash = hash * 31 + (search.IsDisjunction () ? 1 : 0);  
Magic Number,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,GetHashCode,The following statement contains a magic number: hash = hash * 31 + search.GetResultMode ().GetHashCode ();  
Magic Number,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,GetHashCode,The following statement contains a magic number: hash = hash * 31 + search.GetFirstResult ().GetHashCode ();  
Magic Number,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,GetHashCode,The following statement contains a magic number: hash = hash * 31 + search.GetPage ().GetHashCode ();  
Magic Number,Com.Googlecode.Genericdao.Search,SearchUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\SearchUtil.cs,GetHashCode,The following statement contains a magic number: hash = hash * 31 + search.GetMaxResults ().GetHashCode ();  
Magic Number,Com.Googlecode.Genericdao.Search,Sort,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Sort.cs,GetHashCode,The following statement contains a magic number: unchecked {  	// ReSharper disable NonReadonlyFieldInGetHashCode  	var hashCode = (_property != null ? _property.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ _desc.GetHashCode ();  	hashCode = (hashCode * 397) ^ _ignoreCase.GetHashCode ();  	hashCode = (hashCode * 397) ^ _customExpression.GetHashCode ();  	// ReSharper restore NonReadonlyFieldInGetHashCode  	return hashCode;  }  
Magic Number,Com.Googlecode.Genericdao.Search,Sort,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Sort.cs,GetHashCode,The following statement contains a magic number: unchecked {  	// ReSharper disable NonReadonlyFieldInGetHashCode  	var hashCode = (_property != null ? _property.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ _desc.GetHashCode ();  	hashCode = (hashCode * 397) ^ _ignoreCase.GetHashCode ();  	hashCode = (hashCode * 397) ^ _customExpression.GetHashCode ();  	// ReSharper restore NonReadonlyFieldInGetHashCode  	return hashCode;  }  
Magic Number,Com.Googlecode.Genericdao.Search,Sort,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Sort.cs,GetHashCode,The following statement contains a magic number: unchecked {  	// ReSharper disable NonReadonlyFieldInGetHashCode  	var hashCode = (_property != null ? _property.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ _desc.GetHashCode ();  	hashCode = (hashCode * 397) ^ _ignoreCase.GetHashCode ();  	hashCode = (hashCode * 397) ^ _customExpression.GetHashCode ();  	// ReSharper restore NonReadonlyFieldInGetHashCode  	return hashCode;  }  
Magic Number,Com.Googlecode.Genericdao.Search,Sort,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Sort.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ _desc.GetHashCode ();  
Magic Number,Com.Googlecode.Genericdao.Search,Sort,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Sort.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ _ignoreCase.GetHashCode ();  
Magic Number,Com.Googlecode.Genericdao.Search,Sort,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Sort.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ _customExpression.GetHashCode ();  
Magic Number,Com.Googlecode.Genericdao.Search.Nhibernate,NhibernateMetadataUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Nhibernate\NhibernateMetadataUtil.cs,IsId,The following statement contains a magic number: if (propertyPath.Equals ("id") || (propertyPath.EndsWith (".id") && Get (rootClass' propertyPath.Substring (0' propertyPath.Length - 3)).IsEntity ()))  	return true;  
Missing Default,Com.Googlecode.Genericdao.Search,BaseSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\BaseSearchProcessor.cs,GetFilterFromExampleRecursive,The following switch statement is missing a default case: switch (options.LikeMode) {  case ExampleOptions.START:  	val = val + "%";  	break;  case ExampleOptions.END:  	val = "%" + val;  	break;  case ExampleOptions.ANYWHERE:  	val = "%" + val + "%";  	break;  }  
Missing Default,Com.Googlecode.Genericdao.Search,InternalUtil,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\InternalUtil.cs,ConvertIfNeeded,The following switch statement is missing a default case: switch (Type.GetTypeCode (type)) {  case TypeCode.Boolean:  	type = typeof(Boolean);  	break;  case TypeCode.Char:  	type = typeof(Char);  	break;  case TypeCode.SByte:  case TypeCode.Byte:  	type = typeof(Byte);  	break;  case TypeCode.UInt16:  case TypeCode.Int16:  	type = typeof(Int16);  	break;  case TypeCode.UInt32:  case TypeCode.Int32:  	type = typeof(Int32);  	break;  case TypeCode.UInt64:  case TypeCode.Int64:  	type = typeof(Int64);  	break;  case TypeCode.Single:  	type = typeof(Single);  	break;  case TypeCode.Double:  	type = typeof(Double);  	break;  }  
Missing Default,Com.Googlecode.Genericdao.Search.Nhibernate,NhibernateSearchProcessor,C:\repos\zalamtech_NhibernateGenericDao\NhibernateGenericDao.Search\Nhibernate\NhibernateSearchProcessor.cs,AddResultMode,The following switch statement is missing a default case: switch (resultMode) {  case SearchConstants.RESULT_ARRAY:  	query.SetResultTransformer (ARRAY_RESULT_TRANSFORMER);  	break;  case SearchConstants.RESULT_LIST:  	query.SetResultTransformer (Transformers.ToList);  	break;  case SearchConstants.RESULT_MAP:  	var keyList = new List<string> ();  	var fieldItr = search.GetFields ();  	foreach (var field in fieldItr) {  		if (field.Key != null && !field.Key.Equals ("")) {  			keyList.Add (field.Key);  		}  		else {  			keyList.Add (field.Property);  		}  	}  	query.SetResultTransformer (new MapResultTransformer (keyList.ToArray ()));  	break;  }  
