Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,LoadSubtitlesFile,Cyclomatic complexity of the method is 21
Complex Method,Mono.Options,StringCoda,C:\repos\splintor_SubtitlesRunner\Options.cs,CreateWrappedLinesIterator,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,Option,C:\repos\splintor_SubtitlesRunner\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 9
Complex Method,Mono.Options,Option,C:\repos\splintor_SubtitlesRunner\Options.cs,AddSeparators,Cyclomatic complexity of the method is 17
Complex Method,Mono.Options,ArgumentSource,C:\repos\splintor_SubtitlesRunner\Options.cs,GetArguments,Cyclomatic complexity of the method is 10
Complex Method,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,ParseBundledValue,Cyclomatic complexity of the method is 10
Complex Method,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,WriteOptionDescriptions,Cyclomatic complexity of the method is 9
Complex Method,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,GetDescription,Cyclomatic complexity of the method is 20
Long Parameter List,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,GetOptionParts,The method has 5 parameters.
Long Parameter List,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,WriteDescription,The method has 5 parameters.
Long Statement,SubtitlesRunner,Logger,C:\repos\splintor_SubtitlesRunner\Logger.cs,Exception,The length of the statement  "	File.AppendAllText (LogFilename' Timestamp + @" ERROR: " + string.Format (s' parameters) + Environment.NewLine + exception + Environment.NewLine); " is 146.
Long Statement,SubtitlesRunner,WindowTopConverter,C:\repos\splintor_SubtitlesRunner\WindowTopConverter.cs,Convert,The length of the statement  "	var top = !double.IsNaN (windowsTop) && windowsTop > double.Epsilon && windowsTop + buttonsGrid <= windowHeight ? windowsTop : windowHeight - buttonsGrid - titlesGrid; " is 167.
Long Statement,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,ParseTime,The length of the statement  "	return parts.Count == 3 ? new TimeSpan (0' parts [0]' parts [1]' parts [2]) : new TimeSpan (0' parts [0]' parts [1]' parts [2]' parts [3]); " is 139.
Long Statement,Mono.Options,StringCoda,C:\repos\splintor_SubtitlesRunner\Options.cs,GetNextWidth,The length of the statement  "			throw new ArgumentOutOfRangeException ("widths"' string.Format ("Element must be >= {0}' was {1}."' minWidth.Length' curWidth)); " is 128.
Long Statement,Mono.Options,OptionValueCollection,C:\repos\splintor_SubtitlesRunner\Options.cs,AssertValid,The length of the statement  "		throw new OptionException (string.Format (c.OptionSet.MessageLocalizer ("Missing required value for option '{0}'.")' c.OptionName)' c.OptionName); " is 146.
Long Statement,Mono.Options,Option,C:\repos\splintor_SubtitlesRunner\Options.cs,Parse,The length of the statement  "	bool nullable = tt.IsValueType && tt.IsGenericType && !tt.IsGenericTypeDefinition && tt.GetGenericTypeDefinition () == typeof(Nullable<>); " is 138.
Long Statement,Mono.Options,Option,C:\repos\splintor_SubtitlesRunner\Options.cs,Parse,The length of the statement  "		throw new OptionException (string.Format (c.OptionSet.MessageLocalizer ("Could not convert string `{0}' to type {1} for option `{2}'.")' value' targetType.Name' c.OptionName)' c.OptionName' e); " is 193.
Long Statement,Mono.Options,Option,C:\repos\splintor_SubtitlesRunner\Options.cs,ParsePrototype,The length of the statement  "			throw new ArgumentException (string.Format ("Conflicting option types: '{0}' vs. '{1}'."' type' name [end])' "prototype"); " is 122.
Long Statement,Mono.Options,Option,C:\repos\splintor_SubtitlesRunner\Options.cs,ParsePrototype,The length of the statement  "		throw new ArgumentException (string.Format ("Cannot provide key/value separators for Options taking {0} value(s)."' count)' "prototype"); " is 137.
Long Statement,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,ParseValue,The length of the statement  "		foreach (string o in c.Option.ValueSeparators != null ? option.Split (c.Option.ValueSeparators' c.Option.MaxValueCount - c.OptionValues.Count' StringSplitOptions.None) : new string[] { " is 184.
Long Statement,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,ParseValue,The length of the statement  "		throw new OptionException (localizer (string.Format ("Error: Found {0} option values when expecting {1}."' c.OptionValues.Count' c.Option.MaxValueCount))' c.OptionName); " is 169.
Long Statement,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,ParseBool,The length of the statement  "	if (n.Length >= 1 && (n [n.Length - 1] == '+' || n [n.Length - 1] == '-') && Contains ((rn = n.Substring (0' n.Length - 1)))) { " is 127.
Complex Conditional,Mono.Options,Option,C:\repos\splintor_SubtitlesRunner\Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 && ((names.Length == 1 && this.type != OptionValueType.None) || (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length - 1] == '+' || n [n.Length - 1] == '-') && Contains ((rn = n.Substring (0' n.Length - 1)))"  is complex.
Magic Number,SubtitlesRunner,WindowTopConverter,C:\repos\splintor_SubtitlesRunner\WindowTopConverter.cs,Convert,The following statement contains a magic number: if (values == null || values.Length != 4 || !(values [0] is double))  	return null;  
Magic Number,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,MainWindowModel,The following statement contains a magic number: _progressTimer = new DispatcherTimer {  	Interval = new TimeSpan (0' 0' 0' 0' 100)  };  
Magic Number,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,LoadSubtitlesFile,The following statement contains a magic number: for (int lineCounter = 0; lineCounter < lines.Length; ++lineCounter) {  	var line = lines [lineCounter];  	switch (currentStep) {  	case ParseStep.Id:  		{  			int id;  			if (int.TryParse (line' out id)) {  				currentSubtitle.Id = id;  				currentStep = ParseStep.TimeRange;  			}  			else if (line.Trim ().Length > 0)// allow multiple empty lines as separators  			 {  				_logger.Error ("SRT File Load error at line {0}: Failed to parse id line: {1}"' lineCounter + 1' line);  			}  		}  		break;  	case ParseStep.TimeRange:  		var parts = line.Split (TimeRangeSeparator' StringSplitOptions.None);  		if (parts.Length < 2) {  			_logger.Error ("SRT File Load error at line {0}: Failed to parse time range line: {1}"' lineCounter + 1' line);  		}  		currentSubtitle.StartTime = ParseTime (parts [0]);  		currentSubtitle.EndTime = ParseTime (parts [1]);  		currentStep = ParseStep.Subtitle;  		break;  	case ParseStep.Subtitle:  		if (line.Length == 0) {  			_subtitles.Add (currentSubtitle);  			_logger.Debug ("Parsed step {0}"' currentSubtitle);  			currentSubtitle = new SubtitleInfo ();  			currentStep = ParseStep.Id;  		}  		else {  			if (currentSubtitle.SubtitleText == null) {  				currentSubtitle.SubtitleText = line;  			}  			else {  				currentSubtitle.SubtitleText = currentSubtitle.SubtitleText + Environment.NewLine + line;  			}  		}  		break;  	}  }  
Magic Number,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,LoadSubtitlesFile,The following statement contains a magic number: switch (currentStep) {  case ParseStep.Id:  	{  		int id;  		if (int.TryParse (line' out id)) {  			currentSubtitle.Id = id;  			currentStep = ParseStep.TimeRange;  		}  		else if (line.Trim ().Length > 0)// allow multiple empty lines as separators  		 {  			_logger.Error ("SRT File Load error at line {0}: Failed to parse id line: {1}"' lineCounter + 1' line);  		}  	}  	break;  case ParseStep.TimeRange:  	var parts = line.Split (TimeRangeSeparator' StringSplitOptions.None);  	if (parts.Length < 2) {  		_logger.Error ("SRT File Load error at line {0}: Failed to parse time range line: {1}"' lineCounter + 1' line);  	}  	currentSubtitle.StartTime = ParseTime (parts [0]);  	currentSubtitle.EndTime = ParseTime (parts [1]);  	currentStep = ParseStep.Subtitle;  	break;  case ParseStep.Subtitle:  	if (line.Length == 0) {  		_subtitles.Add (currentSubtitle);  		_logger.Debug ("Parsed step {0}"' currentSubtitle);  		currentSubtitle = new SubtitleInfo ();  		currentStep = ParseStep.Id;  	}  	else {  		if (currentSubtitle.SubtitleText == null) {  			currentSubtitle.SubtitleText = line;  		}  		else {  			currentSubtitle.SubtitleText = currentSubtitle.SubtitleText + Environment.NewLine + line;  		}  	}  	break;  }  
Magic Number,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,LoadSubtitlesFile,The following statement contains a magic number: if (parts.Length < 2) {  	_logger.Error ("SRT File Load error at line {0}: Failed to parse time range line: {1}"' lineCounter + 1' line);  }  
Magic Number,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,LoadSubtitlesFile,The following statement contains a magic number: MaximumProgressInTicks = HasSubtitles ? _subtitles.Max (s => s.EndTime.Ticks) : 100;  
Magic Number,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,ParseTime,The following statement contains a magic number: if (parts.Count < 3 || parts.Any (p => p < 0)) {  	_logger.Error ("Failed to parse date: "' s);  	return TimeSpan.Zero;  }  
Magic Number,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,ParseTime,The following statement contains a magic number: return parts.Count == 3 ? new TimeSpan (0' parts [0]' parts [1]' parts [2]) : new TimeSpan (0' parts [0]' parts [1]' parts [2]' parts [3]);  
Magic Number,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,ParseTime,The following statement contains a magic number: return parts.Count == 3 ? new TimeSpan (0' parts [0]' parts [1]' parts [2]) : new TimeSpan (0' parts [0]' parts [1]' parts [2]' parts [3]);  
Magic Number,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,ParseTime,The following statement contains a magic number: return parts.Count == 3 ? new TimeSpan (0' parts [0]' parts [1]' parts [2]) : new TimeSpan (0' parts [0]' parts [1]' parts [2]' parts [3]);  
Magic Number,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,ParseTime,The following statement contains a magic number: return parts.Count == 3 ? new TimeSpan (0' parts [0]' parts [1]' parts [2]) : new TimeSpan (0' parts [0]' parts [1]' parts [2]' parts [3]);  
Magic Number,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (Option p in this) {  	int written = 0;  	Category c = p as Category;  	if (c != null) {  		WriteDescription (o' p.Description' ""' 80' 80);  		continue;  	}  	if (!WriteOptionPrototype (o' p' ref written))  		continue;  	if (written < OptionWidth)  		o.Write (new string (' '' OptionWidth - written));  	else {  		o.WriteLine ();  		o.Write (new string (' '' OptionWidth));  	}  	WriteDescription (o' p.Description' new string (' '' OptionWidth + 2)' Description_FirstWidth' Description_RemWidth);  }  
Magic Number,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (Option p in this) {  	int written = 0;  	Category c = p as Category;  	if (c != null) {  		WriteDescription (o' p.Description' ""' 80' 80);  		continue;  	}  	if (!WriteOptionPrototype (o' p' ref written))  		continue;  	if (written < OptionWidth)  		o.Write (new string (' '' OptionWidth - written));  	else {  		o.WriteLine ();  		o.Write (new string (' '' OptionWidth));  	}  	WriteDescription (o' p.Description' new string (' '' OptionWidth + 2)' Description_FirstWidth' Description_RemWidth);  }  
Magic Number,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (Option p in this) {  	int written = 0;  	Category c = p as Category;  	if (c != null) {  		WriteDescription (o' p.Description' ""' 80' 80);  		continue;  	}  	if (!WriteOptionPrototype (o' p' ref written))  		continue;  	if (written < OptionWidth)  		o.Write (new string (' '' OptionWidth - written));  	else {  		o.WriteLine ();  		o.Write (new string (' '' OptionWidth));  	}  	WriteDescription (o' p.Description' new string (' '' OptionWidth + 2)' Description_FirstWidth' Description_RemWidth);  }  
Magic Number,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: if (c != null) {  	WriteDescription (o' p.Description' ""' 80' 80);  	continue;  }  
Magic Number,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: if (c != null) {  	WriteDescription (o' p.Description' ""' 80' 80);  	continue;  }  
Magic Number,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription (o' p.Description' ""' 80' 80);  
Magic Number,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription (o' p.Description' ""' 80' 80);  
Magic Number,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription (o' p.Description' new string (' '' OptionWidth + 2)' Description_FirstWidth' Description_RemWidth);  
Magic Number,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (ArgumentSource s in sources) {  	string[] names = s.GetNames ();  	if (names == null || names.Length == 0)  		continue;  	int written = 0;  	Write (o' ref written' "  ");  	Write (o' ref written' names [0]);  	for (int i = 1; i < names.Length; ++i) {  		Write (o' ref written' "' ");  		Write (o' ref written' names [i]);  	}  	if (written < OptionWidth)  		o.Write (new string (' '' OptionWidth - written));  	else {  		o.WriteLine ();  		o.Write (new string (' '' OptionWidth));  	}  	WriteDescription (o' s.Description' new string (' '' OptionWidth + 2)' Description_FirstWidth' Description_RemWidth);  }  
Magic Number,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: WriteDescription (o' s.Description' new string (' '' OptionWidth + 2)' Description_FirstWidth' Description_RemWidth);  
Missing Default,SubtitlesRunner,MainWindowModel,C:\repos\splintor_SubtitlesRunner\MainWindowModel.cs,LoadSubtitlesFile,The following switch statement is missing a default case: switch (currentStep) {  case ParseStep.Id:  	{  		int id;  		if (int.TryParse (line' out id)) {  			currentSubtitle.Id = id;  			currentStep = ParseStep.TimeRange;  		}  		else if (line.Trim ().Length > 0)// allow multiple empty lines as separators  		 {  			_logger.Error ("SRT File Load error at line {0}: Failed to parse id line: {1}"' lineCounter + 1' line);  		}  	}  	break;  case ParseStep.TimeRange:  	var parts = line.Split (TimeRangeSeparator' StringSplitOptions.None);  	if (parts.Length < 2) {  		_logger.Error ("SRT File Load error at line {0}: Failed to parse time range line: {1}"' lineCounter + 1' line);  	}  	currentSubtitle.StartTime = ParseTime (parts [0]);  	currentSubtitle.EndTime = ParseTime (parts [1]);  	currentStep = ParseStep.Subtitle;  	break;  case ParseStep.Subtitle:  	if (line.Length == 0) {  		_subtitles.Add (currentSubtitle);  		_logger.Debug ("Parsed step {0}"' currentSubtitle);  		currentSubtitle = new SubtitleInfo ();  		currentStep = ParseStep.Id;  	}  	else {  		if (currentSubtitle.SubtitleText == null) {  			currentSubtitle.SubtitleText = line;  		}  		else {  			currentSubtitle.SubtitleText = currentSubtitle.SubtitleText + Environment.NewLine + line;  		}  	}  	break;  }  
Missing Default,Mono.Options,OptionSet,C:\repos\splintor_SubtitlesRunner\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  case OptionValueType.None:  	c.OptionValues.Add (n);  	c.Option.Invoke (c);  	break;  case OptionValueType.Optional:  case OptionValueType.Required:  	ParseValue (v' c);  	break;  }  
