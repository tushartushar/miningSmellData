Implementation smell,Namespace,Class,File,Method,Description
Long Method,Spatial4n.Core.Shape,RectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RectIntersectionTestHelper.cs,TestRelateWithRectangle,The method has 112 lines of code.
Complex Method,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectIntersect,Cyclomatic complexity of the method is 9
Complex Method,Spatial4n.Core.Shape,RectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RectIntersectionTestHelper.cs,TestRelateWithRectangle,Cyclomatic complexity of the method is 19
Long Parameter List,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,NewBufLine,The method has 5 parameters. Parameters: x1' y1' x2' y2' buf
Long Parameter List,Spatial4n.Core.Shape,RoundingDistCalc,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RoundingDistCalc.cs,PointOnBearing,The method has 5 parameters. Parameters: from' distDEG' bearingDEG' ctx' reuse
Long Statement,Spatial4n.Core,PropertyDataAttribute,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\PropertyDataAttribute.cs,GetData,The length of the statement  "            // Spatial4n note: must always use PropertyType in .NET Core 1.0 if the data is in a subclass' since ReflectedType is not supported " is 131.
Long Statement,Spatial4n.Core,PropertyDataAttribute,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\PropertyDataAttribute.cs,GetData,The length of the statement  "            PropertyInfo propInfo = type.GetProperty(propertyName' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy); " is 130.
Long Statement,Spatial4n.Core,PropertyDataAttribute,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\PropertyDataAttribute.cs,GetData,The length of the statement  "				throw new ArgumentException(string.Format("Property {0} on {1} did not return IEnumerable<object[]>"' propertyName' type.FullName)); " is 132.
Long Statement,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The length of the statement  "            AssertParses("POLYGON ((100 0' 101 0' 101 1' 100 1' 100 0)' (100.2 0.2' 100.8 0.2' 100.8 0.8' 100.2 0.8' 100.2 0.2))"' polygonWithHoles); " is 137.
Long Statement,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,PolyToRectCcwRule,The length of the statement  "            NtsSpatialContext ctx = (NtsSpatialContext)new NtsSpatialContextFactory() { datelineRule = DatelineRule.CcwRect }.NewSpatialContext(); " is 134.
Long Statement,Spatial4n.Core.IO,PolygonHoleBuilder,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\PolygonBuilder.cs,EndHole,The length of the statement  "                return polygonBuilder.AddHole(polygonBuilder.ctx.GeometryFactory.CreateLinearRing(points.ToArray(/*new Coordinate[points.size()]*/))); " is 134.
Long Statement,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,OnAssertFail,The length of the statement  "                Console.WriteLine("Seed " + /*getContext().GetRunnerSeedAsString() +*/ ": Hid assertion due to ambiguous edge touch: " + s + " " + r); " is 134.
Long Statement,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestWidthGreaterThan180,The length of the statement  "            NtsGeometry ntsGeo = (NtsGeometry)ctx.ReadShapeFromWkt("POLYGON((-161 49' 0 49' 20 49' 20 89.1' 0 89.1' -161 89.2' -161 49))"); " is 127.
Long Statement,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The length of the statement  "            Assert.Equal(string.Format("Circle(Pt(x={0:0.0}'y={1:0.0})' d={2:0.0}Â° {3:0.00}km)"' 10' 20' 30' 3335.85)' ctx.MakeCircle(10' 20' 30).ToString()); " is 146.
Long Statement,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The length of the statement  "            //    Rectangle r = ctx.makeRect(cBBox.getMaxX() * 0.99' cBBox.getMaxX() + 1' c.getCenter().getY()' c.getCenter().getY()); " is 122.
Long Statement,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The length of the statement  "            AssertEquals("bad proportion logic"' SpatialRelation.INTERSECTS' ctx.MakeCircle(64' -70' 18).Relate(ctx.MakeRectangle(46' 116' -86' -62))); " is 139.
Long Statement,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The length of the statement  "            AssertEquals("Both touch pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(-90' 30' 60).Relate(ctx.MakeRectangle(-24' -16' 14' 90))); " is 133.
Long Statement,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The length of the statement  "            AssertEquals("touches pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(0' -88' 2).Relate(ctx.MakeRectangle(40' 60' -90' -86))); " is 128.
Long Statement,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The length of the statement  "            AssertEquals("wrong farthest opp corner"' SpatialRelation.INTERSECTS' ctx.MakeCircle(92' 36' 46).Relate(ctx.MakeRectangle(134' 136' 32' 80))); " is 142.
Long Statement,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The length of the statement  "            AssertEquals("edge rounding issue 2"' SpatialRelation.INTERSECTS' ctx.MakeCircle(84' -40' 136).Relate(ctx.MakeRectangle(-150' -80' 34' 84))); " is 141.
Long Statement,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The length of the statement  "            AssertEquals("edge rounding issue"' SpatialRelation.CONTAINS' ctx.MakeCircle(0' 66' 156).Relate(ctx.MakePoint(0' -90))); " is 120.
Long Statement,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The length of the statement  "            AssertEquals("nudge back circle"' SpatialRelation.CONTAINS' ctx.MakeCircle(-150' -90' 122).Relate(ctx.MakeRectangle(0' -132' 32' 32))); " is 135.
Long Statement,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The length of the statement  "            AssertEquals("wrong estimate"' SpatialRelation.DISJOINT' ctx.MakeCircle(-166' 59' KmToDeg(5226.2)).Relate(ctx.MakeRectangle(36' 66' 23' 23))); " is 142.
Long Statement,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The length of the statement  "            AssertEquals("bad CONTAINS (dateline)"' SpatialRelation.INTERSECTS' ctx.MakeCircle(56' -50' KmToDeg(12231.5)).Relate(ctx.MakeRectangle(108' 26' 39' 48))); " is 154.
Complex Conditional,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,OnAssertFail,The conditional expression  "p.X == r.MinX || p.X == r.MaxX                        || p.Y == r.MinY || p.Y == r.MaxY"  is complex.
Complex Conditional,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,AssertIntersect,The conditional expression  "aBBox.Height == 0 && bBBox.Height == 0                          && (aBBox.MaxY == 90 && bBBox.MaxY == 90                        || aBBox.MinY == -90 && bBBox.MinY == -90)"  is complex.
Complex Conditional,Spatial4n.Core.Shape,RectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RectIntersectionTestHelper.cs,TestRelateWithRectangle,The conditional expression  "i_C < MINLAPSPERCASE || i_I < MINLAPSPERCASE || i_W < MINLAPSPERCASE                  || i_D < MINLAPSPERCASE || i_bboxD < MINLAPSPERCASE"  is complex.
Empty Catch Block,Spatial4n.Core.IO,NtsWKTReaderShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWKTReaderShapeParserTest.cs,TestWrapTopologyException,The method has an empty catch block.
Empty Catch Block,Spatial4n.Core.IO,NtsWKTReaderShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWKTReaderShapeParserTest.cs,TestWrapTopologyException,The method has an empty catch block.
Empty Catch Block,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestWrapTopologyException,The method has an empty catch block.
Empty Catch Block,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestWrapTopologyException,The method has an empty catch block.
Empty Catch Block,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,AssertFails,The method has an empty catch block.
Magic Number,Spatial4n.Core.Context,SpatialContextFactoryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\context\SpatialContextFactoryTest.cs,TestCustom,The following statement contains a magic number: Assert.Equal(new Rectangle(-100' 75' 0' 200' ctx)' ctx.WorldBounds);
Magic Number,Spatial4n.Core.Context,SpatialContextFactoryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\context\SpatialContextFactoryTest.cs,TestCustom,The following statement contains a magic number: Assert.Equal(new Rectangle(-100' 75' 0' 200' ctx)' ctx.WorldBounds);
Magic Number,Spatial4n.Core.Context,SpatialContextFactoryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\context\SpatialContextFactoryTest.cs,TestCustom,The following statement contains a magic number: Assert.Equal(new Rectangle(-100' 75' 0' 200' ctx)' ctx.WorldBounds);
Magic Number,Spatial4n.Core.Context,SpatialContextFactoryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\context\SpatialContextFactoryTest.cs,TestNtsContextFactory,The following statement contains a magic number: CustomAssert.EqualWithDelta(2.0' ctx.GeometryFactory.PrecisionModel.Scale' 0.0);
Magic Number,Spatial4n.Core.Context,SpatialContextFactoryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\context\SpatialContextFactoryTest.cs,TestNtsContextFactory,The following statement contains a magic number: CustomAssert.EqualWithDelta(300' ctx.WorldBounds.MaxY' 0.0);
Magic Number,Spatial4n.Core,RandomExtensions,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\RandomExtensions.cs,nextBoolean,The following statement contains a magic number: return random.Next(100) % 2 == 0;
Magic Number,Spatial4n.Core,RandomExtensions,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\RandomExtensions.cs,nextBoolean,The following statement contains a magic number: return random.Next(100) % 2 == 0;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistances,The following statement contains a magic number: EPS = 10e-4;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestSomeDistances,The following statement contains a magic number: IPoint ctr = PLL(0' 100);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestSomeDistances,The following statement contains a magic number: CustomAssert.EqualWithDelta(11100' Dc().Distance(ctr' PLL(10' 0)) * DistanceUtils.DEG_TO_KM' 3);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestSomeDistances,The following statement contains a magic number: CustomAssert.EqualWithDelta(11100' Dc().Distance(ctr' PLL(10' 0)) * DistanceUtils.DEG_TO_KM' 3);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestSomeDistances,The following statement contains a magic number: CustomAssert.EqualWithDelta(11100' Dc().Distance(ctr' PLL(10' 0)) * DistanceUtils.DEG_TO_KM' 3);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestSomeDistances,The following statement contains a magic number: double deg = Dc().Distance(ctr' PLL(10' -160));
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestSomeDistances,The following statement contains a magic number: double deg = Dc().Distance(ctr' PLL(10' -160));
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestSomeDistances,The following statement contains a magic number: CustomAssert.EqualWithDelta(11100' deg * DistanceUtils.DEG_TO_KM' 3);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestSomeDistances,The following statement contains a magic number: CustomAssert.EqualWithDelta(11100' deg * DistanceUtils.DEG_TO_KM' 3);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestSomeDistances,The following statement contains a magic number: CustomAssert.EqualWithDelta(314.40338' Dc().Distance(PLL(1' 2)' PLL(3' 4)) * DistanceUtils.DEG_TO_KM' EPS);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestSomeDistances,The following statement contains a magic number: CustomAssert.EqualWithDelta(314.40338' Dc().Distance(PLL(1' 2)' PLL(3' 4)) * DistanceUtils.DEG_TO_KM' EPS);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestSomeDistances,The following statement contains a magic number: CustomAssert.EqualWithDelta(314.40338' Dc().Distance(PLL(1' 2)' PLL(3' 4)) * DistanceUtils.DEG_TO_KM' EPS);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestSomeDistances,The following statement contains a magic number: CustomAssert.EqualWithDelta(314.40338' Dc().Distance(PLL(1' 2)' PLL(3' 4)) * DistanceUtils.DEG_TO_KM' EPS);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: double d = 6894.1 * DistanceUtils.KM_TO_DEG;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: IPoint pCtr = PLL(-20' 84);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: IPoint pCtr = PLL(-20' 84);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: IPoint pTgt = PLL(-42' 15);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: IPoint pTgt = PLL(-42' 15);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CustomAssert.EqualWithDelta(/*"0 dist' horiz line"'*/                  -45' Dc().CalcBoxByDistFromPt_yHorizAxisDEG(ctx.MakePoint(-180' -45)' 0' ctx)' 0);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CustomAssert.EqualWithDelta(/*"0 dist' horiz line"'*/                  -45' Dc().CalcBoxByDistFromPt_yHorizAxisDEG(ctx.MakePoint(-180' -45)' 0' ctx)' 0);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CustomAssert.EqualWithDelta(/*"0 dist' horiz line"'*/                  -45' Dc().CalcBoxByDistFromPt_yHorizAxisDEG(ctx.MakePoint(-180' -45)' 0' ctx)' 0);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: double MAXDIST = (double)180 * DistanceUtils.DEG_TO_KM;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CheckBBox(ctx.MakePoint(0' 0)' MAXDIST * 0.999999);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CheckBBox(ctx.MakePoint(0' 0)' 0.000001);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CheckBBox(ctx.MakePoint(0' 90)' 0.000001);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CheckBBox(ctx.MakePoint(0' 90)' 0.000001);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CheckBBox(ctx.MakePoint(-32.7' -5.42)' 9829);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CheckBBox(ctx.MakePoint(-32.7' -5.42)' 9829);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CheckBBox(ctx.MakePoint(-32.7' -5.42)' 9829);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CheckBBox(ctx.MakePoint(0' 90 - 20)' (double)20 * DistanceUtils.DEG_TO_KM);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CheckBBox(ctx.MakePoint(0' 90 - 20)' (double)20 * DistanceUtils.DEG_TO_KM);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CheckBBox(ctx.MakePoint(0' 90 - 20)' (double)20 * DistanceUtils.DEG_TO_KM);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: double d = 0.010;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CheckBBox(ctx.MakePoint(0' 90 - (d + 0.001) * DistanceUtils.KM_TO_DEG)' d);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: CheckBBox(ctx.MakePoint(0' 90 - (d + 0.001) * DistanceUtils.KM_TO_DEG)' d);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: double lat = -90 + random.NextDouble() * 180;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: double lat = -90 + random.NextDouble() * 180;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: double lon = -180 + random.NextDouble() * 360;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: double lon = -180 + random.NextDouble() * 360;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestCalcBoxByDistFromPt,The following statement contains a magic number: T < 100
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,CheckBBox,The following statement contains a magic number: double deg = Dc().Distance(ctr' r.MinX' r.MaxY == 90 ? 90 : -90);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,CheckBBox,The following statement contains a magic number: double deg = Dc().Distance(ctr' r.MinX' r.MaxY == 90 ? 90 : -90);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,CheckBBox,The following statement contains a magic number: double deg = Dc().Distance(ctr' r.MinX' r.MaxY == 90 ? 90 : -90);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,CheckBBox,The following statement contains a magic number: r.Width >= 180
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,CheckBBox,The following statement contains a magic number: r.MaxY == 90
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,CheckBBox,The following statement contains a magic number: r.MinY == -90
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,FindClosestPointOnVertToPoint,The following statement contains a magic number: double midLat = (highLat - lowLat) / 2 + lowLat;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,FindClosestPointOnVertToPoint,The following statement contains a magic number: double newMid = bottom ? (midLat - lowLat) / 2 + lowLat : (highLat - midLat) / 2 + midLat;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,FindClosestPointOnVertToPoint,The following statement contains a magic number: double newMid = bottom ? (midLat - lowLat) / 2 + lowLat : (highLat - midLat) / 2 + midLat;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,FindClosestPointOnVertToPoint,The following statement contains a magic number: L < 100 && (highLat - lowLat > 0.001 || L < 20)
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,FindClosestPointOnVertToPoint,The following statement contains a magic number: L < 100 && (highLat - lowLat > 0.001 || L < 20)
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,FindClosestPointOnVertToPoint,The following statement contains a magic number: L < 100 && (highLat - lowLat > 0.001 || L < 20)
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistCalcPointOnBearing_Cartesian,The following statement contains a magic number: EPS = 10e-6;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistCalcPointOnBearing_Cartesian,The following statement contains a magic number: TestDistCalcPointOnBearing(random.Next(100));
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistCalcPointOnBearing_Cartesian,The following statement contains a magic number: i < 1000
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistCalcPointOnBearing_Geo,The following statement contains a magic number: double maxDistKm = (double)180 * DistanceUtils.DEG_TO_KM;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistCalcPointOnBearing_Geo,The following statement contains a magic number: EPS = (dist < maxDistKm * 0.75 ? 10e-6 : 10e-3);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistCalcPointOnBearing_Geo,The following statement contains a magic number: EPS = (dist < maxDistKm * 0.75 ? 10e-6 : 10e-3);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistCalcPointOnBearing_Geo,The following statement contains a magic number: EPS = (dist < maxDistKm * 0.75 ? 10e-6 : 10e-3);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistCalcPointOnBearing_Geo,The following statement contains a magic number: i < 1000
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistCalcPointOnBearing,The following statement contains a magic number: IPoint c = ctx.MakePoint(                      DistanceUtils.NormLonDEG(random.Next(359 + 1))'                      random.Next(-90' 90 + 1));
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistCalcPointOnBearing,The following statement contains a magic number: IPoint c = ctx.MakePoint(                      DistanceUtils.NormLonDEG(random.Next(359 + 1))'                      random.Next(-90' 90 + 1));
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistCalcPointOnBearing,The following statement contains a magic number: IPoint c = ctx.MakePoint(                      DistanceUtils.NormLonDEG(random.Next(359 + 1))'                      random.Next(-90' 90 + 1));
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestDistCalcPointOnBearing,The following statement contains a magic number: angDEG < 360
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: var lats = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-90' -90}'                  new double[] {90' 90}'                  new double[] {0' 0}'                  new double[] {-100' -80}'                  new double[] {-90 - 180' 90}'                  new double[] {-90 - 360' -90}'                  new double[] {90 + 180' -90}'                  new double[] {90 + 360' 90}'                  new double[] {-12 + 180' 12}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: Assert.True( /*i + " " + d'*/ d >= -90 && d <= 90);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: Assert.True( /*i + " " + d'*/ d >= -90 && d <= 90);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLat,The following statement contains a magic number: i < 1000
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: var lons = new double[][]              {                  new double[] {1.23' 1.23}'                  //1.23 might become 1.2299999 after some math and we want to ensure that doesn't happen                  new double[] {-180' -180}'                  new double[] {180' +180}'                  new double[] {0' 0}'                  new double[] {-190' 170}'                  new double[] {181' -179}'                  new double[] {-180 - 360' -180}'                  new double[] {-180 - 720' -180}'                  new double[] {180 + 360' +180}'                  new double[] {180 + 720' +180}              };
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: Assert.True(d >= -180 && d <= 180' i + " " + d);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: Assert.True(d >= -180 && d <= 180' i + " " + d);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestNormLon,The following statement contains a magic number: i < 1000
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,AssertDistanceConversion,The following statement contains a magic number: AssertDistanceConversionImpl(500);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,AssertDistanceConversionImpl,The following statement contains a magic number: CustomAssert.EqualWithDelta(                  DistanceUtils.PointOnBearingRAD(0' 0' DistanceUtils.Dist2Radians(dist' radius)'                      DistanceUtils.DEG_90_AS_RADS' ctx' new Point(0' 0' ctx)).X'                  distRAD' 10e-5);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: double earthArea = 4 * Math.PI * radius * radius;
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: ICircle c = ctx.MakeCircle(random.Next(-180' 180)' random.Next(-90' 90)'                                        180);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: ICircle c = ctx.MakeCircle(random.Next(-180' 180)' random.Next(-90' 90)'                                        180);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: ICircle c = ctx.MakeCircle(random.Next(-180' 180)' random.Next(-90' 90)'                                        180);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: ICircle c = ctx.MakeCircle(random.Next(-180' 180)' random.Next(-90' 90)'                                        180);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: ICircle c = ctx.MakeCircle(random.Next(-180' 180)' random.Next(-90' 90)'                                        180);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: ICircle cHalf = ctx.MakeCircle(c.Center' 90);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: CustomAssert.EqualWithDelta(earthArea / 2' cHalf.GetArea(ctx)' 1.0);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: ICircle c2 = ctx.MakeCircle(c.Center' 30);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: ICircle c3 = ctx.MakeCircle(c.Center.X' 20' 30);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: ICircle c3 = ctx.MakeCircle(c.Center.X' 20' 30);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: CustomAssert.EqualWithDelta(c2.GetArea(ctx)' c3.GetArea(ctx)' 0.01);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: ICircle c3Opposite = ctx.MakeCircle(c.Center.X' -20' 30);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: ICircle c3Opposite = ctx.MakeCircle(c.Center.X' -20' 30);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: CustomAssert.EqualWithDelta(c3.GetArea(ctx)' c3Opposite.GetArea(ctx)' 0.01);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: CustomAssert.EqualWithDelta(c3.BoundingBox.GetArea(ctx)' c3Opposite.BoundingBox.GetArea(ctx)' 0.01);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: Assert.True(smallDelta > 0 && smallDelta < 0.0001);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: Assert.True(smallDelta > 0 && smallDelta < 0.0001);
Magic Number,Spatial4n.Core.Distance,TestDistances,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\distance\TestDistances.cs,TestArea,The following statement contains a magic number: Assert.True(areaRatio > 1 && areaRatio < 1.1);
Magic Number,Spatial4n.Core.IO,BinaryCodecTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\BinaryCodecTest.cs,RandomShape,The following statement contains a magic number: switch (random.Next(2))              {//inclusive                  case 0: return Wkt("POINT(-10 80.3)");                  case 1: return Wkt("ENVELOPE(-10' 180' 42.3' 0)");                  case 2: return Wkt("BUFFER(POINT(-10 30)' 5.2)");                  default: throw new Exception();              }
Magic Number,Spatial4n.Core.IO,BinaryCodecTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\BinaryCodecTest.cs,RandomShape,The following statement contains a magic number: switch (random.Next(2))              {//inclusive                  case 0: return Wkt("POINT(-10 80.3)");                  case 1: return Wkt("ENVELOPE(-10' 180' 42.3' 0)");                  case 2: return Wkt("BUFFER(POINT(-10 30)' 5.2)");                  default: throw new Exception();              }
Magic Number,Spatial4n.Core.IO,NtsBinaryCodecTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsBinaryCodecTest.cs,TestPoly,The following statement contains a magic number: ctx.MakeShape(RandomGeometry(random.Next(3' 20))' false' false);
Magic Number,Spatial4n.Core.IO,NtsBinaryCodecTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsBinaryCodecTest.cs,TestPoly,The following statement contains a magic number: ctx.MakeShape(RandomGeometry(random.Next(3' 20))' false' false);
Magic Number,Spatial4n.Core.IO,NtsBinaryCodecTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsBinaryCodecTest.cs,RandomShape,The following statement contains a magic number: return ctx.MakeShape(RandomGeometry(random.Next(3' 20))' false' false);
Magic Number,Spatial4n.Core.IO,NtsBinaryCodecTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsBinaryCodecTest.cs,RandomShape,The following statement contains a magic number: return ctx.MakeShape(RandomGeometry(random.Next(3' 20))' false' false);
Magic Number,Spatial4n.Core.IO,NtsBinaryCodecTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsBinaryCodecTest.cs,RandomShape,The following statement contains a magic number: random.Next(3) == 0
Magic Number,Spatial4n.Core.IO,NtsBinaryCodecTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsBinaryCodecTest.cs,RandomGeometry,The following statement contains a magic number: gsf.Size = (180);
Magic Number,Spatial4n.Core.IO,NtsWKTReaderShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWKTReaderShapeParserTest.cs,WktGeoPt,The following statement contains a magic number: Assert.Equal(ctx.MakePoint(-160' 30)' s);
Magic Number,Spatial4n.Core.IO,NtsWKTReaderShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWKTReaderShapeParserTest.cs,WktGeoPt,The following statement contains a magic number: Assert.Equal(ctx.MakePoint(-160' 30)' s);
Magic Number,Spatial4n.Core.IO,NtsWKTReaderShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWKTReaderShapeParserTest.cs,WktGeoRect,The following statement contains a magic number: IRectangle expectedNoDL = ctx.MakeRectangle(-170' 160' 15' 30);
Magic Number,Spatial4n.Core.IO,NtsWKTReaderShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWKTReaderShapeParserTest.cs,WktGeoRect,The following statement contains a magic number: IRectangle expectedNoDL = ctx.MakeRectangle(-170' 160' 15' 30);
Magic Number,Spatial4n.Core.IO,NtsWKTReaderShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWKTReaderShapeParserTest.cs,WktGeoRect,The following statement contains a magic number: IRectangle expectedNoDL = ctx.MakeRectangle(-170' 160' 15' 30);
Magic Number,Spatial4n.Core.IO,NtsWKTReaderShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWKTReaderShapeParserTest.cs,WktGeoRect,The following statement contains a magic number: IRectangle expectedNoDL = ctx.MakeRectangle(-170' 160' 15' 30);
Magic Number,Spatial4n.Core.IO,NtsWKTReaderShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWKTReaderShapeParserTest.cs,WktGeoRect,The following statement contains a magic number: IRectangle expectedYesDL = ctx.MakeRectangle(160' -170' 15' 30);
Magic Number,Spatial4n.Core.IO,NtsWKTReaderShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWKTReaderShapeParserTest.cs,WktGeoRect,The following statement contains a magic number: IRectangle expectedYesDL = ctx.MakeRectangle(160' -170' 15' 30);
Magic Number,Spatial4n.Core.IO,NtsWKTReaderShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWKTReaderShapeParserTest.cs,WktGeoRect,The following statement contains a magic number: IRectangle expectedYesDL = ctx.MakeRectangle(160' -170' 15' 30);
Magic Number,Spatial4n.Core.IO,NtsWKTReaderShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWKTReaderShapeParserTest.cs,WktGeoRect,The following statement contains a magic number: IRectangle expectedYesDL = ctx.MakeRectangle(160' -170' 15' 30);
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonNoHoles = new PolygonBuilder(ctx)          .Point(100' 0)          .Point(101' 0)          .Point(101' 1)          .Point(100' 2)          .Point(100' 0)          .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonNoHoles = new PolygonBuilder(ctx)          .Point(100' 0)          .Point(101' 0)          .Point(101' 1)          .Point(100' 2)          .Point(100' 0)          .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonNoHoles = new PolygonBuilder(ctx)          .Point(100' 0)          .Point(101' 0)          .Point(101' 1)          .Point(100' 2)          .Point(100' 0)          .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonNoHoles = new PolygonBuilder(ctx)          .Point(100' 0)          .Point(101' 0)          .Point(101' 1)          .Point(100' 2)          .Point(100' 0)          .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonNoHoles = new PolygonBuilder(ctx)          .Point(100' 0)          .Point(101' 0)          .Point(101' 1)          .Point(100' 2)          .Point(100' 0)          .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonNoHoles = new PolygonBuilder(ctx)          .Point(100' 0)          .Point(101' 0)          .Point(101' 1)          .Point(100' 2)          .Point(100' 0)          .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParsePolygon,The following statement contains a magic number: IShape polygonWithHoles = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)                  .Point(101' 1)                  .Point(100' 1)                  .Point(100' 0)                  .NewHole()                  .Point(100.2' 0.2)                  .Point(100.8' 0.2)                  .Point(100.8' 0.8)                  .Point(100.2' 0.8)                  .Point(100.2' 0.2)                  .EndHole()                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestPolyToRect,The following statement contains a magic number: AssertParses("POLYGON((0 5' 10 5' 10 20' 0 20' 0 5))"' ctx.MakeRectangle(0' 10' 5' 20));
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestPolyToRect,The following statement contains a magic number: AssertParses("POLYGON((0 5' 10 5' 10 20' 0 20' 0 5))"' ctx.MakeRectangle(0' 10' 5' 20));
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestPolyToRect,The following statement contains a magic number: AssertParses("POLYGON((0 5' 10 5' 10 20' 0 20' 0 5))"' ctx.MakeRectangle(0' 10' 5' 20));
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,PolyToRect180Rule,The following statement contains a magic number: IRectangle expected = ctx.MakeRectangle(160' -170' 0' 10);
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,PolyToRect180Rule,The following statement contains a magic number: IRectangle expected = ctx.MakeRectangle(160' -170' 0' 10);
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,PolyToRect180Rule,The following statement contains a magic number: IRectangle expected = ctx.MakeRectangle(160' -170' 0' 10);
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,PolyToRectCcwRule,The following statement contains a magic number: Assert.Equal(ctx.ReadShapeFromWkt("POLYGON((160 0' -170 0' -170 10' 160 10' 160 0))")'          ctx.MakeRectangle(160' -170' 0' 10));
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,PolyToRectCcwRule,The following statement contains a magic number: Assert.Equal(ctx.ReadShapeFromWkt("POLYGON((160 0' -170 0' -170 10' 160 10' 160 0))")'          ctx.MakeRectangle(160' -170' 0' 10));
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,PolyToRectCcwRule,The following statement contains a magic number: Assert.Equal(ctx.ReadShapeFromWkt("POLYGON((160 0' -170 0' -170 10' 160 10' 160 0))")'          ctx.MakeRectangle(160' -170' 0' 10));
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,PolyToRectCcwRule,The following statement contains a magic number: Assert.Equal(ctx.ReadShapeFromWkt("POLYGON((160 10' -170 10' -170 0' 160 0' 160 10))")'                  ctx.MakeRectangle(-170' 160' 0' 10));
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,PolyToRectCcwRule,The following statement contains a magic number: Assert.Equal(ctx.ReadShapeFromWkt("POLYGON((160 10' -170 10' -170 0' 160 0' 160 10))")'                  ctx.MakeRectangle(-170' 160' 0' 10));
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,PolyToRectCcwRule,The following statement contains a magic number: Assert.Equal(ctx.ReadShapeFromWkt("POLYGON((160 10' -170 10' -170 0' 160 0' 160 10))")'                  ctx.MakeRectangle(-170' 160' 0' 10));
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParseMultiPolygon,The following statement contains a magic number: IShape p1 = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)//101                  .Point(101' 2)//101                  .Point(100' 1)                  .Point(100' 0)                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParseMultiPolygon,The following statement contains a magic number: IShape p1 = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)//101                  .Point(101' 2)//101                  .Point(100' 1)                  .Point(100' 0)                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParseMultiPolygon,The following statement contains a magic number: IShape p1 = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)//101                  .Point(101' 2)//101                  .Point(100' 1)                  .Point(100' 0)                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParseMultiPolygon,The following statement contains a magic number: IShape p1 = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)//101                  .Point(101' 2)//101                  .Point(100' 1)                  .Point(100' 0)                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParseMultiPolygon,The following statement contains a magic number: IShape p1 = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)//101                  .Point(101' 2)//101                  .Point(100' 1)                  .Point(100' 0)                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParseMultiPolygon,The following statement contains a magic number: IShape p1 = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(101' 0)//101                  .Point(101' 2)//101                  .Point(100' 1)                  .Point(100' 0)                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParseMultiPolygon,The following statement contains a magic number: IShape p2 = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(102' 0)//102                  .Point(102' 2)//102                  .Point(100' 1)                  .Point(100' 0)                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParseMultiPolygon,The following statement contains a magic number: IShape p2 = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(102' 0)//102                  .Point(102' 2)//102                  .Point(100' 1)                  .Point(100' 0)                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParseMultiPolygon,The following statement contains a magic number: IShape p2 = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(102' 0)//102                  .Point(102' 2)//102                  .Point(100' 1)                  .Point(100' 0)                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParseMultiPolygon,The following statement contains a magic number: IShape p2 = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(102' 0)//102                  .Point(102' 2)//102                  .Point(100' 1)                  .Point(100' 0)                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParseMultiPolygon,The following statement contains a magic number: IShape p2 = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(102' 0)//102                  .Point(102' 2)//102                  .Point(100' 1)                  .Point(100' 0)                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestParseMultiPolygon,The following statement contains a magic number: IShape p2 = new PolygonBuilder(ctx)                  .Point(100' 0)                  .Point(102' 0)//102                  .Point(102' 2)//102                  .Point(100' 1)                  .Point(100' 0)                  .Build();
Magic Number,Spatial4n.Core.IO,NtsWktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\NtsWktShapeParserTest.cs,TestLineStringDateline,The following statement contains a magic number: CustomAssert.EqualWithDelta(30' s.BoundingBox.Width' 0.0);
Magic Number,Spatial4n.Core.IO,ShapeReadWriterTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\ShapeReadWriterTest.cs,TestPoint,The following statement contains a magic number: Assert.Equal(ctx.MakePoint(10' 20)' s);
Magic Number,Spatial4n.Core.IO,ShapeReadWriterTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\ShapeReadWriterTest.cs,TestPoint,The following statement contains a magic number: Assert.Equal(ctx.MakePoint(10' 20)' s);
Magic Number,Spatial4n.Core.IO,ShapeReadWriterTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\ShapeReadWriterTest.cs,TestRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(-10' 10' -20' 20)' s);
Magic Number,Spatial4n.Core.IO,ShapeReadWriterTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\ShapeReadWriterTest.cs,TestRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(-10' 10' -20' 20)' s);
Magic Number,Spatial4n.Core.IO,ShapeReadWriterTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\ShapeReadWriterTest.cs,TestRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(-10' 10' -20' 20)' s);
Magic Number,Spatial4n.Core.IO,ShapeReadWriterTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\ShapeReadWriterTest.cs,TestRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(-10' 10' -20' 20)' s);
Magic Number,Spatial4n.Core.IO,ShapeReadWriterTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\ShapeReadWriterTest.cs,TestCircle,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(1.23' 4.56' 7.89)' s);
Magic Number,Spatial4n.Core.IO,ShapeReadWriterTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\ShapeReadWriterTest.cs,TestCircle,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(1.23' 4.56' 7.89)' s);
Magic Number,Spatial4n.Core.IO,ShapeReadWriterTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\ShapeReadWriterTest.cs,TestCircle,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(1.23' 4.56' 7.89)' s);
Magic Number,Spatial4n.Core.IO,ShapeReadWriterTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\ShapeReadWriterTest.cs,TestCircleWithCriticalCulture,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(1.23' 4.56' 7.89)' s);
Magic Number,Spatial4n.Core.IO,ShapeReadWriterTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\ShapeReadWriterTest.cs,TestCircleWithCriticalCulture,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(1.23' 4.56' 7.89)' s);
Magic Number,Spatial4n.Core.IO,ShapeReadWriterTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\ShapeReadWriterTest.cs,TestCircleWithCriticalCulture,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(1.23' 4.56' 7.89)' s);
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT (100 90)"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT (100 90)"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses(" POINT (100 90) "' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses(" POINT (100 90) "' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("point (100 90)"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("point (100 90)"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT ( 100 90 )"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT ( 100 90 )"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT(100 90)"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT(100 90)"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT (-45 90 )"' ctx.MakePoint(-45' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT (-45 90 )"' ctx.MakePoint(-45' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: IPoint expected = ctx.MakePoint(-45.3' 80.4);
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: IPoint expected = ctx.MakePoint(-45.3' 80.4);
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT (100 90 2)"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT (100 90 2)"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT (100 90 2 3)"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT (100 90 2 3)"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT ZM ( 100 90 )"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT ZM ( 100 90 )"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT ZM ( 100 90 -3 -4)"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParsePoint,The following statement contains a magic number: AssertParses("POINT ZM ( 100 90 -3 -4)"' ctx.MakePoint(100' 90));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseMultiPoint,The following statement contains a magic number: IShape s1 = ctx.MakeCollection(new IShape[] { ctx.MakePoint(10' 40) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseMultiPoint,The following statement contains a magic number: IShape s1 = ctx.MakeCollection(new IShape[] { ctx.MakePoint(10' 40) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseMultiPoint,The following statement contains a magic number: IShape s4 = ctx.MakeCollection(new IShape[] {                  ctx.MakePoint(10' 40)' ctx.MakePoint(40' 30)'                  ctx.MakePoint(20' 20)' ctx.MakePoint(30' 10) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseMultiPoint,The following statement contains a magic number: IShape s4 = ctx.MakeCollection(new IShape[] {                  ctx.MakePoint(10' 40)' ctx.MakePoint(40' 30)'                  ctx.MakePoint(20' 20)' ctx.MakePoint(30' 10) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseMultiPoint,The following statement contains a magic number: IShape s4 = ctx.MakeCollection(new IShape[] {                  ctx.MakePoint(10' 40)' ctx.MakePoint(40' 30)'                  ctx.MakePoint(20' 20)' ctx.MakePoint(30' 10) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseMultiPoint,The following statement contains a magic number: IShape s4 = ctx.MakeCollection(new IShape[] {                  ctx.MakePoint(10' 40)' ctx.MakePoint(40' 30)'                  ctx.MakePoint(20' 20)' ctx.MakePoint(30' 10) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseMultiPoint,The following statement contains a magic number: IShape s4 = ctx.MakeCollection(new IShape[] {                  ctx.MakePoint(10' 40)' ctx.MakePoint(40' 30)'                  ctx.MakePoint(20' 20)' ctx.MakePoint(30' 10) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseMultiPoint,The following statement contains a magic number: IShape s4 = ctx.MakeCollection(new IShape[] {                  ctx.MakePoint(10' 40)' ctx.MakePoint(40' 30)'                  ctx.MakePoint(20' 20)' ctx.MakePoint(30' 10) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseMultiPoint,The following statement contains a magic number: IShape s4 = ctx.MakeCollection(new IShape[] {                  ctx.MakePoint(10' 40)' ctx.MakePoint(40' 30)'                  ctx.MakePoint(20' 20)' ctx.MakePoint(30' 10) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseMultiPoint,The following statement contains a magic number: IShape s4 = ctx.MakeCollection(new IShape[] {                  ctx.MakePoint(10' 40)' ctx.MakePoint(40' 30)'                  ctx.MakePoint(20' 20)' ctx.MakePoint(30' 10) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseEnvelope,The following statement contains a magic number: IRectangle r = ctx.MakeRectangle(ctx.MakePoint(10' 25)' ctx.MakePoint(30' 45));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseEnvelope,The following statement contains a magic number: IRectangle r = ctx.MakeRectangle(ctx.MakePoint(10' 25)' ctx.MakePoint(30' 45));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseEnvelope,The following statement contains a magic number: IRectangle r = ctx.MakeRectangle(ctx.MakePoint(10' 25)' ctx.MakePoint(30' 45));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestParseEnvelope,The following statement contains a magic number: IRectangle r = ctx.MakeRectangle(ctx.MakePoint(10' 25)' ctx.MakePoint(30' 45));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestLineStringShape,The following statement contains a magic number: IPoint p1 = ctx.MakePoint(1' 10);
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestLineStringShape,The following statement contains a magic number: IPoint p2 = ctx.MakePoint(2' 20);
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestLineStringShape,The following statement contains a magic number: IPoint p2 = ctx.MakePoint(2' 20);
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestLineStringShape,The following statement contains a magic number: IPoint p3 = ctx.MakePoint(3' 30);
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestLineStringShape,The following statement contains a magic number: IPoint p3 = ctx.MakePoint(3' 30);
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestMultiLineStringShape,The following statement contains a magic number: IShape s = ctx.MakeCollection(new IShape[] {                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(10' 10)' ctx.MakePoint(20' 20)' ctx.MakePoint(10' 40) })'                  ctx.MakeLineString(new IPoint[] {                      ctx.MakePoint(40' 40)' ctx.MakePoint(30' 30)' ctx.MakePoint(40' 20)' ctx.MakePoint(30' 10) }) }              );
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestGeomCollection,The following statement contains a magic number: IShape s1 = ctx.MakeCollection(new IShape[] { ctx.MakePoint(1' 2) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestGeomCollection,The following statement contains a magic number: IShape s2 = ctx.MakeCollection(new IShape[] {                  ctx.MakeRectangle(1' 2' 3' 4)'                  ctx.MakePoint(-1' -2) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestGeomCollection,The following statement contains a magic number: IShape s2 = ctx.MakeCollection(new IShape[] {                  ctx.MakeRectangle(1' 2' 3' 4)'                  ctx.MakePoint(-1' -2) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestGeomCollection,The following statement contains a magic number: IShape s2 = ctx.MakeCollection(new IShape[] {                  ctx.MakeRectangle(1' 2' 3' 4)'                  ctx.MakePoint(-1' -2) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestGeomCollection,The following statement contains a magic number: IShape s2 = ctx.MakeCollection(new IShape[] {                  ctx.MakeRectangle(1' 2' 3' 4)'                  ctx.MakePoint(-1' -2) });
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestBuffer,The following statement contains a magic number: AssertParses("BUFFER(POINT(1 2)' 3)"' ctx.MakePoint(1' 2).GetBuffered(3' ctx));
Magic Number,Spatial4n.Core.IO,WktShapeParserTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\io\WktShapeParserTest.cs,TestBuffer,The following statement contains a magic number: AssertParses("BUFFER(POINT(1 2)' 3)"' ctx.MakePoint(1' 2).GetBuffered(3' ctx));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectangle,The following statement contains a magic number: CustomAssert.EqualWithDelta(4 * Math.PI * earthRadius * earthRadius' r.GetArea(ctx)' 1.0);
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectangle,The following statement contains a magic number: ctx.IsGeo && r.Width == 360 && r.Height == 180
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectangle,The following statement contains a magic number: ctx.IsGeo && r.Width == 360 && r.Height == 180
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectIntersect,The following statement contains a magic number: const double INCR = 45;
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectIntersect,The following statement contains a magic number: const double Y = 20;
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectIntersect,The following statement contains a magic number: AssertRelation(null' SpatialRelation.DISJOINT' r' ctx.MakePoint(                              NormX(left2)' random.Next(-90' 90)));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectIntersect,The following statement contains a magic number: AssertRelation(null' SpatialRelation.DISJOINT' r' ctx.MakePoint(                              NormX(left2)' random.Next(-90' 90)));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectIntersect,The following statement contains a magic number: right2 - left < 360
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectIntersect,The following statement contains a magic number: left2 - left < 360
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectIntersect,The following statement contains a magic number: right2 - left < 360
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectIntersect,The following statement contains a magic number: right - left <= 360
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestRectIntersect,The following statement contains a magic number: left < 180
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestCircle,The following statement contains a magic number: AssertEqualsRatio(msg' bbox.Height' dist * 2);
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestCircle,The following statement contains a magic number: AssertEqualsRatio(msg' bbox.Width' dist * 2);
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestMakeRect,The following statement contains a magic number: Assert.Equal(new Rectangle(1' 3' 2' 4' ctx)'                  new Rectangle(new Point(1' 2' ctx)' new Point(3' 4' ctx)' ctx));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestMakeRect,The following statement contains a magic number: Assert.Equal(new Rectangle(1' 3' 2' 4' ctx)'                  new Rectangle(new Point(1' 2' ctx)' new Point(3' 4' ctx)' ctx));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestMakeRect,The following statement contains a magic number: Assert.Equal(new Rectangle(1' 3' 2' 4' ctx)'                  new Rectangle(new Point(1' 2' ctx)' new Point(3' 4' ctx)' ctx));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestMakeRect,The following statement contains a magic number: Assert.Equal(new Rectangle(1' 3' 2' 4' ctx)'                  new Rectangle(new Point(1' 2' ctx)' new Point(3' 4' ctx)' ctx));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestMakeRect,The following statement contains a magic number: Assert.Equal(new Rectangle(1' 3' 2' 4' ctx)'                  new Rectangle(new Point(1' 2' ctx)' new Point(3' 4' ctx)' ctx));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestMakeRect,The following statement contains a magic number: Assert.Equal(new Rectangle(1' 3' 2' 4' ctx)'                  new Rectangle(new Point(1' 2' ctx)' new Point(3' 4' ctx)' ctx));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestMakeRect,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(1' 3' 2' 4)'                  ctx.MakeRectangle(ctx.MakePoint(1' 2)' ctx.MakePoint(3' 4)));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestMakeRect,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(1' 3' 2' 4)'                  ctx.MakeRectangle(ctx.MakePoint(1' 2)' ctx.MakePoint(3' 4)));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestMakeRect,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(1' 3' 2' 4)'                  ctx.MakeRectangle(ctx.MakePoint(1' 2)' ctx.MakePoint(3' 4)));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestMakeRect,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(1' 3' 2' 4)'                  ctx.MakeRectangle(ctx.MakePoint(1' 2)' ctx.MakePoint(3' 4)));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestMakeRect,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(1' 3' 2' 4)'                  ctx.MakeRectangle(ctx.MakePoint(1' 2)' ctx.MakePoint(3' 4)));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestMakeRect,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(1' 3' 2' 4)'                  ctx.MakeRectangle(ctx.MakePoint(1' 2)' ctx.MakePoint(3' 4)));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestEmptiness,The following statement contains a magic number: AssertRelation("EMPTY"' SpatialRelation.DISJOINT' emptyShape' RandomRectangle(10));
Magic Number,Spatial4n.Core.Shape,AbstractTestShapes,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,TestEmptiness,The following statement contains a magic number: Assert.True(emptyShape.GetBuffered(random.Next(4 + 1)' ctx).IsEmpty);
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,GenerateRandomShape,The following statement contains a magic number: double cX = RandomIntBetweenDivisible(-180' 179);
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,GenerateRandomShape,The following statement contains a magic number: double cX = RandomIntBetweenDivisible(-180' 179);
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,GenerateRandomShape,The following statement contains a magic number: double cY = RandomIntBetweenDivisible(-90' 90);
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,GenerateRandomShape,The following statement contains a magic number: double cY = RandomIntBetweenDivisible(-90' 90);
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,GenerateRandomShape,The following statement contains a magic number: double cR_dist = RandomIntBetweenDivisible(0' 180);
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,OnAssertFail,The following statement contains a magic number: radius == 180
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,OnAssertFail,The following statement contains a magic number: double eps = 0.0000001;
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,GenerateRandomShape,The following statement contains a magic number: int numPoints = 2 + random.Next(3 + 1);
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,GenerateRandomShape,The following statement contains a magic number: int numPoints = 2 + random.Next(3 + 1);
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,GenerateRandomShape,The following statement contains a magic number: double buf = Math.Abs(RandomGaussian()) * maxBuf / 4;
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,GenerateRandomShape,The following statement contains a magic number: int r4 = outerInstance.random.Next(3 + 1);
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,GenerateRandomShape,The following statement contains a magic number: IPoint pB = corners[(r4 + 2) % 4];
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,GenerateRandomShape,The following statement contains a magic number: IPoint pB = corners[(r4 + 2) % 4];
Magic Number,Spatial4n.Core.Shape,RectIntersectionAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\AbstractTestShapes.cs,GenerateRandomShape,The following statement contains a magic number: double buf = Math.Abs(RandomGaussian()) * maxBuf / 4;
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(7' -4)' ctx.MakePoint(3' 2)'                  ctx.MakePoint(5' 6)' 3.88290);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(7' -4)' ctx.MakePoint(3' 2)'                  ctx.MakePoint(5' 6)' 3.88290);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(7' -4)' ctx.MakePoint(3' 2)'                  ctx.MakePoint(5' 6)' 3.88290);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(7' -4)' ctx.MakePoint(3' 2)'                  ctx.MakePoint(5' 6)' 3.88290);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(7' -4)' ctx.MakePoint(3' 2)'                  ctx.MakePoint(5' 6)' 3.88290);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(7' -4)' ctx.MakePoint(3' 2)'                  ctx.MakePoint(5' 6)' 3.88290);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(7' -4)' ctx.MakePoint(3' 2)'                  ctx.MakePoint(5' 6)' 3.88290);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(7' 5)'                  ctx.MakePoint(5' 6)' 2.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(7' 5)'                  ctx.MakePoint(5' 6)' 2.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(7' 5)'                  ctx.MakePoint(5' 6)' 2.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(7' 5)'                  ctx.MakePoint(5' 6)' 2.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(7' 5)'                  ctx.MakePoint(5' 6)' 2.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(7' 5)'                  ctx.MakePoint(5' 6)' 2.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(7' 5)'                  ctx.MakePoint(5' 6)' 2.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(3' 8)'                  ctx.MakePoint(4' 3)' 1.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(3' 8)'                  ctx.MakePoint(4' 3)' 1.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(3' 8)'                  ctx.MakePoint(4' 3)' 1.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(3' 8)'                  ctx.MakePoint(4' 3)' 1.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(3' 8)'                  ctx.MakePoint(4' 3)' 1.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(3' 8)'                  ctx.MakePoint(4' 3)' 1.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(6' 2)'                  ctx.MakePoint(4' 3)' 1.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(6' 2)'                  ctx.MakePoint(4' 3)' 1.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(6' 2)'                  ctx.MakePoint(4' 3)' 1.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(6' 2)'                  ctx.MakePoint(4' 3)' 1.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(6' 2)'                  ctx.MakePoint(4' 3)' 1.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Distance,The following statement contains a magic number: TestDistToPoint(ctx.MakePoint(3' 2)' ctx.MakePoint(6' 2)'                  ctx.MakePoint(4' 3)' 1.0);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,TestDistToPoint,The following statement contains a magic number: Assert.False(new BufferedLine(pA' pB' dist * 0.999' ctx).Contains(pC));
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,TestDistToPoint,The following statement contains a magic number: Assert.True(new BufferedLine(pA' pB' dist * 1.001' ctx).Contains(pC));
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Misc,The following statement contains a magic number: IPoint pt = ctx.MakePoint(10' 1);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Misc,The following statement contains a magic number: BufferedLine line = new BufferedLine(pt' pt' 3' ctx);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Misc,The following statement contains a magic number: Assert.True(line.Contains(ctx.MakePoint(10' 1 + 3 - 0.1)));
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Misc,The following statement contains a magic number: Assert.True(line.Contains(ctx.MakePoint(10' 1 + 3 - 0.1)));
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Misc,The following statement contains a magic number: Assert.True(line.Contains(ctx.MakePoint(10' 1 + 3 - 0.1)));
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Misc,The following statement contains a magic number: Assert.False(line.Contains(ctx.MakePoint(10' 1 + 3 + 0.1)));
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Misc,The following statement contains a magic number: Assert.False(line.Contains(ctx.MakePoint(10' 1 + 3 + 0.1)));
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Misc,The following statement contains a magic number: Assert.False(line.Contains(ctx.MakePoint(10' 1 + 3 + 0.1)));
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,Quadrants,The following statement contains a magic number: Math.Abs(d - farthestDistance) < 0.000001
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,NewRandomLine,The following statement contains a magic number: IPoint pA = new Point(random.Next(9 + 1)' random.Next(9 + 1)' ctx);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,NewRandomLine,The following statement contains a magic number: IPoint pA = new Point(random.Next(9 + 1)' random.Next(9 + 1)' ctx);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,NewRandomLine,The following statement contains a magic number: IPoint pB = new Point(random.Next(9 + 1)' random.Next(9 + 1)' ctx);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,NewRandomLine,The following statement contains a magic number: IPoint pB = new Point(random.Next(9 + 1)' random.Next(9 + 1)' ctx);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,NewRandomLine,The following statement contains a magic number: int buf = random.Next(5 + 1);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,QuadrantCorners,The following statement contains a magic number: IList<IPoint> corners = new List<IPoint>(4);
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,NewBufLine,The following statement contains a magic number: random.Next(100) % 2 == 0
Magic Number,Spatial4n.Core.Shape,BufferedLineTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\BufferedLineTest.cs,NewBufLine,The following statement contains a magic number: random.Next(100) % 2 == 0
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestArea,The following statement contains a magic number: IRectangle r = RandomRectangle(20);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestArea,The following statement contains a magic number: CustomAssert.EqualWithDelta(r.GetArea(ctx)' rPoly.GetArea(ctx)' 0.000001);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestArea,The following statement contains a magic number: CustomAssert.EqualWithDelta(1300' POLY_SHAPE.GetArea(null)' 0.0);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestArea,The following statement contains a magic number: CustomAssert.EqualWithDelta(0.27' POLY_SHAPE.GetArea(ctx) / POLY_SHAPE.BoundingBox.GetArea(ctx)' 0.009);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestArea,The following statement contains a magic number: CustomAssert.EqualWithDelta(0.27' POLY_SHAPE.GetArea(ctx) / POLY_SHAPE.BoundingBox.GetArea(ctx)' 0.009);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestPointAndRectIntersect,The following statement contains a magic number: IRectangle r = RandomRectangle(5);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestRegressions,The following statement contains a magic number: AssertNtsConsistentRelate(new Point(-10' 4' ctx));
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestRegressions,The following statement contains a magic number: AssertNtsConsistentRelate(new Point(-10' 4' ctx));
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestRegressions,The following statement contains a magic number: AssertNtsConsistentRelate(new Point(-15' -10' ctx));
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestRegressions,The following statement contains a magic number: AssertNtsConsistentRelate(new Point(-15' -10' ctx));
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestRegressions,The following statement contains a magic number: AssertNtsConsistentRelate(ctx.MakeRectangle(135' 180' -10' 10));
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestRegressions,The following statement contains a magic number: AssertNtsConsistentRelate(ctx.MakeRectangle(135' 180' -10' 10));
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestRegressions,The following statement contains a magic number: AssertNtsConsistentRelate(ctx.MakeRectangle(135' 180' -10' 10));
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestRegressions,The following statement contains a magic number: AssertNtsConsistentRelate(ctx.MakeRectangle(135' 180' -10' 10));
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestWidthGreaterThan180,The following statement contains a magic number: CustomAssert.EqualWithDelta(161 + 20' ntsGeo.BoundingBox.Width' 0.001);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestWidthGreaterThan180,The following statement contains a magic number: CustomAssert.EqualWithDelta(161 + 20' ntsGeo.BoundingBox.Width' 0.001);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestWidthGreaterThan180,The following statement contains a magic number: CustomAssert.EqualWithDelta(161 + 20' ntsGeo.BoundingBox.Width' 0.001);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestWidthGreaterThan180,The following statement contains a magic number: ntsGeo = ShiftPoly(ntsGeo' 180);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestWidthGreaterThan180,The following statement contains a magic number: CustomAssert.EqualWithDelta(161 + 20' ntsGeo.BoundingBox.Width' 0.001);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestWidthGreaterThan180,The following statement contains a magic number: CustomAssert.EqualWithDelta(161 + 20' ntsGeo.BoundingBox.Width' 0.001);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestWidthGreaterThan180,The following statement contains a magic number: CustomAssert.EqualWithDelta(161 + 20' ntsGeo.BoundingBox.Width' 0.001);
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestFiji,The following statement contains a magic number: AssertRelation(null' SpatialRelation.CONTAINS' shape'                      ctx.MakePoint(-179.99' -16.9));
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestFiji,The following statement contains a magic number: AssertRelation(null' SpatialRelation.CONTAINS' shape'                      ctx.MakePoint(-179.99' -16.9));
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestFiji,The following statement contains a magic number: AssertRelation(null' SpatialRelation.CONTAINS' shape'                      ctx.MakePoint(+179.99' -16.9));
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestFiji,The following statement contains a magic number: AssertRelation(null' SpatialRelation.CONTAINS' shape'                      ctx.MakePoint(+179.99' -16.9));
Magic Number,Spatial4n.Core.Shape,NtsGeometryTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,TestFiji,The following statement contains a magic number: Assert.True(shape.BoundingBox.Width < 5);
Magic Number,Spatial4n.Core.Shape,CoordinateFilterAnonymousHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\NtsGeometryTest.cs,Filter,The following statement contains a magic number: outerInstance.ctx.IsGeo && Math.Abs(coord.X) == 180 && outerInstance.random.nextBoolean()
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,AtLeast,The following statement contains a magic number: int max = (int)Math.Min(int.MaxValue' (long)min + (min / 2));
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,MakeNormRect,The following statement contains a magic number: minX = -180;
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,MakeNormRect,The following statement contains a magic number: maxX = 180;
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,MakeNormRect,The following statement contains a magic number: Math.Abs(maxX - minX) >= 360
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomIntBetweenDivisible,The following statement contains a magic number: return (r - 2 + divisStart) * divisible;
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRange,The following statement contains a magic number: double mid = near + RandomGaussian() * bounds.Width / 6;
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRange,The following statement contains a magic number: double width = Math.Abs(RandomGaussian()) * bounds.Width / 6;
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRange,The following statement contains a magic number: return new Range(mid - width / 2' mid + width / 2);
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRange,The following statement contains a magic number: return new Range(mid - width / 2' mid + width / 2);
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomGaussianZeroTo,The following statement contains a magic number: r = Math.Abs(RandomGaussian()) * (max * 0.50);
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRectangle,The following statement contains a magic number: double rX = RandomIntBetweenDivisible(-180' 180' divisible);
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRectangle,The following statement contains a magic number: double rX = RandomIntBetweenDivisible(-180' 180' divisible);
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRectangle,The following statement contains a magic number: double rW = RandomIntBetweenDivisible(0' 360' divisible);
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRectangle,The following statement contains a magic number: double rY1 = RandomIntBetweenDivisible(-90' 90' divisible);
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRectangle,The following statement contains a magic number: double rY1 = RandomIntBetweenDivisible(-90' 90' divisible);
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRectangle,The following statement contains a magic number: double rY2 = RandomIntBetweenDivisible(-90' 90' divisible);
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRectangle,The following statement contains a magic number: double rY2 = RandomIntBetweenDivisible(-90' 90' divisible);
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRectangle,The following statement contains a magic number: rX = -180;
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomRectangle,The following statement contains a magic number: rW > 0 && rX == 180
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,RandomPointIn,The following statement contains a magic number: double angleDEG = 360 * random.NextDouble();
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,Rarely,The following statement contains a magic number: int min = 100 - Math.Min(p' 50);
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,Rarely,The following statement contains a magic number: int min = 100 - Math.Min(p' 50);
Magic Number,Spatial4n.Core.Shape,RandomizedShapeTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RandomizedShapeTest.cs,Rarely,The following statement contains a magic number: return random.Next(100) >= min;
Magic Number,Spatial4n.Core.Shape,RectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RectIntersectionTestHelper.cs,TestRelateWithRectangle,The following statement contains a magic number: int MINLAPSPERCASE = AtLeast(20);
Magic Number,Spatial4n.Core.Shape,RectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RectIntersectionTestHelper.cs,TestRelateWithRectangle,The following statement contains a magic number: switch (ic)                      {                          case SpatialRelation.CONTAINS:                              i_C++;                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(r);                                  AssertRelation(null' SpatialRelation.CONTAINS' s' p);                              }                              break;                            case SpatialRelation.WITHIN:                              i_W++;                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(s);                                  AssertRelation(null' SpatialRelation.CONTAINS' r' p);                              }                              break;                            case SpatialRelation.DISJOINT:                              if (!s.BoundingBox.Relate(r).Intersects())                              {//bboxes are disjoint                                  i_bboxD++;                                  if (i_bboxD > MINLAPSPERCASE)                                      break;                              }                              else                              {                                  i_D++;                              }                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(r);                                  AssertRelation(null' SpatialRelation.DISJOINT' s' p);                              }                              break;                            case SpatialRelation.INTERSECTS:                              i_I++;                              SpatialRelation? pointR = null;//set once                              IRectangle randomPointSpace = null;                              int MAX_TRIES = 1000;                              for (int j = 0; j < MAX_TRIES; j++)                              {                                  Core.Shapes.IPoint p;                                  if (j < 4)                                  {                                      p = new Core.Shapes.Impl.Point(0' 0' ctx);                                      InfBufLine.CornerByQuadrant(r' j + 1' p);                                  }                                  else                                  {                                      if (randomPointSpace == null)                                      {                                          if (pointR == SpatialRelation.DISJOINT)                                          {                                              randomPointSpace = IntersectRects(r' s.BoundingBox);                                          }                                          else                                          {//CONTAINS                                              randomPointSpace = r;                                          }                                      }                                      p = RandomPointIn(randomPointSpace);                                  }                                  SpatialRelation pointRNew = s.Relate(p);                                  if (pointR == null)                                  {                                      pointR = pointRNew;                                  }                                  else if (pointR != pointRNew)                                  {                                      break;                                  }                                  else if (j >= MAX_TRIES)                                  {                                      //TODO consider logging instead of failing                                      Assert.True(false' "Tried intersection brute-force too many times without success");                                  }                              }                                break;                            default:                              Assert.True(false' "" + ic);                              break;                      }
Magic Number,Spatial4n.Core.Shape,RectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RectIntersectionTestHelper.cs,TestRelateWithRectangle,The following statement contains a magic number: switch (ic)                      {                          case SpatialRelation.CONTAINS:                              i_C++;                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(r);                                  AssertRelation(null' SpatialRelation.CONTAINS' s' p);                              }                              break;                            case SpatialRelation.WITHIN:                              i_W++;                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(s);                                  AssertRelation(null' SpatialRelation.CONTAINS' r' p);                              }                              break;                            case SpatialRelation.DISJOINT:                              if (!s.BoundingBox.Relate(r).Intersects())                              {//bboxes are disjoint                                  i_bboxD++;                                  if (i_bboxD > MINLAPSPERCASE)                                      break;                              }                              else                              {                                  i_D++;                              }                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(r);                                  AssertRelation(null' SpatialRelation.DISJOINT' s' p);                              }                              break;                            case SpatialRelation.INTERSECTS:                              i_I++;                              SpatialRelation? pointR = null;//set once                              IRectangle randomPointSpace = null;                              int MAX_TRIES = 1000;                              for (int j = 0; j < MAX_TRIES; j++)                              {                                  Core.Shapes.IPoint p;                                  if (j < 4)                                  {                                      p = new Core.Shapes.Impl.Point(0' 0' ctx);                                      InfBufLine.CornerByQuadrant(r' j + 1' p);                                  }                                  else                                  {                                      if (randomPointSpace == null)                                      {                                          if (pointR == SpatialRelation.DISJOINT)                                          {                                              randomPointSpace = IntersectRects(r' s.BoundingBox);                                          }                                          else                                          {//CONTAINS                                              randomPointSpace = r;                                          }                                      }                                      p = RandomPointIn(randomPointSpace);                                  }                                  SpatialRelation pointRNew = s.Relate(p);                                  if (pointR == null)                                  {                                      pointR = pointRNew;                                  }                                  else if (pointR != pointRNew)                                  {                                      break;                                  }                                  else if (j >= MAX_TRIES)                                  {                                      //TODO consider logging instead of failing                                      Assert.True(false' "Tried intersection brute-force too many times without success");                                  }                              }                                break;                            default:                              Assert.True(false' "" + ic);                              break;                      }
Magic Number,Spatial4n.Core.Shape,RectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RectIntersectionTestHelper.cs,TestRelateWithRectangle,The following statement contains a magic number: switch (ic)                      {                          case SpatialRelation.CONTAINS:                              i_C++;                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(r);                                  AssertRelation(null' SpatialRelation.CONTAINS' s' p);                              }                              break;                            case SpatialRelation.WITHIN:                              i_W++;                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(s);                                  AssertRelation(null' SpatialRelation.CONTAINS' r' p);                              }                              break;                            case SpatialRelation.DISJOINT:                              if (!s.BoundingBox.Relate(r).Intersects())                              {//bboxes are disjoint                                  i_bboxD++;                                  if (i_bboxD > MINLAPSPERCASE)                                      break;                              }                              else                              {                                  i_D++;                              }                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(r);                                  AssertRelation(null' SpatialRelation.DISJOINT' s' p);                              }                              break;                            case SpatialRelation.INTERSECTS:                              i_I++;                              SpatialRelation? pointR = null;//set once                              IRectangle randomPointSpace = null;                              int MAX_TRIES = 1000;                              for (int j = 0; j < MAX_TRIES; j++)                              {                                  Core.Shapes.IPoint p;                                  if (j < 4)                                  {                                      p = new Core.Shapes.Impl.Point(0' 0' ctx);                                      InfBufLine.CornerByQuadrant(r' j + 1' p);                                  }                                  else                                  {                                      if (randomPointSpace == null)                                      {                                          if (pointR == SpatialRelation.DISJOINT)                                          {                                              randomPointSpace = IntersectRects(r' s.BoundingBox);                                          }                                          else                                          {//CONTAINS                                              randomPointSpace = r;                                          }                                      }                                      p = RandomPointIn(randomPointSpace);                                  }                                  SpatialRelation pointRNew = s.Relate(p);                                  if (pointR == null)                                  {                                      pointR = pointRNew;                                  }                                  else if (pointR != pointRNew)                                  {                                      break;                                  }                                  else if (j >= MAX_TRIES)                                  {                                      //TODO consider logging instead of failing                                      Assert.True(false' "Tried intersection brute-force too many times without success");                                  }                              }                                break;                            default:                              Assert.True(false' "" + ic);                              break;                      }
Magic Number,Spatial4n.Core.Shape,RectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RectIntersectionTestHelper.cs,TestRelateWithRectangle,The following statement contains a magic number: switch (ic)                      {                          case SpatialRelation.CONTAINS:                              i_C++;                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(r);                                  AssertRelation(null' SpatialRelation.CONTAINS' s' p);                              }                              break;                            case SpatialRelation.WITHIN:                              i_W++;                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(s);                                  AssertRelation(null' SpatialRelation.CONTAINS' r' p);                              }                              break;                            case SpatialRelation.DISJOINT:                              if (!s.BoundingBox.Relate(r).Intersects())                              {//bboxes are disjoint                                  i_bboxD++;                                  if (i_bboxD > MINLAPSPERCASE)                                      break;                              }                              else                              {                                  i_D++;                              }                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(r);                                  AssertRelation(null' SpatialRelation.DISJOINT' s' p);                              }                              break;                            case SpatialRelation.INTERSECTS:                              i_I++;                              SpatialRelation? pointR = null;//set once                              IRectangle randomPointSpace = null;                              int MAX_TRIES = 1000;                              for (int j = 0; j < MAX_TRIES; j++)                              {                                  Core.Shapes.IPoint p;                                  if (j < 4)                                  {                                      p = new Core.Shapes.Impl.Point(0' 0' ctx);                                      InfBufLine.CornerByQuadrant(r' j + 1' p);                                  }                                  else                                  {                                      if (randomPointSpace == null)                                      {                                          if (pointR == SpatialRelation.DISJOINT)                                          {                                              randomPointSpace = IntersectRects(r' s.BoundingBox);                                          }                                          else                                          {//CONTAINS                                              randomPointSpace = r;                                          }                                      }                                      p = RandomPointIn(randomPointSpace);                                  }                                  SpatialRelation pointRNew = s.Relate(p);                                  if (pointR == null)                                  {                                      pointR = pointRNew;                                  }                                  else if (pointR != pointRNew)                                  {                                      break;                                  }                                  else if (j >= MAX_TRIES)                                  {                                      //TODO consider logging instead of failing                                      Assert.True(false' "Tried intersection brute-force too many times without success");                                  }                              }                                break;                            default:                              Assert.True(false' "" + ic);                              break;                      }
Magic Number,Spatial4n.Core.Shape,RectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RectIntersectionTestHelper.cs,TestRelateWithRectangle,The following statement contains a magic number: switch (ic)                      {                          case SpatialRelation.CONTAINS:                              i_C++;                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(r);                                  AssertRelation(null' SpatialRelation.CONTAINS' s' p);                              }                              break;                            case SpatialRelation.WITHIN:                              i_W++;                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(s);                                  AssertRelation(null' SpatialRelation.CONTAINS' r' p);                              }                              break;                            case SpatialRelation.DISJOINT:                              if (!s.BoundingBox.Relate(r).Intersects())                              {//bboxes are disjoint                                  i_bboxD++;                                  if (i_bboxD > MINLAPSPERCASE)                                      break;                              }                              else                              {                                  i_D++;                              }                              for (int j = 0; j < AtLeast(10); j++)                              {                                  Core.Shapes.IPoint p = RandomPointIn(r);                                  AssertRelation(null' SpatialRelation.DISJOINT' s' p);                              }                              break;                            case SpatialRelation.INTERSECTS:                              i_I++;                              SpatialRelation? pointR = null;//set once                              IRectangle randomPointSpace = null;                              int MAX_TRIES = 1000;                              for (int j = 0; j < MAX_TRIES; j++)                              {                                  Core.Shapes.IPoint p;                                  if (j < 4)                                  {                                      p = new Core.Shapes.Impl.Point(0' 0' ctx);                                      InfBufLine.CornerByQuadrant(r' j + 1' p);                                  }                                  else                                  {                                      if (randomPointSpace == null)                                      {                                          if (pointR == SpatialRelation.DISJOINT)                                          {                                              randomPointSpace = IntersectRects(r' s.BoundingBox);                                          }                                          else                                          {//CONTAINS                                              randomPointSpace = r;                                          }                                      }                                      p = RandomPointIn(randomPointSpace);                                  }                                  SpatialRelation pointRNew = s.Relate(p);                                  if (pointR == null)                                  {                                      pointR = pointRNew;                                  }                                  else if (pointR != pointRNew)                                  {                                      break;                                  }                                  else if (j >= MAX_TRIES)                                  {                                      //TODO consider logging instead of failing                                      Assert.True(false' "Tried intersection brute-force too many times without success");                                  }                              }                                break;                            default:                              Assert.True(false' "" + ic);                              break;                      }
Magic Number,Spatial4n.Core.Shape,RectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RectIntersectionTestHelper.cs,TestRelateWithRectangle,The following statement contains a magic number: Assert.True(false' "Did not find enough intersection cases in a reasonable number" +                          " of random attempts. CWIDbD: " + i_C + "'" + i_W + "'" + i_I + "'" + i_D + "'" + i_bboxD                          + "  Laps exceeded " + MINLAPSPERCASE * 1000);
Magic Number,Spatial4n.Core.Shape,RectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RectIntersectionTestHelper.cs,TestRelateWithRectangle,The following statement contains a magic number: laps > MINLAPSPERCASE * 1000
Magic Number,Spatial4n.Core.Shape,RoundingDistCalc,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RoundingDistCalc.cs,Round,The following statement contains a magic number: double scale = Math.Pow(10' 10 /*digits precision*/);
Magic Number,Spatial4n.Core.Shape,RoundingDistCalc,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\RoundingDistCalc.cs,Round,The following statement contains a magic number: double scale = Math.Pow(10' 10 /*digits precision*/);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestBbox,The following statement contains a magic number: ValidateWorld(-180' 180' -180' 180);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestBbox,The following statement contains a magic number: ValidateWorld(-180' 180' -180' 180);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestBbox,The following statement contains a magic number: ValidateWorld(-180' 180' -180' 180);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestBbox,The following statement contains a magic number: ValidateWorld(-180' 180' -180' 180);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestBbox,The following statement contains a magic number: ValidateWorld(-180' 0' 0' +180);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestBbox,The following statement contains a magic number: ValidateWorld(-180' 0' 0' +180);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestBbox,The following statement contains a magic number: ValidateWorld(-90' +90' +90' -90);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestBbox,The following statement contains a magic number: ValidateWorld(-90' +90' +90' -90);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestBbox,The following statement contains a magic number: ValidateWorld(-90' +90' +90' -90);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestBbox,The following statement contains a magic number: ValidateWorld(-90' +90' +90' -90);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,ValidateWorld,The following statement contains a magic number: IRectangle r1 = ctx.MakeRectangle(r1MinX' r1MaxX' -10' 10);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,ValidateWorld,The following statement contains a magic number: IRectangle r1 = ctx.MakeRectangle(r1MinX' r1MaxX' -10' 10);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,ValidateWorld,The following statement contains a magic number: IRectangle r2 = ctx.MakeRectangle(r2MinX' r2MaxX' -10' 10);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,ValidateWorld,The following statement contains a magic number: IRectangle r2 = ctx.MakeRectangle(r2MinX' r2MaxX' -10' 10);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestRectIntersect,The following statement contains a magic number: SpatialContext ctx = new SpatialContextFactory()              { geo = false' worldBounds = new Rectangle(-100' 100' -50' 50' null) }.NewSpatialContext();
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestRectIntersect,The following statement contains a magic number: SpatialContext ctx = new SpatialContextFactory()              { geo = false' worldBounds = new Rectangle(-100' 100' -50' 50' null) }.NewSpatialContext();
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestRectIntersect,The following statement contains a magic number: SpatialContext ctx = new SpatialContextFactory()              { geo = false' worldBounds = new Rectangle(-100' 100' -50' 50' null) }.NewSpatialContext();
Magic Number,Spatial4n.Core.Shape,ShapeCollectionTest,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,TestRectIntersect,The following statement contains a magic number: SpatialContext ctx = new SpatialContextFactory()              { geo = false' worldBounds = new Rectangle(-100' 100' -50' 50' null) }.NewSpatialContext();
Magic Number,Spatial4n.Core.Shape,ShapeCollectionRectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,GenerateRandomShape,The following statement contains a magic number: int count = random.Next(1' 4 + 1);
Magic Number,Spatial4n.Core.Shape,ShapeCollectionRectIntersectionTestHelper,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\ShapeCollectionTest.cs,GenerateRandomShape,The following statement contains a magic number: shapes.Add(RandomRectangle(i < 2 ? nearP : null));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimplePoint,The following statement contains a magic number: Assert.Throws<InvalidShapeException>(() => ctx.MakePoint(2001' 0));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimplePoint,The following statement contains a magic number: Assert.Throws<InvalidShapeException>(() => ctx.MakePoint(0' -301));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimplePoint,The following statement contains a magic number: pt.Reset(1' 2);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimplePoint,The following statement contains a magic number: Assert.Equal(ctx.MakePoint(1' 2)' pt);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimplePoint,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(pt' 3)' pt.GetBuffered(3' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimplePoint,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(pt' 3)' pt.GetBuffered(3' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double v = 2001 * (random.NextDouble() > 0.5 ? -1 : 1);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double v = 2001 * (random.NextDouble() > 0.5 ? -1 : 1);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: Assert.Throws<InvalidShapeException>(() => ctx.MakeRectangle(0' 0' 10' -10));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: Assert.Throws<InvalidShapeException>(() => ctx.MakeRectangle(0' 0' 10' -10));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: Assert.Throws<InvalidShapeException>(() => ctx.MakeRectangle(10' -10' 0' 0));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: Assert.Throws<InvalidShapeException>(() => ctx.MakeRectangle(10' -10' 0' 0));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double[] minXs = new double[] { -1000' -360' -180' -20' 0' 20' 180' 1000 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double[] minXs = new double[] { -1000' -360' -180' -20' 0' 20' 180' 1000 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double[] minXs = new double[] { -1000' -360' -180' -20' 0' 20' 180' 1000 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double[] minXs = new double[] { -1000' -360' -180' -20' 0' 20' 180' 1000 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double[] minXs = new double[] { -1000' -360' -180' -20' 0' 20' 180' 1000 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double[] minXs = new double[] { -1000' -360' -180' -20' 0' 20' 180' 1000 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double[] minXs = new double[] { -1000' -360' -180' -20' 0' 20' 180' 1000 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double[] widths = new double[] { 0' 10' 180' 360' 400 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double[] widths = new double[] { 0' 10' 180' 360' 400 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double[] widths = new double[] { 0' 10' 180' 360' 400 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: double[] widths = new double[] { 0' 10' 180' 360' 400 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: TestRectangle(minX' width' -10' 10);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: TestRectangle(minX' width' -10' 10);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: TestRectangle(minX' width' 5' 10);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: TestRectangle(minX' width' 5' 10);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: r.Reset(1' 2' 3' 4);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: r.Reset(1' 2' 3' 4);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: r.Reset(1' 2' 3' 4);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(1' 2' 3' 4)' r);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(1' 2' 3' 4)' r);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(1' 2' 3' 4)' r);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(0.9' 2.1' 2.9' 4.1)' ctx.MakeRectangle(1' 2' 3' 4).GetBuffered(0.1' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(0.9' 2.1' 2.9' 4.1)' ctx.MakeRectangle(1' 2' 3' 4).GetBuffered(0.1' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(0.9' 2.1' 2.9' 4.1)' ctx.MakeRectangle(1' 2' 3' 4).GetBuffered(0.1' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(0.9' 2.1' 2.9' 4.1)' ctx.MakeRectangle(1' 2' 3' 4).GetBuffered(0.1' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(0.9' 2.1' 2.9' 4.1)' ctx.MakeRectangle(1' 2' 3' 4).GetBuffered(0.1' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(0.9' 2.1' 2.9' 4.1)' ctx.MakeRectangle(1' 2' 3' 4).GetBuffered(0.1' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(0.9' 2.1' 2.9' 4.1)' ctx.MakeRectangle(1' 2' 3' 4).GetBuffered(0.1' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(0.9' 2.1' 2.9' 4.1)' ctx.MakeRectangle(1' 2' 3' 4).GetBuffered(0.1' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: double[] theXs = new double[] { -10' 0' 10 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: double[] theXs = new double[] { -10' 0' 10 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: double[] theYs = new double[] { -20' 0' 20 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: double[] theYs = new double[] { -20' 0' 20 };
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: TestCircle(x' y' 5);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: Assert.Equal( /*"getX not getY"'*/                  SpatialRelation.INTERSECTS'                  ctx.MakeCircle(107' -81' 147).Relate(ctx.MakeRectangle(92' 121' -89' 74)));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: Assert.Equal( /*"getX not getY"'*/                  SpatialRelation.INTERSECTS'                  ctx.MakeCircle(107' -81' 147).Relate(ctx.MakeRectangle(92' 121' -89' 74)));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: Assert.Equal( /*"getX not getY"'*/                  SpatialRelation.INTERSECTS'                  ctx.MakeCircle(107' -81' 147).Relate(ctx.MakeRectangle(92' 121' -89' 74)));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: Assert.Equal( /*"getX not getY"'*/                  SpatialRelation.INTERSECTS'                  ctx.MakeCircle(107' -81' 147).Relate(ctx.MakeRectangle(92' 121' -89' 74)));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: Assert.Equal( /*"getX not getY"'*/                  SpatialRelation.INTERSECTS'                  ctx.MakeCircle(107' -81' 147).Relate(ctx.MakeRectangle(92' 121' -89' 74)));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: Assert.Equal( /*"getX not getY"'*/                  SpatialRelation.INTERSECTS'                  ctx.MakeCircle(107' -81' 147).Relate(ctx.MakeRectangle(92' 121' -89' 74)));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: Assert.Equal( /*"getX not getY"'*/                  SpatialRelation.INTERSECTS'                  ctx.MakeCircle(107' -81' 147).Relate(ctx.MakeRectangle(92' 121' -89' 74)));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(1' 2' 10)' ctx.MakeCircle(1' 2' 6).GetBuffered(4' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(1' 2' 10)' ctx.MakeCircle(1' 2' 6).GetBuffered(4' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(1' 2' 10)' ctx.MakeCircle(1' 2' 6).GetBuffered(4' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(1' 2' 10)' ctx.MakeCircle(1' 2' 6).GetBuffered(4' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestSimpleCircle,The following statement contains a magic number: Assert.Equal(ctx.MakeCircle(1' 2' 10)' ctx.MakeCircle(1' 2' 6).GetBuffered(4' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestCircleReset,The following statement contains a magic number: ICircle c = ctx.MakeCircle(3' 4' 5);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestCircleReset,The following statement contains a magic number: ICircle c = ctx.MakeCircle(3' 4' 5);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestCircleReset,The following statement contains a magic number: ICircle c = ctx.MakeCircle(3' 4' 5);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestCircleReset,The following statement contains a magic number: ICircle c2 = ctx.MakeCircle(5' 6' 7);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestCircleReset,The following statement contains a magic number: ICircle c2 = ctx.MakeCircle(5' 6' 7);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestCircleReset,The following statement contains a magic number: ICircle c2 = ctx.MakeCircle(5' 6' 7);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestCircleReset,The following statement contains a magic number: c2.Reset(3' 4' 5);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestCircleReset,The following statement contains a magic number: c2.Reset(3' 4' 5);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestCircleReset,The following statement contains a magic number: c2.Reset(3' 4' 5);
Magic Number,Spatial4n.Core.Shape,TestShapes2D,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapes2D.cs,TestBufferedLineString,The following statement contains a magic number: TestEmptiness(ctx.MakeBufferedLineString(new List<IPoint>()' random.Next(3 + 1)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double v = 200 * (random.NextDouble() > 0.5 ? -1 : 1);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double v = 200 * (random.NextDouble() > 0.5 ? -1 : 1);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Throws<InvalidShapeException>(() => ctx.MakeRectangle(0' 0' 10' -10));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Throws<InvalidShapeException>(() => ctx.MakeRectangle(0' 0' 10' -10));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.INTERSECTS' ctx.MakeRectangle(170' 180' 0' 0).RelateXRange(-180' -170));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.INTERSECTS' ctx.MakeRectangle(170' 180' 0' 0).RelateXRange(-180' -170));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.INTERSECTS' ctx.MakeRectangle(170' 180' 0' 0).RelateXRange(-180' -170));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.INTERSECTS' ctx.MakeRectangle(170' 180' 0' 0).RelateXRange(-180' -170));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.INTERSECTS' ctx.MakeRectangle(-90' -45' 0' 0).RelateXRange(-45' -135));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.INTERSECTS' ctx.MakeRectangle(-90' -45' 0' 0).RelateXRange(-45' -135));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.INTERSECTS' ctx.MakeRectangle(-90' -45' 0' 0).RelateXRange(-45' -135));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.INTERSECTS' ctx.MakeRectangle(-90' -45' 0' 0).RelateXRange(-45' -135));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.CONTAINS' ctx.WorldBounds.RelateXRange(-90' -135));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.CONTAINS' ctx.WorldBounds.RelateXRange(-90' -135));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.CONTAINS' ctx.MakeRectangle(170' 180' 0' 0).Relate(ctx.MakePoint(-180' 0)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.CONTAINS' ctx.MakeRectangle(170' 180' 0' 0).Relate(ctx.MakePoint(-180' 0)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(SpatialRelation.CONTAINS' ctx.MakeRectangle(170' 180' 0' 0).Relate(ctx.MakePoint(-180' 0)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(-180' -170' 0' 0)' ctx.MakeRectangle(180' -170' 0' 0));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(-180' -170' 0' 0)' ctx.MakeRectangle(180' -170' 0' 0));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(-180' -170' 0' 0)' ctx.MakeRectangle(180' -170' 0' 0));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(-180' -170' 0' 0)' ctx.MakeRectangle(180' -170' 0' 0));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(170' 180' 0' 0)' ctx.MakeRectangle(170' -180' 0' 0));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(170' 180' 0' 0)' ctx.MakeRectangle(170' -180' 0' 0));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(170' 180' 0' 0)' ctx.MakeRectangle(170' -180' 0' 0));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.Equal(ctx.MakeRectangle(170' 180' 0' 0)' ctx.MakeRectangle(170' -180' 0' 0));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double[] lons = new double[] { 0' 45' 160' 180' -45' -175' -180 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double[] lons = new double[] { 0' 45' 160' 180' -45' -175' -180 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double[] lons = new double[] { 0' 45' 160' 180' -45' -175' -180 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double[] lons = new double[] { 0' 45' 160' 180' -45' -175' -180 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double[] lons = new double[] { 0' 45' 160' 180' -45' -175' -180 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double[] lons = new double[] { 0' 45' 160' 180' -45' -175' -180 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double[] lonWs = new double[] { 0' 20' 180' 200' 355' 360 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double[] lonWs = new double[] { 0' 20' 180' 200' 355' 360 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double[] lonWs = new double[] { 0' 20' 180' 200' 355' 360 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double[] lonWs = new double[] { 0' 20' 180' 200' 355' 360 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: double[] lonWs = new double[] { 0' 20' 180' 200' 355' 360 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: lonW == 360 && lon != -180
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: lonW == 360 && lon != -180
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: TestRectangle(lon' lonW' -10' 10);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: TestRectangle(lon' lonW' -10' 10);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: TestRectangle(lon' lonW' 80' 10);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: TestRectangle(lon' lonW' 80' 10);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: TestRectangle(lon' lonW' -90' 180);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: TestRectangle(lon' lonW' -90' 180);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(-10' 10' -10' 10)' ctx.MakeRectangle(0' 0' 0' 0).GetBuffered(10' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(-10' 10' -10' 10)' ctx.MakeRectangle(0' 0' 0' 0).GetBuffered(10' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(-10' 10' -10' 10)' ctx.MakeRectangle(0' 0' 0' 0).GetBuffered(10' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(-10' 10' -10' 10)' ctx.MakeRectangle(0' 0' 0' 0).GetBuffered(10' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: AssertEquals(ctx.MakeRectangle(-10' 10' -10' 10)' ctx.MakeRectangle(0' 0' 0' 0).GetBuffered(10' ctx));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: int buf = random.Next(0' 90 + 1);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: CustomAssert.EqualWithDelta(360' br.Width' 0.0);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: r.Width + 2 * buf >= 360
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: r.Width + 2 * buf >= 360
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: i < AtLeast(100)
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.True(ctx.MakeRectangle(0' 10' 0' 89).GetBuffered(0.5' ctx).BoundingBox.Width                  > 11);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.True(ctx.MakeRectangle(0' 10' 0' 89).GetBuffered(0.5' ctx).BoundingBox.Width                  > 11);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.True(ctx.MakeRectangle(0' 10' 0' 89).GetBuffered(0.5' ctx).BoundingBox.Width                  > 11);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoRectangle,The following statement contains a magic number: Assert.True(ctx.MakeRectangle(0' 10' 0' 89).GetBuffered(0.5' ctx).BoundingBox.Width                  > 11);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: Assert.Equal(string.Format("Circle(Pt(x={0:0.0}'y={1:0.0})' d={2:0.0}Â° {3:0.00}km)"' 10' 20' 30' 3335.85)' ctx.MakeCircle(10' 20' 30).ToString());
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: Assert.Equal(string.Format("Circle(Pt(x={0:0.0}'y={1:0.0})' d={2:0.0}Â° {3:0.00}km)"' 10' 20' 30' 3335.85)' ctx.MakeCircle(10' 20' 30).ToString());
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: Assert.Equal(string.Format("Circle(Pt(x={0:0.0}'y={1:0.0})' d={2:0.0}Â° {3:0.00}km)"' 10' 20' 30' 3335.85)' ctx.MakeCircle(10' 20' 30).ToString());
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: Assert.Equal(string.Format("Circle(Pt(x={0:0.0}'y={1:0.0})' d={2:0.0}Â° {3:0.00}km)"' 10' 20' 30' 3335.85)' ctx.MakeCircle(10' 20' 30).ToString());
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: Assert.Equal(string.Format("Circle(Pt(x={0:0.0}'y={1:0.0})' d={2:0.0}Â° {3:0.00}km)"' 10' 20' 30' 3335.85)' ctx.MakeCircle(10' 20' 30).ToString());
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: Assert.Equal(string.Format("Circle(Pt(x={0:0.0}'y={1:0.0})' d={2:0.0}Â° {3:0.00}km)"' 10' 20' 30' 3335.85)' ctx.MakeCircle(10' 20' 30).ToString());
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: Assert.Equal(string.Format("Circle(Pt(x={0:0.0}'y={1:0.0})' d={2:0.0}Â° {3:0.00}km)"' 10' 20' 30' 3335.85)' ctx.MakeCircle(10' 20' 30).ToString());
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: double v = 200 * (random.NextDouble() > 0.5 ? -1 : 1);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: double v = 200 * (random.NextDouble() > 0.5 ? -1 : 1);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: Assert.Throws<InvalidShapeException>(() => ctx.MakeCircle(v' 0' 5));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: Assert.Throws<InvalidShapeException>(() => ctx.MakeCircle(0' v' 5));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(110' -12' 90 + 12);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(110' -12' 90 + 12);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(110' -12' 90 + 12);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(110' -12' 90 + 12);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(-44' 16' 106);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(-44' 16' 106);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(-44' 16' 106);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(-36' -76' 14);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(-36' -76' 14);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(-36' -76' 14);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(107' 82' 172);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(107' 82' 172);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: ctx.MakeCircle(107' 82' 172);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad proportion logic"' SpatialRelation.INTERSECTS' ctx.MakeCircle(64' -70' 18).Relate(ctx.MakeRectangle(46' 116' -86' -62)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad proportion logic"' SpatialRelation.INTERSECTS' ctx.MakeCircle(64' -70' 18).Relate(ctx.MakeRectangle(46' 116' -86' -62)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad proportion logic"' SpatialRelation.INTERSECTS' ctx.MakeCircle(64' -70' 18).Relate(ctx.MakeRectangle(46' 116' -86' -62)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad proportion logic"' SpatialRelation.INTERSECTS' ctx.MakeCircle(64' -70' 18).Relate(ctx.MakeRectangle(46' 116' -86' -62)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad proportion logic"' SpatialRelation.INTERSECTS' ctx.MakeCircle(64' -70' 18).Relate(ctx.MakeRectangle(46' 116' -86' -62)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad proportion logic"' SpatialRelation.INTERSECTS' ctx.MakeCircle(64' -70' 18).Relate(ctx.MakeRectangle(46' 116' -86' -62)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad proportion logic"' SpatialRelation.INTERSECTS' ctx.MakeCircle(64' -70' 18).Relate(ctx.MakeRectangle(46' 116' -86' -62)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Both touch pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(-90' 30' 60).Relate(ctx.MakeRectangle(-24' -16' 14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Both touch pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(-90' 30' 60).Relate(ctx.MakeRectangle(-24' -16' 14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Both touch pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(-90' 30' 60).Relate(ctx.MakeRectangle(-24' -16' 14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Both touch pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(-90' 30' 60).Relate(ctx.MakeRectangle(-24' -16' 14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Both touch pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(-90' 30' 60).Relate(ctx.MakeRectangle(-24' -16' 14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Both touch pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(-90' 30' 60).Relate(ctx.MakeRectangle(-24' -16' 14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Both touch pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(-90' 30' 60).Relate(ctx.MakeRectangle(-24' -16' 14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Spherical cap should contain enclosed band"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(0' -90' 30).Relate(ctx.MakeRectangle(-180' 180' -90' -80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Spherical cap should contain enclosed band"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(0' -90' 30).Relate(ctx.MakeRectangle(-180' 180' -90' -80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Spherical cap should contain enclosed band"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(0' -90' 30).Relate(ctx.MakeRectangle(-180' 180' -90' -80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Spherical cap should contain enclosed band"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(0' -90' 30).Relate(ctx.MakeRectangle(-180' 180' -90' -80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Spherical cap should contain enclosed band"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(0' -90' 30).Relate(ctx.MakeRectangle(-180' 180' -90' -80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("Spherical cap should contain enclosed band"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(0' -90' 30).Relate(ctx.MakeRectangle(-180' 180' -90' -80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("touches pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(0' -88' 2).Relate(ctx.MakeRectangle(40' 60' -90' -86)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("touches pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(0' -88' 2).Relate(ctx.MakeRectangle(40' 60' -90' -86)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("touches pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(0' -88' 2).Relate(ctx.MakeRectangle(40' 60' -90' -86)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("touches pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(0' -88' 2).Relate(ctx.MakeRectangle(40' 60' -90' -86)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("touches pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(0' -88' 2).Relate(ctx.MakeRectangle(40' 60' -90' -86)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("touches pole"' SpatialRelation.INTERSECTS' ctx.MakeCircle(0' -88' 2).Relate(ctx.MakeRectangle(40' 60' -90' -86)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong farthest opp corner"' SpatialRelation.INTERSECTS' ctx.MakeCircle(92' 36' 46).Relate(ctx.MakeRectangle(134' 136' 32' 80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong farthest opp corner"' SpatialRelation.INTERSECTS' ctx.MakeCircle(92' 36' 46).Relate(ctx.MakeRectangle(134' 136' 32' 80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong farthest opp corner"' SpatialRelation.INTERSECTS' ctx.MakeCircle(92' 36' 46).Relate(ctx.MakeRectangle(134' 136' 32' 80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong farthest opp corner"' SpatialRelation.INTERSECTS' ctx.MakeCircle(92' 36' 46).Relate(ctx.MakeRectangle(134' 136' 32' 80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong farthest opp corner"' SpatialRelation.INTERSECTS' ctx.MakeCircle(92' 36' 46).Relate(ctx.MakeRectangle(134' 136' 32' 80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong farthest opp corner"' SpatialRelation.INTERSECTS' ctx.MakeCircle(92' 36' 46).Relate(ctx.MakeRectangle(134' 136' 32' 80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong farthest opp corner"' SpatialRelation.INTERSECTS' ctx.MakeCircle(92' 36' 46).Relate(ctx.MakeRectangle(134' 136' 32' 80)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("edge rounding issue 2"' SpatialRelation.INTERSECTS' ctx.MakeCircle(84' -40' 136).Relate(ctx.MakeRectangle(-150' -80' 34' 84)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("edge rounding issue 2"' SpatialRelation.INTERSECTS' ctx.MakeCircle(84' -40' 136).Relate(ctx.MakeRectangle(-150' -80' 34' 84)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("edge rounding issue 2"' SpatialRelation.INTERSECTS' ctx.MakeCircle(84' -40' 136).Relate(ctx.MakeRectangle(-150' -80' 34' 84)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("edge rounding issue 2"' SpatialRelation.INTERSECTS' ctx.MakeCircle(84' -40' 136).Relate(ctx.MakeRectangle(-150' -80' 34' 84)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("edge rounding issue 2"' SpatialRelation.INTERSECTS' ctx.MakeCircle(84' -40' 136).Relate(ctx.MakeRectangle(-150' -80' 34' 84)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("edge rounding issue 2"' SpatialRelation.INTERSECTS' ctx.MakeCircle(84' -40' 136).Relate(ctx.MakeRectangle(-150' -80' 34' 84)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("edge rounding issue 2"' SpatialRelation.INTERSECTS' ctx.MakeCircle(84' -40' 136).Relate(ctx.MakeRectangle(-150' -80' 34' 84)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("edge rounding issue"' SpatialRelation.CONTAINS' ctx.MakeCircle(0' 66' 156).Relate(ctx.MakePoint(0' -90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("edge rounding issue"' SpatialRelation.CONTAINS' ctx.MakeCircle(0' 66' 156).Relate(ctx.MakePoint(0' -90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("edge rounding issue"' SpatialRelation.CONTAINS' ctx.MakeCircle(0' 66' 156).Relate(ctx.MakePoint(0' -90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("nudge back circle"' SpatialRelation.CONTAINS' ctx.MakeCircle(-150' -90' 122).Relate(ctx.MakeRectangle(0' -132' 32' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("nudge back circle"' SpatialRelation.CONTAINS' ctx.MakeCircle(-150' -90' 122).Relate(ctx.MakeRectangle(0' -132' 32' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("nudge back circle"' SpatialRelation.CONTAINS' ctx.MakeCircle(-150' -90' 122).Relate(ctx.MakeRectangle(0' -132' 32' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("nudge back circle"' SpatialRelation.CONTAINS' ctx.MakeCircle(-150' -90' 122).Relate(ctx.MakeRectangle(0' -132' 32' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("nudge back circle"' SpatialRelation.CONTAINS' ctx.MakeCircle(-150' -90' 122).Relate(ctx.MakeRectangle(0' -132' 32' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("nudge back circle"' SpatialRelation.CONTAINS' ctx.MakeCircle(-150' -90' 122).Relate(ctx.MakeRectangle(0' -132' 32' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong estimate"' SpatialRelation.DISJOINT' ctx.MakeCircle(-166' 59' KmToDeg(5226.2)).Relate(ctx.MakeRectangle(36' 66' 23' 23)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong estimate"' SpatialRelation.DISJOINT' ctx.MakeCircle(-166' 59' KmToDeg(5226.2)).Relate(ctx.MakeRectangle(36' 66' 23' 23)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong estimate"' SpatialRelation.DISJOINT' ctx.MakeCircle(-166' 59' KmToDeg(5226.2)).Relate(ctx.MakeRectangle(36' 66' 23' 23)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong estimate"' SpatialRelation.DISJOINT' ctx.MakeCircle(-166' 59' KmToDeg(5226.2)).Relate(ctx.MakeRectangle(36' 66' 23' 23)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong estimate"' SpatialRelation.DISJOINT' ctx.MakeCircle(-166' 59' KmToDeg(5226.2)).Relate(ctx.MakeRectangle(36' 66' 23' 23)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong estimate"' SpatialRelation.DISJOINT' ctx.MakeCircle(-166' 59' KmToDeg(5226.2)).Relate(ctx.MakeRectangle(36' 66' 23' 23)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("wrong estimate"' SpatialRelation.DISJOINT' ctx.MakeCircle(-166' 59' KmToDeg(5226.2)).Relate(ctx.MakeRectangle(36' 66' 23' 23)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (dateline)"' SpatialRelation.INTERSECTS' ctx.MakeCircle(56' -50' KmToDeg(12231.5)).Relate(ctx.MakeRectangle(108' 26' 39' 48)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (dateline)"' SpatialRelation.INTERSECTS' ctx.MakeCircle(56' -50' KmToDeg(12231.5)).Relate(ctx.MakeRectangle(108' 26' 39' 48)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (dateline)"' SpatialRelation.INTERSECTS' ctx.MakeCircle(56' -50' KmToDeg(12231.5)).Relate(ctx.MakeRectangle(108' 26' 39' 48)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (dateline)"' SpatialRelation.INTERSECTS' ctx.MakeCircle(56' -50' KmToDeg(12231.5)).Relate(ctx.MakeRectangle(108' 26' 39' 48)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (dateline)"' SpatialRelation.INTERSECTS' ctx.MakeCircle(56' -50' KmToDeg(12231.5)).Relate(ctx.MakeRectangle(108' 26' 39' 48)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (dateline)"' SpatialRelation.INTERSECTS' ctx.MakeCircle(56' -50' KmToDeg(12231.5)).Relate(ctx.MakeRectangle(108' 26' 39' 48)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (dateline)"' SpatialRelation.INTERSECTS' ctx.MakeCircle(56' -50' KmToDeg(12231.5)).Relate(ctx.MakeRectangle(108' 26' 39' 48)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (backwrap2)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(112' -3' 91).Relate(ctx.MakeRectangle(-163' 29' -38' 10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (backwrap2)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(112' -3' 91).Relate(ctx.MakeRectangle(-163' 29' -38' 10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (backwrap2)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(112' -3' 91).Relate(ctx.MakeRectangle(-163' 29' -38' 10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (backwrap2)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(112' -3' 91).Relate(ctx.MakeRectangle(-163' 29' -38' 10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (backwrap2)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(112' -3' 91).Relate(ctx.MakeRectangle(-163' 29' -38' 10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (backwrap2)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(112' -3' 91).Relate(ctx.MakeRectangle(-163' 29' -38' 10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (backwrap2)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(112' -3' 91).Relate(ctx.MakeRectangle(-163' 29' -38' 10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (r x-wrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 180' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (r x-wrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 180' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (r x-wrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 180' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (r x-wrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 180' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (r x-wrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 180' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (r x-wrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 180' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (r x-wrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 180' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (pwrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 179' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (pwrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 179' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (pwrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 179' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (pwrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 179' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (pwrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 179' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (pwrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 179' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bad CONTAINS (pwrap)"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-139' 47' 80).Relate(ctx.MakeRectangle(-180' 179' -3' 12)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("no-dist 1"' SpatialRelation.WITHIN'                  ctx.MakeCircle(135' 21' 0).Relate(ctx.MakeRectangle(-103' -154' -47' 52)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("no-dist 1"' SpatialRelation.WITHIN'                  ctx.MakeCircle(135' 21' 0).Relate(ctx.MakeRectangle(-103' -154' -47' 52)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("no-dist 1"' SpatialRelation.WITHIN'                  ctx.MakeCircle(135' 21' 0).Relate(ctx.MakeRectangle(-103' -154' -47' 52)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("no-dist 1"' SpatialRelation.WITHIN'                  ctx.MakeCircle(135' 21' 0).Relate(ctx.MakeRectangle(-103' -154' -47' 52)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("no-dist 1"' SpatialRelation.WITHIN'                  ctx.MakeCircle(135' 21' 0).Relate(ctx.MakeRectangle(-103' -154' -47' 52)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("no-dist 1"' SpatialRelation.WITHIN'                  ctx.MakeCircle(135' 21' 0).Relate(ctx.MakeRectangle(-103' -154' -47' 52)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bbox <= >= -90 bug"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' -84' 124).Relate(ctx.MakeRectangle(-96' 96' -10' -10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bbox <= >= -90 bug"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' -84' 124).Relate(ctx.MakeRectangle(-96' 96' -10' -10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bbox <= >= -90 bug"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' -84' 124).Relate(ctx.MakeRectangle(-96' 96' -10' -10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bbox <= >= -90 bug"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' -84' 124).Relate(ctx.MakeRectangle(-96' 96' -10' -10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bbox <= >= -90 bug"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' -84' 124).Relate(ctx.MakeRectangle(-96' 96' -10' -10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bbox <= >= -90 bug"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' -84' 124).Relate(ctx.MakeRectangle(-96' 96' -10' -10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("bbox <= >= -90 bug"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' -84' 124).Relate(ctx.MakeRectangle(-96' 96' -10' -10)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("c's horiz axis doesn't pass through ctr"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(71' -44' 40).Relate(ctx.MakeRectangle(15' 27' -62' -34)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("c's horiz axis doesn't pass through ctr"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(71' -44' 40).Relate(ctx.MakeRectangle(15' 27' -62' -34)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("c's horiz axis doesn't pass through ctr"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(71' -44' 40).Relate(ctx.MakeRectangle(15' 27' -62' -34)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("c's horiz axis doesn't pass through ctr"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(71' -44' 40).Relate(ctx.MakeRectangle(15' 27' -62' -34)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("c's horiz axis doesn't pass through ctr"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(71' -44' 40).Relate(ctx.MakeRectangle(15' 27' -62' -34)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("c's horiz axis doesn't pass through ctr"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(71' -44' 40).Relate(ctx.MakeRectangle(15' 27' -62' -34)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("c's horiz axis doesn't pass through ctr"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(71' -44' 40).Relate(ctx.MakeRectangle(15' 27' -62' -34)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("pole boundary"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-100' -12' 102).Relate(ctx.MakeRectangle(143' 175' 4' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("pole boundary"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-100' -12' 102).Relate(ctx.MakeRectangle(143' 175' 4' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("pole boundary"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-100' -12' 102).Relate(ctx.MakeRectangle(143' 175' 4' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("pole boundary"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-100' -12' 102).Relate(ctx.MakeRectangle(143' 175' 4' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("pole boundary"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-100' -12' 102).Relate(ctx.MakeRectangle(143' 175' 4' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("pole boundary"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-100' -12' 102).Relate(ctx.MakeRectangle(143' 175' 4' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("pole boundary"' SpatialRelation.INTERSECTS'                  ctx.MakeCircle(-100' -12' 102).Relate(ctx.MakeRectangle(143' 175' 4' 32)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("full circle assert"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' 32' 180).Relate(ctx.MakeRectangle(47' 47' -14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("full circle assert"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' 32' 180).Relate(ctx.MakeRectangle(47' 47' -14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("full circle assert"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' 32' 180).Relate(ctx.MakeRectangle(47' 47' -14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("full circle assert"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' 32' 180).Relate(ctx.MakeRectangle(47' 47' -14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("full circle assert"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' 32' 180).Relate(ctx.MakeRectangle(47' 47' -14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("full circle assert"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' 32' 180).Relate(ctx.MakeRectangle(47' 47' -14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals("full circle assert"' SpatialRelation.CONTAINS'                  ctx.MakeCircle(-64' 32' 180).Relate(ctx.MakeRectangle(47' 47' -14' 90)));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: AssertEquals(ctx.WorldBounds' ctx.MakeCircle(0' 0' 180).BoundingBox);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: double[] theXs = new double[] { -180' -45' 90 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: double[] theXs = new double[] { -180' -45' 90 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: double[] theXs = new double[] { -180' -45' 90 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: double[] theYs = new double[] { -90' -45' 0' 45' 90 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: double[] theYs = new double[] { -90' -45' 0' 45' 90 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: double[] theYs = new double[] { -90' -45' 0' 45' 90 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: double[] theYs = new double[] { -90' -45' 0' 45' 90 };
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: TestCircle(x' y' KmToDeg(500));
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: TestCircle(x' y' 90);
Magic Number,Spatial4n.Core.Shape,TestShapesGeo,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\shape\TestShapesGeo.cs,TestGeoCircle,The following statement contains a magic number: TestCircle(x' y' 180);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestEncode,The following statement contains a magic number: string hash = GeohashUtils.EncodeLatLon(42.6' -5.6);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestEncode,The following statement contains a magic number: string hash = GeohashUtils.EncodeLatLon(42.6' -5.6);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestEncode,The following statement contains a magic number: hash = GeohashUtils.EncodeLatLon(57.64911' 10.40744);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestEncode,The following statement contains a magic number: hash = GeohashUtils.EncodeLatLon(57.64911' 10.40744);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodePreciseLongitudeLatitude,The following statement contains a magic number: string hash = GeohashUtils.EncodeLatLon(52.3738007' 4.8909347);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodePreciseLongitudeLatitude,The following statement contains a magic number: string hash = GeohashUtils.EncodeLatLon(52.3738007' 4.8909347);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodePreciseLongitudeLatitude,The following statement contains a magic number: CustomAssert.EqualWithDelta(52.3738007' point.Y' 0.00001D);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodePreciseLongitudeLatitude,The following statement contains a magic number: CustomAssert.EqualWithDelta(52.3738007' point.Y' 0.00001D);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodePreciseLongitudeLatitude,The following statement contains a magic number: CustomAssert.EqualWithDelta(4.8909347' point.X' 0.00001D);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodePreciseLongitudeLatitude,The following statement contains a magic number: CustomAssert.EqualWithDelta(4.8909347' point.X' 0.00001D);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeImpreciseLongitudeLatitude,The following statement contains a magic number: string hash = GeohashUtils.EncodeLatLon(84.6' 10.5);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeImpreciseLongitudeLatitude,The following statement contains a magic number: string hash = GeohashUtils.EncodeLatLon(84.6' 10.5);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeImpreciseLongitudeLatitude,The following statement contains a magic number: CustomAssert.EqualWithDelta(84.6' point.Y' 0.00001D);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeImpreciseLongitudeLatitude,The following statement contains a magic number: CustomAssert.EqualWithDelta(84.6' point.Y' 0.00001D);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeImpreciseLongitudeLatitude,The following statement contains a magic number: CustomAssert.EqualWithDelta(10.5' point.X' 0.00001D);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeImpreciseLongitudeLatitude,The following statement contains a magic number: CustomAssert.EqualWithDelta(10.5' point.X' 0.00001D);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeEncode,The following statement contains a magic number: Assert.Equal(geoHash' GeohashUtils.EncodeLatLon(52.3738007' 4.8909347));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeEncode,The following statement contains a magic number: Assert.Equal(geoHash' GeohashUtils.EncodeLatLon(52.3738007' 4.8909347));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeEncode,The following statement contains a magic number: CustomAssert.EqualWithDelta(52.37380061d' point.Y' 0.000001d);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeEncode,The following statement contains a magic number: CustomAssert.EqualWithDelta(52.37380061d' point.Y' 0.000001d);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeEncode,The following statement contains a magic number: CustomAssert.EqualWithDelta(4.8909343d' point.X' 0.000001d);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeEncode,The following statement contains a magic number: CustomAssert.EqualWithDelta(4.8909343d' point.X' 0.000001d);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeEncode,The following statement contains a magic number: CustomAssert.EqualWithDelta(point.Y' point2.Y' 0.000001d);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestDecodeEncode,The following statement contains a magic number: CustomAssert.EqualWithDelta(point.X' point2.X' 0.000001d);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestHashLenToWidth,The following statement contains a magic number: double[] boxOdd = GeohashUtils.LookupDegreesSizeForHashLen(3);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestHashLenToWidth,The following statement contains a magic number: CustomAssert.EqualWithDelta(1.40625' boxOdd[0]' 0.0001);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestHashLenToWidth,The following statement contains a magic number: CustomAssert.EqualWithDelta(1.40625' boxOdd[0]' 0.0001);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestHashLenToWidth,The following statement contains a magic number: CustomAssert.EqualWithDelta(1.40625' boxOdd[1]' 0.0001);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestHashLenToWidth,The following statement contains a magic number: CustomAssert.EqualWithDelta(1.40625' boxOdd[1]' 0.0001);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestHashLenToWidth,The following statement contains a magic number: double[] boxEven = GeohashUtils.LookupDegreesSizeForHashLen(4);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestHashLenToWidth,The following statement contains a magic number: CustomAssert.EqualWithDelta(0.1757' boxEven[0]' 0.0001);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestHashLenToWidth,The following statement contains a magic number: CustomAssert.EqualWithDelta(0.1757' boxEven[0]' 0.0001);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestHashLenToWidth,The following statement contains a magic number: CustomAssert.EqualWithDelta(0.3515' boxEven[1]' 0.0001);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestHashLenToWidth,The following statement contains a magic number: CustomAssert.EqualWithDelta(0.3515' boxEven[1]' 0.0001);
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(1' GeohashUtils.LookupHashLenForWidthHeight(999' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(1' GeohashUtils.LookupHashLenForWidthHeight(999' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(1' GeohashUtils.LookupHashLenForWidthHeight(999' 46));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(1' GeohashUtils.LookupHashLenForWidthHeight(999' 46));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(1' GeohashUtils.LookupHashLenForWidthHeight(46' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(1' GeohashUtils.LookupHashLenForWidthHeight(46' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(2' GeohashUtils.LookupHashLenForWidthHeight(44' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(2' GeohashUtils.LookupHashLenForWidthHeight(44' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(2' GeohashUtils.LookupHashLenForWidthHeight(44' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(2' GeohashUtils.LookupHashLenForWidthHeight(999' 44));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(2' GeohashUtils.LookupHashLenForWidthHeight(999' 44));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(2' GeohashUtils.LookupHashLenForWidthHeight(999' 44));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(2' GeohashUtils.LookupHashLenForWidthHeight(999' 5.7));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(2' GeohashUtils.LookupHashLenForWidthHeight(999' 5.7));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(2' GeohashUtils.LookupHashLenForWidthHeight(999' 5.7));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(2' GeohashUtils.LookupHashLenForWidthHeight(11.3' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(2' GeohashUtils.LookupHashLenForWidthHeight(11.3' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(2' GeohashUtils.LookupHashLenForWidthHeight(11.3' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(3' GeohashUtils.LookupHashLenForWidthHeight(999' 5.5));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(3' GeohashUtils.LookupHashLenForWidthHeight(999' 5.5));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(3' GeohashUtils.LookupHashLenForWidthHeight(999' 5.5));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(3' GeohashUtils.LookupHashLenForWidthHeight(11.1' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(3' GeohashUtils.LookupHashLenForWidthHeight(11.1' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(3' GeohashUtils.LookupHashLenForWidthHeight(11.1' 999));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(GeohashUtils.MAX_PRECISION' GeohashUtils.LookupHashLenForWidthHeight(10e-20' 10e-20));
Magic Number,Spatial4n.Core.Util,TestGeohashUtils,D:\research\architectureSmells\repos1\synhershko_Spatial4n\Spatial4n.Tests\util\TestGeohashUtils.cs,TestLookupHashLenForWidthHeight,The following statement contains a magic number: Assert.Equal(GeohashUtils.MAX_PRECISION' GeohashUtils.LookupHashLenForWidthHeight(10e-20' 10e-20));
