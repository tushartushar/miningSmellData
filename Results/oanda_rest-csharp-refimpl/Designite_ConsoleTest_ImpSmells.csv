Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,RunTest,Cyclomatic complexity of the method is 9
Long Statement,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,RunPositionsTest,The length of the statement  "				_results.Verify(closePositionResponse.ids.Count > 0 && closePositionResponse.instrument == TestInstrument' "Position closed"); " is 126.
Long Statement,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,RunPositionsTest,The length of the statement  "				_results.Verify(closePositionResponse.totalUnits > 0 && closePositionResponse.price > 0' "Position close response seems valid"); " is 128.
Long Statement,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,RunOrdersTest,The length of the statement  "			_results.Verify(patchResponse.id > 0 && patchResponse.id == orders[0].id && patchResponse.units.ToString() == request["units"]' "Order patched"); " is 145.
Long Statement,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,VerifyAllData,The length of the statement  "			var fields = entry.GetType().GetTypeInfo().DeclaredFields.Where(x => x.Name.StartsWith("Has") && x.FieldType == typeof (bool)); " is 127.
Long Statement,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,VerifyDefaultData,The length of the statement  "			var fields = entry.GetType().GetTypeInfo().DeclaredFields.Where(x => x.Name.StartsWith("Has") && x.FieldType == typeof(bool)); " is 126.
Magic Number,ConsoleTest.Testing,CandlesTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\CandlesTest.cs,Run,The following statement contains a magic number: TestCount(request' 5000' false' "Retrieved max candles");
Magic Number,ConsoleTest.Testing,CandlesTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\CandlesTest.cs,Run,The following statement contains a magic number: TestCount(request' 5001' true' "Exceeded max candles");
Magic Number,ConsoleTest.Testing,LabsTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\LabsTest.cs,RunOrderbookTest,The following statement contains a magic number: var orderbookData = await Rest.GetOrderbookData("EUR_USD"' 604800);
Magic Number,ConsoleTest.Testing,LabsTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\LabsTest.cs,RunSpreadsTest,The following statement contains a magic number: var spreadsData = await Rest.GetSpreadData("EUR_USD"' 2592000);
Magic Number,ConsoleTest.Testing,LabsTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\LabsTest.cs,RunHistoricalPositionRatioTest,The following statement contains a magic number: var hprData = await Rest.GetHistoricalPostionRatioData("EUR_USD"' 2592000);
Magic Number,ConsoleTest.Testing,LabsTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\LabsTest.cs,RunCalendarTest,The following statement contains a magic number: var calendarEvents = await Rest.GetCalendarData("EUR_USD"' 2592000);
Magic Number,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,RunStreamingNotificationsTest,The following statement contains a magic number: _eventReceived = new Semaphore(0' 100);
Magic Number,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,RunStreamingNotificationsTest,The following statement contains a magic number: return Task.Run(() =>  				{  					bool success = _eventReceived.WaitOne(10000);  					session.StopSession();  					_results.Verify(success' "Streaming events successfully received");  				}  			);
Magic Number,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,RunStreamingRatesTest,The following statement contains a magic number: _tickReceived = new Semaphore(0' 100);
Magic Number,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,RunStreamingRatesTest,The following statement contains a magic number: bool success = _tickReceived.WaitOne(10000);
Magic Number,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,RunTransactionsTest,The following statement contains a magic number: _results.Verify(result.Count == 500' "Recent transactions retrieved");
Magic Number,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,RunTradesTest,The following statement contains a magic number: _results.Verify(modifiedDetails.id > 0 && Math.Abs(modifiedDetails.stopLoss - 0.4) < float.Epsilon' "Trade modified");
Magic Number,ConsoleTest.Testing,RestTest,C:\research\architectureSmells\repos\oanda_rest-csharp-refimpl\Reference Implementation\ConsoleTest\Testing\RestTest.cs,RunOrdersTest,The following statement contains a magic number: request["units"] += 10;
