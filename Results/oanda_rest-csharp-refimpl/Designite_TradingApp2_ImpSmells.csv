Implementation smell,Namespace,Class,File,Method,Description
Long Method,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The method has 293 lines of code.
Long Method,TradingApp2.Data,SampleDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,SampleDataSource,The method has 333 lines of code.
Complex Method,TradingApp2.Common,RichTextColumns,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\Common\RichTextColumns.cs,MeasureOverride,Cyclomatic complexity of the method is 8
Long Parameter List,TradingApp2.Data,DataCommon,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,DataCommon,The method has 5 parameters. Parameters: uniqueId' title' subtitle' imagePath' description
Long Parameter List,TradingApp2.Data,DataItem,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,DataItem,The method has 7 parameters. Parameters: uniqueId' title' subtitle' imagePath' description' content' group
Long Parameter List,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,DataGroup,The method has 5 parameters. Parameters: uniqueId' title' subtitle' imagePath' description
Long Parameter List,TradingApp2.Data,HistoryDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,HistoryDataGroup,The method has 6 parameters. Parameters: uniqueId' title' subtitle' imagePath' description' maxEntries
Long Parameter List,TradingApp2.Data,RatesGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,RatesGroup,The method has 6 parameters. Parameters: uniqueId' title' subtitle' imagePath' description' source
Long Parameter List,TradingApp2.Data,SampleDataCommon,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,SampleDataCommon,The method has 5 parameters. Parameters: uniqueId' title' subtitle' imagePath' description
Long Parameter List,TradingApp2.Data,SampleDataItem,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,SampleDataItem,The method has 7 parameters. Parameters: uniqueId' title' subtitle' imagePath' description' content' group
Long Parameter List,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,SampleDataGroup,The method has 5 parameters. Parameters: uniqueId' title' subtitle' imagePath' description
Long Statement,TradingApp2,App,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\App.xaml.cs,PerformOauth,The length of the statement  "			//String GoogleURL = "https://accounts.google.com/o/oauth2/auth?client_id=" + Uri.EscapeDataString(GoogleClientID.Text) + "&redirect_uri=" + Uri.EscapeDataString(GoogleCallbackUrl.Text) + "&response_type=code&scope=" + Uri.EscapeDataString("http://picasaweb.google.com/data"); " is 276.
Long Statement,TradingApp2.Common,SuspensionManager,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "                StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync(sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 140.
Long Statement,TradingApp2.Common,SuspensionManager,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "                throw new InvalidOperationException("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 138.
Long Statement,TradingApp2.DataModel.DataModels,OrderPatchViewModel,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\DataModels\OrderPostViewModel.cs,MakeRequest,The length of the statement  "			await InternalMakeRequest(() => OANDARestLibrary.Rest.PatchOrderAsync(AccountDataSource.DefaultDataSource.Id' RequestHelpers.lastOrderId' requestParams)); " is 154.
Long Statement,TradingApp2.DataModel.DataModels,OrderDeleteViewModel,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\DataModels\OrderPostViewModel.cs,MakeRequest,The length of the statement  "			await InternalMakeRequest(() => OANDARestLibrary.Rest.DeleteOrderAsync(AccountDataSource.DefaultDataSource.Id' RequestHelpers.lastOrderId)); " is 140.
Long Statement,TradingApp2.DataModel.DataModels,TradePatchViewModel,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\DataModels\OrderPostViewModel.cs,MakeRequest,The length of the statement  "			await InternalMakeRequest(() => OANDARestLibrary.Rest.PatchTradeAsync(AccountDataSource.DefaultDataSource.Id' RequestHelpers.lastTradeId' requestParams)); " is 154.
Long Statement,TradingApp2.DataModel.DataModels,TradeDeleteViewModel,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\DataModels\OrderPostViewModel.cs,MakeRequest,The length of the statement  "			await InternalMakeRequest(() => OANDARestLibrary.Rest.DeleteTradeAsync(AccountDataSource.DefaultDataSource.Id' RequestHelpers.lastTradeId)); " is 140.
Long Statement,TradingApp2.DataModel.DataModels,PositionDeleteViewModel,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\DataModels\OrderPostViewModel.cs,MakeRequest,The length of the statement  "			await InternalMakeRequest(() => OANDARestLibrary.Rest.DeletePositionAsync(AccountDataSource.DefaultDataSource.Id' requestParams["instrument"])); " is 144.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,GetGroups,The length of the statement  "            if (!uniqueId.Equals("AllGroups")) throw new ArgumentException("Only 'AllGroups' is supported as a collection of groups"); " is 122.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,GetItem,The length of the statement  "			var matches = DefaultDataSource.AllGroups.SelectMany(group => group.Items).Where((item) => item.UniqueId.Equals(uniqueId)); " is 123.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "						"Curabitur class aliquam vestibulum nam curae maecenas sed integer cras phasellus suspendisse quisque donec dis praesent accumsan bibendum pellentesque condimentum adipiscing etiam consequat vivamus dictumst aliquam duis convallis scelerisque est parturient ullamcorper aliquet fusce suspendisse nunc hac eleifend amet blandit facilisi condimentum commodo scelerisque faucibus aenean ullamcorper ante mauris dignissim consectetuer nullam lorem vestibulum habitant conubia elementum pellentesque morbi facilisis arcu sollicitudin diam cubilia aptent vestibulum auctor eget dapibus pellentesque inceptos leo egestas interdum nulla consectetuer suspendisse adipiscing pellentesque proin lobortis sollicitudin augue elit mus congue fermentum parturient fringilla euismod feugiat"); " is 777.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Group Description: Lorem ipsum dolor sit amet' consectetur adipiscing elit. Vivamus tempor scelerisque lorem in vehicula. Aliquam tincidunt' lacus ut sagittis tristique' turpis massa volutpat augue' eu rutrum ligula ante a ante"); " is 231.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Group Description: Lorem ipsum dolor sit amet' consectetur adipiscing elit. Vivamus tempor scelerisque lorem in vehicula. Aliquam tincidunt' lacus ut sagittis tristique' turpis massa volutpat augue' eu rutrum ligula ante a ante"); " is 231.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Group Description: Lorem ipsum dolor sit amet' consectetur adipiscing elit. Vivamus tempor scelerisque lorem in vehicula. Aliquam tincidunt' lacus ut sagittis tristique' turpis massa volutpat augue' eu rutrum ligula ante a ante"); " is 231.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Group Description: Lorem ipsum dolor sit amet' consectetur adipiscing elit. Vivamus tempor scelerisque lorem in vehicula. Aliquam tincidunt' lacus ut sagittis tristique' turpis massa volutpat augue' eu rutrum ligula ante a ante"); " is 231.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Group Description: Lorem ipsum dolor sit amet' consectetur adipiscing elit. Vivamus tempor scelerisque lorem in vehicula. Aliquam tincidunt' lacus ut sagittis tristique' turpis massa volutpat augue' eu rutrum ligula ante a ante"' " is 230.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The length of the statement  "					"Item Description: Pellentesque porta' mauris quis interdum vehicula' urna sapien ultrices velit' nec venenatis dui odio in augue. Cras posuere' enim a cursus convallis' neque turpis malesuada erat' ut adipiscing neque tortor ac erat."' " is 236.
Long Statement,TradingApp2.Data,SampleDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,GetGroups,The length of the statement  "            if (!uniqueId.Equals("AllGroups")) throw new ArgumentException("Only 'AllGroups' is supported as a collection of groups"); " is 122.
Long Statement,TradingApp2.Data,SampleDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,GetItem,The length of the statement  "            var matches = _sampleDataSource.AllGroups.SelectMany(group => group.Items).Where((item) => item.UniqueId.Equals(uniqueId)); " is 123.
Complex Conditional,TradingApp2.Common,LayoutAwarePage,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,TradingApp2.Common,LayoutAwarePage,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,TradingApp2.Common,LayoutAwarePage,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Empty Catch Block,TradingApp2,App,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\App.xaml.cs,OnLaunched,The method has an empty catch block.
Magic Number,TradingApp2,InputSplitPage,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\InputSplitPage.xaml.cs,DetermineVisualState,The following statement contains a magic number: if (viewState == ApplicationViewState.Filled ||                  viewState == ApplicationViewState.FullScreenLandscape)              {                  var windowWidth = Window.Current.Bounds.Width;                  if (windowWidth >= 1366) return "FullScreenLandscapeOrWide";                  return "FilledOrNarrow";              }
Magic Number,TradingApp2,SplitPage,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\SplitPage.xaml.cs,DetermineVisualState,The following statement contains a magic number: if (viewState == ApplicationViewState.Filled ||                  viewState == ApplicationViewState.FullScreenLandscape)              {                  var windowWidth = Window.Current.Bounds.Width;                  if (windowWidth >= 1366) return "FullScreenLandscapeOrWide";                  return "FilledOrNarrow";              }
Magic Number,TradingApp2.Common,LayoutAwarePage,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,TradingApp2.Common,LayoutAwarePage,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,TradingApp2.Common,LayoutAwarePage,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,TradingApp2.Common,LayoutAwarePage,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,AccountDataSource,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,InitSampleContent,The following statement contains a magic number: var group7 = new HistoryDataGroup("Activity"'  					"Activity"'  					"Recent Account Activity"'  					"Assets/icon_activity.png"'  					"Group Description: Lorem ipsum dolor sit amet' consectetur adipiscing elit. Vivamus tempor scelerisque lorem in vehicula. Aliquam tincidunt' lacus ut sagittis tristique' turpis massa volutpat augue' eu rutrum ligula ante a ante"'  					100);
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Magic Number,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Missing Default,TradingApp2.Data,DataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\AccountDataSource.cs,ItemsCollectionChanged,The following switch statement is missing a default case: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
Missing Default,TradingApp2.Data,SampleDataGroup,C:\repos\oanda_rest-csharp-refimpl\Reference Implementation\TradingApp2\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following switch statement is missing a default case: switch (e.Action)              {                  case NotifyCollectionChangedAction.Add:                      if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex'Items[e.NewStartingIndex]);                          if (TopItems.Count > 12)                          {                              TopItems.RemoveAt(12);                          }                      }                      break;                  case NotifyCollectionChangedAction.Move:                      if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12)                      {                          TopItems.Move(e.OldStartingIndex' e.NewStartingIndex);                      }                      else if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          TopItems.Add(Items[11]);                      }                      else if (e.NewStartingIndex < 12)                      {                          TopItems.Insert(e.NewStartingIndex' Items[e.NewStartingIndex]);                          TopItems.RemoveAt(12);                      }                      break;                  case NotifyCollectionChangedAction.Remove:                      if (e.OldStartingIndex < 12)                      {                          TopItems.RemoveAt(e.OldStartingIndex);                          if (Items.Count >= 12)                          {                              TopItems.Add(Items[11]);                          }                      }                      break;                  case NotifyCollectionChangedAction.Replace:                      if (e.OldStartingIndex < 12)                      {                          TopItems[e.OldStartingIndex] = Items[e.OldStartingIndex];                      }                      break;                  case NotifyCollectionChangedAction.Reset:                      TopItems.Clear();                      while (TopItems.Count < Items.Count && TopItems.Count < 12)                      {                          TopItems.Add(Items[TopItems.Count]);                      }                      break;              }
