Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ICCReader,TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetEntry,Cyclomatic complexity of the method is 29
Complex Method,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,Cyclomatic complexity of the method is 20
Complex Method,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetValue_A_CLUT_M_Matrix_B,Cyclomatic complexity of the method is 10
Complex Method,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetValue_B_Matrix_M_CLUT_A,Cyclomatic complexity of the method is 10
Complex Conditional,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetValue,The conditional expression  "ACurveOffset != 0 && CLUTOffset != 0 && MCurveOffset != 0 && MatrixOffset != 0 && BCurveOffset != 0"  is complex.
Complex Conditional,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetValue,The conditional expression  "ACurveOffset != 0 && CLUTOffset != 0 && MCurveOffset != 0 && MatrixOffset != 0 && BCurveOffset != 0"  is complex.
Complex Conditional,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The conditional expression  "type == 1 || type == 2 || type == 3 || type == 4"  is complex.
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: CMMType = Helper.GetASCIIString (4' 4);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: CMMType = Helper.GetASCIIString (4' 4);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: ProfileVersionNumber = new VersionNumber (ICCProfile.DataBytes [8]' ICCProfile.DataBytes [9]);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: ProfileVersionNumber = new VersionNumber (ICCProfile.DataBytes [8]' ICCProfile.DataBytes [9]);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: ProfileClass = (ProfileClassName)Helper.GetUInt32 (12);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: DataColorspace = (ColorSpaceType)Helper.GetUInt32 (16);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: PCS = (ColorSpaceType)Helper.GetUInt32 (20);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: CreationDate = Helper.GetDateTime (24);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: ProfileFileSignature = Helper.GetASCIIString (36' 4);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: ProfileFileSignature = Helper.GetASCIIString (36' 4);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: PrimaryPlatformSignature = (PrimaryPlatformName)Helper.GetUInt32 (40);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: ProfileFlags = new ProfileFlag (44);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: DeviceManufacturer = (TagSignature)Helper.GetUInt32 (48);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: DeviceModel = (TagSignature)Helper.GetUInt32 (52);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: DeviceAttributes = new DeviceAttribute (56);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: RenderingIntent = (RenderingIntentName)Helper.GetUInt16 (64);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: PCSIlluminant = new XYZnumber (68);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: ProfileCreatorSignature = Helper.GetUInt32 (64);  
Magic Number,ICCReader,ICCHeader,C:\repos\RedGlow_ColorWars\ICCReader\Header.cs,ICCHeader,The following statement contains a magic number: ProfileID = Helper.GetProfileID (84);  
Magic Number,ICCReader,MultiProcessElement,C:\repos\RedGlow_ColorWars\ICCReader\MultiProcessElement.cs,CreateElement,The following statement contains a magic number: return GetElement (t' idx + 12' InputChannelCount' OutputChannelCount);  
Magic Number,ICCReader,MatrixProcessElement,C:\repos\RedGlow_ColorWars\ICCReader\MultiProcessElement.cs,MatrixProcessElement,The following statement contains a magic number: MatrixOx1 = Helper.GetMatrix (OutputChannelCount' idx + (4 * InputChannelCount * OutputChannelCount)' true);  
Magic Number,ICCReader,CurveSetProcessElement,C:\repos\RedGlow_ColorWars\ICCReader\MultiProcessElement.cs,CurveSetProcessElement,The following statement contains a magic number: for (int i = 0; i < InputChannelCount; i++) {  	Curves [i] = new OneDimensionalCurve (end);  	end = Curves [i].end + Curves [i].end % 4;  }  
Magic Number,ICCReader,CurveSetProcessElement,C:\repos\RedGlow_ColorWars\ICCReader\MultiProcessElement.cs,CurveSetProcessElement,The following statement contains a magic number: end = Curves [i].end + Curves [i].end % 4;  
Magic Number,ICCReader,TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,CreateEntry,The following statement contains a magic number: return GetEntry (t' (int)entry.Offset + 8' header);  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: ColorantType = (ColorantEncoding)Helper.GetUInt16 (idx + 2);  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown && ChannelCount != 3) {  	throw new CorruptProfileException ("chromaticityTagDataEntry");  }  else if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown && ChannelCount != 3) {  	throw new CorruptProfileException ("chromaticityTagDataEntry");  }  else if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown && ChannelCount != 3) {  	throw new CorruptProfileException ("chromaticityTagDataEntry");  }  else if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown && ChannelCount != 3) {  	throw new CorruptProfileException ("chromaticityTagDataEntry");  }  else if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown && ChannelCount != 3) {  	throw new CorruptProfileException ("chromaticityTagDataEntry");  }  else if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown && ChannelCount != 3) {  	throw new CorruptProfileException ("chromaticityTagDataEntry");  }  else if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown && ChannelCount != 3) {  	throw new CorruptProfileException ("chromaticityTagDataEntry");  }  else if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: if (ColorantType != ColorantEncoding.Unknown) {  	ChannelValues = SetValues (ColorantType);  }  else {  	//CIE xy coordinate values of channel n  	ChannelValues = new double[ChannelCount][];  	int c = 0;  	int end = (idx + 4) + 8 * ChannelCount;  	for (int i = idx + 4; i < end; i += 8) {  		ChannelValues [c] = new double[2];  		//x value (4 bytes)  		ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  		//y value (4 bytes)  		ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  		c++;  	}  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 8) {  	ChannelValues [c] = new double[2];  	//x value (4 bytes)  	ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  	//y value (4 bytes)  	ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  	c++;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 8) {  	ChannelValues [c] = new double[2];  	//x value (4 bytes)  	ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  	//y value (4 bytes)  	ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  	c++;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 8) {  	ChannelValues [c] = new double[2];  	//x value (4 bytes)  	ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  	//y value (4 bytes)  	ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  	c++;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 8) {  	ChannelValues [c] = new double[2];  	//x value (4 bytes)  	ChannelValues [c] [0] = Helper.GetU16Fixed16Number (i);  	//y value (4 bytes)  	ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  	c++;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: i += 8
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: ChannelValues [c] = new double[2];  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,chromaticityTagDataEntry,The following statement contains a magic number: ChannelValues [c] [1] = Helper.GetU16Fixed16Number (i + 4);  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [0] = new double[2] {  	0.640'  	0.330  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [0] = new double[2] {  	0.640'  	0.330  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [0] = new double[2] {  	0.640'  	0.330  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [1] = new double[2] {  	0.290'  	0.600  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [1] = new double[2] {  	0.290'  	0.600  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [1] = new double[2] {  	0.290'  	0.600  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.150'  	0.060  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.150'  	0.060  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.150'  	0.060  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.150'  	0.060  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [0] = new double[2] {  	0.640'  	0.330  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [0] = new double[2] {  	0.640'  	0.330  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [0] = new double[2] {  	0.640'  	0.330  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [1] = new double[2] {  	0.300'  	0.600  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [1] = new double[2] {  	0.300'  	0.600  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [1] = new double[2] {  	0.300'  	0.600  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.150'  	0.060  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.150'  	0.060  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.150'  	0.060  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.150'  	0.060  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [0] = new double[2] {  	0.625'  	0.340  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [0] = new double[2] {  	0.625'  	0.340  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [0] = new double[2] {  	0.625'  	0.340  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [1] = new double[2] {  	0.280'  	0.605  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [1] = new double[2] {  	0.280'  	0.605  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [1] = new double[2] {  	0.280'  	0.605  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.155'  	0.070  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.155'  	0.070  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.155'  	0.070  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.155'  	0.070  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [0] = new double[2] {  	0.630'  	0.340  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [0] = new double[2] {  	0.630'  	0.340  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [0] = new double[2] {  	0.630'  	0.340  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [1] = new double[2] {  	0.310'  	0.595  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [1] = new double[2] {  	0.310'  	0.595  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [1] = new double[2] {  	0.310'  	0.595  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.155'  	0.070  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.155'  	0.070  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.155'  	0.070  };  
Magic Number,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following statement contains a magic number: tmp [2] = new double[2] {  	0.155'  	0.070  };  
Magic Number,ICCReader,colorantOrderTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,colorantOrderTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < idx + 4 + ColorantCount; i++) {  	ColorantNumber [c] = ICCProfile.DataBytes [i];  	c++;  }  
Magic Number,ICCReader,colorantOrderTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,colorantOrderTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < idx + 4 + ColorantCount; i++) {  	ColorantNumber [c] = ICCProfile.DataBytes [i];  	c++;  }  
Magic Number,ICCReader,colorantTableTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,colorantTableTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i++) {  	//Colorant name (32 bytes)  	string name = Helper.GetASCIIString (i' 32);  	//PCS values (6 bytes (2 bytes each))  	ushort pcs1 = Helper.GetUInt16 (i + 32);  	ushort pcs2 = Helper.GetUInt16 (i + 34);  	ushort pcs3 = Helper.GetUInt16 (i + 36);  	ColorantData [c] = new ColorantDataEntry (name' new ushort[] {  		pcs1'  		pcs2'  		pcs3  	});  	c++;  }  
Magic Number,ICCReader,colorantTableTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,colorantTableTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i++) {  	//Colorant name (32 bytes)  	string name = Helper.GetASCIIString (i' 32);  	//PCS values (6 bytes (2 bytes each))  	ushort pcs1 = Helper.GetUInt16 (i + 32);  	ushort pcs2 = Helper.GetUInt16 (i + 34);  	ushort pcs3 = Helper.GetUInt16 (i + 36);  	ColorantData [c] = new ColorantDataEntry (name' new ushort[] {  		pcs1'  		pcs2'  		pcs3  	});  	c++;  }  
Magic Number,ICCReader,colorantTableTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,colorantTableTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i++) {  	//Colorant name (32 bytes)  	string name = Helper.GetASCIIString (i' 32);  	//PCS values (6 bytes (2 bytes each))  	ushort pcs1 = Helper.GetUInt16 (i + 32);  	ushort pcs2 = Helper.GetUInt16 (i + 34);  	ushort pcs3 = Helper.GetUInt16 (i + 36);  	ColorantData [c] = new ColorantDataEntry (name' new ushort[] {  		pcs1'  		pcs2'  		pcs3  	});  	c++;  }  
Magic Number,ICCReader,colorantTableTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,colorantTableTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i++) {  	//Colorant name (32 bytes)  	string name = Helper.GetASCIIString (i' 32);  	//PCS values (6 bytes (2 bytes each))  	ushort pcs1 = Helper.GetUInt16 (i + 32);  	ushort pcs2 = Helper.GetUInt16 (i + 34);  	ushort pcs3 = Helper.GetUInt16 (i + 36);  	ColorantData [c] = new ColorantDataEntry (name' new ushort[] {  		pcs1'  		pcs2'  		pcs3  	});  	c++;  }  
Magic Number,ICCReader,colorantTableTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,colorantTableTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i++) {  	//Colorant name (32 bytes)  	string name = Helper.GetASCIIString (i' 32);  	//PCS values (6 bytes (2 bytes each))  	ushort pcs1 = Helper.GetUInt16 (i + 32);  	ushort pcs2 = Helper.GetUInt16 (i + 34);  	ushort pcs3 = Helper.GetUInt16 (i + 36);  	ColorantData [c] = new ColorantDataEntry (name' new ushort[] {  		pcs1'  		pcs2'  		pcs3  	});  	c++;  }  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: if (CurvePointCount == 1) {  	CurveData [0] = Helper.GetU8Fixed8Number (idx + 4);  	end = idx + 6;  }  else {  	int c = 0;  	end = (idx + 4) + (int)CurvePointCount * 2;  	for (int i = idx + 4; i < end; i += 2) {  		CurveData [c] = Helper.GetUInt16 (i) / 65535d;  		c++;  	}  }  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: if (CurvePointCount == 1) {  	CurveData [0] = Helper.GetU8Fixed8Number (idx + 4);  	end = idx + 6;  }  else {  	int c = 0;  	end = (idx + 4) + (int)CurvePointCount * 2;  	for (int i = idx + 4; i < end; i += 2) {  		CurveData [c] = Helper.GetUInt16 (i) / 65535d;  		c++;  	}  }  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: if (CurvePointCount == 1) {  	CurveData [0] = Helper.GetU8Fixed8Number (idx + 4);  	end = idx + 6;  }  else {  	int c = 0;  	end = (idx + 4) + (int)CurvePointCount * 2;  	for (int i = idx + 4; i < end; i += 2) {  		CurveData [c] = Helper.GetUInt16 (i) / 65535d;  		c++;  	}  }  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: if (CurvePointCount == 1) {  	CurveData [0] = Helper.GetU8Fixed8Number (idx + 4);  	end = idx + 6;  }  else {  	int c = 0;  	end = (idx + 4) + (int)CurvePointCount * 2;  	for (int i = idx + 4; i < end; i += 2) {  		CurveData [c] = Helper.GetUInt16 (i) / 65535d;  		c++;  	}  }  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: if (CurvePointCount == 1) {  	CurveData [0] = Helper.GetU8Fixed8Number (idx + 4);  	end = idx + 6;  }  else {  	int c = 0;  	end = (idx + 4) + (int)CurvePointCount * 2;  	for (int i = idx + 4; i < end; i += 2) {  		CurveData [c] = Helper.GetUInt16 (i) / 65535d;  		c++;  	}  }  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: if (CurvePointCount == 1) {  	CurveData [0] = Helper.GetU8Fixed8Number (idx + 4);  	end = idx + 6;  }  else {  	int c = 0;  	end = (idx + 4) + (int)CurvePointCount * 2;  	for (int i = idx + 4; i < end; i += 2) {  		CurveData [c] = Helper.GetUInt16 (i) / 65535d;  		c++;  	}  }  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: CurveData [0] = Helper.GetU8Fixed8Number (idx + 4);  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: end = idx + 6;  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: end = (idx + 4) + (int)CurvePointCount * 2;  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: end = (idx + 4) + (int)CurvePointCount * 2;  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 2) {  	CurveData [c] = Helper.GetUInt16 (i) / 65535d;  	c++;  }  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 2) {  	CurveData [c] = Helper.GetUInt16 (i) / 65535d;  	c++;  }  
Magic Number,ICCReader,curveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,curveTagDataEntry,The following statement contains a magic number: i += 2
Magic Number,ICCReader,dataTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,dataTagDataEntry,The following statement contains a magic number: Data = new byte[size - 12];  
Magic Number,ICCReader,dataTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,dataTagDataEntry,The following statement contains a magic number: for (int i = 0; i < size - 12; i++) {  	Data [i] = ICCProfile.DataBytes [idx + 4 + i];  }  
Magic Number,ICCReader,dataTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,dataTagDataEntry,The following statement contains a magic number: for (int i = 0; i < size - 12; i++) {  	Data [i] = ICCProfile.DataBytes [idx + 4 + i];  }  
Magic Number,ICCReader,dataTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,dataTagDataEntry,The following statement contains a magic number: Data [i] = ICCProfile.DataBytes [idx + 4 + i];  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: CLUTGridPointCount = ICCProfile.DataBytes [idx + 2];  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: Matrix = Helper.GetMatrix (3' 3' idx + 4' false);  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: Matrix = Helper.GetMatrix (3' 3' idx + 4' false);  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: Matrix = Helper.GetMatrix (3' 3' idx + 4' false);  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: InputTableEntryCount = Helper.GetUInt16 (idx + 40);  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: OutputTableEntryCount = Helper.GetUInt16 (idx + 42);  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: for (int i = 0; i < InputChannelCount; i++) {  	InputValues [i] = new LUT16 (idx + 44 + c' InputTableEntryCount);  	c += InputTableEntryCount * 2;  }  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: for (int i = 0; i < InputChannelCount; i++) {  	InputValues [i] = new LUT16 (idx + 44 + c' InputTableEntryCount);  	c += InputTableEntryCount * 2;  }  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: InputValues [i] = new LUT16 (idx + 44 + c' InputTableEntryCount);  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: c += InputTableEntryCount * 2;  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	tmp [i] = CLUTGridPointCount;  }  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: CLUTValues = new CLUT16 (idx + 44 + c' InputChannelCount' OutputChannelCount' tmp);  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: for (int i = 0; i < OutputChannelCount; i++) {  	OutputValues [i] = new LUT16 (CLUTValues.end + c' OutputTableEntryCount);  	c += OutputTableEntryCount * 2;  }  
Magic Number,ICCReader,lut16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut16TagDataEntry,The following statement contains a magic number: c += OutputTableEntryCount * 2;  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: CLUTGridPointCount = ICCProfile.DataBytes [idx + 2];  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: Matrix = Helper.GetMatrix (3' 3' idx + 4' false);  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: Matrix = Helper.GetMatrix (3' 3' idx + 4' false);  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: Matrix = Helper.GetMatrix (3' 3' idx + 4' false);  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: for (int i = 0; i < InputChannelCount; i++) {  	InputValues [i] = new LUT8 (idx + 40 + c);  	c += 256;  }  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: for (int i = 0; i < InputChannelCount; i++) {  	InputValues [i] = new LUT8 (idx + 40 + c);  	c += 256;  }  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: InputValues [i] = new LUT8 (idx + 40 + c);  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: c += 256;  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	tmp [i] = CLUTGridPointCount;  }  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: CLUTValues = new CLUT8 (idx + 40 + (256 * InputChannelCount)' InputChannelCount' OutputChannelCount' tmp);  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: CLUTValues = new CLUT8 (idx + 40 + (256 * InputChannelCount)' InputChannelCount' OutputChannelCount' tmp);  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: for (int i = 0; i < OutputChannelCount; i++) {  	OutputValues [i] = new LUT8 (CLUTValues.end + c);  	c += 256;  }  
Magic Number,ICCReader,lut8TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lut8TagDataEntry,The following statement contains a magic number: c += 256;  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: BCurveOffset = (int)Helper.GetUInt32 (idx + 4);  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: MatrixOffset = (int)Helper.GetUInt32 (idx + 8);  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: MCurveOffset = (int)Helper.GetUInt32 (idx + 12);  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: CLUTOffset = (int)Helper.GetUInt32 (idx + 16);  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: ACurveOffset = (int)Helper.GetUInt32 (idx + 20);  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: if (CLUTOffset != 0) {  	CLUTValues = CLUT.GetCLUT (idx - 8 + CLUTOffset' false' InputChannelCount' OutputChannelCount);  }  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: CLUTValues = CLUT.GetCLUT (idx - 8 + CLUTOffset' false' InputChannelCount' OutputChannelCount);  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: if (MatrixOffset != 0) {  	int i = MatrixOffset + idx - 8;  	//Matrix 3x3 (4 bytes each)  	Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  	//Matrix 3x1 (4 bytes each)  	Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  }  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: if (MatrixOffset != 0) {  	int i = MatrixOffset + idx - 8;  	//Matrix 3x3 (4 bytes each)  	Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  	//Matrix 3x1 (4 bytes each)  	Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  }  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: if (MatrixOffset != 0) {  	int i = MatrixOffset + idx - 8;  	//Matrix 3x3 (4 bytes each)  	Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  	//Matrix 3x1 (4 bytes each)  	Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  }  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: if (MatrixOffset != 0) {  	int i = MatrixOffset + idx - 8;  	//Matrix 3x3 (4 bytes each)  	Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  	//Matrix 3x1 (4 bytes each)  	Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  }  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: if (MatrixOffset != 0) {  	int i = MatrixOffset + idx - 8;  	//Matrix 3x3 (4 bytes each)  	Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  	//Matrix 3x1 (4 bytes each)  	Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  }  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutAToBTagDataEntry,The following statement contains a magic number: Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetCurve,The following statement contains a magic number: for (int i = 0; i < InputChannelCount; i++) {  	if (t == TypeSignature.curve) {  		data [i] = new curveTagDataEntry (end);  		end = ((curveTagDataEntry)data [i]).end;  	}  	else if (t == TypeSignature.parametricCurve) {  		data [i] = new parametricCurveTagDataEntry (idx);  		end = ((parametricCurveTagDataEntry)data [i]).end;  	}  	end += (end % 4) + 8;  }  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetCurve,The following statement contains a magic number: for (int i = 0; i < InputChannelCount; i++) {  	if (t == TypeSignature.curve) {  		data [i] = new curveTagDataEntry (end);  		end = ((curveTagDataEntry)data [i]).end;  	}  	else if (t == TypeSignature.parametricCurve) {  		data [i] = new parametricCurveTagDataEntry (idx);  		end = ((parametricCurveTagDataEntry)data [i]).end;  	}  	end += (end % 4) + 8;  }  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetCurve,The following statement contains a magic number: end += (end % 4) + 8;  
Magic Number,ICCReader,lutAToBTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetCurve,The following statement contains a magic number: end += (end % 4) + 8;  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: BCurveOffset = (int)Helper.GetUInt32 (idx + 4);  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: MatrixOffset = (int)Helper.GetUInt32 (idx + 8);  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: MCurveOffset = (int)Helper.GetUInt32 (idx + 12);  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: CLUTOffset = (int)Helper.GetUInt32 (idx + 16);  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: ACurveOffset = (int)Helper.GetUInt32 (idx + 20);  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: if (CLUTOffset != 0) {  	CLUTValues = CLUT.GetCLUT (idx - 8 + CLUTOffset' false' InputChannelCount' OutputChannelCount);  }  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: CLUTValues = CLUT.GetCLUT (idx - 8 + CLUTOffset' false' InputChannelCount' OutputChannelCount);  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: if (MatrixOffset != 0) {  	int i = MatrixOffset + idx - 8;  	//Matrix 3x3 (4 bytes each)  	Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  	//Matrix 3x1 (4 bytes each)  	Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  }  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: if (MatrixOffset != 0) {  	int i = MatrixOffset + idx - 8;  	//Matrix 3x3 (4 bytes each)  	Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  	//Matrix 3x1 (4 bytes each)  	Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  }  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: if (MatrixOffset != 0) {  	int i = MatrixOffset + idx - 8;  	//Matrix 3x3 (4 bytes each)  	Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  	//Matrix 3x1 (4 bytes each)  	Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  }  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: if (MatrixOffset != 0) {  	int i = MatrixOffset + idx - 8;  	//Matrix 3x3 (4 bytes each)  	Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  	//Matrix 3x1 (4 bytes each)  	Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  }  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: if (MatrixOffset != 0) {  	int i = MatrixOffset + idx - 8;  	//Matrix 3x3 (4 bytes each)  	Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  	//Matrix 3x1 (4 bytes each)  	Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  }  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: Matrix3x3 = Helper.GetMatrix (3' 3' i' false);  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,lutBToATagDataEntry,The following statement contains a magic number: Matrix3x1 = Helper.GetMatrix (3' i + 36' false);  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetCurve,The following statement contains a magic number: for (int i = 0; i < InputChannelCount; i++) {  	if (t == TypeSignature.curve) {  		data [i] = new curveTagDataEntry (end);  		end = ((curveTagDataEntry)data [i]).end;  	}  	else if (t == TypeSignature.parametricCurve) {  		data [i] = new parametricCurveTagDataEntry (idx);  		end = ((parametricCurveTagDataEntry)data [i]).end;  	}  	end += (end % 4) + 8;  }  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetCurve,The following statement contains a magic number: for (int i = 0; i < InputChannelCount; i++) {  	if (t == TypeSignature.curve) {  		data [i] = new curveTagDataEntry (end);  		end = ((curveTagDataEntry)data [i]).end;  	}  	else if (t == TypeSignature.parametricCurve) {  		data [i] = new parametricCurveTagDataEntry (idx);  		end = ((parametricCurveTagDataEntry)data [i]).end;  	}  	end += (end % 4) + 8;  }  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetCurve,The following statement contains a magic number: end += (end % 4) + 8;  
Magic Number,ICCReader,lutBToATagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,GetCurve,The following statement contains a magic number: end += (end % 4) + 8;  
Magic Number,ICCReader,measurementTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,measurementTagDataEntry,The following statement contains a magic number: XYZBacking = new XYZnumber (idx + 4);  
Magic Number,ICCReader,measurementTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,measurementTagDataEntry,The following statement contains a magic number: Geometry = (MeasurementGeometry)Helper.GetUInt32 (idx + 16);  
Magic Number,ICCReader,measurementTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,measurementTagDataEntry,The following statement contains a magic number: Flare = Helper.GetU16Fixed16Number (idx + 20);  
Magic Number,ICCReader,measurementTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,measurementTagDataEntry,The following statement contains a magic number: Illuminant = (StandardIlluminant)Helper.GetUInt32 (idx + 24);  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: if (!IsPlaceholder) {  	//Number of records (4 bytes)  	RecordCount = (int)Helper.GetUInt32 (idx);  	//Record size (has to be 12 as for V4.3) (4 bytes)  	RecordSize = (int)Helper.GetUInt32 (idx + 4);  	//Records  	LanguageCode = new string[RecordCount];  	CountryCode = new string[RecordCount];  	StringLength = new int[RecordCount];  	StringOffset = new int[RecordCount];  	int end = idx + 8 + RecordCount * RecordSize;  	int c = 0;  	for (int i = idx + 8; i < end; i += RecordSize) {  		//Language Code (2 bytes)  		LanguageCode [c] = Helper.GetASCIIString (i' 2);  		//Country Code (2 bytes)  		CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  		//Record string length (4 bytes)  		StringLength [c] = (int)Helper.GetUInt32 (i + 4);  		//Record offset (4 bytes)  		StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  		c++;  	}  	//The strings  	Text = new LocalizedString[RecordCount];  	for (int i = 0; i < RecordCount; i++) {  		Text [i] = new LocalizedString (LanguageCode [i]' CountryCode [i]' idx + StringOffset [i] - 8' StringLength [i]);  	}  	this.end = end + StringLength.Sum ();  }  else {  	this.end = idx;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: if (!IsPlaceholder) {  	//Number of records (4 bytes)  	RecordCount = (int)Helper.GetUInt32 (idx);  	//Record size (has to be 12 as for V4.3) (4 bytes)  	RecordSize = (int)Helper.GetUInt32 (idx + 4);  	//Records  	LanguageCode = new string[RecordCount];  	CountryCode = new string[RecordCount];  	StringLength = new int[RecordCount];  	StringOffset = new int[RecordCount];  	int end = idx + 8 + RecordCount * RecordSize;  	int c = 0;  	for (int i = idx + 8; i < end; i += RecordSize) {  		//Language Code (2 bytes)  		LanguageCode [c] = Helper.GetASCIIString (i' 2);  		//Country Code (2 bytes)  		CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  		//Record string length (4 bytes)  		StringLength [c] = (int)Helper.GetUInt32 (i + 4);  		//Record offset (4 bytes)  		StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  		c++;  	}  	//The strings  	Text = new LocalizedString[RecordCount];  	for (int i = 0; i < RecordCount; i++) {  		Text [i] = new LocalizedString (LanguageCode [i]' CountryCode [i]' idx + StringOffset [i] - 8' StringLength [i]);  	}  	this.end = end + StringLength.Sum ();  }  else {  	this.end = idx;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: if (!IsPlaceholder) {  	//Number of records (4 bytes)  	RecordCount = (int)Helper.GetUInt32 (idx);  	//Record size (has to be 12 as for V4.3) (4 bytes)  	RecordSize = (int)Helper.GetUInt32 (idx + 4);  	//Records  	LanguageCode = new string[RecordCount];  	CountryCode = new string[RecordCount];  	StringLength = new int[RecordCount];  	StringOffset = new int[RecordCount];  	int end = idx + 8 + RecordCount * RecordSize;  	int c = 0;  	for (int i = idx + 8; i < end; i += RecordSize) {  		//Language Code (2 bytes)  		LanguageCode [c] = Helper.GetASCIIString (i' 2);  		//Country Code (2 bytes)  		CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  		//Record string length (4 bytes)  		StringLength [c] = (int)Helper.GetUInt32 (i + 4);  		//Record offset (4 bytes)  		StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  		c++;  	}  	//The strings  	Text = new LocalizedString[RecordCount];  	for (int i = 0; i < RecordCount; i++) {  		Text [i] = new LocalizedString (LanguageCode [i]' CountryCode [i]' idx + StringOffset [i] - 8' StringLength [i]);  	}  	this.end = end + StringLength.Sum ();  }  else {  	this.end = idx;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: if (!IsPlaceholder) {  	//Number of records (4 bytes)  	RecordCount = (int)Helper.GetUInt32 (idx);  	//Record size (has to be 12 as for V4.3) (4 bytes)  	RecordSize = (int)Helper.GetUInt32 (idx + 4);  	//Records  	LanguageCode = new string[RecordCount];  	CountryCode = new string[RecordCount];  	StringLength = new int[RecordCount];  	StringOffset = new int[RecordCount];  	int end = idx + 8 + RecordCount * RecordSize;  	int c = 0;  	for (int i = idx + 8; i < end; i += RecordSize) {  		//Language Code (2 bytes)  		LanguageCode [c] = Helper.GetASCIIString (i' 2);  		//Country Code (2 bytes)  		CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  		//Record string length (4 bytes)  		StringLength [c] = (int)Helper.GetUInt32 (i + 4);  		//Record offset (4 bytes)  		StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  		c++;  	}  	//The strings  	Text = new LocalizedString[RecordCount];  	for (int i = 0; i < RecordCount; i++) {  		Text [i] = new LocalizedString (LanguageCode [i]' CountryCode [i]' idx + StringOffset [i] - 8' StringLength [i]);  	}  	this.end = end + StringLength.Sum ();  }  else {  	this.end = idx;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: if (!IsPlaceholder) {  	//Number of records (4 bytes)  	RecordCount = (int)Helper.GetUInt32 (idx);  	//Record size (has to be 12 as for V4.3) (4 bytes)  	RecordSize = (int)Helper.GetUInt32 (idx + 4);  	//Records  	LanguageCode = new string[RecordCount];  	CountryCode = new string[RecordCount];  	StringLength = new int[RecordCount];  	StringOffset = new int[RecordCount];  	int end = idx + 8 + RecordCount * RecordSize;  	int c = 0;  	for (int i = idx + 8; i < end; i += RecordSize) {  		//Language Code (2 bytes)  		LanguageCode [c] = Helper.GetASCIIString (i' 2);  		//Country Code (2 bytes)  		CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  		//Record string length (4 bytes)  		StringLength [c] = (int)Helper.GetUInt32 (i + 4);  		//Record offset (4 bytes)  		StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  		c++;  	}  	//The strings  	Text = new LocalizedString[RecordCount];  	for (int i = 0; i < RecordCount; i++) {  		Text [i] = new LocalizedString (LanguageCode [i]' CountryCode [i]' idx + StringOffset [i] - 8' StringLength [i]);  	}  	this.end = end + StringLength.Sum ();  }  else {  	this.end = idx;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: if (!IsPlaceholder) {  	//Number of records (4 bytes)  	RecordCount = (int)Helper.GetUInt32 (idx);  	//Record size (has to be 12 as for V4.3) (4 bytes)  	RecordSize = (int)Helper.GetUInt32 (idx + 4);  	//Records  	LanguageCode = new string[RecordCount];  	CountryCode = new string[RecordCount];  	StringLength = new int[RecordCount];  	StringOffset = new int[RecordCount];  	int end = idx + 8 + RecordCount * RecordSize;  	int c = 0;  	for (int i = idx + 8; i < end; i += RecordSize) {  		//Language Code (2 bytes)  		LanguageCode [c] = Helper.GetASCIIString (i' 2);  		//Country Code (2 bytes)  		CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  		//Record string length (4 bytes)  		StringLength [c] = (int)Helper.GetUInt32 (i + 4);  		//Record offset (4 bytes)  		StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  		c++;  	}  	//The strings  	Text = new LocalizedString[RecordCount];  	for (int i = 0; i < RecordCount; i++) {  		Text [i] = new LocalizedString (LanguageCode [i]' CountryCode [i]' idx + StringOffset [i] - 8' StringLength [i]);  	}  	this.end = end + StringLength.Sum ();  }  else {  	this.end = idx;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: if (!IsPlaceholder) {  	//Number of records (4 bytes)  	RecordCount = (int)Helper.GetUInt32 (idx);  	//Record size (has to be 12 as for V4.3) (4 bytes)  	RecordSize = (int)Helper.GetUInt32 (idx + 4);  	//Records  	LanguageCode = new string[RecordCount];  	CountryCode = new string[RecordCount];  	StringLength = new int[RecordCount];  	StringOffset = new int[RecordCount];  	int end = idx + 8 + RecordCount * RecordSize;  	int c = 0;  	for (int i = idx + 8; i < end; i += RecordSize) {  		//Language Code (2 bytes)  		LanguageCode [c] = Helper.GetASCIIString (i' 2);  		//Country Code (2 bytes)  		CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  		//Record string length (4 bytes)  		StringLength [c] = (int)Helper.GetUInt32 (i + 4);  		//Record offset (4 bytes)  		StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  		c++;  	}  	//The strings  	Text = new LocalizedString[RecordCount];  	for (int i = 0; i < RecordCount; i++) {  		Text [i] = new LocalizedString (LanguageCode [i]' CountryCode [i]' idx + StringOffset [i] - 8' StringLength [i]);  	}  	this.end = end + StringLength.Sum ();  }  else {  	this.end = idx;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: if (!IsPlaceholder) {  	//Number of records (4 bytes)  	RecordCount = (int)Helper.GetUInt32 (idx);  	//Record size (has to be 12 as for V4.3) (4 bytes)  	RecordSize = (int)Helper.GetUInt32 (idx + 4);  	//Records  	LanguageCode = new string[RecordCount];  	CountryCode = new string[RecordCount];  	StringLength = new int[RecordCount];  	StringOffset = new int[RecordCount];  	int end = idx + 8 + RecordCount * RecordSize;  	int c = 0;  	for (int i = idx + 8; i < end; i += RecordSize) {  		//Language Code (2 bytes)  		LanguageCode [c] = Helper.GetASCIIString (i' 2);  		//Country Code (2 bytes)  		CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  		//Record string length (4 bytes)  		StringLength [c] = (int)Helper.GetUInt32 (i + 4);  		//Record offset (4 bytes)  		StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  		c++;  	}  	//The strings  	Text = new LocalizedString[RecordCount];  	for (int i = 0; i < RecordCount; i++) {  		Text [i] = new LocalizedString (LanguageCode [i]' CountryCode [i]' idx + StringOffset [i] - 8' StringLength [i]);  	}  	this.end = end + StringLength.Sum ();  }  else {  	this.end = idx;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: if (!IsPlaceholder) {  	//Number of records (4 bytes)  	RecordCount = (int)Helper.GetUInt32 (idx);  	//Record size (has to be 12 as for V4.3) (4 bytes)  	RecordSize = (int)Helper.GetUInt32 (idx + 4);  	//Records  	LanguageCode = new string[RecordCount];  	CountryCode = new string[RecordCount];  	StringLength = new int[RecordCount];  	StringOffset = new int[RecordCount];  	int end = idx + 8 + RecordCount * RecordSize;  	int c = 0;  	for (int i = idx + 8; i < end; i += RecordSize) {  		//Language Code (2 bytes)  		LanguageCode [c] = Helper.GetASCIIString (i' 2);  		//Country Code (2 bytes)  		CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  		//Record string length (4 bytes)  		StringLength [c] = (int)Helper.GetUInt32 (i + 4);  		//Record offset (4 bytes)  		StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  		c++;  	}  	//The strings  	Text = new LocalizedString[RecordCount];  	for (int i = 0; i < RecordCount; i++) {  		Text [i] = new LocalizedString (LanguageCode [i]' CountryCode [i]' idx + StringOffset [i] - 8' StringLength [i]);  	}  	this.end = end + StringLength.Sum ();  }  else {  	this.end = idx;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: RecordSize = (int)Helper.GetUInt32 (idx + 4);  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: for (int i = idx + 8; i < end; i += RecordSize) {  	//Language Code (2 bytes)  	LanguageCode [c] = Helper.GetASCIIString (i' 2);  	//Country Code (2 bytes)  	CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  	//Record string length (4 bytes)  	StringLength [c] = (int)Helper.GetUInt32 (i + 4);  	//Record offset (4 bytes)  	StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  	c++;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: for (int i = idx + 8; i < end; i += RecordSize) {  	//Language Code (2 bytes)  	LanguageCode [c] = Helper.GetASCIIString (i' 2);  	//Country Code (2 bytes)  	CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  	//Record string length (4 bytes)  	StringLength [c] = (int)Helper.GetUInt32 (i + 4);  	//Record offset (4 bytes)  	StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  	c++;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: for (int i = idx + 8; i < end; i += RecordSize) {  	//Language Code (2 bytes)  	LanguageCode [c] = Helper.GetASCIIString (i' 2);  	//Country Code (2 bytes)  	CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  	//Record string length (4 bytes)  	StringLength [c] = (int)Helper.GetUInt32 (i + 4);  	//Record offset (4 bytes)  	StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  	c++;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: for (int i = idx + 8; i < end; i += RecordSize) {  	//Language Code (2 bytes)  	LanguageCode [c] = Helper.GetASCIIString (i' 2);  	//Country Code (2 bytes)  	CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  	//Record string length (4 bytes)  	StringLength [c] = (int)Helper.GetUInt32 (i + 4);  	//Record offset (4 bytes)  	StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  	c++;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: for (int i = idx + 8; i < end; i += RecordSize) {  	//Language Code (2 bytes)  	LanguageCode [c] = Helper.GetASCIIString (i' 2);  	//Country Code (2 bytes)  	CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  	//Record string length (4 bytes)  	StringLength [c] = (int)Helper.GetUInt32 (i + 4);  	//Record offset (4 bytes)  	StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  	c++;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: for (int i = idx + 8; i < end; i += RecordSize) {  	//Language Code (2 bytes)  	LanguageCode [c] = Helper.GetASCIIString (i' 2);  	//Country Code (2 bytes)  	CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  	//Record string length (4 bytes)  	StringLength [c] = (int)Helper.GetUInt32 (i + 4);  	//Record offset (4 bytes)  	StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  	c++;  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: LanguageCode [c] = Helper.GetASCIIString (i' 2);  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: CountryCode [c] = Helper.GetASCIIString (i + 2' 2);  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: StringLength [c] = (int)Helper.GetUInt32 (i + 4);  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: StringOffset [c] = (int)Helper.GetUInt32 (i + 8);  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: for (int i = 0; i < RecordCount; i++) {  	Text [i] = new LocalizedString (LanguageCode [i]' CountryCode [i]' idx + StringOffset [i] - 8' StringLength [i]);  }  
Magic Number,ICCReader,multiLocalizedUnicodeTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiLocalizedUnicodeTagDataEntry,The following statement contains a magic number: Text [i] = new LocalizedString (LanguageCode [i]' CountryCode [i]' idx + StringOffset [i] - 8' StringLength [i]);  
Magic Number,ICCReader,multiProcessElementsTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiProcessElementsTagDataEntry,The following statement contains a magic number: OutputChannelCount = Helper.GetUInt16 (idx + 2);  
Magic Number,ICCReader,multiProcessElementsTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiProcessElementsTagDataEntry,The following statement contains a magic number: ProcessingElementCount = (int)Helper.GetUInt32 (idx + 4);  
Magic Number,ICCReader,multiProcessElementsTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiProcessElementsTagDataEntry,The following statement contains a magic number: for (int i = idx + 8; i < end; i += 8) {  	PositionTable [c] = new PositionNumber (i);  	c++;  }  
Magic Number,ICCReader,multiProcessElementsTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiProcessElementsTagDataEntry,The following statement contains a magic number: for (int i = idx + 8; i < end; i += 8) {  	PositionTable [c] = new PositionNumber (i);  	c++;  }  
Magic Number,ICCReader,multiProcessElementsTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,multiProcessElementsTagDataEntry,The following statement contains a magic number: i += 8
Magic Number,ICCReader,namedColor2TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,namedColor2TagDataEntry,The following statement contains a magic number: VendorFlag = new byte[] {  	ICCProfile.DataBytes [idx]'  	ICCProfile.DataBytes [idx + 1]'  	ICCProfile.DataBytes [idx + 2]'  	ICCProfile.DataBytes [idx + 3]  };  
Magic Number,ICCReader,namedColor2TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,namedColor2TagDataEntry,The following statement contains a magic number: VendorFlag = new byte[] {  	ICCProfile.DataBytes [idx]'  	ICCProfile.DataBytes [idx + 1]'  	ICCProfile.DataBytes [idx + 2]'  	ICCProfile.DataBytes [idx + 3]  };  
Magic Number,ICCReader,namedColor2TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,namedColor2TagDataEntry,The following statement contains a magic number: NamedColorCount = (int)Helper.GetUInt32 (idx + 4);  
Magic Number,ICCReader,namedColor2TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,namedColor2TagDataEntry,The following statement contains a magic number: DeviceCoordinateCount = (int)Helper.GetUInt32 (idx + 8);  
Magic Number,ICCReader,namedColor2TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,namedColor2TagDataEntry,The following statement contains a magic number: Prefix = Helper.GetASCIIString (idx + 12' 32);  
Magic Number,ICCReader,namedColor2TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,namedColor2TagDataEntry,The following statement contains a magic number: Prefix = Helper.GetASCIIString (idx + 12' 32);  
Magic Number,ICCReader,namedColor2TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,namedColor2TagDataEntry,The following statement contains a magic number: Prefix = Helper.GetASCIIString (idx + 44' 32);  
Magic Number,ICCReader,namedColor2TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,namedColor2TagDataEntry,The following statement contains a magic number: Prefix = Helper.GetASCIIString (idx + 44' 32);  
Magic Number,ICCReader,parametricCurveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,parametricCurveTagDataEntry,The following statement contains a magic number: Curve = new ParametricCurve (FunctionType' idx + 4);  
Magic Number,ICCReader,parametricCurveTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,parametricCurveTagDataEntry,The following statement contains a magic number: end = Curve.end + 8;  
Magic Number,ICCReader,profileSequenceIdentifierTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,profileSequenceIdentifierTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 8) {  	PositionTable [c] = new PositionNumber (i);  	c++;  }  
Magic Number,ICCReader,profileSequenceIdentifierTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,profileSequenceIdentifierTagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 8) {  	PositionTable [c] = new PositionNumber (i);  	c++;  }  
Magic Number,ICCReader,profileSequenceIdentifierTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,profileSequenceIdentifierTagDataEntry,The following statement contains a magic number: i += 8
Magic Number,ICCReader,profileSequenceIdentifierTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,profileSequenceIdentifierTagDataEntry,The following statement contains a magic number: ProfileDescription = new multiLocalizedUnicodeTagDataEntry (end + 16' false);  
Magic Number,ICCReader,responseCurveSet16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,responseCurveSet16TagDataEntry,The following statement contains a magic number: MeasurmentTypesCount = Helper.GetUInt16 (idx + 2);  
Magic Number,ICCReader,responseCurveSet16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,responseCurveSet16TagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 4) {  	Offset [c] = (int)Helper.GetUInt32 (i);  	c++;  }  
Magic Number,ICCReader,responseCurveSet16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,responseCurveSet16TagDataEntry,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 4) {  	Offset [c] = (int)Helper.GetUInt32 (i);  	c++;  }  
Magic Number,ICCReader,responseCurveSet16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,responseCurveSet16TagDataEntry,The following statement contains a magic number: i += 4
Magic Number,ICCReader,responseCurveSet16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,responseCurveSet16TagDataEntry,The following statement contains a magic number: for (int i = 0; i < MeasurmentTypesCount; i++) {  	Curves [i] = new ResponseCurve (Offset [i] + idx - 8' ChannelCount);  }  
Magic Number,ICCReader,responseCurveSet16TagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,responseCurveSet16TagDataEntry,The following statement contains a magic number: Curves [i] = new ResponseCurve (Offset [i] + idx - 8' ChannelCount);  
Magic Number,ICCReader,s15Fixed16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,s15Fixed16ArrayTagDataEntry,The following statement contains a magic number: Data = new double[(size - 8) / 4];  
Magic Number,ICCReader,s15Fixed16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,s15Fixed16ArrayTagDataEntry,The following statement contains a magic number: Data = new double[(size - 8) / 4];  
Magic Number,ICCReader,s15Fixed16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,s15Fixed16ArrayTagDataEntry,The following statement contains a magic number: for (int i = idx; i < idx + size - 8; i += 4) {  	Data [c] = Helper.GetS15Fixed16Number (i) / 256d;  	c++;  }  
Magic Number,ICCReader,s15Fixed16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,s15Fixed16ArrayTagDataEntry,The following statement contains a magic number: for (int i = idx; i < idx + size - 8; i += 4) {  	Data [c] = Helper.GetS15Fixed16Number (i) / 256d;  	c++;  }  
Magic Number,ICCReader,s15Fixed16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,s15Fixed16ArrayTagDataEntry,The following statement contains a magic number: i += 4
Magic Number,ICCReader,signatureTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,signatureTagDataEntry,The following statement contains a magic number: SignatureData = Helper.GetASCIIString (idx' 4);  
Magic Number,ICCReader,textTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,textTagDataEntry,The following statement contains a magic number: Text = Helper.GetASCIIString (idx' size - 8);  
Magic Number,ICCReader,u16Fixed16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,u16Fixed16ArrayTagDataEntry,The following statement contains a magic number: Data = new double[(size - 8) / 4];  
Magic Number,ICCReader,u16Fixed16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,u16Fixed16ArrayTagDataEntry,The following statement contains a magic number: Data = new double[(size - 8) / 4];  
Magic Number,ICCReader,u16Fixed16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,u16Fixed16ArrayTagDataEntry,The following statement contains a magic number: for (int i = idx; i < idx + size - 8; i += 4) {  	Data [c] = Helper.GetU16Fixed16Number (i);  	c++;  }  
Magic Number,ICCReader,u16Fixed16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,u16Fixed16ArrayTagDataEntry,The following statement contains a magic number: for (int i = idx; i < idx + size - 8; i += 4) {  	Data [c] = Helper.GetU16Fixed16Number (i);  	c++;  }  
Magic Number,ICCReader,u16Fixed16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,u16Fixed16ArrayTagDataEntry,The following statement contains a magic number: i += 4
Magic Number,ICCReader,uInt16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt16ArrayTagDataEntry,The following statement contains a magic number: Data = new ushort[(size - 8) / 2];  
Magic Number,ICCReader,uInt16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt16ArrayTagDataEntry,The following statement contains a magic number: Data = new ushort[(size - 8) / 2];  
Magic Number,ICCReader,uInt16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt16ArrayTagDataEntry,The following statement contains a magic number: for (int i = idx; i < idx + size - 8; i += 2) {  	Data [c] = Helper.GetUInt16 (i);  	c++;  }  
Magic Number,ICCReader,uInt16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt16ArrayTagDataEntry,The following statement contains a magic number: for (int i = idx; i < idx + size - 8; i += 2) {  	Data [c] = Helper.GetUInt16 (i);  	c++;  }  
Magic Number,ICCReader,uInt16ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt16ArrayTagDataEntry,The following statement contains a magic number: i += 2
Magic Number,ICCReader,uInt32ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt32ArrayTagDataEntry,The following statement contains a magic number: Data = new uint[(size - 8) / 4];  
Magic Number,ICCReader,uInt32ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt32ArrayTagDataEntry,The following statement contains a magic number: Data = new uint[(size - 8) / 4];  
Magic Number,ICCReader,uInt32ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt32ArrayTagDataEntry,The following statement contains a magic number: for (int i = idx; i < idx + size - 8; i += 4) {  	Data [c] = Helper.GetUInt32 (i);  	c++;  }  
Magic Number,ICCReader,uInt32ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt32ArrayTagDataEntry,The following statement contains a magic number: for (int i = idx; i < idx + size - 8; i += 4) {  	Data [c] = Helper.GetUInt32 (i);  	c++;  }  
Magic Number,ICCReader,uInt32ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt32ArrayTagDataEntry,The following statement contains a magic number: i += 4
Magic Number,ICCReader,uInt64ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt64ArrayTagDataEntry,The following statement contains a magic number: Data = new UInt64[(size - 8) / 8];  
Magic Number,ICCReader,uInt64ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt64ArrayTagDataEntry,The following statement contains a magic number: Data = new UInt64[(size - 8) / 8];  
Magic Number,ICCReader,uInt64ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt64ArrayTagDataEntry,The following statement contains a magic number: for (int i = idx; i < idx + size - 8; i += 8) {  	Data [c] = Helper.GetUInt64 (i);  	c++;  }  
Magic Number,ICCReader,uInt64ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt64ArrayTagDataEntry,The following statement contains a magic number: for (int i = idx; i < idx + size - 8; i += 8) {  	Data [c] = Helper.GetUInt64 (i);  	c++;  }  
Magic Number,ICCReader,uInt64ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt64ArrayTagDataEntry,The following statement contains a magic number: i += 8
Magic Number,ICCReader,uInt8ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt8ArrayTagDataEntry,The following statement contains a magic number: Data = new byte[size - 8];  
Magic Number,ICCReader,uInt8ArrayTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,uInt8ArrayTagDataEntry,The following statement contains a magic number: for (int i = idx; i < size - 8; i++) {  	Data [c] = ICCProfile.DataBytes [i];  	c++;  }  
Magic Number,ICCReader,viewingConditionsTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,viewingConditionsTagDataEntry,The following statement contains a magic number: IlluminantXYZ = new XYZnumber (idx + 12);  
Magic Number,ICCReader,viewingConditionsTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,viewingConditionsTagDataEntry,The following statement contains a magic number: Illuminant = (StandardIlluminant)Helper.GetUInt32 (idx + 24);  
Magic Number,ICCReader,XYZTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,XYZTagDataEntry,The following statement contains a magic number: Data = new XYZnumber[(size - 8) / 12];  
Magic Number,ICCReader,XYZTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,XYZTagDataEntry,The following statement contains a magic number: Data = new XYZnumber[(size - 8) / 12];  
Magic Number,ICCReader,XYZTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,XYZTagDataEntry,The following statement contains a magic number: for (int i = idx; i < idx + size - 8; i += 12) {  	Data [c] = new XYZnumber (i);  	c++;  }  
Magic Number,ICCReader,XYZTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,XYZTagDataEntry,The following statement contains a magic number: for (int i = idx; i < idx + size - 8; i += 12) {  	Data [c] = new XYZnumber (i);  	c++;  }  
Magic Number,ICCReader,XYZTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,XYZTagDataEntry,The following statement contains a magic number: i += 12
Magic Number,ICCReader,ICCTagTable,C:\repos\RedGlow_ColorWars\ICCReader\TagTable.cs,ICCTagTable,The following statement contains a magic number: for (int j = idx + 4; j < length; j += 12) {  	//Tag signature (byte position 4 to 7 and repeating)  	uint sig = Helper.GetUInt32 (j);  	//Offset to beginning of tag data element (byte position 8 to 11 and repeating)  	uint off = Helper.GetUInt32 (j + 4);  	//Tag data element size (byte position 12 to 15 and repeating)  	uint size = Helper.GetUInt32 (j + 8);  	Data [c] = new TagTableEntry ((TagSignature)sig' off' size' c);  	c++;  }  
Magic Number,ICCReader,ICCTagTable,C:\repos\RedGlow_ColorWars\ICCReader\TagTable.cs,ICCTagTable,The following statement contains a magic number: for (int j = idx + 4; j < length; j += 12) {  	//Tag signature (byte position 4 to 7 and repeating)  	uint sig = Helper.GetUInt32 (j);  	//Offset to beginning of tag data element (byte position 8 to 11 and repeating)  	uint off = Helper.GetUInt32 (j + 4);  	//Tag data element size (byte position 12 to 15 and repeating)  	uint size = Helper.GetUInt32 (j + 8);  	Data [c] = new TagTableEntry ((TagSignature)sig' off' size' c);  	c++;  }  
Magic Number,ICCReader,ICCTagTable,C:\repos\RedGlow_ColorWars\ICCReader\TagTable.cs,ICCTagTable,The following statement contains a magic number: for (int j = idx + 4; j < length; j += 12) {  	//Tag signature (byte position 4 to 7 and repeating)  	uint sig = Helper.GetUInt32 (j);  	//Offset to beginning of tag data element (byte position 8 to 11 and repeating)  	uint off = Helper.GetUInt32 (j + 4);  	//Tag data element size (byte position 12 to 15 and repeating)  	uint size = Helper.GetUInt32 (j + 8);  	Data [c] = new TagTableEntry ((TagSignature)sig' off' size' c);  	c++;  }  
Magic Number,ICCReader,ICCTagTable,C:\repos\RedGlow_ColorWars\ICCReader\TagTable.cs,ICCTagTable,The following statement contains a magic number: for (int j = idx + 4; j < length; j += 12) {  	//Tag signature (byte position 4 to 7 and repeating)  	uint sig = Helper.GetUInt32 (j);  	//Offset to beginning of tag data element (byte position 8 to 11 and repeating)  	uint off = Helper.GetUInt32 (j + 4);  	//Tag data element size (byte position 12 to 15 and repeating)  	uint size = Helper.GetUInt32 (j + 8);  	Data [c] = new TagTableEntry ((TagSignature)sig' off' size' c);  	c++;  }  
Magic Number,ICCReader,ICCTagTable,C:\repos\RedGlow_ColorWars\ICCReader\TagTable.cs,ICCTagTable,The following statement contains a magic number: j += 12
Magic Number,ICCReader,VersionNumber,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,VersionNumber,The following statement contains a magic number: tmp = new bool[] {  	false'  	false'  	false'  	false'  	a [4]'  	a [5]'  	a [6]'  	a [7]  };  
Magic Number,ICCReader,VersionNumber,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,VersionNumber,The following statement contains a magic number: tmp = new bool[] {  	false'  	false'  	false'  	false'  	a [4]'  	a [5]'  	a [6]'  	a [7]  };  
Magic Number,ICCReader,VersionNumber,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,VersionNumber,The following statement contains a magic number: tmp = new bool[] {  	false'  	false'  	false'  	false'  	a [4]'  	a [5]'  	a [6]'  	a [7]  };  
Magic Number,ICCReader,VersionNumber,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,VersionNumber,The following statement contains a magic number: tmp = new bool[] {  	false'  	false'  	false'  	false'  	a [4]'  	a [5]'  	a [6]'  	a [7]  };  
Magic Number,ICCReader,PositionNumber,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,PositionNumber,The following statement contains a magic number: this.Size = (int)Helper.GetUInt32 (idx + 4);  
Magic Number,ICCReader,Response16Number,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,Response16Number,The following statement contains a magic number: MeasurmentValue = Helper.GetS15Fixed16Number (idx + 4);  
Magic Number,ICCReader,XYZnumber,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,XYZnumber,The following statement contains a magic number: this.Y = Helper.GetS15Fixed16Number (idx + 4);  
Magic Number,ICCReader,XYZnumber,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,XYZnumber,The following statement contains a magic number: this.Z = Helper.GetS15Fixed16Number (idx + 8);  
Magic Number,ICCReader,XYZnumber,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,XYZnumber,The following statement contains a magic number: this.X /= (this.X > 2) ? this.X / 256d : 1d;  
Magic Number,ICCReader,XYZnumber,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,XYZnumber,The following statement contains a magic number: this.Y /= (this.Y > 2) ? this.Y / 256d : 1d;  
Magic Number,ICCReader,XYZnumber,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,XYZnumber,The following statement contains a magic number: this.Z /= (this.Z > 2) ? this.Z / 256d : 1d;  
Magic Number,ICCReader,DeviceAttribute,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,DeviceAttribute,The following statement contains a magic number: att3 = a [2];  
Magic Number,ICCReader,DeviceAttribute,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,DeviceAttribute,The following statement contains a magic number: att4 = a [3];  
Magic Number,ICCReader,DeviceAttribute,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,DeviceAttribute,The following statement contains a magic number: VendorData = new byte[] {  	ICCProfile.DataBytes [idx + 4]'  	ICCProfile.DataBytes [idx + 5]'  	ICCProfile.DataBytes [idx + 6]'  	ICCProfile.DataBytes [idx + 7]  };  
Magic Number,ICCReader,DeviceAttribute,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,DeviceAttribute,The following statement contains a magic number: VendorData = new byte[] {  	ICCProfile.DataBytes [idx + 4]'  	ICCProfile.DataBytes [idx + 5]'  	ICCProfile.DataBytes [idx + 6]'  	ICCProfile.DataBytes [idx + 7]  };  
Magic Number,ICCReader,DeviceAttribute,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,DeviceAttribute,The following statement contains a magic number: VendorData = new byte[] {  	ICCProfile.DataBytes [idx + 4]'  	ICCProfile.DataBytes [idx + 5]'  	ICCProfile.DataBytes [idx + 6]'  	ICCProfile.DataBytes [idx + 7]  };  
Magic Number,ICCReader,DeviceAttribute,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,DeviceAttribute,The following statement contains a magic number: VendorData = new byte[] {  	ICCProfile.DataBytes [idx + 4]'  	ICCProfile.DataBytes [idx + 5]'  	ICCProfile.DataBytes [idx + 6]'  	ICCProfile.DataBytes [idx + 7]  };  
Magic Number,ICCReader,NamedColor,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,NamedColor,The following statement contains a magic number: Name = Helper.GetASCIIString (idx' 32);  
Magic Number,ICCReader,NamedColor,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,NamedColor,The following statement contains a magic number: PCScoordinates = new ushort[3];  
Magic Number,ICCReader,NamedColor,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,NamedColor,The following statement contains a magic number: PCScoordinates [0] = Helper.GetUInt16 (idx + 32);  
Magic Number,ICCReader,NamedColor,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,NamedColor,The following statement contains a magic number: PCScoordinates [1] = Helper.GetUInt16 (idx + 34);  
Magic Number,ICCReader,NamedColor,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,NamedColor,The following statement contains a magic number: PCScoordinates [2] = Helper.GetUInt16 (idx + 36);  
Magic Number,ICCReader,NamedColor,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,NamedColor,The following statement contains a magic number: PCScoordinates [2] = Helper.GetUInt16 (idx + 36);  
Magic Number,ICCReader,NamedColor,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,NamedColor,The following statement contains a magic number: if (DeviceCoordinateCount > 0) {  	DeviceCoordinates = new ushort[2 * DeviceCoordinateCount];  	int end = (idx + 38) + 2 * DeviceCoordinateCount;  	int c = 0;  	for (int i = idx + 38; i < end; i++) {  		DeviceCoordinates [c] = Helper.GetUInt16 (i);  		c++;  	}  }  
Magic Number,ICCReader,NamedColor,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,NamedColor,The following statement contains a magic number: if (DeviceCoordinateCount > 0) {  	DeviceCoordinates = new ushort[2 * DeviceCoordinateCount];  	int end = (idx + 38) + 2 * DeviceCoordinateCount;  	int c = 0;  	for (int i = idx + 38; i < end; i++) {  		DeviceCoordinates [c] = Helper.GetUInt16 (i);  		c++;  	}  }  
Magic Number,ICCReader,NamedColor,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,NamedColor,The following statement contains a magic number: if (DeviceCoordinateCount > 0) {  	DeviceCoordinates = new ushort[2 * DeviceCoordinateCount];  	int end = (idx + 38) + 2 * DeviceCoordinateCount;  	int c = 0;  	for (int i = idx + 38; i < end; i++) {  		DeviceCoordinates [c] = Helper.GetUInt16 (i);  		c++;  	}  }  
Magic Number,ICCReader,NamedColor,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,NamedColor,The following statement contains a magic number: if (DeviceCoordinateCount > 0) {  	DeviceCoordinates = new ushort[2 * DeviceCoordinateCount];  	int end = (idx + 38) + 2 * DeviceCoordinateCount;  	int c = 0;  	for (int i = idx + 38; i < end; i++) {  		DeviceCoordinates [c] = Helper.GetUInt16 (i);  		c++;  	}  }  
Magic Number,ICCReader,NamedColor,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,NamedColor,The following statement contains a magic number: DeviceCoordinates = new ushort[2 * DeviceCoordinateCount];  
Magic Number,ICCReader,NamedColor,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,NamedColor,The following statement contains a magic number: for (int i = idx + 38; i < end; i++) {  	DeviceCoordinates [c] = Helper.GetUInt16 (i);  	c++;  }  
Magic Number,ICCReader,ProfileDescription,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ProfileDescription,The following statement contains a magic number: DeviceModel = Helper.GetUInt32 (idx + 4);  
Magic Number,ICCReader,ProfileDescription,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ProfileDescription,The following statement contains a magic number: DeviceAttributes = new DeviceAttribute (idx + 8);  
Magic Number,ICCReader,ProfileDescription,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ProfileDescription,The following statement contains a magic number: TechnologyInformation = (TagSignature)Helper.GetUInt32 (idx + 16);  
Magic Number,ICCReader,ProfileDescription,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ProfileDescription,The following statement contains a magic number: DeviceManufacturerInfo = new multiLocalizedUnicodeTagDataEntry (idx + 20' header.DeviceManufacturer == 0 ? true : false);  
Magic Number,ICCReader,ResponseCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ResponseCurve,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 4) {  	MeasurmentCounts [c] = (int)Helper.GetUInt32 (i);  	c++;  }  
Magic Number,ICCReader,ResponseCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ResponseCurve,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 4) {  	MeasurmentCounts [c] = (int)Helper.GetUInt32 (i);  	c++;  }  
Magic Number,ICCReader,ResponseCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ResponseCurve,The following statement contains a magic number: i += 4
Magic Number,ICCReader,ResponseCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ResponseCurve,The following statement contains a magic number: end += 12 * ChannelCount;  
Magic Number,ICCReader,ResponseCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ResponseCurve,The following statement contains a magic number: for (int i = start; i < end; i += 12) {  	XYZvalues [c] = new XYZnumber (i);  	c++;  }  
Magic Number,ICCReader,ResponseCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ResponseCurve,The following statement contains a magic number: i += 12
Magic Number,ICCReader,ResponseCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ResponseCurve,The following statement contains a magic number: end += 8 * p;  
Magic Number,ICCReader,ResponseCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ResponseCurve,The following statement contains a magic number: for (int i = start; i < end; i += 8) {  	ResponseArrays [c] = new Response16Number (i);  	c++;  }  
Magic Number,ICCReader,ResponseCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ResponseCurve,The following statement contains a magic number: i += 8
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: end = idx + 4;  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 1 || type == 2 || type == 3 || type == 4) {  	a = Helper.GetS15Fixed16Number (idx + 4);  	b = Helper.GetS15Fixed16Number (idx + 8);  	end = idx + 12;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 1 || type == 2 || type == 3 || type == 4) {  	a = Helper.GetS15Fixed16Number (idx + 4);  	b = Helper.GetS15Fixed16Number (idx + 8);  	end = idx + 12;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 1 || type == 2 || type == 3 || type == 4) {  	a = Helper.GetS15Fixed16Number (idx + 4);  	b = Helper.GetS15Fixed16Number (idx + 8);  	end = idx + 12;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 1 || type == 2 || type == 3 || type == 4) {  	a = Helper.GetS15Fixed16Number (idx + 4);  	b = Helper.GetS15Fixed16Number (idx + 8);  	end = idx + 12;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 1 || type == 2 || type == 3 || type == 4) {  	a = Helper.GetS15Fixed16Number (idx + 4);  	b = Helper.GetS15Fixed16Number (idx + 8);  	end = idx + 12;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 1 || type == 2 || type == 3 || type == 4) {  	a = Helper.GetS15Fixed16Number (idx + 4);  	b = Helper.GetS15Fixed16Number (idx + 8);  	end = idx + 12;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: a = Helper.GetS15Fixed16Number (idx + 4);  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: b = Helper.GetS15Fixed16Number (idx + 8);  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: end = idx + 12;  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 2 || type == 3 || type == 4) {  	c = Helper.GetS15Fixed16Number (idx + 12);  	end = idx + 16;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 2 || type == 3 || type == 4) {  	c = Helper.GetS15Fixed16Number (idx + 12);  	end = idx + 16;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 2 || type == 3 || type == 4) {  	c = Helper.GetS15Fixed16Number (idx + 12);  	end = idx + 16;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 2 || type == 3 || type == 4) {  	c = Helper.GetS15Fixed16Number (idx + 12);  	end = idx + 16;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 2 || type == 3 || type == 4) {  	c = Helper.GetS15Fixed16Number (idx + 12);  	end = idx + 16;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: c = Helper.GetS15Fixed16Number (idx + 12);  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: end = idx + 16;  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 3 || type == 4) {  	d = Helper.GetS15Fixed16Number (idx + 16);  	end = idx + 20;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 3 || type == 4) {  	d = Helper.GetS15Fixed16Number (idx + 16);  	end = idx + 20;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 3 || type == 4) {  	d = Helper.GetS15Fixed16Number (idx + 16);  	end = idx + 20;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 3 || type == 4) {  	d = Helper.GetS15Fixed16Number (idx + 16);  	end = idx + 20;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: d = Helper.GetS15Fixed16Number (idx + 16);  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: end = idx + 20;  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 4) {  	e = Helper.GetS15Fixed16Number (idx + 20);  	f = Helper.GetS15Fixed16Number (idx + 24);  	end = idx + 28;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 4) {  	e = Helper.GetS15Fixed16Number (idx + 20);  	f = Helper.GetS15Fixed16Number (idx + 24);  	end = idx + 28;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 4) {  	e = Helper.GetS15Fixed16Number (idx + 20);  	f = Helper.GetS15Fixed16Number (idx + 24);  	end = idx + 28;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: if (type == 4) {  	e = Helper.GetS15Fixed16Number (idx + 20);  	f = Helper.GetS15Fixed16Number (idx + 24);  	end = idx + 28;  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: e = Helper.GetS15Fixed16Number (idx + 20);  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: f = Helper.GetS15Fixed16Number (idx + 24);  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,ParametricCurve,The following statement contains a magic number: end = idx + 28;  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,Function,The following statement contains a magic number: switch (type) {  case 0:  	return Math.Pow (X' g);  case 1:  	return (X >= -b / a) ? Math.Pow (a * X + b' g) : 0;  case 2:  	return (X >= -b / a) ? Math.Pow (a * X + b' g) + c : c;  case 3:  	return (X >= d) ? Math.Pow (a * X + b' g) : c * X;  case 4:  	return (X >= d) ? Math.Pow (a * X + b' g) + c : c * X + f;  default:  	throw new CorruptProfileException ("ParametricCurve");  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,Function,The following statement contains a magic number: switch (type) {  case 0:  	return Math.Pow (X' g);  case 1:  	return (X >= -b / a) ? Math.Pow (a * X + b' g) : 0;  case 2:  	return (X >= -b / a) ? Math.Pow (a * X + b' g) + c : c;  case 3:  	return (X >= d) ? Math.Pow (a * X + b' g) : c * X;  case 4:  	return (X >= d) ? Math.Pow (a * X + b' g) + c : c * X + f;  default:  	throw new CorruptProfileException ("ParametricCurve");  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,Function,The following statement contains a magic number: switch (type) {  case 0:  	return Math.Pow (X' g);  case 1:  	return (X >= -b / a) ? Math.Pow (a * X + b' g) : 0;  case 2:  	return (X >= -b / a) ? Math.Pow (a * X + b' g) + c : c;  case 3:  	return (X >= d) ? Math.Pow (a * X + b' g) : c * X;  case 4:  	return (X >= d) ? Math.Pow (a * X + b' g) + c : c * X + f;  default:  	throw new CorruptProfileException ("ParametricCurve");  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,InverseFunction,The following statement contains a magic number: switch (type) {  case 0:  	return Math.Pow (X' 1 / g);  case 1:  	return (X >= -b / a) ? (Math.Pow (a' 1 / g) - b) / X : 0;  case 2:  	return (X >= -b / a) ? (Math.Pow (X - c' 1 / g) - b) / a : c;  case 3:  	return (X >= d) ? (Math.Pow (a' 1 / g) - b) / X : X / c;  case 4:  	return (X >= d) ? (Math.Pow (X - c' 1 / g) - b) / a : (X - f) / c;  default:  	throw new CorruptProfileException ("ParametricCurve");  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,InverseFunction,The following statement contains a magic number: switch (type) {  case 0:  	return Math.Pow (X' 1 / g);  case 1:  	return (X >= -b / a) ? (Math.Pow (a' 1 / g) - b) / X : 0;  case 2:  	return (X >= -b / a) ? (Math.Pow (X - c' 1 / g) - b) / a : c;  case 3:  	return (X >= d) ? (Math.Pow (a' 1 / g) - b) / X : X / c;  case 4:  	return (X >= d) ? (Math.Pow (X - c' 1 / g) - b) / a : (X - f) / c;  default:  	throw new CorruptProfileException ("ParametricCurve");  }  
Magic Number,ICCReader,ParametricCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,InverseFunction,The following statement contains a magic number: switch (type) {  case 0:  	return Math.Pow (X' 1 / g);  case 1:  	return (X >= -b / a) ? (Math.Pow (a' 1 / g) - b) / X : 0;  case 2:  	return (X >= -b / a) ? (Math.Pow (X - c' 1 / g) - b) / a : c;  case 3:  	return (X >= d) ? (Math.Pow (a' 1 / g) - b) / X : X / c;  case 4:  	return (X >= d) ? (Math.Pow (X - c' 1 / g) - b) / a : (X - f) / c;  default:  	throw new CorruptProfileException ("ParametricCurve");  }  
Magic Number,ICCReader,OneDimensionalCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,OneDimensionalCurve,The following statement contains a magic number: for (int i = idx + 4; i < iend; i += 4) {  	BreakPoints [c] = Helper.GetFloat32 (i);  	c++;  }  
Magic Number,ICCReader,OneDimensionalCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,OneDimensionalCurve,The following statement contains a magic number: for (int i = idx + 4; i < iend; i += 4) {  	BreakPoints [c] = Helper.GetFloat32 (i);  	c++;  }  
Magic Number,ICCReader,OneDimensionalCurve,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,OneDimensionalCurve,The following statement contains a magic number: i += 4
Magic Number,ICCReader,CurveSegment,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCurve,The following statement contains a magic number: if (t == CurveSegmentSignature.FormulaCurve) {  	return new FormulaCurveElement (idx + 8);  }  else if (t == CurveSegmentSignature.SampledCurve) {  	return new SampledCurveElement (idx + 8);  }  else {  	throw new CorruptProfileException ("CurveSegment");  }  
Magic Number,ICCReader,CurveSegment,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCurve,The following statement contains a magic number: if (t == CurveSegmentSignature.FormulaCurve) {  	return new FormulaCurveElement (idx + 8);  }  else if (t == CurveSegmentSignature.SampledCurve) {  	return new SampledCurveElement (idx + 8);  }  else {  	throw new CorruptProfileException ("CurveSegment");  }  
Magic Number,ICCReader,CurveSegment,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCurve,The following statement contains a magic number: return new FormulaCurveElement (idx + 8);  
Magic Number,ICCReader,CurveSegment,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCurve,The following statement contains a magic number: if (t == CurveSegmentSignature.SampledCurve) {  	return new SampledCurveElement (idx + 8);  }  else {  	throw new CorruptProfileException ("CurveSegment");  }  
Magic Number,ICCReader,CurveSegment,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCurve,The following statement contains a magic number: return new SampledCurveElement (idx + 8);  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula != 1 && formula != 2 && formula != 3) {  	throw new CorruptProfileException ("FormulaCurveElement");  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula != 1 && formula != 2 && formula != 3) {  	throw new CorruptProfileException ("FormulaCurveElement");  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula == 0 || formula == 1) {  	gamma = Helper.GetFloat32 (idx + 4);  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: gamma = Helper.GetFloat32 (idx + 4);  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula == 0 || formula == 1 || formula == 2) {  	a = Helper.GetFloat32 (idx + 8);  	b = Helper.GetFloat32 (idx + 12);  	c = Helper.GetFloat32 (idx + 16);  	end = idx + 20;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula == 0 || formula == 1 || formula == 2) {  	a = Helper.GetFloat32 (idx + 8);  	b = Helper.GetFloat32 (idx + 12);  	c = Helper.GetFloat32 (idx + 16);  	end = idx + 20;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula == 0 || formula == 1 || formula == 2) {  	a = Helper.GetFloat32 (idx + 8);  	b = Helper.GetFloat32 (idx + 12);  	c = Helper.GetFloat32 (idx + 16);  	end = idx + 20;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula == 0 || formula == 1 || formula == 2) {  	a = Helper.GetFloat32 (idx + 8);  	b = Helper.GetFloat32 (idx + 12);  	c = Helper.GetFloat32 (idx + 16);  	end = idx + 20;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula == 0 || formula == 1 || formula == 2) {  	a = Helper.GetFloat32 (idx + 8);  	b = Helper.GetFloat32 (idx + 12);  	c = Helper.GetFloat32 (idx + 16);  	end = idx + 20;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: a = Helper.GetFloat32 (idx + 8);  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: b = Helper.GetFloat32 (idx + 12);  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: c = Helper.GetFloat32 (idx + 16);  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: end = idx + 20;  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula == 1 || formula == 2) {  	d = Helper.GetFloat32 (idx + 20);  	end = idx + 24;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula == 1 || formula == 2) {  	d = Helper.GetFloat32 (idx + 20);  	end = idx + 24;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula == 1 || formula == 2) {  	d = Helper.GetFloat32 (idx + 20);  	end = idx + 24;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: d = Helper.GetFloat32 (idx + 20);  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: end = idx + 24;  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula == 2) {  	e = Helper.GetFloat32 (idx + 24);  	end = idx + 24;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula == 2) {  	e = Helper.GetFloat32 (idx + 24);  	end = idx + 24;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: if (formula == 2) {  	e = Helper.GetFloat32 (idx + 24);  	end = idx + 24;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: e = Helper.GetFloat32 (idx + 24);  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,FormulaCurveElement,The following statement contains a magic number: end = idx + 24;  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetValue,The following statement contains a magic number: if (formula == 0) {  	return Math.Pow (a * X + b' gamma) + c;  }  else if (formula == 1) {  	return a * Math.Log10 (b * Math.Pow (X' gamma) + c) + d;  }  else if (formula == 2) {  	return a * Math.Pow (b' c * X + d) + e;  }  else {  	return -1;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetValue,The following statement contains a magic number: if (formula == 1) {  	return a * Math.Log10 (b * Math.Pow (X' gamma) + c) + d;  }  else if (formula == 2) {  	return a * Math.Pow (b' c * X + d) + e;  }  else {  	return -1;  }  
Magic Number,ICCReader,FormulaCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetValue,The following statement contains a magic number: if (formula == 2) {  	return a * Math.Pow (b' c * X + d) + e;  }  else {  	return -1;  }  
Magic Number,ICCReader,SampledCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,SampledCurveElement,The following statement contains a magic number: end = idx + 4 + 4 * EntryCount;  
Magic Number,ICCReader,SampledCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,SampledCurveElement,The following statement contains a magic number: end = idx + 4 + 4 * EntryCount;  
Magic Number,ICCReader,SampledCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,SampledCurveElement,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 4) {  	CurveEntries [c] = Helper.GetFloat32 (i);  	c++;  }  
Magic Number,ICCReader,SampledCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,SampledCurveElement,The following statement contains a magic number: for (int i = idx + 4; i < end; i += 4) {  	CurveEntries [c] = Helper.GetFloat32 (i);  	c++;  }  
Magic Number,ICCReader,SampledCurveElement,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,SampledCurveElement,The following statement contains a magic number: i += 4
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	gpc [i] = ICCProfile.DataBytes [idx + i];  }  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: if (!IsFloat) {  	byte p = ICCProfile.DataBytes [idx + 16];  	if (p == 1) {  		return new CLUT8 (idx + 20' InputChannels' OutputChannels' gpc);  	}  	else if (p == 2) {  		return new CLUT16 (idx + 20' InputChannels' OutputChannels' gpc);  	}  	else {  		throw new CorruptProfileException ("CLUT");  	}  }  else {  	return new CLUTf32 (idx + 16' InputChannels' OutputChannels' gpc);  }  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: if (!IsFloat) {  	byte p = ICCProfile.DataBytes [idx + 16];  	if (p == 1) {  		return new CLUT8 (idx + 20' InputChannels' OutputChannels' gpc);  	}  	else if (p == 2) {  		return new CLUT16 (idx + 20' InputChannels' OutputChannels' gpc);  	}  	else {  		throw new CorruptProfileException ("CLUT");  	}  }  else {  	return new CLUTf32 (idx + 16' InputChannels' OutputChannels' gpc);  }  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: if (!IsFloat) {  	byte p = ICCProfile.DataBytes [idx + 16];  	if (p == 1) {  		return new CLUT8 (idx + 20' InputChannels' OutputChannels' gpc);  	}  	else if (p == 2) {  		return new CLUT16 (idx + 20' InputChannels' OutputChannels' gpc);  	}  	else {  		throw new CorruptProfileException ("CLUT");  	}  }  else {  	return new CLUTf32 (idx + 16' InputChannels' OutputChannels' gpc);  }  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: if (!IsFloat) {  	byte p = ICCProfile.DataBytes [idx + 16];  	if (p == 1) {  		return new CLUT8 (idx + 20' InputChannels' OutputChannels' gpc);  	}  	else if (p == 2) {  		return new CLUT16 (idx + 20' InputChannels' OutputChannels' gpc);  	}  	else {  		throw new CorruptProfileException ("CLUT");  	}  }  else {  	return new CLUTf32 (idx + 16' InputChannels' OutputChannels' gpc);  }  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: if (!IsFloat) {  	byte p = ICCProfile.DataBytes [idx + 16];  	if (p == 1) {  		return new CLUT8 (idx + 20' InputChannels' OutputChannels' gpc);  	}  	else if (p == 2) {  		return new CLUT16 (idx + 20' InputChannels' OutputChannels' gpc);  	}  	else {  		throw new CorruptProfileException ("CLUT");  	}  }  else {  	return new CLUTf32 (idx + 16' InputChannels' OutputChannels' gpc);  }  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: if (p == 1) {  	return new CLUT8 (idx + 20' InputChannels' OutputChannels' gpc);  }  else if (p == 2) {  	return new CLUT16 (idx + 20' InputChannels' OutputChannels' gpc);  }  else {  	throw new CorruptProfileException ("CLUT");  }  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: if (p == 1) {  	return new CLUT8 (idx + 20' InputChannels' OutputChannels' gpc);  }  else if (p == 2) {  	return new CLUT16 (idx + 20' InputChannels' OutputChannels' gpc);  }  else {  	throw new CorruptProfileException ("CLUT");  }  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: if (p == 1) {  	return new CLUT8 (idx + 20' InputChannels' OutputChannels' gpc);  }  else if (p == 2) {  	return new CLUT16 (idx + 20' InputChannels' OutputChannels' gpc);  }  else {  	throw new CorruptProfileException ("CLUT");  }  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: return new CLUT8 (idx + 20' InputChannels' OutputChannels' gpc);  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: if (p == 2) {  	return new CLUT16 (idx + 20' InputChannels' OutputChannels' gpc);  }  else {  	throw new CorruptProfileException ("CLUT");  }  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: if (p == 2) {  	return new CLUT16 (idx + 20' InputChannels' OutputChannels' gpc);  }  else {  	throw new CorruptProfileException ("CLUT");  }  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: return new CLUT16 (idx + 20' InputChannels' OutputChannels' gpc);  
Magic Number,ICCReader,CLUT,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetCLUT,The following statement contains a magic number: return new CLUTf32 (idx + 16' InputChannels' OutputChannels' gpc);  
Magic Number,ICCReader,CLUTf32,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,CLUTf32,The following statement contains a magic number: for (int i = 0; i < l; i++) {  	Values [i] = new double[OutputChannelCount];  	for (int o = 0; o < OutputChannelCount; o++) {  		Values [i] [o] = Helper.GetFloat32 (idx + k);  		k += 4;  	}  }  
Magic Number,ICCReader,CLUTf32,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,CLUTf32,The following statement contains a magic number: for (int o = 0; o < OutputChannelCount; o++) {  	Values [i] [o] = Helper.GetFloat32 (idx + k);  	k += 4;  }  
Magic Number,ICCReader,CLUTf32,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,CLUTf32,The following statement contains a magic number: k += 4;  
Magic Number,ICCReader,CLUTf32,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,CLUTf32,The following statement contains a magic number: this.end = idx + l * OutputChannelCount * 4;  
Magic Number,ICCReader,CLUTf32,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetValue,The following statement contains a magic number: for (int i = InputChannelCount - 2; i >= 0; i--) {  	idx += Math.Round (pd [i]) * (int)Math.Pow (GridPointCount [i]' c);  	c++;  }  
Magic Number,ICCReader,CLUTf32,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetValue,The following statement contains a magic number: for (int i = 0; i < tmp.Length; i++) {  	o [i] = (byte)(tmp [i] * 255);  }  
Magic Number,ICCReader,CLUTf32,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetValue,The following statement contains a magic number: o [i] = (byte)(tmp [i] * 255);  
Magic Number,ICCReader,CLUT16,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,CLUT16,The following statement contains a magic number: for (int i = 0; i < l; i++) {  	Values [i] = new ushort[OutputChannelCount];  	for (int o = 0; o < OutputChannelCount; o++) {  		Values [i] [o] = Helper.GetUInt16 (idx + k);  		k += 2;  	}  }  
Magic Number,ICCReader,CLUT16,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,CLUT16,The following statement contains a magic number: for (int o = 0; o < OutputChannelCount; o++) {  	Values [i] [o] = Helper.GetUInt16 (idx + k);  	k += 2;  }  
Magic Number,ICCReader,CLUT16,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,CLUT16,The following statement contains a magic number: k += 2;  
Magic Number,ICCReader,CLUT16,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,CLUT16,The following statement contains a magic number: this.end = idx + l * OutputChannelCount * 2;  
Magic Number,ICCReader,CLUT16,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetValue,The following statement contains a magic number: for (int i = InputChannelCount - 2; i >= 0; i--) {  	idx += Math.Round (pd [i]) * (int)Math.Pow (GridPointCount [i]' c);  	c++;  }  
Magic Number,ICCReader,CLUT8,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetValue,The following statement contains a magic number: for (int i = InputChannelCount - 2; i >= 0; i--) {  	idx += Math.Round (pd [i]) * (int)Math.Pow (GridPointCount [i]' c);  	c++;  }  
Magic Number,ICCReader,LUT16,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,LUT16,The following statement contains a magic number: for (int i = 0; i < ValueCount; i++) {  	Values [i] = Helper.GetUInt16 (idx + c);  	c += 2;  }  
Magic Number,ICCReader,LUT16,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,LUT16,The following statement contains a magic number: c += 2;  
Magic Number,ICCReader,LUT8,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,LUT8,The following statement contains a magic number: Values = new byte[256];  
Magic Number,ICCReader,LUT8,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,LUT8,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	Values [i] = ICCProfile.DataBytes [idx + i];  }  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetS15Fixed16Number,The following statement contains a magic number: return (Math.Abs (tmp) + (Helper.GetUInt16 (idx + 2) / 65536d)) * (Math.Sign (tmp) == 0 ? 1 : Math.Sign (tmp));  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetU16Fixed16Number,The following statement contains a magic number: return Helper.GetUInt16 (idx) + (Helper.GetUInt16 (idx + 2) / 65536d);  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetU1Fixed15Number,The following statement contains a magic number: Array.Reverse (tmp' 0' 2);  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetUInt32,The following statement contains a magic number: DoReverse (idx' 4);  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetUInt16,The following statement contains a magic number: DoReverse (idx' 2);  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetUInt64,The following statement contains a magic number: DoReverse (idx' 8);  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetFloat32,The following statement contains a magic number: DoReverse (idx' 4);  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetProfileID,The following statement contains a magic number: return BitConverter.ToString (ICCProfile.DataBytes' idx' 16);  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetMatrix,The following statement contains a magic number: for (int y = 0; y < Ylength; y++) {  	for (int x = 0; x < Xlength; x++) {  		if (IsFloat) {  			Matrix [x' y] = Helper.GetFloat32 (idx + c);  		}  		else {  			Matrix [x' y] = Helper.GetS15Fixed16Number (idx + c) / 256d;  		}  		c += 4;  	}  }  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetMatrix,The following statement contains a magic number: for (int x = 0; x < Xlength; x++) {  	if (IsFloat) {  		Matrix [x' y] = Helper.GetFloat32 (idx + c);  	}  	else {  		Matrix [x' y] = Helper.GetS15Fixed16Number (idx + c) / 256d;  	}  	c += 4;  }  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetMatrix,The following statement contains a magic number: c += 4;  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetMatrix,The following statement contains a magic number: for (int i = 0; i < Ylength; i++) {  	if (IsFloat) {  		Matrix [i] = Helper.GetFloat32 (idx + c);  	}  	else {  		Matrix [i] = Helper.GetS15Fixed16Number (idx + c) / 256d;  	}  	c += 4;  }  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,GetMatrix,The following statement contains a magic number: c += 4;  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,MultiplyMatrix3x3,The following statement contains a magic number: c [0] = b [0] * a [0' 0] + b [1] * a [0' 1] + b [2] * a [0' 2];  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,MultiplyMatrix3x3,The following statement contains a magic number: c [0] = b [0] * a [0' 0] + b [1] * a [0' 1] + b [2] * a [0' 2];  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,MultiplyMatrix3x3,The following statement contains a magic number: c [1] = b [0] * a [1' 0] + b [1] * a [1' 1] + b [2] * a [1' 2];  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,MultiplyMatrix3x3,The following statement contains a magic number: c [1] = b [0] * a [1' 0] + b [1] * a [1' 1] + b [2] * a [1' 2];  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,MultiplyMatrix3x3,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,MultiplyMatrix3x3,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,MultiplyMatrix3x3,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,MultiplyMatrix3x3,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,MultiplyMatrix3x3,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ICCReader,Helper,C:\repos\RedGlow_ColorWars\ICCReader\SubClasses.cs,MultiplyMatrix3x3,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Missing Default,ICCReader,chromaticityTagDataEntry,C:\repos\RedGlow_ColorWars\ICCReader\TagDataEntry.cs,SetValues,The following switch statement is missing a default case: switch (type) {  case ColorantEncoding.EBU_Tech_3213_E:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.290'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.ITU_R_BT_709_2:  	tmp [0] = new double[2] {  		0.640'  		0.330  	};  	tmp [1] = new double[2] {  		0.300'  		0.600  	};  	tmp [2] = new double[2] {  		0.150'  		0.060  	};  	break;  case ColorantEncoding.P22:  	tmp [0] = new double[2] {  		0.625'  		0.340  	};  	tmp [1] = new double[2] {  		0.280'  		0.605  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  case ColorantEncoding.SMPTE_RP145:  	tmp [0] = new double[2] {  		0.630'  		0.340  	};  	tmp [1] = new double[2] {  		0.310'  		0.595  	};  	tmp [2] = new double[2] {  		0.155'  		0.070  	};  	break;  }  
