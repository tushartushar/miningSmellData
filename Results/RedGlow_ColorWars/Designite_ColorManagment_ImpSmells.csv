Implementation smell,Namespace,Class,File,Method,Description
Long Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,SetFastAction,The method has 1086 lines of code.
Complex Method,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,GetColor,Cyclomatic complexity of the method is 16
Complex Method,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,Cyclomatic complexity of the method is 36
Complex Method,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Do_PCS,Cyclomatic complexity of the method is 10
Complex Method,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Do_Device,Cyclomatic complexity of the method is 10
Complex Method,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_PCS,Cyclomatic complexity of the method is 21
Complex Method,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_PCS,Cyclomatic complexity of the method is 21
Complex Method,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoOutputDevice_PCS,Cyclomatic complexity of the method is 14
Complex Method,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_Device,Cyclomatic complexity of the method is 21
Complex Method,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_Device,Cyclomatic complexity of the method is 21
Complex Method,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoOutputDevice_Device,Cyclomatic complexity of the method is 14
Complex Method,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,Cyclomatic complexity of the method is 9
Complex Method,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_LUT_Device,Cyclomatic complexity of the method is 9
Complex Method,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,Cyclomatic complexity of the method is 8
Complex Method,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,Cyclomatic complexity of the method is 27
Complex Method,ColorManagment,RGBColorspace,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,GetColorspaceName,Cyclomatic complexity of the method is 22
Complex Method,ColorManagment,RGBColorspace,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,GetColorspace,Cyclomatic complexity of the method is 19
Complex Method,ColorManagment,RGBColorspace,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,GetWhitepointName,Cyclomatic complexity of the method is 19
Complex Method,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,Cyclomatic complexity of the method is 58
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,Init,Cyclomatic complexity of the method is 8
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToICCcolor,Cyclomatic complexity of the method is 11
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,Do,Cyclomatic complexity of the method is 55
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertXYZ,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertYxy,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertLab,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertLuv,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertLCHab,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertLCHuv,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertRGB,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertHSV,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertHSL,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertGray,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertYCbCr,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertLCH99,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertLCH99b,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertLCH99c,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertLCH99d,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertDEF,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertBef,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertBCH,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,SetFastReferenceWhite,Cyclomatic complexity of the method is 24
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,SetFastAction,Cyclomatic complexity of the method is 56
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,Cyclomatic complexity of the method is 23
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,Cyclomatic complexity of the method is 32
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,SetInputColor,Cyclomatic complexity of the method is 43
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,SetInputColor,Cyclomatic complexity of the method is 43
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,SetInputColor,Cyclomatic complexity of the method is 43
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,Cyclomatic complexity of the method is 16
Complex Method,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,Cyclomatic complexity of the method is 16
Complex Method,ColorManagment,Whitepoint,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\Whitepoint.cs,GetXYZValues,Cyclomatic complexity of the method is 12
Complex Method,ColorManagment,Whitepoint,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\Whitepoint.cs,GetChromaticityValues,Cyclomatic complexity of the method is 12
Complex Method,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,Cyclomatic complexity of the method is 8
Complex Method,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,SetHasVariables,Cyclomatic complexity of the method is 55
Complex Method,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,GetColor,Cyclomatic complexity of the method is 16
Complex Method,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,Cyclomatic complexity of the method is 17
Complex Method,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,GetColor,Cyclomatic complexity of the method is 16
Complex Method,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,Cyclomatic complexity of the method is 17
Long Parameter List,ColorManagment,ColorCMYK,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\CMY_Based.cs,ColorCMYK,The method has 5 parameters.
Long Parameter List,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToPCS,The method has 5 parameters.
Long Parameter List,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToDevice,The method has 5 parameters.
Long Parameter List,ColorManagment,CustomRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,CustomRGB,The method has 8 parameters.
Long Parameter List,ColorManagment,ColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\RGB_Based.cs,ColorRGB,The method has 5 parameters.
Long Parameter List,ColorManagment,ColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\RGB_Based.cs,ColorRGB,The method has 5 parameters.
Long Parameter List,ColorManagment,ColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\RGB_Based.cs,ColorRGB,The method has 5 parameters.
Long Parameter List,ColorManagment,ColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\RGB_Based.cs,ColorRGB,The method has 5 parameters.
Long Parameter List,ColorManagment,ColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\RGB_Based.cs,ColorRGB,The method has 5 parameters.
Long Parameter List,ColorManagment,ColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\RGB_Based.cs,ColorRGB,The method has 5 parameters.
Long Parameter List,ColorManagment,ColorYCbCr,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\RGB_Based.cs,ColorYCbCr,The method has 5 parameters.
Long Parameter List,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToICC,The method has 5 parameters.
Long Parameter List,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,BColorRGB,The method has 5 parameters.
Long Parameter List,ColorManagment.Light,BColorYCbCr,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,BColorYCbCr,The method has 5 parameters.
Long Parameter List,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,UColorRGB,The method has 5 parameters.
Long Parameter List,ColorManagment.Light,UColorYCbCr,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,UColorYCbCr,The method has 5 parameters.
Long Statement,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The length of the statement  "			return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]); " is 140.
Long Statement,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE76,The length of the statement  "	return Math.Sqrt (Math.Pow (Color2.L - Color1.L' 2) + Math.Pow (Color2.a - Color1.a' 2) + Math.Pow (Color2.b - Color1.b' 2)); " is 125.
Long Statement,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The length of the statement  "	return Math.Sqrt (Math.Pow ((Color1.L - Color2.L) / var1' 2) + Math.Pow ((var2 - var3) / (1 + var4 * var2)' 2) + var6 / Math.Pow ((1 + var5 * var2)' 2)); " is 153.
Long Statement,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The length of the statement  "	var14 = 1 - 0.17 * Math.Cos (var13 - 0.5236) + 0.24 * Math.Cos (2 * var13) + 0.32 * Math.Cos (3 * var13 + 0.10472) - 0.2 * Math.Cos (4 * var13 - 1.0995574); " is 156.
Long Statement,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The length of the statement  "	var15 = (Math.Abs (var15) > Math.PI && var12 <= var11) ? var15 + Pi2 : (Math.Abs (var15) > Math.PI && var12 > var11) ? var15 - Pi2 : var15; " is 139.
Long Statement,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The length of the statement  "	return Math.Sqrt (Math.Pow ((Color2.L - Color1.L) / var17' 2) + Math.Pow ((var9 - var8) / var18' 2) + Math.Pow (var16 / var19' 2) + var22 * ((var9 - var8) / var18) * ((var16) / var19)); " is 185.
Long Statement,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The length of the statement  "	var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101)); " is 253.
Long Statement,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The length of the statement  "	return Math.Sqrt (Math.Pow ((nLab1.L - nLab2.L) / (var1 * var6)' 2) + Math.Pow ((var2 - var3) / var7' 2) + Math.Pow (var5 / var11' 2)); " is 135.
Long Statement,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The length of the statement  "	var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101)); " is 253.
Long Statement,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The length of the statement  "	return Math.Sqrt (Math.Pow ((nLab1.L - nLab2.L) / (l * var6)' 2) + Math.Pow ((var2 - var3) / (c * var7)' 2) + Math.Pow (var5 / var11' 2)); " is 138.
Long Statement,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The length of the statement  "			tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant; " is 158.
Long Statement,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The length of the statement  "			tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant; " is 158.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The length of the statement  "	return new BColorXYZ (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255)); " is 124.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The length of the statement  "	return new BColorXYZ (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255)); " is 124.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The length of the statement  "	return new BColorLCHab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833)); " is 131.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The length of the statement  "	return new BColorLCHab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833)); " is 131.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The length of the statement  "	return new BColorLCHuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833)); " is 131.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The length of the statement  "	return new BColorLCHuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833)); " is 131.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The length of the statement  "	return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255)); " is 124.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The length of the statement  "	return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255)); " is 124.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The length of the statement  "	return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255)); " is 124.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The length of the statement  "	return new UColorXYZ (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535)); " is 136.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The length of the statement  "	return new UColorXYZ (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535)); " is 136.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The length of the statement  "	return new UColorLCHab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667)); " is 144.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The length of the statement  "	return new UColorLCHab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667)); " is 144.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The length of the statement  "	return new UColorLCHuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667)); " is 144.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The length of the statement  "	return new UColorLCHuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667)); " is 144.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The length of the statement  "	return new UColorRGB (RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535)); " is 122.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The length of the statement  "	return new UColorRGB (colorspace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535)); " is 124.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The length of the statement  "	return new UColorHSL (RGBSpace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535)); " is 127.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The length of the statement  "	return new UColorHSL (colorspace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535)); " is 129.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The length of the statement  "	return new UColorHSV (RGBSpace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535)); " is 127.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The length of the statement  "	return new UColorHSV (colorspace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535)); " is 129.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The length of the statement  "	return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535)); " is 136.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The length of the statement  "	return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535)); " is 136.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The length of the statement  "	return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535)); " is 136.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99,The length of the statement  "	return new UColorLCH99 ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667)); " is 120.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99b,The length of the statement  "	return new UColorLCH99b ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667)); " is 121.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99c,The length of the statement  "	return new UColorLCH99c ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667)); " is 121.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99d,The length of the statement  "	return new UColorLCH99d ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667)); " is 121.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The length of the statement  "		var3 = (InArr [0] == var2) ? InArr [1] - InArr [2] : ((InArr [2] == var2) ? InArr [0] - InArr [1] : InArr [2] - InArr [0]); " is 123.
Long Statement,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The length of the statement  "	OutArr [0] = YCbCrSpaceArr [(int)YCbCrSpace].KR * InArr [0] + YCbCrSpaceArr [(int)YCbCrSpace].KG * InArr [1] + YCbCrSpaceArr [(int)YCbCrSpace].KB * InArr [2]; " is 158.
Long Statement,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The length of the statement  "		return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]); " is 143.
Long Statement,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToNonLinear,The length of the statement  "			return new BColorRGB (SpaceName' (byte)(Space.ToNonLinear (R) * 255)' (byte)(Space.ToNonLinear (G) * 255)' (byte)(Space.ToNonLinear (B) * 255)' false); " is 151.
Long Statement,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToLinear,The length of the statement  "			return new BColorRGB (SpaceName' (byte)(Space.ToLinear (R) * 255)' (byte)(Space.ToLinear (G) * 255)' (byte)(Space.ToLinear (B) * 255)' true); " is 141.
Long Statement,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The length of the statement  "		return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]); " is 143.
Long Statement,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToNonLinear,The length of the statement  "			return new UColorRGB (SpaceName' (ushort)(Space.ToNonLinear (R) * 65535)' (ushort)(Space.ToNonLinear (G) * 65535)' (ushort)(Space.ToNonLinear (B) * 65535)' false); " is 163.
Long Statement,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToLinear,The length of the statement  "			return new UColorRGB (SpaceName' (ushort)(Space.ToLinear (R) * 65535)' (ushort)(Space.ToLinear (G) * 65535)' (ushort)(Space.ToLinear (B) * 65535)' true); " is 153.
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELuv:  	return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEXYZ:  	return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.DEF:  	return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Bef:  	return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.BCH:  	return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	if (ICC_Profile == null)  		return new ColorGray (ICC_Profile' ColorValues [0]);  	else  		return new ColorGray (wp.Copy ()' ColorValues [0]);  case ColorModel.RGB:  	if (ICC_Profile == null)  		return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	if (ICC_Profile == null)  		return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	if (ICC_Profile == null)  		return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	if (ICC_Profile == null)  		return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  	else  		return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMY:  	return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CMYK:  	return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  case ColorModel.Color2:  case ColorModel.Color3:  case ColorModel.Color4:  case ColorModel.Color5:  case ColorModel.Color6:  case ColorModel.Color7:  case ColorModel.Color8:  case ColorModel.Color9:  case ColorModel.Color10:  case ColorModel.Color11:  case ColorModel.Color12:  case ColorModel.Color13:  case ColorModel.Color14:  case ColorModel.Color15:  	return new ColorX (ICC_Profile' (double[])ColorArray.Clone ());  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorLab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorLuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorXYZ (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorYxy (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorLCHab (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorLCHuv (wp.Copy ()' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorDEF (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorBef (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorBCH (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: if (ICC_Profile == null)  	return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  else  	return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: if (ICC_Profile == null)  	return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  else  	return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorRGB (((ColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorRGB (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: if (ICC_Profile == null)  	return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  else  	return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: if (ICC_Profile == null)  	return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  else  	return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorHSL (((ColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorHSL (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: if (ICC_Profile == null)  	return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  else  	return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: if (ICC_Profile == null)  	return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  else  	return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorHSV (((ColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorHSV (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: if (ICC_Profile == null)  	return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  else  	return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: if (ICC_Profile == null)  	return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  else  	return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorYCbCr (((ColorYCbCr)this).Space.Name' ((ColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorYCbCr (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorCMY (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  
Magic Number,ColorManagment,Color,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\BaseColor.cs,Copy,The following statement contains a magic number: return new ColorCMYK (ICC_Profile' ColorValues [0]' ColorValues [1]' ColorValues [2]' ColorValues [3]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_PCS,The following statement contains a magic number: if (!IsDefault) {  	if (Profile.HasGrayTRC && ConversionType == ICCconversionType.Monochrome) {  		dowhat = 0;  	}  	else if (Profile.HasBToA0 && ConversionType == ICCconversionType.NComponentLUT) {  		dowhat = 1;  	}  	else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  		dowhat = 2;  	}  }  else {  	if (Profile.HasRedTRC) {  		dowhat = 2;  	}  	else if (Profile.HasBToA0) {  		dowhat = 1;  	}  	else if (Profile.HasGrayTRC) {  		dowhat = 0;  	}  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_PCS,The following statement contains a magic number: if (!IsDefault) {  	if (Profile.HasGrayTRC && ConversionType == ICCconversionType.Monochrome) {  		dowhat = 0;  	}  	else if (Profile.HasBToA0 && ConversionType == ICCconversionType.NComponentLUT) {  		dowhat = 1;  	}  	else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  		dowhat = 2;  	}  }  else {  	if (Profile.HasRedTRC) {  		dowhat = 2;  	}  	else if (Profile.HasBToA0) {  		dowhat = 1;  	}  	else if (Profile.HasGrayTRC) {  		dowhat = 0;  	}  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_PCS,The following statement contains a magic number: if (Profile.HasGrayTRC && ConversionType == ICCconversionType.Monochrome) {  	dowhat = 0;  }  else if (Profile.HasBToA0 && ConversionType == ICCconversionType.NComponentLUT) {  	dowhat = 1;  }  else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  	dowhat = 2;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_PCS,The following statement contains a magic number: if (Profile.HasBToA0 && ConversionType == ICCconversionType.NComponentLUT) {  	dowhat = 1;  }  else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  	dowhat = 2;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_PCS,The following statement contains a magic number: if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  	dowhat = 2;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_PCS,The following statement contains a magic number: dowhat = 2;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_PCS,The following statement contains a magic number: if (Profile.HasRedTRC) {  	dowhat = 2;  }  else if (Profile.HasBToA0) {  	dowhat = 1;  }  else if (Profile.HasGrayTRC) {  	dowhat = 0;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_PCS,The following statement contains a magic number: dowhat = 2;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_PCS,The following statement contains a magic number: switch (dowhat) {  case 0:  	if (!IsDefault && ConversionMethod == ICCconversionMethod.LUT && Profile.HasBToA0) {  		result = PCS_LUT_Device ();  	}  	else {  		result = PCS_Gray_Device ();  	}  	break;  case 1:  	if (!IsDefault && ConversionMethod == ICCconversionMethod.MultiprocessElement && Profile.HasBToD0) {  		result = PCS_Multiprocess_Device ();  	}  	else {  		result = PCS_LUT_Device ();  	}  	break;  case 2:  	if (!IsDefault && ConversionMethod == ICCconversionMethod.LUT && Profile.HasBToA1) {  		result = PCS_LUT_Device ();  	}  	else {  		result = PCS_MatrixTRC_Device ();  	}  	break;  default:  	throw new ArgumentException ("Conversiondata of ICC not found");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_PCS,The following statement contains a magic number: if (!IsDefault) {  	if (Profile.HasGrayTRC && ConversionType == ICCconversionType.Monochrome) {  		dowhat = 0;  	}  	else if (Profile.HasBToA0 && ConversionType == ICCconversionType.NComponentLUT) {  		dowhat = 1;  	}  	else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  		dowhat = 2;  	}  }  else {  	if (Profile.HasRedTRC) {  		dowhat = 2;  	}  	else if (Profile.HasBToA0) {  		dowhat = 1;  	}  	else if (Profile.HasGrayTRC) {  		dowhat = 0;  	}  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_PCS,The following statement contains a magic number: if (!IsDefault) {  	if (Profile.HasGrayTRC && ConversionType == ICCconversionType.Monochrome) {  		dowhat = 0;  	}  	else if (Profile.HasBToA0 && ConversionType == ICCconversionType.NComponentLUT) {  		dowhat = 1;  	}  	else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  		dowhat = 2;  	}  }  else {  	if (Profile.HasRedTRC) {  		dowhat = 2;  	}  	else if (Profile.HasBToA0) {  		dowhat = 1;  	}  	else if (Profile.HasGrayTRC) {  		dowhat = 0;  	}  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_PCS,The following statement contains a magic number: if (Profile.HasGrayTRC && ConversionType == ICCconversionType.Monochrome) {  	dowhat = 0;  }  else if (Profile.HasBToA0 && ConversionType == ICCconversionType.NComponentLUT) {  	dowhat = 1;  }  else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  	dowhat = 2;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_PCS,The following statement contains a magic number: if (Profile.HasBToA0 && ConversionType == ICCconversionType.NComponentLUT) {  	dowhat = 1;  }  else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  	dowhat = 2;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_PCS,The following statement contains a magic number: if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  	dowhat = 2;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_PCS,The following statement contains a magic number: dowhat = 2;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_PCS,The following statement contains a magic number: if (Profile.HasRedTRC) {  	dowhat = 2;  }  else if (Profile.HasBToA0) {  	dowhat = 1;  }  else if (Profile.HasGrayTRC) {  	dowhat = 0;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_PCS,The following statement contains a magic number: dowhat = 2;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_PCS,The following statement contains a magic number: switch (dowhat) {  case 0:  	if (!IsDefault && ConversionMethod == ICCconversionMethod.LUT && Profile.HasBToA0) {  		result = PCS_LUT_Device ();  	}  	else {  		result = PCS_Gray_Device ();  	}  	break;  case 1:  	if (!IsDefault && ConversionMethod == ICCconversionMethod.MultiprocessElement && Profile.HasBToD0) {  		result = PCS_Multiprocess_Device ();  	}  	else {  		result = PCS_LUT_Device ();  	}  	break;  case 2:  	if (!IsDefault && ConversionMethod == ICCconversionMethod.LUT && Profile.HasBToA1) {  		result = PCS_LUT_Device ();  	}  	else {  		result = PCS_MatrixTRC_Device ();  	}  	break;  default:  	throw new ArgumentException ("Conversiondata of ICC not found");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_Device,The following statement contains a magic number: if (!IsDefault) {  	if (Profile.HasGrayTRC && ConversionType == ICCconversionType.Monochrome) {  		dowhat = 0;  	}  	else if (Profile.HasAToB0 && ConversionType == ICCconversionType.NComponentLUT) {  		dowhat = 1;  	}  	else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  		dowhat = 2;  	}  }  else {  	if (Profile.HasRedTRC) {  		dowhat = 2;  	}  	else if (Profile.HasAToB0) {  		dowhat = 1;  	}  	else if (Profile.HasGrayTRC) {  		dowhat = 0;  	}  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_Device,The following statement contains a magic number: if (!IsDefault) {  	if (Profile.HasGrayTRC && ConversionType == ICCconversionType.Monochrome) {  		dowhat = 0;  	}  	else if (Profile.HasAToB0 && ConversionType == ICCconversionType.NComponentLUT) {  		dowhat = 1;  	}  	else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  		dowhat = 2;  	}  }  else {  	if (Profile.HasRedTRC) {  		dowhat = 2;  	}  	else if (Profile.HasAToB0) {  		dowhat = 1;  	}  	else if (Profile.HasGrayTRC) {  		dowhat = 0;  	}  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_Device,The following statement contains a magic number: if (Profile.HasGrayTRC && ConversionType == ICCconversionType.Monochrome) {  	dowhat = 0;  }  else if (Profile.HasAToB0 && ConversionType == ICCconversionType.NComponentLUT) {  	dowhat = 1;  }  else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  	dowhat = 2;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_Device,The following statement contains a magic number: if (Profile.HasAToB0 && ConversionType == ICCconversionType.NComponentLUT) {  	dowhat = 1;  }  else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  	dowhat = 2;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_Device,The following statement contains a magic number: if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  	dowhat = 2;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_Device,The following statement contains a magic number: dowhat = 2;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_Device,The following statement contains a magic number: if (Profile.HasRedTRC) {  	dowhat = 2;  }  else if (Profile.HasAToB0) {  	dowhat = 1;  }  else if (Profile.HasGrayTRC) {  	dowhat = 0;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_Device,The following statement contains a magic number: dowhat = 2;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoDisplayDevice_Device,The following statement contains a magic number: switch (dowhat) {  case 0:  	if (!IsDefault && ConversionMethod == ICCconversionMethod.LUT && Profile.HasAToB0) {  		result = Device_LUT_PCS ();  	}  	else {  		return Device_Gray_PCS ();  	}  	break;  case 1:  	if (!IsDefault && ConversionMethod == ICCconversionMethod.MultiprocessElement && Profile.HasDToB0) {  		result = Device_Multiprocess_PCS ();  	}  	else {  		result = Device_LUT_PCS ();  	}  	break;  case 2:  	if (!IsDefault && ConversionMethod == ICCconversionMethod.LUT && Profile.HasAToB1) {  		result = Device_LUT_PCS ();  	}  	else {  		result = Device_MatrixTRC_PCS ();  	}  	break;  default:  	throw new ArgumentException ("Conversiondata of ICC not found");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_Device,The following statement contains a magic number: if (!IsDefault) {  	if (Profile.HasGrayTRC && ConversionType == ICCconversionType.Monochrome) {  		dowhat = 0;  	}  	else if (Profile.HasAToB0 && ConversionType == ICCconversionType.NComponentLUT) {  		dowhat = 1;  	}  	else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  		dowhat = 2;  	}  }  else {  	if (Profile.HasRedTRC) {  		dowhat = 2;  	}  	else if (Profile.HasAToB0) {  		dowhat = 1;  	}  	else if (Profile.HasGrayTRC) {  		dowhat = 0;  	}  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_Device,The following statement contains a magic number: if (!IsDefault) {  	if (Profile.HasGrayTRC && ConversionType == ICCconversionType.Monochrome) {  		dowhat = 0;  	}  	else if (Profile.HasAToB0 && ConversionType == ICCconversionType.NComponentLUT) {  		dowhat = 1;  	}  	else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  		dowhat = 2;  	}  }  else {  	if (Profile.HasRedTRC) {  		dowhat = 2;  	}  	else if (Profile.HasAToB0) {  		dowhat = 1;  	}  	else if (Profile.HasGrayTRC) {  		dowhat = 0;  	}  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_Device,The following statement contains a magic number: if (Profile.HasGrayTRC && ConversionType == ICCconversionType.Monochrome) {  	dowhat = 0;  }  else if (Profile.HasAToB0 && ConversionType == ICCconversionType.NComponentLUT) {  	dowhat = 1;  }  else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  	dowhat = 2;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_Device,The following statement contains a magic number: if (Profile.HasAToB0 && ConversionType == ICCconversionType.NComponentLUT) {  	dowhat = 1;  }  else if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  	dowhat = 2;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_Device,The following statement contains a magic number: if (Profile.HasRedTRC && ConversionType == ICCconversionType.ThreeComponentMatrix) {  	dowhat = 2;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_Device,The following statement contains a magic number: dowhat = 2;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_Device,The following statement contains a magic number: if (Profile.HasRedTRC) {  	dowhat = 2;  }  else if (Profile.HasAToB0) {  	dowhat = 1;  }  else if (Profile.HasGrayTRC) {  	dowhat = 0;  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_Device,The following statement contains a magic number: dowhat = 2;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,DoInputDevice_Device,The following statement contains a magic number: switch (dowhat) {  case 0:  	if (!IsDefault && ConversionMethod == ICCconversionMethod.LUT && Profile.HasAToB0) {  		result = Device_LUT_PCS ();  	}  	else {  		return Device_Gray_PCS ();  	}  	break;  case 1:  	if (!IsDefault && ConversionMethod == ICCconversionMethod.MultiprocessElement && Profile.HasDToB0) {  		result = Device_Multiprocess_PCS ();  	}  	else {  		result = Device_LUT_PCS ();  	}  	break;  case 2:  	if (!IsDefault && ConversionMethod == ICCconversionMethod.LUT && Profile.HasAToB1) {  		result = Device_LUT_PCS ();  	}  	else {  		result = Device_MatrixTRC_PCS ();  	}  	break;  default:  	throw new ArgumentException ("Conversiondata of ICC not found");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: output = new double[3];  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: if (ic.Length != 3) {  	throw new ArgumentException ("Input color has wrong number of channels");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: M = new double[3' 3] {  	{  		Mr [0]'  		Mg [0]'  		Mb [0]  	}'  	{  		Mr [1]'  		Mg [1]'  		Mb [1]  	}'  	{  		Mr [2]'  		Mg [2]'  		Mb [2]  	}  };  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: M = new double[3' 3] {  	{  		Mr [0]'  		Mg [0]'  		Mb [0]  	}'  	{  		Mr [1]'  		Mg [1]'  		Mb [1]  	}'  	{  		Mr [2]'  		Mg [2]'  		Mb [2]  	}  };  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: M = new double[3' 3] {  	{  		Mr [0]'  		Mg [0]'  		Mb [0]  	}'  	{  		Mr [1]'  		Mg [1]'  		Mb [1]  	}'  	{  		Mr [2]'  		Mg [2]'  		Mb [2]  	}  };  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: M = new double[3' 3] {  	{  		Mr [0]'  		Mg [0]'  		Mb [0]  	}'  	{  		Mr [1]'  		Mg [1]'  		Mb [1]  	}'  	{  		Mr [2]'  		Mg [2]'  		Mb [2]  	}  };  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: M = new double[3' 3] {  	{  		Mr [0]'  		Mg [0]'  		Mb [0]  	}'  	{  		Mr [1]'  		Mg [1]'  		Mb [1]  	}'  	{  		Mr [2]'  		Mg [2]'  		Mb [2]  	}  };  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: if (TagEntry3.Signature == TypeSignature.curve) {  	output [2] = ((curveTagDataEntry)TagEntry3).GetValueInverted (t [2]);  }  else if (TagEntry3.Signature == TypeSignature.parametricCurve) {  	output [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.InverseFunction (t [2]);  }  else {  	throw new CorruptProfileException ("blueTRCTag has wrong type");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: if (TagEntry3.Signature == TypeSignature.curve) {  	output [2] = ((curveTagDataEntry)TagEntry3).GetValueInverted (t [2]);  }  else if (TagEntry3.Signature == TypeSignature.parametricCurve) {  	output [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.InverseFunction (t [2]);  }  else {  	throw new CorruptProfileException ("blueTRCTag has wrong type");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: if (TagEntry3.Signature == TypeSignature.curve) {  	output [2] = ((curveTagDataEntry)TagEntry3).GetValueInverted (t [2]);  }  else if (TagEntry3.Signature == TypeSignature.parametricCurve) {  	output [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.InverseFunction (t [2]);  }  else {  	throw new CorruptProfileException ("blueTRCTag has wrong type");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: if (TagEntry3.Signature == TypeSignature.curve) {  	output [2] = ((curveTagDataEntry)TagEntry3).GetValueInverted (t [2]);  }  else if (TagEntry3.Signature == TypeSignature.parametricCurve) {  	output [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.InverseFunction (t [2]);  }  else {  	throw new CorruptProfileException ("blueTRCTag has wrong type");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: output [2] = ((curveTagDataEntry)TagEntry3).GetValueInverted (t [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: output [2] = ((curveTagDataEntry)TagEntry3).GetValueInverted (t [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: if (TagEntry3.Signature == TypeSignature.parametricCurve) {  	output [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.InverseFunction (t [2]);  }  else {  	throw new CorruptProfileException ("blueTRCTag has wrong type");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: if (TagEntry3.Signature == TypeSignature.parametricCurve) {  	output [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.InverseFunction (t [2]);  }  else {  	throw new CorruptProfileException ("blueTRCTag has wrong type");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: output [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.InverseFunction (t [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_MatrixTRC_Device,The following statement contains a magic number: output [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.InverseFunction (t [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_LUT_Device,The following statement contains a magic number: if (ic.Length != 3) {  	throw new ArgumentException ("Input color has wrong number of channels");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,PCS_Multiprocess_Device,The following statement contains a magic number: if (ic.Length != 3) {  	throw new ArgumentException ("Input color has wrong number of channels");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: t = new double[3];  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: if (ic.Length != 3) {  	throw new ArgumentException ("Input color has wrong number of channels");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: if (TagEntry3.Signature == TypeSignature.curve) {  	t [2] = ((curveTagDataEntry)TagEntry3).GetValue (ic [2]);  }  else if (TagEntry3.Signature == TypeSignature.parametricCurve) {  	t [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.Function (ic [2]);  }  else {  	throw new CorruptProfileException ("blueTRCTag has wrong type");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: if (TagEntry3.Signature == TypeSignature.curve) {  	t [2] = ((curveTagDataEntry)TagEntry3).GetValue (ic [2]);  }  else if (TagEntry3.Signature == TypeSignature.parametricCurve) {  	t [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.Function (ic [2]);  }  else {  	throw new CorruptProfileException ("blueTRCTag has wrong type");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: if (TagEntry3.Signature == TypeSignature.curve) {  	t [2] = ((curveTagDataEntry)TagEntry3).GetValue (ic [2]);  }  else if (TagEntry3.Signature == TypeSignature.parametricCurve) {  	t [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.Function (ic [2]);  }  else {  	throw new CorruptProfileException ("blueTRCTag has wrong type");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: if (TagEntry3.Signature == TypeSignature.curve) {  	t [2] = ((curveTagDataEntry)TagEntry3).GetValue (ic [2]);  }  else if (TagEntry3.Signature == TypeSignature.parametricCurve) {  	t [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.Function (ic [2]);  }  else {  	throw new CorruptProfileException ("blueTRCTag has wrong type");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: t [2] = ((curveTagDataEntry)TagEntry3).GetValue (ic [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: t [2] = ((curveTagDataEntry)TagEntry3).GetValue (ic [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: if (TagEntry3.Signature == TypeSignature.parametricCurve) {  	t [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.Function (ic [2]);  }  else {  	throw new CorruptProfileException ("blueTRCTag has wrong type");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: if (TagEntry3.Signature == TypeSignature.parametricCurve) {  	t [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.Function (ic [2]);  }  else {  	throw new CorruptProfileException ("blueTRCTag has wrong type");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: t [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.Function (ic [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: t [2] = ((parametricCurveTagDataEntry)TagEntry3).Curve.Function (ic [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: M = new double[3' 3] {  	{  		Mr [0]'  		Mg [0]'  		Mb [0]  	}'  	{  		Mr [1]'  		Mg [1]'  		Mb [1]  	}'  	{  		Mr [2]'  		Mg [2]'  		Mb [2]  	}  };  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: M = new double[3' 3] {  	{  		Mr [0]'  		Mg [0]'  		Mb [0]  	}'  	{  		Mr [1]'  		Mg [1]'  		Mb [1]  	}'  	{  		Mr [2]'  		Mg [2]'  		Mb [2]  	}  };  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: M = new double[3' 3] {  	{  		Mr [0]'  		Mg [0]'  		Mb [0]  	}'  	{  		Mr [1]'  		Mg [1]'  		Mb [1]  	}'  	{  		Mr [2]'  		Mg [2]'  		Mb [2]  	}  };  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: M = new double[3' 3] {  	{  		Mr [0]'  		Mg [0]'  		Mb [0]  	}'  	{  		Mr [1]'  		Mg [1]'  		Mb [1]  	}'  	{  		Mr [2]'  		Mg [2]'  		Mb [2]  	}  };  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_MatrixTRC_PCS,The following statement contains a magic number: M = new double[3' 3] {  	{  		Mr [0]'  		Mg [0]'  		Mb [0]  	}'  	{  		Mr [1]'  		Mg [1]'  		Mb [1]  	}'  	{  		Mr [2]'  		Mg [2]'  		Mb [2]  	}  };  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_Gray_PCS,The following statement contains a magic number: if (Profile.Header.PCS == ColorSpaceType.CIEXYZ) {  	return new ColorXYZ (Profile.ReferenceWhite' 0' sout' 0);  }  else if (Profile.Header.PCS == ColorSpaceType.CIELAB) {  	return new ColorLab (Profile.ReferenceWhite' sout * 100' 0' 0);  }  else {  	throw new ArgumentException ("Profile connection space is corrupt! (has to be either XYZ or Lab)");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_Gray_PCS,The following statement contains a magic number: if (Profile.Header.PCS == ColorSpaceType.CIELAB) {  	return new ColorLab (Profile.ReferenceWhite' sout * 100' 0' 0);  }  else {  	throw new ArgumentException ("Profile connection space is corrupt! (has to be either XYZ or Lab)");  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,Device_Gray_PCS,The following statement contains a magic number: return new ColorLab (Profile.ReferenceWhite' sout * 100' 0' 0);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.CIELab || InModel == ColorModel.CIELuv) {  	ic [0] /= 100;  	ic [1] = (ic [1] + 140) / 280d;  	ic [2] = (ic [2] + 140) / 280d;  }  else if (InModel == ColorModel.CMY || InModel == ColorModel.CMYK) {  	ic = ic.Select (t => t / 100d).ToArray ();  }  else if (InModel == ColorModel.HSV) {  	ic [0] /= 360d;  }  else if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.CIELab || InModel == ColorModel.CIELuv) {  	ic [0] /= 100;  	ic [1] = (ic [1] + 140) / 280d;  	ic [2] = (ic [2] + 140) / 280d;  }  else if (InModel == ColorModel.CMY || InModel == ColorModel.CMYK) {  	ic = ic.Select (t => t / 100d).ToArray ();  }  else if (InModel == ColorModel.HSV) {  	ic [0] /= 360d;  }  else if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.CIELab || InModel == ColorModel.CIELuv) {  	ic [0] /= 100;  	ic [1] = (ic [1] + 140) / 280d;  	ic [2] = (ic [2] + 140) / 280d;  }  else if (InModel == ColorModel.CMY || InModel == ColorModel.CMYK) {  	ic = ic.Select (t => t / 100d).ToArray ();  }  else if (InModel == ColorModel.HSV) {  	ic [0] /= 360d;  }  else if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.CIELab || InModel == ColorModel.CIELuv) {  	ic [0] /= 100;  	ic [1] = (ic [1] + 140) / 280d;  	ic [2] = (ic [2] + 140) / 280d;  }  else if (InModel == ColorModel.CMY || InModel == ColorModel.CMYK) {  	ic = ic.Select (t => t / 100d).ToArray ();  }  else if (InModel == ColorModel.HSV) {  	ic [0] /= 360d;  }  else if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.CIELab || InModel == ColorModel.CIELuv) {  	ic [0] /= 100;  	ic [1] = (ic [1] + 140) / 280d;  	ic [2] = (ic [2] + 140) / 280d;  }  else if (InModel == ColorModel.CMY || InModel == ColorModel.CMYK) {  	ic = ic.Select (t => t / 100d).ToArray ();  }  else if (InModel == ColorModel.HSV) {  	ic [0] /= 360d;  }  else if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.CIELab || InModel == ColorModel.CIELuv) {  	ic [0] /= 100;  	ic [1] = (ic [1] + 140) / 280d;  	ic [2] = (ic [2] + 140) / 280d;  }  else if (InModel == ColorModel.CMY || InModel == ColorModel.CMYK) {  	ic = ic.Select (t => t / 100d).ToArray ();  }  else if (InModel == ColorModel.HSV) {  	ic [0] /= 360d;  }  else if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.CIELab || InModel == ColorModel.CIELuv) {  	ic [0] /= 100;  	ic [1] = (ic [1] + 140) / 280d;  	ic [2] = (ic [2] + 140) / 280d;  }  else if (InModel == ColorModel.CMY || InModel == ColorModel.CMYK) {  	ic = ic.Select (t => t / 100d).ToArray ();  }  else if (InModel == ColorModel.HSV) {  	ic [0] /= 360d;  }  else if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: ic [0] /= 100;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: ic [1] = (ic [1] + 140) / 280d;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: ic [2] = (ic [2] + 140) / 280d;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: ic [2] = (ic [2] + 140) / 280d;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: ic [2] = (ic [2] + 140) / 280d;  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.CMY || InModel == ColorModel.CMYK) {  	ic = ic.Select (t => t / 100d).ToArray ();  }  else if (InModel == ColorModel.HSV) {  	ic [0] /= 360d;  }  else if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.CMY || InModel == ColorModel.CMYK) {  	ic = ic.Select (t => t / 100d).ToArray ();  }  else if (InModel == ColorModel.HSV) {  	ic [0] /= 360d;  }  else if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.HSV) {  	ic [0] /= 360d;  }  else if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.HSV) {  	ic [0] /= 360d;  }  else if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: if (InModel == ColorModel.HSL) {  	ic [0] /= 360d;  	ic [1] = InValues [2];  	ic [2] = InValues [1];  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: ic [1] = InValues [2];  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,AdjustColor,The following statement contains a magic number: ic [2] = InValues [1];  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: switch (outType) {  case ColorSpaceType.RGB:  	return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  case ColorSpaceType.HSV:  	return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.HLS:  	return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  case ColorSpaceType.CIEYxy:  	return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIEXYZ:  	return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.CIELUV:  	return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CIELAB:  	return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  case ColorSpaceType.CMY:  	return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  case ColorSpaceType.CMYK:  	return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  case ColorSpaceType.Gray:  	return new ColorGray (Profile' inValues [0]);  case ColorSpaceType.YCbCr:  	return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  case ColorSpaceType.Color2:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color3:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color4:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color5:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color6:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color7:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color8:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color9:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color10:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color11:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color12:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color13:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color14:  	return new ColorX (Profile' inValues);  case ColorSpaceType.Color15:  	return new ColorX (Profile' inValues);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorRGB (Profile' inValues [0]' inValues [1]' inValues [2]' false);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorHSV (Profile' inValues [0]' inValues [1]' inValues [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorHSL (Profile' inValues [0]' inValues [2]' inValues [1]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorYxy (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorXYZ (Profile.ReferenceWhite' inValues [0]' inValues [1]' inValues [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorLuv (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorLab (Profile.ReferenceWhite' inValues [0] * 100' inValues [1]' inValues [2]);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorCMY (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorCMYK (Profile' inValues [0] * 100' inValues [1] * 100' inValues [2] * 100' inValues [3] * 100);  
Magic Number,ColorManagment,ICC_Converter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\ICC_Conversion.cs,ToColor,The following statement contains a magic number: return new ColorYCbCr (Profile' inValues [0]' inValues [1]' inValues [2]);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE76,The following statement contains a magic number: return Math.Sqrt (Math.Pow (Color2.L - Color1.L' 2) + Math.Pow (Color2.a - Color1.a' 2) + Math.Pow (Color2.b - Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE76,The following statement contains a magic number: return Math.Sqrt (Math.Pow (Color2.L - Color1.L' 2) + Math.Pow (Color2.a - Color1.a' 2) + Math.Pow (Color2.b - Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE76,The following statement contains a magic number: return Math.Sqrt (Math.Pow (Color2.L - Color1.L' 2) + Math.Pow (Color2.a - Color1.a' 2) + Math.Pow (Color2.b - Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: var1 = (DiffMethod == CIE94DifferenceMethod.Textiles) ? 2 : 1;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (Color1.a' 2) + Math.Pow (Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (Color1.a' 2) + Math.Pow (Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: var3 = Math.Sqrt (Math.Pow (Color2.a' 2) + Math.Pow (Color2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: var3 = Math.Sqrt (Math.Pow (Color2.a' 2) + Math.Pow (Color2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: var4 = (DiffMethod == CIE94DifferenceMethod.GraphicArts) ? 0.045 : 0.048;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: var4 = (DiffMethod == CIE94DifferenceMethod.GraphicArts) ? 0.045 : 0.048;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: var5 = (DiffMethod == CIE94DifferenceMethod.GraphicArts) ? 0.015 : 0.014;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: var5 = (DiffMethod == CIE94DifferenceMethod.GraphicArts) ? 0.015 : 0.014;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: var6 = Math.Pow (Color1.a - Color2.a' 2) + Math.Pow (Color1.b - Color2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: var6 = Math.Pow (Color1.a - Color2.a' 2) + Math.Pow (Color1.b - Color2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: var6 = Math.Pow (Color1.a - Color2.a' 2) + Math.Pow (Color1.b - Color2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((Color1.L - Color2.L) / var1' 2) + Math.Pow ((var2 - var3) / (1 + var4 * var2)' 2) + var6 / Math.Pow ((1 + var5 * var2)' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((Color1.L - Color2.L) / var1' 2) + Math.Pow ((var2 - var3) / (1 + var4 * var2)' 2) + var6 / Math.Pow ((1 + var5 * var2)' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIE94,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((Color1.L - Color2.L) / var1' 2) + Math.Pow ((var2 - var3) / (1 + var4 * var2)' 2) + var6 / Math.Pow ((1 + var5 * var2)' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (Color1.a' 2) + Math.Pow (Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (Color1.a' 2) + Math.Pow (Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var3 = Math.Sqrt (Math.Pow (Color2.a' 2) + Math.Pow (Color2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var3 = Math.Sqrt (Math.Pow (Color2.a' 2) + Math.Pow (Color2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var5 = (1 - Math.Sqrt ((Math.Pow (var4' 7)) / (Math.Pow (var4' 7) + 6103515625))) / 2d;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var5 = (1 - Math.Sqrt ((Math.Pow (var4' 7)) / (Math.Pow (var4' 7) + 6103515625))) / 2d;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var5 = (1 - Math.Sqrt ((Math.Pow (var4' 7)) / (Math.Pow (var4' 7) + 6103515625))) / 2d;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var8 = Math.Sqrt (Math.Pow (var6' 2) + Math.Pow (Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var8 = Math.Sqrt (Math.Pow (var6' 2) + Math.Pow (Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var9 = Math.Sqrt (Math.Pow (var7' 2) + Math.Pow (Color2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var9 = Math.Sqrt (Math.Pow (var7' 2) + Math.Pow (Color2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var14 = 1 - 0.17 * Math.Cos (var13 - 0.5236) + 0.24 * Math.Cos (2 * var13) + 0.32 * Math.Cos (3 * var13 + 0.10472) - 0.2 * Math.Cos (4 * var13 - 1.0995574);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var14 = 1 - 0.17 * Math.Cos (var13 - 0.5236) + 0.24 * Math.Cos (2 * var13) + 0.32 * Math.Cos (3 * var13 + 0.10472) - 0.2 * Math.Cos (4 * var13 - 1.0995574);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var14 = 1 - 0.17 * Math.Cos (var13 - 0.5236) + 0.24 * Math.Cos (2 * var13) + 0.32 * Math.Cos (3 * var13 + 0.10472) - 0.2 * Math.Cos (4 * var13 - 1.0995574);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var14 = 1 - 0.17 * Math.Cos (var13 - 0.5236) + 0.24 * Math.Cos (2 * var13) + 0.32 * Math.Cos (3 * var13 + 0.10472) - 0.2 * Math.Cos (4 * var13 - 1.0995574);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var14 = 1 - 0.17 * Math.Cos (var13 - 0.5236) + 0.24 * Math.Cos (2 * var13) + 0.32 * Math.Cos (3 * var13 + 0.10472) - 0.2 * Math.Cos (4 * var13 - 1.0995574);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var14 = 1 - 0.17 * Math.Cos (var13 - 0.5236) + 0.24 * Math.Cos (2 * var13) + 0.32 * Math.Cos (3 * var13 + 0.10472) - 0.2 * Math.Cos (4 * var13 - 1.0995574);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var14 = 1 - 0.17 * Math.Cos (var13 - 0.5236) + 0.24 * Math.Cos (2 * var13) + 0.32 * Math.Cos (3 * var13 + 0.10472) - 0.2 * Math.Cos (4 * var13 - 1.0995574);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var14 = 1 - 0.17 * Math.Cos (var13 - 0.5236) + 0.24 * Math.Cos (2 * var13) + 0.32 * Math.Cos (3 * var13 + 0.10472) - 0.2 * Math.Cos (4 * var13 - 1.0995574);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var14 = 1 - 0.17 * Math.Cos (var13 - 0.5236) + 0.24 * Math.Cos (2 * var13) + 0.32 * Math.Cos (3 * var13 + 0.10472) - 0.2 * Math.Cos (4 * var13 - 1.0995574);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var14 = 1 - 0.17 * Math.Cos (var13 - 0.5236) + 0.24 * Math.Cos (2 * var13) + 0.32 * Math.Cos (3 * var13 + 0.10472) - 0.2 * Math.Cos (4 * var13 - 1.0995574);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var16 = 2 * Math.Sqrt (var8 * var9) * Math.Sin (var15 / 2d);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var17 = 1 + ((0.015 * Math.Pow (var1 - 50' 2)) / (Math.Sqrt (20 + Math.Pow (var1 - 50' 2))));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var17 = 1 + ((0.015 * Math.Pow (var1 - 50' 2)) / (Math.Sqrt (20 + Math.Pow (var1 - 50' 2))));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var17 = 1 + ((0.015 * Math.Pow (var1 - 50' 2)) / (Math.Sqrt (20 + Math.Pow (var1 - 50' 2))));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var17 = 1 + ((0.015 * Math.Pow (var1 - 50' 2)) / (Math.Sqrt (20 + Math.Pow (var1 - 50' 2))));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var17 = 1 + ((0.015 * Math.Pow (var1 - 50' 2)) / (Math.Sqrt (20 + Math.Pow (var1 - 50' 2))));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var17 = 1 + ((0.015 * Math.Pow (var1 - 50' 2)) / (Math.Sqrt (20 + Math.Pow (var1 - 50' 2))));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var18 = 1 + 0.045 * var10;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var19 = 1 + 0.015 * var10 * var14;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var20 = 1.0471976 * Math.Exp (-Math.Pow ((var13 - 4.799655) / 0.436332313' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var20 = 1.0471976 * Math.Exp (-Math.Pow ((var13 - 4.799655) / 0.436332313' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var20 = 1.0471976 * Math.Exp (-Math.Pow ((var13 - 4.799655) / 0.436332313' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var20 = 1.0471976 * Math.Exp (-Math.Pow ((var13 - 4.799655) / 0.436332313' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var21 = 2 * Math.Sqrt (Math.Pow (var10' 7) / (Math.Pow (var10' 7) + 6103515625));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var21 = 2 * Math.Sqrt (Math.Pow (var10' 7) / (Math.Pow (var10' 7) + 6103515625));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var21 = 2 * Math.Sqrt (Math.Pow (var10' 7) / (Math.Pow (var10' 7) + 6103515625));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var21 = 2 * Math.Sqrt (Math.Pow (var10' 7) / (Math.Pow (var10' 7) + 6103515625));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: var22 = -var21 * Math.Sin (2 * var20);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((Color2.L - Color1.L) / var17' 2) + Math.Pow ((var9 - var8) / var18' 2) + Math.Pow (var16 / var19' 2) + var22 * ((var9 - var8) / var18) * ((var16) / var19));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((Color2.L - Color1.L) / var17' 2) + Math.Pow ((var9 - var8) / var18' 2) + Math.Pow (var16 / var19' 2) + var22 * ((var9 - var8) / var18) * ((var16) / var19));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CIEDE2000,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((Color2.L - Color1.L) / var17' 2) + Math.Pow ((var9 - var8) / var18' 2) + Math.Pow (var16 / var19' 2) + var22 * ((var9 - var8) / var18) * ((var16) / var19));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var1 = (DiffMethod == CMCDifferenceMethod.Acceptability) ? 2 : 1;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (nLab1.a' 2) + Math.Pow (nLab1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (nLab1.a' 2) + Math.Pow (nLab1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var3 = Math.Sqrt (Math.Pow (nLab2.a' 2) + Math.Pow (nLab2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var3 = Math.Sqrt (Math.Pow (nLab2.a' 2) + Math.Pow (nLab2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var4 = Math.Pow (nLab1.a - nLab2.a' 2) + Math.Pow (nLab1.b - nLab2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var4 = Math.Pow (nLab1.a - nLab2.a' 2) + Math.Pow (nLab1.b - nLab2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var4 = Math.Pow (nLab1.a - nLab2.a' 2) + Math.Pow (nLab1.b - nLab2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var6 = (nLab1.L < 16) ? 0.511 : (nLab1.L * 0.040975) / (1 + nLab1.L * 0.01765);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var6 = (nLab1.L < 16) ? 0.511 : (nLab1.L * 0.040975) / (1 + nLab1.L * 0.01765);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var6 = (nLab1.L < 16) ? 0.511 : (nLab1.L * 0.040975) / (1 + nLab1.L * 0.01765);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var6 = (nLab1.L < 16) ? 0.511 : (nLab1.L * 0.040975) / (1 + nLab1.L * 0.01765);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var7 = ((0.0638 * var2) / (1 + 0.0131 * var2)) + 0.638;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var7 = ((0.0638 * var2) / (1 + 0.0131 * var2)) + 0.638;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var7 = ((0.0638 * var2) / (1 + 0.0131 * var2)) + 0.638;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var10 = Math.Sqrt (Math.Pow (var2' 4) / (Math.Pow (var2' 4) + 1900));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var10 = Math.Sqrt (Math.Pow (var2' 4) / (Math.Pow (var2' 4) + 1900));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var10 = Math.Sqrt (Math.Pow (var2' 4) / (Math.Pow (var2' 4) + 1900));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((nLab1.L - nLab2.L) / (var1 * var6)' 2) + Math.Pow ((var2 - var3) / var7' 2) + Math.Pow (var5 / var11' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((nLab1.L - nLab2.L) / (var1 * var6)' 2) + Math.Pow ((var2 - var3) / var7' 2) + Math.Pow (var5 / var11' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((nLab1.L - nLab2.L) / (var1 * var6)' 2) + Math.Pow ((var2 - var3) / var7' 2) + Math.Pow (var5 / var11' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (nLab1.a' 2) + Math.Pow (nLab1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (nLab1.a' 2) + Math.Pow (nLab1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var3 = Math.Sqrt (Math.Pow (nLab2.a' 2) + Math.Pow (nLab2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var3 = Math.Sqrt (Math.Pow (nLab2.a' 2) + Math.Pow (nLab2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var4 = Math.Pow (nLab1.a - nLab2.a' 2) + Math.Pow (nLab1.b - nLab2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var4 = Math.Pow (nLab1.a - nLab2.a' 2) + Math.Pow (nLab1.b - nLab2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var4 = Math.Pow (nLab1.a - nLab2.a' 2) + Math.Pow (nLab1.b - nLab2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var6 = (nLab1.L < 16) ? 0.511 : (nLab1.L * 0.040975) / (1 + nLab1.L * 0.01765);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var6 = (nLab1.L < 16) ? 0.511 : (nLab1.L * 0.040975) / (1 + nLab1.L * 0.01765);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var6 = (nLab1.L < 16) ? 0.511 : (nLab1.L * 0.040975) / (1 + nLab1.L * 0.01765);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var6 = (nLab1.L < 16) ? 0.511 : (nLab1.L * 0.040975) / (1 + nLab1.L * 0.01765);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var7 = ((0.0638 * var2) / (1 + 0.0131 * var2)) + 0.638;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var7 = ((0.0638 * var2) / (1 + 0.0131 * var2)) + 0.638;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var7 = ((0.0638 * var2) / (1 + 0.0131 * var2)) + 0.638;  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var9 = (var8 <= 6.0213859193804370403867331512857 && var8 >= 2.8623399732707005061548528603213) ? 0.56 + Math.Abs (0.2 * Math.Cos (var8 + 2.9321531433504736892318004910609)) : 0.36 + Math.Abs (0.4 * Math.Cos (var8 + 0.61086523819801535192329176897101));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var10 = Math.Sqrt (Math.Pow (var2' 4) / (Math.Pow (var2' 4) + 1900));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var10 = Math.Sqrt (Math.Pow (var2' 4) / (Math.Pow (var2' 4) + 1900));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: var10 = Math.Sqrt (Math.Pow (var2' 4) / (Math.Pow (var2' 4) + 1900));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((nLab1.L - nLab2.L) / (l * var6)' 2) + Math.Pow ((var2 - var3) / (c * var7)' 2) + Math.Pow (var5 / var11' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((nLab1.L - nLab2.L) / (l * var6)' 2) + Math.Pow ((var2 - var3) / (c * var7)' 2) + Math.Pow (var5 / var11' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_CMC,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((nLab1.L - nLab2.L) / (l * var6)' 2) + Math.Pow ((var2 - var3) / (c * var7)' 2) + Math.Pow (var5 / var11' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CIE94,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (Color1.a' 2) + Math.Pow (Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CIE94,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (Color1.a' 2) + Math.Pow (Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CIE94,The following statement contains a magic number: var3 = Math.Sqrt (Math.Pow (Color2.a' 2) + Math.Pow (Color2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CIE94,The following statement contains a magic number: var3 = Math.Sqrt (Math.Pow (Color2.a' 2) + Math.Pow (Color2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CIE94,The following statement contains a magic number: var1 = Math.Pow (Color1.a - Color2.a' 2) + Math.Pow (Color1.b - Color2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CIE94,The following statement contains a magic number: var1 = Math.Pow (Color1.a - Color2.a' 2) + Math.Pow (Color1.b - Color2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CIE94,The following statement contains a magic number: var1 = Math.Pow (Color1.a - Color2.a' 2) + Math.Pow (Color1.b - Color2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CMC,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (nLab1.a' 2) + Math.Pow (nLab1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CMC,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (nLab1.a' 2) + Math.Pow (nLab1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CMC,The following statement contains a magic number: var3 = Math.Sqrt (Math.Pow (nLab2.a' 2) + Math.Pow (nLab2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CMC,The following statement contains a magic number: var3 = Math.Sqrt (Math.Pow (nLab2.a' 2) + Math.Pow (nLab2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CMC,The following statement contains a magic number: var1 = Math.Pow (nLab1.a - nLab2.a' 2) + Math.Pow (nLab1.b - nLab2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CMC,The following statement contains a magic number: var1 = Math.Pow (nLab1.a - nLab2.a' 2) + Math.Pow (nLab1.b - nLab2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_CMC,The following statement contains a magic number: var1 = Math.Pow (nLab1.a - nLab2.a' 2) + Math.Pow (nLab1.b - nLab2.b' 2) - Math.Pow (var2 - var3' 2);  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaC_CIE94,The following statement contains a magic number: var1 = Math.Sqrt (Math.Pow (Color1.a' 2) + Math.Pow (Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaC_CIE94,The following statement contains a magic number: var1 = Math.Sqrt (Math.Pow (Color1.a' 2) + Math.Pow (Color1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaC_CIE94,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (Color2.a' 2) + Math.Pow (Color2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaC_CIE94,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (Color2.a' 2) + Math.Pow (Color2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaC_CMC,The following statement contains a magic number: var1 = Math.Sqrt (Math.Pow (nLab1.a' 2) + Math.Pow (nLab1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaC_CMC,The following statement contains a magic number: var1 = Math.Sqrt (Math.Pow (nLab1.a' 2) + Math.Pow (nLab1.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaC_CMC,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (nLab2.a' 2) + Math.Pow (nLab2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaC_CMC,The following statement contains a magic number: var2 = Math.Sqrt (Math.Pow (nLab2.a' 2) + Math.Pow (nLab2.b' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_DIN99_Base,The following statement contains a magic number: return Math.Sqrt (Math.Pow (Color1.L - Color2.L' 2) + Math.Pow (var1 - var3' 2) + Math.Pow (var2 - var4' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_DIN99_Base,The following statement contains a magic number: return Math.Sqrt (Math.Pow (Color1.L - Color2.L' 2) + Math.Pow (var1 - var3' 2) + Math.Pow (var2 - var4' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaE_DIN99_Base,The following statement contains a magic number: return Math.Sqrt (Math.Pow (Color1.L - Color2.L' 2) + Math.Pow (var1 - var3' 2) + Math.Pow (var2 - var4' 2));  
Magic Number,ColorManagment,ColorDifference,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ColorDifference.cs,GetDeltaH_DIN99_Base,The following statement contains a magic number: var5 = Math.Sqrt (0.5 * (Color2.C * Color1.C + var3 * var1 + var4 * var2));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 = new double[3' 3];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 = new double[3' 3];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,InvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,MultiplyMatrix,The following statement contains a magic number: c = new double[3];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,MultiplyMatrix,The following statement contains a magic number: c [0] = b [0] * a [0' 0] + b [1] * a [0' 1] + b [2] * a [0' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,MultiplyMatrix,The following statement contains a magic number: c [0] = b [0] * a [0' 0] + b [1] * a [0' 1] + b [2] * a [0' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,MultiplyMatrix,The following statement contains a magic number: c [1] = b [0] * a [1' 0] + b [1] * a [1' 1] + b [2] * a [1' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,MultiplyMatrix,The following statement contains a magic number: c [1] = b [0] * a [1' 0] + b [1] * a [1' 1] + b [2] * a [1' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,MultiplyMatrix,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,MultiplyMatrix,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,MultiplyMatrix,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,MultiplyMatrix,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,MultiplyMatrix,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,MultiplyMatrix,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: determinant += (M [0' i] * (M [1' (i + 1) % 3] * M [2' (i + 2) % 3] - M [1' (i + 2) % 3] * M [2' (i + 1) % 3]));  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticInvertMatrix,The following statement contains a magic number: tmp3x3 [i' j] = ((M [(i + 1) % 3' (j + 1) % 3] * M [(i + 2) % 3' (j + 2) % 3]) - (M [(i + 1) % 3' (j + 2) % 3] * M [(i + 2) % 3' (j + 1) % 3])) / determinant;  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: c [0] = b [0] * a [0' 0] + b [1] * a [0' 1] + b [2] * a [0' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: c [0] = b [0] * a [0' 0] + b [1] * a [0' 1] + b [2] * a [0' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: c [1] = b [0] * a [1' 0] + b [1] * a [1' 1] + b [2] * a [1' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: c [1] = b [0] * a [1' 0] + b [1] * a [1' 1] + b [2] * a [1' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: c [2] = b [0] * a [2' 0] + b [1] * a [2' 1] + b [2] * a [2' 2];  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		for (int k = 0; k < 3; k++) {  			output [i' j] += a [i' k] * b [k' j];  		}  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		for (int k = 0; k < 3; k++) {  			output [i' j] += a [i' k] * b [k' j];  		}  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	for (int j = 0; j < 3; j++) {  		for (int k = 0; k < 3; k++) {  			output [i' j] += a [i' k] * b [k' j];  		}  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	for (int k = 0; k < 3; k++) {  		output [i' j] += a [i' k] * b [k' j];  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: for (int j = 0; j < 3; j++) {  	for (int k = 0; k < 3; k++) {  		output [i' j] += a [i' k] * b [k' j];  	}  }  
Magic Number,ColorManagment,MMath,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\MMath.cs,StaticMultiplyMatrix,The following statement contains a magic number: for (int k = 0; k < 3; k++) {  	output [i' j] += a [i' k] * b [k' j];  }  
Magic Number,ColorManagment,CustomRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,GetM,The following statement contains a magic number: return new double['] {  	{  		S [0] * Xr'  		S [1] * Xg'  		S [2] * Xb  	}'  	{  		S [0]'  		S [1]'  		S [2]  	}'  	{  		S [0] * Zr'  		S [1] * Zg'  		S [2] * Zb  	}  };  
Magic Number,ColorManagment,CustomRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,GetM,The following statement contains a magic number: return new double['] {  	{  		S [0] * Xr'  		S [1] * Xg'  		S [2] * Xb  	}'  	{  		S [0]'  		S [1]'  		S [2]  	}'  	{  		S [0] * Zr'  		S [1] * Zg'  		S [2] * Zb  	}  };  
Magic Number,ColorManagment,CustomRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,GetM,The following statement contains a magic number: return new double['] {  	{  		S [0] * Xr'  		S [1] * Xg'  		S [2] * Xb  	}'  	{  		S [0]'  		S [1]'  		S [2]  	}'  	{  		S [0] * Zr'  		S [1] * Zg'  		S [2] * Zb  	}  };  
Magic Number,ColorManagment,sRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,ToLinear,The following statement contains a magic number: return (c > 0.04045) ? Math.Pow ((c + 0.055) / 1.055' 2.4) : (c / 12.92);  
Magic Number,ColorManagment,sRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,ToLinear,The following statement contains a magic number: return (c > 0.04045) ? Math.Pow ((c + 0.055) / 1.055' 2.4) : (c / 12.92);  
Magic Number,ColorManagment,sRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,ToLinear,The following statement contains a magic number: return (c > 0.04045) ? Math.Pow ((c + 0.055) / 1.055' 2.4) : (c / 12.92);  
Magic Number,ColorManagment,sRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,ToLinear,The following statement contains a magic number: return (c > 0.04045) ? Math.Pow ((c + 0.055) / 1.055' 2.4) : (c / 12.92);  
Magic Number,ColorManagment,sRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,ToLinear,The following statement contains a magic number: return (c > 0.04045) ? Math.Pow ((c + 0.055) / 1.055' 2.4) : (c / 12.92);  
Magic Number,ColorManagment,sRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,ToNonLinear,The following statement contains a magic number: return (c <= 0.0031308) ? 12.92 * c : 1.055 * Math.Pow (c' 1 / 2.4) - 0.055;  
Magic Number,ColorManagment,sRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,ToNonLinear,The following statement contains a magic number: return (c <= 0.0031308) ? 12.92 * c : 1.055 * Math.Pow (c' 1 / 2.4) - 0.055;  
Magic Number,ColorManagment,sRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,ToNonLinear,The following statement contains a magic number: return (c <= 0.0031308) ? 12.92 * c : 1.055 * Math.Pow (c' 1 / 2.4) - 0.055;  
Magic Number,ColorManagment,sRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,ToNonLinear,The following statement contains a magic number: return (c <= 0.0031308) ? 12.92 * c : 1.055 * Math.Pow (c' 1 / 2.4) - 0.055;  
Magic Number,ColorManagment,sRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\RGBColorspace.cs,ToNonLinear,The following statement contains a magic number: return (c <= 0.0031308) ? 12.92 * c : 1.055 * Math.Pow (c' 1 / 2.4) - 0.055;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: switch (type) {  case ICCReader.ColorSpaceType.Color2:  	CC = 2;  	ModelName = ColorModel.Color2;  	break;  case ICCReader.ColorSpaceType.Color3:  	CC = 3;  	ModelName = ColorModel.Color3;  	break;  case ICCReader.ColorSpaceType.Color4:  	CC = 4;  	ModelName = ColorModel.Color4;  	break;  case ICCReader.ColorSpaceType.Color5:  	CC = 5;  	ModelName = ColorModel.Color5;  	break;  case ICCReader.ColorSpaceType.Color6:  	CC = 6;  	ModelName = ColorModel.Color6;  	break;  case ICCReader.ColorSpaceType.Color7:  	CC = 7;  	ModelName = ColorModel.Color7;  	break;  case ICCReader.ColorSpaceType.Color8:  	CC = 8;  	ModelName = ColorModel.Color8;  	break;  case ICCReader.ColorSpaceType.Color9:  	CC = 9;  	ModelName = ColorModel.Color9;  	break;  case ICCReader.ColorSpaceType.Color10:  	CC = 10;  	ModelName = ColorModel.Color10;  	break;  case ICCReader.ColorSpaceType.Color11:  	CC = 11;  	ModelName = ColorModel.Color11;  	break;  case ICCReader.ColorSpaceType.Color12:  	CC = 12;  	ModelName = ColorModel.Color12;  	break;  case ICCReader.ColorSpaceType.Color13:  	CC = 13;  	ModelName = ColorModel.Color13;  	break;  case ICCReader.ColorSpaceType.Color14:  	CC = 14;  	ModelName = ColorModel.Color14;  	break;  case ICCReader.ColorSpaceType.Color15:  	CC = 15;  	ModelName = ColorModel.Color15;  	break;  default:  	throw new ArgumentException ("Wrong colorspace");  }  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 2;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 3;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 4;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 5;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 6;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 7;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 8;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 9;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 10;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 11;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 12;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 13;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 14;  
Magic Number,ColorManagment,ColorX,C:\repos\RedGlow_ColorWars\ColorManagment\Colors\Other_Based.cs,SetValues,The following statement contains a magic number: CC = 15;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYxy,The following statement contains a magic number: return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYxy,The following statement contains a magic number: return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYxy,The following statement contains a magic number: return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLab,The following statement contains a magic number: return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLab,The following statement contains a magic number: return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLab,The following statement contains a magic number: return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLuv,The following statement contains a magic number: return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLuv,The following statement contains a magic number: return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLuv,The following statement contains a magic number: return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new ColorRGB (colorspace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new ColorHSL (colorspace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new ColorHSV (colorspace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99,The following statement contains a magic number: return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99b,The following statement contains a magic number: return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99c,The following statement contains a magic number: return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99d,The following statement contains a magic number: return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToDEF,The following statement contains a magic number: return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToDEF,The following statement contains a magic number: return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToDEF,The following statement contains a magic number: return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToBef,The following statement contains a magic number: return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToBef,The following statement contains a magic number: return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToBef,The following statement contains a magic number: return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToBCH,The following statement contains a magic number: return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToBCH,The following statement contains a magic number: return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToBCH,The following statement contains a magic number: return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new BColorXYZ (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new BColorXYZ (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new BColorXYZ (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new BColorXYZ (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new BColorXYZ (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new BColorXYZ (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new BColorXYZ (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new BColorXYZ (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYxy,The following statement contains a magic number: return new BColorYxy (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (sbyte)varArr [1]' (sbyte)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYxy,The following statement contains a magic number: return new BColorYxy (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (sbyte)varArr [1]' (sbyte)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYxy,The following statement contains a magic number: return new BColorYxy (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (sbyte)varArr [1]' (sbyte)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYxy,The following statement contains a magic number: return new BColorYxy (OutReferenceWhite.Name' (byte)(varArr [0] * 255)' (sbyte)varArr [1]' (sbyte)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLab,The following statement contains a magic number: return new BColorLab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (sbyte)varArr [1]' (sbyte)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLab,The following statement contains a magic number: return new BColorLab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (sbyte)varArr [1]' (sbyte)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLab,The following statement contains a magic number: return new BColorLab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (sbyte)varArr [1]' (sbyte)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLab,The following statement contains a magic number: return new BColorLab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (sbyte)varArr [1]' (sbyte)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLuv,The following statement contains a magic number: return new BColorLuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (sbyte)varArr [1]' (sbyte)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLuv,The following statement contains a magic number: return new BColorLuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (sbyte)varArr [1]' (sbyte)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLuv,The following statement contains a magic number: return new BColorLuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (sbyte)varArr [1]' (sbyte)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLuv,The following statement contains a magic number: return new BColorLuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (sbyte)varArr [1]' (sbyte)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new BColorLCHab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new BColorLCHab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new BColorLCHab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new BColorLCHab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new BColorLCHab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new BColorLCHab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new BColorLCHab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new BColorLCHab (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new BColorLCHuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new BColorLCHuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new BColorLCHuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new BColorLCHuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new BColorLCHuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new BColorLCHuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new BColorLCHuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new BColorLCHuv (OutReferenceWhite.Name' (byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new BColorRGB (RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new BColorRGB (RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new BColorRGB (RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new BColorRGB (RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new BColorRGB (colorspace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new BColorRGB (colorspace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new BColorRGB (colorspace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new BColorRGB (colorspace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new BColorHSL (RGBSpace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new BColorHSL (RGBSpace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new BColorHSL (RGBSpace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new BColorHSL (RGBSpace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new BColorHSL (colorspace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new BColorHSL (colorspace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new BColorHSL (colorspace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new BColorHSL (colorspace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new BColorHSV (RGBSpace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new BColorHSV (RGBSpace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new BColorHSV (RGBSpace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new BColorHSV (RGBSpace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new BColorHSV (colorspace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new BColorHSV (colorspace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new BColorHSV (colorspace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new BColorHSV (colorspace' (byte)(varArr [0] * 0.70833)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new BColorYCbCr (YCbCrSpace' RGBSpace' (byte)(varArr [0] * 255)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99,The following statement contains a magic number: return new BColorLCH99 ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99,The following statement contains a magic number: return new BColorLCH99 ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99,The following statement contains a magic number: return new BColorLCH99 ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99,The following statement contains a magic number: return new BColorLCH99 ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99b,The following statement contains a magic number: return new BColorLCH99b ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99b,The following statement contains a magic number: return new BColorLCH99b ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99b,The following statement contains a magic number: return new BColorLCH99b ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99b,The following statement contains a magic number: return new BColorLCH99b ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99c,The following statement contains a magic number: return new BColorLCH99c ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99c,The following statement contains a magic number: return new BColorLCH99c ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99c,The following statement contains a magic number: return new BColorLCH99c ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99c,The following statement contains a magic number: return new BColorLCH99c ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99d,The following statement contains a magic number: return new BColorLCH99d ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99d,The following statement contains a magic number: return new BColorLCH99d ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99d,The following statement contains a magic number: return new BColorLCH99d ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99d,The following statement contains a magic number: return new BColorLCH99d ((byte)(varArr [0] * 2.55)' (byte)(varArr [1] * 255)' (byte)(varArr [2] * 0.70833));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToGray,The following statement contains a magic number: return new BColorGray (OutReferenceWhite.Name' (byte)(varArr [0] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToGray,The following statement contains a magic number: return new BColorGray (OutReferenceWhite.Name' (byte)(varArr [0] * 255));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new UColorXYZ (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new UColorXYZ (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new UColorXYZ (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new UColorXYZ (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new UColorXYZ (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new UColorXYZ (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new UColorXYZ (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToXYZ,The following statement contains a magic number: return new UColorXYZ (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYxy,The following statement contains a magic number: return new UColorYxy (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (short)varArr [1]' (short)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYxy,The following statement contains a magic number: return new UColorYxy (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (short)varArr [1]' (short)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYxy,The following statement contains a magic number: return new UColorYxy (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (short)varArr [1]' (short)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYxy,The following statement contains a magic number: return new UColorYxy (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535)' (short)varArr [1]' (short)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLab,The following statement contains a magic number: return new UColorLab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (short)varArr [1]' (short)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLab,The following statement contains a magic number: return new UColorLab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (short)varArr [1]' (short)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLab,The following statement contains a magic number: return new UColorLab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (short)varArr [1]' (short)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLab,The following statement contains a magic number: return new UColorLab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (short)varArr [1]' (short)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLuv,The following statement contains a magic number: return new UColorLuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (short)varArr [1]' (short)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLuv,The following statement contains a magic number: return new UColorLuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (short)varArr [1]' (short)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLuv,The following statement contains a magic number: return new UColorLuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (short)varArr [1]' (short)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLuv,The following statement contains a magic number: return new UColorLuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (short)varArr [1]' (short)varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new UColorLCHab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new UColorLCHab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new UColorLCHab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new UColorLCHab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new UColorLCHab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new UColorLCHab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new UColorLCHab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHab,The following statement contains a magic number: return new UColorLCHab (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new UColorLCHuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new UColorLCHuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new UColorLCHuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new UColorLCHuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new UColorLCHuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new UColorLCHuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new UColorLCHuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCHuv,The following statement contains a magic number: return new UColorLCHuv (OutReferenceWhite.Name' (ushort)(varArr [0] * 655.35)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new UColorRGB (RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new UColorRGB (RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new UColorRGB (RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new UColorRGB (RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new UColorRGB (colorspace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new UColorRGB (colorspace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new UColorRGB (colorspace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToRGB,The following statement contains a magic number: return new UColorRGB (colorspace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new UColorHSL (RGBSpace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new UColorHSL (RGBSpace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new UColorHSL (RGBSpace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new UColorHSL (RGBSpace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new UColorHSL (colorspace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new UColorHSL (colorspace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new UColorHSL (colorspace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSL,The following statement contains a magic number: return new UColorHSL (colorspace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new UColorHSV (RGBSpace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new UColorHSV (RGBSpace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new UColorHSV (RGBSpace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new UColorHSV (RGBSpace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new UColorHSV (colorspace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new UColorHSV (colorspace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new UColorHSV (colorspace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToHSV,The following statement contains a magic number: return new UColorHSV (colorspace' (ushort)(varArr [0] * 182.041667)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToYCbCr,The following statement contains a magic number: return new UColorYCbCr (YCbCrSpace' RGBSpace' (ushort)(varArr [0] * 65535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99,The following statement contains a magic number: return new UColorLCH99 ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99,The following statement contains a magic number: return new UColorLCH99 ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99,The following statement contains a magic number: return new UColorLCH99 ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99,The following statement contains a magic number: return new UColorLCH99 ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99b,The following statement contains a magic number: return new UColorLCH99b ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99b,The following statement contains a magic number: return new UColorLCH99b ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99b,The following statement contains a magic number: return new UColorLCH99b ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99b,The following statement contains a magic number: return new UColorLCH99b ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99c,The following statement contains a magic number: return new UColorLCH99c ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99c,The following statement contains a magic number: return new UColorLCH99c ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99c,The following statement contains a magic number: return new UColorLCH99c ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99c,The following statement contains a magic number: return new UColorLCH99c ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99d,The following statement contains a magic number: return new UColorLCH99d ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99d,The following statement contains a magic number: return new UColorLCH99d ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99d,The following statement contains a magic number: return new UColorLCH99d ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToLCH99d,The following statement contains a magic number: return new UColorLCH99d ((ushort)(varArr [0] * 65.535)' (ushort)(varArr [1] * 65535)' (ushort)(varArr [2] * 182.041667));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToGray,The following statement contains a magic number: return new UColorGray (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ToGray,The following statement contains a magic number: return new UColorGray (OutReferenceWhite.Name' (ushort)(varArr [0] * 65535));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToGray,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToYxy,The following statement contains a magic number: if (DoAdaption) {  	YxyToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToGray,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLab,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCHab,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToGray,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLuv,The following statement contains a magic number: if (DoAdaption) {  	LuvToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	LuvToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToGray,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLab,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCHab,The following statement contains a magic number: if (DoAdaption) {  	LCHabToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToGray,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLuv,The following statement contains a magic number: if (DoAdaption) {  	LuvToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	LCHuvToLuv (ValArr1' ValArr2);  	LuvToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToGray,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToRGB,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToGray,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToHSV,The following statement contains a magic number: if (DoAdaption) {  	HSVToRGB (ValArr1' ValArr2);  	RGBToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToHSL,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToGray,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToHSV,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToHSL,The following statement contains a magic number: if (DoAdaption) {  	HSLToRGB (ValArr1' ValArr2);  	RGBToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToGray,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToRGB,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToHSV,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToHSL,The following statement contains a magic number: if (DoAdaption) {  	RGBToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	YCbCrToRGB (ValArr1' ValArr2);  	RGBToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToGray,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLab,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCHab,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToGray,The following statement contains a magic number: if (DoAdaption) {  	GrayToLab (ValArr1' ref ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLab,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCHab,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToGray,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99,The following statement contains a magic number: if (DoAdaption) {  	LCH99ToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLab,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCHab,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToGray,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	LCH99bToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToXYZ,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToXYZ,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToXYZ,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToYxy,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToYxy,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToYxy,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLab,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLab,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLab,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLuv,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLuv,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLuv,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCHab,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCHab,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCHab,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCHuv,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCHuv,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCHuv,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToRGB,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToRGB,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToRGB,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToHSV,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToHSV,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToHSV,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToHSL,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToHSL,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToHSL,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToYCbCr,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToYCbCr,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToYCbCr,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToGray,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToGray,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToGray,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToGray,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99b,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99b,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99b,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	LCH99cToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	LCH99cToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	LCH99cToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	LCH99cToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	LCH99cToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	LCH99cToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	LCH99cToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToDEF,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToDEF,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToDEF,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToBef,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToBef,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToBef,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToBCH,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToBCH,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToBCH,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.1 * ValArr1 [2]) / 1.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToXYZ,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToXYZ,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToXYZ,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToYxy,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToYxy,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToYxy,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLab,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLab,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLab,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLuv,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLuv,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLuv,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCHab,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCHab,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCHab,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCHuv,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCHuv,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCHuv,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToRGB,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToRGB,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToRGB,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToHSV,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToHSV,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToHSV,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToHSL,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToHSL,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToHSL,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToYCbCr,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToYCbCr,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToYCbCr,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToGray,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToGray,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToGray,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToGray,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99b,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99b,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99b,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	LCH99dToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	LCH99dToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	LCH99dToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	LCH99dToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	LCH99dToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	LCH99dToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	LCH99dToLab (ValArr1' ValArr2);  	LabToXYZ (ValArr2' ValArr1);  	ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToDEF,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToDEF,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToDEF,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToDEF,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToBef,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToBef,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToBef,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToBef,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToBCH,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToBCH,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToBCH,The following statement contains a magic number: ValArr1 [0] = (ValArr1 [0] + 0.12 * ValArr1 [2]) / 1.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToBCH,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToGray,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr2' ref ValArr1);  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToDEF,The following statement contains a magic number: if (DoAdaption) {  	DEFToXYZ (ValArr1' ref ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBef,The following statement contains a magic number: if (DoAdaption) {  	DEFToXYZ (ValArr1' ref ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBCH,The following statement contains a magic number: if (DoAdaption) {  	DEFToXYZ (ValArr1' ref ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToDEF (ValArr1' ref ValArr2);  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToGray,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToDEF,The following statement contains a magic number: if (DoAdaption) {  	DEFToXYZ (ValArr2' ref ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToBef,The following statement contains a magic number: if (DoAdaption) {  	BefToDEF (ValArr1' ValArr2);  	DEFToXYZ (ValArr2' ref ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToBCH,The following statement contains a magic number: if (DoAdaption) {  	DEFToXYZ (ValArr2' ref ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	DEFToBCH (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToXYZ,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToXYZ,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToYxy,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToYxy (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToYxy (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToYxy,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLab (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCHab,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCHab (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCHab (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCHab,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCHuv,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLuv (ValArr2' ValArr1);  	LuvToLCHuv (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLuv (ValArr1' ValArr2);  	LuvToLCHuv (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCHuv,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToRGB,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToRGB,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToHSV,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSV (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSV (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToHSV,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToHSL,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToHSL (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToHSL (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToHSL,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToYCbCr,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToRGB (ValArr2' ValArr1);  	RGBToYCbCr (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToRGB (ValArr1' ValArr2);  	RGBToYCbCr (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToYCbCr,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToGray,The following statement contains a magic number: if (DoAdaption) {  	LabToXYZ (ValArr1' ValArr2);  	ChromaticAdaption (ValArr2' ref ValArr1);  	XYZToLab (ValArr1' ValArr2);  	LabToGray (ValArr2' ValArr1);  	EndArr = 1;  }  else {  	LabToGray (ValArr1' ValArr2);  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToGray,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99 (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99 (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99b,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99b (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99b (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99b,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99c (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99c (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.1 - ValArr2 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99c,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.1 - ValArr1 [2] * 0.1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: if (DoAdaption) {  	ChromaticAdaption (ValArr1' ref ValArr2);  	ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  	XYZToLab (ValArr2' ValArr1);  	LabToLCH99d (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  	XYZToLab (ValArr1' ValArr2);  	LabToLCH99d (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: ValArr2 [0] = ValArr2 [0] * 1.12 - ValArr2 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToLCH99d,The following statement contains a magic number: ValArr1 [0] = ValArr1 [0] * 1.12 - ValArr1 [2] * 0.12;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToDEF,The following statement contains a magic number: if (DoAdaption) {  	DEFToXYZ (ValArr2' ref ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	EndArr = 1;  }  else {  	EndArr = 2;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToDEF,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToBef,The following statement contains a magic number: if (DoAdaption) {  	DEFToXYZ (ValArr2' ref ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBef (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	DEFToBef (ValArr2' ValArr1);  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToBef,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToBCH,The following statement contains a magic number: if (DoAdaption) {  	BCHToDEF (ValArr1' ValArr2);  	DEFToXYZ (ValArr2' ref ValArr1);  	ChromaticAdaption (ValArr1' ref ValArr2);  	XYZToDEF (ValArr2' ref ValArr1);  	DEFToBCH (ValArr1' ValArr2);  	EndArr = 2;  }  else {  	EndArr = 1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToBCH,The following statement contains a magic number: EndArr = 2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: switch (OutputModel) {  case ColorModel.CIEXYZ:  	return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIEYxy:  	return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELab:  	return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELuv:  	return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHab:  	return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.CIELCHuv:  	return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.RGB:  	return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSV:  	return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.HSL:  	return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Gray:  	return new ColorGray (OutReferenceWhite' varArr [0]);  case ColorModel.YCbCr:  	return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99:  	return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99b:  	return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99c:  	return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.LCH99d:  	return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  case ColorModel.DEF:  	return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.Bef:  	return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  case ColorModel.BCH:  	return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorXYZ (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorYxy (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorLab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorLuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorLCHab (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorLCHuv (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorRGB (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorHSV (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorHSL (RGBSpace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorYCbCr (YCbCrSpace' RGBSpace' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorLCH99 (varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorLCH99b (varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorLCH99c (varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorLCH99d (varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorDEF (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorBef (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ConvertFast,The following statement contains a magic number: return new ColorBCH (OutReferenceWhite' varArr [0]' varArr [1]' varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: if (InArr [2] == 0) {  	OutArr [0] = 0;  	OutArr [1] = 0;  	OutArr [2] = 0;  }  else {  	OutArr [0] = (InArr [1] * InArr [0]) / InArr [2];  	OutArr [2] = ((1 - InArr [1] - InArr [2]) * InArr [0]) / InArr [2];  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: if (InArr [2] == 0) {  	OutArr [0] = 0;  	OutArr [1] = 0;  	OutArr [2] = 0;  }  else {  	OutArr [0] = (InArr [1] * InArr [0]) / InArr [2];  	OutArr [2] = ((1 - InArr [1] - InArr [2]) * InArr [0]) / InArr [2];  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: if (InArr [2] == 0) {  	OutArr [0] = 0;  	OutArr [1] = 0;  	OutArr [2] = 0;  }  else {  	OutArr [0] = (InArr [1] * InArr [0]) / InArr [2];  	OutArr [2] = ((1 - InArr [1] - InArr [2]) * InArr [0]) / InArr [2];  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: if (InArr [2] == 0) {  	OutArr [0] = 0;  	OutArr [1] = 0;  	OutArr [2] = 0;  }  else {  	OutArr [0] = (InArr [1] * InArr [0]) / InArr [2];  	OutArr [2] = ((1 - InArr [1] - InArr [2]) * InArr [0]) / InArr [2];  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: if (InArr [2] == 0) {  	OutArr [0] = 0;  	OutArr [1] = 0;  	OutArr [2] = 0;  }  else {  	OutArr [0] = (InArr [1] * InArr [0]) / InArr [2];  	OutArr [2] = ((1 - InArr [1] - InArr [2]) * InArr [0]) / InArr [2];  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: if (InArr [2] == 0) {  	OutArr [0] = 0;  	OutArr [1] = 0;  	OutArr [2] = 0;  }  else {  	OutArr [0] = (InArr [1] * InArr [0]) / InArr [2];  	OutArr [2] = ((1 - InArr [1] - InArr [2]) * InArr [0]) / InArr [2];  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: OutArr [2] = 0;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: OutArr [0] = (InArr [1] * InArr [0]) / InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: OutArr [2] = ((1 - InArr [1] - InArr [2]) * InArr [0]) / InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: OutArr [2] = ((1 - InArr [1] - InArr [2]) * InArr [0]) / InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YxyToXYZ,The following statement contains a magic number: OutArr [2] = ((1 - InArr [1] - InArr [2]) * InArr [0]) / InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYxy,The following statement contains a magic number: if (InArr [0] + InArr [1] + InArr [2] == 0) {  	OutArr [1] = OutReferenceWhite.Cx;  	OutArr [2] = OutReferenceWhite.Cy;  }  else {  	OutArr [1] = InArr [0] / (InArr [0] + InArr [1] + InArr [2]);  	OutArr [2] = InArr [1] / (InArr [0] + InArr [1] + InArr [2]);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYxy,The following statement contains a magic number: if (InArr [0] + InArr [1] + InArr [2] == 0) {  	OutArr [1] = OutReferenceWhite.Cx;  	OutArr [2] = OutReferenceWhite.Cy;  }  else {  	OutArr [1] = InArr [0] / (InArr [0] + InArr [1] + InArr [2]);  	OutArr [2] = InArr [1] / (InArr [0] + InArr [1] + InArr [2]);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYxy,The following statement contains a magic number: if (InArr [0] + InArr [1] + InArr [2] == 0) {  	OutArr [1] = OutReferenceWhite.Cx;  	OutArr [2] = OutReferenceWhite.Cy;  }  else {  	OutArr [1] = InArr [0] / (InArr [0] + InArr [1] + InArr [2]);  	OutArr [2] = InArr [1] / (InArr [0] + InArr [1] + InArr [2]);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYxy,The following statement contains a magic number: if (InArr [0] + InArr [1] + InArr [2] == 0) {  	OutArr [1] = OutReferenceWhite.Cx;  	OutArr [2] = OutReferenceWhite.Cy;  }  else {  	OutArr [1] = InArr [0] / (InArr [0] + InArr [1] + InArr [2]);  	OutArr [2] = InArr [1] / (InArr [0] + InArr [1] + InArr [2]);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYxy,The following statement contains a magic number: if (InArr [0] + InArr [1] + InArr [2] == 0) {  	OutArr [1] = OutReferenceWhite.Cx;  	OutArr [2] = OutReferenceWhite.Cy;  }  else {  	OutArr [1] = InArr [0] / (InArr [0] + InArr [1] + InArr [2]);  	OutArr [2] = InArr [1] / (InArr [0] + InArr [1] + InArr [2]);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYxy,The following statement contains a magic number: OutArr [2] = OutReferenceWhite.Cy;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYxy,The following statement contains a magic number: OutArr [1] = InArr [0] / (InArr [0] + InArr [1] + InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYxy,The following statement contains a magic number: OutArr [2] = InArr [1] / (InArr [0] + InArr [1] + InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToYxy,The following statement contains a magic number: OutArr [2] = InArr [1] / (InArr [0] + InArr [1] + InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToXYZ,The following statement contains a magic number: var2 = Fz_LabToXYZ (InArr [2]' InArr [0]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToXYZ,The following statement contains a magic number: OutArr [2] = var5 * InputWhitepoint.Z;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLab,The following statement contains a magic number: OutArr [0] = (116 * Fn_XYZToLab (var1)) - 16;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLab,The following statement contains a magic number: OutArr [0] = (116 * Fn_XYZToLab (var1)) - 16;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLab,The following statement contains a magic number: OutArr [1] = 500 * (Fn_XYZToLab (InArr [0] / OutReferenceWhite.X) - Fn_XYZToLab (var1));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLab,The following statement contains a magic number: OutArr [2] = 200 * (Fn_XYZToLab (var1) - Fn_XYZToLab (InArr [2] / OutReferenceWhite.Z));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLab,The following statement contains a magic number: OutArr [2] = 200 * (Fn_XYZToLab (var1) - Fn_XYZToLab (InArr [2] / OutReferenceWhite.Z));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLab,The following statement contains a magic number: OutArr [2] = 200 * (Fn_XYZToLab (var1) - Fn_XYZToLab (InArr [2] / OutReferenceWhite.Z));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToXYZ,The following statement contains a magic number: if (!IsRGBLinear) {  	InArr [0] = InputRGBSpace.ToLinear (InArr [0]);  	InArr [1] = InputRGBSpace.ToLinear (InArr [1]);  	InArr [2] = InputRGBSpace.ToLinear (InArr [2]);  	IsRGBLinear = true;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToXYZ,The following statement contains a magic number: if (!IsRGBLinear) {  	InArr [0] = InputRGBSpace.ToLinear (InArr [0]);  	InArr [1] = InputRGBSpace.ToLinear (InArr [1]);  	InArr [2] = InputRGBSpace.ToLinear (InArr [2]);  	IsRGBLinear = true;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToXYZ,The following statement contains a magic number: InArr [2] = InputRGBSpace.ToLinear (InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToXYZ,The following statement contains a magic number: InArr [2] = InputRGBSpace.ToLinear (InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToXYZ,The following statement contains a magic number: OutArr [2] = varArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToXYZ,The following statement contains a magic number: OutArr [2] = varArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToRGB,The following statement contains a magic number: OutArr [2] = varArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToRGB,The following statement contains a magic number: OutArr [2] = varArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToRGB,The following statement contains a magic number: OutArr [2] = RGBspaceArr [(int)RGBSpace].ToNonLinear (OutArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToRGB,The following statement contains a magic number: OutArr [2] = RGBspaceArr [(int)RGBSpace].ToNonLinear (OutArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: OutArr [1] = (InArr [0] > KapEps) ? Pow3 ((InArr [0] + 16) / 116d) : InArr [0] / Kappa;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var4 = (4 * varArr [0]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var4 = (4 * varArr [0]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var4 = (4 * varArr [0]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var4 = (4 * varArr [0]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var5 = (9 * varArr [1]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var5 = (9 * varArr [1]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var5 = (9 * varArr [1]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var5 = (9 * varArr [1]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var1 = (((52 * InArr [0]) / (InArr [1] + 13 * InArr [0] * var4)) - 1) / 3d;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var1 = (((52 * InArr [0]) / (InArr [1] + 13 * InArr [0] * var4)) - 1) / 3d;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var2 = -5 * OutArr [1];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var3 = (((39 * InArr [0]) / (InArr [2] + 13 * InArr [0] * var5)) - 5) * OutArr [1];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var3 = (((39 * InArr [0]) / (InArr [2] + 13 * InArr [0] * var5)) - 5) * OutArr [1];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var3 = (((39 * InArr [0]) / (InArr [2] + 13 * InArr [0] * var5)) - 5) * OutArr [1];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: var3 = (((39 * InArr [0]) / (InArr [2] + 13 * InArr [0] * var5)) - 5) * OutArr [1];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: OutArr [0] = (var3 - var2) / (var1 + 0.33333333333333333333333333333333);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToXYZ,The following statement contains a magic number: OutArr [2] = OutArr [0] * var1 + var2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var2 = (4 * InArr [0]) / (InArr [0] + 15 * InArr [1] + 3 * InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var2 = (4 * InArr [0]) / (InArr [0] + 15 * InArr [1] + 3 * InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var2 = (4 * InArr [0]) / (InArr [0] + 15 * InArr [1] + 3 * InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var2 = (4 * InArr [0]) / (InArr [0] + 15 * InArr [1] + 3 * InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var3 = (9 * InArr [1]) / (InArr [0] + 15 * InArr [1] + 3 * InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var3 = (9 * InArr [1]) / (InArr [0] + 15 * InArr [1] + 3 * InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var3 = (9 * InArr [1]) / (InArr [0] + 15 * InArr [1] + 3 * InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var3 = (9 * InArr [1]) / (InArr [0] + 15 * InArr [1] + 3 * InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var4 = (4 * varArr [0]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var4 = (4 * varArr [0]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var4 = (4 * varArr [0]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var4 = (4 * varArr [0]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var5 = (9 * varArr [1]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var5 = (9 * varArr [1]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var5 = (9 * varArr [1]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: var5 = (9 * varArr [1]) / (varArr [0] + 15 * varArr [1] + 3 * varArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: OutArr [0] = (var1 > Epsilon) ? (116d * Math.Pow (var1' 0.33333333333333333333333333333333)) - 16d : Kappa * var1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: OutArr [1] = 13 * OutArr [0] * (var2 - var4);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: OutArr [2] = 13 * OutArr [0] * (var3 - var5);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,XYZToLuv,The following statement contains a magic number: OutArr [2] = 13 * OutArr [0] * (var3 - var5);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLab,The following statement contains a magic number: OutArr [1] = InArr [1] * Math.Cos (InArr [2] * Pi180);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLab,The following statement contains a magic number: OutArr [2] = InArr [1] * Math.Sin (InArr [2] * Pi180);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHabToLab,The following statement contains a magic number: OutArr [2] = InArr [1] * Math.Sin (InArr [2] * Pi180);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCHab,The following statement contains a magic number: OutArr [1] = Math.Sqrt (Pow2 (InArr [1]) + Pow2 (InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCHab,The following statement contains a magic number: OutArr [2] = Math.Atan2 (InArr [2]' InArr [1]) * Pi180_1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCHab,The following statement contains a magic number: OutArr [2] = Math.Atan2 (InArr [2]' InArr [1]) * Pi180_1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLuv,The following statement contains a magic number: OutArr [1] = InArr [1] * Math.Cos (InArr [2] * Pi180);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLuv,The following statement contains a magic number: OutArr [2] = InArr [1] * Math.Sin (InArr [2] * Pi180);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCHuvToLuv,The following statement contains a magic number: OutArr [2] = InArr [1] * Math.Sin (InArr [2] * Pi180);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCHuv,The following statement contains a magic number: OutArr [1] = Math.Sqrt (Pow2 (InArr [1]) + Pow2 (InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCHuv,The following statement contains a magic number: OutArr [2] = Math.Atan2 (InArr [2]' InArr [1]) * Pi180_1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LuvToLCHuv,The following statement contains a magic number: OutArr [2] = Math.Atan2 (InArr [2]' InArr [1]) * Pi180_1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99ToLab,The following statement contains a magic number: OutArr [2] = var6;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99,The following statement contains a magic number: OutArr [2] = var5;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99bToLab,The following statement contains a magic number: OutArr [2] = var6;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99b,The following statement contains a magic number: OutArr [2] = var5;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLab,The following statement contains a magic number: DIN99Lab (2' InArr);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99cToLab,The following statement contains a magic number: OutArr [2] = var6;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: LabDIN99 (2' InArr);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99c,The following statement contains a magic number: OutArr [2] = var5;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLab,The following statement contains a magic number: DIN99Lab (3' InArr);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LCH99dToLab,The following statement contains a magic number: OutArr [2] = var6;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: LabDIN99 (3' InArr);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabToLCH99d,The following statement contains a magic number: OutArr [2] = var5;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: if (IsRGBLinear) {  	InArr [0] = InputRGBSpace.ToNonLinear (InArr [0]);  	InArr [1] = InputRGBSpace.ToNonLinear (InArr [1]);  	InArr [2] = InputRGBSpace.ToNonLinear (InArr [2]);  	IsRGBLinear = false;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: if (IsRGBLinear) {  	InArr [0] = InputRGBSpace.ToNonLinear (InArr [0]);  	InArr [1] = InputRGBSpace.ToNonLinear (InArr [1]);  	InArr [2] = InputRGBSpace.ToNonLinear (InArr [2]);  	IsRGBLinear = false;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: InArr [2] = InputRGBSpace.ToNonLinear (InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: InArr [2] = InputRGBSpace.ToNonLinear (InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: var1 = Math.Max (InArr [0]' Math.Max (InArr [1]' InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: var2 = Math.Min (InArr [0]' Math.Min (InArr [1]' InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [2] = var2;  	OutArr [0] = 0;  }  else {  	var3 = (InArr [0] == var2) ? InArr [1] - InArr [2] : ((InArr [2] == var2) ? InArr [0] - InArr [1] : InArr [2] - InArr [0]);  	var4 = (InArr [0] == var2) ? 3d : ((InArr [2] == var2) ? 1d : 5d);  	OutArr [0] = 60d * (var4 - var3 / (var1 - var2));  	OutArr [2] = var1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [2] = var2;  	OutArr [0] = 0;  }  else {  	var3 = (InArr [0] == var2) ? InArr [1] - InArr [2] : ((InArr [2] == var2) ? InArr [0] - InArr [1] : InArr [2] - InArr [0]);  	var4 = (InArr [0] == var2) ? 3d : ((InArr [2] == var2) ? 1d : 5d);  	OutArr [0] = 60d * (var4 - var3 / (var1 - var2));  	OutArr [2] = var1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [2] = var2;  	OutArr [0] = 0;  }  else {  	var3 = (InArr [0] == var2) ? InArr [1] - InArr [2] : ((InArr [2] == var2) ? InArr [0] - InArr [1] : InArr [2] - InArr [0]);  	var4 = (InArr [0] == var2) ? 3d : ((InArr [2] == var2) ? 1d : 5d);  	OutArr [0] = 60d * (var4 - var3 / (var1 - var2));  	OutArr [2] = var1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [2] = var2;  	OutArr [0] = 0;  }  else {  	var3 = (InArr [0] == var2) ? InArr [1] - InArr [2] : ((InArr [2] == var2) ? InArr [0] - InArr [1] : InArr [2] - InArr [0]);  	var4 = (InArr [0] == var2) ? 3d : ((InArr [2] == var2) ? 1d : 5d);  	OutArr [0] = 60d * (var4 - var3 / (var1 - var2));  	OutArr [2] = var1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [2] = var2;  	OutArr [0] = 0;  }  else {  	var3 = (InArr [0] == var2) ? InArr [1] - InArr [2] : ((InArr [2] == var2) ? InArr [0] - InArr [1] : InArr [2] - InArr [0]);  	var4 = (InArr [0] == var2) ? 3d : ((InArr [2] == var2) ? 1d : 5d);  	OutArr [0] = 60d * (var4 - var3 / (var1 - var2));  	OutArr [2] = var1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [2] = var2;  	OutArr [0] = 0;  }  else {  	var3 = (InArr [0] == var2) ? InArr [1] - InArr [2] : ((InArr [2] == var2) ? InArr [0] - InArr [1] : InArr [2] - InArr [0]);  	var4 = (InArr [0] == var2) ? 3d : ((InArr [2] == var2) ? 1d : 5d);  	OutArr [0] = 60d * (var4 - var3 / (var1 - var2));  	OutArr [2] = var1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [2] = var2;  	OutArr [0] = 0;  }  else {  	var3 = (InArr [0] == var2) ? InArr [1] - InArr [2] : ((InArr [2] == var2) ? InArr [0] - InArr [1] : InArr [2] - InArr [0]);  	var4 = (InArr [0] == var2) ? 3d : ((InArr [2] == var2) ? 1d : 5d);  	OutArr [0] = 60d * (var4 - var3 / (var1 - var2));  	OutArr [2] = var1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [2] = var2;  	OutArr [0] = 0;  }  else {  	var3 = (InArr [0] == var2) ? InArr [1] - InArr [2] : ((InArr [2] == var2) ? InArr [0] - InArr [1] : InArr [2] - InArr [0]);  	var4 = (InArr [0] == var2) ? 3d : ((InArr [2] == var2) ? 1d : 5d);  	OutArr [0] = 60d * (var4 - var3 / (var1 - var2));  	OutArr [2] = var1;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: OutArr [2] = var2;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: var3 = (InArr [0] == var2) ? InArr [1] - InArr [2] : ((InArr [2] == var2) ? InArr [0] - InArr [1] : InArr [2] - InArr [0]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: var3 = (InArr [0] == var2) ? InArr [1] - InArr [2] : ((InArr [2] == var2) ? InArr [0] - InArr [1] : InArr [2] - InArr [0]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: var3 = (InArr [0] == var2) ? InArr [1] - InArr [2] : ((InArr [2] == var2) ? InArr [0] - InArr [1] : InArr [2] - InArr [0]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: var4 = (InArr [0] == var2) ? 3d : ((InArr [2] == var2) ? 1d : 5d);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSV,The following statement contains a magic number: OutArr [2] = var1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	var1 = (InArr [0] / 360d) * 6;  	var2 = Math.Floor (var1);  	var3 = InArr [2] * (1 - InArr [1]);  	var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  	var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  	switch ((int)var2) {  	case 6:  	case 0:  		OutArr [0] = InArr [2];  		OutArr [1] = var5;  		OutArr [2] = var3;  		break;  	case 1:  		OutArr [0] = var4;  		OutArr [1] = InArr [2];  		OutArr [2] = var3;  		break;  	case 2:  		OutArr [0] = var3;  		OutArr [1] = InArr [2];  		OutArr [2] = var5;  		break;  	case 3:  		OutArr [0] = var3;  		OutArr [1] = var4;  		OutArr [2] = InArr [2];  		break;  	case 4:  		OutArr [0] = var5;  		OutArr [1] = var3;  		OutArr [2] = InArr [2];  		break;  	default:  		OutArr [0] = InArr [2];  		OutArr [1] = var3;  		OutArr [2] = var4;  		break;  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [0] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [1] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [2] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [2] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: var1 = (InArr [0] / 360d) * 6;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: var3 = InArr [2] * (1 - InArr [1]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: var4 = InArr [2] * (1 - InArr [1] * (var1 - var2));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: var5 = InArr [2] * (1 - InArr [1] * (1 - (var1 - var2)));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: switch ((int)var2) {  case 6:  case 0:  	OutArr [0] = InArr [2];  	OutArr [1] = var5;  	OutArr [2] = var3;  	break;  case 1:  	OutArr [0] = var4;  	OutArr [1] = InArr [2];  	OutArr [2] = var3;  	break;  case 2:  	OutArr [0] = var3;  	OutArr [1] = InArr [2];  	OutArr [2] = var5;  	break;  case 3:  	OutArr [0] = var3;  	OutArr [1] = var4;  	OutArr [2] = InArr [2];  	break;  case 4:  	OutArr [0] = var5;  	OutArr [1] = var3;  	OutArr [2] = InArr [2];  	break;  default:  	OutArr [0] = InArr [2];  	OutArr [1] = var3;  	OutArr [2] = var4;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [0] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [2] = var3;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [1] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [2] = var3;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [1] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [2] = var5;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [2] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [2] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [2] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [2] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [0] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSVToRGB,The following statement contains a magic number: OutArr [2] = var4;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (IsRGBLinear) {  	InArr [0] = InputRGBSpace.ToNonLinear (InArr [0]);  	InArr [1] = InputRGBSpace.ToNonLinear (InArr [1]);  	InArr [2] = InputRGBSpace.ToNonLinear (InArr [2]);  	IsRGBLinear = false;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (IsRGBLinear) {  	InArr [0] = InputRGBSpace.ToNonLinear (InArr [0]);  	InArr [1] = InputRGBSpace.ToNonLinear (InArr [1]);  	InArr [2] = InputRGBSpace.ToNonLinear (InArr [2]);  	IsRGBLinear = false;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: InArr [2] = InputRGBSpace.ToNonLinear (InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: InArr [2] = InputRGBSpace.ToNonLinear (InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: var1 = Math.Max (InArr [0]' Math.Max (InArr [1]' InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: var2 = Math.Min (InArr [0]' Math.Min (InArr [1]' InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [1] = 0;  	OutArr [0] = 0;  }  else {  	if ((var1 + var2) / 2d <= 0.5) {  		OutArr [1] = (var1 - var2) / (var1 + var2);  	}  	else {  		OutArr [1] = (var1 - var2) / (2 - var1 - var2);  	}  	if (InArr [0] == var1) {  		OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  	}  	else if (InArr [1] == var1) {  		OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  	}  	else {  		OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  	}  	//InArr[2] == max  	OutArr [0] *= 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [1] = 0;  	OutArr [0] = 0;  }  else {  	if ((var1 + var2) / 2d <= 0.5) {  		OutArr [1] = (var1 - var2) / (var1 + var2);  	}  	else {  		OutArr [1] = (var1 - var2) / (2 - var1 - var2);  	}  	if (InArr [0] == var1) {  		OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  	}  	else if (InArr [1] == var1) {  		OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  	}  	else {  		OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  	}  	//InArr[2] == max  	OutArr [0] *= 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [1] = 0;  	OutArr [0] = 0;  }  else {  	if ((var1 + var2) / 2d <= 0.5) {  		OutArr [1] = (var1 - var2) / (var1 + var2);  	}  	else {  		OutArr [1] = (var1 - var2) / (2 - var1 - var2);  	}  	if (InArr [0] == var1) {  		OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  	}  	else if (InArr [1] == var1) {  		OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  	}  	else {  		OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  	}  	//InArr[2] == max  	OutArr [0] *= 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [1] = 0;  	OutArr [0] = 0;  }  else {  	if ((var1 + var2) / 2d <= 0.5) {  		OutArr [1] = (var1 - var2) / (var1 + var2);  	}  	else {  		OutArr [1] = (var1 - var2) / (2 - var1 - var2);  	}  	if (InArr [0] == var1) {  		OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  	}  	else if (InArr [1] == var1) {  		OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  	}  	else {  		OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  	}  	//InArr[2] == max  	OutArr [0] *= 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [1] = 0;  	OutArr [0] = 0;  }  else {  	if ((var1 + var2) / 2d <= 0.5) {  		OutArr [1] = (var1 - var2) / (var1 + var2);  	}  	else {  		OutArr [1] = (var1 - var2) / (2 - var1 - var2);  	}  	if (InArr [0] == var1) {  		OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  	}  	else if (InArr [1] == var1) {  		OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  	}  	else {  		OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  	}  	//InArr[2] == max  	OutArr [0] *= 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [1] = 0;  	OutArr [0] = 0;  }  else {  	if ((var1 + var2) / 2d <= 0.5) {  		OutArr [1] = (var1 - var2) / (var1 + var2);  	}  	else {  		OutArr [1] = (var1 - var2) / (2 - var1 - var2);  	}  	if (InArr [0] == var1) {  		OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  	}  	else if (InArr [1] == var1) {  		OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  	}  	else {  		OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  	}  	//InArr[2] == max  	OutArr [0] *= 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [1] = 0;  	OutArr [0] = 0;  }  else {  	if ((var1 + var2) / 2d <= 0.5) {  		OutArr [1] = (var1 - var2) / (var1 + var2);  	}  	else {  		OutArr [1] = (var1 - var2) / (2 - var1 - var2);  	}  	if (InArr [0] == var1) {  		OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  	}  	else if (InArr [1] == var1) {  		OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  	}  	else {  		OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  	}  	//InArr[2] == max  	OutArr [0] *= 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [1] = 0;  	OutArr [0] = 0;  }  else {  	if ((var1 + var2) / 2d <= 0.5) {  		OutArr [1] = (var1 - var2) / (var1 + var2);  	}  	else {  		OutArr [1] = (var1 - var2) / (2 - var1 - var2);  	}  	if (InArr [0] == var1) {  		OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  	}  	else if (InArr [1] == var1) {  		OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  	}  	else {  		OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  	}  	//InArr[2] == max  	OutArr [0] *= 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (Math.Round (var1' 6) == Math.Round (var2' 6)) {  	OutArr [1] = 0;  	OutArr [0] = 0;  }  else {  	if ((var1 + var2) / 2d <= 0.5) {  		OutArr [1] = (var1 - var2) / (var1 + var2);  	}  	else {  		OutArr [1] = (var1 - var2) / (2 - var1 - var2);  	}  	if (InArr [0] == var1) {  		OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  	}  	else if (InArr [1] == var1) {  		OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  	}  	else {  		OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  	}  	//InArr[2] == max  	OutArr [0] *= 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if ((var1 + var2) / 2d <= 0.5) {  	OutArr [1] = (var1 - var2) / (var1 + var2);  }  else {  	OutArr [1] = (var1 - var2) / (2 - var1 - var2);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if ((var1 + var2) / 2d <= 0.5) {  	OutArr [1] = (var1 - var2) / (var1 + var2);  }  else {  	OutArr [1] = (var1 - var2) / (2 - var1 - var2);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: OutArr [1] = (var1 - var2) / (2 - var1 - var2);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (InArr [0] == var1) {  	OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  }  else if (InArr [1] == var1) {  	OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  }  else {  	OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (InArr [0] == var1) {  	OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  }  else if (InArr [1] == var1) {  	OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  }  else {  	OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (InArr [0] == var1) {  	OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  }  else if (InArr [1] == var1) {  	OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  }  else {  	OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (InArr [0] == var1) {  	OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  }  else if (InArr [1] == var1) {  	OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  }  else {  	OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: OutArr [0] = (InArr [1] - InArr [2]) / (var1 - var2);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (InArr [1] == var1) {  	OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  }  else {  	OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (InArr [1] == var1) {  	OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  }  else {  	OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: if (InArr [1] == var1) {  	OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  }  else {  	OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: OutArr [0] = 2 + (InArr [2] - InArr [0]) / (var1 - var2);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: OutArr [0] = 4 + (InArr [0] - InArr [1]) / (var1 - var2);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: OutArr [0] *= 60;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToHSL,The following statement contains a magic number: OutArr [2] = (var1 + var2) / 2d;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [1] == 0) {  	OutArr [0] = InArr [2];  	OutArr [1] = InArr [2];  	OutArr [2] = InArr [2];  }  else {  	if (InArr [2] < 0.5) {  		var1 = InArr [2] * (1 + InArr [1]);  	}  	else {  		var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  	}  	var2 = 2 * InArr [2] - var1;  	OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  	OutArr [1] = HueToRGB (var2' var1' InArr [0]);  	OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: OutArr [0] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: OutArr [1] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: OutArr [2] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: OutArr [2] = InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [2] < 0.5) {  	var1 = InArr [2] * (1 + InArr [1]);  }  else {  	var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [2] < 0.5) {  	var1 = InArr [2] * (1 + InArr [1]);  }  else {  	var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [2] < 0.5) {  	var1 = InArr [2] * (1 + InArr [1]);  }  else {  	var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [2] < 0.5) {  	var1 = InArr [2] * (1 + InArr [1]);  }  else {  	var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: if (InArr [2] < 0.5) {  	var1 = InArr [2] * (1 + InArr [1]);  }  else {  	var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: var1 = InArr [2] * (1 + InArr [1]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: var1 = (InArr [2] + InArr [1]) - (InArr [1] * InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: var2 = 2 * InArr [2] - var1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: var2 = 2 * InArr [2] - var1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: OutArr [0] = HueToRGB (var2' var1' InArr [0] + 120);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HSLToRGB,The following statement contains a magic number: OutArr [2] = HueToRGB (var2' var1' InArr [0] - 120);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,GrayToLab,The following statement contains a magic number: OutArr [0] = InArr [0] * 100;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: if (!IsRGBLinear) {  	InArr [0] = RGBspaceArr [(int)RGBSpace].ToLinear (InArr [0]);  	InArr [1] = RGBspaceArr [(int)RGBSpace].ToLinear (InArr [1]);  	InArr [2] = RGBspaceArr [(int)RGBSpace].ToLinear (InArr [2]);  	IsRGBLinear = true;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: if (!IsRGBLinear) {  	InArr [0] = RGBspaceArr [(int)RGBSpace].ToLinear (InArr [0]);  	InArr [1] = RGBspaceArr [(int)RGBSpace].ToLinear (InArr [1]);  	InArr [2] = RGBspaceArr [(int)RGBSpace].ToLinear (InArr [2]);  	IsRGBLinear = true;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: InArr [2] = RGBspaceArr [(int)RGBSpace].ToLinear (InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: InArr [2] = RGBspaceArr [(int)RGBSpace].ToLinear (InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: OutArr [0] = YCbCrSpaceArr [(int)YCbCrSpace].KR * InArr [0] + YCbCrSpaceArr [(int)YCbCrSpace].KG * InArr [1] + YCbCrSpaceArr [(int)YCbCrSpace].KB * InArr [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: OutArr [1] = (((InArr [2] - OutArr [0]) / (1 - YCbCrSpaceArr [(int)YCbCrSpace].KB)) / 2) + 0.5;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: OutArr [1] = (((InArr [2] - OutArr [0]) / (1 - YCbCrSpaceArr [(int)YCbCrSpace].KB)) / 2) + 0.5;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: OutArr [1] = (((InArr [2] - OutArr [0]) / (1 - YCbCrSpaceArr [(int)YCbCrSpace].KB)) / 2) + 0.5;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: OutArr [2] = (((InArr [0] - OutArr [0]) / (1 - YCbCrSpaceArr [(int)YCbCrSpace].KR)) / 2) + 0.5;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: OutArr [2] = (((InArr [0] - OutArr [0]) / (1 - YCbCrSpaceArr [(int)YCbCrSpace].KR)) / 2) + 0.5;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,RGBToYCbCr,The following statement contains a magic number: OutArr [2] = (((InArr [0] - OutArr [0]) / (1 - YCbCrSpaceArr [(int)YCbCrSpace].KR)) / 2) + 0.5;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToRGB,The following statement contains a magic number: OutArr [2] = -2 * InArr [1] * (InputYCbCrSpace.KB - 1) + InputYCbCrSpace.KB + InArr [0] - 1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToRGB,The following statement contains a magic number: OutArr [2] = -2 * InArr [1] * (InputYCbCrSpace.KB - 1) + InputYCbCrSpace.KB + InArr [0] - 1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToRGB,The following statement contains a magic number: OutArr [0] = -2 * InArr [2] * (InputYCbCrSpace.KR - 1) + InputYCbCrSpace.KR + InArr [0] - 1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToRGB,The following statement contains a magic number: OutArr [0] = -2 * InArr [2] * (InputYCbCrSpace.KR - 1) + InputYCbCrSpace.KR + InArr [0] - 1;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToRGB,The following statement contains a magic number: OutArr [1] = ((-OutArr [2] * InputYCbCrSpace.KB) - (InputYCbCrSpace.KR * OutArr [0]) + InArr [0]) / InputYCbCrSpace.KG;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToRGB,The following statement contains a magic number: OutArr [2] = InputRGBSpace.ToNonLinear (OutArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,YCbCrToRGB,The following statement contains a magic number: OutArr [2] = InputRGBSpace.ToNonLinear (OutArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToDEF,The following statement contains a magic number: OutArr [2] = InArr [2] * InArr [0];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToDEF,The following statement contains a magic number: OutArr [2] = InArr [2] * InArr [0];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BefToDEF,The following statement contains a magic number: OutArr [0] = Math.Sqrt (Pow2 (InArr [0]) - Pow2 (OutArr [1]) - Pow2 (OutArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBef,The following statement contains a magic number: OutArr [0] = Math.Sqrt (Pow2 (InArr [0]) + Pow2 (InArr [1]) + Pow2 (InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBef,The following statement contains a magic number: OutArr [2] = InArr [2] / OutArr [0];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBef,The following statement contains a magic number: OutArr [2] = InArr [2] / OutArr [0];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToDEF,The following statement contains a magic number: OutArr [1] = var1 * Math.Cos (InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToDEF,The following statement contains a magic number: OutArr [2] = var1 * Math.Sin (InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,BCHToDEF,The following statement contains a magic number: OutArr [2] = var1 * Math.Sin (InArr [2]);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBCH,The following statement contains a magic number: OutArr [0] = Math.Sqrt (Pow2 (InArr [0]) + Pow2 (InArr [1]) + Pow2 (InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBCH,The following statement contains a magic number: OutArr [1] = Math.Asin ((Math.Sqrt (Pow2 (InArr [1]) + Pow2 (InArr [2])) / OutArr [0]) * Sign (InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBCH,The following statement contains a magic number: OutArr [1] = Math.Asin ((Math.Sqrt (Pow2 (InArr [1]) + Pow2 (InArr [2])) / OutArr [0]) * Sign (InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBCH,The following statement contains a magic number: OutArr [2] = Math.Acos (InArr [1] / Math.Sqrt (Pow2 (InArr [1]) + Pow2 (InArr [2])) * Sign (InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBCH,The following statement contains a magic number: OutArr [2] = Math.Acos (InArr [1] / Math.Sqrt (Pow2 (InArr [1]) + Pow2 (InArr [2])) * Sign (InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBCH,The following statement contains a magic number: OutArr [2] = Math.Acos (InArr [1] / Math.Sqrt (Pow2 (InArr [1]) + Pow2 (InArr [2])) * Sign (InArr [2]));  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBCH,The following statement contains a magic number: if (double.IsNaN (OutArr [2]))  	OutArr [2] = 0;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBCH,The following statement contains a magic number: if (double.IsNaN (OutArr [2]))  	OutArr [2] = 0;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DEFToBCH,The following statement contains a magic number: OutArr [2] = 0;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,Fn_XYZToLab,The following statement contains a magic number: return (val <= Epsilon) ? ((Kappa * val) + 16d) / 116d : Math.Pow (val' 0.33333333333333333333333333333333);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,Fy_LabToXYZ,The following statement contains a magic number: return (L + 16) / 116d;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH > 360) {  	vH -= 360;  }  else if (vH < 0) {  	vH += 360;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH > 360) {  	vH -= 360;  }  else if (vH < 0) {  	vH += 360;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH > 360) {  	vH -= 360;  }  else if (vH < 0) {  	vH += 360;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: vH -= 360;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 0) {  	vH += 360;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: vH += 360;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 60) {  	v1 = v1 + (v2 - v1) * vH / 60;  }  else if (vH < 180) {  	v1 = v2;  }  else if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 60) {  	v1 = v1 + (v2 - v1) * vH / 60;  }  else if (vH < 180) {  	v1 = v2;  }  else if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 60) {  	v1 = v1 + (v2 - v1) * vH / 60;  }  else if (vH < 180) {  	v1 = v2;  }  else if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 60) {  	v1 = v1 + (v2 - v1) * vH / 60;  }  else if (vH < 180) {  	v1 = v2;  }  else if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 60) {  	v1 = v1 + (v2 - v1) * vH / 60;  }  else if (vH < 180) {  	v1 = v2;  }  else if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 60) {  	v1 = v1 + (v2 - v1) * vH / 60;  }  else if (vH < 180) {  	v1 = v2;  }  else if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: v1 = v1 + (v2 - v1) * vH / 60;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 180) {  	v1 = v2;  }  else if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 180) {  	v1 = v2;  }  else if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 180) {  	v1 = v2;  }  else if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 180) {  	v1 = v2;  }  else if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: if (vH < 240) {  	v1 = v1 + (v2 - v1) * (240 - vH) / 60;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: v1 = v1 + (v2 - v1) * (240 - vH) / 60;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,HueToRGB,The following statement contains a magic number: v1 = v1 + (v2 - v1) * (240 - vH) / 60;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var2 = Lab [1] * cos16 + Lab [2] * sin16;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var2 = Lab [1] * cos26 + Lab [2] * sin26;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var3 = DIN99Vals [model' 2] * Lab [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var3 = DIN99Vals [model' 2] * Lab [2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var2 = Lab [1] * cos50 + Lab [2] * sin50;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var4 = Math.Log (1 + DIN99Vals [model' 3] * Math.Sqrt (Pow2 (var2) + Pow2 (var3))) * DIN99Vals [model' 4];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var4 = Math.Log (1 + DIN99Vals [model' 3] * Math.Sqrt (Pow2 (var2) + Pow2 (var3))) * DIN99Vals [model' 4];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following statement contains a magic number: var5 = (Math.Atan2 (var3' var2) * Pi180_1) + DIN99Vals [model' 5];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: var1 = (Math.Exp (LCH [1] / DIN99Vals [model' 4]) - 1) / DIN99Vals [model' 3];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: var1 = (Math.Exp (LCH [1] / DIN99Vals [model' 4]) - 1) / DIN99Vals [model' 3];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: var4 = (LCH [2] - DIN99Vals [model' 5]) * Pi180;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: var4 = (LCH [2] - DIN99Vals [model' 5]) * Pi180;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var5 = var2 * cos16 - (var3 / DIN99Vals [model' 2]) * sin16;  	var6 = var2 * sin16 + (var3 / DIN99Vals [model' 2]) * cos16;  	break;  case 1:  	//DIN99b  	var5 = var2 * cos26 - (var3 / DIN99Vals [model' 2]) * sin26;  	var6 = var2 * sin26 + (var3 / DIN99Vals [model' 2]) * cos26;  	break;  case 2:  	//DIN99c  	var5 = var2;  	var6 = var3 / DIN99Vals [model' 2];  	break;  case 3:  	//DIN99d  	var5 = var2 * cos50 - (var3 / DIN99Vals [model' 2]) * sin50;  	var6 = var2 * sin50 + (var3 / DIN99Vals [model' 2]) * cos50;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var5 = var2 * cos16 - (var3 / DIN99Vals [model' 2]) * sin16;  	var6 = var2 * sin16 + (var3 / DIN99Vals [model' 2]) * cos16;  	break;  case 1:  	//DIN99b  	var5 = var2 * cos26 - (var3 / DIN99Vals [model' 2]) * sin26;  	var6 = var2 * sin26 + (var3 / DIN99Vals [model' 2]) * cos26;  	break;  case 2:  	//DIN99c  	var5 = var2;  	var6 = var3 / DIN99Vals [model' 2];  	break;  case 3:  	//DIN99d  	var5 = var2 * cos50 - (var3 / DIN99Vals [model' 2]) * sin50;  	var6 = var2 * sin50 + (var3 / DIN99Vals [model' 2]) * cos50;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var5 = var2 * cos16 - (var3 / DIN99Vals [model' 2]) * sin16;  	var6 = var2 * sin16 + (var3 / DIN99Vals [model' 2]) * cos16;  	break;  case 1:  	//DIN99b  	var5 = var2 * cos26 - (var3 / DIN99Vals [model' 2]) * sin26;  	var6 = var2 * sin26 + (var3 / DIN99Vals [model' 2]) * cos26;  	break;  case 2:  	//DIN99c  	var5 = var2;  	var6 = var3 / DIN99Vals [model' 2];  	break;  case 3:  	//DIN99d  	var5 = var2 * cos50 - (var3 / DIN99Vals [model' 2]) * sin50;  	var6 = var2 * sin50 + (var3 / DIN99Vals [model' 2]) * cos50;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var5 = var2 * cos16 - (var3 / DIN99Vals [model' 2]) * sin16;  	var6 = var2 * sin16 + (var3 / DIN99Vals [model' 2]) * cos16;  	break;  case 1:  	//DIN99b  	var5 = var2 * cos26 - (var3 / DIN99Vals [model' 2]) * sin26;  	var6 = var2 * sin26 + (var3 / DIN99Vals [model' 2]) * cos26;  	break;  case 2:  	//DIN99c  	var5 = var2;  	var6 = var3 / DIN99Vals [model' 2];  	break;  case 3:  	//DIN99d  	var5 = var2 * cos50 - (var3 / DIN99Vals [model' 2]) * sin50;  	var6 = var2 * sin50 + (var3 / DIN99Vals [model' 2]) * cos50;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var5 = var2 * cos16 - (var3 / DIN99Vals [model' 2]) * sin16;  	var6 = var2 * sin16 + (var3 / DIN99Vals [model' 2]) * cos16;  	break;  case 1:  	//DIN99b  	var5 = var2 * cos26 - (var3 / DIN99Vals [model' 2]) * sin26;  	var6 = var2 * sin26 + (var3 / DIN99Vals [model' 2]) * cos26;  	break;  case 2:  	//DIN99c  	var5 = var2;  	var6 = var3 / DIN99Vals [model' 2];  	break;  case 3:  	//DIN99d  	var5 = var2 * cos50 - (var3 / DIN99Vals [model' 2]) * sin50;  	var6 = var2 * sin50 + (var3 / DIN99Vals [model' 2]) * cos50;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var5 = var2 * cos16 - (var3 / DIN99Vals [model' 2]) * sin16;  	var6 = var2 * sin16 + (var3 / DIN99Vals [model' 2]) * cos16;  	break;  case 1:  	//DIN99b  	var5 = var2 * cos26 - (var3 / DIN99Vals [model' 2]) * sin26;  	var6 = var2 * sin26 + (var3 / DIN99Vals [model' 2]) * cos26;  	break;  case 2:  	//DIN99c  	var5 = var2;  	var6 = var3 / DIN99Vals [model' 2];  	break;  case 3:  	//DIN99d  	var5 = var2 * cos50 - (var3 / DIN99Vals [model' 2]) * sin50;  	var6 = var2 * sin50 + (var3 / DIN99Vals [model' 2]) * cos50;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var5 = var2 * cos16 - (var3 / DIN99Vals [model' 2]) * sin16;  	var6 = var2 * sin16 + (var3 / DIN99Vals [model' 2]) * cos16;  	break;  case 1:  	//DIN99b  	var5 = var2 * cos26 - (var3 / DIN99Vals [model' 2]) * sin26;  	var6 = var2 * sin26 + (var3 / DIN99Vals [model' 2]) * cos26;  	break;  case 2:  	//DIN99c  	var5 = var2;  	var6 = var3 / DIN99Vals [model' 2];  	break;  case 3:  	//DIN99d  	var5 = var2 * cos50 - (var3 / DIN99Vals [model' 2]) * sin50;  	var6 = var2 * sin50 + (var3 / DIN99Vals [model' 2]) * cos50;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var5 = var2 * cos16 - (var3 / DIN99Vals [model' 2]) * sin16;  	var6 = var2 * sin16 + (var3 / DIN99Vals [model' 2]) * cos16;  	break;  case 1:  	//DIN99b  	var5 = var2 * cos26 - (var3 / DIN99Vals [model' 2]) * sin26;  	var6 = var2 * sin26 + (var3 / DIN99Vals [model' 2]) * cos26;  	break;  case 2:  	//DIN99c  	var5 = var2;  	var6 = var3 / DIN99Vals [model' 2];  	break;  case 3:  	//DIN99d  	var5 = var2 * cos50 - (var3 / DIN99Vals [model' 2]) * sin50;  	var6 = var2 * sin50 + (var3 / DIN99Vals [model' 2]) * cos50;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: switch (model) {  case 0:  	//DIN99  	var5 = var2 * cos16 - (var3 / DIN99Vals [model' 2]) * sin16;  	var6 = var2 * sin16 + (var3 / DIN99Vals [model' 2]) * cos16;  	break;  case 1:  	//DIN99b  	var5 = var2 * cos26 - (var3 / DIN99Vals [model' 2]) * sin26;  	var6 = var2 * sin26 + (var3 / DIN99Vals [model' 2]) * cos26;  	break;  case 2:  	//DIN99c  	var5 = var2;  	var6 = var3 / DIN99Vals [model' 2];  	break;  case 3:  	//DIN99d  	var5 = var2 * cos50 - (var3 / DIN99Vals [model' 2]) * sin50;  	var6 = var2 * sin50 + (var3 / DIN99Vals [model' 2]) * cos50;  	break;  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: var5 = var2 * cos16 - (var3 / DIN99Vals [model' 2]) * sin16;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: var6 = var2 * sin16 + (var3 / DIN99Vals [model' 2]) * cos16;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: var5 = var2 * cos26 - (var3 / DIN99Vals [model' 2]) * sin26;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: var6 = var2 * sin26 + (var3 / DIN99Vals [model' 2]) * cos26;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: var6 = var3 / DIN99Vals [model' 2];  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: var5 = var2 * cos50 - (var3 / DIN99Vals [model' 2]) * sin50;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following statement contains a magic number: var6 = var2 * sin50 + (var3 / DIN99Vals [model' 2]) * cos50;  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ChromaticAdaption,The following statement contains a magic number: if (InputWhitepoint.Name == WhitepointName.Custom || OutReferenceWhite.Name == WhitepointName.Custom) {  	AM = GetAdaptionMatrix ();  	S = mmath.MultiplyMatrix (AM [0]' InputWhitepoint.ValueArray);  	D = mmath.MultiplyMatrix (AM [0]' OutReferenceWhite.ValueArray);  	M = new double['] {  		{  			D [0] / S [0]'  			0'  			0  		}'  		{  			0'  			D [1] / S [1]'  			0  		}'  		{  			0'  			0'  			D [2] / S [2]  		}  	};  	OutArr = mmath.MultiplyMatrix (mmath.MultiplyMatrix (mmath.MultiplyMatrix (AM [1]' M)' AM [0])' InArr);  }  else {  	OutArr = mmath.MultiplyMatrix (PrecalcMatrix [(int)InputWhitepoint.Name' (int)OutReferenceWhite.Name]' InArr);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ChromaticAdaption,The following statement contains a magic number: if (InputWhitepoint.Name == WhitepointName.Custom || OutReferenceWhite.Name == WhitepointName.Custom) {  	AM = GetAdaptionMatrix ();  	S = mmath.MultiplyMatrix (AM [0]' InputWhitepoint.ValueArray);  	D = mmath.MultiplyMatrix (AM [0]' OutReferenceWhite.ValueArray);  	M = new double['] {  		{  			D [0] / S [0]'  			0'  			0  		}'  		{  			0'  			D [1] / S [1]'  			0  		}'  		{  			0'  			0'  			D [2] / S [2]  		}  	};  	OutArr = mmath.MultiplyMatrix (mmath.MultiplyMatrix (mmath.MultiplyMatrix (AM [1]' M)' AM [0])' InArr);  }  else {  	OutArr = mmath.MultiplyMatrix (PrecalcMatrix [(int)InputWhitepoint.Name' (int)OutReferenceWhite.Name]' InArr);  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ChromaticAdaption,The following statement contains a magic number: M = new double['] {  	{  		D [0] / S [0]'  		0'  		0  	}'  	{  		0'  		D [1] / S [1]'  		0  	}'  	{  		0'  		0'  		D [2] / S [2]  	}  };  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,ChromaticAdaption,The following statement contains a magic number: M = new double['] {  	{  		D [0] / S [0]'  		0'  		0  	}'  	{  		0'  		D [1] / S [1]'  		0  	}'  	{  		0'  		0'  		D [2] / S [2]  	}  };  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,MatrixPrecalculation,The following statement contains a magic number: for (int i = 0; i < WPvals.Length; i++) {  	if ((WhitepointName)WPvals [i] != WhitepointName.Custom) {  		Whitepoint WPsource = WhitepointArr [(int)(WhitepointName)WPvals [i]];  		for (int j = 0; j < WPvals.Length; j++) {  			if ((WhitepointName)WPvals [j] != WhitepointName.Custom) {  				Whitepoint WPdest = WhitepointArr [(int)(WhitepointName)WPvals [j]];  				if (WPsource != WPdest) {  					S = MMath.StaticMultiplyMatrix (AM [0]' WPsource.ValueArray);  					D = MMath.StaticMultiplyMatrix (AM [0]' WPdest.ValueArray);  					M = new double['] {  						{  							D [0] / S [0]'  							0'  							0  						}'  						{  							0'  							D [1] / S [1]'  							0  						}'  						{  							0'  							0'  							D [2] / S [2]  						}  					};  					PrecalcMatrix [i' j] = MMath.StaticMultiplyMatrix (MMath.StaticMultiplyMatrix (AM [1]' M)' AM [0]);  				}  				else {  					PrecalcMatrix [i' j] = new double['] {  						{  							1.0'  							0.0'  							0.0  						}'  						{  							0.0'  							1.0'  							0.0  						}'  						{  							0.0'  							0.0'  							1.0  						}  					};  				}  			}  		}  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,MatrixPrecalculation,The following statement contains a magic number: for (int i = 0; i < WPvals.Length; i++) {  	if ((WhitepointName)WPvals [i] != WhitepointName.Custom) {  		Whitepoint WPsource = WhitepointArr [(int)(WhitepointName)WPvals [i]];  		for (int j = 0; j < WPvals.Length; j++) {  			if ((WhitepointName)WPvals [j] != WhitepointName.Custom) {  				Whitepoint WPdest = WhitepointArr [(int)(WhitepointName)WPvals [j]];  				if (WPsource != WPdest) {  					S = MMath.StaticMultiplyMatrix (AM [0]' WPsource.ValueArray);  					D = MMath.StaticMultiplyMatrix (AM [0]' WPdest.ValueArray);  					M = new double['] {  						{  							D [0] / S [0]'  							0'  							0  						}'  						{  							0'  							D [1] / S [1]'  							0  						}'  						{  							0'  							0'  							D [2] / S [2]  						}  					};  					PrecalcMatrix [i' j] = MMath.StaticMultiplyMatrix (MMath.StaticMultiplyMatrix (AM [1]' M)' AM [0]);  				}  				else {  					PrecalcMatrix [i' j] = new double['] {  						{  							1.0'  							0.0'  							0.0  						}'  						{  							0.0'  							1.0'  							0.0  						}'  						{  							0.0'  							0.0'  							1.0  						}  					};  				}  			}  		}  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,MatrixPrecalculation,The following statement contains a magic number: if ((WhitepointName)WPvals [i] != WhitepointName.Custom) {  	Whitepoint WPsource = WhitepointArr [(int)(WhitepointName)WPvals [i]];  	for (int j = 0; j < WPvals.Length; j++) {  		if ((WhitepointName)WPvals [j] != WhitepointName.Custom) {  			Whitepoint WPdest = WhitepointArr [(int)(WhitepointName)WPvals [j]];  			if (WPsource != WPdest) {  				S = MMath.StaticMultiplyMatrix (AM [0]' WPsource.ValueArray);  				D = MMath.StaticMultiplyMatrix (AM [0]' WPdest.ValueArray);  				M = new double['] {  					{  						D [0] / S [0]'  						0'  						0  					}'  					{  						0'  						D [1] / S [1]'  						0  					}'  					{  						0'  						0'  						D [2] / S [2]  					}  				};  				PrecalcMatrix [i' j] = MMath.StaticMultiplyMatrix (MMath.StaticMultiplyMatrix (AM [1]' M)' AM [0]);  			}  			else {  				PrecalcMatrix [i' j] = new double['] {  					{  						1.0'  						0.0'  						0.0  					}'  					{  						0.0'  						1.0'  						0.0  					}'  					{  						0.0'  						0.0'  						1.0  					}  				};  			}  		}  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,MatrixPrecalculation,The following statement contains a magic number: if ((WhitepointName)WPvals [i] != WhitepointName.Custom) {  	Whitepoint WPsource = WhitepointArr [(int)(WhitepointName)WPvals [i]];  	for (int j = 0; j < WPvals.Length; j++) {  		if ((WhitepointName)WPvals [j] != WhitepointName.Custom) {  			Whitepoint WPdest = WhitepointArr [(int)(WhitepointName)WPvals [j]];  			if (WPsource != WPdest) {  				S = MMath.StaticMultiplyMatrix (AM [0]' WPsource.ValueArray);  				D = MMath.StaticMultiplyMatrix (AM [0]' WPdest.ValueArray);  				M = new double['] {  					{  						D [0] / S [0]'  						0'  						0  					}'  					{  						0'  						D [1] / S [1]'  						0  					}'  					{  						0'  						0'  						D [2] / S [2]  					}  				};  				PrecalcMatrix [i' j] = MMath.StaticMultiplyMatrix (MMath.StaticMultiplyMatrix (AM [1]' M)' AM [0]);  			}  			else {  				PrecalcMatrix [i' j] = new double['] {  					{  						1.0'  						0.0'  						0.0  					}'  					{  						0.0'  						1.0'  						0.0  					}'  					{  						0.0'  						0.0'  						1.0  					}  				};  			}  		}  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,MatrixPrecalculation,The following statement contains a magic number: for (int j = 0; j < WPvals.Length; j++) {  	if ((WhitepointName)WPvals [j] != WhitepointName.Custom) {  		Whitepoint WPdest = WhitepointArr [(int)(WhitepointName)WPvals [j]];  		if (WPsource != WPdest) {  			S = MMath.StaticMultiplyMatrix (AM [0]' WPsource.ValueArray);  			D = MMath.StaticMultiplyMatrix (AM [0]' WPdest.ValueArray);  			M = new double['] {  				{  					D [0] / S [0]'  					0'  					0  				}'  				{  					0'  					D [1] / S [1]'  					0  				}'  				{  					0'  					0'  					D [2] / S [2]  				}  			};  			PrecalcMatrix [i' j] = MMath.StaticMultiplyMatrix (MMath.StaticMultiplyMatrix (AM [1]' M)' AM [0]);  		}  		else {  			PrecalcMatrix [i' j] = new double['] {  				{  					1.0'  					0.0'  					0.0  				}'  				{  					0.0'  					1.0'  					0.0  				}'  				{  					0.0'  					0.0'  					1.0  				}  			};  		}  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,MatrixPrecalculation,The following statement contains a magic number: for (int j = 0; j < WPvals.Length; j++) {  	if ((WhitepointName)WPvals [j] != WhitepointName.Custom) {  		Whitepoint WPdest = WhitepointArr [(int)(WhitepointName)WPvals [j]];  		if (WPsource != WPdest) {  			S = MMath.StaticMultiplyMatrix (AM [0]' WPsource.ValueArray);  			D = MMath.StaticMultiplyMatrix (AM [0]' WPdest.ValueArray);  			M = new double['] {  				{  					D [0] / S [0]'  					0'  					0  				}'  				{  					0'  					D [1] / S [1]'  					0  				}'  				{  					0'  					0'  					D [2] / S [2]  				}  			};  			PrecalcMatrix [i' j] = MMath.StaticMultiplyMatrix (MMath.StaticMultiplyMatrix (AM [1]' M)' AM [0]);  		}  		else {  			PrecalcMatrix [i' j] = new double['] {  				{  					1.0'  					0.0'  					0.0  				}'  				{  					0.0'  					1.0'  					0.0  				}'  				{  					0.0'  					0.0'  					1.0  				}  			};  		}  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,MatrixPrecalculation,The following statement contains a magic number: if ((WhitepointName)WPvals [j] != WhitepointName.Custom) {  	Whitepoint WPdest = WhitepointArr [(int)(WhitepointName)WPvals [j]];  	if (WPsource != WPdest) {  		S = MMath.StaticMultiplyMatrix (AM [0]' WPsource.ValueArray);  		D = MMath.StaticMultiplyMatrix (AM [0]' WPdest.ValueArray);  		M = new double['] {  			{  				D [0] / S [0]'  				0'  				0  			}'  			{  				0'  				D [1] / S [1]'  				0  			}'  			{  				0'  				0'  				D [2] / S [2]  			}  		};  		PrecalcMatrix [i' j] = MMath.StaticMultiplyMatrix (MMath.StaticMultiplyMatrix (AM [1]' M)' AM [0]);  	}  	else {  		PrecalcMatrix [i' j] = new double['] {  			{  				1.0'  				0.0'  				0.0  			}'  			{  				0.0'  				1.0'  				0.0  			}'  			{  				0.0'  				0.0'  				1.0  			}  		};  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,MatrixPrecalculation,The following statement contains a magic number: if ((WhitepointName)WPvals [j] != WhitepointName.Custom) {  	Whitepoint WPdest = WhitepointArr [(int)(WhitepointName)WPvals [j]];  	if (WPsource != WPdest) {  		S = MMath.StaticMultiplyMatrix (AM [0]' WPsource.ValueArray);  		D = MMath.StaticMultiplyMatrix (AM [0]' WPdest.ValueArray);  		M = new double['] {  			{  				D [0] / S [0]'  				0'  				0  			}'  			{  				0'  				D [1] / S [1]'  				0  			}'  			{  				0'  				0'  				D [2] / S [2]  			}  		};  		PrecalcMatrix [i' j] = MMath.StaticMultiplyMatrix (MMath.StaticMultiplyMatrix (AM [1]' M)' AM [0]);  	}  	else {  		PrecalcMatrix [i' j] = new double['] {  			{  				1.0'  				0.0'  				0.0  			}'  			{  				0.0'  				1.0'  				0.0  			}'  			{  				0.0'  				0.0'  				1.0  			}  		};  	}  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,MatrixPrecalculation,The following statement contains a magic number: if (WPsource != WPdest) {  	S = MMath.StaticMultiplyMatrix (AM [0]' WPsource.ValueArray);  	D = MMath.StaticMultiplyMatrix (AM [0]' WPdest.ValueArray);  	M = new double['] {  		{  			D [0] / S [0]'  			0'  			0  		}'  		{  			0'  			D [1] / S [1]'  			0  		}'  		{  			0'  			0'  			D [2] / S [2]  		}  	};  	PrecalcMatrix [i' j] = MMath.StaticMultiplyMatrix (MMath.StaticMultiplyMatrix (AM [1]' M)' AM [0]);  }  else {  	PrecalcMatrix [i' j] = new double['] {  		{  			1.0'  			0.0'  			0.0  		}'  		{  			0.0'  			1.0'  			0.0  		}'  		{  			0.0'  			0.0'  			1.0  		}  	};  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,MatrixPrecalculation,The following statement contains a magic number: if (WPsource != WPdest) {  	S = MMath.StaticMultiplyMatrix (AM [0]' WPsource.ValueArray);  	D = MMath.StaticMultiplyMatrix (AM [0]' WPdest.ValueArray);  	M = new double['] {  		{  			D [0] / S [0]'  			0'  			0  		}'  		{  			0'  			D [1] / S [1]'  			0  		}'  		{  			0'  			0'  			D [2] / S [2]  		}  	};  	PrecalcMatrix [i' j] = MMath.StaticMultiplyMatrix (MMath.StaticMultiplyMatrix (AM [1]' M)' AM [0]);  }  else {  	PrecalcMatrix [i' j] = new double['] {  		{  			1.0'  			0.0'  			0.0  		}'  		{  			0.0'  			1.0'  			0.0  		}'  		{  			0.0'  			0.0'  			1.0  		}  	};  }  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,MatrixPrecalculation,The following statement contains a magic number: M = new double['] {  	{  		D [0] / S [0]'  		0'  		0  	}'  	{  		0'  		D [1] / S [1]'  		0  	}'  	{  		0'  		0'  		D [2] / S [2]  	}  };  
Magic Number,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,MatrixPrecalculation,The following statement contains a magic number: M = new double['] {  	{  		D [0] / S [0]'  		0'  		0  	}'  	{  		0'  		D [1] / S [1]'  		0  	}'  	{  		0'  		0'  		D [2] / S [2]  	}  };  
Magic Number,ColorManagment,Whitepoint,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\Whitepoint.cs,Whitepoint,The following statement contains a magic number: if (XYZvalues [0] == 0.9642 && XYZvalues [1] == 1 && XYZvalues [2] == 0.8249) {  	this.Name = WhitepointName.D50;  }  else {  	var e = Enum.GetValues (typeof(WhitepointName));  	foreach (int i in e) {  		if (GetXYZValues ((WhitepointName)i) == XYZvalues) {  			this.Name = (WhitepointName)i;  			break;  		}  		else {  			this.Name = WhitepointName.Custom;  		}  	}  }  
Magic Number,ColorManagment,Whitepoint,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\Whitepoint.cs,Whitepoint,The following statement contains a magic number: if (XYZvalues [0] == 0.9642 && XYZvalues [1] == 1 && XYZvalues [2] == 0.8249) {  	this.Name = WhitepointName.D50;  }  else {  	var e = Enum.GetValues (typeof(WhitepointName));  	foreach (int i in e) {  		if (GetXYZValues ((WhitepointName)i) == XYZvalues) {  			this.Name = (WhitepointName)i;  			break;  		}  		else {  			this.Name = WhitepointName.Custom;  		}  	}  }  
Magic Number,ColorManagment,Whitepoint,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\Whitepoint.cs,Whitepoint,The following statement contains a magic number: if (XYZvalues [0] == 0.9642 && XYZvalues [1] == 1 && XYZvalues [2] == 0.8249) {  	this.Name = WhitepointName.D50;  }  else {  	var e = Enum.GetValues (typeof(WhitepointName));  	foreach (int i in e) {  		if (GetXYZValues ((WhitepointName)i) == XYZvalues) {  			this.Name = (WhitepointName)i;  			break;  		}  		else {  			this.Name = WhitepointName.Custom;  		}  	}  }  
Magic Number,ColorManagment,Whitepoint,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\Whitepoint.cs,Whitepoint,The following statement contains a magic number: if (Name != WhitepointName.Custom) {  	DefVal = GetXYZValues (Name);  	DefCh = GetChromaticityValues (Name);  }  else {  	DefVal = XYZvalues;  	DefCh = new double[2];  }  
Magic Number,ColorManagment,Whitepoint,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\Whitepoint.cs,Whitepoint,The following statement contains a magic number: DefCh = new double[2];  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: if (cam != null) {  	ma = new double['] {  		{  			cam.Data [0]'  			cam.Data [1]'  			cam.Data [2]  		}'  		{  			cam.Data [3]'  			cam.Data [4]'  			cam.Data [5]  		}'  		{  			cam.Data [6]'  			cam.Data [7]'  			cam.Data [8]  		}  	};  	ma1 = MMath.StaticInvertMatrix (ma);  }  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: if (cam != null) {  	ma = new double['] {  		{  			cam.Data [0]'  			cam.Data [1]'  			cam.Data [2]  		}'  		{  			cam.Data [3]'  			cam.Data [4]'  			cam.Data [5]  		}'  		{  			cam.Data [6]'  			cam.Data [7]'  			cam.Data [8]  		}  	};  	ma1 = MMath.StaticInvertMatrix (ma);  }  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: if (cam != null) {  	ma = new double['] {  		{  			cam.Data [0]'  			cam.Data [1]'  			cam.Data [2]  		}'  		{  			cam.Data [3]'  			cam.Data [4]'  			cam.Data [5]  		}'  		{  			cam.Data [6]'  			cam.Data [7]'  			cam.Data [8]  		}  	};  	ma1 = MMath.StaticInvertMatrix (ma);  }  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: if (cam != null) {  	ma = new double['] {  		{  			cam.Data [0]'  			cam.Data [1]'  			cam.Data [2]  		}'  		{  			cam.Data [3]'  			cam.Data [4]'  			cam.Data [5]  		}'  		{  			cam.Data [6]'  			cam.Data [7]'  			cam.Data [8]  		}  	};  	ma1 = MMath.StaticInvertMatrix (ma);  }  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: if (cam != null) {  	ma = new double['] {  		{  			cam.Data [0]'  			cam.Data [1]'  			cam.Data [2]  		}'  		{  			cam.Data [3]'  			cam.Data [4]'  			cam.Data [5]  		}'  		{  			cam.Data [6]'  			cam.Data [7]'  			cam.Data [8]  		}  	};  	ma1 = MMath.StaticInvertMatrix (ma);  }  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: if (cam != null) {  	ma = new double['] {  		{  			cam.Data [0]'  			cam.Data [1]'  			cam.Data [2]  		}'  		{  			cam.Data [3]'  			cam.Data [4]'  			cam.Data [5]  		}'  		{  			cam.Data [6]'  			cam.Data [7]'  			cam.Data [8]  		}  	};  	ma1 = MMath.StaticInvertMatrix (ma);  }  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: if (cam != null) {  	ma = new double['] {  		{  			cam.Data [0]'  			cam.Data [1]'  			cam.Data [2]  		}'  		{  			cam.Data [3]'  			cam.Data [4]'  			cam.Data [5]  		}'  		{  			cam.Data [6]'  			cam.Data [7]'  			cam.Data [8]  		}  	};  	ma1 = MMath.StaticInvertMatrix (ma);  }  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: ma = new double['] {  	{  		cam.Data [0]'  		cam.Data [1]'  		cam.Data [2]  	}'  	{  		cam.Data [3]'  		cam.Data [4]'  		cam.Data [5]  	}'  	{  		cam.Data [6]'  		cam.Data [7]'  		cam.Data [8]  	}  };  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: ma = new double['] {  	{  		cam.Data [0]'  		cam.Data [1]'  		cam.Data [2]  	}'  	{  		cam.Data [3]'  		cam.Data [4]'  		cam.Data [5]  	}'  	{  		cam.Data [6]'  		cam.Data [7]'  		cam.Data [8]  	}  };  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: ma = new double['] {  	{  		cam.Data [0]'  		cam.Data [1]'  		cam.Data [2]  	}'  	{  		cam.Data [3]'  		cam.Data [4]'  		cam.Data [5]  	}'  	{  		cam.Data [6]'  		cam.Data [7]'  		cam.Data [8]  	}  };  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: ma = new double['] {  	{  		cam.Data [0]'  		cam.Data [1]'  		cam.Data [2]  	}'  	{  		cam.Data [3]'  		cam.Data [4]'  		cam.Data [5]  	}'  	{  		cam.Data [6]'  		cam.Data [7]'  		cam.Data [8]  	}  };  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: ma = new double['] {  	{  		cam.Data [0]'  		cam.Data [1]'  		cam.Data [2]  	}'  	{  		cam.Data [3]'  		cam.Data [4]'  		cam.Data [5]  	}'  	{  		cam.Data [6]'  		cam.Data [7]'  		cam.Data [8]  	}  };  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: ma = new double['] {  	{  		cam.Data [0]'  		cam.Data [1]'  		cam.Data [2]  	}'  	{  		cam.Data [3]'  		cam.Data [4]'  		cam.Data [5]  	}'  	{  		cam.Data [6]'  		cam.Data [7]'  		cam.Data [8]  	}  };  
Magic Number,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,ICC,The following statement contains a magic number: ma = new double['] {  	{  		cam.Data [0]'  		cam.Data [1]'  		cam.Data [2]  	}'  	{  		cam.Data [3]'  		cam.Data [4]'  		cam.Data [5]  	}'  	{  		cam.Data [6]'  		cam.Data [7]'  		cam.Data [8]  	}  };  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELuv:  	return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIEXYZ:  	return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  case ColorModel.CIELCHab:  	return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new BColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorLab (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorLuv (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorYxy (wp' ColorValues [0]' (sbyte)(ColorValues [1] - 128)' (sbyte)(ColorValues [2] - 128));  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorRGB (((BColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorHSL (((BColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorHSV (((BColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,BColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\BaseColor.cs,Copy,The following statement contains a magic number: return new BColorYCbCr (((BColorYCbCr)this).Space.Name' ((BColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: if (SpaceName != RGBSpaceName.ICC) {  	if (IsLinear) {  		return new BColorRGB (SpaceName' (byte)(Space.ToNonLinear (R) * 255)' (byte)(Space.ToNonLinear (G) * 255)' (byte)(Space.ToNonLinear (B) * 255)' false);  	}  	else {  		return this;  	}  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: if (SpaceName != RGBSpaceName.ICC) {  	if (IsLinear) {  		return new BColorRGB (SpaceName' (byte)(Space.ToNonLinear (R) * 255)' (byte)(Space.ToNonLinear (G) * 255)' (byte)(Space.ToNonLinear (B) * 255)' false);  	}  	else {  		return this;  	}  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: if (SpaceName != RGBSpaceName.ICC) {  	if (IsLinear) {  		return new BColorRGB (SpaceName' (byte)(Space.ToNonLinear (R) * 255)' (byte)(Space.ToNonLinear (G) * 255)' (byte)(Space.ToNonLinear (B) * 255)' false);  	}  	else {  		return this;  	}  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: if (IsLinear) {  	return new BColorRGB (SpaceName' (byte)(Space.ToNonLinear (R) * 255)' (byte)(Space.ToNonLinear (G) * 255)' (byte)(Space.ToNonLinear (B) * 255)' false);  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: if (IsLinear) {  	return new BColorRGB (SpaceName' (byte)(Space.ToNonLinear (R) * 255)' (byte)(Space.ToNonLinear (G) * 255)' (byte)(Space.ToNonLinear (B) * 255)' false);  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: if (IsLinear) {  	return new BColorRGB (SpaceName' (byte)(Space.ToNonLinear (R) * 255)' (byte)(Space.ToNonLinear (G) * 255)' (byte)(Space.ToNonLinear (B) * 255)' false);  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: return new BColorRGB (SpaceName' (byte)(Space.ToNonLinear (R) * 255)' (byte)(Space.ToNonLinear (G) * 255)' (byte)(Space.ToNonLinear (B) * 255)' false);  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: return new BColorRGB (SpaceName' (byte)(Space.ToNonLinear (R) * 255)' (byte)(Space.ToNonLinear (G) * 255)' (byte)(Space.ToNonLinear (B) * 255)' false);  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: return new BColorRGB (SpaceName' (byte)(Space.ToNonLinear (R) * 255)' (byte)(Space.ToNonLinear (G) * 255)' (byte)(Space.ToNonLinear (B) * 255)' false);  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToLinear,The following statement contains a magic number: if (SpaceName != RGBSpaceName.ICC) {  	if (!IsLinear) {  		return new BColorRGB (SpaceName' (byte)(Space.ToLinear (R) * 255)' (byte)(Space.ToLinear (G) * 255)' (byte)(Space.ToLinear (B) * 255)' true);  	}  	else {  		return this;  	}  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToLinear,The following statement contains a magic number: if (SpaceName != RGBSpaceName.ICC) {  	if (!IsLinear) {  		return new BColorRGB (SpaceName' (byte)(Space.ToLinear (R) * 255)' (byte)(Space.ToLinear (G) * 255)' (byte)(Space.ToLinear (B) * 255)' true);  	}  	else {  		return this;  	}  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToLinear,The following statement contains a magic number: if (SpaceName != RGBSpaceName.ICC) {  	if (!IsLinear) {  		return new BColorRGB (SpaceName' (byte)(Space.ToLinear (R) * 255)' (byte)(Space.ToLinear (G) * 255)' (byte)(Space.ToLinear (B) * 255)' true);  	}  	else {  		return this;  	}  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToLinear,The following statement contains a magic number: if (!IsLinear) {  	return new BColorRGB (SpaceName' (byte)(Space.ToLinear (R) * 255)' (byte)(Space.ToLinear (G) * 255)' (byte)(Space.ToLinear (B) * 255)' true);  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToLinear,The following statement contains a magic number: if (!IsLinear) {  	return new BColorRGB (SpaceName' (byte)(Space.ToLinear (R) * 255)' (byte)(Space.ToLinear (G) * 255)' (byte)(Space.ToLinear (B) * 255)' true);  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToLinear,The following statement contains a magic number: if (!IsLinear) {  	return new BColorRGB (SpaceName' (byte)(Space.ToLinear (R) * 255)' (byte)(Space.ToLinear (G) * 255)' (byte)(Space.ToLinear (B) * 255)' true);  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToLinear,The following statement contains a magic number: return new BColorRGB (SpaceName' (byte)(Space.ToLinear (R) * 255)' (byte)(Space.ToLinear (G) * 255)' (byte)(Space.ToLinear (B) * 255)' true);  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToLinear,The following statement contains a magic number: return new BColorRGB (SpaceName' (byte)(Space.ToLinear (R) * 255)' (byte)(Space.ToLinear (G) * 255)' (byte)(Space.ToLinear (B) * 255)' true);  
Magic Number,ColorManagment.Light,BColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Byte\RGB_Based.cs,ToLinear,The following statement contains a magic number: return new BColorRGB (SpaceName' (byte)(Space.ToLinear (R) * 255)' (byte)(Space.ToLinear (G) * 255)' (byte)(Space.ToLinear (B) * 255)' true);  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: switch (this.Model) {  case ColorModel.CIELab:  	return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELuv:  	return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIEXYZ:  	return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIEYxy:  	return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  case ColorModel.CIELCHab:  	return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.CIELCHuv:  	return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99:  	return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99b:  	return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99c:  	return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.LCH99d:  	return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.Gray:  	return new UColorGray (wp' ColorValues [0]);  case ColorModel.RGB:  	return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSL:  	return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.HSV:  	return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  case ColorModel.YCbCr:  	return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  default:  	throw new NotImplementedException ();  }  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorLab (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorLuv (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorXYZ (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorYxy (wp' ColorValues [0]' (short)(ColorValues [1] - 32768)' (short)(ColorValues [2] - 32768));  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorLCHab (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorLCHuv (wp' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorLCH99 (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorLCH99b (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorLCH99c (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorLCH99d (ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorRGB (((UColorRGB)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorHSL (((UColorHSL)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorHSV (((UColorHSV)this).Space.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,UColor,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\BaseColor.cs,Copy,The following statement contains a magic number: return new UColorYCbCr (((UColorYCbCr)this).Space.Name' ((UColorYCbCr)this).BaseSpace.Name' ColorValues [0]' ColorValues [1]' ColorValues [2]);  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: if (SpaceName != RGBSpaceName.ICC) {  	if (IsLinear) {  		return new UColorRGB (SpaceName' (ushort)(Space.ToNonLinear (R) * 65535)' (ushort)(Space.ToNonLinear (G) * 65535)' (ushort)(Space.ToNonLinear (B) * 65535)' false);  	}  	else {  		return this;  	}  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: if (SpaceName != RGBSpaceName.ICC) {  	if (IsLinear) {  		return new UColorRGB (SpaceName' (ushort)(Space.ToNonLinear (R) * 65535)' (ushort)(Space.ToNonLinear (G) * 65535)' (ushort)(Space.ToNonLinear (B) * 65535)' false);  	}  	else {  		return this;  	}  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: if (SpaceName != RGBSpaceName.ICC) {  	if (IsLinear) {  		return new UColorRGB (SpaceName' (ushort)(Space.ToNonLinear (R) * 65535)' (ushort)(Space.ToNonLinear (G) * 65535)' (ushort)(Space.ToNonLinear (B) * 65535)' false);  	}  	else {  		return this;  	}  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: if (IsLinear) {  	return new UColorRGB (SpaceName' (ushort)(Space.ToNonLinear (R) * 65535)' (ushort)(Space.ToNonLinear (G) * 65535)' (ushort)(Space.ToNonLinear (B) * 65535)' false);  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: if (IsLinear) {  	return new UColorRGB (SpaceName' (ushort)(Space.ToNonLinear (R) * 65535)' (ushort)(Space.ToNonLinear (G) * 65535)' (ushort)(Space.ToNonLinear (B) * 65535)' false);  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: if (IsLinear) {  	return new UColorRGB (SpaceName' (ushort)(Space.ToNonLinear (R) * 65535)' (ushort)(Space.ToNonLinear (G) * 65535)' (ushort)(Space.ToNonLinear (B) * 65535)' false);  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: return new UColorRGB (SpaceName' (ushort)(Space.ToNonLinear (R) * 65535)' (ushort)(Space.ToNonLinear (G) * 65535)' (ushort)(Space.ToNonLinear (B) * 65535)' false);  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: return new UColorRGB (SpaceName' (ushort)(Space.ToNonLinear (R) * 65535)' (ushort)(Space.ToNonLinear (G) * 65535)' (ushort)(Space.ToNonLinear (B) * 65535)' false);  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToNonLinear,The following statement contains a magic number: return new UColorRGB (SpaceName' (ushort)(Space.ToNonLinear (R) * 65535)' (ushort)(Space.ToNonLinear (G) * 65535)' (ushort)(Space.ToNonLinear (B) * 65535)' false);  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToLinear,The following statement contains a magic number: if (SpaceName != RGBSpaceName.ICC) {  	if (!IsLinear) {  		return new UColorRGB (SpaceName' (ushort)(Space.ToLinear (R) * 65535)' (ushort)(Space.ToLinear (G) * 65535)' (ushort)(Space.ToLinear (B) * 65535)' true);  	}  	else {  		return this;  	}  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToLinear,The following statement contains a magic number: if (SpaceName != RGBSpaceName.ICC) {  	if (!IsLinear) {  		return new UColorRGB (SpaceName' (ushort)(Space.ToLinear (R) * 65535)' (ushort)(Space.ToLinear (G) * 65535)' (ushort)(Space.ToLinear (B) * 65535)' true);  	}  	else {  		return this;  	}  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToLinear,The following statement contains a magic number: if (SpaceName != RGBSpaceName.ICC) {  	if (!IsLinear) {  		return new UColorRGB (SpaceName' (ushort)(Space.ToLinear (R) * 65535)' (ushort)(Space.ToLinear (G) * 65535)' (ushort)(Space.ToLinear (B) * 65535)' true);  	}  	else {  		return this;  	}  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToLinear,The following statement contains a magic number: if (!IsLinear) {  	return new UColorRGB (SpaceName' (ushort)(Space.ToLinear (R) * 65535)' (ushort)(Space.ToLinear (G) * 65535)' (ushort)(Space.ToLinear (B) * 65535)' true);  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToLinear,The following statement contains a magic number: if (!IsLinear) {  	return new UColorRGB (SpaceName' (ushort)(Space.ToLinear (R) * 65535)' (ushort)(Space.ToLinear (G) * 65535)' (ushort)(Space.ToLinear (B) * 65535)' true);  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToLinear,The following statement contains a magic number: if (!IsLinear) {  	return new UColorRGB (SpaceName' (ushort)(Space.ToLinear (R) * 65535)' (ushort)(Space.ToLinear (G) * 65535)' (ushort)(Space.ToLinear (B) * 65535)' true);  }  else {  	return this;  }  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToLinear,The following statement contains a magic number: return new UColorRGB (SpaceName' (ushort)(Space.ToLinear (R) * 65535)' (ushort)(Space.ToLinear (G) * 65535)' (ushort)(Space.ToLinear (B) * 65535)' true);  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToLinear,The following statement contains a magic number: return new UColorRGB (SpaceName' (ushort)(Space.ToLinear (R) * 65535)' (ushort)(Space.ToLinear (G) * 65535)' (ushort)(Space.ToLinear (B) * 65535)' true);  
Magic Number,ColorManagment.Light,UColorRGB,C:\repos\RedGlow_ColorWars\ColorManagment\Light\Ushort\RGB_Based.cs,ToLinear,The following statement contains a magic number: return new UColorRGB (SpaceName' (ushort)(Space.ToLinear (R) * 65535)' (ushort)(Space.ToLinear (G) * 65535)' (ushort)(Space.ToLinear (B) * 65535)' true);  
Missing Default,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,LabDIN99,The following switch statement is missing a default case: switch (model) {  case 0:  	//DIN99  	var2 = Lab [1] * cos16 + Lab [2] * sin16;  	//e  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin16 + Lab [2] * cos16);  	//f  	break;  case 1:  	//DIN99b  	var2 = Lab [1] * cos26 + Lab [2] * sin26;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin26 + Lab [2] * cos26);  	break;  case 2:  	//DIN99c  	var2 = Lab [1];  	var3 = DIN99Vals [model' 2] * Lab [2];  	break;  case 3:  	//DIN99d  	var2 = Lab [1] * cos50 + Lab [2] * sin50;  	var3 = DIN99Vals [model' 2] * (-Lab [1] * sin50 + Lab [2] * cos50);  	break;  }  
Missing Default,ColorManagment,ColorConverter,C:\repos\RedGlow_ColorWars\ColorManagment\Conversion\Color_Conversion.cs,DIN99Lab,The following switch statement is missing a default case: switch (model) {  case 0:  	//DIN99  	var5 = var2 * cos16 - (var3 / DIN99Vals [model' 2]) * sin16;  	var6 = var2 * sin16 + (var3 / DIN99Vals [model' 2]) * cos16;  	break;  case 1:  	//DIN99b  	var5 = var2 * cos26 - (var3 / DIN99Vals [model' 2]) * sin26;  	var6 = var2 * sin26 + (var3 / DIN99Vals [model' 2]) * cos26;  	break;  case 2:  	//DIN99c  	var5 = var2;  	var6 = var3 / DIN99Vals [model' 2];  	break;  case 3:  	//DIN99d  	var5 = var2 * cos50 - (var3 / DIN99Vals [model' 2]) * sin50;  	var6 = var2 * sin50 + (var3 / DIN99Vals [model' 2]) * cos50;  	break;  }  
Missing Default,ColorManagment,ICC,C:\repos\RedGlow_ColorWars\ColorManagment\Subclasses\ICC.cs,SetHasVariables,The following switch statement is missing a default case: switch (TagTable.Data [i].Signature) {  case TagSignature.AToB0Tag:  	HasAToB0 = true;  	break;  case TagSignature.AToB1Tag:  	HasAToB1 = true;  	break;  case TagSignature.AToB2Tag:  	HasAToB2 = true;  	break;  case TagSignature.BToA0Tag:  	HasBToA0 = true;  	break;  case TagSignature.BToA1Tag:  	HasBToA1 = true;  	break;  case TagSignature.BToA2Tag:  	HasBToA2 = true;  	break;  case TagSignature.BToD0Tag:  	HasBToD0 = true;  	break;  case TagSignature.BToD1Tag:  	HasBToD1 = true;  	break;  case TagSignature.BToD2Tag:  	HasBToD2 = true;  	break;  case TagSignature.BToD3Tag:  	HasBToD3 = true;  	break;  case TagSignature.DToB0Tag:  	HasDToB0 = true;  	break;  case TagSignature.DToB1Tag:  	HasDToB1 = true;  	break;  case TagSignature.DToB2Tag:  	HasDToB2 = true;  	break;  case TagSignature.DToB3Tag:  	HasDToB3 = true;  	break;  case TagSignature.grayTRCTag:  	HasGrayTRC = true;  	break;  case TagSignature.redTRCTag:  	HasRedTRC = true;  	break;  case TagSignature.greenTRCTag:  	HasGreenTRC = true;  	break;  case TagSignature.blueTRCTag:  	HasBlueTRC = true;  	break;  }  
