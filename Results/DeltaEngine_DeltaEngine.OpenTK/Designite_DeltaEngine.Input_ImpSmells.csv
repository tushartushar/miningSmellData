Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DeltaEngine.Input,GamePad,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\GamePad.cs,IsGamePadStickTriggered,Cyclomatic complexity of the method is 12
Long Statement,DeltaEngine.Input,MouseFlickTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseFlickTrigger.cs,HandleWithMouse,The length of the statement  "		if (mouse.LeftButton == State.Releasing && StartPosition.DistanceTo (mouse.Position) > PositionEpsilon && PressTime < 0.3f) " is 123.
Long Statement,DeltaEngine.Input,TouchHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\TouchHoldTrigger.cs,CheckHoverState,The length of the statement  "	return HoldArea.Contains (startPosition) && touch.GetState (0) == State.Pressed && startPosition.DistanceTo (touch.GetPosition (0)) < PositionEpsilon; " is 150.
Long Statement,DeltaEngine.Input,TouchFlickTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\TouchFlickTrigger.cs,HandleWithTouch,The length of the statement  "		if (touch.GetState (0) == State.Releasing && StartPosition.DistanceTo (touch.GetPosition (0)) > PositionEpsilon && PressTime < 0.3f) " is 132.
Long Statement,DeltaEngine.Input,MouseHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseHoldTrigger.cs,CheckHoverState,The length of the statement  "	return HoldArea.Contains (StartPosition) && mouse.GetButtonState (Button) == State.Pressed && StartPosition.DistanceTo (mouse.Position) < PositionEpsilon; " is 154.
Long Statement,DeltaEngine.Input,StateExtensions,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\StateExtensions.cs,UpdateOnNativePressing,The length of the statement  "	return isNativePressing ? currentState.PressingOrPressed () ? State.Pressed : State.Pressing : currentState.PressingOrPressed () ? State.Releasing : State.Released; " is 164.
Long Statement,DeltaEngine.Input,Keyboard,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\Keyboard.cs,KeyNeedsToBeCapitalized,The length of the statement  "	bool isAnyShiftPressed = keyboardStates [(int)Key.LeftShift] >= State.Pressing || keyboardStates [(int)Key.RightShift] >= State.Pressing; " is 137.
Magic Number,DeltaEngine.Input,TouchHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\TouchHoldTrigger.cs,TouchHoldTrigger,The following statement contains a magic number: if (parameters.Length > 3)  	HoldArea = GetWishedNumberOfElements (parameters' 4).ToText ().Convert<Rectangle> ();  
Magic Number,DeltaEngine.Input,TouchHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\TouchHoldTrigger.cs,TouchHoldTrigger,The following statement contains a magic number: if (parameters.Length > 3)  	HoldArea = GetWishedNumberOfElements (parameters' 4).ToText ().Convert<Rectangle> ();  
Magic Number,DeltaEngine.Input,TouchHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\TouchHoldTrigger.cs,TouchHoldTrigger,The following statement contains a magic number: HoldArea = GetWishedNumberOfElements (parameters' 4).ToText ().Convert<Rectangle> ();  
Magic Number,DeltaEngine.Input,TouchHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\TouchHoldTrigger.cs,TouchHoldTrigger,The following statement contains a magic number: if (parameters.Length > 4)  	HoldTime = parameters [4].Convert<float> ();  
Magic Number,DeltaEngine.Input,TouchHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\TouchHoldTrigger.cs,TouchHoldTrigger,The following statement contains a magic number: if (parameters.Length > 4)  	HoldTime = parameters [4].Convert<float> ();  
Magic Number,DeltaEngine.Input,TouchHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\TouchHoldTrigger.cs,TouchHoldTrigger,The following statement contains a magic number: HoldTime = parameters [4].Convert<float> ();  
Magic Number,DeltaEngine.Input,TouchRotateTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\TouchRotateTrigger.cs,HandleWithTouch,The following statement contains a magic number: if (touch.GetState (0) >= State.Pressing && touch.GetState (1) >= State.Pressing) {  	var vector = (touch.GetPosition (1) - touch.GetPosition (0));  	vector = vector / vector.Length;  	Angle = (float)Math.Atan2 (vector.X' vector.Y);  	if (Angle < 0)  		Angle += (float)(2 * Math.PI);  	Invoke ();  }  else  	Angle = 0f;  
Magic Number,DeltaEngine.Input,TouchRotateTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\TouchRotateTrigger.cs,HandleWithTouch,The following statement contains a magic number: if (Angle < 0)  	Angle += (float)(2 * Math.PI);  
Magic Number,DeltaEngine.Input,TouchRotateTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\TouchRotateTrigger.cs,HandleWithTouch,The following statement contains a magic number: Angle += (float)(2 * Math.PI);  
Magic Number,DeltaEngine.Input,MouseDragDropTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseDragDropTrigger.cs,MouseDragDropTrigger,The following statement contains a magic number: if (parameters.Length < 4)  	throw new CannotCreateMouseDragDropTriggerWithoutStartArea ();  
Magic Number,DeltaEngine.Input,MouseDragDropTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseDragDropTrigger.cs,MouseDragDropTrigger,The following statement contains a magic number: Button = parameters.Length > 4 ? parameters [4].Convert<MouseButton> () : MouseButton.Left;  
Magic Number,DeltaEngine.Input,MouseDragDropTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseDragDropTrigger.cs,MouseDragDropTrigger,The following statement contains a magic number: Button = parameters.Length > 4 ? parameters [4].Convert<MouseButton> () : MouseButton.Left;  
Magic Number,DeltaEngine.Input,MouseDragDropTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseDragDropTrigger.cs,BuildParameterStringForRectangle,The following statement contains a magic number: return parameters [0] + " " + parameters [1] + " " + parameters [2] + " " + parameters [3];  
Magic Number,DeltaEngine.Input,MouseDragDropTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseDragDropTrigger.cs,BuildParameterStringForRectangle,The following statement contains a magic number: return parameters [0] + " " + parameters [1] + " " + parameters [2] + " " + parameters [3];  
Magic Number,DeltaEngine.Input,MouseHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseHoldTrigger.cs,MouseHoldTrigger,The following statement contains a magic number: if (parameters.Length < 4)  	throw new CannotCreateMouseHoldTriggerWithoutHoldArea ();  
Magic Number,DeltaEngine.Input,MouseHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseHoldTrigger.cs,MouseHoldTrigger,The following statement contains a magic number: HoldTime = parameters.Length > 4 ? parameters [4].Convert<float> () : DefaultHoldTime;  
Magic Number,DeltaEngine.Input,MouseHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseHoldTrigger.cs,MouseHoldTrigger,The following statement contains a magic number: HoldTime = parameters.Length > 4 ? parameters [4].Convert<float> () : DefaultHoldTime;  
Magic Number,DeltaEngine.Input,MouseHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseHoldTrigger.cs,MouseHoldTrigger,The following statement contains a magic number: Button = parameters.Length > 5 ? parameters [5].Convert<MouseButton> () : MouseButton.Left;  
Magic Number,DeltaEngine.Input,MouseHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseHoldTrigger.cs,MouseHoldTrigger,The following statement contains a magic number: Button = parameters.Length > 5 ? parameters [5].Convert<MouseButton> () : MouseButton.Left;  
Magic Number,DeltaEngine.Input,MouseHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseHoldTrigger.cs,BuildStringForParameter,The following statement contains a magic number: return parameters [0] + " " + parameters [1] + " " + parameters [2] + " " + parameters [3];  
Magic Number,DeltaEngine.Input,MouseHoldTrigger,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\MouseHoldTrigger.cs,BuildStringForParameter,The following statement contains a magic number: return parameters [0] + " " + parameters [1] + " " + parameters [2] + " " + parameters [3];  
Magic Number,DeltaEngine.Input,Keyboard,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\Keyboard.cs,HandleInputForKey,The following statement contains a magic number: if (key >= Key.NumPad0 && key <= Key.NumPad9)  	return inputText + key.ToString () [6].ToString (CultureInfo.InvariantCulture);  
Magic Number,DeltaEngine.Input,Keyboard,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\Keyboard.cs,HandleInputForKey,The following statement contains a magic number: return inputText + key.ToString () [6].ToString (CultureInfo.InvariantCulture);  
Magic Number,DeltaEngine.Input,Keyboard,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\Keyboard.cs,HandleInputForKey,The following statement contains a magic number: if (key >= Key.A && key <= Key.Z)  	if (KeyNeedsToBeCapitalized ())  		return inputText + key;  	else  		return inputText + (char)((int)key + 32);  
Magic Number,DeltaEngine.Input,Keyboard,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\Keyboard.cs,HandleInputForKey,The following statement contains a magic number: if (KeyNeedsToBeCapitalized ())  	return inputText + key;  else  	return inputText + (char)((int)key + 32);  
Magic Number,DeltaEngine.Input,Keyboard,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\Keyboard.cs,HandleInputForKey,The following statement contains a magic number: return inputText + (char)((int)key + 32);  
Missing Default,DeltaEngine.Input,GamePad,C:\repos\DeltaEngine_DeltaEngine.OpenTK\Input\GamePad.cs,IsGamePadStickTriggered,The following switch statement is missing a default case: switch (trigger.Analog) {  case GamePadAnalog.LeftThumbStick:  	trigger.Position = GetLeftThumbStick ();  	break;  case GamePadAnalog.RightThumbStick:  	trigger.Position = GetRightThumbStick ();  	break;  case GamePadAnalog.LeftTrigger:  	trigger.Position = new Vector2D (GetLeftTrigger ()' GetLeftTrigger ());  	break;  case GamePadAnalog.RightTrigger:  	trigger.Position = new Vector2D (GetRightTrigger ()' GetRightTrigger ());  	break;  }  
