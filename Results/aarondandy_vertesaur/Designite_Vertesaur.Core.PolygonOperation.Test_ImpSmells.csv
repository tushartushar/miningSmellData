Implementation smell,Namespace,Class,File,Method,Description
Long Method,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The method has 233 lines of code.
Long Method,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The method has 205 lines of code.
Long Method,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The method has 480 lines of code.
Long Method,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The method has 136 lines of code.
Long Method,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The method has 597 lines of code.
Complex Method,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,Cyclomatic complexity of the method is 32
Complex Method,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,Cyclomatic complexity of the method is 20
Complex Method,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,Cyclomatic complexity of the method is 37
Complex Method,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,Cyclomatic complexity of the method is 11
Long Parameter List,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GenerateChessboardData,The method has 5 parameters. Parameters: name' r' c' aHole' bHole
Long Statement,Vertesaur.PolygonOperation.Test,PolygonDifferenceFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonDifferenceFacts.cs,polygon_difference,The length of the statement  "                testData.R.SpatiallyEqual(result).Should().BeTrue("Failed: {0} - {1} ≠ {2}"' testData.A' testData.B' PolygonToString(result)); " is 126.
Long Statement,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,polygon_intersection,The length of the statement  "                testData.R.SpatiallyEqual(result).Should().BeTrue("Forward case failed: {0} ∩ {1} ≠ {2}"' testData.A' testData.B' PolygonToString(result)); " is 139.
Long Statement,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,polygon_intersection,The length of the statement  "                    testData.R.SpatiallyEqual(result).Should().BeTrue("Reverse case failed: {0} ∩ {1} ≠ {2}"' testData.B' testData.A' PolygonToString(result)); " is 139.
Long Statement,Vertesaur.PolygonOperation.Test,PolygonUnionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonUnionFacts.cs,polygon_union,The length of the statement  "                testData.R.SpatiallyEqual(result).Should().BeTrue("Forward case failed: {0} u {1} ≠ {2}"' testData.A' testData.B' PolygonToString(result)); " is 139.
Long Statement,Vertesaur.PolygonOperation.Test,PolygonUnionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonUnionFacts.cs,polygon_union,The length of the statement  "                testData.R.SpatiallyEqual(result).Should().BeTrue("Reverse case failed: {0} u {1} ≠ {2}"' testData.B' testData.A' PolygonToString(result)); " is 139.
Long Statement,Vertesaur.PolygonOperation.Test,PolygonXorFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonXorFacts.cs,polygon_xor,The length of the statement  "                testData.R.SpatiallyEqual(result).Should().BeTrue("Forward case failed: {0} ∩ {1} ≠ {2}"' testData.A' testData.B' PolygonToString(result)); " is 139.
Long Statement,Vertesaur.PolygonOperation.Test,PolygonXorFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonXorFacts.cs,polygon_xor,The length of the statement  "                testData.R.SpatiallyEqual(result).Should().BeTrue("Reverse case failed: {0} ∩ {1} ≠ {2}"' testData.B' testData.A' PolygonToString(result)); " is 139.
Complex Conditional,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The conditional expression  "data.Name == "Triangle In Box: side touch"                  || data.Name == "Triangle In Box: point touch"                  || data.Name == "Diamond In Box: two ends touch sides"                  || data.Name == "Trapezoid In Box: touches side"                  || data.Name == "Z-Thing in a Box"                  || data.Name == "One Box in Another: with one side segment within another"                  || data.Name == "Same Boxes"                  || data.Name == "Equal Boxes"                  || data.Name == "Geometrically Equal Boxes"                  || data.Name == "Boxes Overlapping: top half"                  || data.Name == "Rectangle in Box: touching two sides"                  || data.Name == "Nested: fill within another' not touching"                  || data.Name == "Diamond in Double Diamond: touching sides"                  || data.Name == "Fuzzed: 1"                  || data.Name == "Fuzzed: 2"                  || data.Name == "Fuzzed: 3"                  || data.Name == "Fuzzed: 5""  is complex.
Complex Conditional,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The conditional expression  "data.Name == "Two Stacked Boxes"                  || data.Name == "Two Boxes Touching: with one side segment within another"                  || data.Name == "Nested: fill within a hole' not touching"                  || data.Name == "Under Ledge""  is complex.
Complex Conditional,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The conditional expression  "data.Name == "Triangle In Box: side touch"                  || data.Name == "Triangle In Box: point touch"                  || data.Name == "Diamond In Box: two ends touch sides"                  || data.Name == "Trapezoid In Box: touches side"                  || data.Name == "Z-Thing in a Box"                  || data.Name == "One Box in Another: with one side segment within another"                  || data.Name == "Same Boxes"                  || data.Name == "Equal Boxes"                  || data.Name == "Geometrically Equal Boxes"                  || data.Name == "Boxes Overlapping: top half"                  || data.Name == "Rectangle in Box: touching two sides"                  || data.Name == "Nested: fill within another' not touching"                  || data.Name == "Diamond in Double Diamond: touching sides"                  || data.Name == "Zig-zag Thing: holes""  is complex.
Magic Number,Vertesaur.PolygonOperation.Test,PolygonDifferenceFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonDifferenceFacts.cs,PointsAlmostEqual,The following statement contains a magic number: return d.GetMagnitudeSquared() < 0.000000000000000001;
Magic Number,Vertesaur.PolygonOperation.Test,PolygonFindPointCrossingsFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonFindPointCrossingsFacts.cs,PointsAlmostEqual,The following statement contains a magic number: return d.GetMagnitudeSquared() < 0.000000000000000001;
Magic Number,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,PointsAlmostEqual,The following statement contains a magic number: return d.GetMagnitudeSquared() < 0.000000000000000001;
Magic Number,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,can_perform_box_and_donut_intersection_without_exception,The following statement contains a magic number: var donut = new Polygon2 {  				// outer boundary  				new Ring2(  					Enumerable.Range(0'8)  					.Select(i => i * 45 / 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)'Math.Sin(t)))  				){Hole = false}'  				// inner hole  				new Ring2(  					Enumerable.Range(0'8)  					.Reverse()  					.Select(i => i * 45/ 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)*0.5'Math.Sin(t)*0.5))  				) {Hole = true}  			};
Magic Number,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,can_perform_box_and_donut_intersection_without_exception,The following statement contains a magic number: var donut = new Polygon2 {  				// outer boundary  				new Ring2(  					Enumerable.Range(0'8)  					.Select(i => i * 45 / 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)'Math.Sin(t)))  				){Hole = false}'  				// inner hole  				new Ring2(  					Enumerable.Range(0'8)  					.Reverse()  					.Select(i => i * 45/ 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)*0.5'Math.Sin(t)*0.5))  				) {Hole = true}  			};
Magic Number,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,can_perform_box_and_donut_intersection_without_exception,The following statement contains a magic number: var donut = new Polygon2 {  				// outer boundary  				new Ring2(  					Enumerable.Range(0'8)  					.Select(i => i * 45 / 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)'Math.Sin(t)))  				){Hole = false}'  				// inner hole  				new Ring2(  					Enumerable.Range(0'8)  					.Reverse()  					.Select(i => i * 45/ 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)*0.5'Math.Sin(t)*0.5))  				) {Hole = true}  			};
Magic Number,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,can_perform_box_and_donut_intersection_without_exception,The following statement contains a magic number: var donut = new Polygon2 {  				// outer boundary  				new Ring2(  					Enumerable.Range(0'8)  					.Select(i => i * 45 / 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)'Math.Sin(t)))  				){Hole = false}'  				// inner hole  				new Ring2(  					Enumerable.Range(0'8)  					.Reverse()  					.Select(i => i * 45/ 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)*0.5'Math.Sin(t)*0.5))  				) {Hole = true}  			};
Magic Number,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,can_perform_box_and_donut_intersection_without_exception,The following statement contains a magic number: var donut = new Polygon2 {  				// outer boundary  				new Ring2(  					Enumerable.Range(0'8)  					.Select(i => i * 45 / 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)'Math.Sin(t)))  				){Hole = false}'  				// inner hole  				new Ring2(  					Enumerable.Range(0'8)  					.Reverse()  					.Select(i => i * 45/ 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)*0.5'Math.Sin(t)*0.5))  				) {Hole = true}  			};
Magic Number,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,can_perform_box_and_donut_intersection_without_exception,The following statement contains a magic number: var donut = new Polygon2 {  				// outer boundary  				new Ring2(  					Enumerable.Range(0'8)  					.Select(i => i * 45 / 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)'Math.Sin(t)))  				){Hole = false}'  				// inner hole  				new Ring2(  					Enumerable.Range(0'8)  					.Reverse()  					.Select(i => i * 45/ 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)*0.5'Math.Sin(t)*0.5))  				) {Hole = true}  			};
Magic Number,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,can_perform_box_and_donut_intersection_without_exception,The following statement contains a magic number: var donut = new Polygon2 {  				// outer boundary  				new Ring2(  					Enumerable.Range(0'8)  					.Select(i => i * 45 / 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)'Math.Sin(t)))  				){Hole = false}'  				// inner hole  				new Ring2(  					Enumerable.Range(0'8)  					.Reverse()  					.Select(i => i * 45/ 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)*0.5'Math.Sin(t)*0.5))  				) {Hole = true}  			};
Magic Number,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,can_perform_box_and_donut_intersection_without_exception,The following statement contains a magic number: var donut = new Polygon2 {  				// outer boundary  				new Ring2(  					Enumerable.Range(0'8)  					.Select(i => i * 45 / 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)'Math.Sin(t)))  				){Hole = false}'  				// inner hole  				new Ring2(  					Enumerable.Range(0'8)  					.Reverse()  					.Select(i => i * 45/ 180.0 * Math.PI)  					.Select(t => new Point2(Math.Cos(t)*0.5'Math.Sin(t)*0.5))  				) {Hole = true}  			};
Magic Number,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,fuzzed_3,The following statement contains a magic number: Assert.True(result                  .SelectMany(r => r)                  .Select(p => data.R.DistanceSquared(p))                  .All(d => d < 0.000000000000000001)              );
Magic Number,Vertesaur.PolygonOperation.Test,PolygonIntersectionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonIntersectionFacts.cs,fuzzed_3,The following statement contains a magic number: Assert.True(result2                  .SelectMany(r => r)                  .Select(p => data.R.DistanceSquared(p))                  .All(d => d < 0.000000000000000001)              );
Magic Number,Vertesaur.PolygonOperation.Test,PolygonUnionFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonUnionFacts.cs,PointsAlmostEqual,The following statement contains a magic number: return d.GetMagnitudeSquared() < 0.000000000000000001;
Magic Number,Vertesaur.PolygonOperation.Test,PolygonXorFacts,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolygonXorFacts.cs,PointsAlmostEqual,The following statement contains a magic number: return d.GetMagnitudeSquared() < 0.000000000000000001;
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var chessBoard4 = GenerateChessboardData("Chess 4 Holes"' 2' 2' true' true);
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var chessBoard4 = GenerateChessboardData("Chess 4 Holes"' 2' 2' true' true);
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var chessBoard9 = GenerateChessboardData("Chess 9 Holes"' 3' 3' true' true);
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var chessBoard9 = GenerateChessboardData("Chess 9 Holes"' 3' 3' true' true);
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var chessBoard4FillHole = GenerateChessboardData("Chess 4 (2 Fills and 2 Holes)"' 2' 2' false' true);
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var chessBoard4FillHole = GenerateChessboardData("Chess 4 (2 Fills and 2 Holes)"' 2' 2' false' true);
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var chessBoard9FillHole = GenerateChessboardData("Chess 9 (5 Fills and 4 Holes)"' 3' 3' false' true);
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var chessBoard9FillHole = GenerateChessboardData("Chess 9 (5 Fills and 4 Holes)"' 3' 3' false' true);
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var threePartTriangle = new PolyPairTestData(                  "Three Part Triangle"'                  new Polygon2(new[]{  					new Ring2(new[]{  						new Point2(0' 0)'  						new Point2(1' 0)'  						new Point2(1' 1)  					}' false)'  					new Ring2(new[]{  						new Point2(1' 1)'  						new Point2(2' 1)'  						new Point2(2' 2)  					}' false)  				})'                  new Polygon2(new[]{  					new Point2(1'0)'  					new Point2(2'0)'   					new Point2(2'1)'   					new Point2(1'1)'   				}' false)              );
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var threePartTriangle = new PolyPairTestData(                  "Three Part Triangle"'                  new Polygon2(new[]{  					new Ring2(new[]{  						new Point2(0' 0)'  						new Point2(1' 0)'  						new Point2(1' 1)  					}' false)'  					new Ring2(new[]{  						new Point2(1' 1)'  						new Point2(2' 1)'  						new Point2(2' 2)  					}' false)  				})'                  new Polygon2(new[]{  					new Point2(1'0)'  					new Point2(2'0)'   					new Point2(2'1)'   					new Point2(1'1)'   				}' false)              );
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var threePartTriangle = new PolyPairTestData(                  "Three Part Triangle"'                  new Polygon2(new[]{  					new Ring2(new[]{  						new Point2(0' 0)'  						new Point2(1' 0)'  						new Point2(1' 1)  					}' false)'  					new Ring2(new[]{  						new Point2(1' 1)'  						new Point2(2' 1)'  						new Point2(2' 2)  					}' false)  				})'                  new Polygon2(new[]{  					new Point2(1'0)'  					new Point2(2'0)'   					new Point2(2'1)'   					new Point2(1'1)'   				}' false)              );
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var threePartTriangle = new PolyPairTestData(                  "Three Part Triangle"'                  new Polygon2(new[]{  					new Ring2(new[]{  						new Point2(0' 0)'  						new Point2(1' 0)'  						new Point2(1' 1)  					}' false)'  					new Ring2(new[]{  						new Point2(1' 1)'  						new Point2(2' 1)'  						new Point2(2' 2)  					}' false)  				})'                  new Polygon2(new[]{  					new Point2(1'0)'  					new Point2(2'0)'   					new Point2(2'1)'   					new Point2(1'1)'   				}' false)              );
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GeneratePolyPairTestData,The following statement contains a magic number: var threePartTriangle = new PolyPairTestData(                  "Three Part Triangle"'                  new Polygon2(new[]{  					new Ring2(new[]{  						new Point2(0' 0)'  						new Point2(1' 0)'  						new Point2(1' 1)  					}' false)'  					new Ring2(new[]{  						new Point2(1' 1)'  						new Point2(2' 1)'  						new Point2(2' 2)  					}' false)  				})'                  new Polygon2(new[]{  					new Point2(1'0)'  					new Point2(2'0)'   					new Point2(2'1)'   					new Point2(1'1)'   				}' false)              );
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,GenerateChessboardData,The following statement contains a magic number: bool selectPolyA = 0 == i % 2;
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(2'2)'  					new Point2(2'0)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(2'2)'  					new Point2(2'0)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(2'2)'  					new Point2(2'0)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'2)'  					new Point2(2'2)'  					new Point2(2'0)  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'2)'  					new Point2(2'2)'  					new Point2(2'0)  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'2)'  					new Point2(2'2)'  					new Point2(2'0)  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'2)'  					new Point2(2'2)'  					new Point2(2'0)  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'3)'  					new Point2(3'3)'  					new Point2(3'0)  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'3)'  					new Point2(3'3)'  					new Point2(3'0)  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'3)'  					new Point2(3'3)'  					new Point2(3'0)  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'3)'  					new Point2(3'3)'  					new Point2(3'0)  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0.5'0.5)'  					new Point2(1'0.5)'  					new Point2(1'1)'  					new Point2(0.5'1)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0.5'0.5)'  					new Point2(1'0.5)'  					new Point2(1'1)'  					new Point2(0.5'1)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0.5'0.5)'  					new Point2(1'0.5)'  					new Point2(1'1)'  					new Point2(0.5'1)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0.5'0.5)'  					new Point2(1'0.5)'  					new Point2(1'1)'  					new Point2(0.5'1)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0.5'0.5)'  					new Point2(1'0.5)'  					new Point2(1'1)'  					new Point2(0.5'1)  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0.5'0.5)'  					new Point2(1'0.5)'  					new Point2(1'1)'  					new Point2(0.5'1)  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0.5'0.5)'  					new Point2(1'0.5)'  					new Point2(1'1)'  					new Point2(0.5'1)  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0.5'0.5)'  					new Point2(1'0.5)'  					new Point2(1'1)'  					new Point2(0.5'1)  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(.5'0)'   					new Point2(.5'.5)'   					new Point2(0'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(.5'0)'   					new Point2(.5'.5)'   					new Point2(0'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(.5'0)'   					new Point2(.5'.5)'   					new Point2(0'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(.5'0)'   					new Point2(.5'.5)'   					new Point2(0'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1' .5)'   					new Point2(1' 0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1' .5)'   					new Point2(1' 0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1' .5)'   					new Point2(1' 0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1' .5)'   					new Point2(1' 0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1' .5)'   					new Point2(1' 0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1' .5)'   					new Point2(1' 0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1' .5)'   					new Point2(1' 0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1' .5)'   					new Point2(1' 0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(.5'0)'   					new Point2(.5'.25)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(.5'0)'   					new Point2(.5'.25)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(.5'0)'   					new Point2(.5'.25)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0.75)'  					new Point2(0'.25)'  					new Point2(.25'.25)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0.75)'  					new Point2(0'.25)'  					new Point2(.25'.25)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0.75)'  					new Point2(0'.25)'  					new Point2(.25'.25)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0.75)'  					new Point2(0'.25)'  					new Point2(.25'.25)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.5)'  					new Point2(1'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.5)'  					new Point2(1'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.75)'  					new Point2(0'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.75)'  					new Point2(0'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.75)'  					new Point2(0'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.75)'  					new Point2(0'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.75)'  					new Point2(0'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.75)'  					new Point2(0'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.75)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.75)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.75)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'.75)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.75)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1.5'.5)'  					new Point2(2'1)'  					new Point2(1.5'1.5)'  					new Point2(1'1)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1.5'.5)'  					new Point2(2'1)'  					new Point2(1.5'1.5)'  					new Point2(1'1)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1.5'.5)'  					new Point2(2'1)'  					new Point2(1.5'1.5)'  					new Point2(1'1)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1.5'.5)'  					new Point2(2'1)'  					new Point2(1.5'1.5)'  					new Point2(1'1)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1.5'.5)'  					new Point2(2'1)'  					new Point2(1.5'1.5)'  					new Point2(1'1)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(.5'0)'  					new Point2(1'0)'  					new Point2(1'.5)'  					new Point2(.5'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  					new Point2(0'0)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(.5'0)'  					new Point2(1'0)'  					new Point2(1'.5)'  					new Point2(.5'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  					new Point2(0'0)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(.5'0)'  					new Point2(1'0)'  					new Point2(1'.5)'  					new Point2(.5'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  					new Point2(0'0)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(.5'0)'  					new Point2(1'0)'  					new Point2(1'.5)'  					new Point2(.5'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  					new Point2(0'0)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'1)'  					new Point2(1'1)'  					new Point2(1'.5)'  					new Point2(1.5'.5)'   					new Point2(1.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'1)'  					new Point2(1'1)'  					new Point2(1'.5)'  					new Point2(1.5'.5)'   					new Point2(1.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'1)'  					new Point2(1'1)'  					new Point2(1'.5)'  					new Point2(1.5'.5)'   					new Point2(1.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'1)'  					new Point2(1'1)'  					new Point2(1'.5)'  					new Point2(1.5'.5)'   					new Point2(1.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'1)'  					new Point2(1'1)'  					new Point2(1'.5)'  					new Point2(1.5'.5)'   					new Point2(1.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'1)'  					new Point2(1'1)'  					new Point2(1'.5)'  					new Point2(1.5'.5)'   					new Point2(1.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'1)'  					new Point2(1'1)'  					new Point2(1'.5)'  					new Point2(1.5'.5)'   					new Point2(1.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToIntersectionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'  					new Point2(0'1)'  					new Point2(1'1)'  					new Point2(1'.5)'  					new Point2(1.5'.5)'   					new Point2(1.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'   					new Point2(1.5'1.5)'   					new Point2(.5'1.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'   					new Point2(1.5'1.5)'   					new Point2(.5'1.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'   					new Point2(1.5'1.5)'   					new Point2(.5'1.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'   					new Point2(1.5'1.5)'   					new Point2(.5'1.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'   					new Point2(1.5'1.5)'   					new Point2(.5'1.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'   					new Point2(1.5'1.5)'   					new Point2(.5'1.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'   					new Point2(1.5'1.5)'   					new Point2(.5'1.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'   					new Point2(1.5'1.5)'   					new Point2(.5'1.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.5)'   					new Point2(-.5'.5)'   					new Point2(-.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'   					new Point2(1'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.5)'   					new Point2(-.5'.5)'   					new Point2(-.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'   					new Point2(1'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.5)'   					new Point2(-.5'.5)'   					new Point2(-.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'   					new Point2(1'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.5)'   					new Point2(-.5'.5)'   					new Point2(-.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'   					new Point2(1'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.5)'   					new Point2(-.5'.5)'   					new Point2(-.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'   					new Point2(1'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.5)'   					new Point2(-.5'.5)'   					new Point2(-.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'   					new Point2(1'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.5)'   					new Point2(-.5'.5)'   					new Point2(-.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'   					new Point2(1'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.5)'   					new Point2(-.5'.5)'   					new Point2(-.5'-.5)'   					new Point2(.5'-.5)'   					new Point2(.5'0)'   					new Point2(1'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(.5'-.25)'   					new Point2(.5'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(.5'-.25)'   					new Point2(.5'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(.5'-.25)'   					new Point2(.5'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(-.5'.6)'   					new Point2(-.5'.4)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(-.5'.6)'   					new Point2(-.5'.4)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(-.5'.6)'   					new Point2(-.5'.4)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(-.5'.6)'   					new Point2(-.5'.4)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(-.5'.6)'   					new Point2(-.5'.4)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(-.5'.6)'   					new Point2(-.5'.4)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'2)'   					new Point2(0'2)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'2)'   					new Point2(0'2)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1.5)'   					new Point2(0'1.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1.5)'   					new Point2(0'1.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.25)'   					new Point2(2'.25)'   					new Point2(2'.75)'   					new Point2(1'.75)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.25)'   					new Point2(2'.25)'   					new Point2(2'.75)'   					new Point2(1'.75)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.25)'   					new Point2(2'.25)'   					new Point2(2'.75)'   					new Point2(1'.75)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.25)'   					new Point2(2'.25)'   					new Point2(2'.75)'   					new Point2(1'.75)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.25)'   					new Point2(2'.25)'   					new Point2(2'.75)'   					new Point2(1'.75)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.25)'   					new Point2(2'.25)'   					new Point2(2'.75)'   					new Point2(1'.75)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'.25)'   					new Point2(1.25'.25)'   					new Point2(1.25'.75)'   					new Point2(1' .75)'   					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'.25)'   					new Point2(1.25'.25)'   					new Point2(1.25'.75)'   					new Point2(1' .75)'   					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'.25)'   					new Point2(1.25'.25)'   					new Point2(1.25'.75)'   					new Point2(1' .75)'   					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'.25)'   					new Point2(1.25'.25)'   					new Point2(1.25'.75)'   					new Point2(1' .75)'   					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'.25)'   					new Point2(1.25'.25)'   					new Point2(1.25'.75)'   					new Point2(1' .75)'   					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'.25)'   					new Point2(1.25'.25)'   					new Point2(1.25'.75)'   					new Point2(1' .75)'   					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'.25)'   					new Point2(1.25'.25)'   					new Point2(1.25'.75)'   					new Point2(1' .75)'   					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'.25)'   					new Point2(1.25'.25)'   					new Point2(1.25'.75)'   					new Point2(1' .75)'   					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'.25)'   					new Point2(1.25'.25)'   					new Point2(1.25'.75)'   					new Point2(1' .75)'   					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'.25)'   					new Point2(1.25'.25)'   					new Point2(1.25'.75)'   					new Point2(1' .75)'   					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'.25)'   					new Point2(1.25'.25)'   					new Point2(1.25'.75)'   					new Point2(1' .75)'   					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'0)'   					new Point2(1'0)'    					new Point2(1'.25)'   					new Point2(1.25'.25)'   					new Point2(1.25'.75)'   					new Point2(1' .75)'   					new Point2(1'1)'   					new Point2(0'1)'  					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'1)'   					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(1'2)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'1)'   					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(1'2)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'1)'   					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(1'2)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'1)'   					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(1'2)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'1)'   					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(1'2)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'1)'   					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(1'2)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'1)'   					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(1'2)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'1)'   					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(1'2)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Point2(0'1)'   					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(1'2)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'  					new Point2(1'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  					new Point2(0'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'  					new Point2(1'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  					new Point2(0'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'  					new Point2(1'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  					new Point2(0'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'  					new Point2(1'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  					new Point2(0'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'  					new Point2(1'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  					new Point2(0'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'  					new Point2(1'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  					new Point2(0'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'  					new Point2(1'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  					new Point2(0'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'  					new Point2(1'.5)'  					new Point2(1'1)'  					new Point2(0'1)'  					new Point2(0'0)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'1)'   					new Point2(1'1)'  					new Point2(.5'.5)'  					new Point2(1'.5)'  					new Point2(1'0)'  					new Point2(0'0)'  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'1)'   					new Point2(1'1)'  					new Point2(.5'.5)'  					new Point2(1'.5)'  					new Point2(1'0)'  					new Point2(0'0)'  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToUnionData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'1)'   					new Point2(1'1)'  					new Point2(.5'.5)'  					new Point2(1'.5)'  					new Point2(1'0)'  					new Point2(0'0)'  				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   					new Point2(1'0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   					new Point2(1'0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   					new Point2(1'0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   					new Point2(1'0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   					new Point2(1'0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   					new Point2(1'0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   					new Point2(1'0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(0'1)'   					new Point2(.5'1)'   					new Point2(.5'1.5)'   					new Point2(1.5'1.5)'   					new Point2(1.5'.5)'   					new Point2(1'.5)'   					new Point2(1'0)'   				}' true));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'   				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'   				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'   				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'   				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(.5'.5)'   					new Point2(1'.5)'   					new Point2(1'1)'   					new Point2(.5'1)'  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(.5'.5)'   					new Point2(.5'1)'   					new Point2(0'1)'   				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1.5'1.5)'   					new Point2(.5' 1.5)'   					new Point2(.5' 1)'   					new Point2(1'1)'   					new Point2(1'.5)'   					new Point2(1.5'.5)'  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'.5)'   					new Point2(.5'.5)'   					new Point2(.5'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'.5)'   					new Point2(.5'.5)'   					new Point2(.5'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'.5)'   					new Point2(.5'.5)'   					new Point2(.5'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'.5)'   					new Point2(.5'.5)'   					new Point2(.5'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(-.5'-.5)'  					new Point2(-.5'.5)'  					new Point2(0' .5)  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(-.5'-.5)'  					new Point2(-.5'.5)'  					new Point2(0' .5)  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(-.5'-.5)'  					new Point2(-.5'.5)'  					new Point2(0' .5)  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(-.5'-.5)'  					new Point2(-.5'.5)'  					new Point2(0' .5)  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(-.5'-.5)'  					new Point2(-.5'.5)'  					new Point2(0' .5)  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(-.5'-.5)'  					new Point2(-.5'.5)'  					new Point2(0' .5)  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(-.5'-.5)'  					new Point2(-.5'.5)'  					new Point2(0' .5)  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(-.5'-.5)'  					new Point2(-.5'.5)'  					new Point2(0' .5)  				}.Reverse()' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.75'.5)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.75'.5)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.75'.5)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.75'.5)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2{  					new Ring2(new[] {  						new Point2(0'0)'  						new Point2(1'0)'  						new Point2(1'1)'  						new Point2(0'1)'  					}' false)'  					new Ring2(new[] {  						new Point2(0'.5)'  						new Point2(.75'.75)'   						new Point2(.75'.25)'   					}' true)   				});
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2{  					new Ring2(new[] {  						new Point2(0'0)'  						new Point2(1'0)'  						new Point2(1'1)'  						new Point2(0'1)'  					}' false)'  					new Ring2(new[] {  						new Point2(0'.5)'  						new Point2(.75'.75)'   						new Point2(.75'.25)'   					}' true)   				});
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2{  					new Ring2(new[] {  						new Point2(0'0)'  						new Point2(1'0)'  						new Point2(1'1)'  						new Point2(0'1)'  					}' false)'  					new Ring2(new[] {  						new Point2(0'.5)'  						new Point2(.75'.75)'   						new Point2(.75'.25)'   					}' true)   				});
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2{  					new Ring2(new[] {  						new Point2(0'0)'  						new Point2(1'0)'  						new Point2(1'1)'  						new Point2(0'1)'  					}' false)'  					new Ring2(new[] {  						new Point2(0'.5)'  						new Point2(.75'.75)'   						new Point2(.75'.25)'   					}' true)   				});
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2{  					new Ring2(new[] {  						new Point2(0'0)'  						new Point2(1'0)'  						new Point2(1'1)'  						new Point2(0'1)'  					}' false)'  					new Ring2(new[] {  						new Point2(0'.5)'  						new Point2(.75'.75)'   						new Point2(.75'.25)'   					}' true)   				});
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(.5'.25)'   					new Point2(.5'0)'   					new Point2(1' 0)'   					new Point2(1'1)'   					new Point2(0'1)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(.5'.25)'   					new Point2(.5'0)'   					new Point2(1' 0)'   					new Point2(1'1)'   					new Point2(0'1)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(.5'.25)'   					new Point2(.5'0)'   					new Point2(1' 0)'   					new Point2(1'1)'   					new Point2(0'1)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(.5'-.25)'   					new Point2(.5'0)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(.5'-.25)'   					new Point2(.5'0)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(.5'-.25)'   					new Point2(.5'0)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.25'.25)'   					new Point2(0'.25)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.25'.25)'   					new Point2(0'.25)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.25'.25)'   					new Point2(0'.25)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.25'.25)'   					new Point2(0'.25)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.75)'   					new Point2(-.25'.25)'   					new Point2(0'.25)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.6)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.6)'   					new Point2(-.5'.6)'   					new Point2(-.5'.4)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.6)'   					new Point2(-.5'.6)'   					new Point2(-.5'.4)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.6)'   					new Point2(-.5'.6)'   					new Point2(-.5'.4)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.6)'   					new Point2(-.5'.6)'   					new Point2(-.5'.4)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.6)'   					new Point2(-.5'.6)'   					new Point2(-.5'.4)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.6)'   					new Point2(-.5'.6)'   					new Point2(-.5'.4)'   					new Point2(0'.4)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(  						new [] {  							new Point2(0'0)'  							new Point2(1'0)'   							new Point2(1'.25)'   							new Point2(0'.25)'   							new Point2(.25'.5)'   							new Point2(0'.5)'  							new Point2(0'.25)'   						}'false)'  					new Ring2(  						new [] {  							new Point2(0'1)'  							new Point2(0'.75)'  							new Point2(1'.75)'  							new Point2(.75'.5)'   							new Point2(1'.5)'   							new Point2(1'.75)'   							new Point2(1'1)  						}' false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(  						new [] {  							new Point2(0'0)'  							new Point2(1'0)'   							new Point2(1'.25)'   							new Point2(0'.25)'   							new Point2(.25'.5)'   							new Point2(0'.5)'  							new Point2(0'.25)'   						}'false)'  					new Ring2(  						new [] {  							new Point2(0'1)'  							new Point2(0'.75)'  							new Point2(1'.75)'  							new Point2(.75'.5)'   							new Point2(1'.5)'   							new Point2(1'.75)'   							new Point2(1'1)  						}' false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(  						new [] {  							new Point2(0'0)'  							new Point2(1'0)'   							new Point2(1'.25)'   							new Point2(0'.25)'   							new Point2(.25'.5)'   							new Point2(0'.5)'  							new Point2(0'.25)'   						}'false)'  					new Ring2(  						new [] {  							new Point2(0'1)'  							new Point2(0'.75)'  							new Point2(1'.75)'  							new Point2(.75'.5)'   							new Point2(1'.5)'   							new Point2(1'.75)'   							new Point2(1'1)  						}' false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(  						new [] {  							new Point2(0'0)'  							new Point2(1'0)'   							new Point2(1'.25)'   							new Point2(0'.25)'   							new Point2(.25'.5)'   							new Point2(0'.5)'  							new Point2(0'.25)'   						}'false)'  					new Ring2(  						new [] {  							new Point2(0'1)'  							new Point2(0'.75)'  							new Point2(1'.75)'  							new Point2(.75'.5)'   							new Point2(1'.5)'   							new Point2(1'.75)'   							new Point2(1'1)  						}' false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(  						new [] {  							new Point2(0'0)'  							new Point2(1'0)'   							new Point2(1'.25)'   							new Point2(0'.25)'   							new Point2(.25'.5)'   							new Point2(0'.5)'  							new Point2(0'.25)'   						}'false)'  					new Ring2(  						new [] {  							new Point2(0'1)'  							new Point2(0'.75)'  							new Point2(1'.75)'  							new Point2(.75'.5)'   							new Point2(1'.5)'   							new Point2(1'.75)'   							new Point2(1'1)  						}' false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(  						new [] {  							new Point2(0'0)'  							new Point2(1'0)'   							new Point2(1'.25)'   							new Point2(0'.25)'   							new Point2(.25'.5)'   							new Point2(0'.5)'  							new Point2(0'.25)'   						}'false)'  					new Ring2(  						new [] {  							new Point2(0'1)'  							new Point2(0'.75)'  							new Point2(1'.75)'  							new Point2(.75'.5)'   							new Point2(1'.5)'   							new Point2(1'.75)'   							new Point2(1'1)  						}' false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(  						new [] {  							new Point2(0'0)'  							new Point2(1'0)'   							new Point2(1'.25)'   							new Point2(0'.25)'   							new Point2(.25'.5)'   							new Point2(0'.5)'  							new Point2(0'.25)'   						}'false)'  					new Ring2(  						new [] {  							new Point2(0'1)'  							new Point2(0'.75)'  							new Point2(1'.75)'  							new Point2(.75'.5)'   							new Point2(1'.5)'   							new Point2(1'.75)'   							new Point2(1'1)  						}' false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(  						new [] {  							new Point2(0'0)'  							new Point2(1'0)'   							new Point2(1'.25)'   							new Point2(0'.25)'   							new Point2(.25'.5)'   							new Point2(0'.5)'  							new Point2(0'.25)'   						}'false)'  					new Ring2(  						new [] {  							new Point2(0'1)'  							new Point2(0'.75)'  							new Point2(1'.75)'  							new Point2(.75'.5)'   							new Point2(1'.5)'   							new Point2(1'.75)'   							new Point2(1'1)  						}' false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(  						new [] {  							new Point2(0'0)'  							new Point2(1'0)'   							new Point2(1'.25)'   							new Point2(0'.25)'   							new Point2(.25'.5)'   							new Point2(0'.5)'  							new Point2(0'.25)'   						}'false)'  					new Ring2(  						new [] {  							new Point2(0'1)'  							new Point2(0'.75)'  							new Point2(1'.75)'  							new Point2(.75'.5)'   							new Point2(1'.5)'   							new Point2(1'.75)'   							new Point2(1'1)  						}' false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(  						new [] {  							new Point2(0'0)'  							new Point2(1'0)'   							new Point2(1'.25)'   							new Point2(0'.25)'   							new Point2(.25'.5)'   							new Point2(0'.5)'  							new Point2(0'.25)'   						}'false)'  					new Ring2(  						new [] {  							new Point2(0'1)'  							new Point2(0'.75)'  							new Point2(1'.75)'  							new Point2(.75'.5)'   							new Point2(1'.5)'   							new Point2(1'.75)'   							new Point2(1'1)  						}' false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(  						new [] {  							new Point2(0'0)'  							new Point2(1'0)'   							new Point2(1'.25)'   							new Point2(0'.25)'   							new Point2(.25'.5)'   							new Point2(0'.5)'  							new Point2(0'.25)'   						}'false)'  					new Ring2(  						new [] {  							new Point2(0'1)'  							new Point2(0'.75)'  							new Point2(1'.75)'  							new Point2(.75'.5)'   							new Point2(1'.5)'   							new Point2(1'.75)'   							new Point2(1'1)  						}' false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(  						new [] {  							new Point2(0'0)'  							new Point2(1'0)'   							new Point2(1'.25)'   							new Point2(0'.25)'   							new Point2(.25'.5)'   							new Point2(0'.5)'  							new Point2(0'.25)'   						}'false)'  					new Ring2(  						new [] {  							new Point2(0'1)'  							new Point2(0'.75)'  							new Point2(1'.75)'  							new Point2(.75'.5)'   							new Point2(1'.5)'   							new Point2(1'.75)'   							new Point2(1'1)  						}' false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(0'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(0'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'1)'   					new Point2(1'1)'   					new Point2(1'1.5)'   					new Point2(0'1.5)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'1)'   					new Point2(1'1)'   					new Point2(1'1.5)'   					new Point2(0'1.5)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.5'.75)'   					new Point2(.5'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.25'.75)'   					new Point2(.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.25'.75)'   					new Point2(.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.25'.75)'   					new Point2(.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.25'.75)'   					new Point2(.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.25'.75)'   					new Point2(.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'1)'   					new Point2(0'1)'   					new Point2(0'.75)'   					new Point2(.25'.75)'   					new Point2(.25'.25)'   					new Point2(0'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.25)'   					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.25)'   					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.25)'   					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.25)'   					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.25)'   					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(0'.25)'   					new Point2(0'.75)'   					new Point2(-.25'.75)'   					new Point2(-.25'.25)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(1'.75)'   						new Point2(1'1)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(1'.75)'   						new Point2(1'1)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(1'.75)'   						new Point2(1'1)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(1'.75)'   						new Point2(1'1)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'.75)'   						new Point2(-.25'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(1'.75)'   						new Point2(1'.25)'   						new Point2(1.25'.25)'   						new Point2(1.25'.75)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'.75)'   						new Point2(-.25'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(1'.75)'   						new Point2(1'.25)'   						new Point2(1.25'.25)'   						new Point2(1.25'.75)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'.75)'   						new Point2(-.25'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(1'.75)'   						new Point2(1'.25)'   						new Point2(1.25'.25)'   						new Point2(1.25'.75)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'.75)'   						new Point2(-.25'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(1'.75)'   						new Point2(1'.25)'   						new Point2(1.25'.25)'   						new Point2(1.25'.75)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'.75)'   						new Point2(-.25'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(1'.75)'   						new Point2(1'.25)'   						new Point2(1.25'.25)'   						new Point2(1.25'.75)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'.75)'   						new Point2(-.25'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(1'.75)'   						new Point2(1'.25)'   						new Point2(1.25'.25)'   						new Point2(1.25'.75)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'.75)'   						new Point2(-.25'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(1'.75)'   						new Point2(1'.25)'   						new Point2(1.25'.25)'   						new Point2(1.25'.75)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'.75)'   						new Point2(-.25'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(1'.75)'   						new Point2(1'.25)'   						new Point2(1.25'.25)'   						new Point2(1.25'.75)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'.75)'   						new Point2(-.25'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(1'.75)'   						new Point2(1'.25)'   						new Point2(1.25'.25)'   						new Point2(1.25'.75)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'.75)'   						new Point2(-.25'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(1'.75)'   						new Point2(1'.25)'   						new Point2(1.25'.25)'   						new Point2(1.25'.75)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'.75)'   						new Point2(-.25'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(1'.75)'   						new Point2(1'.25)'   						new Point2(1.25'.25)'   						new Point2(1.25'.75)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'.75)'   						new Point2(-.25'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(1'.75)'   						new Point2(1'.25)'   						new Point2(1.25'.25)'   						new Point2(1.25'.75)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(0'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(0'0)'   					new Point2(1'0)'   					new Point2(1'.5)'   					new Point2(0'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(1'.75)'   						new Point2(1'1)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(1'.75)'   						new Point2(1'1)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(1'.75)'   						new Point2(1'1)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new [] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.25)'   						new Point2(0'.25)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(1'.75)'   						new Point2(1'1)'   					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(1'1)'   					new Point2(1.5'1.5)'   					new Point2(1'2)'   					new Point2(0'1)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(1'1)'   					new Point2(1.5'1.5)'   					new Point2(1'2)'   					new Point2(0'1)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(1'1)'   					new Point2(1.5'1.5)'   					new Point2(1'2)'   					new Point2(0'1)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(1'1)'   					new Point2(1.5'1.5)'   					new Point2(1'2)'   					new Point2(0'1)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'0)'   					new Point2(1.5'.5)'   					new Point2(1'1)'   					new Point2(1.5'1.5)'   					new Point2(1'2)'   					new Point2(0'1)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(2'1)'   					new Point2(1.5'.5)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(2'1)'   					new Point2(1.5'.5)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(2'1)'   					new Point2(1.5'.5)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(2'1)'   					new Point2(1.5'.5)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(2'1)'   					new Point2(1.5'.5)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(2'1)'   					new Point2(1.5'.5)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(2'1)'   					new Point2(1.5'.5)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(2'1)'   					new Point2(1.5'.5)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(2'0)'   					new Point2(3'1)'   					new Point2(2'2)'   					new Point2(1.5'1.5)'   					new Point2(2'1)'   					new Point2(1.5'.5)  				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1'1)'   					new Point2(.5'.5)'   					new Point2(1'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1'1)'   					new Point2(.5'.5)'   					new Point2(1'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1'1)'   					new Point2(.5'.5)'   					new Point2(1'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'1)'   					new Point2(.5'.5)'   					new Point2(1'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'1)'   					new Point2(.5'.5)'   					new Point2(1'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data' new Polygon2(new[] {  					new Point2(1'1)'   					new Point2(.5'.5)'   					new Point2(1'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToDifferenceData,The following statement contains a magic number: yield return new PolyPairTestData(data.Reverse()' new Polygon2(new[] {  					new Point2(1'.5)'   					new Point2(1'0)'   					new Point2(.5'0)'   					new Point2(.5'-.5)'   					new Point2(1.5'-.5)'   					new Point2(1.5'.5)'   				}' false));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(.5'.5)'   						new Point2(.5'1)'   						new Point2(0'1)'   					}'false)'   					new Ring2(new[] {  						new Point2(1'.5)'   						new Point2(1.5'.5)'   						new Point2(1.5'1.5)'   						new Point2(.5'1.5)'   						new Point2(.5'1)'  						new Point2(1'1)  					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(.5'.5)'   						new Point2(.5'1)'   						new Point2(0'1)'   					}'false)'   					new Ring2(new[] {  						new Point2(1'.5)'   						new Point2(1.5'.5)'   						new Point2(1.5'1.5)'   						new Point2(.5'1.5)'   						new Point2(.5'1)'  						new Point2(1'1)  					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(.5'.5)'   						new Point2(.5'1)'   						new Point2(0'1)'   					}'false)'   					new Ring2(new[] {  						new Point2(1'.5)'   						new Point2(1.5'.5)'   						new Point2(1.5'1.5)'   						new Point2(.5'1.5)'   						new Point2(.5'1)'  						new Point2(1'1)  					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(.5'.5)'   						new Point2(.5'1)'   						new Point2(0'1)'   					}'false)'   					new Ring2(new[] {  						new Point2(1'.5)'   						new Point2(1.5'.5)'   						new Point2(1.5'1.5)'   						new Point2(.5'1.5)'   						new Point2(.5'1)'  						new Point2(1'1)  					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(.5'.5)'   						new Point2(.5'1)'   						new Point2(0'1)'   					}'false)'   					new Ring2(new[] {  						new Point2(1'.5)'   						new Point2(1.5'.5)'   						new Point2(1.5'1.5)'   						new Point2(.5'1.5)'   						new Point2(.5'1)'  						new Point2(1'1)  					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(.5'.5)'   						new Point2(.5'1)'   						new Point2(0'1)'   					}'false)'   					new Ring2(new[] {  						new Point2(1'.5)'   						new Point2(1.5'.5)'   						new Point2(1.5'1.5)'   						new Point2(.5'1.5)'   						new Point2(.5'1)'  						new Point2(1'1)  					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(.5'.5)'   						new Point2(.5'1)'   						new Point2(0'1)'   					}'false)'   					new Ring2(new[] {  						new Point2(1'.5)'   						new Point2(1.5'.5)'   						new Point2(1.5'1.5)'   						new Point2(.5'1.5)'   						new Point2(.5'1)'  						new Point2(1'1)  					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(.5'.5)'   						new Point2(.5'1)'   						new Point2(0'1)'   					}'false)'   					new Ring2(new[] {  						new Point2(1'.5)'   						new Point2(1.5'.5)'   						new Point2(1.5'1.5)'   						new Point2(.5'1.5)'   						new Point2(.5'1)'  						new Point2(1'1)  					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(.5'.5)'   						new Point2(.5'1)'   						new Point2(0'1)'   					}'false)'   					new Ring2(new[] {  						new Point2(1'.5)'   						new Point2(1.5'.5)'   						new Point2(1.5'1.5)'   						new Point2(.5'1.5)'   						new Point2(.5'1)'  						new Point2(1'1)  					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(.5'.5)'   						new Point2(.5'1)'   						new Point2(0'1)'   					}'false)'   					new Ring2(new[] {  						new Point2(1'.5)'   						new Point2(1.5'.5)'   						new Point2(1.5'1.5)'   						new Point2(.5'1.5)'   						new Point2(.5'1)'  						new Point2(1'1)  					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(.5'.5)'   						new Point2(.5'1)'   						new Point2(0'1)'   					}'false)'   					new Ring2(new[] {  						new Point2(1'.5)'   						new Point2(1.5'.5)'   						new Point2(1.5'1.5)'   						new Point2(.5'1.5)'   						new Point2(.5'1)'  						new Point2(1'1)  					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(.5'.5)'   						new Point2(.5'1)'   						new Point2(0'1)'   					}'false)'   					new Ring2(new[] {  						new Point2(1'.5)'   						new Point2(1.5'.5)'   						new Point2(1.5'1.5)'   						new Point2(.5'1.5)'   						new Point2(.5'1)'  						new Point2(1'1)  					}'false)  				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Ring2(new[] {  						new Point2(1'1)'   						new Point2(.5'1)'   						new Point2(.5'.5)'   						new Point2(1'.5)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(0'1)'   						new Point2(.5'1)'   						new Point2(.5'1.5)'   						new Point2(1.5'1.5)'   						new Point2(1.5'.5)'   						new Point2(1'.5)'   						new Point2(1'0)'   					}'true)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Ring2(new[] {  						new Point2(1'1)'   						new Point2(.5'1)'   						new Point2(.5'.5)'   						new Point2(1'.5)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(0'1)'   						new Point2(.5'1)'   						new Point2(.5'1.5)'   						new Point2(1.5'1.5)'   						new Point2(1.5'.5)'   						new Point2(1'.5)'   						new Point2(1'0)'   					}'true)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Ring2(new[] {  						new Point2(1'1)'   						new Point2(.5'1)'   						new Point2(.5'.5)'   						new Point2(1'.5)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(0'1)'   						new Point2(.5'1)'   						new Point2(.5'1.5)'   						new Point2(1.5'1.5)'   						new Point2(1.5'.5)'   						new Point2(1'.5)'   						new Point2(1'0)'   					}'true)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Ring2(new[] {  						new Point2(1'1)'   						new Point2(.5'1)'   						new Point2(.5'.5)'   						new Point2(1'.5)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(0'1)'   						new Point2(.5'1)'   						new Point2(.5'1.5)'   						new Point2(1.5'1.5)'   						new Point2(1.5'.5)'   						new Point2(1'.5)'   						new Point2(1'0)'   					}'true)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Ring2(new[] {  						new Point2(1'1)'   						new Point2(.5'1)'   						new Point2(.5'.5)'   						new Point2(1'.5)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(0'1)'   						new Point2(.5'1)'   						new Point2(.5'1.5)'   						new Point2(1.5'1.5)'   						new Point2(1.5'.5)'   						new Point2(1'.5)'   						new Point2(1'0)'   					}'true)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Ring2(new[] {  						new Point2(1'1)'   						new Point2(.5'1)'   						new Point2(.5'.5)'   						new Point2(1'.5)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(0'1)'   						new Point2(.5'1)'   						new Point2(.5'1.5)'   						new Point2(1.5'1.5)'   						new Point2(1.5'.5)'   						new Point2(1'.5)'   						new Point2(1'0)'   					}'true)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Ring2(new[] {  						new Point2(1'1)'   						new Point2(.5'1)'   						new Point2(.5'.5)'   						new Point2(1'.5)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(0'1)'   						new Point2(.5'1)'   						new Point2(.5'1.5)'   						new Point2(1.5'1.5)'   						new Point2(1.5'.5)'   						new Point2(1'.5)'   						new Point2(1'0)'   					}'true)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Ring2(new[] {  						new Point2(1'1)'   						new Point2(.5'1)'   						new Point2(.5'.5)'   						new Point2(1'.5)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(0'1)'   						new Point2(.5'1)'   						new Point2(.5'1.5)'   						new Point2(1.5'1.5)'   						new Point2(1.5'.5)'   						new Point2(1'.5)'   						new Point2(1'0)'   					}'true)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Ring2(new[] {  						new Point2(1'1)'   						new Point2(.5'1)'   						new Point2(.5'.5)'   						new Point2(1'.5)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(0'1)'   						new Point2(.5'1)'   						new Point2(.5'1.5)'   						new Point2(1.5'1.5)'   						new Point2(1.5'.5)'   						new Point2(1'.5)'   						new Point2(1'0)'   					}'true)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Ring2(new[] {  						new Point2(1'1)'   						new Point2(.5'1)'   						new Point2(.5'.5)'   						new Point2(1'.5)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(0'1)'   						new Point2(.5'1)'   						new Point2(.5'1.5)'   						new Point2(1.5'1.5)'   						new Point2(1.5'.5)'   						new Point2(1'.5)'   						new Point2(1'0)'   					}'true)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Ring2(new[] {  						new Point2(1'1)'   						new Point2(.5'1)'   						new Point2(.5'.5)'   						new Point2(1'.5)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(0'1)'   						new Point2(.5'1)'   						new Point2(.5'1.5)'   						new Point2(1.5'1.5)'   						new Point2(1.5'.5)'   						new Point2(1'.5)'   						new Point2(1'0)'   					}'true)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[]{  					new Ring2(new[] {  						new Point2(1'1)'   						new Point2(.5'1)'   						new Point2(.5'.5)'   						new Point2(1'.5)'   					}'false)'  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(0'1)'   						new Point2(.5'1)'   						new Point2(.5'1.5)'   						new Point2(1.5'1.5)'   						new Point2(1.5'.5)'   						new Point2(1'.5)'   						new Point2(1'0)'   					}'true)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(.5'-.25)'   						new Point2(.5'0)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(.5'.25)'   						new Point2(.5'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(.5'-.25)'   						new Point2(.5'0)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(.5'.25)'   						new Point2(.5'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(.5'-.25)'   						new Point2(.5'0)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(.5'.25)'   						new Point2(.5'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(.5'-.25)'   						new Point2(.5'0)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(.5'.25)'   						new Point2(.5'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(.5'-.25)'   						new Point2(.5'0)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(.5'.25)'   						new Point2(.5'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(.5'-.25)'   						new Point2(.5'0)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(.5'.25)'   						new Point2(.5'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(.25'.25)'   						new Point2(0'.25)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(.25'.25)'   						new Point2(0'.25)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(.25'.25)'   						new Point2(0'.25)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(.25'.25)'   						new Point2(0'.25)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(.25'.25)'   						new Point2(0'.25)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(.25'.25)'   						new Point2(0'.25)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(.25'.25)'   						new Point2(0'.25)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'.75)'   						new Point2(-.25'.25)'   						new Point2(0'.25)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'1)'   						new Point2(0'1)'   						new Point2(0'.75)'   						new Point2(.25'.25)'   						new Point2(0'.25)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(0'.5)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'1)'   						new Point2(1'1)'   						new Point2(1'1.5)'   						new Point2(0'1.5)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(0'.5)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'1)'   						new Point2(1'1)'   						new Point2(1'1.5)'   						new Point2(0'1.5)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(0'.5)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'1)'   						new Point2(1'1)'   						new Point2(1'1.5)'   						new Point2(0'1.5)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,PolyOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\PolyOperationTestUtility.cs,ToXorData,The following statement contains a magic number: return new PolyPairTestData(data' new Polygon2(new[] {  					new Ring2(new[] {  						new Point2(0'0)'   						new Point2(1'0)'   						new Point2(1'.5)'   						new Point2(0'.5)'   					}'false)'   					new Ring2(new[] {   						new Point2(0'1)'   						new Point2(1'1)'   						new Point2(1'1.5)'   						new Point2(0'1.5)'    					}'false)'   				}));
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var cascadeBoxes = new RingPairTestData(                  "Cascade Boxes"'                  new Ring2(false){  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'  					new Point2(0'1)}'                  new Ring2(false) {  					new Point2(0.5'0.5)'  					new Point2(1.5'0.5)'   					new Point2(1.5'1.5)'  					new Point2(0.5'1.5)}              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .5)'  					new Point2(.5' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var cascadeBoxes = new RingPairTestData(                  "Cascade Boxes"'                  new Ring2(false){  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'  					new Point2(0'1)}'                  new Ring2(false) {  					new Point2(0.5'0.5)'  					new Point2(1.5'0.5)'   					new Point2(1.5'1.5)'  					new Point2(0.5'1.5)}              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .5)'  					new Point2(.5' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var cascadeBoxes = new RingPairTestData(                  "Cascade Boxes"'                  new Ring2(false){  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'  					new Point2(0'1)}'                  new Ring2(false) {  					new Point2(0.5'0.5)'  					new Point2(1.5'0.5)'   					new Point2(1.5'1.5)'  					new Point2(0.5'1.5)}              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .5)'  					new Point2(.5' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var cascadeBoxes = new RingPairTestData(                  "Cascade Boxes"'                  new Ring2(false){  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'  					new Point2(0'1)}'                  new Ring2(false) {  					new Point2(0.5'0.5)'  					new Point2(1.5'0.5)'   					new Point2(1.5'1.5)'  					new Point2(0.5'1.5)}              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .5)'  					new Point2(.5' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var cascadeBoxes = new RingPairTestData(                  "Cascade Boxes"'                  new Ring2(false){  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'  					new Point2(0'1)}'                  new Ring2(false) {  					new Point2(0.5'0.5)'  					new Point2(1.5'0.5)'   					new Point2(1.5'1.5)'  					new Point2(0.5'1.5)}              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .5)'  					new Point2(.5' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var cascadeBoxes = new RingPairTestData(                  "Cascade Boxes"'                  new Ring2(false){  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'  					new Point2(0'1)}'                  new Ring2(false) {  					new Point2(0.5'0.5)'  					new Point2(1.5'0.5)'   					new Point2(1.5'1.5)'  					new Point2(0.5'1.5)}              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .5)'  					new Point2(.5' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var cascadeBoxes = new RingPairTestData(                  "Cascade Boxes"'                  new Ring2(false){  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'  					new Point2(0'1)}'                  new Ring2(false) {  					new Point2(0.5'0.5)'  					new Point2(1.5'0.5)'   					new Point2(1.5'1.5)'  					new Point2(0.5'1.5)}              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .5)'  					new Point2(.5' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var cascadeBoxes = new RingPairTestData(                  "Cascade Boxes"'                  new Ring2(false){  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'  					new Point2(0'1)}'                  new Ring2(false) {  					new Point2(0.5'0.5)'  					new Point2(1.5'0.5)'   					new Point2(1.5'1.5)'  					new Point2(0.5'1.5)}              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .5)'  					new Point2(.5' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var cascadeBoxes = new RingPairTestData(                  "Cascade Boxes"'                  new Ring2(false){  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'  					new Point2(0'1)}'                  new Ring2(false) {  					new Point2(0.5'0.5)'  					new Point2(1.5'0.5)'   					new Point2(1.5'1.5)'  					new Point2(0.5'1.5)}              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .5)'  					new Point2(.5' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var cascadeBoxes = new RingPairTestData(                  "Cascade Boxes"'                  new Ring2(false){  					new Point2(0'0)'  					new Point2(1'0)'   					new Point2(1'1)'  					new Point2(0'1)}'                  new Ring2(false) {  					new Point2(0.5'0.5)'  					new Point2(1.5'0.5)'   					new Point2(1.5'1.5)'  					new Point2(0.5'1.5)}              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .5)'  					new Point2(.5' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Boxes: left down box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.5'-.5)'  					new Point2(.5'-.5)'  					new Point2(.5'.5)'  					new Point2(-.5'.5)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(.5'0)'  					new Point2(0'.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Boxes: left down box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.5'-.5)'  					new Point2(.5'-.5)'  					new Point2(.5'.5)'  					new Point2(-.5'.5)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(.5'0)'  					new Point2(0'.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Boxes: left down box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.5'-.5)'  					new Point2(.5'-.5)'  					new Point2(.5'.5)'  					new Point2(-.5'.5)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(.5'0)'  					new Point2(0'.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Boxes: left down box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.5'-.5)'  					new Point2(.5'-.5)'  					new Point2(.5'.5)'  					new Point2(-.5'.5)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(.5'0)'  					new Point2(0'.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Boxes: left down box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.5'-.5)'  					new Point2(.5'-.5)'  					new Point2(.5'.5)'  					new Point2(-.5'.5)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(.5'0)'  					new Point2(0'.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Boxes: left down box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.5'-.5)'  					new Point2(.5'-.5)'  					new Point2(.5'.5)'  					new Point2(-.5'.5)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(.5'0)'  					new Point2(0'.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Boxes: left down box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.5'-.5)'  					new Point2(.5'-.5)'  					new Point2(.5'.5)'  					new Point2(-.5'.5)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(.5'0)'  					new Point2(0'.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Boxes: left down box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.5'-.5)'  					new Point2(.5'-.5)'  					new Point2(.5'.5)'  					new Point2(-.5'.5)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(.5'0)'  					new Point2(0'.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Boxes: left down box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.5'-.5)'  					new Point2(.5'-.5)'  					new Point2(.5'.5)'  					new Point2(-.5'.5)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(.5'0)'  					new Point2(0'.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Boxes: left down box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.5'-.5)'  					new Point2(.5'-.5)'  					new Point2(.5'.5)'  					new Point2(-.5'.5)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(.5'0)'  					new Point2(0'.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var leftTriangleInBox = new RingPairTestData(                  "Triangle In Box: side touch"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.75'.5)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new[] { new Point2(0' 0.25)' new Point2(0' 0.75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var leftTriangleInBox = new RingPairTestData(                  "Triangle In Box: side touch"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.75'.5)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new[] { new Point2(0' 0.25)' new Point2(0' 0.75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var leftTriangleInBox = new RingPairTestData(                  "Triangle In Box: side touch"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.75'.5)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new[] { new Point2(0' 0.25)' new Point2(0' 0.75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var leftTriangleInBox = new RingPairTestData(                  "Triangle In Box: side touch"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.75'.5)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new[] { new Point2(0' 0.25)' new Point2(0' 0.75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var leftTriangleInBox = new RingPairTestData(                  "Triangle In Box: side touch"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.75'.5)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new[] { new Point2(0' 0.25)' new Point2(0' 0.75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var leftTriangleInBox = new RingPairTestData(                  "Triangle In Box: side touch"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.75'.5)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new[] { new Point2(0' 0.25)' new Point2(0' 0.75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle In Box: point touch"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.75'.25)'  					new Point2(.75'.75)  				}' false)              ) {                  CrossingPoints = new[] { new Point2(0' .5) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle In Box: point touch"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.75'.25)'  					new Point2(.75'.75)  				}' false)              ) {                  CrossingPoints = new[] { new Point2(0' .5) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle In Box: point touch"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.75'.25)'  					new Point2(.75'.75)  				}' false)              ) {                  CrossingPoints = new[] { new Point2(0' .5) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle In Box: point touch"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.75'.25)'  					new Point2(.75'.75)  				}' false)              ) {                  CrossingPoints = new[] { new Point2(0' .5) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle In Box: point touch"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.75'.25)'  					new Point2(.75'.75)  				}' false)              ) {                  CrossingPoints = new[] { new Point2(0' .5) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle In Box: point touch"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.75'.25)'  					new Point2(.75'.75)  				}' false)              ) {                  CrossingPoints = new[] { new Point2(0' .5) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var triangleOverBox = new RingPairTestData(                  "Triangle Over Box: point segment through"'                  new Ring2(leftTriangleInBox.A' false)'                  new Ring2(new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'-.25)'  					new Point2(.5'.25)  				}' false)' false)              ) {                  CrossingPoints = new[] { Point2.Zero' new Point2(0.5' 0) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var triangleOverBox = new RingPairTestData(                  "Triangle Over Box: point segment through"'                  new Ring2(leftTriangleInBox.A' false)'                  new Ring2(new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'-.25)'  					new Point2(.5'.25)  				}' false)' false)              ) {                  CrossingPoints = new[] { Point2.Zero' new Point2(0.5' 0) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var triangleOverBox = new RingPairTestData(                  "Triangle Over Box: point segment through"'                  new Ring2(leftTriangleInBox.A' false)'                  new Ring2(new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'-.25)'  					new Point2(.5'.25)  				}' false)' false)              ) {                  CrossingPoints = new[] { Point2.Zero' new Point2(0.5' 0) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var triangleOverBox = new RingPairTestData(                  "Triangle Over Box: point segment through"'                  new Ring2(leftTriangleInBox.A' false)'                  new Ring2(new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'-.25)'  					new Point2(.5'.25)  				}' false)' false)              ) {                  CrossingPoints = new[] { Point2.Zero' new Point2(0.5' 0) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var triangleOverBox = new RingPairTestData(                  "Triangle Over Box: point segment through"'                  new Ring2(leftTriangleInBox.A' false)'                  new Ring2(new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'-.25)'  					new Point2(.5'.25)  				}' false)' false)              ) {                  CrossingPoints = new[] { Point2.Zero' new Point2(0.5' 0) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle Over Box: segment through"'                  new Ring2(leftTriangleInBox.A' false)'                  new Ring2(new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(-.25'.25)'  					new Point2(.25'.25)  				}' false)' false)              ) {                  CrossingPoints = new[] { new Point2(0' .25)' new Point2(0' .75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle Over Box: segment through"'                  new Ring2(leftTriangleInBox.A' false)'                  new Ring2(new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(-.25'.25)'  					new Point2(.25'.25)  				}' false)' false)              ) {                  CrossingPoints = new[] { new Point2(0' .25)' new Point2(0' .75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle Over Box: segment through"'                  new Ring2(leftTriangleInBox.A' false)'                  new Ring2(new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(-.25'.25)'  					new Point2(.25'.25)  				}' false)' false)              ) {                  CrossingPoints = new[] { new Point2(0' .25)' new Point2(0' .75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle Over Box: segment through"'                  new Ring2(leftTriangleInBox.A' false)'                  new Ring2(new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(-.25'.25)'  					new Point2(.25'.25)  				}' false)' false)              ) {                  CrossingPoints = new[] { new Point2(0' .25)' new Point2(0' .75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle Over Box: segment through"'                  new Ring2(leftTriangleInBox.A' false)'                  new Ring2(new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(-.25'.25)'  					new Point2(.25'.25)  				}' false)' false)              ) {                  CrossingPoints = new[] { new Point2(0' .25)' new Point2(0' .75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle Over Box: segment through"'                  new Ring2(leftTriangleInBox.A' false)'                  new Ring2(new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(-.25'.25)'  					new Point2(.25'.25)  				}' false)' false)              ) {                  CrossingPoints = new[] { new Point2(0' .25)' new Point2(0' .75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Triangle Over Box: segment through"'                  new Ring2(leftTriangleInBox.A' false)'                  new Ring2(new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(-.25'.25)'  					new Point2(.25'.25)  				}' false)' false)              ) {                  CrossingPoints = new[] { new Point2(0' .25)' new Point2(0' .75) }.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInBox = new RingPairTestData(                  "Diamond In Box: two ends touch sides"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(1'0)'  					new Point2(1'1)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.5'.25)'  					new Point2(1'.5)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .5)'  					new Point2(1' .5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInBox = new RingPairTestData(                  "Diamond In Box: two ends touch sides"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(1'0)'  					new Point2(1'1)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.5'.25)'  					new Point2(1'.5)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .5)'  					new Point2(1' .5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInBox = new RingPairTestData(                  "Diamond In Box: two ends touch sides"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(1'0)'  					new Point2(1'1)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.5'.25)'  					new Point2(1'.5)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .5)'  					new Point2(1' .5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInBox = new RingPairTestData(                  "Diamond In Box: two ends touch sides"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(1'0)'  					new Point2(1'1)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.5'.25)'  					new Point2(1'.5)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .5)'  					new Point2(1' .5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInBox = new RingPairTestData(                  "Diamond In Box: two ends touch sides"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(1'0)'  					new Point2(1'1)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.5'.25)'  					new Point2(1'.5)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .5)'  					new Point2(1' .5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInBox = new RingPairTestData(                  "Diamond In Box: two ends touch sides"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(1'0)'  					new Point2(1'1)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.5'.25)'  					new Point2(1'.5)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .5)'  					new Point2(1' .5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInBox = new RingPairTestData(                  "Diamond In Box: two ends touch sides"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(1'0)'  					new Point2(1'1)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.5'.25)'  					new Point2(1'.5)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .5)'  					new Point2(1' .5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInBox = new RingPairTestData(                  "Diamond In Box: two ends touch sides"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(1'0)'  					new Point2(1'1)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(0'.5)'  					new Point2(.5'.25)'  					new Point2(1'.5)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .5)'  					new Point2(1' .5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var trapezoidInBox = new RingPairTestData(                  "Trapezoid In Box: touches side"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .6)'  					new Point2(0' .4)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var trapezoidInBox = new RingPairTestData(                  "Trapezoid In Box: touches side"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .6)'  					new Point2(0' .4)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var trapezoidInBox = new RingPairTestData(                  "Trapezoid In Box: touches side"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .6)'  					new Point2(0' .4)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var trapezoidInBox = new RingPairTestData(                  "Trapezoid In Box: touches side"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .6)'  					new Point2(0' .4)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var trapezoidInBox = new RingPairTestData(                  "Trapezoid In Box: touches side"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .6)'  					new Point2(0' .4)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var trapezoidInBox = new RingPairTestData(                  "Trapezoid In Box: touches side"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .6)'  					new Point2(0' .4)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var trapezoidInBox = new RingPairTestData(                  "Trapezoid In Box: touches side"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .6)'  					new Point2(0' .4)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var trapezoidInBox = new RingPairTestData(                  "Trapezoid In Box: touches side"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .6)'  					new Point2(0' .4)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Trapezoid In Box: with crossing nub"'                  new Ring2(trapezoidInBox.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(-.5'.6)'  					new Point2(-.5'.4)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = trapezoidInBox.CrossingPoints.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Trapezoid In Box: with crossing nub"'                  new Ring2(trapezoidInBox.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(-.5'.6)'  					new Point2(-.5'.4)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = trapezoidInBox.CrossingPoints.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Trapezoid In Box: with crossing nub"'                  new Ring2(trapezoidInBox.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(-.5'.6)'  					new Point2(-.5'.4)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = trapezoidInBox.CrossingPoints.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Trapezoid In Box: with crossing nub"'                  new Ring2(trapezoidInBox.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(-.5'.6)'  					new Point2(-.5'.4)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = trapezoidInBox.CrossingPoints.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Trapezoid In Box: with crossing nub"'                  new Ring2(trapezoidInBox.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(-.5'.6)'  					new Point2(-.5'.4)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = trapezoidInBox.CrossingPoints.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Trapezoid In Box: with crossing nub"'                  new Ring2(trapezoidInBox.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(-.5'.6)'  					new Point2(-.5'.4)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = trapezoidInBox.CrossingPoints.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Trapezoid In Box: with crossing nub"'                  new Ring2(trapezoidInBox.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(-.5'.6)'  					new Point2(-.5'.4)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = trapezoidInBox.CrossingPoints.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Trapezoid In Box: with crossing nub"'                  new Ring2(trapezoidInBox.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(-.5'.6)'  					new Point2(-.5'.4)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = trapezoidInBox.CrossingPoints.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Trapezoid In Box: with crossing nub"'                  new Ring2(trapezoidInBox.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(-.5'.6)'  					new Point2(-.5'.4)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = trapezoidInBox.CrossingPoints.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Trapezoid In Box: with crossing nub"'                  new Ring2(trapezoidInBox.A' false)'                  new Ring2(new[]{  					new Point2(0'.6)'  					new Point2(-.5'.6)'  					new Point2(-.5'.4)'  					new Point2(0'.4)'  					new Point2(.5'.25)'  					new Point2(.5'.75)  				}' false)              ) {                  CrossingPoints = trapezoidInBox.CrossingPoints.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zThingInABox = new RingPairTestData(                  "Z-Thing in a Box"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.75)'  					new Point2(0'.5)'  					new Point2(.25'.5)'  					new Point2(0'.25)'  					new Point2(1'.25)'  					new Point2(1'.5)'  					new Point2(.75'.5)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .75)'  					new Point2(0' .5)'  					new Point2(0' .25)'  					new Point2(1' .25)'  					new Point2(1' .5)'  					new Point2(1' .75)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Two Sunk In Boxes"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(stackedBoxes.A.Select(p => p.Add(new Vector2(0' 0.5)))' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' 1)'  					new Point2(0' .5)'  					new Point2(1' .5)'  					new Point2(1' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Two Sunk In Boxes"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(stackedBoxes.A.Select(p => p.Add(new Vector2(0' 0.5)))' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' 1)'  					new Point2(0' .5)'  					new Point2(1' .5)'  					new Point2(1' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Two Sunk In Boxes"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(stackedBoxes.A.Select(p => p.Add(new Vector2(0' 0.5)))' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' 1)'  					new Point2(0' .5)'  					new Point2(1' .5)'  					new Point2(1' 1)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Two Boxes Touching: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(1'.25)'  					new Point2(2'.25)'  					new Point2(2'.75)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Two Boxes Touching: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(1'.25)'  					new Point2(2'.25)'  					new Point2(2'.75)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Two Boxes Touching: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(1'.25)'  					new Point2(2'.25)'  					new Point2(2'.75)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Two Boxes Touching: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(1'.25)'  					new Point2(2'.25)'  					new Point2(2'.75)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Two Boxes Touching: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(1'.25)'  					new Point2(2'.25)'  					new Point2(2'.75)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Two Boxes Touching: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(1'.25)'  					new Point2(2'.25)'  					new Point2(2'.75)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Two Boxes Touching: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(1'.25)'  					new Point2(2'.25)'  					new Point2(2'.75)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Two Boxes Touching: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(1'.25)'  					new Point2(2'.25)'  					new Point2(2'.75)'  					new Point2(1'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "One Box in Another: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.5'.25)'  					new Point2(.5'.75)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "One Box in Another: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.5'.25)'  					new Point2(.5'.75)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "One Box in Another: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.5'.25)'  					new Point2(.5'.75)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "One Box in Another: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.5'.25)'  					new Point2(.5'.75)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "One Box in Another: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.5'.25)'  					new Point2(.5'.75)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "One Box in Another: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.5'.25)'  					new Point2(.5'.75)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "One Box in Another: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.5'.25)'  					new Point2(.5'.75)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "One Box in Another: with one side segment within another"'                  new Ring2(stackedBoxes.A' false)'                  new Ring2(new[]{  					new Point2(0'.25)'  					new Point2(.5'.25)'  					new Point2(.5'.75)'  					new Point2(0'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Geometrically Equal Boxes"'                  new Ring2(sameRing' false)'                  new Ring2(new[] { sameRing[2]' sameRing[3]' sameRing[0]' sameRing[1] }' false)              ) {                  CrossingPoints = sameRing.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Geometrically Equal Boxes"'                  new Ring2(sameRing' false)'                  new Ring2(new[] { sameRing[2]' sameRing[3]' sameRing[0]' sameRing[1] }' false)              ) {                  CrossingPoints = sameRing.ToList()              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: within one segment"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: within one segment"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: within one segment"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: within one segment"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: within one segment"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: within one segment"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: within one segment"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: within one segment"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: within one segment"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: within one segment"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(.25'.25)'  					new Point2(.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0' .25)'  					new Point2(0' .75)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: through two segments"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(1.25'.25)'  					new Point2(1.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)'  					new Point2(0' .75)'  					new Point2(0' .25)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: through two segments"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(1.25'.25)'  					new Point2(1.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)'  					new Point2(0' .75)'  					new Point2(0' .25)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: through two segments"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(1.25'.25)'  					new Point2(1.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)'  					new Point2(0' .75)'  					new Point2(0' .25)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: through two segments"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(1.25'.25)'  					new Point2(1.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)'  					new Point2(0' .75)'  					new Point2(0' .25)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: through two segments"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(1.25'.25)'  					new Point2(1.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)'  					new Point2(0' .75)'  					new Point2(0' .25)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: through two segments"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(1.25'.25)'  					new Point2(1.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)'  					new Point2(0' .75)'  					new Point2(0' .25)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: through two segments"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(1.25'.25)'  					new Point2(1.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)'  					new Point2(0' .75)'  					new Point2(0' .25)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: through two segments"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(1.25'.25)'  					new Point2(1.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)'  					new Point2(0' .75)'  					new Point2(0' .25)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: through two segments"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(1.25'.25)'  					new Point2(1.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)'  					new Point2(0' .75)'  					new Point2(0' .25)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: through two segments"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(1.25'.25)'  					new Point2(1.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)'  					new Point2(0' .75)'  					new Point2(0' .25)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: through two segments"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(1.25'.25)'  					new Point2(1.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)'  					new Point2(0' .75)'  					new Point2(0' .25)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Boxes Overlapping: through two segments"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(-.25'.25)'  					new Point2(1.25'.25)'  					new Point2(1.25'.75)'  					new Point2(-.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' .25)'  					new Point2(1' .75)'  					new Point2(0' .75)'  					new Point2(0' .25)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var topHalfBox = new Ring2(new[]{  				new Point2(0'.5)'  				new Point2(1'.5)'  				new Point2(1'1)'  				new Point2(0'1)  			}' false);
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var topHalfBox = new Ring2(new[]{  				new Point2(0'.5)'  				new Point2(1'.5)'  				new Point2(1'1)'  				new Point2(0'1)  			}' false);
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var innerRectangle = new Ring2(new[]{  				new Point2(0'.25)'  				new Point2(1'.25)'  				new Point2(1'.75)'  				new Point2(0'.75)  			}' false);
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var innerRectangle = new Ring2(new[]{  				new Point2(0'.25)'  				new Point2(1'.25)'  				new Point2(1'.75)'  				new Point2(0'.75)  			}' false);
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var innerRectangle = new Ring2(new[]{  				new Point2(0'.25)'  				new Point2(1'.25)'  				new Point2(1'.75)'  				new Point2(0'.75)  			}' false);
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var innerRectangle = new Ring2(new[]{  				new Point2(0'.25)'  				new Point2(1'.25)'  				new Point2(1'.75)'  				new Point2(0'.75)  			}' false);
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var fillInAnother = new RingPairTestData(                  "Nested: fill within another' not touching"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(.25'.25)'  					new Point2(.75'.25)'  					new Point2(.75'.75)'  					new Point2(.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var fillInAnother = new RingPairTestData(                  "Nested: fill within another' not touching"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(.25'.25)'  					new Point2(.75'.25)'  					new Point2(.75'.75)'  					new Point2(.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var fillInAnother = new RingPairTestData(                  "Nested: fill within another' not touching"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(.25'.25)'  					new Point2(.75'.25)'  					new Point2(.75'.75)'  					new Point2(.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var fillInAnother = new RingPairTestData(                  "Nested: fill within another' not touching"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(.25'.25)'  					new Point2(.75'.25)'  					new Point2(.75'.75)'  					new Point2(.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var fillInAnother = new RingPairTestData(                  "Nested: fill within another' not touching"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(.25'.25)'  					new Point2(.75'.25)'  					new Point2(.75'.75)'  					new Point2(.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var fillInAnother = new RingPairTestData(                  "Nested: fill within another' not touching"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(.25'.25)'  					new Point2(.75'.25)'  					new Point2(.75'.75)'  					new Point2(.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var fillInAnother = new RingPairTestData(                  "Nested: fill within another' not touching"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(.25'.25)'  					new Point2(.75'.25)'  					new Point2(.75'.75)'  					new Point2(.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var fillInAnother = new RingPairTestData(                  "Nested: fill within another' not touching"'                  new Ring2(cascadeBoxes.A' false)'                  new Ring2(new[]{  					new Point2(.25'.25)'  					new Point2(.75'.25)'  					new Point2(.75'.75)'  					new Point2(.25'.75)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var diamondInDoubleDiamond = new RingPairTestData(                  "Diamond in Double Diamond: touching sides"'                  new Ring2(new[]{  					new Point2(0.0'1.0)'  					new Point2(1.0'0.0)'  					new Point2(1.5'0.5)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)'  					new Point2(1.5'1.5)'  					new Point2(1.0'2.0)  				}' false)'                  new Ring2(new[]{  					new Point2(1.0'1.0)'  					new Point2(2.0'0.0)'  					new Point2(3.0'1.0)'  					new Point2(2.0'2.0)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(2.0' 0.0)'  					new Point2(3.0' 1.0)'  					new Point2(2.0' 2.0)'  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Diamond"'                  new Ring2(new[]{  					new Point2(1'0)'  					new Point2(2'1)'  					new Point2(1'2)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(2'0)'  					new Point2(3'1)'  					new Point2(2'2)'  					new Point2(1'1)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Diamond"'                  new Ring2(new[]{  					new Point2(1'0)'  					new Point2(2'1)'  					new Point2(1'2)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(2'0)'  					new Point2(3'1)'  					new Point2(2'2)'  					new Point2(1'1)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Diamond"'                  new Ring2(new[]{  					new Point2(1'0)'  					new Point2(2'1)'  					new Point2(1'2)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(2'0)'  					new Point2(3'1)'  					new Point2(2'2)'  					new Point2(1'1)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Diamond"'                  new Ring2(new[]{  					new Point2(1'0)'  					new Point2(2'1)'  					new Point2(1'2)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(2'0)'  					new Point2(3'1)'  					new Point2(2'2)'  					new Point2(1'1)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Diamond"'                  new Ring2(new[]{  					new Point2(1'0)'  					new Point2(2'1)'  					new Point2(1'2)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(2'0)'  					new Point2(3'1)'  					new Point2(2'2)'  					new Point2(1'1)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Diamond"'                  new Ring2(new[]{  					new Point2(1'0)'  					new Point2(2'1)'  					new Point2(1'2)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(2'0)'  					new Point2(3'1)'  					new Point2(2'2)'  					new Point2(1'1)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Diamond"'                  new Ring2(new[]{  					new Point2(1'0)'  					new Point2(2'1)'  					new Point2(1'2)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(2'0)'  					new Point2(3'1)'  					new Point2(2'2)'  					new Point2(1'1)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Diamond"'                  new Ring2(new[]{  					new Point2(1'0)'  					new Point2(2'1)'  					new Point2(1'2)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(2'0)'  					new Point2(3'1)'  					new Point2(2'2)'  					new Point2(1'1)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Diamond"'                  new Ring2(new[]{  					new Point2(1'0)'  					new Point2(2'1)'  					new Point2(1'2)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(2'0)'  					new Point2(3'1)'  					new Point2(2'2)'  					new Point2(1'1)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Cascade Diamond"'                  new Ring2(new[]{  					new Point2(1'0)'  					new Point2(2'1)'  					new Point2(1'2)'  					new Point2(0'1)  				}' false)'                  new Ring2(new[]{  					new Point2(2'0)'  					new Point2(3'1)'  					new Point2(2'2)'  					new Point2(1'1)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1.5' 1.5)'  					new Point2(1.5' 0.5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zigZag = new RingPairTestData(                  "Zig-zag Thing"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'   					new Point2(.5'.5)'   					new Point2(1'1)'   					new Point2(0'1)  				}' false)'                  new Ring2(cascadeBoxes.A' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zigZag = new RingPairTestData(                  "Zig-zag Thing"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'   					new Point2(.5'.5)'   					new Point2(1'1)'   					new Point2(0'1)  				}' false)'                  new Ring2(cascadeBoxes.A' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zigZag = new RingPairTestData(                  "Zig-zag Thing"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'   					new Point2(.5'.5)'   					new Point2(1'1)'   					new Point2(0'1)  				}' false)'                  new Ring2(cascadeBoxes.A' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zigZag = new RingPairTestData(                  "Zig-zag Thing"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'   					new Point2(.5'.5)'   					new Point2(1'1)'   					new Point2(0'1)  				}' false)'                  new Ring2(cascadeBoxes.A' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zigZag = new RingPairTestData(                  "Zig-zag Thing"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'   					new Point2(.5'.5)'   					new Point2(1'1)'   					new Point2(0'1)  				}' false)'                  new Ring2(cascadeBoxes.A' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zigZag = new RingPairTestData(                  "Zig-zag Thing"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'   					new Point2(.5'.5)'   					new Point2(1'1)'   					new Point2(0'1)  				}' false)'                  new Ring2(cascadeBoxes.A' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zigZag = new RingPairTestData(                  "Zig-zag Thing"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'   					new Point2(.5'.5)'   					new Point2(1'1)'   					new Point2(0'1)  				}' false)'                  new Ring2(cascadeBoxes.A' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zigZag = new RingPairTestData(                  "Zig-zag Thing"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'   					new Point2(.5'.5)'   					new Point2(1'1)'   					new Point2(0'1)  				}' false)'                  new Ring2(cascadeBoxes.A' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zigZag = new RingPairTestData(                  "Zig-zag Thing"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'   					new Point2(.5'.5)'   					new Point2(1'1)'   					new Point2(0'1)  				}' false)'                  new Ring2(cascadeBoxes.A' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zigZag = new RingPairTestData(                  "Zig-zag Thing"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'   					new Point2(.5'.5)'   					new Point2(1'1)'   					new Point2(0'1)  				}' false)'                  new Ring2(cascadeBoxes.A' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: var zigZag = new RingPairTestData(                  "Zig-zag Thing"'                  new Ring2(new[]{  					new Point2(0'0)'  					new Point2(.5'0)'  					new Point2(.5'-.5)'  					new Point2(1.5'-.5)'  					new Point2(1.5'.5)'   					new Point2(.5'.5)'   					new Point2(1'1)'   					new Point2(0'1)  				}' false)'                  new Ring2(cascadeBoxes.A' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Zig-zag Thing: holes"'                  new Ring2(zigZag.A.Reverse()' true)'                  new Ring2(cascadeBoxes.A.Reverse()' true)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Zig-zag Thing: holes"'                  new Ring2(zigZag.A.Reverse()' true)'                  new Ring2(cascadeBoxes.A.Reverse()' true)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(1' 1)'  					new Point2(0' 1)'  					new Point2(0' 0)'  					new Point2(.5' 0)'  					new Point2(1' .5)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Under Ledge"'                  new Ring2(new[]{  					new Point2(1'1)'  					new Point2(2'1)'  					new Point2(2'2)'  					new Point2(1'2)  				}' false)'                  new Ring2(new[]{  					new Point2(3'0)'  					new Point2(4'0)'  					new Point2(4'4)'  					new Point2(0'4)'  					new Point2(0'3)'  					new Point2(3'3)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Under Ledge"'                  new Ring2(new[]{  					new Point2(1'1)'  					new Point2(2'1)'  					new Point2(2'2)'  					new Point2(1'2)  				}' false)'                  new Ring2(new[]{  					new Point2(3'0)'  					new Point2(4'0)'  					new Point2(4'4)'  					new Point2(0'4)'  					new Point2(0'3)'  					new Point2(3'3)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Under Ledge"'                  new Ring2(new[]{  					new Point2(1'1)'  					new Point2(2'1)'  					new Point2(2'2)'  					new Point2(1'2)  				}' false)'                  new Ring2(new[]{  					new Point2(3'0)'  					new Point2(4'0)'  					new Point2(4'4)'  					new Point2(0'4)'  					new Point2(0'3)'  					new Point2(3'3)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Under Ledge"'                  new Ring2(new[]{  					new Point2(1'1)'  					new Point2(2'1)'  					new Point2(2'2)'  					new Point2(1'2)  				}' false)'                  new Ring2(new[]{  					new Point2(3'0)'  					new Point2(4'0)'  					new Point2(4'4)'  					new Point2(0'4)'  					new Point2(0'3)'  					new Point2(3'3)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Under Ledge"'                  new Ring2(new[]{  					new Point2(1'1)'  					new Point2(2'1)'  					new Point2(2'2)'  					new Point2(1'2)  				}' false)'                  new Ring2(new[]{  					new Point2(3'0)'  					new Point2(4'0)'  					new Point2(4'4)'  					new Point2(0'4)'  					new Point2(0'3)'  					new Point2(3'3)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Under Ledge"'                  new Ring2(new[]{  					new Point2(1'1)'  					new Point2(2'1)'  					new Point2(2'2)'  					new Point2(1'2)  				}' false)'                  new Ring2(new[]{  					new Point2(3'0)'  					new Point2(4'0)'  					new Point2(4'4)'  					new Point2(0'4)'  					new Point2(0'3)'  					new Point2(3'3)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Under Ledge"'                  new Ring2(new[]{  					new Point2(1'1)'  					new Point2(2'1)'  					new Point2(2'2)'  					new Point2(1'2)  				}' false)'                  new Ring2(new[]{  					new Point2(3'0)'  					new Point2(4'0)'  					new Point2(4'4)'  					new Point2(0'4)'  					new Point2(0'3)'  					new Point2(3'3)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Under Ledge"'                  new Ring2(new[]{  					new Point2(1'1)'  					new Point2(2'1)'  					new Point2(2'2)'  					new Point2(1'2)  				}' false)'                  new Ring2(new[]{  					new Point2(3'0)'  					new Point2(4'0)'  					new Point2(4'4)'  					new Point2(0'4)'  					new Point2(0'3)'  					new Point2(3'3)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Under Ledge"'                  new Ring2(new[]{  					new Point2(1'1)'  					new Point2(2'1)'  					new Point2(2'2)'  					new Point2(1'2)  				}' false)'                  new Ring2(new[]{  					new Point2(3'0)'  					new Point2(4'0)'  					new Point2(4'4)'  					new Point2(0'4)'  					new Point2(0'3)'  					new Point2(3'3)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Under Ledge"'                  new Ring2(new[]{  					new Point2(1'1)'  					new Point2(2'1)'  					new Point2(2'2)'  					new Point2(1'2)  				}' false)'                  new Ring2(new[]{  					new Point2(3'0)'  					new Point2(4'0)'  					new Point2(4'4)'  					new Point2(0'4)'  					new Point2(0'3)'  					new Point2(3'3)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Under Ledge"'                  new Ring2(new[]{  					new Point2(1'1)'  					new Point2(2'1)'  					new Point2(2'2)'  					new Point2(1'2)  				}' false)'                  new Ring2(new[]{  					new Point2(3'0)'  					new Point2(4'0)'  					new Point2(4'4)'  					new Point2(0'4)'  					new Point2(0'3)'  					new Point2(3'3)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Under Ledge"'                  new Ring2(new[]{  					new Point2(1'1)'  					new Point2(2'1)'  					new Point2(2'2)'  					new Point2(1'2)  				}' false)'                  new Ring2(new[]{  					new Point2(3'0)'  					new Point2(4'0)'  					new Point2(4'4)'  					new Point2(0'4)'  					new Point2(0'3)'  					new Point2(3'3)  				}' false)              ) {                  CrossingPoints = new List<Point2>(0)              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 1"'                  new Ring2(new[]{  					new Point2(0.46987951807228917'0.40367346938775517)'  					new Point2(0.44987951807228915'0.38367346938775515)'  					new Point2(0.46987951807228917'0.36367346938775513)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.47074010327022375'0.40281288418982059)  				}' false)'                  new Ring2(new[]{  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'  					new Point2(0.45160068846815832'0.38367346938775515)'  					new Point2(0.47160068846815834'0.36367346938775513)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.47074010327022375'0.40281288418982059)'  					new Point2(0.47074010327022375'0.36453405458568972)'  					new Point2(0.47160068846815834'0.36367346938775513)'  					new Point2(0.49160068846815835'0.38367346938775515)'  					new Point2(0.47160068846815834'0.40367346938775517)'      				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 2"'                  new Ring2(new[]{  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)  				}' false)'                  new Ring2(new[]{  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.45611015490533563'0.44857142857142862)'  					new Point2(0.43611015490533561'0.4285714285714286)'  					new Point2(0.45611015490533563'0.40857142857142859)'  					new Point2(0.47611015490533565'0.4285714285714286)'  					new Point2(0.4742291615441358'0.43045242193262845)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 3"'                  new Ring2(new[]{  					new Point2(0.5025817555938038	'0.51387755102040822	)'  					new Point2(0.48258175559380379	'0.4938775510204082	)'  					new Point2(0.5025817555938038	'0.47387755102040818	)'  					new Point2(0.50344234079173833	'0.47473813621834277	)'  					new Point2(0.504302925989673	'0.47387755102040818	)'  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  					new Point2(0.504302925989673	'0.51387755102040822	)'  					new Point2(0.50344234079173833	'0.51301696582247369	)  				}' false)'                  new Ring2(new[]{  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.48602409638554211	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.50516351118760761	'0.47473813621834277	)'  					new Point2(0.50602409638554213	'0.47387755102040818	)'  					new Point2(0.52602409638554215	'0.4938775510204082	)'  					new Point2(0.50602409638554213	'0.51387755102040822	)'  					new Point2(0.50516351118760761	'0.51301696582247358	)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 4"'                  new Ring2(new[]{  					new Point2(0.42578313253012046'0.44489795918367347)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44492254733218589'0.46403737398573891)  				}' false)'                  new Ring2(new[]{  					new Point2(0.46406196213425133'0.44489795918367347)'  					new Point2(0.44406196213425131'0.46489795918367349)'  					new Point2(0.42406196213425129'0.44489795918367347)'  					new Point2(0.44406196213425131'0.42489795918367346)  				}' false)              ) {                  CrossingPoints = new List<Point2> {                      new Point2(0.44492254733218589'0.46403737398573891)'  					new Point2(0.44492254733218589'0.42575854438160804)'  					new Point2(0.46406196213425133'0.44489795918367347)'  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingOperationTestUtility,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingOperationTestUtility.cs,GenerateRingPairTestData,The following statement contains a magic number: yield return new RingPairTestData(                  "Fuzzed: 5"'                  new Ring2(new[]{  					new Point2(0.32874354561101549'0.36979591836734693)'  					new Point2(0.3487435456110155'0.38979591836734695)'  					new Point2(0.32874354561101549'0.40979591836734697)'  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}' false)'                  new Ring2(new[]{  					new Point2(0.34702237521514634'0.38979591836734695)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)  				}' false)              ) {                  CrossingPoints = new List<Point2> {  					new Point2(0.3278829604130809'0.40893533316941238)'  					new Point2(0.32702237521514632'0.40979591836734697)'  					new Point2(0.3070223752151463'0.38979591836734695)'  					new Point2(0.32702237521514632'0.36979591836734693)'  					new Point2(0.3278829604130809'0.37065650356528151)  				}              };
Magic Number,Vertesaur.PolygonOperation.Test,RingFindPointCrossingsTest,D:\research\architectureSmells\repos\aarondandy_vertesaur\tests\Vertesaur.Core.PolygonOperation.Test\RingFindPointCrossingsFacts.cs,PointsAlmostEqual,The following statement contains a magic number: return d.GetMagnitudeSquared() < 0.000000000000000001;
