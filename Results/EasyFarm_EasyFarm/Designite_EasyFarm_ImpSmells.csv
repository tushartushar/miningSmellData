Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EasyFarm.Classes,ActionFilters,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\ActionFilters.cs,ValidateBuffingAction,Cyclomatic complexity of the method is 23
Complex Method,EasyFarm.Classes,UnitFilters,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\UnitFilters.cs,MobFilter,Cyclomatic complexity of the method is 19
Complex Method,EasyFarm.States,TravelState,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\TravelState.cs,Check,Cyclomatic complexity of the method is 8
Long Identifier,EasyFarm.States,TravelState,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\TravelState.cs,Run,The length of the parameter shouldKeepRunningToNextWaypoint is 31.
Long Statement,EasyFarm.Classes,SettingsManager,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\SettingsManager.cs,TryLoad,The length of the statement  "                Logger.Log(new LogEntry(LoggingEventType.Error' $"{GetType()}.{nameof(TrySave)} : Failure on de-serialize settings"' ex)); " is 122.
Long Statement,EasyFarm.Classes,UnitFilters,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\UnitFilters.cs,MobFilter,The length of the statement  "                if (!(Config.Instance.Route.Waypoints.Any(waypoint => Distance(mob' waypoint) <= Config.Instance.WanderDistance))) return false; " is 128.
Long Statement,EasyFarm.Views,ProcessSelectionView,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\ProcessSelectionView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EasyFarm;component/views/processselectionview.xaml"' System.UriKind.Relative); " is 124.
Long Statement,EasyFarm.Views,AbilitySelectionBox,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\AbilitySelectionBox.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EasyFarm;component/views/abilityselectionbox.xaml"' System.UriKind.Relative); " is 123.
Long Statement,EasyFarm.Views,BattlesView,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\BattlesView.xaml.cs,Connect,The length of the statement  "            this.Master.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.Master_OnSelectedItemChanged); " is 131.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\EasyFarm_EasyFarm\EasyFarm\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,EasyFarm.States,SummonTrustsState,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\SummonTrustsState.cs,Check,The conditional expression  "TrustNeedsDismissal(trust) || (!TrustInParty(trust) && PartyHasSpace() && !MaxTrustsReached(maxTrustPartySize))"  is complex.
Magic Number,EasyFarm.Classes,PlayerMonitor,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\PlayerMonitor.cs,Monitor,The following statement contains a magic number: while (true)              {                  if (_tokenSource.IsCancellationRequested)                  {                      _tokenSource.Token.ThrowIfCancellationRequested();                  }                    _movementTracker.RunComponent();                    TimeWaiter.Pause(100);              }
Magic Number,EasyFarm.Classes,PathRecorder,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\PathRecorder.cs,PathRecorder,The following statement contains a magic number: _recorder = new Timer(1000);
Magic Number,EasyFarm.Classes,Player,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Player.cs,Rest,The following statement contains a magic number: if (!fface.Player.Status.Equals(Status.Healing))              {                  fface.Windower.SendString(Constants.RestingOn);                  TimeWaiter.Pause(50);              }
Magic Number,EasyFarm.Classes,Player,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Player.cs,Stand,The following statement contains a magic number: if (fface.Player.Status.Equals(Status.Healing))              {                  fface.Windower.SendString(Constants.RestingOff);                  TimeWaiter.Pause(50);              }
Magic Number,EasyFarm.Classes,Player,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Player.cs,StopRunning,The following statement contains a magic number: TimeWaiter.Pause(100);
Magic Number,EasyFarm.Classes,Player,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Player.cs,SetTargetByTabbing,The following statement contains a magic number: while (target.Id != fface.Target.ID)              {                  if (stopwatch.Elapsed >= TimeSpan.FromSeconds(1))                  {                      break;                  }                    fface.Windower.SendKeyPress(Keys.TAB);                  TimeWaiter.Pause(200);              }
Magic Number,EasyFarm.Classes,LogEntries,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\LogEntries.cs,RecordLogItem,The following statement contains a magic number: if (LoggedItems.Count > 1000)              {                  LoggedItems.Remove(LoggedItems.Last());              }
Magic Number,EasyFarm.Classes,BattleAbility,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\BattleAbility.cs,AutoFill,The following statement contains a magic number: if (ability == null)              {                  AppServices.InformUser("Auto-Fill failed to find {0} in resources. "' Name);              }              else              {                  Ability = ability;                  AppServices.InformUser("Auto-Filling for {0} complete. "' Name);                    if (Ability.AbilityType == AbilityType.Weaponskill)                  {                      Ability.TpCost = 1000;                  }                    // Manually signal AbilityType that a change has occured.                  OnPropertyChanged("AbilityType");                  OnPropertyChanged("TpCost");              }
Magic Number,EasyFarm.Classes,Executor,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Executor.cs,UseTargetedActions,The following statement contains a magic number: foreach (var action in actions)              {                  MoveIntoActionRange(target' action);                  _fface.Navigator.FaceHeading(target.Position);                  Player.SetTarget(_fface' target);                    _fface.Navigator.Reset();                  TimeWaiter.Pause(100);                    if (ResourceHelper.IsSpell(action.Ability.AbilityType))                  {                      CastSpell(action);                  }                  else                  {                                          CastAbility(action);                  }                                    action.Usages++;                  action.LastCast = DateTime.Now.AddSeconds(action.Recast);                    TimeWaiter.Pause(Config.Instance.GlobalCooldown);              }
Magic Number,EasyFarm.Classes,Executor,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Executor.cs,EnsureCast,The following statement contains a magic number: var interval = startTime.AddSeconds(3);
Magic Number,EasyFarm.Classes,Executor,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Executor.cs,EnsureCast,The following statement contains a magic number: while (DateTime.Now < interval)              {                  while(Player.Instance.IsMoving)                  {                      Player.StopRunning(_fface);                  }                    if (_fface.Player.Status == Status.Healing)                  {                      Player.Stand(_fface);                  }                    if (_fface.Player.StatusEffects.Contains(StatusEffect.Chainspell))                  {                      _fface.Windower.SendString(command);                      return true;                  }                                                 if (Math.Abs(previous - _fface.Player.CastPercentEx) > .5) return true;                  _fface.Windower.SendString(command);                  TimeWaiter.Pause(500);              }
Magic Number,EasyFarm.Classes,Executor,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Executor.cs,EnsureCast,The following statement contains a magic number: while (DateTime.Now < interval)              {                  while(Player.Instance.IsMoving)                  {                      Player.StopRunning(_fface);                  }                    if (_fface.Player.Status == Status.Healing)                  {                      Player.Stand(_fface);                  }                    if (_fface.Player.StatusEffects.Contains(StatusEffect.Chainspell))                  {                      _fface.Windower.SendString(command);                      return true;                  }                                                 if (Math.Abs(previous - _fface.Player.CastPercentEx) > .5) return true;                  _fface.Windower.SendString(command);                  TimeWaiter.Pause(500);              }
Magic Number,EasyFarm.Classes,Executor,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Executor.cs,MonitorCast,The following statement contains a magic number: while (stopwatch.Elapsed.TotalSeconds < 2)              {                  if (Math.Abs(prior - _fface.Player.CastPercentEx) < .5)                  {                      if (!stopwatch.IsRunning) stopwatch.Start();                  }                  else                  {                      stopwatch.Reset();                  }                    prior = _fface.Player.CastPercentEx;                    TimeWaiter.Pause(100);              }
Magic Number,EasyFarm.Classes,Executor,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Executor.cs,MonitorCast,The following statement contains a magic number: while (stopwatch.Elapsed.TotalSeconds < 2)              {                  if (Math.Abs(prior - _fface.Player.CastPercentEx) < .5)                  {                      if (!stopwatch.IsRunning) stopwatch.Start();                  }                  else                  {                      stopwatch.Reset();                  }                    prior = _fface.Player.CastPercentEx;                    TimeWaiter.Pause(100);              }
Magic Number,EasyFarm.Classes,Executor,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Executor.cs,MonitorCast,The following statement contains a magic number: while (stopwatch.Elapsed.TotalSeconds < 2)              {                  if (Math.Abs(prior - _fface.Player.CastPercentEx) < .5)                  {                      if (!stopwatch.IsRunning) stopwatch.Start();                  }                  else                  {                      stopwatch.Reset();                  }                    prior = _fface.Player.CastPercentEx;                    TimeWaiter.Pause(100);              }
Magic Number,EasyFarm.Classes,Executor,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Executor.cs,MonitorCast,The following statement contains a magic number: return Math.Abs(prior - 100) < .5;
Magic Number,EasyFarm.Classes,Executor,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Executor.cs,MonitorCast,The following statement contains a magic number: return Math.Abs(prior - 100) < .5;
Magic Number,EasyFarm.Classes,Executor,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\Executor.cs,CastAbility,The following statement contains a magic number: TimeWaiter.Pause(100);
Magic Number,EasyFarm.Classes,UnitFilters,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\UnitFilters.cs,Distance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(waypoint.X - mob.PosX' 2) + Math.Pow(waypoint.Z - mob.PosZ' 2));
Magic Number,EasyFarm.Classes,UnitFilters,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\UnitFilters.cs,Distance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(waypoint.X - mob.PosX' 2) + Math.Pow(waypoint.Z - mob.PosZ' 2));
Magic Number,EasyFarm.Classes,SystemTray,C:\repos\EasyFarm_EasyFarm\EasyFarm\Classes\SystemTray.cs,Minimize,The following statement contains a magic number: _trayIcon.ShowBalloonTip(5' title' text' ToolTipIcon.Info);
Magic Number,EasyFarm.Logging,NLogTextFileLogger,C:\repos\EasyFarm_EasyFarm\EasyFarm\Logging\NLogTextFileLogger.cs,InitializeLoggerOnFirstCall,The following statement contains a magic number: var target = new FileTarget()              {                  CreateDirs = true'                  FileName = Path.Combine("logs"' "easyfarm.log")'                  ArchiveOldFileOnStartup = true'                  MaxArchiveFiles = 5              };
Magic Number,EasyFarm.States,PlayerMovementTracker,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\PlayerMovementTracker.cs,RunComponent,The following statement contains a magic number: if (_positionHistory.Count >= 15) _positionHistory.Dequeue();
Magic Number,EasyFarm.States,Route,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\Route.cs,GetNextPosition,The following statement contains a magic number: if (distance > 15)              {                  var closest = _positions.OrderBy(x => Distance(playerPosition' x)).FirstOrDefault();                  _position = _positions.IndexOf(closest);              }
Magic Number,EasyFarm.States,Route,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\Route.cs,Distance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(one.X - other.X' 2) + Math.Pow(one.Z - other.Z' 2));
Magic Number,EasyFarm.States,Route,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\Route.cs,Distance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(one.X - other.X' 2) + Math.Pow(one.Z - other.Z' 2));
Magic Number,EasyFarm.States,Route,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\Route.cs,IsPathUnreachable,The following statement contains a magic number: return Zone == fface.Player.Zone && IsWithinDistance(fface.Player.Position' 20);
Magic Number,EasyFarm.States,SummonTrustsState,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\SummonTrustsState.cs,PartyHasSpace,The following statement contains a magic number: for(int i = 1; i < 6; i++) {                  if (!fface.PartyMember[(byte)i].UnitPresent) slots++;              }
Magic Number,EasyFarm.States,SummonTrustsState,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\SummonTrustsState.cs,FindPartyMember,The following statement contains a magic number: for (int i = 1; i < 6; i++) {                  var p = fface.PartyMember[(byte)i];                  var comp = trust.Name;                  if (comp.Contains("(UC)") || comp.Contains("II")) {                      comp = comp.Replace(" (UC)"' "");                      comp = comp.Replace(" II"' "");                  }                  if (p.UnitPresent && p.Name == comp) {                      return p;                  }              }
Magic Number,EasyFarm.States,DeadState,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\DeadState.cs,HomePointOnDeath,The following statement contains a magic number: TimeWaiter.Pause(2000);
Magic Number,EasyFarm.States,DeadState,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\DeadState.cs,HomePointOnDeath,The following statement contains a magic number: TimeWaiter.Pause(1000);
Magic Number,EasyFarm.States,DeadState,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\DeadState.cs,HomePointOnDeath,The following statement contains a magic number: TimeWaiter.Pause(1000);
Magic Number,EasyFarm.States,ApproachState,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\ApproachState.cs,Check,The following statement contains a magic number: return Target.Distance < 8;
Magic Number,EasyFarm.States,ApproachState,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\ApproachState.cs,Run,The following statement contains a magic number: if (Config.Instance.IsEngageEnabled)              {                  // Not engaged and in range.                   if (!fface.Player.Status.Equals(Status.Fighting) && Target.Distance < 25)                  {                      // Engage the target.                       fface.Windower.SendString(Constants.AttackTarget);                  }              }
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new DeadState(fface) { Priority = 7 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new ZoneState(fface) { Priority = 7 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new SetTargetState(fface) { Priority = 7 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new SetFightingState(fface) { Priority = 7 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new FollowState(fface) { Priority = 5 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new RestState(fface) { Priority = 2 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new SummonTrustsState(fface) { Priority = 6 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new BattleState(fface) { Priority = 3 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new WeaponskillState(fface) { Priority = 2 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new PullState(fface) { Priority = 4 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new StartState(fface) { Priority = 5 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new HealingState(fface) { Priority = 2 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new EndState(fface) { Priority = 3 });
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,StopThreadQuickly,The following statement contains a magic number: return () =>              {                  if (!backgroundThread.Join(500))                  {                      backgroundThread.Interrupt();                  }              };
Magic Number,EasyFarm.States,FiniteStateMachine,C:\repos\EasyFarm_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,RunStateMachine,The following statement contains a magic number: while (true)              {                  // Sort the List' States may have updated Priorities.                  _states.Sort();                    // Find a State that says it needs to run.                  foreach (var mc in _states.Where(x => x.Enabled).ToList())                  {                      _cancellation.Token.ThrowIfCancellationRequested();                        bool isRunnable = mc.Check();                        // Run last state's exits method.                      if (_cache[mc] != isRunnable)                      {                          if (isRunnable) mc.Enter();                          else mc.Exit();                          _cache[mc] = isRunnable;                      }                        if (isRunnable)                      {                          // Run current state's run method.                          mc.Run();                      }                  }                    TimeWaiter.Pause(250);              }
Magic Number,EasyFarm.Views,AbilitySelectionBox,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\AbilitySelectionBox.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.AbilityListBox = ((System.Windows.Controls.ListBox)(target));              return;              case 2:              this.CompleteSelectionButton = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,EasyFarm.Views,BattlesView,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\BattlesView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Master = ((System.Windows.Controls.TreeView)(target));                            #line 77 "..\..\..\..\Views\BattlesView.xaml"              this.Master.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.Master_OnSelectedItemChanged);                            #line default              #line hidden              return;              case 2:              this.Details = ((System.Windows.Controls.ContentControl)(target));              return;              }
Magic Number,EasyFarm.Views,RoutesView,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\RoutesView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.StraightRoute = ((System.Windows.Controls.RadioButton)(target));              return;              case 2:              this.CircularRoute = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.BtnRecordWaypoints = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,EasyFarm.Views,RoutesView,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\RoutesView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.StraightRoute = ((System.Windows.Controls.RadioButton)(target));              return;              case 2:              this.CircularRoute = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.BtnRecordWaypoints = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,EasyFarm.Views,TargetsView,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\TargetsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BtnAddTarget = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BtnDeleteTarget = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.BtnClearTarget = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,EasyFarm.Views,TargetsView,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\TargetsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BtnAddTarget = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BtnDeleteTarget = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.BtnClearTarget = ((System.Windows.Controls.Button)(target));              return;              }
Missing Default,EasyFarm.Views,MainView,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\MainView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.MainTabControl = ((System.Windows.Controls.TabControl)(target));              return;              }
Missing Default,EasyFarm.Views,ProcessSelectionView,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\ProcessSelectionView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.LsvGameSessons = ((System.Windows.Controls.ListView)(target));              return;              }
Missing Default,EasyFarm.Views,AbilitySelectionBox,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\AbilitySelectionBox.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.AbilityListBox = ((System.Windows.Controls.ListBox)(target));              return;              case 2:              this.CompleteSelectionButton = ((System.Windows.Controls.Button)(target));              return;              }
Missing Default,EasyFarm.Views,BattlesView,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\BattlesView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Master = ((System.Windows.Controls.TreeView)(target));                            #line 77 "..\..\..\..\Views\BattlesView.xaml"              this.Master.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.Master_OnSelectedItemChanged);                            #line default              #line hidden              return;              case 2:              this.Details = ((System.Windows.Controls.ContentControl)(target));              return;              }
Missing Default,EasyFarm.Views,RoutesView,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\RoutesView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.StraightRoute = ((System.Windows.Controls.RadioButton)(target));              return;              case 2:              this.CircularRoute = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.BtnRecordWaypoints = ((System.Windows.Controls.Button)(target));              return;              }
Missing Default,EasyFarm.Views,TargetsView,C:\repos\EasyFarm_EasyFarm\EasyFarm\Views\TargetsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BtnAddTarget = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BtnDeleteTarget = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.BtnClearTarget = ((System.Windows.Controls.Button)(target));              return;              }
