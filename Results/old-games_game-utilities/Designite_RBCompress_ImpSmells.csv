Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,findMatch,Cyclomatic complexity of the method is 8
Complex Method,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,Cyclomatic complexity of the method is 11
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,readUInt32,The following statement contains a magic number: res = (UInt32)(data [pos] + (data [pos + 1] << 8) + (data [pos + 3] << 16) + (data [pos + 2] << 24));  
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,readUInt32,The following statement contains a magic number: res = (UInt32)(data [pos] + (data [pos + 1] << 8) + (data [pos + 3] << 16) + (data [pos + 2] << 24));  
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,readUInt32,The following statement contains a magic number: res = (UInt32)(data [pos] + (data [pos + 1] << 8) + (data [pos + 3] << 16) + (data [pos + 2] << 24));  
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,readUInt32,The following statement contains a magic number: res = (UInt32)(data [pos] + (data [pos + 1] << 8) + (data [pos + 3] << 16) + (data [pos + 2] << 24));  
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,readUInt32,The following statement contains a magic number: res = (UInt32)(data [pos] + (data [pos + 1] << 8) + (data [pos + 3] << 16) + (data [pos + 2] << 24));  
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeUint32,The following statement contains a magic number: data [ofs + 1] = (byte)((val >> 8) & 0xFF);  
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeUint32,The following statement contains a magic number: data [ofs + 2] = (byte)((val >> 16) & 0xFF);  
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeUint32,The following statement contains a magic number: data [ofs + 2] = (byte)((val >> 16) & 0xFF);  
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeUint32,The following statement contains a magic number: data [ofs + 3] = (byte)((val >> 24) & 0xFF);  
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeUint32,The following statement contains a magic number: data [ofs + 3] = (byte)((val >> 24) & 0xFF);  
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeUint32,The following statement contains a magic number: data.Add ((byte)((val >> 8) & 0xFF));  
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeUint32,The following statement contains a magic number: data.Add ((byte)((val >> 16) & 0xFF));  
Magic Number,RBCompress,BinHelper,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeUint32,The following statement contains a magic number: data.Add ((byte)((val >> 24) & 0xFF));  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,addMatch,The following statement contains a magic number: if (matches.Count < 0xEFE) {  	matches.Add (new Match (sz' data' ofs));  	if (matches.Count == 0x100 || matches.Count == 0x100 * 3 || matches.Count == 0x100 * 7)  		bits++;  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,addMatch,The following statement contains a magic number: if (matches.Count < 0xEFE) {  	matches.Add (new Match (sz' data' ofs));  	if (matches.Count == 0x100 || matches.Count == 0x100 * 3 || matches.Count == 0x100 * 7)  		bits++;  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,addMatch,The following statement contains a magic number: if (matches.Count == 0x100 || matches.Count == 0x100 * 3 || matches.Count == 0x100 * 7)  	bits++;  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,addMatch,The following statement contains a magic number: if (matches.Count == 0x100 || matches.Count == 0x100 * 3 || matches.Count == 0x100 * 7)  	bits++;  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,clear,The following statement contains a magic number: if (bpos != 0)  	writeBits (0' 8 - bpos);  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,clear,The following statement contains a magic number: writeBits (0' 8 - bpos);  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,clear,The following statement contains a magic number: while (exc != 0)  	writeBits (0' 8);  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,clear,The following statement contains a magic number: writeBits (0' 8);  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,clear,The following statement contains a magic number: bits = 9;  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,findMatch,The following statement contains a magic number: if (bestid == -1) {  	writeBits (data [ofs]);  	addMatch (data' ofs' 2);  	return 1;  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,findMatch,The following statement contains a magic number: addMatch (data' ofs' 2);  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeBits,The following statement contains a magic number: while (bpos >= 8) {  	res.Add ((byte)(bitbuf & 0xFF));  	exc++;  	if (exc == bits)  		exc = 0;  	bitbuf >>= 8;  	bpos -= 8;  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeBits,The following statement contains a magic number: while (bpos >= 8) {  	res.Add ((byte)(bitbuf & 0xFF));  	exc++;  	if (exc == bits)  		exc = 0;  	bitbuf >>= 8;  	bpos -= 8;  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeBits,The following statement contains a magic number: while (bpos >= 8) {  	res.Add ((byte)(bitbuf & 0xFF));  	exc++;  	if (exc == bits)  		exc = 0;  	bitbuf >>= 8;  	bpos -= 8;  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeBits,The following statement contains a magic number: bitbuf >>= 8;  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,writeBits,The following statement contains a magic number: bpos -= 8;  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: res.Add (2);  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: bits = 9;  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: addMatch (data' 0' 2);  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: while (dpos < data.Length) {  	int sz = findMatch (data' dpos);  	dpos += sz;  	if (matches.Count == 0xEFE) {  		if (sz < 2)  			nmatch++;  		else  			nmatch = 0;  		if (exc == bits - 3 || exc == bits - 4 && nmatch > 5) {  			clear ();  			nmatch = 0;  		}  	}  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: while (dpos < data.Length) {  	int sz = findMatch (data' dpos);  	dpos += sz;  	if (matches.Count == 0xEFE) {  		if (sz < 2)  			nmatch++;  		else  			nmatch = 0;  		if (exc == bits - 3 || exc == bits - 4 && nmatch > 5) {  			clear ();  			nmatch = 0;  		}  	}  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: while (dpos < data.Length) {  	int sz = findMatch (data' dpos);  	dpos += sz;  	if (matches.Count == 0xEFE) {  		if (sz < 2)  			nmatch++;  		else  			nmatch = 0;  		if (exc == bits - 3 || exc == bits - 4 && nmatch > 5) {  			clear ();  			nmatch = 0;  		}  	}  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: while (dpos < data.Length) {  	int sz = findMatch (data' dpos);  	dpos += sz;  	if (matches.Count == 0xEFE) {  		if (sz < 2)  			nmatch++;  		else  			nmatch = 0;  		if (exc == bits - 3 || exc == bits - 4 && nmatch > 5) {  			clear ();  			nmatch = 0;  		}  	}  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (matches.Count == 0xEFE) {  	if (sz < 2)  		nmatch++;  	else  		nmatch = 0;  	if (exc == bits - 3 || exc == bits - 4 && nmatch > 5) {  		clear ();  		nmatch = 0;  	}  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (matches.Count == 0xEFE) {  	if (sz < 2)  		nmatch++;  	else  		nmatch = 0;  	if (exc == bits - 3 || exc == bits - 4 && nmatch > 5) {  		clear ();  		nmatch = 0;  	}  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (matches.Count == 0xEFE) {  	if (sz < 2)  		nmatch++;  	else  		nmatch = 0;  	if (exc == bits - 3 || exc == bits - 4 && nmatch > 5) {  		clear ();  		nmatch = 0;  	}  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (matches.Count == 0xEFE) {  	if (sz < 2)  		nmatch++;  	else  		nmatch = 0;  	if (exc == bits - 3 || exc == bits - 4 && nmatch > 5) {  		clear ();  		nmatch = 0;  	}  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (sz < 2)  	nmatch++;  else  	nmatch = 0;  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (exc == bits - 3 || exc == bits - 4 && nmatch > 5) {  	clear ();  	nmatch = 0;  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (exc == bits - 3 || exc == bits - 4 && nmatch > 5) {  	clear ();  	nmatch = 0;  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (exc == bits - 3 || exc == bits - 4 && nmatch > 5) {  	clear ();  	nmatch = 0;  }  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (bpos != 0)  	writeBits (0' 8 - bpos);  
Magic Number,RBCompress,Compressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: writeBits (0' 8 - bpos);  
Magic Number,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,readBits,The following statement contains a magic number: while (bpos < bits) {  	if (dpos > data.Length)  		throw new Exception ("Not enought data");  	if (data.Length != dpos) {  		bitbuf |= data [dpos++] << bpos;  		exc++;  		if (exc == bits)  			exc = 0;  	}  	bpos += 8;  }  
Magic Number,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,readBits,The following statement contains a magic number: bpos += 8;  
Magic Number,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (data [0] != 2)  	throw new Exception ("Unknown compression type");  
Magic Number,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: dpos = 5;  
Magic Number,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: while (rpos < sz) {  	int r = readBits (bits);  	if (r < 0x100) {  		if (ofs.Count < 0x1000) {  			ofs.Add (rpos);  			cnt.Add (2);  		}  		res [rpos++] = (byte)r;  	}  	else if (r > 0x100) {  		if (r <= 0x100 + ofs.Count) {  			int ps = ofs [r - 0x100 - 1];  			int c = cnt [r - 0x100 - 1];  			if (ofs.Count < 0x1000) {  				ofs.Add (rpos);  				cnt.Add (c + 1);  			}  			for (int i = 0; i < c; i++) {  				res [rpos++] = res [ps++];  				if (rpos == res.Length)  					break;  			}  		}  		else  			throw new NotImplementedException ();  	}  	else {  		dpos += bits - exc;  		bits = 9;  		ocnt = 1;  		ofs.Clear ();  		cnt.Clear ();  		bitbuf = 0;  		bpos = 0;  		exc = 0;  	}  	if (ofs.Count >= ocnt * 0x100 && ocnt < 0x0F) {  		bits++;  		ocnt <<= 1;  		ocnt++;  	}  }  
Magic Number,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: while (rpos < sz) {  	int r = readBits (bits);  	if (r < 0x100) {  		if (ofs.Count < 0x1000) {  			ofs.Add (rpos);  			cnt.Add (2);  		}  		res [rpos++] = (byte)r;  	}  	else if (r > 0x100) {  		if (r <= 0x100 + ofs.Count) {  			int ps = ofs [r - 0x100 - 1];  			int c = cnt [r - 0x100 - 1];  			if (ofs.Count < 0x1000) {  				ofs.Add (rpos);  				cnt.Add (c + 1);  			}  			for (int i = 0; i < c; i++) {  				res [rpos++] = res [ps++];  				if (rpos == res.Length)  					break;  			}  		}  		else  			throw new NotImplementedException ();  	}  	else {  		dpos += bits - exc;  		bits = 9;  		ocnt = 1;  		ofs.Clear ();  		cnt.Clear ();  		bitbuf = 0;  		bpos = 0;  		exc = 0;  	}  	if (ofs.Count >= ocnt * 0x100 && ocnt < 0x0F) {  		bits++;  		ocnt <<= 1;  		ocnt++;  	}  }  
Magic Number,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (r < 0x100) {  	if (ofs.Count < 0x1000) {  		ofs.Add (rpos);  		cnt.Add (2);  	}  	res [rpos++] = (byte)r;  }  else if (r > 0x100) {  	if (r <= 0x100 + ofs.Count) {  		int ps = ofs [r - 0x100 - 1];  		int c = cnt [r - 0x100 - 1];  		if (ofs.Count < 0x1000) {  			ofs.Add (rpos);  			cnt.Add (c + 1);  		}  		for (int i = 0; i < c; i++) {  			res [rpos++] = res [ps++];  			if (rpos == res.Length)  				break;  		}  	}  	else  		throw new NotImplementedException ();  }  else {  	dpos += bits - exc;  	bits = 9;  	ocnt = 1;  	ofs.Clear ();  	cnt.Clear ();  	bitbuf = 0;  	bpos = 0;  	exc = 0;  }  
Magic Number,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (r < 0x100) {  	if (ofs.Count < 0x1000) {  		ofs.Add (rpos);  		cnt.Add (2);  	}  	res [rpos++] = (byte)r;  }  else if (r > 0x100) {  	if (r <= 0x100 + ofs.Count) {  		int ps = ofs [r - 0x100 - 1];  		int c = cnt [r - 0x100 - 1];  		if (ofs.Count < 0x1000) {  			ofs.Add (rpos);  			cnt.Add (c + 1);  		}  		for (int i = 0; i < c; i++) {  			res [rpos++] = res [ps++];  			if (rpos == res.Length)  				break;  		}  	}  	else  		throw new NotImplementedException ();  }  else {  	dpos += bits - exc;  	bits = 9;  	ocnt = 1;  	ofs.Clear ();  	cnt.Clear ();  	bitbuf = 0;  	bpos = 0;  	exc = 0;  }  
Magic Number,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (ofs.Count < 0x1000) {  	ofs.Add (rpos);  	cnt.Add (2);  }  
Magic Number,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: cnt.Add (2);  
Magic Number,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: if (r > 0x100) {  	if (r <= 0x100 + ofs.Count) {  		int ps = ofs [r - 0x100 - 1];  		int c = cnt [r - 0x100 - 1];  		if (ofs.Count < 0x1000) {  			ofs.Add (rpos);  			cnt.Add (c + 1);  		}  		for (int i = 0; i < c; i++) {  			res [rpos++] = res [ps++];  			if (rpos == res.Length)  				break;  		}  	}  	else  		throw new NotImplementedException ();  }  else {  	dpos += bits - exc;  	bits = 9;  	ocnt = 1;  	ofs.Clear ();  	cnt.Clear ();  	bitbuf = 0;  	bpos = 0;  	exc = 0;  }  
Magic Number,RBCompress,Decompressor,C:\repos\old-games_game-utilities\Red Baron\RBCompress\Compressor.cs,run,The following statement contains a magic number: bits = 9;  
