Implementation smell,Namespace,Class,File,Method,Description
Complex Method,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,Cyclomatic complexity of the method is 12
Complex Method,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import8bitBitmap,Cyclomatic complexity of the method is 10
Complex Method,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,process,Cyclomatic complexity of the method is 13
Complex Method,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,makeBitmap,Cyclomatic complexity of the method is 14
Complex Method,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,Cyclomatic complexity of the method is 15
Complex Method,bassru,BResourceHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,getResource,Cyclomatic complexity of the method is 11
Complex Method,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,reload,Cyclomatic complexity of the method is 25
Complex Method,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,setCharInfo,Cyclomatic complexity of the method is 8
Complex Method,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,mergeNodes,Cyclomatic complexity of the method is 12
Complex Method,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,paletteToolStripMenuItem_Click,Cyclomatic complexity of the method is 30
Complex Method,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,button8_Click,Cyclomatic complexity of the method is 38
Complex Method,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,getHuffText,Cyclomatic complexity of the method is 9
Complex Method,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,Cyclomatic complexity of the method is 11
Complex Method,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,Cyclomatic complexity of the method is 11
Complex Method,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,resizeDisk,Cyclomatic complexity of the method is 8
Complex Method,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,Cyclomatic complexity of the method is 11
Complex Method,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,Cyclomatic complexity of the method is 17
Complex Method,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getText,Cyclomatic complexity of the method is 8
Complex Method,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getCharCode,Cyclomatic complexity of the method is 9
Complex Method,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,appendText,Cyclomatic complexity of the method is 8
Complex Method,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,Cyclomatic complexity of the method is 21
Long Parameter List,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,BImage,The method has 5 parameters.
Long Parameter List,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The method has 5 parameters.
Long Parameter List,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get8bitBitmap,The method has 5 parameters.
Long Parameter List,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import8bitBitmap,The method has 5 parameters.
Long Parameter List,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,setTextInfo,The method has 5 parameters.
Long Parameter List,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,addBits,The method has 5 parameters.
Long Parameter List,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,subOfs,The method has 5 parameters.
Long Parameter List,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,appendText,The method has 8 parameters.
Long Parameter List,bassru.ResView,SequenceView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SequenceView.cs,readWaitDraw,The method has 5 parameters.
Long Statement,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get8bitBitmap,The length of the statement  "		System.Runtime.InteropServices.Marshal.Copy (data' i * bd.Width' new IntPtr (bd.Scan0.ToInt64 () + i * bd.Stride)' bd.Width); " is 125.
Long Statement,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import8bitBitmap,The length of the statement  "		System.Runtime.InteropServices.Marshal.Copy (new IntPtr (bd.Scan0.ToInt64 () + i * bd.Stride)' res' i * bd.Width' bd.Width); " is 124.
Long Statement,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The length of the statement  "	return SkyDisk.get ().importFile ((int)filenum' import8bitBitmap (filename' w' h' Config.get ().findPalette (pal)' mode)); " is 122.
Long Statement,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,export,The length of the statement  "		if (MessageBox.Show ("Sequence palette contains background color. Continue?"' "Warning"' MessageBoxButtons.YesNo) == DialogResult.No) " is 133.
Long Statement,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The length of the statement  "			System.Runtime.InteropServices.Marshal.Copy (new IntPtr (bd.Scan0.ToInt64 () + (j + i * GAME_SCREEN_HEIGHT) * bd.Stride)' pixels' 0' bd.Width); " is 143.
Long Statement,bassru,BSprites,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,export,The length of the statement  "	BImage.get8bitBitmap (hdr.width' hdr.height * hdr.n_sprites' Config.get ().findPalette (pal)' sprdata' 0).Save (filename' ImageFormat.Bmp); " is 139.
Long Statement,bassru,BSprites,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The length of the statement  "	byte[] img = BImage.import8bitBitmap (filename' hdr.width' hdr.height * hdr.n_sprites' Config.get ().findPalette (pal)' 0); " is 123.
Long Statement,bassru,BResourceHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,getResource,The length of the statement  "		return new BImage (fid' int.Parse (getAttr (node' "width"' "0"))' int.Parse (getAttr (node' "height"' "0"))' getAttr (node' "palette")' (getAttr (node' "imgmode"' "0") == "16x8" ? 1 : 0) + (getAttr (node' "halftone"' "0") == "1" ? 2 : 0)); " is 239.
Long Statement,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,setTextInfo,The length of the statement  "		if (e.Attributes ["file"].Value == file.ToString () && e.Attributes ["block"].Value == block.ToString () && e.Attributes ["N"].Value == num.ToString ()) " is 152.
Long Statement,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,setTextInfo,The length of the statement  "	else if (((old.Attributes ["mode"].Value != "ru" && ru) || (old.Attributes ["mode"].Value == "ru" && !ru)) || old.Attributes ["comment"].Value != comment) " is 154.
Long Statement,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,listView1_SelectedIndexChanged,The length of the statement  ""' fh.flags' fh.x' fh.y' fh.width' fh.height' fh.sp_size' fh.tot_size' fh.n_sprites' fh.offset_x' fh.offset_y' fh.compressed_size' fh.totalsize' fh.flagbyte); " is 158.
Long Statement,bassru,LISorter,C:\repos\old-games_game-utilities\Beneath a Steel Sky\LISorter.cs,Compare,The length of the statement  "		int i1 = int.Parse (li1' (curcol == 0 ? System.Globalization.NumberStyles.Integer : System.Globalization.NumberStyles.HexNumber)); " is 130.
Long Statement,bassru,LISorter,C:\repos\old-games_game-utilities\Beneath a Steel Sky\LISorter.cs,Compare,The length of the statement  "		int i2 = int.Parse (li2' (curcol == 0 ? System.Globalization.NumberStyles.Integer : System.Globalization.NumberStyles.HexNumber)); " is 130.
Long Statement,bassru,BScripts,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,getScript,The length of the statement  "	string res = string.Format ("//---SCRIPT {0:d}: @0x{1:X4} of {3:X4} size=0x{2:X4}"' id' scrofs [id]' sd.Length' scrdata.Length) + AsmScriptProcessor.endl; " is 154.
Long Statement,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,resizeDisk,The length of the statement  "		//                Console.WriteLine(String.Format("found {0:d} @{1:X8}->@{2:X8} size={3:X4}"' ce.id'ce.old_offset'ce.offset' ce.size)); " is 135.
Long Statement,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,resizeDisk,The length of the statement  "			//                   Console.WriteLine(String.Format("moveing {0:d} {1:X8}->{2:X8} {3:X4}"'ce.id'ce.old_offset'ce.offset'ce.size)); " is 131.
Long Statement,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,checkFormat,The length of the statement  "	return (f.BitsPerSample == wf.BitsPerSample && f.Channels == wf.Channels && f.FormatTag == wf.FormatTag && f.SamplesPerSecond == wf.SamplesPerSecond); " is 150.
Long Statement,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,findText,The length of the statement  "	throw new ApplicationException (String.Format ("Text not found {0:d} in block {1:s}."' txtid' parent.Attributes ["id"].Value)); " is 127.
Long Statement,bassru.ResView,BResourceControl,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\BResourceControl.cs,askForBadPal,The length of the statement  "	if (MessageBox.Show ("Palettes not equal.\nDo you want to stop importing?"' "Bad Palette"' MessageBoxButtons.YesNoCancel) != DialogResult.No) " is 141.
Long Statement,bassru.ResView,ImageView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ImageView.cs,repaint,The length of the statement  "		Bitmap bmp = img.getBmp ((int)numericUpDown1.Value' (int)numericUpDown2.Value' getSelectedPalette (comboBox1)' (checkBox1.Checked ? 1 : 0) + (checkBox2.Checked ? 2 : 0)); " is 170.
Long Statement,bassru.ResView,SequenceView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SequenceView.cs,makeBitmap,The length of the statement  "		g.DrawImage (rbmp' new Rectangle (0' 0' 320' BResource.GAME_SCREEN_HEIGHT)' 0' BResource.GAME_SCREEN_HEIGHT * frm' 320' BResource.GAME_SCREEN_HEIGHT' GraphicsUnit.Pixel); " is 170.
Long Statement,bassru.ResView,TextViewcs,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\TextViewcs.cs,button1_Click,The length of the statement  "	Config.get ().setTextInfo (txt.filenum' uint.Parse (comboBox1.Text)' uint.Parse (comboBox2.Text)' checkBox1.Checked' textBox3.Text); " is 132.
Complex Conditional,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,setTextInfo,The conditional expression  "((old.Attributes ["mode"].Value != "ru" && ru) || (old.Attributes ["mode"].Value == "ru" && !ru)) || old.Attributes ["comment"].Value != comment"  is complex.
Complex Conditional,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,button8_Click,The conditional expression  "nd.Name == "load" || nd.Name == "import" || nd.Name == "export" || nd.Name == "save""  is complex.
Complex Conditional,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The conditional expression  "cm != cmt || (isru && md == "en") || (!isru && md == "ru")"  is complex.
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,BPalette,The following statement contains a magic number: unused = data.Length - 256 * 3;  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,BPalette,The following statement contains a magic number: unused = data.Length - 256 * 3;  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,BPalette,The following statement contains a magic number: pal = new Color[256];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,BPalette,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	if (i < nd.ChildNodes.Count) {  		byte r = byte.Parse (nd.ChildNodes [i].Attributes ["r"].Value);  		byte g = byte.Parse (nd.ChildNodes [i].Attributes ["g"].Value);  		byte b = byte.Parse (nd.ChildNodes [i].Attributes ["b"].Value);  		pal [i] = Color.FromArgb (r' g' b);  	}  	else  		pal [i] = Color.Black;  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,BPalette,The following statement contains a magic number: pal = new Color[256];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,BPalette,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	pal [i] = Color.FromArgb (i' i' i);  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	byte r' g' b;  	r = data [i * 3];  	g = data [i * 3 + 1];  	b = data [i * 3 + 2];  	if (stdcolours && i >= 240) {  		r = stdcol [(i - 240) * 3];  		g = stdcol [(i - 240) * 3 + 1];  		b = stdcol [(i - 240) * 3 + 2];  	}  	if (!unconverted) {  		r = (byte)((r << 2) + (r >> 4));  		g = (byte)((g << 2) + (g >> 4));  		b = (byte)((b << 2) + (b >> 4));  	}  	if (halftone) {  		r = (byte)(r >> 1);  		g = (byte)(g >> 1);  		b = (byte)(b >> 1);  	}  	p [i] = Color.FromArgb (r' g' b);  	//c=(c*4)+(c/8)  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: r = data [i * 3];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: g = data [i * 3 + 1];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: b = data [i * 3 + 2];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: b = data [i * 3 + 2];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (stdcolours && i >= 240) {  	r = stdcol [(i - 240) * 3];  	g = stdcol [(i - 240) * 3 + 1];  	b = stdcol [(i - 240) * 3 + 2];  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (stdcolours && i >= 240) {  	r = stdcol [(i - 240) * 3];  	g = stdcol [(i - 240) * 3 + 1];  	b = stdcol [(i - 240) * 3 + 2];  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (stdcolours && i >= 240) {  	r = stdcol [(i - 240) * 3];  	g = stdcol [(i - 240) * 3 + 1];  	b = stdcol [(i - 240) * 3 + 2];  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (stdcolours && i >= 240) {  	r = stdcol [(i - 240) * 3];  	g = stdcol [(i - 240) * 3 + 1];  	b = stdcol [(i - 240) * 3 + 2];  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (stdcolours && i >= 240) {  	r = stdcol [(i - 240) * 3];  	g = stdcol [(i - 240) * 3 + 1];  	b = stdcol [(i - 240) * 3 + 2];  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (stdcolours && i >= 240) {  	r = stdcol [(i - 240) * 3];  	g = stdcol [(i - 240) * 3 + 1];  	b = stdcol [(i - 240) * 3 + 2];  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (stdcolours && i >= 240) {  	r = stdcol [(i - 240) * 3];  	g = stdcol [(i - 240) * 3 + 1];  	b = stdcol [(i - 240) * 3 + 2];  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (stdcolours && i >= 240) {  	r = stdcol [(i - 240) * 3];  	g = stdcol [(i - 240) * 3 + 1];  	b = stdcol [(i - 240) * 3 + 2];  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: r = stdcol [(i - 240) * 3];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: r = stdcol [(i - 240) * 3];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: g = stdcol [(i - 240) * 3 + 1];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: g = stdcol [(i - 240) * 3 + 1];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: b = stdcol [(i - 240) * 3 + 2];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: b = stdcol [(i - 240) * 3 + 2];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: b = stdcol [(i - 240) * 3 + 2];  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (!unconverted) {  	r = (byte)((r << 2) + (r >> 4));  	g = (byte)((g << 2) + (g >> 4));  	b = (byte)((b << 2) + (b >> 4));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (!unconverted) {  	r = (byte)((r << 2) + (r >> 4));  	g = (byte)((g << 2) + (g >> 4));  	b = (byte)((b << 2) + (b >> 4));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (!unconverted) {  	r = (byte)((r << 2) + (r >> 4));  	g = (byte)((g << 2) + (g >> 4));  	b = (byte)((b << 2) + (b >> 4));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (!unconverted) {  	r = (byte)((r << 2) + (r >> 4));  	g = (byte)((g << 2) + (g >> 4));  	b = (byte)((b << 2) + (b >> 4));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (!unconverted) {  	r = (byte)((r << 2) + (r >> 4));  	g = (byte)((g << 2) + (g >> 4));  	b = (byte)((b << 2) + (b >> 4));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: if (!unconverted) {  	r = (byte)((r << 2) + (r >> 4));  	g = (byte)((g << 2) + (g >> 4));  	b = (byte)((b << 2) + (b >> 4));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: r = (byte)((r << 2) + (r >> 4));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: r = (byte)((r << 2) + (r >> 4));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: g = (byte)((g << 2) + (g >> 4));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: g = (byte)((g << 2) + (g >> 4));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: b = (byte)((b << 2) + (b >> 4));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,loadPal,The following statement contains a magic number: b = (byte)((b << 2) + (b >> 4));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,export,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	XmlElement el = (XmlElement)doc.DocumentElement.AppendChild (doc.CreateElement ("color"));  	el.Attributes.Append (doc.CreateAttribute ("id")).Value = i.ToString ();  	el.Attributes.Append (doc.CreateAttribute ("r")).Value = pl [i].R.ToString ();  	el.Attributes.Append (doc.CreateAttribute ("g")).Value = pl [i].G.ToString ();  	el.Attributes.Append (doc.CreateAttribute ("b")).Value = pl [i].B.ToString ();  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: Array.Copy (data' buf' 256 * 3);  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: Array.Copy (data' buf' 256 * 3);  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: foreach (XmlNode nd in doc.DocumentElement.ChildNodes)  	if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  		int id = int.Parse (nd.Attributes ["id"].Value);  		byte c = byte.Parse (nd.Attributes ["r"].Value);  		buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["g"].Value);  		buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["b"].Value);  		buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  	}  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: foreach (XmlNode nd in doc.DocumentElement.ChildNodes)  	if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  		int id = int.Parse (nd.Attributes ["id"].Value);  		byte c = byte.Parse (nd.Attributes ["r"].Value);  		buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["g"].Value);  		buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["b"].Value);  		buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  	}  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: foreach (XmlNode nd in doc.DocumentElement.ChildNodes)  	if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  		int id = int.Parse (nd.Attributes ["id"].Value);  		byte c = byte.Parse (nd.Attributes ["r"].Value);  		buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["g"].Value);  		buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["b"].Value);  		buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  	}  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: foreach (XmlNode nd in doc.DocumentElement.ChildNodes)  	if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  		int id = int.Parse (nd.Attributes ["id"].Value);  		byte c = byte.Parse (nd.Attributes ["r"].Value);  		buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["g"].Value);  		buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["b"].Value);  		buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  	}  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: foreach (XmlNode nd in doc.DocumentElement.ChildNodes)  	if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  		int id = int.Parse (nd.Attributes ["id"].Value);  		byte c = byte.Parse (nd.Attributes ["r"].Value);  		buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["g"].Value);  		buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["b"].Value);  		buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  	}  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: foreach (XmlNode nd in doc.DocumentElement.ChildNodes)  	if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  		int id = int.Parse (nd.Attributes ["id"].Value);  		byte c = byte.Parse (nd.Attributes ["r"].Value);  		buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["g"].Value);  		buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["b"].Value);  		buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  	}  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: foreach (XmlNode nd in doc.DocumentElement.ChildNodes)  	if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  		int id = int.Parse (nd.Attributes ["id"].Value);  		byte c = byte.Parse (nd.Attributes ["r"].Value);  		buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["g"].Value);  		buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["b"].Value);  		buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  	}  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: foreach (XmlNode nd in doc.DocumentElement.ChildNodes)  	if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  		int id = int.Parse (nd.Attributes ["id"].Value);  		byte c = byte.Parse (nd.Attributes ["r"].Value);  		buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["g"].Value);  		buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["b"].Value);  		buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  	}  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: foreach (XmlNode nd in doc.DocumentElement.ChildNodes)  	if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  		int id = int.Parse (nd.Attributes ["id"].Value);  		byte c = byte.Parse (nd.Attributes ["r"].Value);  		buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["g"].Value);  		buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["b"].Value);  		buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  	}  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: foreach (XmlNode nd in doc.DocumentElement.ChildNodes)  	if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  		int id = int.Parse (nd.Attributes ["id"].Value);  		byte c = byte.Parse (nd.Attributes ["r"].Value);  		buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["g"].Value);  		buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  		c = byte.Parse (nd.Attributes ["b"].Value);  		buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  	}  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  	int id = int.Parse (nd.Attributes ["id"].Value);  	byte c = byte.Parse (nd.Attributes ["r"].Value);  	buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["g"].Value);  	buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["b"].Value);  	buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  	int id = int.Parse (nd.Attributes ["id"].Value);  	byte c = byte.Parse (nd.Attributes ["r"].Value);  	buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["g"].Value);  	buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["b"].Value);  	buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  	int id = int.Parse (nd.Attributes ["id"].Value);  	byte c = byte.Parse (nd.Attributes ["r"].Value);  	buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["g"].Value);  	buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["b"].Value);  	buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  	int id = int.Parse (nd.Attributes ["id"].Value);  	byte c = byte.Parse (nd.Attributes ["r"].Value);  	buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["g"].Value);  	buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["b"].Value);  	buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  	int id = int.Parse (nd.Attributes ["id"].Value);  	byte c = byte.Parse (nd.Attributes ["r"].Value);  	buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["g"].Value);  	buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["b"].Value);  	buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  	int id = int.Parse (nd.Attributes ["id"].Value);  	byte c = byte.Parse (nd.Attributes ["r"].Value);  	buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["g"].Value);  	buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["b"].Value);  	buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  	int id = int.Parse (nd.Attributes ["id"].Value);  	byte c = byte.Parse (nd.Attributes ["r"].Value);  	buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["g"].Value);  	buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["b"].Value);  	buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  	int id = int.Parse (nd.Attributes ["id"].Value);  	byte c = byte.Parse (nd.Attributes ["r"].Value);  	buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["g"].Value);  	buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["b"].Value);  	buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  	int id = int.Parse (nd.Attributes ["id"].Value);  	byte c = byte.Parse (nd.Attributes ["r"].Value);  	buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["g"].Value);  	buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["b"].Value);  	buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: if (nd.NodeType == XmlNodeType.Element && nd.Name == "color") {  	int id = int.Parse (nd.Attributes ["id"].Value);  	byte c = byte.Parse (nd.Attributes ["r"].Value);  	buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["g"].Value);  	buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  	c = byte.Parse (nd.Attributes ["b"].Value);  	buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  }  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: buf [id * 3] = (byte)(((c << 4) & 0x03) | (c >> 2));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: buf [id * 3 + 1] = (byte)(((c << 4) & 0x03) | (c >> 2));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  
Magic Number,bassru,BPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: buf [id * 3 + 2] = (byte)(((c << 4) & 0x03) | (c >> 2));  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,BImage,The following statement contains a magic number: if ((mode & 1) != 0)  	unused = imgData.Length - w * h * 8 * 16;  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,BImage,The following statement contains a magic number: if ((mode & 1) != 0)  	unused = imgData.Length - w * h * 8 * 16;  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,BImage,The following statement contains a magic number: unused = imgData.Length - w * h * 8 * 16;  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,BImage,The following statement contains a magic number: unused = imgData.Length - w * h * 8 * 16;  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: width *= (mode == 0 ? 1 : 16);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: height *= (mode == 0 ? 1 : 8);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: if ((mode & 1) != 1) {  	for (int i = 0; i < height; i++)  		for (int j = 0; j < width; j++) {  			int idx = i * width + j;  			if (data.Length > idx)  				bmp.SetPixel (j' i' cls [data [idx]]);  		}  }  else {  	for (int k = 0; k < height / 8; k++) {  		for (int m = 0; m < width / 16; m++) {  			for (int i = 0; i < 8; i++)  				for (int j = 0; j < 16; j++) {  					int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  					if (data.Length > idx)  						bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  				}  		}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: if ((mode & 1) != 1) {  	for (int i = 0; i < height; i++)  		for (int j = 0; j < width; j++) {  			int idx = i * width + j;  			if (data.Length > idx)  				bmp.SetPixel (j' i' cls [data [idx]]);  		}  }  else {  	for (int k = 0; k < height / 8; k++) {  		for (int m = 0; m < width / 16; m++) {  			for (int i = 0; i < 8; i++)  				for (int j = 0; j < 16; j++) {  					int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  					if (data.Length > idx)  						bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  				}  		}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: if ((mode & 1) != 1) {  	for (int i = 0; i < height; i++)  		for (int j = 0; j < width; j++) {  			int idx = i * width + j;  			if (data.Length > idx)  				bmp.SetPixel (j' i' cls [data [idx]]);  		}  }  else {  	for (int k = 0; k < height / 8; k++) {  		for (int m = 0; m < width / 16; m++) {  			for (int i = 0; i < 8; i++)  				for (int j = 0; j < 16; j++) {  					int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  					if (data.Length > idx)  						bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  				}  		}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: if ((mode & 1) != 1) {  	for (int i = 0; i < height; i++)  		for (int j = 0; j < width; j++) {  			int idx = i * width + j;  			if (data.Length > idx)  				bmp.SetPixel (j' i' cls [data [idx]]);  		}  }  else {  	for (int k = 0; k < height / 8; k++) {  		for (int m = 0; m < width / 16; m++) {  			for (int i = 0; i < 8; i++)  				for (int j = 0; j < 16; j++) {  					int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  					if (data.Length > idx)  						bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  				}  		}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: if ((mode & 1) != 1) {  	for (int i = 0; i < height; i++)  		for (int j = 0; j < width; j++) {  			int idx = i * width + j;  			if (data.Length > idx)  				bmp.SetPixel (j' i' cls [data [idx]]);  		}  }  else {  	for (int k = 0; k < height / 8; k++) {  		for (int m = 0; m < width / 16; m++) {  			for (int i = 0; i < 8; i++)  				for (int j = 0; j < 16; j++) {  					int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  					if (data.Length > idx)  						bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  				}  		}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: if ((mode & 1) != 1) {  	for (int i = 0; i < height; i++)  		for (int j = 0; j < width; j++) {  			int idx = i * width + j;  			if (data.Length > idx)  				bmp.SetPixel (j' i' cls [data [idx]]);  		}  }  else {  	for (int k = 0; k < height / 8; k++) {  		for (int m = 0; m < width / 16; m++) {  			for (int i = 0; i < 8; i++)  				for (int j = 0; j < 16; j++) {  					int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  					if (data.Length > idx)  						bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  				}  		}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: if ((mode & 1) != 1) {  	for (int i = 0; i < height; i++)  		for (int j = 0; j < width; j++) {  			int idx = i * width + j;  			if (data.Length > idx)  				bmp.SetPixel (j' i' cls [data [idx]]);  		}  }  else {  	for (int k = 0; k < height / 8; k++) {  		for (int m = 0; m < width / 16; m++) {  			for (int i = 0; i < 8; i++)  				for (int j = 0; j < 16; j++) {  					int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  					if (data.Length > idx)  						bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  				}  		}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: if ((mode & 1) != 1) {  	for (int i = 0; i < height; i++)  		for (int j = 0; j < width; j++) {  			int idx = i * width + j;  			if (data.Length > idx)  				bmp.SetPixel (j' i' cls [data [idx]]);  		}  }  else {  	for (int k = 0; k < height / 8; k++) {  		for (int m = 0; m < width / 16; m++) {  			for (int i = 0; i < 8; i++)  				for (int j = 0; j < 16; j++) {  					int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  					if (data.Length > idx)  						bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  				}  		}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: if ((mode & 1) != 1) {  	for (int i = 0; i < height; i++)  		for (int j = 0; j < width; j++) {  			int idx = i * width + j;  			if (data.Length > idx)  				bmp.SetPixel (j' i' cls [data [idx]]);  		}  }  else {  	for (int k = 0; k < height / 8; k++) {  		for (int m = 0; m < width / 16; m++) {  			for (int i = 0; i < 8; i++)  				for (int j = 0; j < 16; j++) {  					int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  					if (data.Length > idx)  						bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  				}  		}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: if ((mode & 1) != 1) {  	for (int i = 0; i < height; i++)  		for (int j = 0; j < width; j++) {  			int idx = i * width + j;  			if (data.Length > idx)  				bmp.SetPixel (j' i' cls [data [idx]]);  		}  }  else {  	for (int k = 0; k < height / 8; k++) {  		for (int m = 0; m < width / 16; m++) {  			for (int i = 0; i < 8; i++)  				for (int j = 0; j < 16; j++) {  					int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  					if (data.Length > idx)  						bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  				}  		}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int k = 0; k < height / 8; k++) {  	for (int m = 0; m < width / 16; m++) {  		for (int i = 0; i < 8; i++)  			for (int j = 0; j < 16; j++) {  				int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  				if (data.Length > idx)  					bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  			}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int k = 0; k < height / 8; k++) {  	for (int m = 0; m < width / 16; m++) {  		for (int i = 0; i < 8; i++)  			for (int j = 0; j < 16; j++) {  				int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  				if (data.Length > idx)  					bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  			}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int k = 0; k < height / 8; k++) {  	for (int m = 0; m < width / 16; m++) {  		for (int i = 0; i < 8; i++)  			for (int j = 0; j < 16; j++) {  				int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  				if (data.Length > idx)  					bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  			}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int k = 0; k < height / 8; k++) {  	for (int m = 0; m < width / 16; m++) {  		for (int i = 0; i < 8; i++)  			for (int j = 0; j < 16; j++) {  				int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  				if (data.Length > idx)  					bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  			}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int k = 0; k < height / 8; k++) {  	for (int m = 0; m < width / 16; m++) {  		for (int i = 0; i < 8; i++)  			for (int j = 0; j < 16; j++) {  				int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  				if (data.Length > idx)  					bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  			}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int k = 0; k < height / 8; k++) {  	for (int m = 0; m < width / 16; m++) {  		for (int i = 0; i < 8; i++)  			for (int j = 0; j < 16; j++) {  				int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  				if (data.Length > idx)  					bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  			}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int k = 0; k < height / 8; k++) {  	for (int m = 0; m < width / 16; m++) {  		for (int i = 0; i < 8; i++)  			for (int j = 0; j < 16; j++) {  				int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  				if (data.Length > idx)  					bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  			}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int k = 0; k < height / 8; k++) {  	for (int m = 0; m < width / 16; m++) {  		for (int i = 0; i < 8; i++)  			for (int j = 0; j < 16; j++) {  				int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  				if (data.Length > idx)  					bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  			}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int k = 0; k < height / 8; k++) {  	for (int m = 0; m < width / 16; m++) {  		for (int i = 0; i < 8; i++)  			for (int j = 0; j < 16; j++) {  				int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  				if (data.Length > idx)  					bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  			}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int k = 0; k < height / 8; k++) {  	for (int m = 0; m < width / 16; m++) {  		for (int i = 0; i < 8; i++)  			for (int j = 0; j < 16; j++) {  				int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  				if (data.Length > idx)  					bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  			}  	}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int m = 0; m < width / 16; m++) {  	for (int i = 0; i < 8; i++)  		for (int j = 0; j < 16; j++) {  			int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  			if (data.Length > idx)  				bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  		}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int m = 0; m < width / 16; m++) {  	for (int i = 0; i < 8; i++)  		for (int j = 0; j < 16; j++) {  			int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  			if (data.Length > idx)  				bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  		}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int m = 0; m < width / 16; m++) {  	for (int i = 0; i < 8; i++)  		for (int j = 0; j < 16; j++) {  			int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  			if (data.Length > idx)  				bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  		}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int m = 0; m < width / 16; m++) {  	for (int i = 0; i < 8; i++)  		for (int j = 0; j < 16; j++) {  			int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  			if (data.Length > idx)  				bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  		}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int m = 0; m < width / 16; m++) {  	for (int i = 0; i < 8; i++)  		for (int j = 0; j < 16; j++) {  			int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  			if (data.Length > idx)  				bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  		}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int m = 0; m < width / 16; m++) {  	for (int i = 0; i < 8; i++)  		for (int j = 0; j < 16; j++) {  			int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  			if (data.Length > idx)  				bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  		}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int m = 0; m < width / 16; m++) {  	for (int i = 0; i < 8; i++)  		for (int j = 0; j < 16; j++) {  			int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  			if (data.Length > idx)  				bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  		}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int m = 0; m < width / 16; m++) {  	for (int i = 0; i < 8; i++)  		for (int j = 0; j < 16; j++) {  			int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  			if (data.Length > idx)  				bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  		}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int m = 0; m < width / 16; m++) {  	for (int i = 0; i < 8; i++)  		for (int j = 0; j < 16; j++) {  			int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  			if (data.Length > idx)  				bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  		}  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	for (int j = 0; j < 16; j++) {  		int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  		if (data.Length > idx)  			bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	for (int j = 0; j < 16; j++) {  		int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  		if (data.Length > idx)  			bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	for (int j = 0; j < 16; j++) {  		int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  		if (data.Length > idx)  			bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	for (int j = 0; j < 16; j++) {  		int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  		if (data.Length > idx)  			bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	for (int j = 0; j < 16; j++) {  		int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  		if (data.Length > idx)  			bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	for (int j = 0; j < 16; j++) {  		int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  		if (data.Length > idx)  			bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	for (int j = 0; j < 16; j++) {  		int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  		if (data.Length > idx)  			bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	for (int j = 0; j < 16; j++) {  		int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  		if (data.Length > idx)  			bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int j = 0; j < 16; j++) {  	int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  	if (data.Length > idx)  		bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int j = 0; j < 16; j++) {  	int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  	if (data.Length > idx)  		bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int j = 0; j < 16; j++) {  	int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  	if (data.Length > idx)  		bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int j = 0; j < 16; j++) {  	int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  	if (data.Length > idx)  		bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int j = 0; j < 16; j++) {  	int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  	if (data.Length > idx)  		bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int j = 0; j < 16; j++) {  	int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  	if (data.Length > idx)  		bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: for (int j = 0; j < 16; j++) {  	int idx = (k * width / 16 + m) * 8 * 16 + i * 16 + j;  	if (data.Length > idx)  		bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: if (data.Length > idx)  	bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: if (data.Length > idx)  	bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get32bitBitmap,The following statement contains a magic number: bmp.SetPixel (m * 16 + j' k * 8 + i' cls [data [idx]]);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int i = 0; i < height; i++)  	for (int k = 0; k < 8; k++)  		for (int j = 0; j < width; j++) {  			Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  			pos += 16;  		}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int i = 0; i < height; i++)  	for (int k = 0; k < 8; k++)  		for (int j = 0; j < width; j++) {  			Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  			pos += 16;  		}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int i = 0; i < height; i++)  	for (int k = 0; k < 8; k++)  		for (int j = 0; j < width; j++) {  			Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  			pos += 16;  		}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int i = 0; i < height; i++)  	for (int k = 0; k < 8; k++)  		for (int j = 0; j < width; j++) {  			Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  			pos += 16;  		}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int i = 0; i < height; i++)  	for (int k = 0; k < 8; k++)  		for (int j = 0; j < width; j++) {  			Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  			pos += 16;  		}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int i = 0; i < height; i++)  	for (int k = 0; k < 8; k++)  		for (int j = 0; j < width; j++) {  			Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  			pos += 16;  		}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int k = 0; k < 8; k++)  	for (int j = 0; j < width; j++) {  		Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  		pos += 16;  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int k = 0; k < 8; k++)  	for (int j = 0; j < width; j++) {  		Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  		pos += 16;  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int k = 0; k < 8; k++)  	for (int j = 0; j < width; j++) {  		Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  		pos += 16;  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int k = 0; k < 8; k++)  	for (int j = 0; j < width; j++) {  		Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  		pos += 16;  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int k = 0; k < 8; k++)  	for (int j = 0; j < width; j++) {  		Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  		pos += 16;  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int k = 0; k < 8; k++)  	for (int j = 0; j < width; j++) {  		Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  		pos += 16;  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int j = 0; j < width; j++) {  	Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  	pos += 16;  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int j = 0; j < width; j++) {  	Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  	pos += 16;  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int j = 0; j < width; j++) {  	Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  	pos += 16;  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int j = 0; j < width; j++) {  	Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  	pos += 16;  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: for (int j = 0; j < width; j++) {  	Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  	pos += 16;  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: Array.Copy (data' (i * width + j) * 8 * 16 + k * 16' res' pos' 16);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode1to0,The following statement contains a magic number: pos += 16;  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int i = 0; i < height; i++)  	for (int k = 0; k < 8; k++)  		for (int j = 0; j < width; j++) {  			Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  			pos += 16;  		}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int i = 0; i < height; i++)  	for (int k = 0; k < 8; k++)  		for (int j = 0; j < width; j++) {  			Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  			pos += 16;  		}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int i = 0; i < height; i++)  	for (int k = 0; k < 8; k++)  		for (int j = 0; j < width; j++) {  			Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  			pos += 16;  		}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int i = 0; i < height; i++)  	for (int k = 0; k < 8; k++)  		for (int j = 0; j < width; j++) {  			Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  			pos += 16;  		}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int i = 0; i < height; i++)  	for (int k = 0; k < 8; k++)  		for (int j = 0; j < width; j++) {  			Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  			pos += 16;  		}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int i = 0; i < height; i++)  	for (int k = 0; k < 8; k++)  		for (int j = 0; j < width; j++) {  			Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  			pos += 16;  		}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int k = 0; k < 8; k++)  	for (int j = 0; j < width; j++) {  		Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  		pos += 16;  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int k = 0; k < 8; k++)  	for (int j = 0; j < width; j++) {  		Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  		pos += 16;  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int k = 0; k < 8; k++)  	for (int j = 0; j < width; j++) {  		Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  		pos += 16;  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int k = 0; k < 8; k++)  	for (int j = 0; j < width; j++) {  		Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  		pos += 16;  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int k = 0; k < 8; k++)  	for (int j = 0; j < width; j++) {  		Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  		pos += 16;  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int k = 0; k < 8; k++)  	for (int j = 0; j < width; j++) {  		Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  		pos += 16;  	}  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int j = 0; j < width; j++) {  	Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  	pos += 16;  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int j = 0; j < width; j++) {  	Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  	pos += 16;  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int j = 0; j < width; j++) {  	Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  	pos += 16;  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int j = 0; j < width; j++) {  	Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  	pos += 16;  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: for (int j = 0; j < width; j++) {  	Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  	pos += 16;  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: Array.Copy (data' pos' res' (i * width + j) * 8 * 16 + k * 16' 16);  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,switchMode0to1,The following statement contains a magic number: pos += 16;  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,get8bitBitmap,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	tmppal.Entries [i] = cls [i];  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import8bitBitmap,The following statement contains a magic number: if ((mode & 1) == 1) {  	width *= 16;  	height *= 8;  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import8bitBitmap,The following statement contains a magic number: if ((mode & 1) == 1) {  	width *= 16;  	height *= 8;  }  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import8bitBitmap,The following statement contains a magic number: width *= 16;  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import8bitBitmap,The following statement contains a magic number: height *= 8;  
Magic Number,bassru,BImage,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import8bitBitmap,The following statement contains a magic number: for (int i = 0; i < 256 && md == 0; i++)  	if (bmp.Palette.Entries [i] != cls [i])  		md = ResView.BResourceControl.askForBadPal ();  
Magic Number,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,process,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	ucolors [i] = false;  
Magic Number,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,process,The following statement contains a magic number: for (int i = 255; i >= 0 && ucolor == -1; i--) {  	if (!ucolors [i])  		ucolor = i;  }  
Magic Number,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,putPixel,The following statement contains a magic number: y += pos / 320;  
Magic Number,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,putPixel,The following statement contains a magic number: if (x == 319) {  	System.Runtime.InteropServices.Marshal.Copy (pixels' 0' new IntPtr (bd.Scan0.ToInt64 () + y * bd.Stride)' bd.Width);  }  
Magic Number,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,makeBitmap,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	if (i == ucolor)  		p.Entries [i] = bgColor;  	else  		p.Entries [i] = pal.getPal () [i];  
Magic Number,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: if (bmp.Width != 320 || bmp.Height != GAME_SCREEN_HEIGHT * screenCnt)  	throw new ApplicationException ("Bad bmp size");  
Magic Number,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: for (int i = 255; i >= 0 && ucol == -1; i--)  	if (p.Entries [i].ToArgb () == bgColor.ToArgb ())  		ucol = i;  
Magic Number,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: for (int i = 0; i < screenCnt; i++) {  	bool empty = true;  	byte cnt = 0;  	int cntpos = 0;  	for (int j = 0; j < GAME_SCREEN_HEIGHT; j++) {  		System.Runtime.InteropServices.Marshal.Copy (new IntPtr (bd.Scan0.ToInt64 () + (j + i * GAME_SCREEN_HEIGHT) * bd.Stride)' pixels' 0' bd.Width);  		for (int k = 0; k < 320; k++) {  			byte c = pixels [k];  			if (empty) {  				if (c == ucol) {  					cnt++;  					if (cnt == 0xFF) {  						data.Add (cnt);  						cnt = 0;  					}  				}  				else {  					data.Add (cnt);  					cnt = 1;  					cntpos = data.Count;  					data.Add (cnt);  					data.Add (c);  					empty = false;  				}  			}  			else {  				if (c != ucol) {  					cnt++;  					data.Add (c);  					if (cnt == 0xFF) {  						data [cntpos] = cnt;  						cnt = 0;  						cntpos = data.Count;  						data.Add (cnt);  					}  				}  				else {  					data [cntpos] = cnt;  					cnt = 1;  					empty = true;  				}  			}  		}  	}  	if (empty) {  		data.Add (cnt);  		data.Add (0);  	}  	else {  		data [cntpos] = cnt;  	}  }  
Magic Number,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: for (int j = 0; j < GAME_SCREEN_HEIGHT; j++) {  	System.Runtime.InteropServices.Marshal.Copy (new IntPtr (bd.Scan0.ToInt64 () + (j + i * GAME_SCREEN_HEIGHT) * bd.Stride)' pixels' 0' bd.Width);  	for (int k = 0; k < 320; k++) {  		byte c = pixels [k];  		if (empty) {  			if (c == ucol) {  				cnt++;  				if (cnt == 0xFF) {  					data.Add (cnt);  					cnt = 0;  				}  			}  			else {  				data.Add (cnt);  				cnt = 1;  				cntpos = data.Count;  				data.Add (cnt);  				data.Add (c);  				empty = false;  			}  		}  		else {  			if (c != ucol) {  				cnt++;  				data.Add (c);  				if (cnt == 0xFF) {  					data [cntpos] = cnt;  					cnt = 0;  					cntpos = data.Count;  					data.Add (cnt);  				}  			}  			else {  				data [cntpos] = cnt;  				cnt = 1;  				empty = true;  			}  		}  	}  }  
Magic Number,bassru,BSequence,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,import,The following statement contains a magic number: for (int k = 0; k < 320; k++) {  	byte c = pixels [k];  	if (empty) {  		if (c == ucol) {  			cnt++;  			if (cnt == 0xFF) {  				data.Add (cnt);  				cnt = 0;  			}  		}  		else {  			data.Add (cnt);  			cnt = 1;  			cntpos = data.Count;  			data.Add (cnt);  			data.Add (c);  			empty = false;  		}  	}  	else {  		if (c != ucol) {  			cnt++;  			data.Add (c);  			if (cnt == 0xFF) {  				data [cntpos] = cnt;  				cnt = 0;  				cntpos = data.Count;  				data.Add (cnt);  			}  		}  		else {  			data [cntpos] = cnt;  			cnt = 1;  			empty = true;  		}  	}  }  
Magic Number,bassru,BResourceHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,getResource,The following statement contains a magic number: switch (node.Attributes ["type"].Value) {  case "palette":  	return new BPalette (fid' getAttr (node' "name"' "unnamed"));  case "image":  	return new BImage (fid' int.Parse (getAttr (node' "width"' "0"))' int.Parse (getAttr (node' "height"' "0"))' getAttr (node' "palette")' (getAttr (node' "imgmode"' "0") == "16x8" ? 1 : 0) + (getAttr (node' "halftone"' "0") == "1" ? 2 : 0));  case "sequence":  	return new BSequence (fid' getAttr (node' "palette")' getAttr (node' "bg"' "aqua"));  case "sprites":  	return new BSprites (fid' getAttr (node' "palette"));  case "charset":  	return new BCharset (fid' int.Parse (getAttr (node' "height"' "1"))' int.Parse (getAttr (node' "spacing"' "0")));  case "text":  	return new BText (fid);  case "script":  	return new BScripts (fid);  case "music":  	return new BMusic (fid);  case "sound":  	return new BSound (fid);  case "speech":  	return new BSpeech (fid);  default:  	return new BResource (fid);  }  
Magic Number,bassru,BResourceHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\BResource.cs,getResource,The following statement contains a magic number: return new BImage (fid' int.Parse (getAttr (node' "width"' "0"))' int.Parse (getAttr (node' "height"' "0"))' getAttr (node' "palette")' (getAttr (node' "imgmode"' "0") == "16x8" ? 1 : 0) + (getAttr (node' "halftone"' "0") == "1" ? 2 : 0));  
Magic Number,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,Config,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	engtxt [i] = null;  
Magic Number,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,saveEngTextFile,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	br.Write (ofs);  
Magic Number,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,saveEngTextFile,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	byte[] data = SkyDisk.get ().readFile (60600 + i);  	ofs = (uint)br.BaseStream.Position;  	uint sz = (uint)data.Length;  	br.BaseStream.Position = (i * 8);  	br.Write (ofs);  	br.Write (sz);  	br.BaseStream.Position = ofs;  	br.Write (data);  }  
Magic Number,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,saveEngTextFile,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	byte[] data = SkyDisk.get ().readFile (60600 + i);  	ofs = (uint)br.BaseStream.Position;  	uint sz = (uint)data.Length;  	br.BaseStream.Position = (i * 8);  	br.Write (ofs);  	br.Write (sz);  	br.BaseStream.Position = ofs;  	br.Write (data);  }  
Magic Number,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,saveEngTextFile,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	byte[] data = SkyDisk.get ().readFile (60600 + i);  	ofs = (uint)br.BaseStream.Position;  	uint sz = (uint)data.Length;  	br.BaseStream.Position = (i * 8);  	br.Write (ofs);  	br.Write (sz);  	br.BaseStream.Position = ofs;  	br.Write (data);  }  
Magic Number,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,saveEngTextFile,The following statement contains a magic number: br.BaseStream.Position = (i * 8);  
Magic Number,bassru,Config,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Config.cs,getEngTextFile,The following statement contains a magic number: rd.BaseStream.Position = id * 8;  
Magic Number,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,button3_Click,The following statement contains a magic number: listView1.SelectedItems [0].SubItems [5].Text = fi.type;  
Magic Number,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,button3_Click,The following statement contains a magic number: listView1.SelectedItems [0].SubItems [6].Text = fi.comment;  
Magic Number,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: try {  	switch (men) {  	case "Palette":  		bres = new BPalette (fid' "");  		break;  	case "Image":  		bres = new BImage (fid' 320' 200' ""' 0);  		break;  	case "Sequence":  		bres = new BSequence (fid' ""' "aqua");  		break;  	case "Sprites":  		bres = new BSprites (fid' "");  		break;  	case "Charset":  		bres = new BCharset (fid' 8' 0);  		break;  	case "Text":  		bres = new BText (fid);  		break;  	case "Script":  		bres = new BScripts (fid);  		break;  	case "Speech":  		bres = new BSpeech (fid);  		break;  	case "Sound":  		bres = new BSound (fid);  		break;  	}  }  catch (Exception ex) {  	bres = null;  	MessageBox.Show ("Error creating resource.\n" + ex.GetType ().Name + ":\n" + ex.Message);  }  
Magic Number,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: try {  	switch (men) {  	case "Palette":  		bres = new BPalette (fid' "");  		break;  	case "Image":  		bres = new BImage (fid' 320' 200' ""' 0);  		break;  	case "Sequence":  		bres = new BSequence (fid' ""' "aqua");  		break;  	case "Sprites":  		bres = new BSprites (fid' "");  		break;  	case "Charset":  		bres = new BCharset (fid' 8' 0);  		break;  	case "Text":  		bres = new BText (fid);  		break;  	case "Script":  		bres = new BScripts (fid);  		break;  	case "Speech":  		bres = new BSpeech (fid);  		break;  	case "Sound":  		bres = new BSound (fid);  		break;  	}  }  catch (Exception ex) {  	bres = null;  	MessageBox.Show ("Error creating resource.\n" + ex.GetType ().Name + ":\n" + ex.Message);  }  
Magic Number,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: try {  	switch (men) {  	case "Palette":  		bres = new BPalette (fid' "");  		break;  	case "Image":  		bres = new BImage (fid' 320' 200' ""' 0);  		break;  	case "Sequence":  		bres = new BSequence (fid' ""' "aqua");  		break;  	case "Sprites":  		bres = new BSprites (fid' "");  		break;  	case "Charset":  		bres = new BCharset (fid' 8' 0);  		break;  	case "Text":  		bres = new BText (fid);  		break;  	case "Script":  		bres = new BScripts (fid);  		break;  	case "Speech":  		bres = new BSpeech (fid);  		break;  	case "Sound":  		bres = new BSound (fid);  		break;  	}  }  catch (Exception ex) {  	bres = null;  	MessageBox.Show ("Error creating resource.\n" + ex.GetType ().Name + ":\n" + ex.Message);  }  
Magic Number,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: switch (men) {  case "Palette":  	bres = new BPalette (fid' "");  	break;  case "Image":  	bres = new BImage (fid' 320' 200' ""' 0);  	break;  case "Sequence":  	bres = new BSequence (fid' ""' "aqua");  	break;  case "Sprites":  	bres = new BSprites (fid' "");  	break;  case "Charset":  	bres = new BCharset (fid' 8' 0);  	break;  case "Text":  	bres = new BText (fid);  	break;  case "Script":  	bres = new BScripts (fid);  	break;  case "Speech":  	bres = new BSpeech (fid);  	break;  case "Sound":  	bres = new BSound (fid);  	break;  }  
Magic Number,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: switch (men) {  case "Palette":  	bres = new BPalette (fid' "");  	break;  case "Image":  	bres = new BImage (fid' 320' 200' ""' 0);  	break;  case "Sequence":  	bres = new BSequence (fid' ""' "aqua");  	break;  case "Sprites":  	bres = new BSprites (fid' "");  	break;  case "Charset":  	bres = new BCharset (fid' 8' 0);  	break;  case "Text":  	bres = new BText (fid);  	break;  case "Script":  	bres = new BScripts (fid);  	break;  case "Speech":  	bres = new BSpeech (fid);  	break;  case "Sound":  	bres = new BSound (fid);  	break;  }  
Magic Number,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: switch (men) {  case "Palette":  	bres = new BPalette (fid' "");  	break;  case "Image":  	bres = new BImage (fid' 320' 200' ""' 0);  	break;  case "Sequence":  	bres = new BSequence (fid' ""' "aqua");  	break;  case "Sprites":  	bres = new BSprites (fid' "");  	break;  case "Charset":  	bres = new BCharset (fid' 8' 0);  	break;  case "Text":  	bres = new BText (fid);  	break;  case "Script":  	bres = new BScripts (fid);  	break;  case "Speech":  	bres = new BSpeech (fid);  	break;  case "Sound":  	bres = new BSound (fid);  	break;  }  
Magic Number,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: bres = new BImage (fid' 320' 200' ""' 0);  
Magic Number,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: bres = new BImage (fid' 320' 200' ""' 0);  
Magic Number,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: bres = new BCharset (fid' 8' 0);  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,getHuffText,The following statement contains a magic number: switch (SkyDisk.get ().getVersion ()) {  case 109:  	return _huffTree_00109;  case 267:  	return _huffTree_00267;  case 228:  	return _huffTree_00288;  case 303:  	return _huffTree_00303;  case 331:  	return _huffTree_00331;  case 348:  	return _huffTree_00348;  case 365:  	return _huffTree_00365;  case 368:  	return _huffTree_00368;  case 372:  	return _huffTree_00372;  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,getHuffText,The following statement contains a magic number: switch (SkyDisk.get ().getVersion ()) {  case 109:  	return _huffTree_00109;  case 267:  	return _huffTree_00267;  case 228:  	return _huffTree_00288;  case 303:  	return _huffTree_00303;  case 331:  	return _huffTree_00331;  case 348:  	return _huffTree_00348;  case 365:  	return _huffTree_00365;  case 368:  	return _huffTree_00368;  case 372:  	return _huffTree_00372;  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,getHuffText,The following statement contains a magic number: switch (SkyDisk.get ().getVersion ()) {  case 109:  	return _huffTree_00109;  case 267:  	return _huffTree_00267;  case 228:  	return _huffTree_00288;  case 303:  	return _huffTree_00303;  case 331:  	return _huffTree_00331;  case 348:  	return _huffTree_00348;  case 365:  	return _huffTree_00365;  case 368:  	return _huffTree_00368;  case 372:  	return _huffTree_00372;  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,getHuffText,The following statement contains a magic number: switch (SkyDisk.get ().getVersion ()) {  case 109:  	return _huffTree_00109;  case 267:  	return _huffTree_00267;  case 228:  	return _huffTree_00288;  case 303:  	return _huffTree_00303;  case 331:  	return _huffTree_00331;  case 348:  	return _huffTree_00348;  case 365:  	return _huffTree_00365;  case 368:  	return _huffTree_00368;  case 372:  	return _huffTree_00372;  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,getHuffText,The following statement contains a magic number: switch (SkyDisk.get ().getVersion ()) {  case 109:  	return _huffTree_00109;  case 267:  	return _huffTree_00267;  case 228:  	return _huffTree_00288;  case 303:  	return _huffTree_00303;  case 331:  	return _huffTree_00331;  case 348:  	return _huffTree_00348;  case 365:  	return _huffTree_00365;  case 368:  	return _huffTree_00368;  case 372:  	return _huffTree_00372;  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,getHuffText,The following statement contains a magic number: switch (SkyDisk.get ().getVersion ()) {  case 109:  	return _huffTree_00109;  case 267:  	return _huffTree_00267;  case 228:  	return _huffTree_00288;  case 303:  	return _huffTree_00303;  case 331:  	return _huffTree_00331;  case 348:  	return _huffTree_00348;  case 365:  	return _huffTree_00365;  case 368:  	return _huffTree_00368;  case 372:  	return _huffTree_00372;  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,getHuffText,The following statement contains a magic number: switch (SkyDisk.get ().getVersion ()) {  case 109:  	return _huffTree_00109;  case 267:  	return _huffTree_00267;  case 228:  	return _huffTree_00288;  case 303:  	return _huffTree_00303;  case 331:  	return _huffTree_00331;  case 348:  	return _huffTree_00348;  case 365:  	return _huffTree_00365;  case 368:  	return _huffTree_00368;  case 372:  	return _huffTree_00372;  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,getHuffText,The following statement contains a magic number: switch (SkyDisk.get ().getVersion ()) {  case 109:  	return _huffTree_00109;  case 267:  	return _huffTree_00267;  case 228:  	return _huffTree_00288;  case 303:  	return _huffTree_00303;  case 331:  	return _huffTree_00331;  case 348:  	return _huffTree_00348;  case 365:  	return _huffTree_00365;  case 368:  	return _huffTree_00368;  case 372:  	return _huffTree_00372;  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,getHuffText,The following statement contains a magic number: switch (SkyDisk.get ().getVersion ()) {  case 109:  	return _huffTree_00109;  case 267:  	return _huffTree_00267;  case 228:  	return _huffTree_00288;  case 303:  	return _huffTree_00303;  case 331:  	return _huffTree_00331;  case 348:  	return _huffTree_00348;  case 365:  	return _huffTree_00365;  case 368:  	return _huffTree_00368;  case 372:  	return _huffTree_00372;  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,replaceChar,The following statement contains a magic number: if (c > (char)122)  	return String.Format ("\\x{0:X2}"' (int)c);  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,nextChar,The following statement contains a magic number: if (c == '\\') {  	c = s [1];  	s = s.Remove (0' 2);  	if (c == 'n')  		return '\n';  	if (c == 't')  		return '\t';  	if (c == 'x') {  		string x = s.Substring (0' 2);  		s = s.Remove (0' 2);  		c = (char)int.Parse (x' System.Globalization.NumberStyles.HexNumber);  	}  	return c;  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,nextChar,The following statement contains a magic number: if (c == '\\') {  	c = s [1];  	s = s.Remove (0' 2);  	if (c == 'n')  		return '\n';  	if (c == 't')  		return '\t';  	if (c == 'x') {  		string x = s.Substring (0' 2);  		s = s.Remove (0' 2);  		c = (char)int.Parse (x' System.Globalization.NumberStyles.HexNumber);  	}  	return c;  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,nextChar,The following statement contains a magic number: if (c == '\\') {  	c = s [1];  	s = s.Remove (0' 2);  	if (c == 'n')  		return '\n';  	if (c == 't')  		return '\t';  	if (c == 'x') {  		string x = s.Substring (0' 2);  		s = s.Remove (0' 2);  		c = (char)int.Parse (x' System.Globalization.NumberStyles.HexNumber);  	}  	return c;  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,nextChar,The following statement contains a magic number: s = s.Remove (0' 2);  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,nextChar,The following statement contains a magic number: if (c == 'x') {  	string x = s.Substring (0' 2);  	s = s.Remove (0' 2);  	c = (char)int.Parse (x' System.Globalization.NumberStyles.HexNumber);  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,nextChar,The following statement contains a magic number: if (c == 'x') {  	string x = s.Substring (0' 2);  	s = s.Remove (0' 2);  	c = (char)int.Parse (x' System.Globalization.NumberStyles.HexNumber);  }  
Magic Number,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,nextChar,The following statement contains a magic number: s = s.Remove (0' 2);  
Magic Number,bassru,LISorter,C:\repos\old-games_game-utilities\Beneath a Steel Sky\LISorter.cs,Compare,The following statement contains a magic number: if (curcol == 0 || curcol == 1 || curcol == 2) {  	int i1 = int.Parse (li1' (curcol == 0 ? System.Globalization.NumberStyles.Integer : System.Globalization.NumberStyles.HexNumber));  	int i2 = int.Parse (li2' (curcol == 0 ? System.Globalization.NumberStyles.Integer : System.Globalization.NumberStyles.HexNumber));  	int res = 0;  	if (i1 > i2)  		res = 1;  	if (i2 > i1)  		res = -1;  	return res * (ord == SortOrder.Descending ? -1 : 1);  }  else {  	return string.Compare (li1' li2) * (ord == SortOrder.Descending ? -1 : 1);  }  
Magic Number,bassru,RuTableForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\RuTableForm.cs,fillTable,The following statement contains a magic number: for (int i = 0; i < huff.Length / 3; i++)  	if (huff [i' 0] == 0 && huff [i' 1] == 0 && huff [i' 2] != 0) {  		string en = HuffText.replaceChar ((char)huff [i' 2]);  		string comment = "";  		string ru = Config.get ().getCharInfo (en' ref comment);  		tb.Rows.Add (new object[] {  			en'  			ru'  			comment  		});  	}  
Magic Number,bassru,RuTableForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\RuTableForm.cs,fillTable,The following statement contains a magic number: for (int i = 0; i < huff.Length / 3; i++)  	if (huff [i' 0] == 0 && huff [i' 1] == 0 && huff [i' 2] != 0) {  		string en = HuffText.replaceChar ((char)huff [i' 2]);  		string comment = "";  		string ru = Config.get ().getCharInfo (en' ref comment);  		tb.Rows.Add (new object[] {  			en'  			ru'  			comment  		});  	}  
Magic Number,bassru,RuTableForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\RuTableForm.cs,fillTable,The following statement contains a magic number: for (int i = 0; i < huff.Length / 3; i++)  	if (huff [i' 0] == 0 && huff [i' 1] == 0 && huff [i' 2] != 0) {  		string en = HuffText.replaceChar ((char)huff [i' 2]);  		string comment = "";  		string ru = Config.get ().getCharInfo (en' ref comment);  		tb.Rows.Add (new object[] {  			en'  			ru'  			comment  		});  	}  
Magic Number,bassru,RuTableForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\RuTableForm.cs,fillTable,The following statement contains a magic number: if (huff [i' 0] == 0 && huff [i' 1] == 0 && huff [i' 2] != 0) {  	string en = HuffText.replaceChar ((char)huff [i' 2]);  	string comment = "";  	string ru = Config.get ().getCharInfo (en' ref comment);  	tb.Rows.Add (new object[] {  		en'  		ru'  		comment  	});  }  
Magic Number,bassru,RuTableForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\RuTableForm.cs,fillTable,The following statement contains a magic number: if (huff [i' 0] == 0 && huff [i' 1] == 0 && huff [i' 2] != 0) {  	string en = HuffText.replaceChar ((char)huff [i' 2]);  	string comment = "";  	string ru = Config.get ().getCharInfo (en' ref comment);  	tb.Rows.Add (new object[] {  		en'  		ru'  		comment  	});  }  
Magic Number,bassru,RuTableForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\RuTableForm.cs,button1_Click,The following statement contains a magic number: foreach (DataRow rw in tb.Rows) {  	if (((rw.ItemArray [1] as string) != "") || ((rw.ItemArray [2] as string) != "")) {  		string en = (rw.ItemArray [0] as string);  		string ru = string.Empty;  		if ((rw.ItemArray [1] as string) != null) {  			ru = (rw.ItemArray [1] as string);  		}  		string comment = (rw.ItemArray [2] as string);  		Config.get ().setCharInfo (en' ru' comment);  	}  }  
Magic Number,bassru,RuTableForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\RuTableForm.cs,button1_Click,The following statement contains a magic number: foreach (DataRow rw in tb.Rows) {  	if (((rw.ItemArray [1] as string) != "") || ((rw.ItemArray [2] as string) != "")) {  		string en = (rw.ItemArray [0] as string);  		string ru = string.Empty;  		if ((rw.ItemArray [1] as string) != null) {  			ru = (rw.ItemArray [1] as string);  		}  		string comment = (rw.ItemArray [2] as string);  		Config.get ().setCharInfo (en' ru' comment);  	}  }  
Magic Number,bassru,RuTableForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\RuTableForm.cs,button1_Click,The following statement contains a magic number: if (((rw.ItemArray [1] as string) != "") || ((rw.ItemArray [2] as string) != "")) {  	string en = (rw.ItemArray [0] as string);  	string ru = string.Empty;  	if ((rw.ItemArray [1] as string) != null) {  		ru = (rw.ItemArray [1] as string);  	}  	string comment = (rw.ItemArray [2] as string);  	Config.get ().setCharInfo (en' ru' comment);  }  
Magic Number,bassru,RuTableForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\RuTableForm.cs,button1_Click,The following statement contains a magic number: if (((rw.ItemArray [1] as string) != "") || ((rw.ItemArray [2] as string) != "")) {  	string en = (rw.ItemArray [0] as string);  	string ru = string.Empty;  	if ((rw.ItemArray [1] as string) != null) {  		ru = (rw.ItemArray [1] as string);  	}  	string comment = (rw.ItemArray [2] as string);  	Config.get ().setCharInfo (en' ru' comment);  }  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 0 || cmd == 6)  	res += scriptVars [data [pos++] / 4];  else if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: res += scriptVars [data [pos++] / 4];  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 11) {  	res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  }  else if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: res += string.Format ("{0:d} {1:s}"' data [pos++]' mcodes [data [pos++] / 4]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 18 || cmd == 5 || cmd == 9) {  	int jmp = 0;  	if (cmd == 18)  		jmp = (Int16)data [pos++];  	else  		jmp = (UInt16)data [pos++];  	jmp = ofs + pos + (jmp / 2);  	res += string.Format ("0x{0:X4}"' jmp);  }  else if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 18)  	jmp = (Int16)data [pos++];  else  	jmp = (UInt16)data [pos++];  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: jmp = ofs + pos + (jmp / 2);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 15 || cmd == 16) {  	res += String.Format ("[{0:d}]"' data [pos++]);  }  else if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: if (cmd == 14) {  	UInt16 cnt = data [pos++];  	res += cnt.ToString () + endl;  	for (int i = 0; i < cnt; i++)  		res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  	res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  }  else  	for (int i = 0; i < opcode_par [cmd]; i++)  		res += String.Format ("{0:D} "' data [pos++]);  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: for (int i = 0; i < cnt; i++)  	res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: res += string.Format ("\tcase 0x{0:X4}: jmp 0x{1:X4}" + endl' data [pos++]' ofs + pos + (data [pos++] / 2));  
Magic Number,bassru,AsmScriptProcessor,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,processScript,The following statement contains a magic number: res += string.Format ("\tdefault: jmp 0x{0:X4}"' ofs + pos + (data [pos++] / 2));  
Magic Number,bassru,BScripts,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,BScripts,The following statement contains a magic number: while (pos <= sz * 2)//scrofs[0]*2)   {  	scrofs.Add (ByteHelper.READ_UINT16_LE (getData ()' pos));  	pos += 2;  }  
Magic Number,bassru,BScripts,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,BScripts,The following statement contains a magic number: while (pos <= sz * 2)//scrofs[0]*2)   {  	scrofs.Add (ByteHelper.READ_UINT16_LE (getData ()' pos));  	pos += 2;  }  
Magic Number,bassru,BScripts,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,BScripts,The following statement contains a magic number: pos += 2;  
Magic Number,bassru,BScripts,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,BScripts,The following statement contains a magic number: for (int i = 0; i < lsz; i++) {  	scrdata [i] = ByteHelper.READ_UINT16_LE (getData ()' pos);  	pos += 2;  }  
Magic Number,bassru,BScripts,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Scripts.cs,BScripts,The following statement contains a magic number: pos += 2;  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT16_LE,The following statement contains a magic number: return (UInt16)((buf [pos + 1] << 8) | buf [pos]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT16_BE,The following statement contains a magic number: return (UInt16)((buf [pos] << 8) | buf [pos + 1]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT24_LE,The following statement contains a magic number: return (UInt32)((buf [pos + 2] << 16) | (buf [pos + 1] << 8) | buf [pos]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT24_LE,The following statement contains a magic number: return (UInt32)((buf [pos + 2] << 16) | (buf [pos + 1] << 8) | buf [pos]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT24_LE,The following statement contains a magic number: return (UInt32)((buf [pos + 2] << 16) | (buf [pos + 1] << 8) | buf [pos]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT24_BE,The following statement contains a magic number: return (UInt32)((buf [pos] << 16) | (buf [pos + 1] << 8) | buf [pos + 2]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT24_BE,The following statement contains a magic number: return (UInt32)((buf [pos] << 16) | (buf [pos + 1] << 8) | buf [pos + 2]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT24_BE,The following statement contains a magic number: return (UInt32)((buf [pos] << 16) | (buf [pos + 1] << 8) | buf [pos + 2]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT32_LE,The following statement contains a magic number: return (UInt32)((buf [pos + 3] << 24) | (buf [pos + 2] << 16) | (buf [pos + 1] << 8) | buf [pos]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT32_LE,The following statement contains a magic number: return (UInt32)((buf [pos + 3] << 24) | (buf [pos + 2] << 16) | (buf [pos + 1] << 8) | buf [pos]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT32_LE,The following statement contains a magic number: return (UInt32)((buf [pos + 3] << 24) | (buf [pos + 2] << 16) | (buf [pos + 1] << 8) | buf [pos]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT32_LE,The following statement contains a magic number: return (UInt32)((buf [pos + 3] << 24) | (buf [pos + 2] << 16) | (buf [pos + 1] << 8) | buf [pos]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT32_LE,The following statement contains a magic number: return (UInt32)((buf [pos + 3] << 24) | (buf [pos + 2] << 16) | (buf [pos + 1] << 8) | buf [pos]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT32_BE,The following statement contains a magic number: return (UInt32)((buf [pos] << 24) | (buf [pos + 1] << 16) | (buf [pos + 2] << 8) | buf [pos + 3]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT32_BE,The following statement contains a magic number: return (UInt32)((buf [pos] << 24) | (buf [pos + 1] << 16) | (buf [pos + 2] << 8) | buf [pos + 3]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT32_BE,The following statement contains a magic number: return (UInt32)((buf [pos] << 24) | (buf [pos + 1] << 16) | (buf [pos + 2] << 8) | buf [pos + 3]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT32_BE,The following statement contains a magic number: return (UInt32)((buf [pos] << 24) | (buf [pos + 1] << 16) | (buf [pos + 2] << 8) | buf [pos + 3]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,READ_UINT32_BE,The following statement contains a magic number: return (UInt32)((buf [pos] << 24) | (buf [pos + 1] << 16) | (buf [pos + 2] << 8) | buf [pos + 3]);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,WRITE_LE,The following statement contains a magic number: for (int i = 0; i < size; i++) {  	buf [pos + i] = (byte)(value & 0xFF);  	value >>= 8;  }  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,WRITE_LE,The following statement contains a magic number: value >>= 8;  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,WRITE_BE,The following statement contains a magic number: for (int i = 0; i < size; i++) {  	buf [pos + size - 1 - i] = (byte)(value & 0xFF);  	value >>= 8;  }  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,WRITE_BE,The following statement contains a magic number: value >>= 8;  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,WRITE_LE,The following statement contains a magic number: WRITE_LE (value' 2' buf' pos);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,WRITE_LE,The following statement contains a magic number: WRITE_LE (value' 4' buf' pos);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,WRITE24_LE,The following statement contains a magic number: WRITE_LE (value' 3' buf' pos);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,WRITE_BE,The following statement contains a magic number: WRITE_BE (value' 2' buf' pos);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,WRITE_BE,The following statement contains a magic number: WRITE_BE (value' 4' buf' pos);  
Magic Number,bassru,ByteHelper,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,WRITE24_BE,The following statement contains a magic number: WRITE_BE (value' 3' buf' pos);  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: switch (dinnerSize) {  case 232:  	return 272;  case 243:  	return 109;  case 247:  	return 267;  case 1404:  	return 288;  case 1413:  	return 303;  case 1445:  	if (diskbuf.Length == 8830435)  		return 348;  	else  		return 331;  case 1711:  	return 365;  case 5099:  	return 368;  case 5097:  	return 372;  default:  	throw new ApplicationException ("Unknown version");  }  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: return 272;  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: return 109;  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: return 267;  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: return 288;  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: return 303;  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: if (diskbuf.Length == 8830435)  	return 348;  else  	return 331;  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: if (diskbuf.Length == 8830435)  	return 348;  else  	return 331;  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: if (diskbuf.Length == 8830435)  	return 348;  else  	return 331;  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: return 348;  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: return 331;  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: return 365;  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: return 368;  
Magic Number,bassru,SkyDisk,C:\repos\old-games_game-utilities\Beneath a Steel Sky\SkyDisk.cs,getVersion,The following statement contains a magic number: return 372;  
Magic Number,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,getFormat,The following statement contains a magic number: wf.SamplesPerSecond = 11025;  
Magic Number,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,getFormat,The following statement contains a magic number: wf.AverageBytesPerSecond = 11025;  
Magic Number,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,getFormat,The following statement contains a magic number: wf.BitsPerSample = 8;  
Magic Number,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,loadFromStream,The following statement contains a magic number: s = new String (br.ReadChars (4));  
Magic Number,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,loadFromStream,The following statement contains a magic number: s = new String (br.ReadChars (4));  
Magic Number,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,loadFromStream,The following statement contains a magic number: if (bps % 8 != 0)  	return false;  
Magic Number,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,loadFromStream,The following statement contains a magic number: br.ReadBytes (cl - 16);  
Magic Number,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,loadFromStream,The following statement contains a magic number: s = new String (br.ReadChars (4));  
Magic Number,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,loadFromStream,The following statement contains a magic number: try {  	while (s.ToLower () != "data") {  		br.ReadBytes (br.ReadInt32 ());  		s = new String (br.ReadChars (4));  	}  }  catch (Exception) {  	return false;  }  
Magic Number,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,loadFromStream,The following statement contains a magic number: while (s.ToLower () != "data") {  	br.ReadBytes (br.ReadInt32 ());  	s = new String (br.ReadChars (4));  }  
Magic Number,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,loadFromStream,The following statement contains a magic number: s = new String (br.ReadChars (4));  
Magic Number,bassru,WavFile,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,saveToStream,The following statement contains a magic number: stream.Position = 4;  
Magic Number,bassru,BSpeech,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,BSpeech,The following statement contains a magic number: snd [0] = snd [1] = snd [12] = snd [13] = 0x7F;  
Magic Number,bassru,BSpeech,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Sound.cs,BSpeech,The following statement contains a magic number: snd [0] = snd [1] = snd [12] = snd [13] = 0x7F;  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,BCharset,The following statement contains a magic number: for (int i = 0; i < 128; i++)  	widths [i] = data [i];  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,BCharset,The following statement contains a magic number: csdata = new byte[data.Length - 128];  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,BCharset,The following statement contains a magic number: Array.Copy (data' 128' csdata' 0' csdata.Length);  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,charData,The following statement contains a magic number: for (int i = 0; i < res.Length; i++) {  	if (csdata.Length <= idx)  		res [i] = 0;  	else  		res [i] = ByteHelper.READ_UINT16_BE (csdata' idx);  	idx += 2;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,charData,The following statement contains a magic number: idx += 2;  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  		g.FillRectangle (new SolidBrush (back)' rct);  		int width = 0;  		UInt16[] cdata = charData (idx' height' spacing' ref width);  		for (int k = 0; k < height; k++) {  			UInt16 data = cdata [k * 2];  			UInt16 mask = cdata [k * 2 + 1];  			for (int m = 0; m < 16; m++) {  				bool dt = (data & 0x8000) != 0;  				data <<= 1;  				bool ms = (mask & 0x8000) != 0;  				mask <<= 1;  				if (masks) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					if (ms)  						bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  				}  				else {  					if (ms) {  						if (dt)  							bmp.SetPixel (rct.X + m' rct.Y + k' fore);  						else  							bmp.SetPixel (rct.X + m' rct.Y + k' frame);  					}  				}  			}  		}  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  		g.FillRectangle (new SolidBrush (back)' rct);  		int width = 0;  		UInt16[] cdata = charData (idx' height' spacing' ref width);  		for (int k = 0; k < height; k++) {  			UInt16 data = cdata [k * 2];  			UInt16 mask = cdata [k * 2 + 1];  			for (int m = 0; m < 16; m++) {  				bool dt = (data & 0x8000) != 0;  				data <<= 1;  				bool ms = (mask & 0x8000) != 0;  				mask <<= 1;  				if (masks) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					if (ms)  						bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  				}  				else {  					if (ms) {  						if (dt)  							bmp.SetPixel (rct.X + m' rct.Y + k' fore);  						else  							bmp.SetPixel (rct.X + m' rct.Y + k' frame);  					}  				}  			}  		}  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  		g.FillRectangle (new SolidBrush (back)' rct);  		int width = 0;  		UInt16[] cdata = charData (idx' height' spacing' ref width);  		for (int k = 0; k < height; k++) {  			UInt16 data = cdata [k * 2];  			UInt16 mask = cdata [k * 2 + 1];  			for (int m = 0; m < 16; m++) {  				bool dt = (data & 0x8000) != 0;  				data <<= 1;  				bool ms = (mask & 0x8000) != 0;  				mask <<= 1;  				if (masks) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					if (ms)  						bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  				}  				else {  					if (ms) {  						if (dt)  							bmp.SetPixel (rct.X + m' rct.Y + k' fore);  						else  							bmp.SetPixel (rct.X + m' rct.Y + k' frame);  					}  				}  			}  		}  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  		g.FillRectangle (new SolidBrush (back)' rct);  		int width = 0;  		UInt16[] cdata = charData (idx' height' spacing' ref width);  		for (int k = 0; k < height; k++) {  			UInt16 data = cdata [k * 2];  			UInt16 mask = cdata [k * 2 + 1];  			for (int m = 0; m < 16; m++) {  				bool dt = (data & 0x8000) != 0;  				data <<= 1;  				bool ms = (mask & 0x8000) != 0;  				mask <<= 1;  				if (masks) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					if (ms)  						bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  				}  				else {  					if (ms) {  						if (dt)  							bmp.SetPixel (rct.X + m' rct.Y + k' fore);  						else  							bmp.SetPixel (rct.X + m' rct.Y + k' frame);  					}  				}  			}  		}  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  		g.FillRectangle (new SolidBrush (back)' rct);  		int width = 0;  		UInt16[] cdata = charData (idx' height' spacing' ref width);  		for (int k = 0; k < height; k++) {  			UInt16 data = cdata [k * 2];  			UInt16 mask = cdata [k * 2 + 1];  			for (int m = 0; m < 16; m++) {  				bool dt = (data & 0x8000) != 0;  				data <<= 1;  				bool ms = (mask & 0x8000) != 0;  				mask <<= 1;  				if (masks) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					if (ms)  						bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  				}  				else {  					if (ms) {  						if (dt)  							bmp.SetPixel (rct.X + m' rct.Y + k' fore);  						else  							bmp.SetPixel (rct.X + m' rct.Y + k' frame);  					}  				}  			}  		}  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  		g.FillRectangle (new SolidBrush (back)' rct);  		int width = 0;  		UInt16[] cdata = charData (idx' height' spacing' ref width);  		for (int k = 0; k < height; k++) {  			UInt16 data = cdata [k * 2];  			UInt16 mask = cdata [k * 2 + 1];  			for (int m = 0; m < 16; m++) {  				bool dt = (data & 0x8000) != 0;  				data <<= 1;  				bool ms = (mask & 0x8000) != 0;  				mask <<= 1;  				if (masks) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					if (ms)  						bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  				}  				else {  					if (ms) {  						if (dt)  							bmp.SetPixel (rct.X + m' rct.Y + k' fore);  						else  							bmp.SetPixel (rct.X + m' rct.Y + k' frame);  					}  				}  			}  		}  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  		g.FillRectangle (new SolidBrush (back)' rct);  		int width = 0;  		UInt16[] cdata = charData (idx' height' spacing' ref width);  		for (int k = 0; k < height; k++) {  			UInt16 data = cdata [k * 2];  			UInt16 mask = cdata [k * 2 + 1];  			for (int m = 0; m < 16; m++) {  				bool dt = (data & 0x8000) != 0;  				data <<= 1;  				bool ms = (mask & 0x8000) != 0;  				mask <<= 1;  				if (masks) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					if (ms)  						bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  				}  				else {  					if (ms) {  						if (dt)  							bmp.SetPixel (rct.X + m' rct.Y + k' fore);  						else  							bmp.SetPixel (rct.X + m' rct.Y + k' frame);  					}  				}  			}  		}  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  		g.FillRectangle (new SolidBrush (back)' rct);  		int width = 0;  		UInt16[] cdata = charData (idx' height' spacing' ref width);  		for (int k = 0; k < height; k++) {  			UInt16 data = cdata [k * 2];  			UInt16 mask = cdata [k * 2 + 1];  			for (int m = 0; m < 16; m++) {  				bool dt = (data & 0x8000) != 0;  				data <<= 1;  				bool ms = (mask & 0x8000) != 0;  				mask <<= 1;  				if (masks) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					if (ms)  						bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  				}  				else {  					if (ms) {  						if (dt)  							bmp.SetPixel (rct.X + m' rct.Y + k' fore);  						else  							bmp.SetPixel (rct.X + m' rct.Y + k' frame);  					}  				}  			}  		}  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  		g.FillRectangle (new SolidBrush (back)' rct);  		int width = 0;  		UInt16[] cdata = charData (idx' height' spacing' ref width);  		for (int k = 0; k < height; k++) {  			UInt16 data = cdata [k * 2];  			UInt16 mask = cdata [k * 2 + 1];  			for (int m = 0; m < 16; m++) {  				bool dt = (data & 0x8000) != 0;  				data <<= 1;  				bool ms = (mask & 0x8000) != 0;  				mask <<= 1;  				if (masks) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					if (ms)  						bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  				}  				else {  					if (ms) {  						if (dt)  							bmp.SetPixel (rct.X + m' rct.Y + k' fore);  						else  							bmp.SetPixel (rct.X + m' rct.Y + k' frame);  					}  				}  			}  		}  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  		g.FillRectangle (new SolidBrush (back)' rct);  		int width = 0;  		UInt16[] cdata = charData (idx' height' spacing' ref width);  		for (int k = 0; k < height; k++) {  			UInt16 data = cdata [k * 2];  			UInt16 mask = cdata [k * 2 + 1];  			for (int m = 0; m < 16; m++) {  				bool dt = (data & 0x8000) != 0;  				data <<= 1;  				bool ms = (mask & 0x8000) != 0;  				mask <<= 1;  				if (masks) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					if (ms)  						bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  				}  				else {  					if (ms) {  						if (dt)  							bmp.SetPixel (rct.X + m' rct.Y + k' fore);  						else  							bmp.SetPixel (rct.X + m' rct.Y + k' frame);  					}  				}  			}  		}  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  		g.FillRectangle (new SolidBrush (back)' rct);  		int width = 0;  		UInt16[] cdata = charData (idx' height' spacing' ref width);  		for (int k = 0; k < height; k++) {  			UInt16 data = cdata [k * 2];  			UInt16 mask = cdata [k * 2 + 1];  			for (int m = 0; m < 16; m++) {  				bool dt = (data & 0x8000) != 0;  				data <<= 1;  				bool ms = (mask & 0x8000) != 0;  				mask <<= 1;  				if (masks) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					if (ms)  						bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  				}  				else {  					if (ms) {  						if (dt)  							bmp.SetPixel (rct.X + m' rct.Y + k' fore);  						else  							bmp.SetPixel (rct.X + m' rct.Y + k' frame);  					}  				}  			}  		}  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  	g.FillRectangle (new SolidBrush (back)' rct);  	int width = 0;  	UInt16[] cdata = charData (idx' height' spacing' ref width);  	for (int k = 0; k < height; k++) {  		UInt16 data = cdata [k * 2];  		UInt16 mask = cdata [k * 2 + 1];  		for (int m = 0; m < 16; m++) {  			bool dt = (data & 0x8000) != 0;  			data <<= 1;  			bool ms = (mask & 0x8000) != 0;  			mask <<= 1;  			if (masks) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				if (ms)  					bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  			}  			else {  				if (ms) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					else  						bmp.SetPixel (rct.X + m' rct.Y + k' frame);  				}  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  	g.FillRectangle (new SolidBrush (back)' rct);  	int width = 0;  	UInt16[] cdata = charData (idx' height' spacing' ref width);  	for (int k = 0; k < height; k++) {  		UInt16 data = cdata [k * 2];  		UInt16 mask = cdata [k * 2 + 1];  		for (int m = 0; m < 16; m++) {  			bool dt = (data & 0x8000) != 0;  			data <<= 1;  			bool ms = (mask & 0x8000) != 0;  			mask <<= 1;  			if (masks) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				if (ms)  					bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  			}  			else {  				if (ms) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					else  						bmp.SetPixel (rct.X + m' rct.Y + k' frame);  				}  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  	g.FillRectangle (new SolidBrush (back)' rct);  	int width = 0;  	UInt16[] cdata = charData (idx' height' spacing' ref width);  	for (int k = 0; k < height; k++) {  		UInt16 data = cdata [k * 2];  		UInt16 mask = cdata [k * 2 + 1];  		for (int m = 0; m < 16; m++) {  			bool dt = (data & 0x8000) != 0;  			data <<= 1;  			bool ms = (mask & 0x8000) != 0;  			mask <<= 1;  			if (masks) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				if (ms)  					bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  			}  			else {  				if (ms) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					else  						bmp.SetPixel (rct.X + m' rct.Y + k' frame);  				}  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  	g.FillRectangle (new SolidBrush (back)' rct);  	int width = 0;  	UInt16[] cdata = charData (idx' height' spacing' ref width);  	for (int k = 0; k < height; k++) {  		UInt16 data = cdata [k * 2];  		UInt16 mask = cdata [k * 2 + 1];  		for (int m = 0; m < 16; m++) {  			bool dt = (data & 0x8000) != 0;  			data <<= 1;  			bool ms = (mask & 0x8000) != 0;  			mask <<= 1;  			if (masks) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				if (ms)  					bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  			}  			else {  				if (ms) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					else  						bmp.SetPixel (rct.X + m' rct.Y + k' frame);  				}  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  	g.FillRectangle (new SolidBrush (back)' rct);  	int width = 0;  	UInt16[] cdata = charData (idx' height' spacing' ref width);  	for (int k = 0; k < height; k++) {  		UInt16 data = cdata [k * 2];  		UInt16 mask = cdata [k * 2 + 1];  		for (int m = 0; m < 16; m++) {  			bool dt = (data & 0x8000) != 0;  			data <<= 1;  			bool ms = (mask & 0x8000) != 0;  			mask <<= 1;  			if (masks) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				if (ms)  					bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  			}  			else {  				if (ms) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					else  						bmp.SetPixel (rct.X + m' rct.Y + k' frame);  				}  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  	g.FillRectangle (new SolidBrush (back)' rct);  	int width = 0;  	UInt16[] cdata = charData (idx' height' spacing' ref width);  	for (int k = 0; k < height; k++) {  		UInt16 data = cdata [k * 2];  		UInt16 mask = cdata [k * 2 + 1];  		for (int m = 0; m < 16; m++) {  			bool dt = (data & 0x8000) != 0;  			data <<= 1;  			bool ms = (mask & 0x8000) != 0;  			mask <<= 1;  			if (masks) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				if (ms)  					bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  			}  			else {  				if (ms) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					else  						bmp.SetPixel (rct.X + m' rct.Y + k' frame);  				}  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  	g.FillRectangle (new SolidBrush (back)' rct);  	int width = 0;  	UInt16[] cdata = charData (idx' height' spacing' ref width);  	for (int k = 0; k < height; k++) {  		UInt16 data = cdata [k * 2];  		UInt16 mask = cdata [k * 2 + 1];  		for (int m = 0; m < 16; m++) {  			bool dt = (data & 0x8000) != 0;  			data <<= 1;  			bool ms = (mask & 0x8000) != 0;  			mask <<= 1;  			if (masks) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				if (ms)  					bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  			}  			else {  				if (ms) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					else  						bmp.SetPixel (rct.X + m' rct.Y + k' frame);  				}  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  	g.FillRectangle (new SolidBrush (back)' rct);  	int width = 0;  	UInt16[] cdata = charData (idx' height' spacing' ref width);  	for (int k = 0; k < height; k++) {  		UInt16 data = cdata [k * 2];  		UInt16 mask = cdata [k * 2 + 1];  		for (int m = 0; m < 16; m++) {  			bool dt = (data & 0x8000) != 0;  			data <<= 1;  			bool ms = (mask & 0x8000) != 0;  			mask <<= 1;  			if (masks) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				if (ms)  					bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  			}  			else {  				if (ms) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					else  						bmp.SetPixel (rct.X + m' rct.Y + k' frame);  				}  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  	g.FillRectangle (new SolidBrush (back)' rct);  	int width = 0;  	UInt16[] cdata = charData (idx' height' spacing' ref width);  	for (int k = 0; k < height; k++) {  		UInt16 data = cdata [k * 2];  		UInt16 mask = cdata [k * 2 + 1];  		for (int m = 0; m < 16; m++) {  			bool dt = (data & 0x8000) != 0;  			data <<= 1;  			bool ms = (mask & 0x8000) != 0;  			mask <<= 1;  			if (masks) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				if (ms)  					bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  			}  			else {  				if (ms) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					else  						bmp.SetPixel (rct.X + m' rct.Y + k' frame);  				}  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * (masks ? 32 : 16)' i * height' (masks ? 32 : 16)' height);  	g.FillRectangle (new SolidBrush (back)' rct);  	int width = 0;  	UInt16[] cdata = charData (idx' height' spacing' ref width);  	for (int k = 0; k < height; k++) {  		UInt16 data = cdata [k * 2];  		UInt16 mask = cdata [k * 2 + 1];  		for (int m = 0; m < 16; m++) {  			bool dt = (data & 0x8000) != 0;  			data <<= 1;  			bool ms = (mask & 0x8000) != 0;  			mask <<= 1;  			if (masks) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				if (ms)  					bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  			}  			else {  				if (ms) {  					if (dt)  						bmp.SetPixel (rct.X + m' rct.Y + k' fore);  					else  						bmp.SetPixel (rct.X + m' rct.Y + k' frame);  				}  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int k = 0; k < height; k++) {  	UInt16 data = cdata [k * 2];  	UInt16 mask = cdata [k * 2 + 1];  	for (int m = 0; m < 16; m++) {  		bool dt = (data & 0x8000) != 0;  		data <<= 1;  		bool ms = (mask & 0x8000) != 0;  		mask <<= 1;  		if (masks) {  			if (dt)  				bmp.SetPixel (rct.X + m' rct.Y + k' fore);  			if (ms)  				bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  		}  		else {  			if (ms) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				else  					bmp.SetPixel (rct.X + m' rct.Y + k' frame);  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int k = 0; k < height; k++) {  	UInt16 data = cdata [k * 2];  	UInt16 mask = cdata [k * 2 + 1];  	for (int m = 0; m < 16; m++) {  		bool dt = (data & 0x8000) != 0;  		data <<= 1;  		bool ms = (mask & 0x8000) != 0;  		mask <<= 1;  		if (masks) {  			if (dt)  				bmp.SetPixel (rct.X + m' rct.Y + k' fore);  			if (ms)  				bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  		}  		else {  			if (ms) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				else  					bmp.SetPixel (rct.X + m' rct.Y + k' frame);  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int k = 0; k < height; k++) {  	UInt16 data = cdata [k * 2];  	UInt16 mask = cdata [k * 2 + 1];  	for (int m = 0; m < 16; m++) {  		bool dt = (data & 0x8000) != 0;  		data <<= 1;  		bool ms = (mask & 0x8000) != 0;  		mask <<= 1;  		if (masks) {  			if (dt)  				bmp.SetPixel (rct.X + m' rct.Y + k' fore);  			if (ms)  				bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  		}  		else {  			if (ms) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				else  					bmp.SetPixel (rct.X + m' rct.Y + k' frame);  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int k = 0; k < height; k++) {  	UInt16 data = cdata [k * 2];  	UInt16 mask = cdata [k * 2 + 1];  	for (int m = 0; m < 16; m++) {  		bool dt = (data & 0x8000) != 0;  		data <<= 1;  		bool ms = (mask & 0x8000) != 0;  		mask <<= 1;  		if (masks) {  			if (dt)  				bmp.SetPixel (rct.X + m' rct.Y + k' fore);  			if (ms)  				bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  		}  		else {  			if (ms) {  				if (dt)  					bmp.SetPixel (rct.X + m' rct.Y + k' fore);  				else  					bmp.SetPixel (rct.X + m' rct.Y + k' frame);  			}  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int m = 0; m < 16; m++) {  	bool dt = (data & 0x8000) != 0;  	data <<= 1;  	bool ms = (mask & 0x8000) != 0;  	mask <<= 1;  	if (masks) {  		if (dt)  			bmp.SetPixel (rct.X + m' rct.Y + k' fore);  		if (ms)  			bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  	}  	else {  		if (ms) {  			if (dt)  				bmp.SetPixel (rct.X + m' rct.Y + k' fore);  			else  				bmp.SetPixel (rct.X + m' rct.Y + k' frame);  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: for (int m = 0; m < 16; m++) {  	bool dt = (data & 0x8000) != 0;  	data <<= 1;  	bool ms = (mask & 0x8000) != 0;  	mask <<= 1;  	if (masks) {  		if (dt)  			bmp.SetPixel (rct.X + m' rct.Y + k' fore);  		if (ms)  			bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  	}  	else {  		if (ms) {  			if (dt)  				bmp.SetPixel (rct.X + m' rct.Y + k' fore);  			else  				bmp.SetPixel (rct.X + m' rct.Y + k' frame);  		}  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: if (masks) {  	if (dt)  		bmp.SetPixel (rct.X + m' rct.Y + k' fore);  	if (ms)  		bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  }  else {  	if (ms) {  		if (dt)  			bmp.SetPixel (rct.X + m' rct.Y + k' fore);  		else  			bmp.SetPixel (rct.X + m' rct.Y + k' frame);  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: if (ms)  	bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,makeBitmap,The following statement contains a magic number: bmp.SetPixel (rct.X + 16 + m' rct.Y + k' fore);  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 128; i++)  	xdata [i] = (byte)widths [i];  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 16; i++)  	for (int j = 0; j < 8; j++) {  		int idx = i * 8 + j;  		Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  		byte wdh = 0;  		for (int k = 0; k < height; k++) {  			UInt16 data = 0;  			UInt16 mask = 0;  			for (int m = 0; m < 16; m++) {  				Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  				Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  				if (dc.ToArgb () != Color.White.ToArgb ())  					if (wdh < m + 1)  						wdh = (byte)(m + 1);  				data <<= 1;  				mask <<= 1;  				if (dc.ToArgb () != Color.White.ToArgb ())  					data |= 1;  				if (mc.ToArgb () != Color.White.ToArgb ())  					mask |= 1;  			}  			if (data != 0 || mask != 0) {  				ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  				ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  			}  		}  		if (wdh != 0)  			xdata [idx] = wdh;  	}  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  	byte wdh = 0;  	for (int k = 0; k < height; k++) {  		UInt16 data = 0;  		UInt16 mask = 0;  		for (int m = 0; m < 16; m++) {  			Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  			Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  			if (dc.ToArgb () != Color.White.ToArgb ())  				if (wdh < m + 1)  					wdh = (byte)(m + 1);  			data <<= 1;  			mask <<= 1;  			if (dc.ToArgb () != Color.White.ToArgb ())  				data |= 1;  			if (mc.ToArgb () != Color.White.ToArgb ())  				mask |= 1;  		}  		if (data != 0 || mask != 0) {  			ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  			ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  		}  	}  	if (wdh != 0)  		xdata [idx] = wdh;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  	byte wdh = 0;  	for (int k = 0; k < height; k++) {  		UInt16 data = 0;  		UInt16 mask = 0;  		for (int m = 0; m < 16; m++) {  			Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  			Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  			if (dc.ToArgb () != Color.White.ToArgb ())  				if (wdh < m + 1)  					wdh = (byte)(m + 1);  			data <<= 1;  			mask <<= 1;  			if (dc.ToArgb () != Color.White.ToArgb ())  				data |= 1;  			if (mc.ToArgb () != Color.White.ToArgb ())  				mask |= 1;  		}  		if (data != 0 || mask != 0) {  			ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  			ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  		}  	}  	if (wdh != 0)  		xdata [idx] = wdh;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  	byte wdh = 0;  	for (int k = 0; k < height; k++) {  		UInt16 data = 0;  		UInt16 mask = 0;  		for (int m = 0; m < 16; m++) {  			Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  			Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  			if (dc.ToArgb () != Color.White.ToArgb ())  				if (wdh < m + 1)  					wdh = (byte)(m + 1);  			data <<= 1;  			mask <<= 1;  			if (dc.ToArgb () != Color.White.ToArgb ())  				data |= 1;  			if (mc.ToArgb () != Color.White.ToArgb ())  				mask |= 1;  		}  		if (data != 0 || mask != 0) {  			ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  			ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  		}  	}  	if (wdh != 0)  		xdata [idx] = wdh;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  	byte wdh = 0;  	for (int k = 0; k < height; k++) {  		UInt16 data = 0;  		UInt16 mask = 0;  		for (int m = 0; m < 16; m++) {  			Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  			Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  			if (dc.ToArgb () != Color.White.ToArgb ())  				if (wdh < m + 1)  					wdh = (byte)(m + 1);  			data <<= 1;  			mask <<= 1;  			if (dc.ToArgb () != Color.White.ToArgb ())  				data |= 1;  			if (mc.ToArgb () != Color.White.ToArgb ())  				mask |= 1;  		}  		if (data != 0 || mask != 0) {  			ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  			ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  		}  	}  	if (wdh != 0)  		xdata [idx] = wdh;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  	byte wdh = 0;  	for (int k = 0; k < height; k++) {  		UInt16 data = 0;  		UInt16 mask = 0;  		for (int m = 0; m < 16; m++) {  			Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  			Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  			if (dc.ToArgb () != Color.White.ToArgb ())  				if (wdh < m + 1)  					wdh = (byte)(m + 1);  			data <<= 1;  			mask <<= 1;  			if (dc.ToArgb () != Color.White.ToArgb ())  				data |= 1;  			if (mc.ToArgb () != Color.White.ToArgb ())  				mask |= 1;  		}  		if (data != 0 || mask != 0) {  			ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  			ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  		}  	}  	if (wdh != 0)  		xdata [idx] = wdh;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  	byte wdh = 0;  	for (int k = 0; k < height; k++) {  		UInt16 data = 0;  		UInt16 mask = 0;  		for (int m = 0; m < 16; m++) {  			Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  			Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  			if (dc.ToArgb () != Color.White.ToArgb ())  				if (wdh < m + 1)  					wdh = (byte)(m + 1);  			data <<= 1;  			mask <<= 1;  			if (dc.ToArgb () != Color.White.ToArgb ())  				data |= 1;  			if (mc.ToArgb () != Color.White.ToArgb ())  				mask |= 1;  		}  		if (data != 0 || mask != 0) {  			ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  			ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  		}  	}  	if (wdh != 0)  		xdata [idx] = wdh;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  	byte wdh = 0;  	for (int k = 0; k < height; k++) {  		UInt16 data = 0;  		UInt16 mask = 0;  		for (int m = 0; m < 16; m++) {  			Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  			Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  			if (dc.ToArgb () != Color.White.ToArgb ())  				if (wdh < m + 1)  					wdh = (byte)(m + 1);  			data <<= 1;  			mask <<= 1;  			if (dc.ToArgb () != Color.White.ToArgb ())  				data |= 1;  			if (mc.ToArgb () != Color.White.ToArgb ())  				mask |= 1;  		}  		if (data != 0 || mask != 0) {  			ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  			ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  		}  	}  	if (wdh != 0)  		xdata [idx] = wdh;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  	byte wdh = 0;  	for (int k = 0; k < height; k++) {  		UInt16 data = 0;  		UInt16 mask = 0;  		for (int m = 0; m < 16; m++) {  			Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  			Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  			if (dc.ToArgb () != Color.White.ToArgb ())  				if (wdh < m + 1)  					wdh = (byte)(m + 1);  			data <<= 1;  			mask <<= 1;  			if (dc.ToArgb () != Color.White.ToArgb ())  				data |= 1;  			if (mc.ToArgb () != Color.White.ToArgb ())  				mask |= 1;  		}  		if (data != 0 || mask != 0) {  			ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  			ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  		}  	}  	if (wdh != 0)  		xdata [idx] = wdh;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  	byte wdh = 0;  	for (int k = 0; k < height; k++) {  		UInt16 data = 0;  		UInt16 mask = 0;  		for (int m = 0; m < 16; m++) {  			Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  			Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  			if (dc.ToArgb () != Color.White.ToArgb ())  				if (wdh < m + 1)  					wdh = (byte)(m + 1);  			data <<= 1;  			mask <<= 1;  			if (dc.ToArgb () != Color.White.ToArgb ())  				data |= 1;  			if (mc.ToArgb () != Color.White.ToArgb ())  				mask |= 1;  		}  		if (data != 0 || mask != 0) {  			ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  			ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  		}  	}  	if (wdh != 0)  		xdata [idx] = wdh;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  	byte wdh = 0;  	for (int k = 0; k < height; k++) {  		UInt16 data = 0;  		UInt16 mask = 0;  		for (int m = 0; m < 16; m++) {  			Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  			Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  			if (dc.ToArgb () != Color.White.ToArgb ())  				if (wdh < m + 1)  					wdh = (byte)(m + 1);  			data <<= 1;  			mask <<= 1;  			if (dc.ToArgb () != Color.White.ToArgb ())  				data |= 1;  			if (mc.ToArgb () != Color.White.ToArgb ())  				mask |= 1;  		}  		if (data != 0 || mask != 0) {  			ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  			ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  		}  	}  	if (wdh != 0)  		xdata [idx] = wdh;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  	byte wdh = 0;  	for (int k = 0; k < height; k++) {  		UInt16 data = 0;  		UInt16 mask = 0;  		for (int m = 0; m < 16; m++) {  			Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  			Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  			if (dc.ToArgb () != Color.White.ToArgb ())  				if (wdh < m + 1)  					wdh = (byte)(m + 1);  			data <<= 1;  			mask <<= 1;  			if (dc.ToArgb () != Color.White.ToArgb ())  				data |= 1;  			if (mc.ToArgb () != Color.White.ToArgb ())  				mask |= 1;  		}  		if (data != 0 || mask != 0) {  			ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  			ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  		}  	}  	if (wdh != 0)  		xdata [idx] = wdh;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = i * 8 + j;  	Rectangle rct = new Rectangle (j * 32' i * height' 32' height);  	byte wdh = 0;  	for (int k = 0; k < height; k++) {  		UInt16 data = 0;  		UInt16 mask = 0;  		for (int m = 0; m < 16; m++) {  			Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  			Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  			if (dc.ToArgb () != Color.White.ToArgb ())  				if (wdh < m + 1)  					wdh = (byte)(m + 1);  			data <<= 1;  			mask <<= 1;  			if (dc.ToArgb () != Color.White.ToArgb ())  				data |= 1;  			if (mc.ToArgb () != Color.White.ToArgb ())  				mask |= 1;  		}  		if (data != 0 || mask != 0) {  			ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  			ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  		}  	}  	if (wdh != 0)  		xdata [idx] = wdh;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int k = 0; k < height; k++) {  	UInt16 data = 0;  	UInt16 mask = 0;  	for (int m = 0; m < 16; m++) {  		Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  		Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  		if (dc.ToArgb () != Color.White.ToArgb ())  			if (wdh < m + 1)  				wdh = (byte)(m + 1);  		data <<= 1;  		mask <<= 1;  		if (dc.ToArgb () != Color.White.ToArgb ())  			data |= 1;  		if (mc.ToArgb () != Color.White.ToArgb ())  			mask |= 1;  	}  	if (data != 0 || mask != 0) {  		ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  		ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int k = 0; k < height; k++) {  	UInt16 data = 0;  	UInt16 mask = 0;  	for (int m = 0; m < 16; m++) {  		Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  		Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  		if (dc.ToArgb () != Color.White.ToArgb ())  			if (wdh < m + 1)  				wdh = (byte)(m + 1);  		data <<= 1;  		mask <<= 1;  		if (dc.ToArgb () != Color.White.ToArgb ())  			data |= 1;  		if (mc.ToArgb () != Color.White.ToArgb ())  			mask |= 1;  	}  	if (data != 0 || mask != 0) {  		ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  		ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int k = 0; k < height; k++) {  	UInt16 data = 0;  	UInt16 mask = 0;  	for (int m = 0; m < 16; m++) {  		Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  		Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  		if (dc.ToArgb () != Color.White.ToArgb ())  			if (wdh < m + 1)  				wdh = (byte)(m + 1);  		data <<= 1;  		mask <<= 1;  		if (dc.ToArgb () != Color.White.ToArgb ())  			data |= 1;  		if (mc.ToArgb () != Color.White.ToArgb ())  			mask |= 1;  	}  	if (data != 0 || mask != 0) {  		ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  		ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int k = 0; k < height; k++) {  	UInt16 data = 0;  	UInt16 mask = 0;  	for (int m = 0; m < 16; m++) {  		Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  		Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  		if (dc.ToArgb () != Color.White.ToArgb ())  			if (wdh < m + 1)  				wdh = (byte)(m + 1);  		data <<= 1;  		mask <<= 1;  		if (dc.ToArgb () != Color.White.ToArgb ())  			data |= 1;  		if (mc.ToArgb () != Color.White.ToArgb ())  			mask |= 1;  	}  	if (data != 0 || mask != 0) {  		ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  		ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int k = 0; k < height; k++) {  	UInt16 data = 0;  	UInt16 mask = 0;  	for (int m = 0; m < 16; m++) {  		Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  		Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  		if (dc.ToArgb () != Color.White.ToArgb ())  			if (wdh < m + 1)  				wdh = (byte)(m + 1);  		data <<= 1;  		mask <<= 1;  		if (dc.ToArgb () != Color.White.ToArgb ())  			data |= 1;  		if (mc.ToArgb () != Color.White.ToArgb ())  			mask |= 1;  	}  	if (data != 0 || mask != 0) {  		ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  		ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int k = 0; k < height; k++) {  	UInt16 data = 0;  	UInt16 mask = 0;  	for (int m = 0; m < 16; m++) {  		Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  		Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  		if (dc.ToArgb () != Color.White.ToArgb ())  			if (wdh < m + 1)  				wdh = (byte)(m + 1);  		data <<= 1;  		mask <<= 1;  		if (dc.ToArgb () != Color.White.ToArgb ())  			data |= 1;  		if (mc.ToArgb () != Color.White.ToArgb ())  			mask |= 1;  	}  	if (data != 0 || mask != 0) {  		ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  		ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int k = 0; k < height; k++) {  	UInt16 data = 0;  	UInt16 mask = 0;  	for (int m = 0; m < 16; m++) {  		Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  		Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  		if (dc.ToArgb () != Color.White.ToArgb ())  			if (wdh < m + 1)  				wdh = (byte)(m + 1);  		data <<= 1;  		mask <<= 1;  		if (dc.ToArgb () != Color.White.ToArgb ())  			data |= 1;  		if (mc.ToArgb () != Color.White.ToArgb ())  			mask |= 1;  	}  	if (data != 0 || mask != 0) {  		ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  		ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int k = 0; k < height; k++) {  	UInt16 data = 0;  	UInt16 mask = 0;  	for (int m = 0; m < 16; m++) {  		Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  		Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  		if (dc.ToArgb () != Color.White.ToArgb ())  			if (wdh < m + 1)  				wdh = (byte)(m + 1);  		data <<= 1;  		mask <<= 1;  		if (dc.ToArgb () != Color.White.ToArgb ())  			data |= 1;  		if (mc.ToArgb () != Color.White.ToArgb ())  			mask |= 1;  	}  	if (data != 0 || mask != 0) {  		ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  		ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  	}  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int m = 0; m < 16; m++) {  	Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  	Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  	if (dc.ToArgb () != Color.White.ToArgb ())  		if (wdh < m + 1)  			wdh = (byte)(m + 1);  	data <<= 1;  	mask <<= 1;  	if (dc.ToArgb () != Color.White.ToArgb ())  		data |= 1;  	if (mc.ToArgb () != Color.White.ToArgb ())  		mask |= 1;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int m = 0; m < 16; m++) {  	Color dc = bmp.GetPixel (rct.X + m' rct.Y + k);  	Color mc = bmp.GetPixel (rct.X + 16 + m' rct.Y + k);  	if (dc.ToArgb () != Color.White.ToArgb ())  		if (wdh < m + 1)  			wdh = (byte)(m + 1);  	data <<= 1;  	mask <<= 1;  	if (dc.ToArgb () != Color.White.ToArgb ())  		data |= 1;  	if (mc.ToArgb () != Color.White.ToArgb ())  		mask |= 1;  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: if (data != 0 || mask != 0) {  	ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  	ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: if (data != 0 || mask != 0) {  	ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  	ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: if (data != 0 || mask != 0) {  	ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  	ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: if (data != 0 || mask != 0) {  	ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  	ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: if (data != 0 || mask != 0) {  	ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  	ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: if (data != 0 || mask != 0) {  	ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  	ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  }  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: ByteHelper.WRITE_BE (data' xdata' 128 + idx * height * 4 + (k * 4));  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  
Magic Number,bassru,BCharset,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: ByteHelper.WRITE_BE (mask' xdata' 130 + idx * height * 4 + (k * 4));  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,prepare,The following statement contains a magic number: while (ofs < skipTbl) {  	blocksizes.Add (ByteHelper.READ_UINT16_LE (data' ofs));  	ofs += 2;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,prepare,The following statement contains a magic number: ofs += 2;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,prepare,The following statement contains a magic number: for (int i = 0; i < blocksizes.Count + 1; i++) {  	int bc = 32;  	if (i == blocksizes.Count) {  		lastblksz = txtData - ofs;  		bc = lastblksz;  	}  	for (int j = 0; j < bc; j++) {  		UInt16 b = data [ofs];  		ofs++;  		if ((b & 0x80) != 0) {  			b &= 0x7F;  			b <<= 3;  		}  		skipBytes.Add (b);  	}  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,prepare,The following statement contains a magic number: for (int i = 0; i < blocksizes.Count + 1; i++) {  	int bc = 32;  	if (i == blocksizes.Count) {  		lastblksz = txtData - ofs;  		bc = lastblksz;  	}  	for (int j = 0; j < bc; j++) {  		UInt16 b = data [ofs];  		ofs++;  		if ((b & 0x80) != 0) {  			b &= 0x7F;  			b <<= 3;  		}  		skipBytes.Add (b);  	}  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,prepare,The following statement contains a magic number: for (int j = 0; j < bc; j++) {  	UInt16 b = data [ofs];  	ofs++;  	if ((b & 0x80) != 0) {  		b &= 0x7F;  		b <<= 3;  	}  	skipBytes.Add (b);  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,prepare,The following statement contains a magic number: if ((b & 0x80) != 0) {  	b &= 0x7F;  	b <<= 3;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,prepare,The following statement contains a magic number: b <<= 3;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getBit,The following statement contains a magic number: if (bit == 0) {  	ofs++;  	bit = 7;  }  else  	bit--;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getBit,The following statement contains a magic number: bit = 7;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getChar,The following statement contains a magic number: while (true) {  	if (getBit (ref ofs' ref bit))  		pos = hftbl [pos' 1];  	else  		pos = hftbl [pos' 0];  	if (hftbl [pos' 0] == 0 && hftbl [pos' 1] == 0)  		return HuffText.replaceChar ((char)hftbl [pos' 2]);  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getChar,The following statement contains a magic number: if (hftbl [pos' 0] == 0 && hftbl [pos' 1] == 0)  	return HuffText.replaceChar ((char)hftbl [pos' 2]);  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getChar,The following statement contains a magic number: return HuffText.replaceChar ((char)hftbl [pos' 2]);  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getText,The following statement contains a magic number: for (int i = 0; i < N; i++)  	ofs += skipBytes [block * 32 + i];  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getText,The following statement contains a magic number: ofs += skipBytes [block * 32 + i];  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getText,The following statement contains a magic number: ofs >>= 2;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getText,The following statement contains a magic number: bit ^= 3;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getCharCode,The following statement contains a magic number: for (int i = 0; i < hftbl.Length / 3; i++)  	if (hftbl [i' 2] == c && hftbl [i' 0] == 0 && hftbl [i' 1] == 0) {  		int pos = i;  		uint res = 0;  		bits = 0;  		while (pos != 0) {  			bool fnd = false;  			for (int j = 0; j < hftbl.Length / 3 && !fnd; j++)  				if (hftbl [j' 0] == pos || hftbl [j' 1] == pos) {  					fnd = true;  					uint val = (uint)(hftbl [j' 1] == pos ? 1 : 0);  					if (val == 1)  						res |= ((uint)1 << bits);  					bits++;  					pos = j;  				}  		}  		return res;  	}  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getCharCode,The following statement contains a magic number: for (int i = 0; i < hftbl.Length / 3; i++)  	if (hftbl [i' 2] == c && hftbl [i' 0] == 0 && hftbl [i' 1] == 0) {  		int pos = i;  		uint res = 0;  		bits = 0;  		while (pos != 0) {  			bool fnd = false;  			for (int j = 0; j < hftbl.Length / 3 && !fnd; j++)  				if (hftbl [j' 0] == pos || hftbl [j' 1] == pos) {  					fnd = true;  					uint val = (uint)(hftbl [j' 1] == pos ? 1 : 0);  					if (val == 1)  						res |= ((uint)1 << bits);  					bits++;  					pos = j;  				}  		}  		return res;  	}  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getCharCode,The following statement contains a magic number: for (int i = 0; i < hftbl.Length / 3; i++)  	if (hftbl [i' 2] == c && hftbl [i' 0] == 0 && hftbl [i' 1] == 0) {  		int pos = i;  		uint res = 0;  		bits = 0;  		while (pos != 0) {  			bool fnd = false;  			for (int j = 0; j < hftbl.Length / 3 && !fnd; j++)  				if (hftbl [j' 0] == pos || hftbl [j' 1] == pos) {  					fnd = true;  					uint val = (uint)(hftbl [j' 1] == pos ? 1 : 0);  					if (val == 1)  						res |= ((uint)1 << bits);  					bits++;  					pos = j;  				}  		}  		return res;  	}  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getCharCode,The following statement contains a magic number: if (hftbl [i' 2] == c && hftbl [i' 0] == 0 && hftbl [i' 1] == 0) {  	int pos = i;  	uint res = 0;  	bits = 0;  	while (pos != 0) {  		bool fnd = false;  		for (int j = 0; j < hftbl.Length / 3 && !fnd; j++)  			if (hftbl [j' 0] == pos || hftbl [j' 1] == pos) {  				fnd = true;  				uint val = (uint)(hftbl [j' 1] == pos ? 1 : 0);  				if (val == 1)  					res |= ((uint)1 << bits);  				bits++;  				pos = j;  			}  	}  	return res;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getCharCode,The following statement contains a magic number: if (hftbl [i' 2] == c && hftbl [i' 0] == 0 && hftbl [i' 1] == 0) {  	int pos = i;  	uint res = 0;  	bits = 0;  	while (pos != 0) {  		bool fnd = false;  		for (int j = 0; j < hftbl.Length / 3 && !fnd; j++)  			if (hftbl [j' 0] == pos || hftbl [j' 1] == pos) {  				fnd = true;  				uint val = (uint)(hftbl [j' 1] == pos ? 1 : 0);  				if (val == 1)  					res |= ((uint)1 << bits);  				bits++;  				pos = j;  			}  	}  	return res;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getCharCode,The following statement contains a magic number: while (pos != 0) {  	bool fnd = false;  	for (int j = 0; j < hftbl.Length / 3 && !fnd; j++)  		if (hftbl [j' 0] == pos || hftbl [j' 1] == pos) {  			fnd = true;  			uint val = (uint)(hftbl [j' 1] == pos ? 1 : 0);  			if (val == 1)  				res |= ((uint)1 << bits);  			bits++;  			pos = j;  		}  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,getCharCode,The following statement contains a magic number: for (int j = 0; j < hftbl.Length / 3 && !fnd; j++)  	if (hftbl [j' 0] == pos || hftbl [j' 1] == pos) {  		fnd = true;  		uint val = (uint)(hftbl [j' 1] == pos ? 1 : 0);  		if (val == 1)  			res |= ((uint)1 << bits);  		bits++;  		pos = j;  	}  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,export,The following statement contains a magic number: for (int i = 0; i < blockCount; i++) {  	XmlElement blk = (XmlElement)doc.DocumentElement.AppendChild (doc.CreateElement ("block"));  	blk.Attributes.Append (doc.CreateAttribute ("id")).Value = i.ToString ();  	for (int j = 0; j < (i == blockCount - 1 ? lastblksz : 32); j++) {  		XmlElement t = (XmlElement)blk.AppendChild (doc.CreateElement ("text"));  		t.Attributes.Append (doc.CreateAttribute ("id")).Value = j.ToString ();  		string cmt = "";  		bool isRu = Config.get ().isTextRu (filenum' i' j' ref cmt);  		if (cmt != "" || isRu) {  			t.Attributes.Append (doc.CreateAttribute ("comment")).Value = cmt;  			t.Attributes.Append (doc.CreateAttribute ("mode")).Value = isRu ? "ru" : "en";  		}  		t.AppendChild (doc.CreateTextNode (getText (i' j' isRu)));  	}  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,export,The following statement contains a magic number: for (int j = 0; j < (i == blockCount - 1 ? lastblksz : 32); j++) {  	XmlElement t = (XmlElement)blk.AppendChild (doc.CreateElement ("text"));  	t.Attributes.Append (doc.CreateAttribute ("id")).Value = j.ToString ();  	string cmt = "";  	bool isRu = Config.get ().isTextRu (filenum' i' j' ref cmt);  	if (cmt != "" || isRu) {  		t.Attributes.Append (doc.CreateAttribute ("comment")).Value = cmt;  		t.Attributes.Append (doc.CreateAttribute ("mode")).Value = isRu ? "ru" : "en";  	}  	t.AppendChild (doc.CreateTextNode (getText (i' j' isRu)));  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,addBits,The following statement contains a magic number: while (bitpos >= 8) {  	int bpp = 0;  	while (bitpos - bpp > 8)  		bpp++;  	byte sub = (byte)(bitbuf >> (bpp));  	bitpos -= 8;  	txtdata.Add (sub);  	bitbuf &= (((uint)1 << bitpos) - 1);  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,addBits,The following statement contains a magic number: while (bitpos >= 8) {  	int bpp = 0;  	while (bitpos - bpp > 8)  		bpp++;  	byte sub = (byte)(bitbuf >> (bpp));  	bitpos -= 8;  	txtdata.Add (sub);  	bitbuf &= (((uint)1 << bitpos) - 1);  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,addBits,The following statement contains a magic number: while (bitpos >= 8) {  	int bpp = 0;  	while (bitpos - bpp > 8)  		bpp++;  	byte sub = (byte)(bitbuf >> (bpp));  	bitpos -= 8;  	txtdata.Add (sub);  	bitbuf &= (((uint)1 << bitpos) - 1);  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,addBits,The following statement contains a magic number: while (bitpos - bpp > 8)  	bpp++;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,addBits,The following statement contains a magic number: bitpos -= 8;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,subOfs,The following statement contains a magic number: if (!block) {  	ppos <<= 2;  	ppos |= ((pbuf / 2) & 0x03);  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,subOfs,The following statement contains a magic number: if (!block) {  	ppos <<= 2;  	ppos |= ((pbuf / 2) & 0x03);  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,subOfs,The following statement contains a magic number: ppos <<= 2;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,subOfs,The following statement contains a magic number: ppos |= ((pbuf / 2) & 0x03);  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,subOfs,The following statement contains a magic number: pos <<= 2;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,subOfs,The following statement contains a magic number: pos |= ((buf / 2) & 0x03);  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,appendText,The following statement contains a magic number: if (bitpos % 2 != 0)  	addBits (ref txtdata' ref bitbuf' ref bitpos' 0' 1);  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,appendText,The following statement contains a magic number: if (N == 31) {  	int bppos = 0;  	int pblk = blk - 1;  	while (pblk >= 0) {  		bppos += bs [pblk];  		pblk--;  	}  	bs [blk] = (ushort)subOfs (bppos' 0' txtdata.Count' bitpos' true);  	bs.Add (0);  	for (int i = 0; i < 32; i++)  		skp.Add (0);  }  else {  	ushort sofs = (ushort)subOfs (ppos' pbit' txtdata.Count' bitpos' false);  	if (sofs > 0x7F)  		while ((sofs & 0x07) != 0) {  			addBits (ref txtdata' ref bitbuf' ref bitpos' 0' 2);  			sofs = (ushort)subOfs (ppos' pbit' txtdata.Count' bitpos' false);  		}  	skp [blk * 32 + N] = sofs;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,appendText,The following statement contains a magic number: if (N == 31) {  	int bppos = 0;  	int pblk = blk - 1;  	while (pblk >= 0) {  		bppos += bs [pblk];  		pblk--;  	}  	bs [blk] = (ushort)subOfs (bppos' 0' txtdata.Count' bitpos' true);  	bs.Add (0);  	for (int i = 0; i < 32; i++)  		skp.Add (0);  }  else {  	ushort sofs = (ushort)subOfs (ppos' pbit' txtdata.Count' bitpos' false);  	if (sofs > 0x7F)  		while ((sofs & 0x07) != 0) {  			addBits (ref txtdata' ref bitbuf' ref bitpos' 0' 2);  			sofs = (ushort)subOfs (ppos' pbit' txtdata.Count' bitpos' false);  		}  	skp [blk * 32 + N] = sofs;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,appendText,The following statement contains a magic number: if (N == 31) {  	int bppos = 0;  	int pblk = blk - 1;  	while (pblk >= 0) {  		bppos += bs [pblk];  		pblk--;  	}  	bs [blk] = (ushort)subOfs (bppos' 0' txtdata.Count' bitpos' true);  	bs.Add (0);  	for (int i = 0; i < 32; i++)  		skp.Add (0);  }  else {  	ushort sofs = (ushort)subOfs (ppos' pbit' txtdata.Count' bitpos' false);  	if (sofs > 0x7F)  		while ((sofs & 0x07) != 0) {  			addBits (ref txtdata' ref bitbuf' ref bitpos' 0' 2);  			sofs = (ushort)subOfs (ppos' pbit' txtdata.Count' bitpos' false);  		}  	skp [blk * 32 + N] = sofs;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,appendText,The following statement contains a magic number: if (N == 31) {  	int bppos = 0;  	int pblk = blk - 1;  	while (pblk >= 0) {  		bppos += bs [pblk];  		pblk--;  	}  	bs [blk] = (ushort)subOfs (bppos' 0' txtdata.Count' bitpos' true);  	bs.Add (0);  	for (int i = 0; i < 32; i++)  		skp.Add (0);  }  else {  	ushort sofs = (ushort)subOfs (ppos' pbit' txtdata.Count' bitpos' false);  	if (sofs > 0x7F)  		while ((sofs & 0x07) != 0) {  			addBits (ref txtdata' ref bitbuf' ref bitpos' 0' 2);  			sofs = (ushort)subOfs (ppos' pbit' txtdata.Count' bitpos' false);  		}  	skp [blk * 32 + N] = sofs;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,appendText,The following statement contains a magic number: for (int i = 0; i < 32; i++)  	skp.Add (0);  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,appendText,The following statement contains a magic number: if (sofs > 0x7F)  	while ((sofs & 0x07) != 0) {  		addBits (ref txtdata' ref bitbuf' ref bitpos' 0' 2);  		sofs = (ushort)subOfs (ppos' pbit' txtdata.Count' bitpos' false);  	}  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,appendText,The following statement contains a magic number: while ((sofs & 0x07) != 0) {  	addBits (ref txtdata' ref bitbuf' ref bitpos' 0' 2);  	sofs = (ushort)subOfs (ppos' pbit' txtdata.Count' bitpos' false);  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,appendText,The following statement contains a magic number: addBits (ref txtdata' ref bitbuf' ref bitpos' 0' 2);  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,appendText,The following statement contains a magic number: skp [blk * 32 + N] = sofs;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < 32; i++)  	skp.Add (0);  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < blockCount; i++) {  	XmlNode n = findBlock (blockroot' i);  	int bc = 32;  	if (i == blockCount - 1)  		bc = lastblksz;  	for (int N = 0; N < bc; N++) {  		XmlNode t = findText (n' N);  		string cmt = ""' md = "";  		if (t.Attributes ["comment"] != null)  			cmt = t.Attributes ["comment"].Value;  		if (t.Attributes ["mode"] != null)  			md = t.Attributes ["mode"].Value;  		if (cmt != "" || md != "") {  			string cm = "";  			bool isru = Config.get ().isTextRu (filenum' i' N' ref cm);  			if (cm != cmt || (isru && md == "en") || (!isru && md == "ru")) {  				if (md == "ru")  					isru = true;  				if (md == "en")  					isru = false;  				Config.get ().setTextInfo (filenum' (uint)i' (uint)N' isru' cmt);  			}  		}  		string val = "";  		foreach (XmlNode x in t.ChildNodes)  			if (x.NodeType == XmlNodeType.Text)  				val = x.Value;  		val = fromRuConv (val);  		appendText (ref bs' ref skp' ref txtdata' ref bitbuf' ref bitpos' i' N' val);  	}  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: if (bitpos > 0)  	addBits (ref txtdata' ref bitbuf' ref bitpos' 0' 8 - bitpos);  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: addBits (ref txtdata' ref bitbuf' ref bitpos' 0' 8 - bitpos);  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int i = 0; i < blockCount - 1; i++) {  	ByteHelper.WRITE_LE (bs [i]' res' ofs);  	ofs += 2;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: ofs += 2;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 32 * blockCount - 32 + lastblksz; j++) {  	UInt16 r = skp [j];  	if (r > 0x7F) {  		r >>= 3;  		r |= 0x80;  	}  	res [ofs] = (byte)r;  	ofs++;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 32 * blockCount - 32 + lastblksz; j++) {  	UInt16 r = skp [j];  	if (r > 0x7F) {  		r >>= 3;  		r |= 0x80;  	}  	res [ofs] = (byte)r;  	ofs++;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: for (int j = 0; j < 32 * blockCount - 32 + lastblksz; j++) {  	UInt16 r = skp [j];  	if (r > 0x7F) {  		r >>= 3;  		r |= 0x80;  	}  	res [ofs] = (byte)r;  	ofs++;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: if (r > 0x7F) {  	r >>= 3;  	r |= 0x80;  }  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: r >>= 3;  
Magic Number,bassru,BText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\Text.cs,import,The following statement contains a magic number: ByteHelper.WRITE_LE (ofs' res' 2);  
Magic Number,bassru.ResView,ImageView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ImageView.cs,setObject,The following statement contains a magic number: checkBox2.Checked = (img.imgMode & 2) != 0;  
Magic Number,bassru.ResView,ImageView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ImageView.cs,repaint,The following statement contains a magic number: try {  	Bitmap bmp = img.getBmp ((int)numericUpDown1.Value' (int)numericUpDown2.Value' getSelectedPalette (comboBox1)' (checkBox1.Checked ? 1 : 0) + (checkBox2.Checked ? 2 : 0));  	pictureBox1.Image = bmp;  	pictureBox1.Width = bmp.Width;  	pictureBox1.Height = bmp.Height;  }  catch (Exception ex) {  	MainForm.clearResource (ex);  }  
Magic Number,bassru.ResView,ImageView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ImageView.cs,checkBox1_CheckedChanged,The following statement contains a magic number: if (checkBox1.Checked) {  	numericUpDown1.Value = (int)(numericUpDown1.Value / 16);  	numericUpDown2.Value = (int)(numericUpDown2.Value / 8);  }  else {  	numericUpDown1.Value *= 16;  	numericUpDown2.Value *= 8;  }  
Magic Number,bassru.ResView,ImageView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ImageView.cs,checkBox1_CheckedChanged,The following statement contains a magic number: if (checkBox1.Checked) {  	numericUpDown1.Value = (int)(numericUpDown1.Value / 16);  	numericUpDown2.Value = (int)(numericUpDown2.Value / 8);  }  else {  	numericUpDown1.Value *= 16;  	numericUpDown2.Value *= 8;  }  
Magic Number,bassru.ResView,ImageView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ImageView.cs,checkBox1_CheckedChanged,The following statement contains a magic number: if (checkBox1.Checked) {  	numericUpDown1.Value = (int)(numericUpDown1.Value / 16);  	numericUpDown2.Value = (int)(numericUpDown2.Value / 8);  }  else {  	numericUpDown1.Value *= 16;  	numericUpDown2.Value *= 8;  }  
Magic Number,bassru.ResView,ImageView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ImageView.cs,checkBox1_CheckedChanged,The following statement contains a magic number: if (checkBox1.Checked) {  	numericUpDown1.Value = (int)(numericUpDown1.Value / 16);  	numericUpDown2.Value = (int)(numericUpDown2.Value / 8);  }  else {  	numericUpDown1.Value *= 16;  	numericUpDown2.Value *= 8;  }  
Magic Number,bassru.ResView,ImageView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ImageView.cs,checkBox1_CheckedChanged,The following statement contains a magic number: numericUpDown1.Value = (int)(numericUpDown1.Value / 16);  
Magic Number,bassru.ResView,ImageView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ImageView.cs,checkBox1_CheckedChanged,The following statement contains a magic number: numericUpDown2.Value = (int)(numericUpDown2.Value / 8);  
Magic Number,bassru.ResView,ImageView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ImageView.cs,checkBox1_CheckedChanged,The following statement contains a magic number: numericUpDown1.Value *= 16;  
Magic Number,bassru.ResView,ImageView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ImageView.cs,checkBox1_CheckedChanged,The following statement contains a magic number: numericUpDown2.Value *= 8;  
Magic Number,bassru.ResView,SequenceView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SequenceView.cs,setObject,The following statement contains a magic number: numericUpDown1.Value = 50;  
Magic Number,bassru.ResView,SequenceView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SequenceView.cs,setObject,The following statement contains a magic number: timer1.Interval = 500;  
Magic Number,bassru.ResView,SequenceView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SequenceView.cs,makeBitmap,The following statement contains a magic number: try {  	sbmp = new Bitmap (320' BResource.GAME_SCREEN_HEIGHT);  	Graphics g = Graphics.FromImage (sbmp);  	g.DrawImage (rbmp' new Rectangle (0' 0' 320' BResource.GAME_SCREEN_HEIGHT)' 0' BResource.GAME_SCREEN_HEIGHT * frm' 320' BResource.GAME_SCREEN_HEIGHT' GraphicsUnit.Pixel);  }  catch (Exception ex) {  	MainForm.clearResource (ex);  }  
Magic Number,bassru.ResView,SequenceView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SequenceView.cs,makeBitmap,The following statement contains a magic number: try {  	sbmp = new Bitmap (320' BResource.GAME_SCREEN_HEIGHT);  	Graphics g = Graphics.FromImage (sbmp);  	g.DrawImage (rbmp' new Rectangle (0' 0' 320' BResource.GAME_SCREEN_HEIGHT)' 0' BResource.GAME_SCREEN_HEIGHT * frm' 320' BResource.GAME_SCREEN_HEIGHT' GraphicsUnit.Pixel);  }  catch (Exception ex) {  	MainForm.clearResource (ex);  }  
Magic Number,bassru.ResView,SequenceView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SequenceView.cs,makeBitmap,The following statement contains a magic number: try {  	sbmp = new Bitmap (320' BResource.GAME_SCREEN_HEIGHT);  	Graphics g = Graphics.FromImage (sbmp);  	g.DrawImage (rbmp' new Rectangle (0' 0' 320' BResource.GAME_SCREEN_HEIGHT)' 0' BResource.GAME_SCREEN_HEIGHT * frm' 320' BResource.GAME_SCREEN_HEIGHT' GraphicsUnit.Pixel);  }  catch (Exception ex) {  	MainForm.clearResource (ex);  }  
Magic Number,bassru.ResView,SequenceView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SequenceView.cs,makeBitmap,The following statement contains a magic number: sbmp = new Bitmap (320' BResource.GAME_SCREEN_HEIGHT);  
Magic Number,bassru.ResView,SequenceView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SequenceView.cs,makeBitmap,The following statement contains a magic number: g.DrawImage (rbmp' new Rectangle (0' 0' 320' BResource.GAME_SCREEN_HEIGHT)' 0' BResource.GAME_SCREEN_HEIGHT * frm' 320' BResource.GAME_SCREEN_HEIGHT' GraphicsUnit.Pixel);  
Magic Number,bassru.ResView,SequenceView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SequenceView.cs,makeBitmap,The following statement contains a magic number: g.DrawImage (rbmp' new Rectangle (0' 0' 320' BResource.GAME_SCREEN_HEIGHT)' 0' BResource.GAME_SCREEN_HEIGHT * frm' 320' BResource.GAME_SCREEN_HEIGHT' GraphicsUnit.Pixel);  
Magic Number,bassru.ResView,SequenceView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SequenceView.cs,numericUpDown1_ValueChanged,The following statement contains a magic number: timer1.Interval = ((101 - (int)numericUpDown1.Value) * 10);  
Magic Number,bassru.ResView,SequenceView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SequenceView.cs,numericUpDown1_ValueChanged,The following statement contains a magic number: timer1.Interval = ((101 - (int)numericUpDown1.Value) * 10);  
Magic Number,bassru.ResView,SpritesView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SpritesView.cs,setObject,The following statement contains a magic number: numericUpDown1.Value = 50;  
Magic Number,bassru.ResView,SpritesView,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\SpritesView.cs,setObject,The following statement contains a magic number: timer1.Interval = 500;  
Magic Number,bassru.ResView,TextViewcs,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\TextViewcs.cs,TextViewcs,The following statement contains a magic number: fillC2 (32);  
Magic Number,bassru.ResView,TextViewcs,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\TextViewcs.cs,comboBox1_SelectedIndexChanged,The following statement contains a magic number: if (sender == comboBox1)  	fillC2 (blk == txt.blockCount - 1 ? txt.lastBlockSize : 32);  
Magic Number,bassru.ResView,TextViewcs,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\TextViewcs.cs,comboBox1_SelectedIndexChanged,The following statement contains a magic number: fillC2 (blk == txt.blockCount - 1 ? txt.lastBlockSize : 32);  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: try {  	if (pal != null)  		cols = pal.getPal (checkBox1.Checked' checkBox2.Checked' checkBox3.Checked);  	e.Graphics.FillRectangle (new SolidBrush (Color.Black)' e.ClipRectangle);  	int minrect = e.ClipRectangle.Width / 16;  	if (e.ClipRectangle.Height / 16 < minrect)  		minrect = e.ClipRectangle.Height / 16;  	Rectangle rct = new Rectangle (0' 0' minrect' minrect);  	for (int i = 0; i < 16; i++) {  		for (int j = 0; j < 16; j++) {  			Color c = pal == null ? Color.Black : cols [i * 16 + j];  			e.Graphics.FillRectangle (new SolidBrush (c)' rct);  			rct.Offset (minrect' 0);  		}  		rct.Offset (-rct.X' minrect);  	}  }  catch (Exception ex) {  	MainForm.clearResource (ex);  }  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: try {  	if (pal != null)  		cols = pal.getPal (checkBox1.Checked' checkBox2.Checked' checkBox3.Checked);  	e.Graphics.FillRectangle (new SolidBrush (Color.Black)' e.ClipRectangle);  	int minrect = e.ClipRectangle.Width / 16;  	if (e.ClipRectangle.Height / 16 < minrect)  		minrect = e.ClipRectangle.Height / 16;  	Rectangle rct = new Rectangle (0' 0' minrect' minrect);  	for (int i = 0; i < 16; i++) {  		for (int j = 0; j < 16; j++) {  			Color c = pal == null ? Color.Black : cols [i * 16 + j];  			e.Graphics.FillRectangle (new SolidBrush (c)' rct);  			rct.Offset (minrect' 0);  		}  		rct.Offset (-rct.X' minrect);  	}  }  catch (Exception ex) {  	MainForm.clearResource (ex);  }  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: try {  	if (pal != null)  		cols = pal.getPal (checkBox1.Checked' checkBox2.Checked' checkBox3.Checked);  	e.Graphics.FillRectangle (new SolidBrush (Color.Black)' e.ClipRectangle);  	int minrect = e.ClipRectangle.Width / 16;  	if (e.ClipRectangle.Height / 16 < minrect)  		minrect = e.ClipRectangle.Height / 16;  	Rectangle rct = new Rectangle (0' 0' minrect' minrect);  	for (int i = 0; i < 16; i++) {  		for (int j = 0; j < 16; j++) {  			Color c = pal == null ? Color.Black : cols [i * 16 + j];  			e.Graphics.FillRectangle (new SolidBrush (c)' rct);  			rct.Offset (minrect' 0);  		}  		rct.Offset (-rct.X' minrect);  	}  }  catch (Exception ex) {  	MainForm.clearResource (ex);  }  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: try {  	if (pal != null)  		cols = pal.getPal (checkBox1.Checked' checkBox2.Checked' checkBox3.Checked);  	e.Graphics.FillRectangle (new SolidBrush (Color.Black)' e.ClipRectangle);  	int minrect = e.ClipRectangle.Width / 16;  	if (e.ClipRectangle.Height / 16 < minrect)  		minrect = e.ClipRectangle.Height / 16;  	Rectangle rct = new Rectangle (0' 0' minrect' minrect);  	for (int i = 0; i < 16; i++) {  		for (int j = 0; j < 16; j++) {  			Color c = pal == null ? Color.Black : cols [i * 16 + j];  			e.Graphics.FillRectangle (new SolidBrush (c)' rct);  			rct.Offset (minrect' 0);  		}  		rct.Offset (-rct.X' minrect);  	}  }  catch (Exception ex) {  	MainForm.clearResource (ex);  }  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: try {  	if (pal != null)  		cols = pal.getPal (checkBox1.Checked' checkBox2.Checked' checkBox3.Checked);  	e.Graphics.FillRectangle (new SolidBrush (Color.Black)' e.ClipRectangle);  	int minrect = e.ClipRectangle.Width / 16;  	if (e.ClipRectangle.Height / 16 < minrect)  		minrect = e.ClipRectangle.Height / 16;  	Rectangle rct = new Rectangle (0' 0' minrect' minrect);  	for (int i = 0; i < 16; i++) {  		for (int j = 0; j < 16; j++) {  			Color c = pal == null ? Color.Black : cols [i * 16 + j];  			e.Graphics.FillRectangle (new SolidBrush (c)' rct);  			rct.Offset (minrect' 0);  		}  		rct.Offset (-rct.X' minrect);  	}  }  catch (Exception ex) {  	MainForm.clearResource (ex);  }  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: try {  	if (pal != null)  		cols = pal.getPal (checkBox1.Checked' checkBox2.Checked' checkBox3.Checked);  	e.Graphics.FillRectangle (new SolidBrush (Color.Black)' e.ClipRectangle);  	int minrect = e.ClipRectangle.Width / 16;  	if (e.ClipRectangle.Height / 16 < minrect)  		minrect = e.ClipRectangle.Height / 16;  	Rectangle rct = new Rectangle (0' 0' minrect' minrect);  	for (int i = 0; i < 16; i++) {  		for (int j = 0; j < 16; j++) {  			Color c = pal == null ? Color.Black : cols [i * 16 + j];  			e.Graphics.FillRectangle (new SolidBrush (c)' rct);  			rct.Offset (minrect' 0);  		}  		rct.Offset (-rct.X' minrect);  	}  }  catch (Exception ex) {  	MainForm.clearResource (ex);  }  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: if (e.ClipRectangle.Height / 16 < minrect)  	minrect = e.ClipRectangle.Height / 16;  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: if (e.ClipRectangle.Height / 16 < minrect)  	minrect = e.ClipRectangle.Height / 16;  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: minrect = e.ClipRectangle.Height / 16;  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	for (int j = 0; j < 16; j++) {  		Color c = pal == null ? Color.Black : cols [i * 16 + j];  		e.Graphics.FillRectangle (new SolidBrush (c)' rct);  		rct.Offset (minrect' 0);  	}  	rct.Offset (-rct.X' minrect);  }  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	for (int j = 0; j < 16; j++) {  		Color c = pal == null ? Color.Black : cols [i * 16 + j];  		e.Graphics.FillRectangle (new SolidBrush (c)' rct);  		rct.Offset (minrect' 0);  	}  	rct.Offset (-rct.X' minrect);  }  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	for (int j = 0; j < 16; j++) {  		Color c = pal == null ? Color.Black : cols [i * 16 + j];  		e.Graphics.FillRectangle (new SolidBrush (c)' rct);  		rct.Offset (minrect' 0);  	}  	rct.Offset (-rct.X' minrect);  }  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: for (int j = 0; j < 16; j++) {  	Color c = pal == null ? Color.Black : cols [i * 16 + j];  	e.Graphics.FillRectangle (new SolidBrush (c)' rct);  	rct.Offset (minrect' 0);  }  
Magic Number,bassru.ResView,ViewPalette,C:\repos\old-games_game-utilities\Beneath a Steel Sky\ResView\ViewPalette.cs,pictureBox1_Paint,The following statement contains a magic number: for (int j = 0; j < 16; j++) {  	Color c = pal == null ? Color.Black : cols [i * 16 + j];  	e.Graphics.FillRectangle (new SolidBrush (c)' rct);  	rct.Offset (minrect' 0);  }  
Missing Default,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,paletteToolStripMenuItem_Click,The following switch statement is missing a default case: switch (men) {  case "Palette":  	bres = new BPalette (fid' "");  	break;  case "Image":  	bres = new BImage (fid' 320' 200' ""' 0);  	break;  case "Sequence":  	bres = new BSequence (fid' ""' "aqua");  	break;  case "Sprites":  	bres = new BSprites (fid' "");  	break;  case "Charset":  	bres = new BCharset (fid' 8' 0);  	break;  case "Text":  	bres = new BText (fid);  	break;  case "Script":  	bres = new BScripts (fid);  	break;  case "Speech":  	bres = new BSpeech (fid);  	break;  case "Sound":  	bres = new BSound (fid);  	break;  }  
Missing Default,bassru,MainForm,C:\repos\old-games_game-utilities\Beneath a Steel Sky\MainForm.cs,button8_Click,The following switch statement is missing a default case: switch (nd.Name) {  case "load":  	path = nd.Attributes ["path"].Value;  	if (path [path.Length - 1] != '\\')  		path += "\\";  	ScriptProgressForm.get ().progress ("load from " + path);  	button1.PerformClick ();  	Directory.SetCurrentDirectory (cd);  	break;  case "import":  case "export":  	id = uint.Parse (nd.Attributes ["id"].Value);  	fl = nd.Attributes ["file"].Value;  	ScriptProgressForm.get ().progress (nd.Name + " " + id.ToString () + (nd.Name == "import" ? " from " : " to ") + fl);  	fi = Config.get ().findFile (id);  	if (fi.fid == 0)  		throw new ApplicationException ("Unknown file type " + id.ToString ());  	res = BResourceHelper.getResource (fi.node);  	if (nd.Name == "import")  		res.import (fl);  	else  		res.export (fl);  	break;  case "save":  	string pth = nd.Attributes ["path"].Value;  	if (pth [pth.Length - 1] != '\\')  		pth += "\\";  	ScriptProgressForm.get ().progress ("save to " + pth);  	SkyDisk.get ().saveDiskAndDinner (pth + "sky.dsk");  	Directory.SetCurrentDirectory (cd);  	break;  }  
Missing Default,bassru,HuffText,C:\repos\old-games_game-utilities\Beneath a Steel Sky\HuffText.cs,getHuffText,The following switch statement is missing a default case: switch (SkyDisk.get ().getVersion ()) {  case 109:  	return _huffTree_00109;  case 267:  	return _huffTree_00267;  case 228:  	return _huffTree_00288;  case 303:  	return _huffTree_00303;  case 331:  	return _huffTree_00331;  case 348:  	return _huffTree_00348;  case 365:  	return _huffTree_00365;  case 368:  	return _huffTree_00368;  case 372:  	return _huffTree_00372;  }  
