Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,unBand.Cloud.Exporters.EventExporters.Helpers,CSVExporter,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Exporters\EventExporters\Helpers\CSVExporter.cs,,The length of the parameter CHARACTERS_THAT_MUST_BE_QUOTED is 30.
Long Statement,unBand.Cloud.Exporters.EventExporters,GPXExporter,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Exporters\EventExporters\GPXExporter.cs,ExportToFile,The length of the statement  "                var xsiSchemaLocation = XNamespace.Get("http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd http://www.garmin.com/xmlschemas/GpxExtensions/v3 http://www.garmin.com/xmlschemas/GpxExtensionsv3.xsd http://www.garmin.com/xmlschemas/TrackPointExtensionv1.xsd");" is 280.
Long Statement,unBand.Cloud.Exporters.EventExporters,TCXExporter,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Exporters\EventExporters\TCXExporter.cs,ExportToFile,The length of the statement  "                var xsiSchemaLocation = XNamespace.Get("http://www.garmin.com/xmlschemas/TrainingCenterDatabase/v2 http://www.garmin.com/xmlschemas/TrainingCenterDatabasev2.xsd");" is 163.
Long Statement,unBand.Cloud.Exporters.EventExporters,TCXExporter,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Exporters\EventExporters\TCXExporter.cs,ExportToFile,The length of the statement  "                        xroot.Element(nsRoot + "Activities").Element(nsRoot + "Activity").Element(nsRoot + "Lap").Element(nsRoot + "Track").Add(" is 120.
Magic Number,unBand.Cloud,BikeEvent,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Events\BikeEvent.cs,InitFullEventData,The following statement contains a magic number: var runMapPoint = new BandMapPoint()                 {                     Type = mapData.MapPointType'                                         SecondsSinceStart = mapData.SecondsSinceStart'                     Ordinal = mapData.MapPointOrdinal'                     Distance = mapData.TotalDistance'                     HeartRate = mapData.HeartRate'                     Pace = ((double)mapData.Pace * 0.001)'                     ScaledPace = mapData.ScaledPace'                     IsPaused = mapData.IsPaused'                     IsResume = mapData.IsResume                 };
Magic Number,unBand.Cloud,BikeEvent,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Events\BikeEvent.cs,InitFullEventData,The following statement contains a magic number: runMapPoint.Latitude = ((double)mapData.Location.Latitude * 1E-07);
Magic Number,unBand.Cloud,BikeEvent,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Events\BikeEvent.cs,InitFullEventData,The following statement contains a magic number: runMapPoint.Longitude = ((double)mapData.Location.Longitude * 1E-07);
Magic Number,unBand.Cloud,BikeEvent,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Events\BikeEvent.cs,InitFullEventData,The following statement contains a magic number: runMapPoint.Altitude = ((double)mapData.Location.AltitudeFromMSL * 0.01);
Magic Number,unBand.Cloud,BikeEvent,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Events\BikeEvent.cs,InitFullEventData,The following statement contains a magic number: runMapPoint.EHPE = ((double)mapData.Location.EHPE * 0.01);
Magic Number,unBand.Cloud,BikeEvent,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Events\BikeEvent.cs,InitFullEventData,The following statement contains a magic number: runMapPoint.EVPE = ((double)mapData.Location.EVPE * 0.01);
Magic Number,unBand.Cloud,RunEvent,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Events\RunEvent.cs,InitFullEventData,The following statement contains a magic number: var runMapPoint = new BandMapPoint()                 {                     Type = mapData.MapPointType'                                         SecondsSinceStart = mapData.SecondsSinceStart'                     Ordinal = mapData.MapPointOrdinal'                     Distance = mapData.TotalDistance'                     HeartRate = mapData.HeartRate'                     Pace = ((double)mapData.Pace * 0.001)'                     ScaledPace = mapData.ScaledPace'                     IsPaused = mapData.IsPaused'                     IsResume = mapData.IsResume                 };
Magic Number,unBand.Cloud,RunEvent,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Events\RunEvent.cs,InitFullEventData,The following statement contains a magic number: runMapPoint.Latitude = ((double)mapData.Location.Latitude * 1E-07);
Magic Number,unBand.Cloud,RunEvent,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Events\RunEvent.cs,InitFullEventData,The following statement contains a magic number: runMapPoint.Longitude = ((double)mapData.Location.Longitude * 1E-07);
Magic Number,unBand.Cloud,RunEvent,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Events\RunEvent.cs,InitFullEventData,The following statement contains a magic number: runMapPoint.Altitude = ((double)mapData.Location.AltitudeFromMSL * 0.01);
Magic Number,unBand.Cloud,RunEvent,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Events\RunEvent.cs,InitFullEventData,The following statement contains a magic number: runMapPoint.EHPE = ((double)mapData.Location.EHPE * 0.01);
Magic Number,unBand.Cloud,RunEvent,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Events\RunEvent.cs,InitFullEventData,The following statement contains a magic number: runMapPoint.EVPE = ((double)mapData.Location.EVPE * 0.01);
Magic Number,unBand.Cloud.Exporters.EventExporters,TCXExporter,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Exporters\EventExporters\TCXExporter.cs,ExportToFile,The following statement contains a magic number: await Task.Run(() =>             {                 var xsiSchemaLocation = XNamespace.Get("http://www.garmin.com/xmlschemas/TrainingCenterDatabase/v2 http://www.garmin.com/xmlschemas/TrainingCenterDatabasev2.xsd");                 var ns5 = XNamespace.Get("http://www.garmin.com/xmlschemas/ActivityGoals/v1");                 var ns3 = XNamespace.Get("http://www.garmin.com/xmlschemas/ActivityExtension/v2");                 var ns2 = XNamespace.Get("http://www.garmin.com/xmlschemas/UserProfile/v2");                 var nsRoot = XNamespace.Get("http://www.garmin.com/xmlschemas/TrainingCenterDatabase/v2");                 var xsi = XNamespace.Get("http://www.w3.org/2001/XMLSchema-instance");                 var ns4 = XNamespace.Get("http://www.garmin.com/xmlschemas/ProfileExtension/v1");                  var doc = new XDocument(new XDeclaration("1.0"' "utf-8"' null));                  var xroot = new XElement(nsRoot + "TrainingCenterDatabase"'                     new XAttribute(XNamespace.Xmlns + "xsi"' xsi)'                     new XAttribute(xsi + "schemaLocation"' xsiSchemaLocation)'                     new XAttribute("xmlns"' nsRoot)'                     new XAttribute(XNamespace.Xmlns + "ns5"' ns5)'                     new XAttribute(XNamespace.Xmlns + "ns3"' ns3)'                     new XAttribute(XNamespace.Xmlns + "ns2"' ns2)'                     new XAttribute(XNamespace.Xmlns + "ns4"' ns4)'                     new XAttribute("creator"' "unBand - http://unband.nachmore.com/")'                     new XAttribute("version"' "1.0")'                     new XElement(nsRoot + "Activities"'                         new XElement(nsRoot + "Activity"'                             new XAttribute("Sport"' "Running")'                             new XElement(nsRoot + "Id"' eventBase.EventID)'                             new XElement(nsRoot + "Lap"'                                 new XAttribute("StartTime"' eventBase.StartTime.ToUniversalTime().ToString("o"))'                                 new XElement(nsRoot + "TotalTimeSeconds"' eventBase.Duration)'                                 new XElement(nsRoot + "Calories"' eventBase.CaloriesBurned)'                                 new XElement(nsRoot + "AverageHeartRateBpm"'                                     new XElement(nsRoot + "Value"' eventBase.HeartRate.Average)                                 )'                                 new XElement(nsRoot + "MaximumHeartRateBpm"'                                     new XElement(nsRoot + "Value"' eventBase.HeartRate.Peak)                                 )'                                 new XElement(nsRoot + "TriggerMethod"' "manual")                             )                         )                     )                 );                  //Add run specific data. TCX could be also used for basic workout data (future implementation).                 if (eventBase is RunEvent)                 {                     var runEvent = eventBase as RunEvent;                      xroot.Element(nsRoot + "Activities").Element(nsRoot + "Activity").Element(nsRoot + "Lap").Add(                         new XElement(nsRoot + "DistanceMeters"' runEvent.TotalDistance / 100)'                         new XElement(nsRoot + "Track")                     );                      foreach (var mp in runEvent.MapPoints)                     {                         var trackpoint = new XElement(nsRoot + "Trackpoint"'                             new XElement(nsRoot + "Time"' runEvent.StartTime.AddSeconds(mp.SecondsSinceStart).ToUniversalTime().ToString("o"))'                             new XElement(nsRoot + "HeartRateBpm"'                                 new XElement(nsRoot + "Value"' mp.HeartRate)                             )                         );                          if (mp.Latitude != 0 && mp.Latitude != 0)                         {                             trackpoint.Add(                                 new XElement(nsRoot + "AltitudeMeters"' mp.Altitude.ToString("0.0000000000000000"' new CultureInfo("en-US"' false)))'                                 new XElement(nsRoot + "Position"'                                     new XElement(nsRoot + "LatitudeDegrees"' mp.Latitude.ToString("0.00000000"' new CultureInfo("en-US"' false)))'                                     new XElement(nsRoot + "LongitudeDegrees"' mp.Longitude.ToString("0.00000000"' new CultureInfo("en-US"' false)))                                 )                             );                         }                          xroot.Element(nsRoot + "Activities").Element(nsRoot + "Activity").Element(nsRoot + "Lap").Element(nsRoot + "Track").Add(                             trackpoint                         );                     }                 }                  doc.Add(xroot);                  xroot.Save(filePath);             });
Magic Number,unBand.Cloud.Exporters.EventExporters.Helpers,CSVExporter,C:\research\architectureSmells\repos\nachmore_unBand\src\unBand.Cloud\Exporters\EventExporters\Helpers\CSVExporter.cs,ExportToFile,The following statement contains a magic number: var sb = new StringBuilder(500000);
