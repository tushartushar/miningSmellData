Method,LOC,CC,PC
AssertionFailedException:FormatMessage,4,1,2
AssertionFailedException:AssertionFailedException,3,1,2
AssertEx:Assert,6,2,3
AssertEx:AssertAreNotNull,3,1,1
AssertEx:AssertAreNotNull,7,2,1
AssertEx:AssertBetween,4,1,4
AssertEx:AssertEqual,3,1,3
AssertEx:AssertEqual,8,2,3
AssertEx:AssertEqual,3,1,3
AssertEx:AssertFalse,3,1,2
AssertEx:AssertUnequal,6,2,3
AssertEx:AssertUnequal,3,1,3
AssertEx:AssertNotNull,3,1,2
AssertEx:AssertTrue,3,1,2
Marked<T;TMark>:Marked,4,1,2
Marked<T;TMark>:SetMark,3,1,1
Marked:Create,3,1,2
Marked:Mark,3,1,2
Measured<TObject>:Measured,5,1,4
Measured<TObject>:Print,0,1,0
Measured<TObject>:Fuse,0,1,4
Measured<TObject>:Insert,0,1,5
Measured<TObject>:Iter,0,1,1
Measured<TObject>:Construct3,0,1,3
Measured<TObject>:IterBack,0,1,1
Measured<TObject>:IterBackWhile,0,1,1
Measured<TObject>:IterWhile,0,1,1
Measured<TObject>:Remove,0,1,2
Measured<TObject>:Reverse,0,1,1
Measured<TObject>:Update,0,1,3
FingerTreeElement:FingerTreeElement,3,1,1
FingerTreeElement:GetChild,0,1,1
TreeIterator:TreeIterator,3,1,0
TreeIterator:TreeIterator,4,2,1
TreeIterator:MoveNext,13,6,0
TreeIterator:SeekGreaterThan,13,4,2
TreeIterator:SetCurrent,4,1,1
TreeIterator:SeekForwardCloseTo,50,11,2
TreeIterator:TreeIterator,3,1,0
TreeIterator:TreeIterator,3,1,1
TreeIterator:MoveNext,27,8,0
TreeIterator:SeekGreaterThan,10,3,1
TreeIterator:SetCurrent,4,1,1
TreeIterator:SeekForwardCloseTo,46,11,1
Node:Node,6,1,1
Node:Node,11,1,6
Node:GetEnumerator,10,3,0
Node:ByArbitraryOrder,12,4,1
Node:NewForKvp,3,1,4
Node:WithChildren,11,2,4
Node:Root_Add,9,2,5
Node:Root_Remove,5,2,2
Node:WithBucket,8,2,2
Node:AvlBalance,42,3,3
Node:Root_Contains,3,1,1
Node:AvlAdd,32,4,5
Node:ExtractMin,13,3,2
Node:ToString,3,1,0
Node:Concat,20,2,4
Node:Split,26,2,5
Node:Concat,7,3,3
Node:CountIntersection,5,2,1
Node:RelatesTo,12,3,1
Node:Except,29,4,3
Node:IsSupersetOf,23,3,1
Node:IsDisjoint,13,1,1
Node:ForEachWhileNode,4,2,1
Node:SymDifference,11,1,2
Node:Union,34,5,3
Node:FromSortedList,8,2,4
Node:IntersectElements,25,6,1
Node:Debug_Intersect,8,4,2
Node:Intersect,20,3,3
Node:ExtractMax,6,3,2
Node:Root_Find,4,1,1
Node:Root_FindKvp,4,1,1
Node:Find,13,3,2
Node:FindKvp,11,3,2
Node:Apply,8,2,2
Node:ForEachWhile,4,2,1
Node:AvlErase,12,4,1
Node:AvlRemove,22,4,3
Node:Node,6,1,1
Node:Node,10,1,6
Node:IndexOf,17,3,1
Node:Root_Add,4,2,5
Node:NewForKvp,3,1,3
Node:MutateOrCreate,10,2,4
Node:WithChildren,3,1,3
Node:WithValue,7,2,2
Node:ToString,3,1,0
Node:AvlBalance,42,3,3
Node:AvlAdd,15,6,4
Node:RemoveMin,4,1,1
Node:RemoveMax,4,1,1
Node:ExtractMin,6,3,2
Node:ExtractMax,8,2,2
Node:ForEachWhileNode,4,2,1
Node:GetEnumerator,4,2,0
Node:IsSupersetOf,17,2,1
Node:Find,11,3,1
Node:FindKvp,10,3,1
Node:Contains,10,3,1
Node:Apply,8,2,2
Node:ForEachWhile,4,2,1
Node:ForEachBackWhile,4,2,1
Node:AvlErase,12,4,1
Node:AvlRemove,15,6,2
Node:Concat,20,2,4
Node:Split,29,3,5
Node:Concat,7,3,3
Node:CountIntersection,5,2,1
Node:Relation,12,3,1
Node:Except,29,3,3
Node:SymDifference,12,1,2
Node:Debug_Intersect,8,4,2
Node:CanMutateBy,3,1,1
Node:Union,32,4,3
Node:FromSortedList,8,2,5
Node:FromSortedArray,8,2,5
Node:FromSortedArraySet,8,2,5
Node:ByOrder,12,3,1
Node:IsDisjoint,13,1,1
Node:IntersectElements,26,6,1
Node:Intersect,14,2,3
Node:Node,7,1,5
Node:Add,0,1,2
Node:AddRange,0,1,5
Node:Apply,0,1,2
Node:RemoveLast,0,1,1
Node:GetEnumerator,0,1,1
Node:Iter,0,1,1
Node:IterBack,0,1,1
Node:IterBackWhile,0,1,1
Node:IterWhile,0,1,1
Node:RecursiveTotalLength,0,1,0
Node:Take,0,1,2
Node:IterWhileFrom,0,1,2
Node:Update,0,1,3
Node:Reverse,0,1,1
Bucket:Bucket,5,1,1
Bucket:Bucket,8,1,5
Bucket:ByIndex,6,2,1
Bucket:NewBucket,3,1,4
Bucket:WithNext,8,2,2
Bucket:WithKeyValue,8,2,3
Bucket:ToString,3,1,0
Bucket:Find,4,3,1
Bucket:FindKvp,4,3,1
Bucket:Remove,7,4,2
Bucket:Add,7,4,4
Bucket:CountIntersection,5,3,1
Bucket:Except,13,3,3
Bucket:Union,14,4,3
Bucket:Intersect,10,3,3
Bucket:ForEachWhile,7,3,1
Bucket:FromKvp,3,1,4
Bucket:Apply,5,2,2
BucketDebugView:BucketDebugView,4,1,1
Helpers:LastItem,3,1,1
Helpers:RemoveDuplicatesInSortedArray,19,5,3
Helpers:PopLast,5,1,1
ArrayExt:OfItems,6,1,3
ArrayExt:Resize,6,1,2
ArrayExt:Update,10,1,4
ImplementationException:ImplementationException,1,1,2
ImplErrors:Digit_too_large,3,1,1
ImplErrors:Digit_too_small,3,1,1
ImplErrors:Bad_digit_size,3,1,1
ImplErrors:Invalid_digit_size,3,1,2
ImplErrors:Invalid_execution_path,3,1,1
ImplErrors:Invalid_invocation,3,1,1
ImplErrors:Arg_out_of_range,3,1,2
Lineage:Lineage,1,1,0
Lineage:Lineage,3,1,1
Lineage:Mutable,6,1,0
Lineage:AllowMutation,6,1,1
Leaf:Leaf,3,1,3
Leaf:Leaf,1,1,2
Leaf:UpdateStore,7,3,3
Leaf:AddToStore,11,3,2
Leaf:_mutate,7,1,2
Leaf:MutateOrCreate,3,1,3
Leaf:Add,16,2,2
Leaf:RecursiveTotalLength,3,1,0
Leaf:IterWhileFrom,5,3,2
Leaf:AddRange,21,4,5
Leaf:Apply,5,2,2
Leaf:RemoveLast,19,3,1
Leaf:Remove_MUTATES,5,1,0
Leaf:GetEnumerator,3,1,1
Leaf:Iter,6,2,1
Leaf:IterBack,6,2,1
Leaf:IterBackWhile,7,3,1
Leaf:IterWhile,4,3,1
Leaf:Take,13,2,2
Leaf:Update,14,1,3
Leaf:Reverse,5,2,1
Enumerator:Enumerator,5,1,3
Enumerator:Dispose,1,1,0
Enumerator:MoveNext,4,1,0
Enumerator:Reset,3,1,0
Enumerator:Enumerator,5,1,3
Enumerator:Dispose,1,1,0
Enumerator:MoveNext,5,3,0
Enumerator:Reset,3,1,0
Enumerator:TryNext,9,2,0
Parent:Parent,14,1,5
Parent:Parent,5,1,3
Parent:TryGet,5,2,1
Parent:_mutate,7,1,3
Parent:IterWhileFrom,6,4,2
Parent:MutateOrCreate,11,1,4
Parent:UpdateStore,7,3,3
Parent:AddToStore,11,3,2
Parent:Add,23,2,2
Parent:AddRange,23,5,5
Parent:Apply,5,2,2
Parent:RemoveLast,20,3,1
Parent:GetEnumerator,3,1,1
Parent:Iter,6,2,1
Parent:IterBack,3,2,1
Parent:IterBackWhile,4,3,1
Parent:IterWhile,4,3,1
Parent:RecursiveTotalLength,5,2,0
Parent:Take,19,3,2
Parent:Update,15,1,3
Parent:Reverse,5,2,1
FTree<TChild>:FTree,5,1,4
FTree<TChild>:Construct,80,3,4
FTree<TChild>:Concat,94,2,3
FTree<TChild>:Print,0,1,0
FTree<TChild>:AddFirstList,3,1,2
FTree<TChild>:AddFirst,0,1,2
FTree<TChild>:AddLastList,3,1,2
FTree<TChild>:AddLast,0,1,2
FTree<TChild>:RemoveFirst,0,1,1
FTree<TChild>:RemoveLast,0,1,1
FTree<TChild>:Split,0,1,5
FTree<TChild>:Insert,0,1,3
FTree<TChild>:Iter,0,1,1
FTree<TChild>:IterBack,0,1,1
FTree<TChild>:IterBackWhile,0,1,1
FTree<TChild>:IterWhile,0,1,1
FTree<TChild>:Split,24,4,4
FTree<TChild>:RemoveAt,0,1,2
FTree<TChild>:Reverse,0,1,1
FTree<TChild>:Update,0,1,3
Compound:Compound,6,1,4
Compound:Print,3,1,0
Compound:CreateCheckNull,34,2,4
Compound:_mutate,7,1,3
Compound:MutateOrCreate,5,2,4
Compound:AddFirst,18,2,2
Compound:AddLast,18,2,2
Compound:RemoveFirst,18,2,1
Compound:RemoveLast,18,2,1
Compound:Split,47,2,5
Compound:FixLeftDigit,15,3,1
Compound:FixRightDigit,21,3,1
Compound:Insert,39,2,3
Compound:Iter,8,1,1
Compound:IterBack,8,1,1
Compound:IterBackWhile,6,4,1
Compound:IterWhile,6,4,1
Compound:RemoveAt,59,4,2
Compound:Reverse,3,1,1
Compound:Update,32,2,3
Compound:WhereIsThisIndex,10,8,1
Compound:GetChild,12,2,1
Digit:Digit,8,1,2
Digit:Digit,10,1,3
Digit:Digit,10,1,4
Digit:Digit,10,1,5
Digit:Digit,1,1,0
Digit:ConstructMult,17,2,4
Digit:Print,21,2,0
Digit:Construct3,5,1,3
Digit:GetChild,14,2,1
Digit:CreateCheckNull,60,2,5
Digit:Fuse,76,2,5
Digit:_mutate,24,2,6
Digit:MutateOrCreate,3,1,2
Digit:MutateOrCreate,3,1,3
Digit:MutateOrCreate,4,1,4
Digit:MutateOrCreate,4,1,5
Digit:AddFirst,13,2,2
Digit:AddLast,13,2,2
Digit:Fuse,4,1,4
Digit:Insert,66,2,5
Digit:Iter,28,2,1
Digit:IterBack,28,2,1
Digit:IterBackWhile,9,7,1
Digit:IterWhile,12,7,1
Digit:RemoveFirst,13,2,1
Digit:RemoveLast,13,2,1
Digit:Remove,50,2,2
Digit:Reverse,16,2,1
Digit:Split,33,2,5
Digit:Update,32,3,3
Digit:Update_MUTATES,27,2,2
Digit:WhereIsThisIndex,20,11,1
EmptyTree:EmptyTree,1,1,0
EmptyTree:Print,3,1,0
EmptyTree:AddFirst,3,1,2
EmptyTree:AddLast,3,1,2
EmptyTree:RemoveFirst,3,1,1
EmptyTree:RemoveLast,3,1,1
EmptyTree:Split,3,1,5
EmptyTree:Insert,3,1,3
EmptyTree:Iter,1,1,1
EmptyTree:IterBack,1,1,1
EmptyTree:IterBackWhile,3,1,1
EmptyTree:IterWhile,3,1,1
EmptyTree:RemoveAt,3,1,2
EmptyTree:Reverse,3,1,1
EmptyTree:Update,3,1,3
EmptyTree:GetChild,3,1,1
FingerTreeIterator<TValue>:FingerTreeIterator,6,1,1
FingerTreeIterator<TValue>:Dispose,1,1,0
FingerTreeIterator<TValue>:MoveNext,31,6,0
FingerTreeIterator<TValue>:Reset,3,1,0
FingerTreeIterator<TValue>:SetCurrent,3,1,1
Single:Single,3,1,2
Single:Print,3,1,0
Single:_mutate,5,1,1
Single:MutateOrCreate,3,1,2
Single:AddFirst,17,2,2
Single:AddLast,17,2,2
Single:RemoveFirst,16,3,1
Single:RemoveLast,7,2,1
Single:Split,6,1,5
Single:Insert,6,2,3
Single:Iter,3,1,1
Single:IterBack,3,1,1
Single:IterBackWhile,3,1,1
Single:IterWhile,3,1,1
Single:RemoveAt,9,3,2
Single:Reverse,3,1,1
Single:Update,3,1,3
Single:GetChild,4,2,1
Leaf<TValue>:Leaf,1,1,0
Leaf<TValue>:Leaf,3,1,1
Leaf<TValue>:Equals,3,1,1
Leaf<TValue>:GetHashCode,3,1,0
Leaf<TValue>:GetChild,3,1,1
Leaf<TValue>:Equals,3,1,1
Leaf<TValue>:Print,3,1,0
Leaf<TValue>:Construct3,3,1,3
Leaf<TValue>:Fuse,3,1,4
Leaf<TValue>:Insert,4,1,5
Leaf<TValue>:Iter,3,1,1
Leaf<TValue>:IterBack,3,1,1
Leaf<TValue>:IterBackWhile,3,1,1
Leaf<TValue>:IterWhile,3,1,1
Leaf<TValue>:Remove,6,1,2
Leaf<TValue>:Reverse,3,1,1
Leaf<TValue>:Update,3,1,3
ImmList:Empty,3,1,0
ImmList:ToImmList,3,1,1
ImmList:Of,3,1,1
ImmMap:CreateMap,3,1,1
ImmMap:Of,3,1,1
ImmMap:Empty,3,1,1
ImmMap:ToImmMap,3,1,2
ImmMap:ToImmMap,3,1,4
ImmSet:Empty,3,1,0
ImmSet:CreateSet,3,1,1
ImmSet:Of,3,1,1
ImmSet:ToImmSet,3,1,2
ImmSortedMap:ToImmSortedMap,3,1,1
ImmSortedMap:ToImmSortedMap,3,1,2
ImmSortedMap:CreateOrderedMap,3,1,1
ImmSortedMap:Of,3,1,1
ImmSortedMap:Empty,3,1,0
ImmSortedMap:Empty,3,1,1
ImmSortedSet:Empty,3,1,0
ImmSortedSet:Empty,3,1,1
ImmSortedSet:ToImmSortedSet,3,1,2
ImmSortedSet:Of,3,1,1
ImmSortedSet:ToImmSortedSet,3,1,1
ImmSortedSet:CreateOrderedSet,3,1,1
ImmVector:Empty,3,1,0
ImmVector:ToImmVector,3,1,1
ImmVector:FromItems,3,1,1
ImmSortedMap<TKey;TValue>:BuilderFrom,3,1,1
ImmSortedMap<TKey;TValue>:IsCompatibleWith,3,1,1
ImmSortedMap<TKey;TValue>:ImmSortedMap,4,1,2
ImmSortedMap<TKey;TValue>:Empty,4,1,1
ImmSortedMap<TKey;TValue>:GetEnumerator,3,1,0
ImmSortedMap<TKey;TValue>:TryGetKvp,3,1,1
ImmSortedMap<TKey;TValue>:TryGet,3,1,1
ImmSortedMap<TKey;TValue>:ForEachWhile,4,1,1
ImmSortedMap<TKey;TValue>:Merge,3,1,2
ImmSortedMap<TKey;TValue>:Join,3,1,2
ImmSortedMap<TKey;TValue>:Difference,3,1,1
ImmSortedMap<TKey;TValue>:RemoveRange,6,2,1
ImmSortedMap<TKey;TValue>:Subtract,8,2,2
ImmSortedMap<TKey;TValue>:Subtract,3,1,2
ImmSortedMap<TKey;TValue>:ByOrder,6,1,1
ImmSortedMap<TKey;TValue>:Remove,5,2,1
ImmSortedMap<TKey;TValue>:RemoveMax,4,2,0
ImmSortedMap<TKey;TValue>:RemoveMin,4,2,0
ImmSortedMap<TKey;TValue>:Set,6,3,3
ImmSortedMap<TKey;TValue>:IndexOf,3,1,1
ImmSortedMap<TKey;TValue>:Slice,22,6,2
ImmSortedMapDebugView<TKey;TValue>:ImmSortedMapDebugView,4,1,1
Builder:Builder,5,1,2
Builder:Builder,1,1,1
Builder:Produce,4,1,0
Builder:Add,4,1,1
Builder:AddRange,9,2,1
Builder:TryGetKvp,3,1,1
Builder:Remove,8,2,1
Builder:TryGet,3,1,1
Builder:Dispose,3,1,0
Builder:Builder,5,1,2
Builder:Produce,4,1,0
Builder:Add,8,2,1
Builder:AddRange,9,2,1
Builder:Contains,3,1,1
Builder:Remove,8,2,1
Builder:Dispose,3,1,0
Builder:Builder,5,1,2
Builder:GetNewLineage,3,1,0
Builder:Builder,1,1,1
Builder:Produce,4,1,0
Builder:Add,4,1,1
Builder:AddRange,9,2,1
Builder:TryGetKvp,3,1,1
Builder:Remove,9,2,1
Builder:TryGet,3,1,1
Builder:Dispose,3,1,0
Builder:Builder,5,1,2
Builder:Produce,5,1,0
Builder:Add,8,2,1
Builder:AddRange,11,2,1
Builder:Contains,3,1,1
Builder:Remove,8,2,1
Builder:Dispose,3,1,0
Builder:Builder,1,1,0
Builder:Builder,4,1,1
Builder:Produce,4,1,0
Builder:Add,4,1,1
Builder:AddRange,13,2,1
Builder:Dispose,3,1,0
Builder:Builder,1,1,0
Builder:Builder,4,1,1
Builder:Produce,4,1,0
Builder:Add,4,1,1
Builder:AddRange,14,3,1
Builder:Dispose,3,1,0
ImmSortedSet<T>:BuilderFrom,3,1,1
ImmSortedSet<T>:IsCompatibleWith,3,1,1
ImmSortedSet<T>:ImmSortedSet,4,1,2
ImmSortedSet<T>:IndexOf,3,1,1
ImmSortedSet<T>:Empty,3,1,1
ImmSortedSet<T>:Add,5,2,1
ImmSortedSet<T>:Remove,5,2,1
ImmSortedSet<T>:TryGet,4,1,1
ImmSortedSet<T>:Contains,3,1,1
ImmSortedSet<T>:Difference,3,1,1
ImmSortedSet<T>:Except,3,1,1
ImmSortedSet<T>:Union,3,1,1
ImmSortedSet<T>:Intersect,3,1,1
ImmSortedSet<T>:IsDisjointWith,3,1,1
ImmSortedSet<T>:IsSupersetOf,3,1,1
ImmSortedSet<T>:ForEachWhile,4,1,1
ImmSortedSet<T>:RemoveMax,4,2,0
ImmSortedSet<T>:ByOrder,5,1,1
ImmSortedSet<T>:RemoveMin,3,1,0
ImmSortedSet<T>:GetEnumerator,3,2,0
ImmSortedSet<T>:RelatesTo,3,1,1
ImmSortedSet<T>:Slice,22,6,2
ImmSortedSetDebugView<T>:ImmSortedSetDebugView,4,1,1
Convertion:Wrap,3,1,1
Convertion:WrapMap,3,1,2
Convertion:WrapMap,3,1,2
Convertion:Wrap,3,1,2
Convertion:Wrap,3,1,2
Convertion:Wrap,3,1,1
ImmMap<TKey;TValue>:BuilderFrom,3,1,1
ImmMap<TKey;TValue>:IsCompatibleWith,3,1,1
ImmMap<TKey;TValue>:ImmMap,4,1,2
ImmMap<TKey;TValue>:Empty,3,1,1
ImmMap<TKey;TValue>:GetEnumerator,3,1,0
ImmMap<TKey;TValue>:TryGetKvp,3,1,1
ImmMap<TKey;TValue>:TryGet,3,1,1
ImmMap<TKey;TValue>:Set,6,3,3
ImmMap<TKey;TValue>:Remove,5,2,1
ImmMap<TKey;TValue>:Merge,3,1,2
ImmMap<TKey;TValue>:Join,3,1,2
ImmMap<TKey;TValue>:RemoveRange,6,2,1
ImmMap<TKey;TValue>:Subtract,6,2,2
ImmMap<TKey;TValue>:Subtract,4,1,2
ImmMap<TKey;TValue>:Subtract,3,1,2
ImmMap<TKey;TValue>:Difference,4,1,1
ImmMap<TKey;TValue>:ForEachWhile,4,1,1
ImmMapDebugView<TKey;TValue>:ImmMapDebugView,3,1,1
ImmSet<T>:BuilderFrom,3,1,1
ImmSet<T>:IsCompatibleWith,3,1,1
ImmSet<T>:ImmSet,4,1,2
ImmSet<T>:Empty,3,1,1
ImmSet<T>:Add,5,2,1
ImmSet<T>:Remove,5,2,1
ImmSet<T>:TryGet,4,1,1
ImmSet<T>:Contains,3,1,1
ImmSet<T>:IsDisjointWith,3,1,1
ImmSet<T>:RelatesTo,3,1,1
ImmSet<T>:Difference,3,1,1
ImmSet<T>:Except,3,1,1
ImmSet<T>:Union,3,1,1
ImmSet<T>:Intersect,3,1,1
ImmSet<T>:ByArbitraryOrder,5,1,1
ImmSet<T>:IsSupersetOf,3,1,1
ImmSet<T>:ForEachWhile,4,1,1
ImmSet<T>:GetEnumerator,3,2,0
ImmSetDebugView<T>:ImmSetDebugView,3,1,1
ImmList<T>:ImmList,2,1,0
ImmList<T>:Select,3,1,1
ImmList<T>:Select,3,1,1
ImmList<T>:Choose,3,1,1
ImmList<T>:SelectMany,3,1,1
ImmList<T>:GroupJoin,4,1,5
ImmList<T>:SelectMany,3,1,2
ImmList<T>:Join,4,1,5
ImmList<T>:Join,4,1,4
ImmList<T>:GroupBy,4,1,4
ImmList<T>:GroupBy,3,1,3
ImmList<T>:GroupBy,3,1,2
ImmList<T>:Cast,3,1,0
ImmList<T>:Scan,3,1,2
ImmList<T>:ScanBack,3,1,2
ImmList<T>:Zip,3,1,2
ImmList<T>:Zip,3,1,1
ImmList<T>:GetPrototype,3,1,0
ImmList<T>:ImmList,3,1,1
ImmList<T>:AddFirst,10,2,1
ImmList<T>:AddFirstRange,13,2,1
ImmList<T>:AddLast,6,1,1
ImmList<T>:AddLastRange,4,1,1
ImmList<T>:AddFirstRange,4,1,1
ImmList<T>:AddLastRange,15,3,1
ImmList<T>:RemoveFirst,15,3,0
ImmList<T>:RemoveLast,11,2,0
ImmList<T>:Insert,15,3,2
ImmList<T>:InsertRange,3,1,2
ImmList<T>:InsertRange,23,4,2
ImmList<T>:RemoveAt,12,2,1
ImmList<T>:Reverse,3,1,0
ImmList<T>:Update,14,3,2
ImmList<T>:ForEach,4,1,1
ImmList<T>:ForEachBack,4,1,1
ImmList<T>:GetRange,15,3,2
ImmList<T>:Split,13,3,1
ImmList<T>:AddFirstList,3,1,1
ImmList<T>:AddLastList,10,3,1
ImmList<T>:InsertList,17,3,2
ImmList<T>:BuilderFrom,3,1,1
ImmList<T>:GetItem,3,1,1
ImmList<T>:GetEnumerator,3,1,0
ImmList<T>:ForEachBackWhile,3,1,1
ImmList<T>:ForEachWhile,3,1,1
ImmList<T>:GetEnumerator,3,1,0
ListDebugView<T>:ListDebugView,3,1,1
ImmVector<T>:ImmVector,2,1,0
ImmVector<T>:Select,3,1,1
ImmVector<T>:Select,3,1,1
ImmVector<T>:Choose,3,1,1
ImmVector<T>:SelectMany,3,1,1
ImmVector<T>:GroupJoin,4,1,5
ImmVector<T>:SelectMany,3,1,2
ImmVector<T>:Join,4,1,5
ImmVector<T>:Join,4,1,4
ImmVector<T>:GroupBy,4,1,4
ImmVector<T>:GroupBy,3,1,3
ImmVector<T>:GroupBy,3,1,2
ImmVector<T>:Cast,3,1,0
ImmVector<T>:Scan,3,1,2
ImmVector<T>:ScanBack,3,1,2
ImmVector<T>:Zip,3,1,2
ImmVector<T>:Zip,3,1,1
ImmVector<T>:GetPrototype,3,1,0
ImmVector<T>:GetItem,3,1,1
ImmVector<T>:BuilderFrom,3,1,1
ImmVector<T>:GetEnumerator,3,1,0
ImmVector<T>:ImmVector,3,1,1
ImmVector<T>:RecursiveLength,3,1,0
ImmVector<T>:Skip,8,3,1
ImmVector<T>:GetRange,9,1,2
ImmVector<T>:InsertRange,39,6,2
ImmVector<T>:CopyTo,22,3,4
ImmVector<T>:AddLast,12,2,1
ImmVector<T>:ForEachWhile,3,1,1
ImmVector<T>:ForEachBackWhile,3,1,1
ImmVector<T>:ForEachBack,3,1,1
ImmVector<T>:ForEach,3,1,1
ImmVector<T>:RemoveAt,14,3,1
ImmVector<T>:Insert,17,3,2
ImmVector<T>:AddLastRange,25,5,1
ImmVector<T>:AddFirstRange,5,1,1
ImmVector<T>:CopyFrom,11,2,3
ImmVector<T>:RemoveLast,13,3,0
ImmVector<T>:Update,14,1,2
ImmVector<T>:Take,7,3,1
VectorDebugView<T>:VectorDebugView,3,1,1
ImmLazyList<T>:ImmLazyList,3,1,1
Block:Item,0,1,1
Block:Update,0,1,2
Block:Insert,0,1,2
Block:Remove,0,1,1
Generator:Generator,6,1,4
Generator:New,3,1,4
Generator:IterateTill,9,3,1
Generator:Item,12,3,1
Generator:Update,12,3,2
Generator:Insert,12,3,2
Generator:Remove,12,3,1
Evaluated:Evaluated,3,1,1
Evaluated:Item,9,2,1
Evaluated:Update,9,2,2
Evaluated:Insert,9,2,2
Evaluated:Remove,9,2,1
ImmPriorityQueue<T;TPriority>:ImmPriorityQueue,4,1,2
ImmPriorityQueue<T;TPriority>:Wrap,3,1,1
ImmPriorityQueue<T;TPriority>:Add,6,1,1
ImmPriorityQueue<T;TPriority>:Remove,8,3,1
