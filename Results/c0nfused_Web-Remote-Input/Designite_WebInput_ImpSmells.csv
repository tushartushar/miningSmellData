Implementation smell,Namespace,Class,File,Method,Description
Long Method,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The method has 132 lines of code.
Complex Method,WebInput,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode.cs,QRCode_Load,Cyclomatic complexity of the method is 9
Complex Method,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,Cyclomatic complexity of the method is 28
Complex Method,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,Cyclomatic complexity of the method is 19
Complex Method,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,Cyclomatic complexity of the method is 26
Complex Method,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,Cyclomatic complexity of the method is 10
Complex Method,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,Cyclomatic complexity of the method is 10
Complex Method,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,Cyclomatic complexity of the method is 9
Complex Method,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateBytes,Cyclomatic complexity of the method is 11
Long Parameter List,WebInput,VirtualMouse,C:\repos\c0nfused_Web-Remote-Input\WebInput\VirtualMouse.cs,mouse_event,The method has 5 parameters.
Long Statement,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The length of the statement  "                    */_output = "<html><head><title>Remote</title><meta http-equiv='refresh' content='1; url=/' /></head><body>Redirecting to <a href='/'>the remote</a>...</body></html>"; " is 167.
Long Statement,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The length of the statement  "			_output = "<html><head><meta http-equiv='refresh' content='0; url=http://theyconfuse.me/code/Web-Remote-Input' /></head><body>Redirecting to <a href='http://theyconfuse.me/code/Web-Remote-Input'>http://theyconfuse.me/code/Web-Remote-Input</a>...</body></html>"; " is 261.
Long Statement,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The length of the statement  "			if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) { " is 225.
Long Statement,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The length of the statement  "			if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) { " is 225.
Long Statement,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The length of the statement  "			if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) { " is 133.
Complex Conditional,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The conditional expression  "qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)"  is complex.
Complex Conditional,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The conditional expression  "qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)"  is complex.
Complex Conditional,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The conditional expression  "r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)"  is complex.
Complex Conditional,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The conditional expression  "(0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)"  is complex.
Empty Catch Block,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,clientListener,The method has an empty catch block.
Empty Catch Block,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The method has an empty catch block.
Magic Number,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The following statement contains a magic number: try {  	string _output = "";  	var context = (HttpListenerContext)listenerContext;  	string filename = Path.GetFileName (context.Request.RawUrl);  	/**                  * Output the Remote HTML Web page                  */if (filename == "") {  		_output = htmlRemote ();  		connectedUsers = connectedUsers + 1;  	}  	/**                  * The QR Code was scanned. Output the Remote HTML Web page; minimize the application.                  */else if (filename == "qrscan") {  		/**                      * @todo Finish this section to autohide the QR code when it's scanned                      *//*                     if (QRForm.WindowState == FormWindowState.Normal)                     {                         QRForm.Close();                     }                      if (MyForm.WindowState == FormWindowState.Normal)                     {                         MyForm.WindowState = FormWindowState.Minimized;                     }                     */_output = "<html><head><title>Remote</title><meta http-equiv='refresh' content='1; url=/' /></head><body>Redirecting to <a href='/'>the remote</a>...</body></html>";  	}  	/**                  * A remote session has ended.                  */else if (filename == "remote-ended") {  		connectedUsers = connectedUsers - 1;  	}  	/**                  * Process Touchpad movement.                  * @param int x The number of pixels to move along the x-axis.                  * @param int y The number of pixels to move along the y-axis.                  */else if (filename.Contains ("remote-touch")) {  		string[] xPieces = filename.Split (new string[] {  			"x="  		}' StringSplitOptions.None);  		string[] yPieces = xPieces [1].Split (new string[] {  			"&y="  		}' StringSplitOptions.None);  		int x = (Convert.ToInt32 (yPieces [0]) * -1) / 3;  		int y = (Convert.ToInt32 (yPieces [1]) * -1) / 3;  		/**                      * Process Left Mouse Click.                      */if (x == 0 && y == 0) {  			VirtualMouse.LeftClick ();  		}  		/**                      * Move the mouse curser x' y pixels from the current position.                      */else {  			VirtualMouse.Move (x' y);  		}  	}  	/**                  * Process Mouse Click                  * @param string clickButton The mouse button to click.                  */else if (filename.Contains ("process-click")) {  		string[] clickPieces = filename.Split (new string[] {  			"button="  		}' StringSplitOptions.None);  		string clickButton = clickPieces [1];  		if (clickButton == "left") {  			VirtualMouse.LeftClick ();  		}  		else if (clickButton == "right") {  			VirtualMouse.RightClick ();  		}  		else {  			// Unknown  		}  	}  	/**                  * Send Keystrokes                  * @param string text The text to output.                  */else if (filename.Contains ("process-text")) {  		// Get the text from the POST data  		string textData;  		using (var reader = new StreamReader (context.Request.InputStream' context.Request.ContentEncoding)) {  			textData = reader.ReadToEnd ();  		}  		// In the form of text=encoded+data  		string[] PostPieces = textData.Split (new string[] {  			"text="  		}' StringSplitOptions.None);  		string text = PostPieces [1];  		text = text.Replace ("%0A"' System.Environment.NewLine);  		text = System.Uri.UnescapeDataString (text);  		text = System.Uri.UnescapeDataString (text);  		SendKeys.SendWait (text);  	}  	/**                  * Press Arrow Key                  * @param string ArrowKey The arrow key to press.                  */else if (filename.Contains ("process-button")) {  		string[] arrowPieces = filename.Split (new string[] {  			"button="  		}' StringSplitOptions.None);  		string ArrowKey = arrowPieces [1];  		switch (ArrowKey) {  		case "up":  			SendKeys.SendWait ("{UP}");  			break;  		case "right":  			SendKeys.SendWait ("{RIGHT}");  			break;  		case "down":  			SendKeys.SendWait ("{DOWN}");  			break;  		case "left":  			SendKeys.SendWait ("{LEFT}");  			break;  		default:  			break;  		}  	}  	/**                  * Unknown Web Server Request                  */else {  		_output = "<html><head><meta http-equiv='refresh' content='0; url=http://theyconfuse.me/code/Web-Remote-Input' /></head><body>Redirecting to <a href='http://theyconfuse.me/code/Web-Remote-Input'>http://theyconfuse.me/code/Web-Remote-Input</a>...</body></html>";  	}  	byte[] array = Encoding.ASCII.GetBytes (_output);  	context.Response.ContentLength64 = array.Length;  	using (Stream s = context.Response.OutputStream)  		s.Write (array' 0' array.Length);  }  catch (Exception e) {  }  
Magic Number,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The following statement contains a magic number: try {  	string _output = "";  	var context = (HttpListenerContext)listenerContext;  	string filename = Path.GetFileName (context.Request.RawUrl);  	/**                  * Output the Remote HTML Web page                  */if (filename == "") {  		_output = htmlRemote ();  		connectedUsers = connectedUsers + 1;  	}  	/**                  * The QR Code was scanned. Output the Remote HTML Web page; minimize the application.                  */else if (filename == "qrscan") {  		/**                      * @todo Finish this section to autohide the QR code when it's scanned                      *//*                     if (QRForm.WindowState == FormWindowState.Normal)                     {                         QRForm.Close();                     }                      if (MyForm.WindowState == FormWindowState.Normal)                     {                         MyForm.WindowState = FormWindowState.Minimized;                     }                     */_output = "<html><head><title>Remote</title><meta http-equiv='refresh' content='1; url=/' /></head><body>Redirecting to <a href='/'>the remote</a>...</body></html>";  	}  	/**                  * A remote session has ended.                  */else if (filename == "remote-ended") {  		connectedUsers = connectedUsers - 1;  	}  	/**                  * Process Touchpad movement.                  * @param int x The number of pixels to move along the x-axis.                  * @param int y The number of pixels to move along the y-axis.                  */else if (filename.Contains ("remote-touch")) {  		string[] xPieces = filename.Split (new string[] {  			"x="  		}' StringSplitOptions.None);  		string[] yPieces = xPieces [1].Split (new string[] {  			"&y="  		}' StringSplitOptions.None);  		int x = (Convert.ToInt32 (yPieces [0]) * -1) / 3;  		int y = (Convert.ToInt32 (yPieces [1]) * -1) / 3;  		/**                      * Process Left Mouse Click.                      */if (x == 0 && y == 0) {  			VirtualMouse.LeftClick ();  		}  		/**                      * Move the mouse curser x' y pixels from the current position.                      */else {  			VirtualMouse.Move (x' y);  		}  	}  	/**                  * Process Mouse Click                  * @param string clickButton The mouse button to click.                  */else if (filename.Contains ("process-click")) {  		string[] clickPieces = filename.Split (new string[] {  			"button="  		}' StringSplitOptions.None);  		string clickButton = clickPieces [1];  		if (clickButton == "left") {  			VirtualMouse.LeftClick ();  		}  		else if (clickButton == "right") {  			VirtualMouse.RightClick ();  		}  		else {  			// Unknown  		}  	}  	/**                  * Send Keystrokes                  * @param string text The text to output.                  */else if (filename.Contains ("process-text")) {  		// Get the text from the POST data  		string textData;  		using (var reader = new StreamReader (context.Request.InputStream' context.Request.ContentEncoding)) {  			textData = reader.ReadToEnd ();  		}  		// In the form of text=encoded+data  		string[] PostPieces = textData.Split (new string[] {  			"text="  		}' StringSplitOptions.None);  		string text = PostPieces [1];  		text = text.Replace ("%0A"' System.Environment.NewLine);  		text = System.Uri.UnescapeDataString (text);  		text = System.Uri.UnescapeDataString (text);  		SendKeys.SendWait (text);  	}  	/**                  * Press Arrow Key                  * @param string ArrowKey The arrow key to press.                  */else if (filename.Contains ("process-button")) {  		string[] arrowPieces = filename.Split (new string[] {  			"button="  		}' StringSplitOptions.None);  		string ArrowKey = arrowPieces [1];  		switch (ArrowKey) {  		case "up":  			SendKeys.SendWait ("{UP}");  			break;  		case "right":  			SendKeys.SendWait ("{RIGHT}");  			break;  		case "down":  			SendKeys.SendWait ("{DOWN}");  			break;  		case "left":  			SendKeys.SendWait ("{LEFT}");  			break;  		default:  			break;  		}  	}  	/**                  * Unknown Web Server Request                  */else {  		_output = "<html><head><meta http-equiv='refresh' content='0; url=http://theyconfuse.me/code/Web-Remote-Input' /></head><body>Redirecting to <a href='http://theyconfuse.me/code/Web-Remote-Input'>http://theyconfuse.me/code/Web-Remote-Input</a>...</body></html>";  	}  	byte[] array = Encoding.ASCII.GetBytes (_output);  	context.Response.ContentLength64 = array.Length;  	using (Stream s = context.Response.OutputStream)  		s.Write (array' 0' array.Length);  }  catch (Exception e) {  }  
Magic Number,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The following statement contains a magic number: if (filename == "") {  	_output = htmlRemote ();  	connectedUsers = connectedUsers + 1;  }  /**                  * The QR Code was scanned. Output the Remote HTML Web page; minimize the application.                  */else if (filename == "qrscan") {  	/**                      * @todo Finish this section to autohide the QR code when it's scanned                      *//*                     if (QRForm.WindowState == FormWindowState.Normal)                     {                         QRForm.Close();                     }                      if (MyForm.WindowState == FormWindowState.Normal)                     {                         MyForm.WindowState = FormWindowState.Minimized;                     }                     */_output = "<html><head><title>Remote</title><meta http-equiv='refresh' content='1; url=/' /></head><body>Redirecting to <a href='/'>the remote</a>...</body></html>";  }  /**                  * A remote session has ended.                  */else if (filename == "remote-ended") {  	connectedUsers = connectedUsers - 1;  }  /**                  * Process Touchpad movement.                  * @param int x The number of pixels to move along the x-axis.                  * @param int y The number of pixels to move along the y-axis.                  */else if (filename.Contains ("remote-touch")) {  	string[] xPieces = filename.Split (new string[] {  		"x="  	}' StringSplitOptions.None);  	string[] yPieces = xPieces [1].Split (new string[] {  		"&y="  	}' StringSplitOptions.None);  	int x = (Convert.ToInt32 (yPieces [0]) * -1) / 3;  	int y = (Convert.ToInt32 (yPieces [1]) * -1) / 3;  	/**                      * Process Left Mouse Click.                      */if (x == 0 && y == 0) {  		VirtualMouse.LeftClick ();  	}  	/**                      * Move the mouse curser x' y pixels from the current position.                      */else {  		VirtualMouse.Move (x' y);  	}  }  /**                  * Process Mouse Click                  * @param string clickButton The mouse button to click.                  */else if (filename.Contains ("process-click")) {  	string[] clickPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string clickButton = clickPieces [1];  	if (clickButton == "left") {  		VirtualMouse.LeftClick ();  	}  	else if (clickButton == "right") {  		VirtualMouse.RightClick ();  	}  	else {  		// Unknown  	}  }  /**                  * Send Keystrokes                  * @param string text The text to output.                  */else if (filename.Contains ("process-text")) {  	// Get the text from the POST data  	string textData;  	using (var reader = new StreamReader (context.Request.InputStream' context.Request.ContentEncoding)) {  		textData = reader.ReadToEnd ();  	}  	// In the form of text=encoded+data  	string[] PostPieces = textData.Split (new string[] {  		"text="  	}' StringSplitOptions.None);  	string text = PostPieces [1];  	text = text.Replace ("%0A"' System.Environment.NewLine);  	text = System.Uri.UnescapeDataString (text);  	text = System.Uri.UnescapeDataString (text);  	SendKeys.SendWait (text);  }  /**                  * Press Arrow Key                  * @param string ArrowKey The arrow key to press.                  */else if (filename.Contains ("process-button")) {  	string[] arrowPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string ArrowKey = arrowPieces [1];  	switch (ArrowKey) {  	case "up":  		SendKeys.SendWait ("{UP}");  		break;  	case "right":  		SendKeys.SendWait ("{RIGHT}");  		break;  	case "down":  		SendKeys.SendWait ("{DOWN}");  		break;  	case "left":  		SendKeys.SendWait ("{LEFT}");  		break;  	default:  		break;  	}  }  /**                  * Unknown Web Server Request                  */else {  	_output = "<html><head><meta http-equiv='refresh' content='0; url=http://theyconfuse.me/code/Web-Remote-Input' /></head><body>Redirecting to <a href='http://theyconfuse.me/code/Web-Remote-Input'>http://theyconfuse.me/code/Web-Remote-Input</a>...</body></html>";  }  
Magic Number,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The following statement contains a magic number: if (filename == "") {  	_output = htmlRemote ();  	connectedUsers = connectedUsers + 1;  }  /**                  * The QR Code was scanned. Output the Remote HTML Web page; minimize the application.                  */else if (filename == "qrscan") {  	/**                      * @todo Finish this section to autohide the QR code when it's scanned                      *//*                     if (QRForm.WindowState == FormWindowState.Normal)                     {                         QRForm.Close();                     }                      if (MyForm.WindowState == FormWindowState.Normal)                     {                         MyForm.WindowState = FormWindowState.Minimized;                     }                     */_output = "<html><head><title>Remote</title><meta http-equiv='refresh' content='1; url=/' /></head><body>Redirecting to <a href='/'>the remote</a>...</body></html>";  }  /**                  * A remote session has ended.                  */else if (filename == "remote-ended") {  	connectedUsers = connectedUsers - 1;  }  /**                  * Process Touchpad movement.                  * @param int x The number of pixels to move along the x-axis.                  * @param int y The number of pixels to move along the y-axis.                  */else if (filename.Contains ("remote-touch")) {  	string[] xPieces = filename.Split (new string[] {  		"x="  	}' StringSplitOptions.None);  	string[] yPieces = xPieces [1].Split (new string[] {  		"&y="  	}' StringSplitOptions.None);  	int x = (Convert.ToInt32 (yPieces [0]) * -1) / 3;  	int y = (Convert.ToInt32 (yPieces [1]) * -1) / 3;  	/**                      * Process Left Mouse Click.                      */if (x == 0 && y == 0) {  		VirtualMouse.LeftClick ();  	}  	/**                      * Move the mouse curser x' y pixels from the current position.                      */else {  		VirtualMouse.Move (x' y);  	}  }  /**                  * Process Mouse Click                  * @param string clickButton The mouse button to click.                  */else if (filename.Contains ("process-click")) {  	string[] clickPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string clickButton = clickPieces [1];  	if (clickButton == "left") {  		VirtualMouse.LeftClick ();  	}  	else if (clickButton == "right") {  		VirtualMouse.RightClick ();  	}  	else {  		// Unknown  	}  }  /**                  * Send Keystrokes                  * @param string text The text to output.                  */else if (filename.Contains ("process-text")) {  	// Get the text from the POST data  	string textData;  	using (var reader = new StreamReader (context.Request.InputStream' context.Request.ContentEncoding)) {  		textData = reader.ReadToEnd ();  	}  	// In the form of text=encoded+data  	string[] PostPieces = textData.Split (new string[] {  		"text="  	}' StringSplitOptions.None);  	string text = PostPieces [1];  	text = text.Replace ("%0A"' System.Environment.NewLine);  	text = System.Uri.UnescapeDataString (text);  	text = System.Uri.UnescapeDataString (text);  	SendKeys.SendWait (text);  }  /**                  * Press Arrow Key                  * @param string ArrowKey The arrow key to press.                  */else if (filename.Contains ("process-button")) {  	string[] arrowPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string ArrowKey = arrowPieces [1];  	switch (ArrowKey) {  	case "up":  		SendKeys.SendWait ("{UP}");  		break;  	case "right":  		SendKeys.SendWait ("{RIGHT}");  		break;  	case "down":  		SendKeys.SendWait ("{DOWN}");  		break;  	case "left":  		SendKeys.SendWait ("{LEFT}");  		break;  	default:  		break;  	}  }  /**                  * Unknown Web Server Request                  */else {  	_output = "<html><head><meta http-equiv='refresh' content='0; url=http://theyconfuse.me/code/Web-Remote-Input' /></head><body>Redirecting to <a href='http://theyconfuse.me/code/Web-Remote-Input'>http://theyconfuse.me/code/Web-Remote-Input</a>...</body></html>";  }  
Magic Number,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The following statement contains a magic number: if (filename == "qrscan") {  	/**                      * @todo Finish this section to autohide the QR code when it's scanned                      *//*                     if (QRForm.WindowState == FormWindowState.Normal)                     {                         QRForm.Close();                     }                      if (MyForm.WindowState == FormWindowState.Normal)                     {                         MyForm.WindowState = FormWindowState.Minimized;                     }                     */_output = "<html><head><title>Remote</title><meta http-equiv='refresh' content='1; url=/' /></head><body>Redirecting to <a href='/'>the remote</a>...</body></html>";  }  /**                  * A remote session has ended.                  */else if (filename == "remote-ended") {  	connectedUsers = connectedUsers - 1;  }  /**                  * Process Touchpad movement.                  * @param int x The number of pixels to move along the x-axis.                  * @param int y The number of pixels to move along the y-axis.                  */else if (filename.Contains ("remote-touch")) {  	string[] xPieces = filename.Split (new string[] {  		"x="  	}' StringSplitOptions.None);  	string[] yPieces = xPieces [1].Split (new string[] {  		"&y="  	}' StringSplitOptions.None);  	int x = (Convert.ToInt32 (yPieces [0]) * -1) / 3;  	int y = (Convert.ToInt32 (yPieces [1]) * -1) / 3;  	/**                      * Process Left Mouse Click.                      */if (x == 0 && y == 0) {  		VirtualMouse.LeftClick ();  	}  	/**                      * Move the mouse curser x' y pixels from the current position.                      */else {  		VirtualMouse.Move (x' y);  	}  }  /**                  * Process Mouse Click                  * @param string clickButton The mouse button to click.                  */else if (filename.Contains ("process-click")) {  	string[] clickPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string clickButton = clickPieces [1];  	if (clickButton == "left") {  		VirtualMouse.LeftClick ();  	}  	else if (clickButton == "right") {  		VirtualMouse.RightClick ();  	}  	else {  		// Unknown  	}  }  /**                  * Send Keystrokes                  * @param string text The text to output.                  */else if (filename.Contains ("process-text")) {  	// Get the text from the POST data  	string textData;  	using (var reader = new StreamReader (context.Request.InputStream' context.Request.ContentEncoding)) {  		textData = reader.ReadToEnd ();  	}  	// In the form of text=encoded+data  	string[] PostPieces = textData.Split (new string[] {  		"text="  	}' StringSplitOptions.None);  	string text = PostPieces [1];  	text = text.Replace ("%0A"' System.Environment.NewLine);  	text = System.Uri.UnescapeDataString (text);  	text = System.Uri.UnescapeDataString (text);  	SendKeys.SendWait (text);  }  /**                  * Press Arrow Key                  * @param string ArrowKey The arrow key to press.                  */else if (filename.Contains ("process-button")) {  	string[] arrowPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string ArrowKey = arrowPieces [1];  	switch (ArrowKey) {  	case "up":  		SendKeys.SendWait ("{UP}");  		break;  	case "right":  		SendKeys.SendWait ("{RIGHT}");  		break;  	case "down":  		SendKeys.SendWait ("{DOWN}");  		break;  	case "left":  		SendKeys.SendWait ("{LEFT}");  		break;  	default:  		break;  	}  }  /**                  * Unknown Web Server Request                  */else {  	_output = "<html><head><meta http-equiv='refresh' content='0; url=http://theyconfuse.me/code/Web-Remote-Input' /></head><body>Redirecting to <a href='http://theyconfuse.me/code/Web-Remote-Input'>http://theyconfuse.me/code/Web-Remote-Input</a>...</body></html>";  }  
Magic Number,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The following statement contains a magic number: if (filename == "qrscan") {  	/**                      * @todo Finish this section to autohide the QR code when it's scanned                      *//*                     if (QRForm.WindowState == FormWindowState.Normal)                     {                         QRForm.Close();                     }                      if (MyForm.WindowState == FormWindowState.Normal)                     {                         MyForm.WindowState = FormWindowState.Minimized;                     }                     */_output = "<html><head><title>Remote</title><meta http-equiv='refresh' content='1; url=/' /></head><body>Redirecting to <a href='/'>the remote</a>...</body></html>";  }  /**                  * A remote session has ended.                  */else if (filename == "remote-ended") {  	connectedUsers = connectedUsers - 1;  }  /**                  * Process Touchpad movement.                  * @param int x The number of pixels to move along the x-axis.                  * @param int y The number of pixels to move along the y-axis.                  */else if (filename.Contains ("remote-touch")) {  	string[] xPieces = filename.Split (new string[] {  		"x="  	}' StringSplitOptions.None);  	string[] yPieces = xPieces [1].Split (new string[] {  		"&y="  	}' StringSplitOptions.None);  	int x = (Convert.ToInt32 (yPieces [0]) * -1) / 3;  	int y = (Convert.ToInt32 (yPieces [1]) * -1) / 3;  	/**                      * Process Left Mouse Click.                      */if (x == 0 && y == 0) {  		VirtualMouse.LeftClick ();  	}  	/**                      * Move the mouse curser x' y pixels from the current position.                      */else {  		VirtualMouse.Move (x' y);  	}  }  /**                  * Process Mouse Click                  * @param string clickButton The mouse button to click.                  */else if (filename.Contains ("process-click")) {  	string[] clickPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string clickButton = clickPieces [1];  	if (clickButton == "left") {  		VirtualMouse.LeftClick ();  	}  	else if (clickButton == "right") {  		VirtualMouse.RightClick ();  	}  	else {  		// Unknown  	}  }  /**                  * Send Keystrokes                  * @param string text The text to output.                  */else if (filename.Contains ("process-text")) {  	// Get the text from the POST data  	string textData;  	using (var reader = new StreamReader (context.Request.InputStream' context.Request.ContentEncoding)) {  		textData = reader.ReadToEnd ();  	}  	// In the form of text=encoded+data  	string[] PostPieces = textData.Split (new string[] {  		"text="  	}' StringSplitOptions.None);  	string text = PostPieces [1];  	text = text.Replace ("%0A"' System.Environment.NewLine);  	text = System.Uri.UnescapeDataString (text);  	text = System.Uri.UnescapeDataString (text);  	SendKeys.SendWait (text);  }  /**                  * Press Arrow Key                  * @param string ArrowKey The arrow key to press.                  */else if (filename.Contains ("process-button")) {  	string[] arrowPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string ArrowKey = arrowPieces [1];  	switch (ArrowKey) {  	case "up":  		SendKeys.SendWait ("{UP}");  		break;  	case "right":  		SendKeys.SendWait ("{RIGHT}");  		break;  	case "down":  		SendKeys.SendWait ("{DOWN}");  		break;  	case "left":  		SendKeys.SendWait ("{LEFT}");  		break;  	default:  		break;  	}  }  /**                  * Unknown Web Server Request                  */else {  	_output = "<html><head><meta http-equiv='refresh' content='0; url=http://theyconfuse.me/code/Web-Remote-Input' /></head><body>Redirecting to <a href='http://theyconfuse.me/code/Web-Remote-Input'>http://theyconfuse.me/code/Web-Remote-Input</a>...</body></html>";  }  
Magic Number,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The following statement contains a magic number: if (filename == "remote-ended") {  	connectedUsers = connectedUsers - 1;  }  /**                  * Process Touchpad movement.                  * @param int x The number of pixels to move along the x-axis.                  * @param int y The number of pixels to move along the y-axis.                  */else if (filename.Contains ("remote-touch")) {  	string[] xPieces = filename.Split (new string[] {  		"x="  	}' StringSplitOptions.None);  	string[] yPieces = xPieces [1].Split (new string[] {  		"&y="  	}' StringSplitOptions.None);  	int x = (Convert.ToInt32 (yPieces [0]) * -1) / 3;  	int y = (Convert.ToInt32 (yPieces [1]) * -1) / 3;  	/**                      * Process Left Mouse Click.                      */if (x == 0 && y == 0) {  		VirtualMouse.LeftClick ();  	}  	/**                      * Move the mouse curser x' y pixels from the current position.                      */else {  		VirtualMouse.Move (x' y);  	}  }  /**                  * Process Mouse Click                  * @param string clickButton The mouse button to click.                  */else if (filename.Contains ("process-click")) {  	string[] clickPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string clickButton = clickPieces [1];  	if (clickButton == "left") {  		VirtualMouse.LeftClick ();  	}  	else if (clickButton == "right") {  		VirtualMouse.RightClick ();  	}  	else {  		// Unknown  	}  }  /**                  * Send Keystrokes                  * @param string text The text to output.                  */else if (filename.Contains ("process-text")) {  	// Get the text from the POST data  	string textData;  	using (var reader = new StreamReader (context.Request.InputStream' context.Request.ContentEncoding)) {  		textData = reader.ReadToEnd ();  	}  	// In the form of text=encoded+data  	string[] PostPieces = textData.Split (new string[] {  		"text="  	}' StringSplitOptions.None);  	string text = PostPieces [1];  	text = text.Replace ("%0A"' System.Environment.NewLine);  	text = System.Uri.UnescapeDataString (text);  	text = System.Uri.UnescapeDataString (text);  	SendKeys.SendWait (text);  }  /**                  * Press Arrow Key                  * @param string ArrowKey The arrow key to press.                  */else if (filename.Contains ("process-button")) {  	string[] arrowPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string ArrowKey = arrowPieces [1];  	switch (ArrowKey) {  	case "up":  		SendKeys.SendWait ("{UP}");  		break;  	case "right":  		SendKeys.SendWait ("{RIGHT}");  		break;  	case "down":  		SendKeys.SendWait ("{DOWN}");  		break;  	case "left":  		SendKeys.SendWait ("{LEFT}");  		break;  	default:  		break;  	}  }  /**                  * Unknown Web Server Request                  */else {  	_output = "<html><head><meta http-equiv='refresh' content='0; url=http://theyconfuse.me/code/Web-Remote-Input' /></head><body>Redirecting to <a href='http://theyconfuse.me/code/Web-Remote-Input'>http://theyconfuse.me/code/Web-Remote-Input</a>...</body></html>";  }  
Magic Number,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The following statement contains a magic number: if (filename == "remote-ended") {  	connectedUsers = connectedUsers - 1;  }  /**                  * Process Touchpad movement.                  * @param int x The number of pixels to move along the x-axis.                  * @param int y The number of pixels to move along the y-axis.                  */else if (filename.Contains ("remote-touch")) {  	string[] xPieces = filename.Split (new string[] {  		"x="  	}' StringSplitOptions.None);  	string[] yPieces = xPieces [1].Split (new string[] {  		"&y="  	}' StringSplitOptions.None);  	int x = (Convert.ToInt32 (yPieces [0]) * -1) / 3;  	int y = (Convert.ToInt32 (yPieces [1]) * -1) / 3;  	/**                      * Process Left Mouse Click.                      */if (x == 0 && y == 0) {  		VirtualMouse.LeftClick ();  	}  	/**                      * Move the mouse curser x' y pixels from the current position.                      */else {  		VirtualMouse.Move (x' y);  	}  }  /**                  * Process Mouse Click                  * @param string clickButton The mouse button to click.                  */else if (filename.Contains ("process-click")) {  	string[] clickPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string clickButton = clickPieces [1];  	if (clickButton == "left") {  		VirtualMouse.LeftClick ();  	}  	else if (clickButton == "right") {  		VirtualMouse.RightClick ();  	}  	else {  		// Unknown  	}  }  /**                  * Send Keystrokes                  * @param string text The text to output.                  */else if (filename.Contains ("process-text")) {  	// Get the text from the POST data  	string textData;  	using (var reader = new StreamReader (context.Request.InputStream' context.Request.ContentEncoding)) {  		textData = reader.ReadToEnd ();  	}  	// In the form of text=encoded+data  	string[] PostPieces = textData.Split (new string[] {  		"text="  	}' StringSplitOptions.None);  	string text = PostPieces [1];  	text = text.Replace ("%0A"' System.Environment.NewLine);  	text = System.Uri.UnescapeDataString (text);  	text = System.Uri.UnescapeDataString (text);  	SendKeys.SendWait (text);  }  /**                  * Press Arrow Key                  * @param string ArrowKey The arrow key to press.                  */else if (filename.Contains ("process-button")) {  	string[] arrowPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string ArrowKey = arrowPieces [1];  	switch (ArrowKey) {  	case "up":  		SendKeys.SendWait ("{UP}");  		break;  	case "right":  		SendKeys.SendWait ("{RIGHT}");  		break;  	case "down":  		SendKeys.SendWait ("{DOWN}");  		break;  	case "left":  		SendKeys.SendWait ("{LEFT}");  		break;  	default:  		break;  	}  }  /**                  * Unknown Web Server Request                  */else {  	_output = "<html><head><meta http-equiv='refresh' content='0; url=http://theyconfuse.me/code/Web-Remote-Input' /></head><body>Redirecting to <a href='http://theyconfuse.me/code/Web-Remote-Input'>http://theyconfuse.me/code/Web-Remote-Input</a>...</body></html>";  }  
Magic Number,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The following statement contains a magic number: if (filename.Contains ("remote-touch")) {  	string[] xPieces = filename.Split (new string[] {  		"x="  	}' StringSplitOptions.None);  	string[] yPieces = xPieces [1].Split (new string[] {  		"&y="  	}' StringSplitOptions.None);  	int x = (Convert.ToInt32 (yPieces [0]) * -1) / 3;  	int y = (Convert.ToInt32 (yPieces [1]) * -1) / 3;  	/**                      * Process Left Mouse Click.                      */if (x == 0 && y == 0) {  		VirtualMouse.LeftClick ();  	}  	/**                      * Move the mouse curser x' y pixels from the current position.                      */else {  		VirtualMouse.Move (x' y);  	}  }  /**                  * Process Mouse Click                  * @param string clickButton The mouse button to click.                  */else if (filename.Contains ("process-click")) {  	string[] clickPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string clickButton = clickPieces [1];  	if (clickButton == "left") {  		VirtualMouse.LeftClick ();  	}  	else if (clickButton == "right") {  		VirtualMouse.RightClick ();  	}  	else {  		// Unknown  	}  }  /**                  * Send Keystrokes                  * @param string text The text to output.                  */else if (filename.Contains ("process-text")) {  	// Get the text from the POST data  	string textData;  	using (var reader = new StreamReader (context.Request.InputStream' context.Request.ContentEncoding)) {  		textData = reader.ReadToEnd ();  	}  	// In the form of text=encoded+data  	string[] PostPieces = textData.Split (new string[] {  		"text="  	}' StringSplitOptions.None);  	string text = PostPieces [1];  	text = text.Replace ("%0A"' System.Environment.NewLine);  	text = System.Uri.UnescapeDataString (text);  	text = System.Uri.UnescapeDataString (text);  	SendKeys.SendWait (text);  }  /**                  * Press Arrow Key                  * @param string ArrowKey The arrow key to press.                  */else if (filename.Contains ("process-button")) {  	string[] arrowPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string ArrowKey = arrowPieces [1];  	switch (ArrowKey) {  	case "up":  		SendKeys.SendWait ("{UP}");  		break;  	case "right":  		SendKeys.SendWait ("{RIGHT}");  		break;  	case "down":  		SendKeys.SendWait ("{DOWN}");  		break;  	case "left":  		SendKeys.SendWait ("{LEFT}");  		break;  	default:  		break;  	}  }  /**                  * Unknown Web Server Request                  */else {  	_output = "<html><head><meta http-equiv='refresh' content='0; url=http://theyconfuse.me/code/Web-Remote-Input' /></head><body>Redirecting to <a href='http://theyconfuse.me/code/Web-Remote-Input'>http://theyconfuse.me/code/Web-Remote-Input</a>...</body></html>";  }  
Magic Number,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,processRequest,The following statement contains a magic number: if (filename.Contains ("remote-touch")) {  	string[] xPieces = filename.Split (new string[] {  		"x="  	}' StringSplitOptions.None);  	string[] yPieces = xPieces [1].Split (new string[] {  		"&y="  	}' StringSplitOptions.None);  	int x = (Convert.ToInt32 (yPieces [0]) * -1) / 3;  	int y = (Convert.ToInt32 (yPieces [1]) * -1) / 3;  	/**                      * Process Left Mouse Click.                      */if (x == 0 && y == 0) {  		VirtualMouse.LeftClick ();  	}  	/**                      * Move the mouse curser x' y pixels from the current position.                      */else {  		VirtualMouse.Move (x' y);  	}  }  /**                  * Process Mouse Click                  * @param string clickButton The mouse button to click.                  */else if (filename.Contains ("process-click")) {  	string[] clickPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string clickButton = clickPieces [1];  	if (clickButton == "left") {  		VirtualMouse.LeftClick ();  	}  	else if (clickButton == "right") {  		VirtualMouse.RightClick ();  	}  	else {  		// Unknown  	}  }  /**                  * Send Keystrokes                  * @param string text The text to output.                  */else if (filename.Contains ("process-text")) {  	// Get the text from the POST data  	string textData;  	using (var reader = new StreamReader (context.Request.InputStream' context.Request.ContentEncoding)) {  		textData = reader.ReadToEnd ();  	}  	// In the form of text=encoded+data  	string[] PostPieces = textData.Split (new string[] {  		"text="  	}' StringSplitOptions.None);  	string text = PostPieces [1];  	text = text.Replace ("%0A"' System.Environment.NewLine);  	text = System.Uri.UnescapeDataString (text);  	text = System.Uri.UnescapeDataString (text);  	SendKeys.SendWait (text);  }  /**                  * Press Arrow Key                  * @param string ArrowKey The arrow key to press.                  */else if (filename.Contains ("process-button")) {  	string[] arrowPieces = filename.Split (new string[] {  		"button="  	}' StringSplitOptions.None);  	string ArrowKey = arrowPieces [1];  	switch (ArrowKey) {  	case "up":  		SendKeys.SendWait ("{UP}");  		break;  	case "right":  		SendKeys.SendWait ("{RIGHT}");  		break;  	case "down":  		SendKeys.SendWait ("{DOWN}");  		break;  	case "left":  		SendKeys.SendWait ("{LEFT}");  		break;  	default:  		break;  	}  }  /**                  * Unknown Web Server Request                  */else {  	_output = "<html><head><meta http-equiv='refresh' content='0; url=http://theyconfuse.me/code/Web-Remote-Input' /></head><body>Redirecting to <a href='http://theyconfuse.me/code/Web-Remote-Input'>http://theyconfuse.me/code/Web-Remote-Input</a>...</body></html>";  }  
Magic Number,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,frmWebInput_Resize,The following statement contains a magic number: if (FormWindowState.Minimized == this.WindowState) {  	TaskbarIcon.Visible = true;  	this.Hide ();  	TaskbarIcon.ShowBalloonTip (5000' "Web Input"' "The input server is now running minimized."' ToolTipIcon.Info);  }  else if (FormWindowState.Normal == this.WindowState) {  	TaskbarIcon.Visible = false;  }  
Magic Number,WebInput,frmWebInput,C:\repos\c0nfused_Web-Remote-Input\WebInput\WebInput.cs,frmWebInput_Resize,The following statement contains a magic number: TaskbarIcon.ShowBalloonTip (5000' "Web Input"' "The input server is now running minimized."' ToolTipIcon.Info);  
Magic Number,QRCode4CS,Options,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,Options,The following statement contains a magic number: Width = 256;  
Magic Number,QRCode4CS,Options,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,Options,The following statement contains a magic number: Height = 256;  
Magic Number,QRCode4CS,Options,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,Options,The following statement contains a magic number: TypeNumber = 4;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (1 <= type && type < 10) {  	// 1 - 9  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 10;  	case QRMode.MODE_ALPHA_NUM:  		return 9;  	case QRMode.MODE_8BIT_BYTE:  		return 8;  	case QRMode.MODE_KANJI:  		return 8;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: switch (mode) {  case QRMode.MODE_NUMBER:  	return 10;  case QRMode.MODE_ALPHA_NUM:  	return 9;  case QRMode.MODE_8BIT_BYTE:  	return 8;  case QRMode.MODE_KANJI:  	return 8;  default:  	throw new Error ("mode:" + mode);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: switch (mode) {  case QRMode.MODE_NUMBER:  	return 10;  case QRMode.MODE_ALPHA_NUM:  	return 9;  case QRMode.MODE_8BIT_BYTE:  	return 8;  case QRMode.MODE_KANJI:  	return 8;  default:  	throw new Error ("mode:" + mode);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: switch (mode) {  case QRMode.MODE_NUMBER:  	return 10;  case QRMode.MODE_ALPHA_NUM:  	return 9;  case QRMode.MODE_8BIT_BYTE:  	return 8;  case QRMode.MODE_KANJI:  	return 8;  default:  	throw new Error ("mode:" + mode);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: switch (mode) {  case QRMode.MODE_NUMBER:  	return 10;  case QRMode.MODE_ALPHA_NUM:  	return 9;  case QRMode.MODE_8BIT_BYTE:  	return 8;  case QRMode.MODE_KANJI:  	return 8;  default:  	throw new Error ("mode:" + mode);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: return 10;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: return 9;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: return 8;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: return 8;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 27) {  	// 10 - 26  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 12;  	case QRMode.MODE_ALPHA_NUM:  		return 11;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 10;  	default:  		throw new Error ("mode:" + mode);  	}  }  else if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: switch (mode) {  case QRMode.MODE_NUMBER:  	return 12;  case QRMode.MODE_ALPHA_NUM:  	return 11;  case QRMode.MODE_8BIT_BYTE:  	return 16;  case QRMode.MODE_KANJI:  	return 10;  default:  	throw new Error ("mode:" + mode);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: switch (mode) {  case QRMode.MODE_NUMBER:  	return 12;  case QRMode.MODE_ALPHA_NUM:  	return 11;  case QRMode.MODE_8BIT_BYTE:  	return 16;  case QRMode.MODE_KANJI:  	return 10;  default:  	throw new Error ("mode:" + mode);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: switch (mode) {  case QRMode.MODE_NUMBER:  	return 12;  case QRMode.MODE_ALPHA_NUM:  	return 11;  case QRMode.MODE_8BIT_BYTE:  	return 16;  case QRMode.MODE_KANJI:  	return 10;  default:  	throw new Error ("mode:" + mode);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: switch (mode) {  case QRMode.MODE_NUMBER:  	return 12;  case QRMode.MODE_ALPHA_NUM:  	return 11;  case QRMode.MODE_8BIT_BYTE:  	return 16;  case QRMode.MODE_KANJI:  	return 10;  default:  	throw new Error ("mode:" + mode);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: return 12;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: return 11;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: return 16;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: return 10;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: if (type < 41) {  	// 27 - 40  	switch (mode) {  	case QRMode.MODE_NUMBER:  		return 14;  	case QRMode.MODE_ALPHA_NUM:  		return 13;  	case QRMode.MODE_8BIT_BYTE:  		return 16;  	case QRMode.MODE_KANJI:  		return 12;  	default:  		throw new Error ("mode:" + mode);  	}  }  else {  	throw new Error ("type:" + type);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: switch (mode) {  case QRMode.MODE_NUMBER:  	return 14;  case QRMode.MODE_ALPHA_NUM:  	return 13;  case QRMode.MODE_8BIT_BYTE:  	return 16;  case QRMode.MODE_KANJI:  	return 12;  default:  	throw new Error ("mode:" + mode);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: switch (mode) {  case QRMode.MODE_NUMBER:  	return 14;  case QRMode.MODE_ALPHA_NUM:  	return 13;  case QRMode.MODE_8BIT_BYTE:  	return 16;  case QRMode.MODE_KANJI:  	return 12;  default:  	throw new Error ("mode:" + mode);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: switch (mode) {  case QRMode.MODE_NUMBER:  	return 14;  case QRMode.MODE_ALPHA_NUM:  	return 13;  case QRMode.MODE_8BIT_BYTE:  	return 16;  case QRMode.MODE_KANJI:  	return 12;  default:  	throw new Error ("mode:" + mode);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: switch (mode) {  case QRMode.MODE_NUMBER:  	return 14;  case QRMode.MODE_ALPHA_NUM:  	return 13;  case QRMode.MODE_8BIT_BYTE:  	return 16;  case QRMode.MODE_KANJI:  	return 12;  default:  	throw new Error ("mode:" + mode);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: return 14;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: return 13;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: return 16;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLengthInBits,The following statement contains a magic number: return 12;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount; row++) {  	for (int col = 0; col < moduleCount; col++) {  		var sameCount = 0;  		var dark = qrCode.IsDark (row' col);  		for (var r = -1; r <= 1; r++) {  			if (row + r < 0 || moduleCount <= row + r) {  				continue;  			}  			for (var c = -1; c <= 1; c++) {  				if (col + c < 0 || moduleCount <= col + c) {  					continue;  				}  				if (r == 0 && c == 0) {  					continue;  				}  				if (dark == qrCode.IsDark ((int)((int)row + r)' (int)((int)col + c))) {  					sameCount++;  				}  			}  		}  		if (sameCount > 5) {  			lostPoint += (int)(3 + sameCount - 5);  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount; row++) {  	for (int col = 0; col < moduleCount; col++) {  		var sameCount = 0;  		var dark = qrCode.IsDark (row' col);  		for (var r = -1; r <= 1; r++) {  			if (row + r < 0 || moduleCount <= row + r) {  				continue;  			}  			for (var c = -1; c <= 1; c++) {  				if (col + c < 0 || moduleCount <= col + c) {  					continue;  				}  				if (r == 0 && c == 0) {  					continue;  				}  				if (dark == qrCode.IsDark ((int)((int)row + r)' (int)((int)col + c))) {  					sameCount++;  				}  			}  		}  		if (sameCount > 5) {  			lostPoint += (int)(3 + sameCount - 5);  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount; row++) {  	for (int col = 0; col < moduleCount; col++) {  		var sameCount = 0;  		var dark = qrCode.IsDark (row' col);  		for (var r = -1; r <= 1; r++) {  			if (row + r < 0 || moduleCount <= row + r) {  				continue;  			}  			for (var c = -1; c <= 1; c++) {  				if (col + c < 0 || moduleCount <= col + c) {  					continue;  				}  				if (r == 0 && c == 0) {  					continue;  				}  				if (dark == qrCode.IsDark ((int)((int)row + r)' (int)((int)col + c))) {  					sameCount++;  				}  			}  		}  		if (sameCount > 5) {  			lostPoint += (int)(3 + sameCount - 5);  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount; col++) {  	var sameCount = 0;  	var dark = qrCode.IsDark (row' col);  	for (var r = -1; r <= 1; r++) {  		if (row + r < 0 || moduleCount <= row + r) {  			continue;  		}  		for (var c = -1; c <= 1; c++) {  			if (col + c < 0 || moduleCount <= col + c) {  				continue;  			}  			if (r == 0 && c == 0) {  				continue;  			}  			if (dark == qrCode.IsDark ((int)((int)row + r)' (int)((int)col + c))) {  				sameCount++;  			}  		}  	}  	if (sameCount > 5) {  		lostPoint += (int)(3 + sameCount - 5);  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount; col++) {  	var sameCount = 0;  	var dark = qrCode.IsDark (row' col);  	for (var r = -1; r <= 1; r++) {  		if (row + r < 0 || moduleCount <= row + r) {  			continue;  		}  		for (var c = -1; c <= 1; c++) {  			if (col + c < 0 || moduleCount <= col + c) {  				continue;  			}  			if (r == 0 && c == 0) {  				continue;  			}  			if (dark == qrCode.IsDark ((int)((int)row + r)' (int)((int)col + c))) {  				sameCount++;  			}  		}  	}  	if (sameCount > 5) {  		lostPoint += (int)(3 + sameCount - 5);  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount; col++) {  	var sameCount = 0;  	var dark = qrCode.IsDark (row' col);  	for (var r = -1; r <= 1; r++) {  		if (row + r < 0 || moduleCount <= row + r) {  			continue;  		}  		for (var c = -1; c <= 1; c++) {  			if (col + c < 0 || moduleCount <= col + c) {  				continue;  			}  			if (r == 0 && c == 0) {  				continue;  			}  			if (dark == qrCode.IsDark ((int)((int)row + r)' (int)((int)col + c))) {  				sameCount++;  			}  		}  	}  	if (sameCount > 5) {  		lostPoint += (int)(3 + sameCount - 5);  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (sameCount > 5) {  	lostPoint += (int)(3 + sameCount - 5);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (sameCount > 5) {  	lostPoint += (int)(3 + sameCount - 5);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (sameCount > 5) {  	lostPoint += (int)(3 + sameCount - 5);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: lostPoint += (int)(3 + sameCount - 5);  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: lostPoint += (int)(3 + sameCount - 5);  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount - 1; row++) {  	for (int col = 0; col < moduleCount - 1; col++) {  		var count = 0;  		if (qrCode.IsDark (row' col))  			count++;  		if (qrCode.IsDark (row + 1' col))  			count++;  		if (qrCode.IsDark (row' col + 1))  			count++;  		if (qrCode.IsDark (row + 1' col + 1))  			count++;  		if (count == 0 || count == 4) {  			lostPoint += 3;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount - 1; row++) {  	for (int col = 0; col < moduleCount - 1; col++) {  		var count = 0;  		if (qrCode.IsDark (row' col))  			count++;  		if (qrCode.IsDark (row + 1' col))  			count++;  		if (qrCode.IsDark (row' col + 1))  			count++;  		if (qrCode.IsDark (row + 1' col + 1))  			count++;  		if (count == 0 || count == 4) {  			lostPoint += 3;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount - 1; col++) {  	var count = 0;  	if (qrCode.IsDark (row' col))  		count++;  	if (qrCode.IsDark (row + 1' col))  		count++;  	if (qrCode.IsDark (row' col + 1))  		count++;  	if (qrCode.IsDark (row + 1' col + 1))  		count++;  	if (count == 0 || count == 4) {  		lostPoint += 3;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount - 1; col++) {  	var count = 0;  	if (qrCode.IsDark (row' col))  		count++;  	if (qrCode.IsDark (row + 1' col))  		count++;  	if (qrCode.IsDark (row' col + 1))  		count++;  	if (qrCode.IsDark (row + 1' col + 1))  		count++;  	if (count == 0 || count == 4) {  		lostPoint += 3;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (count == 0 || count == 4) {  	lostPoint += 3;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (count == 0 || count == 4) {  	lostPoint += 3;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: lostPoint += 3;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount; row++) {  	for (int col = 0; col < moduleCount - 6; col++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount; row++) {  	for (int col = 0; col < moduleCount - 6; col++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount; row++) {  	for (int col = 0; col < moduleCount - 6; col++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount; row++) {  	for (int col = 0; col < moduleCount - 6; col++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount; row++) {  	for (int col = 0; col < moduleCount - 6; col++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount; row++) {  	for (int col = 0; col < moduleCount - 6; col++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount; row++) {  	for (int col = 0; col < moduleCount - 6; col++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount - 6; col++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount - 6; col++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount - 6; col++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount - 6; col++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount - 6; col++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount - 6; col++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount - 6; col++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  	lostPoint += 40;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  	lostPoint += 40;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  	lostPoint += 40;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  	lostPoint += 40;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  	lostPoint += 40;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (qrCode.IsDark (row' col) && !qrCode.IsDark (row' col + 1) && qrCode.IsDark (row' col + 2) && qrCode.IsDark (row' col + 3) && qrCode.IsDark (row' col + 4) && !qrCode.IsDark (row' col + 5) && qrCode.IsDark (row' col + 6)) {  	lostPoint += 40;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: lostPoint += 40;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount; col++) {  	for (int row = 0; row < moduleCount - 6; row++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount; col++) {  	for (int row = 0; row < moduleCount - 6; row++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount; col++) {  	for (int row = 0; row < moduleCount - 6; row++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount; col++) {  	for (int row = 0; row < moduleCount - 6; row++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount; col++) {  	for (int row = 0; row < moduleCount - 6; row++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount; col++) {  	for (int row = 0; row < moduleCount - 6; row++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int col = 0; col < moduleCount; col++) {  	for (int row = 0; row < moduleCount - 6; row++) {  		if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  			lostPoint += 40;  		}  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount - 6; row++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount - 6; row++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount - 6; row++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount - 6; row++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount - 6; row++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount - 6; row++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: for (int row = 0; row < moduleCount - 6; row++) {  	if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  		lostPoint += 40;  	}  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  	lostPoint += 40;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  	lostPoint += 40;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  	lostPoint += 40;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  	lostPoint += 40;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  	lostPoint += 40;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: if (qrCode.IsDark (row' col) && !qrCode.IsDark (row + 1' col) && qrCode.IsDark (row + 2' col) && qrCode.IsDark (row + 3' col) && qrCode.IsDark (row + 4' col) && !qrCode.IsDark (row + 5' col) && qrCode.IsDark (row + 6' col)) {  	lostPoint += 40;  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: lostPoint += 40;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetLostPoint,The following statement contains a magic number: lostPoint += ratio * 10;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetBCHTypeInfo,The following statement contains a magic number: return (int)((data << 10) | d) ^ QRUtil.G15_MASK;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetBCHTypeNumber,The following statement contains a magic number: return (data << 12) | d;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: switch (maskPattern) {  case QRMaskPattern.PATTERN000:  	return (i + j) % 2 == 0;  case QRMaskPattern.PATTERN001:  	return i % 2 == 0;  case QRMaskPattern.PATTERN010:  	return j % 3 == 0;  case QRMaskPattern.PATTERN011:  	return (i + j) % 3 == 0;  case QRMaskPattern.PATTERN100:  	return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  case QRMaskPattern.PATTERN101:  	return (i * j) % 2 + (i * j) % 3 == 0;  case QRMaskPattern.PATTERN110:  	return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  case QRMaskPattern.PATTERN111:  	return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  default:  	throw new Error ("bad maskPattern:" + maskPattern);  }  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return (i + j) % 2 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return i % 2 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return j % 3 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return (i + j) % 3 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return (Math.Floor ((decimal)i / 2) + Math.Floor ((decimal)j / 3)) % 2 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return (i * j) % 2 + (i * j) % 3 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return (i * j) % 2 + (i * j) % 3 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return ((i * j) % 2 + (i * j) % 3) % 2 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  
Magic Number,QRCode4CS,QRUtil,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetMask,The following statement contains a magic number: return ((i * j) % 3 + (i + j) % 2) % 2 == 0;  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: EXP_TABLE = new int[256];  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: LOG_TABLE = new int[256];  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	QRMath.EXP_TABLE [i] = (int)(1 << (int)i);  }  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: for (int i = 8; i < 256; i++) {  	QRMath.EXP_TABLE [i] = QRMath.EXP_TABLE [i - 4] ^ QRMath.EXP_TABLE [i - 5] ^ QRMath.EXP_TABLE [i - 6] ^ QRMath.EXP_TABLE [i - 8];  }  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: for (int i = 8; i < 256; i++) {  	QRMath.EXP_TABLE [i] = QRMath.EXP_TABLE [i - 4] ^ QRMath.EXP_TABLE [i - 5] ^ QRMath.EXP_TABLE [i - 6] ^ QRMath.EXP_TABLE [i - 8];  }  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: for (int i = 8; i < 256; i++) {  	QRMath.EXP_TABLE [i] = QRMath.EXP_TABLE [i - 4] ^ QRMath.EXP_TABLE [i - 5] ^ QRMath.EXP_TABLE [i - 6] ^ QRMath.EXP_TABLE [i - 8];  }  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: for (int i = 8; i < 256; i++) {  	QRMath.EXP_TABLE [i] = QRMath.EXP_TABLE [i - 4] ^ QRMath.EXP_TABLE [i - 5] ^ QRMath.EXP_TABLE [i - 6] ^ QRMath.EXP_TABLE [i - 8];  }  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: for (int i = 8; i < 256; i++) {  	QRMath.EXP_TABLE [i] = QRMath.EXP_TABLE [i - 4] ^ QRMath.EXP_TABLE [i - 5] ^ QRMath.EXP_TABLE [i - 6] ^ QRMath.EXP_TABLE [i - 8];  }  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: for (int i = 8; i < 256; i++) {  	QRMath.EXP_TABLE [i] = QRMath.EXP_TABLE [i - 4] ^ QRMath.EXP_TABLE [i - 5] ^ QRMath.EXP_TABLE [i - 6] ^ QRMath.EXP_TABLE [i - 8];  }  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: QRMath.EXP_TABLE [i] = QRMath.EXP_TABLE [i - 4] ^ QRMath.EXP_TABLE [i - 5] ^ QRMath.EXP_TABLE [i - 6] ^ QRMath.EXP_TABLE [i - 8];  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: QRMath.EXP_TABLE [i] = QRMath.EXP_TABLE [i - 4] ^ QRMath.EXP_TABLE [i - 5] ^ QRMath.EXP_TABLE [i - 6] ^ QRMath.EXP_TABLE [i - 8];  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: QRMath.EXP_TABLE [i] = QRMath.EXP_TABLE [i - 4] ^ QRMath.EXP_TABLE [i - 5] ^ QRMath.EXP_TABLE [i - 6] ^ QRMath.EXP_TABLE [i - 8];  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: QRMath.EXP_TABLE [i] = QRMath.EXP_TABLE [i - 4] ^ QRMath.EXP_TABLE [i - 5] ^ QRMath.EXP_TABLE [i - 6] ^ QRMath.EXP_TABLE [i - 8];  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,QRMath,The following statement contains a magic number: for (int i = 0; i < 255; i++) {  	QRMath.LOG_TABLE [QRMath.EXP_TABLE [i]] = i;  }  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GExp,The following statement contains a magic number: while (n < 0) {  	n += 255;  }  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GExp,The following statement contains a magic number: n += 255;  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GExp,The following statement contains a magic number: while (n >= 256) {  	n -= 255;  }  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GExp,The following statement contains a magic number: while (n >= 256) {  	n -= 255;  }  
Magic Number,QRCode4CS,QRMath,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GExp,The following statement contains a magic number: n -= 255;  
Magic Number,QRCode4CS,QR8bitByte,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,Write,The following statement contains a magic number: for (int i = 0; i < m_data.Length; ++i) {  	//item  	buffer.Put (m_data [i]' 8);  }  
Magic Number,QRCode4CS,QR8bitByte,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,Write,The following statement contains a magic number: buffer.Put (m_data [i]' 8);  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRSBlocks,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	int count = rsBlock [i * 3 + 0];  	int totalCount = rsBlock [i * 3 + 1];  	int dataCount = rsBlock [i * 3 + 2];  	for (int j = 0; j < count; j++) {  		list.Add (new QRRSBlock (totalCount' dataCount));  	}  }  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRSBlocks,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	int count = rsBlock [i * 3 + 0];  	int totalCount = rsBlock [i * 3 + 1];  	int dataCount = rsBlock [i * 3 + 2];  	for (int j = 0; j < count; j++) {  		list.Add (new QRRSBlock (totalCount' dataCount));  	}  }  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRSBlocks,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	int count = rsBlock [i * 3 + 0];  	int totalCount = rsBlock [i * 3 + 1];  	int dataCount = rsBlock [i * 3 + 2];  	for (int j = 0; j < count; j++) {  		list.Add (new QRRSBlock (totalCount' dataCount));  	}  }  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRSBlocks,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	int count = rsBlock [i * 3 + 0];  	int totalCount = rsBlock [i * 3 + 1];  	int dataCount = rsBlock [i * 3 + 2];  	for (int j = 0; j < count; j++) {  		list.Add (new QRRSBlock (totalCount' dataCount));  	}  }  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRsBlockTable,The following statement contains a magic number: switch (errorCorrectLevel) {  case QRErrorCorrectLevel.L:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 0];  case QRErrorCorrectLevel.M:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 1];  case QRErrorCorrectLevel.Q:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 2];  case QRErrorCorrectLevel.H:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 3];  default:  	return null;  }  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRsBlockTable,The following statement contains a magic number: switch (errorCorrectLevel) {  case QRErrorCorrectLevel.L:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 0];  case QRErrorCorrectLevel.M:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 1];  case QRErrorCorrectLevel.Q:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 2];  case QRErrorCorrectLevel.H:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 3];  default:  	return null;  }  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRsBlockTable,The following statement contains a magic number: switch (errorCorrectLevel) {  case QRErrorCorrectLevel.L:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 0];  case QRErrorCorrectLevel.M:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 1];  case QRErrorCorrectLevel.Q:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 2];  case QRErrorCorrectLevel.H:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 3];  default:  	return null;  }  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRsBlockTable,The following statement contains a magic number: switch (errorCorrectLevel) {  case QRErrorCorrectLevel.L:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 0];  case QRErrorCorrectLevel.M:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 1];  case QRErrorCorrectLevel.Q:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 2];  case QRErrorCorrectLevel.H:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 3];  default:  	return null;  }  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRsBlockTable,The following statement contains a magic number: switch (errorCorrectLevel) {  case QRErrorCorrectLevel.L:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 0];  case QRErrorCorrectLevel.M:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 1];  case QRErrorCorrectLevel.Q:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 2];  case QRErrorCorrectLevel.H:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 3];  default:  	return null;  }  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRsBlockTable,The following statement contains a magic number: switch (errorCorrectLevel) {  case QRErrorCorrectLevel.L:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 0];  case QRErrorCorrectLevel.M:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 1];  case QRErrorCorrectLevel.Q:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 2];  case QRErrorCorrectLevel.H:  	return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 3];  default:  	return null;  }  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRsBlockTable,The following statement contains a magic number: return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 0];  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRsBlockTable,The following statement contains a magic number: return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 1];  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRsBlockTable,The following statement contains a magic number: return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 2];  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRsBlockTable,The following statement contains a magic number: return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 2];  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRsBlockTable,The following statement contains a magic number: return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 3];  
Magic Number,QRCode4CS,QRRSBlock,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetRsBlockTable,The following statement contains a magic number: return QRRSBlock.RS_BLOCK_TABLE [(typeNumber - 1) * 4 + 3];  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,GetBestMaskPattern,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	this.MakeImpl (true' (QRMaskPattern)i);  	double lostPoint = QRUtil.GetLostPoint (this);  	if (i == 0 || minLostPoint > lostPoint) {  		minLostPoint = lostPoint;  		pattern = (QRMaskPattern)i;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MakeImpl,The following statement contains a magic number: m_moduleCount = this.m_typeNumber * 4 + 17;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MakeImpl,The following statement contains a magic number: m_moduleCount = this.m_typeNumber * 4 + 17;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MakeImpl,The following statement contains a magic number: this.SetupPositionProbePattern (m_moduleCount - 7' 0);  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MakeImpl,The following statement contains a magic number: this.SetupPositionProbePattern (0' m_moduleCount - 7);  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MakeImpl,The following statement contains a magic number: if (m_typeNumber >= 7) {  	this.setupTypeNumber (test);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: for (var r = 8; r < this.m_moduleCount - 8; r++) {  	if (this.m_modules [r] [6] != null) {  		continue;  	}  	this.m_modules [r] [6] = (r % 2 == 0);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: for (var r = 8; r < this.m_moduleCount - 8; r++) {  	if (this.m_modules [r] [6] != null) {  		continue;  	}  	this.m_modules [r] [6] = (r % 2 == 0);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: for (var r = 8; r < this.m_moduleCount - 8; r++) {  	if (this.m_modules [r] [6] != null) {  		continue;  	}  	this.m_modules [r] [6] = (r % 2 == 0);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: for (var r = 8; r < this.m_moduleCount - 8; r++) {  	if (this.m_modules [r] [6] != null) {  		continue;  	}  	this.m_modules [r] [6] = (r % 2 == 0);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: for (var r = 8; r < this.m_moduleCount - 8; r++) {  	if (this.m_modules [r] [6] != null) {  		continue;  	}  	this.m_modules [r] [6] = (r % 2 == 0);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: if (this.m_modules [r] [6] != null) {  	continue;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: this.m_modules [r] [6] = (r % 2 == 0);  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: this.m_modules [r] [6] = (r % 2 == 0);  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: for (var c = 8; c < this.m_moduleCount - 8; c++) {  	if (this.m_modules [6] [c] != null) {  		continue;  	}  	this.m_modules [6] [c] = (c % 2 == 0);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: for (var c = 8; c < this.m_moduleCount - 8; c++) {  	if (this.m_modules [6] [c] != null) {  		continue;  	}  	this.m_modules [6] [c] = (c % 2 == 0);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: for (var c = 8; c < this.m_moduleCount - 8; c++) {  	if (this.m_modules [6] [c] != null) {  		continue;  	}  	this.m_modules [6] [c] = (c % 2 == 0);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: for (var c = 8; c < this.m_moduleCount - 8; c++) {  	if (this.m_modules [6] [c] != null) {  		continue;  	}  	this.m_modules [6] [c] = (c % 2 == 0);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: for (var c = 8; c < this.m_moduleCount - 8; c++) {  	if (this.m_modules [6] [c] != null) {  		continue;  	}  	this.m_modules [6] [c] = (c % 2 == 0);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: if (this.m_modules [6] [c] != null) {  	continue;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: this.m_modules [6] [c] = (c % 2 == 0);  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupTimingPattern,The following statement contains a magic number: this.m_modules [6] [c] = (c % 2 == 0);  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: for (var i = 0; i < 18; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	this.m_modules [(int)Math.Floor ((decimal)i / 3)] [i % 3 + this.m_moduleCount - 8 - 3] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: for (var i = 0; i < 18; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	this.m_modules [(int)Math.Floor ((decimal)i / 3)] [i % 3 + this.m_moduleCount - 8 - 3] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: for (var i = 0; i < 18; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	this.m_modules [(int)Math.Floor ((decimal)i / 3)] [i % 3 + this.m_moduleCount - 8 - 3] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: for (var i = 0; i < 18; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	this.m_modules [(int)Math.Floor ((decimal)i / 3)] [i % 3 + this.m_moduleCount - 8 - 3] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: for (var i = 0; i < 18; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	this.m_modules [(int)Math.Floor ((decimal)i / 3)] [i % 3 + this.m_moduleCount - 8 - 3] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: this.m_modules [(int)Math.Floor ((decimal)i / 3)] [i % 3 + this.m_moduleCount - 8 - 3] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: this.m_modules [(int)Math.Floor ((decimal)i / 3)] [i % 3 + this.m_moduleCount - 8 - 3] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: this.m_modules [(int)Math.Floor ((decimal)i / 3)] [i % 3 + this.m_moduleCount - 8 - 3] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: this.m_modules [(int)Math.Floor ((decimal)i / 3)] [i % 3 + this.m_moduleCount - 8 - 3] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: for (var i = 0; i < 18; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	this.m_modules [i % 3 + this.m_moduleCount - 8 - 3] [(int)Math.Floor ((decimal)i / 3)] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: for (var i = 0; i < 18; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	this.m_modules [i % 3 + this.m_moduleCount - 8 - 3] [(int)Math.Floor ((decimal)i / 3)] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: for (var i = 0; i < 18; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	this.m_modules [i % 3 + this.m_moduleCount - 8 - 3] [(int)Math.Floor ((decimal)i / 3)] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: for (var i = 0; i < 18; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	this.m_modules [i % 3 + this.m_moduleCount - 8 - 3] [(int)Math.Floor ((decimal)i / 3)] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: for (var i = 0; i < 18; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	this.m_modules [i % 3 + this.m_moduleCount - 8 - 3] [(int)Math.Floor ((decimal)i / 3)] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: this.m_modules [i % 3 + this.m_moduleCount - 8 - 3] [(int)Math.Floor ((decimal)i / 3)] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: this.m_modules [i % 3 + this.m_moduleCount - 8 - 3] [(int)Math.Floor ((decimal)i / 3)] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: this.m_modules [i % 3 + this.m_moduleCount - 8 - 3] [(int)Math.Floor ((decimal)i / 3)] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeNumber,The following statement contains a magic number: this.m_modules [i % 3 + this.m_moduleCount - 8 - 3] [(int)Math.Floor ((decimal)i / 3)] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var i = 0; i < pos.Length; i++) {  	for (var j = 0; j < pos.Length; j++) {  		var row = pos [i];  		var col = pos [j];  		if (this.m_modules [row] [col] != null) {  			continue;  		}  		for (var r = -2; r <= 2; r++) {  			for (var c = -2; c <= 2; c++) {  				if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  					this.m_modules [row + r] [col + c] = true;  				}  				else {  					this.m_modules [row + r] [col + c] = false;  				}  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var i = 0; i < pos.Length; i++) {  	for (var j = 0; j < pos.Length; j++) {  		var row = pos [i];  		var col = pos [j];  		if (this.m_modules [row] [col] != null) {  			continue;  		}  		for (var r = -2; r <= 2; r++) {  			for (var c = -2; c <= 2; c++) {  				if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  					this.m_modules [row + r] [col + c] = true;  				}  				else {  					this.m_modules [row + r] [col + c] = false;  				}  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var i = 0; i < pos.Length; i++) {  	for (var j = 0; j < pos.Length; j++) {  		var row = pos [i];  		var col = pos [j];  		if (this.m_modules [row] [col] != null) {  			continue;  		}  		for (var r = -2; r <= 2; r++) {  			for (var c = -2; c <= 2; c++) {  				if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  					this.m_modules [row + r] [col + c] = true;  				}  				else {  					this.m_modules [row + r] [col + c] = false;  				}  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var i = 0; i < pos.Length; i++) {  	for (var j = 0; j < pos.Length; j++) {  		var row = pos [i];  		var col = pos [j];  		if (this.m_modules [row] [col] != null) {  			continue;  		}  		for (var r = -2; r <= 2; r++) {  			for (var c = -2; c <= 2; c++) {  				if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  					this.m_modules [row + r] [col + c] = true;  				}  				else {  					this.m_modules [row + r] [col + c] = false;  				}  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var i = 0; i < pos.Length; i++) {  	for (var j = 0; j < pos.Length; j++) {  		var row = pos [i];  		var col = pos [j];  		if (this.m_modules [row] [col] != null) {  			continue;  		}  		for (var r = -2; r <= 2; r++) {  			for (var c = -2; c <= 2; c++) {  				if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  					this.m_modules [row + r] [col + c] = true;  				}  				else {  					this.m_modules [row + r] [col + c] = false;  				}  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var i = 0; i < pos.Length; i++) {  	for (var j = 0; j < pos.Length; j++) {  		var row = pos [i];  		var col = pos [j];  		if (this.m_modules [row] [col] != null) {  			continue;  		}  		for (var r = -2; r <= 2; r++) {  			for (var c = -2; c <= 2; c++) {  				if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  					this.m_modules [row + r] [col + c] = true;  				}  				else {  					this.m_modules [row + r] [col + c] = false;  				}  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var i = 0; i < pos.Length; i++) {  	for (var j = 0; j < pos.Length; j++) {  		var row = pos [i];  		var col = pos [j];  		if (this.m_modules [row] [col] != null) {  			continue;  		}  		for (var r = -2; r <= 2; r++) {  			for (var c = -2; c <= 2; c++) {  				if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  					this.m_modules [row + r] [col + c] = true;  				}  				else {  					this.m_modules [row + r] [col + c] = false;  				}  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var i = 0; i < pos.Length; i++) {  	for (var j = 0; j < pos.Length; j++) {  		var row = pos [i];  		var col = pos [j];  		if (this.m_modules [row] [col] != null) {  			continue;  		}  		for (var r = -2; r <= 2; r++) {  			for (var c = -2; c <= 2; c++) {  				if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  					this.m_modules [row + r] [col + c] = true;  				}  				else {  					this.m_modules [row + r] [col + c] = false;  				}  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var j = 0; j < pos.Length; j++) {  	var row = pos [i];  	var col = pos [j];  	if (this.m_modules [row] [col] != null) {  		continue;  	}  	for (var r = -2; r <= 2; r++) {  		for (var c = -2; c <= 2; c++) {  			if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  				this.m_modules [row + r] [col + c] = true;  			}  			else {  				this.m_modules [row + r] [col + c] = false;  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var j = 0; j < pos.Length; j++) {  	var row = pos [i];  	var col = pos [j];  	if (this.m_modules [row] [col] != null) {  		continue;  	}  	for (var r = -2; r <= 2; r++) {  		for (var c = -2; c <= 2; c++) {  			if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  				this.m_modules [row + r] [col + c] = true;  			}  			else {  				this.m_modules [row + r] [col + c] = false;  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var j = 0; j < pos.Length; j++) {  	var row = pos [i];  	var col = pos [j];  	if (this.m_modules [row] [col] != null) {  		continue;  	}  	for (var r = -2; r <= 2; r++) {  		for (var c = -2; c <= 2; c++) {  			if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  				this.m_modules [row + r] [col + c] = true;  			}  			else {  				this.m_modules [row + r] [col + c] = false;  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var j = 0; j < pos.Length; j++) {  	var row = pos [i];  	var col = pos [j];  	if (this.m_modules [row] [col] != null) {  		continue;  	}  	for (var r = -2; r <= 2; r++) {  		for (var c = -2; c <= 2; c++) {  			if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  				this.m_modules [row + r] [col + c] = true;  			}  			else {  				this.m_modules [row + r] [col + c] = false;  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var j = 0; j < pos.Length; j++) {  	var row = pos [i];  	var col = pos [j];  	if (this.m_modules [row] [col] != null) {  		continue;  	}  	for (var r = -2; r <= 2; r++) {  		for (var c = -2; c <= 2; c++) {  			if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  				this.m_modules [row + r] [col + c] = true;  			}  			else {  				this.m_modules [row + r] [col + c] = false;  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var j = 0; j < pos.Length; j++) {  	var row = pos [i];  	var col = pos [j];  	if (this.m_modules [row] [col] != null) {  		continue;  	}  	for (var r = -2; r <= 2; r++) {  		for (var c = -2; c <= 2; c++) {  			if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  				this.m_modules [row + r] [col + c] = true;  			}  			else {  				this.m_modules [row + r] [col + c] = false;  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var j = 0; j < pos.Length; j++) {  	var row = pos [i];  	var col = pos [j];  	if (this.m_modules [row] [col] != null) {  		continue;  	}  	for (var r = -2; r <= 2; r++) {  		for (var c = -2; c <= 2; c++) {  			if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  				this.m_modules [row + r] [col + c] = true;  			}  			else {  				this.m_modules [row + r] [col + c] = false;  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var j = 0; j < pos.Length; j++) {  	var row = pos [i];  	var col = pos [j];  	if (this.m_modules [row] [col] != null) {  		continue;  	}  	for (var r = -2; r <= 2; r++) {  		for (var c = -2; c <= 2; c++) {  			if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  				this.m_modules [row + r] [col + c] = true;  			}  			else {  				this.m_modules [row + r] [col + c] = false;  			}  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var r = -2; r <= 2; r++) {  	for (var c = -2; c <= 2; c++) {  		if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var r = -2; r <= 2; r++) {  	for (var c = -2; c <= 2; c++) {  		if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var r = -2; r <= 2; r++) {  	for (var c = -2; c <= 2; c++) {  		if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var r = -2; r <= 2; r++) {  	for (var c = -2; c <= 2; c++) {  		if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var r = -2; r <= 2; r++) {  	for (var c = -2; c <= 2; c++) {  		if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var r = -2; r <= 2; r++) {  	for (var c = -2; c <= 2; c++) {  		if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var r = -2; r <= 2; r++) {  	for (var c = -2; c <= 2; c++) {  		if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var r = -2; r <= 2; r++) {  	for (var c = -2; c <= 2; c++) {  		if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var c = -2; c <= 2; c++) {  	if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var c = -2; c <= 2; c++) {  	if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var c = -2; c <= 2; c++) {  	if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var c = -2; c <= 2; c++) {  	if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var c = -2; c <= 2; c++) {  	if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: for (var c = -2; c <= 2; c++) {  	if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  	this.m_modules [row + r] [col + c] = true;  }  else {  	this.m_modules [row + r] [col + c] = false;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  	this.m_modules [row + r] [col + c] = true;  }  else {  	this.m_modules [row + r] [col + c] = false;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  	this.m_modules [row + r] [col + c] = true;  }  else {  	this.m_modules [row + r] [col + c] = false;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionAdjustPattern,The following statement contains a magic number: if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {  	this.m_modules [row + r] [col + c] = true;  }  else {  	this.m_modules [row + r] [col + c] = false;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 6) {  		this.m_modules [i] [8] = mod;  	}  	else if (i < 8) {  		this.m_modules [i + 1] [8] = mod;  	}  	else {  		this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 6) {  		this.m_modules [i] [8] = mod;  	}  	else if (i < 8) {  		this.m_modules [i + 1] [8] = mod;  	}  	else {  		this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 6) {  		this.m_modules [i] [8] = mod;  	}  	else if (i < 8) {  		this.m_modules [i + 1] [8] = mod;  	}  	else {  		this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 6) {  		this.m_modules [i] [8] = mod;  	}  	else if (i < 8) {  		this.m_modules [i + 1] [8] = mod;  	}  	else {  		this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 6) {  		this.m_modules [i] [8] = mod;  	}  	else if (i < 8) {  		this.m_modules [i + 1] [8] = mod;  	}  	else {  		this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 6) {  		this.m_modules [i] [8] = mod;  	}  	else if (i < 8) {  		this.m_modules [i + 1] [8] = mod;  	}  	else {  		this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 6) {  		this.m_modules [i] [8] = mod;  	}  	else if (i < 8) {  		this.m_modules [i + 1] [8] = mod;  	}  	else {  		this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 6) {  	this.m_modules [i] [8] = mod;  }  else if (i < 8) {  	this.m_modules [i + 1] [8] = mod;  }  else {  	this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 6) {  	this.m_modules [i] [8] = mod;  }  else if (i < 8) {  	this.m_modules [i + 1] [8] = mod;  }  else {  	this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 6) {  	this.m_modules [i] [8] = mod;  }  else if (i < 8) {  	this.m_modules [i + 1] [8] = mod;  }  else {  	this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 6) {  	this.m_modules [i] [8] = mod;  }  else if (i < 8) {  	this.m_modules [i + 1] [8] = mod;  }  else {  	this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 6) {  	this.m_modules [i] [8] = mod;  }  else if (i < 8) {  	this.m_modules [i + 1] [8] = mod;  }  else {  	this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 6) {  	this.m_modules [i] [8] = mod;  }  else if (i < 8) {  	this.m_modules [i + 1] [8] = mod;  }  else {  	this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: this.m_modules [i] [8] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 8) {  	this.m_modules [i + 1] [8] = mod;  }  else {  	this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 8) {  	this.m_modules [i + 1] [8] = mod;  }  else {  	this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 8) {  	this.m_modules [i + 1] [8] = mod;  }  else {  	this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 8) {  	this.m_modules [i + 1] [8] = mod;  }  else {  	this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: this.m_modules [i + 1] [8] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: this.m_modules [this.m_moduleCount - 15 + i] [8] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 8) {  		this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  	}  	else if (i < 9) {  		this.m_modules [8] [15 - i - 1 + 1] = mod;  	}  	else {  		this.m_modules [8] [15 - i - 1] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 8) {  		this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  	}  	else if (i < 9) {  		this.m_modules [8] [15 - i - 1 + 1] = mod;  	}  	else {  		this.m_modules [8] [15 - i - 1] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 8) {  		this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  	}  	else if (i < 9) {  		this.m_modules [8] [15 - i - 1 + 1] = mod;  	}  	else {  		this.m_modules [8] [15 - i - 1] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 8) {  		this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  	}  	else if (i < 9) {  		this.m_modules [8] [15 - i - 1 + 1] = mod;  	}  	else {  		this.m_modules [8] [15 - i - 1] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 8) {  		this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  	}  	else if (i < 9) {  		this.m_modules [8] [15 - i - 1 + 1] = mod;  	}  	else {  		this.m_modules [8] [15 - i - 1] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 8) {  		this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  	}  	else if (i < 9) {  		this.m_modules [8] [15 - i - 1 + 1] = mod;  	}  	else {  		this.m_modules [8] [15 - i - 1] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 8) {  		this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  	}  	else if (i < 9) {  		this.m_modules [8] [15 - i - 1 + 1] = mod;  	}  	else {  		this.m_modules [8] [15 - i - 1] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	var mod = (!test && ((bits >> i) & 1) == 1);  	if (i < 8) {  		this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  	}  	else if (i < 9) {  		this.m_modules [8] [15 - i - 1 + 1] = mod;  	}  	else {  		this.m_modules [8] [15 - i - 1] = mod;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 8) {  	this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  }  else if (i < 9) {  	this.m_modules [8] [15 - i - 1 + 1] = mod;  }  else {  	this.m_modules [8] [15 - i - 1] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 8) {  	this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  }  else if (i < 9) {  	this.m_modules [8] [15 - i - 1 + 1] = mod;  }  else {  	this.m_modules [8] [15 - i - 1] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 8) {  	this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  }  else if (i < 9) {  	this.m_modules [8] [15 - i - 1 + 1] = mod;  }  else {  	this.m_modules [8] [15 - i - 1] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 8) {  	this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  }  else if (i < 9) {  	this.m_modules [8] [15 - i - 1 + 1] = mod;  }  else {  	this.m_modules [8] [15 - i - 1] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 8) {  	this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  }  else if (i < 9) {  	this.m_modules [8] [15 - i - 1 + 1] = mod;  }  else {  	this.m_modules [8] [15 - i - 1] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 8) {  	this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  }  else if (i < 9) {  	this.m_modules [8] [15 - i - 1 + 1] = mod;  }  else {  	this.m_modules [8] [15 - i - 1] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 8) {  	this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  }  else if (i < 9) {  	this.m_modules [8] [15 - i - 1 + 1] = mod;  }  else {  	this.m_modules [8] [15 - i - 1] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: this.m_modules [8] [this.m_moduleCount - i - 1] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 9) {  	this.m_modules [8] [15 - i - 1 + 1] = mod;  }  else {  	this.m_modules [8] [15 - i - 1] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 9) {  	this.m_modules [8] [15 - i - 1 + 1] = mod;  }  else {  	this.m_modules [8] [15 - i - 1] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 9) {  	this.m_modules [8] [15 - i - 1 + 1] = mod;  }  else {  	this.m_modules [8] [15 - i - 1] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 9) {  	this.m_modules [8] [15 - i - 1 + 1] = mod;  }  else {  	this.m_modules [8] [15 - i - 1] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: if (i < 9) {  	this.m_modules [8] [15 - i - 1 + 1] = mod;  }  else {  	this.m_modules [8] [15 - i - 1] = mod;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: this.m_modules [8] [15 - i - 1 + 1] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: this.m_modules [8] [15 - i - 1 + 1] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: this.m_modules [8] [15 - i - 1] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: this.m_modules [8] [15 - i - 1] = mod;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: this.m_modules [this.m_moduleCount - 8] [8] = (!test);  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,setupTypeInfo,The following statement contains a magic number: this.m_modules [this.m_moduleCount - 8] [8] = (!test);  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: for (var col = this.m_moduleCount - 1; col > 0; col -= 2) {  	if (col == 6)  		col--;  	while (true) {  		for (int c = 0; c < 2; c++) {  			if (this.m_modules [row] [col - c] == null) {  				bool dark = false;  				if (byteIndex < data.Count) {  					dark = (((Convert.ToUInt32 (data [byteIndex]) >> bitIndex) & 1) == 1);  				}  				bool mask = QRUtil.GetMask (maskPattern' (int)row' col - c);  				if (mask) {  					dark = !dark;  				}  				this.m_modules [row] [col - c] = dark;  				bitIndex--;  				if (bitIndex == -1) {  					byteIndex++;  					bitIndex = 7;  				}  			}  		}  		row += inc;  		if (row < 0 || this.m_moduleCount <= row) {  			row -= inc;  			inc = -inc;  			break;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: for (var col = this.m_moduleCount - 1; col > 0; col -= 2) {  	if (col == 6)  		col--;  	while (true) {  		for (int c = 0; c < 2; c++) {  			if (this.m_modules [row] [col - c] == null) {  				bool dark = false;  				if (byteIndex < data.Count) {  					dark = (((Convert.ToUInt32 (data [byteIndex]) >> bitIndex) & 1) == 1);  				}  				bool mask = QRUtil.GetMask (maskPattern' (int)row' col - c);  				if (mask) {  					dark = !dark;  				}  				this.m_modules [row] [col - c] = dark;  				bitIndex--;  				if (bitIndex == -1) {  					byteIndex++;  					bitIndex = 7;  				}  			}  		}  		row += inc;  		if (row < 0 || this.m_moduleCount <= row) {  			row -= inc;  			inc = -inc;  			break;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: for (var col = this.m_moduleCount - 1; col > 0; col -= 2) {  	if (col == 6)  		col--;  	while (true) {  		for (int c = 0; c < 2; c++) {  			if (this.m_modules [row] [col - c] == null) {  				bool dark = false;  				if (byteIndex < data.Count) {  					dark = (((Convert.ToUInt32 (data [byteIndex]) >> bitIndex) & 1) == 1);  				}  				bool mask = QRUtil.GetMask (maskPattern' (int)row' col - c);  				if (mask) {  					dark = !dark;  				}  				this.m_modules [row] [col - c] = dark;  				bitIndex--;  				if (bitIndex == -1) {  					byteIndex++;  					bitIndex = 7;  				}  			}  		}  		row += inc;  		if (row < 0 || this.m_moduleCount <= row) {  			row -= inc;  			inc = -inc;  			break;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: for (var col = this.m_moduleCount - 1; col > 0; col -= 2) {  	if (col == 6)  		col--;  	while (true) {  		for (int c = 0; c < 2; c++) {  			if (this.m_modules [row] [col - c] == null) {  				bool dark = false;  				if (byteIndex < data.Count) {  					dark = (((Convert.ToUInt32 (data [byteIndex]) >> bitIndex) & 1) == 1);  				}  				bool mask = QRUtil.GetMask (maskPattern' (int)row' col - c);  				if (mask) {  					dark = !dark;  				}  				this.m_modules [row] [col - c] = dark;  				bitIndex--;  				if (bitIndex == -1) {  					byteIndex++;  					bitIndex = 7;  				}  			}  		}  		row += inc;  		if (row < 0 || this.m_moduleCount <= row) {  			row -= inc;  			inc = -inc;  			break;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: col -= 2
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: if (col == 6)  	col--;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: while (true) {  	for (int c = 0; c < 2; c++) {  		if (this.m_modules [row] [col - c] == null) {  			bool dark = false;  			if (byteIndex < data.Count) {  				dark = (((Convert.ToUInt32 (data [byteIndex]) >> bitIndex) & 1) == 1);  			}  			bool mask = QRUtil.GetMask (maskPattern' (int)row' col - c);  			if (mask) {  				dark = !dark;  			}  			this.m_modules [row] [col - c] = dark;  			bitIndex--;  			if (bitIndex == -1) {  				byteIndex++;  				bitIndex = 7;  			}  		}  	}  	row += inc;  	if (row < 0 || this.m_moduleCount <= row) {  		row -= inc;  		inc = -inc;  		break;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: while (true) {  	for (int c = 0; c < 2; c++) {  		if (this.m_modules [row] [col - c] == null) {  			bool dark = false;  			if (byteIndex < data.Count) {  				dark = (((Convert.ToUInt32 (data [byteIndex]) >> bitIndex) & 1) == 1);  			}  			bool mask = QRUtil.GetMask (maskPattern' (int)row' col - c);  			if (mask) {  				dark = !dark;  			}  			this.m_modules [row] [col - c] = dark;  			bitIndex--;  			if (bitIndex == -1) {  				byteIndex++;  				bitIndex = 7;  			}  		}  	}  	row += inc;  	if (row < 0 || this.m_moduleCount <= row) {  		row -= inc;  		inc = -inc;  		break;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: for (int c = 0; c < 2; c++) {  	if (this.m_modules [row] [col - c] == null) {  		bool dark = false;  		if (byteIndex < data.Count) {  			dark = (((Convert.ToUInt32 (data [byteIndex]) >> bitIndex) & 1) == 1);  		}  		bool mask = QRUtil.GetMask (maskPattern' (int)row' col - c);  		if (mask) {  			dark = !dark;  		}  		this.m_modules [row] [col - c] = dark;  		bitIndex--;  		if (bitIndex == -1) {  			byteIndex++;  			bitIndex = 7;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: for (int c = 0; c < 2; c++) {  	if (this.m_modules [row] [col - c] == null) {  		bool dark = false;  		if (byteIndex < data.Count) {  			dark = (((Convert.ToUInt32 (data [byteIndex]) >> bitIndex) & 1) == 1);  		}  		bool mask = QRUtil.GetMask (maskPattern' (int)row' col - c);  		if (mask) {  			dark = !dark;  		}  		this.m_modules [row] [col - c] = dark;  		bitIndex--;  		if (bitIndex == -1) {  			byteIndex++;  			bitIndex = 7;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: if (this.m_modules [row] [col - c] == null) {  	bool dark = false;  	if (byteIndex < data.Count) {  		dark = (((Convert.ToUInt32 (data [byteIndex]) >> bitIndex) & 1) == 1);  	}  	bool mask = QRUtil.GetMask (maskPattern' (int)row' col - c);  	if (mask) {  		dark = !dark;  	}  	this.m_modules [row] [col - c] = dark;  	bitIndex--;  	if (bitIndex == -1) {  		byteIndex++;  		bitIndex = 7;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: if (bitIndex == -1) {  	byteIndex++;  	bitIndex = 7;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,MapData,The following statement contains a magic number: bitIndex = 7;  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: for (int i = 0; i < dataList.Count; i++) {  	QR8bitByte data = dataList [i];  	buffer.Put ((int)data.Mode' 4);  	buffer.Put (data.Length' QRUtil.GetLengthInBits (data.Mode' typeNumber));  	data.Write (buffer);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: buffer.Put ((int)data.Mode' 4);  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: if (buffer.GetLengthInBits () > totalDataCount * 8) {  	throw new Error ("code length overflow. (" + buffer.GetLengthInBits () + ">" + totalDataCount * 8 + ")");  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: if (buffer.GetLengthInBits () > totalDataCount * 8) {  	throw new Error ("code length overflow. (" + buffer.GetLengthInBits () + ">" + totalDataCount * 8 + ")");  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: throw new Error ("code length overflow. (" + buffer.GetLengthInBits () + ">" + totalDataCount * 8 + ")");  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: if (buffer.GetLengthInBits () + 4 <= totalDataCount * 8) {  	buffer.Put (0' 4);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: if (buffer.GetLengthInBits () + 4 <= totalDataCount * 8) {  	buffer.Put (0' 4);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: if (buffer.GetLengthInBits () + 4 <= totalDataCount * 8) {  	buffer.Put (0' 4);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: buffer.Put (0' 4);  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: while (buffer.GetLengthInBits () % 8 != 0) {  	buffer.PutBit (false);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: while (true) {  	if (buffer.GetLengthInBits () >= totalDataCount * 8) {  		break;  	}  	buffer.Put (QRCode.PAD0' 8);  	if (buffer.GetLengthInBits () >= totalDataCount * 8) {  		break;  	}  	buffer.Put (QRCode.PAD1' 8);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: while (true) {  	if (buffer.GetLengthInBits () >= totalDataCount * 8) {  		break;  	}  	buffer.Put (QRCode.PAD0' 8);  	if (buffer.GetLengthInBits () >= totalDataCount * 8) {  		break;  	}  	buffer.Put (QRCode.PAD1' 8);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: while (true) {  	if (buffer.GetLengthInBits () >= totalDataCount * 8) {  		break;  	}  	buffer.Put (QRCode.PAD0' 8);  	if (buffer.GetLengthInBits () >= totalDataCount * 8) {  		break;  	}  	buffer.Put (QRCode.PAD1' 8);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: while (true) {  	if (buffer.GetLengthInBits () >= totalDataCount * 8) {  		break;  	}  	buffer.Put (QRCode.PAD0' 8);  	if (buffer.GetLengthInBits () >= totalDataCount * 8) {  		break;  	}  	buffer.Put (QRCode.PAD1' 8);  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: if (buffer.GetLengthInBits () >= totalDataCount * 8) {  	break;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: buffer.Put (QRCode.PAD0' 8);  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: if (buffer.GetLengthInBits () >= totalDataCount * 8) {  	break;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,CreateData,The following statement contains a magic number: buffer.Put (QRCode.PAD1' 8);  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int r = -1; r <= 7; r++) {  	if (row + r <= -1 || this.m_moduleCount <= row + r)  		continue;  	for (int c = -1; c <= 7; c++) {  		if (col + c <= -1 || this.m_moduleCount <= col + c)  			continue;  		if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int r = -1; r <= 7; r++) {  	if (row + r <= -1 || this.m_moduleCount <= row + r)  		continue;  	for (int c = -1; c <= 7; c++) {  		if (col + c <= -1 || this.m_moduleCount <= col + c)  			continue;  		if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int r = -1; r <= 7; r++) {  	if (row + r <= -1 || this.m_moduleCount <= row + r)  		continue;  	for (int c = -1; c <= 7; c++) {  		if (col + c <= -1 || this.m_moduleCount <= col + c)  			continue;  		if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int r = -1; r <= 7; r++) {  	if (row + r <= -1 || this.m_moduleCount <= row + r)  		continue;  	for (int c = -1; c <= 7; c++) {  		if (col + c <= -1 || this.m_moduleCount <= col + c)  			continue;  		if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int r = -1; r <= 7; r++) {  	if (row + r <= -1 || this.m_moduleCount <= row + r)  		continue;  	for (int c = -1; c <= 7; c++) {  		if (col + c <= -1 || this.m_moduleCount <= col + c)  			continue;  		if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int r = -1; r <= 7; r++) {  	if (row + r <= -1 || this.m_moduleCount <= row + r)  		continue;  	for (int c = -1; c <= 7; c++) {  		if (col + c <= -1 || this.m_moduleCount <= col + c)  			continue;  		if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int r = -1; r <= 7; r++) {  	if (row + r <= -1 || this.m_moduleCount <= row + r)  		continue;  	for (int c = -1; c <= 7; c++) {  		if (col + c <= -1 || this.m_moduleCount <= col + c)  			continue;  		if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int r = -1; r <= 7; r++) {  	if (row + r <= -1 || this.m_moduleCount <= row + r)  		continue;  	for (int c = -1; c <= 7; c++) {  		if (col + c <= -1 || this.m_moduleCount <= col + c)  			continue;  		if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int r = -1; r <= 7; r++) {  	if (row + r <= -1 || this.m_moduleCount <= row + r)  		continue;  	for (int c = -1; c <= 7; c++) {  		if (col + c <= -1 || this.m_moduleCount <= col + c)  			continue;  		if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int r = -1; r <= 7; r++) {  	if (row + r <= -1 || this.m_moduleCount <= row + r)  		continue;  	for (int c = -1; c <= 7; c++) {  		if (col + c <= -1 || this.m_moduleCount <= col + c)  			continue;  		if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  			this.m_modules [row + r] [col + c] = true;  		}  		else {  			this.m_modules [row + r] [col + c] = false;  		}  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int c = -1; c <= 7; c++) {  	if (col + c <= -1 || this.m_moduleCount <= col + c)  		continue;  	if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int c = -1; c <= 7; c++) {  	if (col + c <= -1 || this.m_moduleCount <= col + c)  		continue;  	if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int c = -1; c <= 7; c++) {  	if (col + c <= -1 || this.m_moduleCount <= col + c)  		continue;  	if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int c = -1; c <= 7; c++) {  	if (col + c <= -1 || this.m_moduleCount <= col + c)  		continue;  	if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int c = -1; c <= 7; c++) {  	if (col + c <= -1 || this.m_moduleCount <= col + c)  		continue;  	if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int c = -1; c <= 7; c++) {  	if (col + c <= -1 || this.m_moduleCount <= col + c)  		continue;  	if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int c = -1; c <= 7; c++) {  	if (col + c <= -1 || this.m_moduleCount <= col + c)  		continue;  	if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int c = -1; c <= 7; c++) {  	if (col + c <= -1 || this.m_moduleCount <= col + c)  		continue;  	if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: for (int c = -1; c <= 7; c++) {  	if (col + c <= -1 || this.m_moduleCount <= col + c)  		continue;  	if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  		this.m_modules [row + r] [col + c] = true;  	}  	else {  		this.m_modules [row + r] [col + c] = false;  	}  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  	this.m_modules [row + r] [col + c] = true;  }  else {  	this.m_modules [row + r] [col + c] = false;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  	this.m_modules [row + r] [col + c] = true;  }  else {  	this.m_modules [row + r] [col + c] = false;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  	this.m_modules [row + r] [col + c] = true;  }  else {  	this.m_modules [row + r] [col + c] = false;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  	this.m_modules [row + r] [col + c] = true;  }  else {  	this.m_modules [row + r] [col + c] = false;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  	this.m_modules [row + r] [col + c] = true;  }  else {  	this.m_modules [row + r] [col + c] = false;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  	this.m_modules [row + r] [col + c] = true;  }  else {  	this.m_modules [row + r] [col + c] = false;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  	this.m_modules [row + r] [col + c] = true;  }  else {  	this.m_modules [row + r] [col + c] = false;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,SetupPositionProbePattern,The following statement contains a magic number: if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {  	this.m_modules [row + r] [col + c] = true;  }  else {  	this.m_modules [row + r] [col + c] = false;  }  
Magic Number,QRCode4CS,QRCode,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,getBestMaskPattern,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	this.MakeImpl (true' (QRMaskPattern)i);  	double lostPoint = QRUtil.GetLostPoint (this);  	if (i == 0 || minLostPoint > lostPoint) {  		minLostPoint = lostPoint;  		pattern = i;  	}  }  
Magic Number,QRCode4CS,QRBitBuffer,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,Get,The following statement contains a magic number: return ((Convert.ToUInt32 (this.m_buffer [bufIndex]) >> (7 - index % 8)) & 1) == 1;  
Magic Number,QRCode4CS,QRBitBuffer,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,Get,The following statement contains a magic number: return ((Convert.ToUInt32 (this.m_buffer [bufIndex]) >> (7 - index % 8)) & 1) == 1;  
Magic Number,QRCode4CS,QRBitBuffer,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,PutBit,The following statement contains a magic number: if (bit) {  	this.m_buffer [bufIndex] |= (int)(Convert.ToUInt32 (0x80) >> (this.m_length % 8));  }  
Magic Number,QRCode4CS,QRBitBuffer,C:\repos\c0nfused_Web-Remote-Input\WebInput\QRCode4CS.cs,PutBit,The following statement contains a magic number: this.m_buffer [bufIndex] |= (int)(Convert.ToUInt32 (0x80) >> (this.m_length % 8));  
