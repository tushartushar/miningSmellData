Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Samba.Modules.TicketModule.ActionProcessors,AddOrder,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\AddOrder.cs,Process,Cyclomatic complexity of the method is 9
Complex Method,Samba.Modules.TicketModule.ActionProcessors,ChangeTicketEntity,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\ChangeTicketEntity.cs,Process,Cyclomatic complexity of the method is 10
Complex Method,Samba.Modules.TicketModule.ActionProcessors,OrderTagOperation,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\OrderTagOperation.cs,Process,Cyclomatic complexity of the method is 8
Complex Method,Samba.Modules.TicketModule.ActionProcessors,UpdateOrder,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\UpdateOrder.cs,Process,Cyclomatic complexity of the method is 11
Complex Method,Samba.Modules.TicketModule.Widgets.TicketLister,TicketListerWidgetViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\Widgets\TicketLister\TicketListerWidgetViewModel.cs,GetTicketList,Cyclomatic complexity of the method is 11
Long Parameter List,Samba.Modules.TicketModule.Widgets.TicketExplorer,TicketExplorerWidgetViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\Widgets\TicketExplorer\TicketExplorerWidgetViewModel.cs,TicketExplorerWidgetViewModel,The method has 5 parameters. Parameters: model' applicationState' ticketServiceBase' userService' cacheService
Long Parameter List,Samba.Modules.TicketModule.Widgets.TicketLister,TicketListerWidgetViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\Widgets\TicketLister\TicketListerWidgetViewModel.cs,TicketListerWidgetViewModel,The method has 6 parameters. Parameters: model' applicationState' ticketService' printerService' cacheService' automationDao
Long Statement,Samba.Modules.TicketModule.ActionProcessors,AddOrder,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\AddOrder.cs,GetDefaultData,The length of the statement  "            return new { MenuItemName = ""' PortionName = ""' Quantity = 0' Tag = ""' OrderStateName = ""' OrderState = ""' Price = 0m' IncreaseInventory = false' DecreaseInventory = true' Locked = false' CalculatePrice = true }; " is 217.
Long Statement,Samba.Modules.TicketModule.ActionProcessors,ChangeTicketEntity,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\ChangeTicketEntity.cs,Process,The length of the statement  "            if ((ticket == null || ticket == Ticket.Empty) && actionData.GetAsBoolean("CanCreateTicket") && !_applicationState.IsLocked) " is 124.
Long Statement,Samba.Modules.TicketModule.ActionProcessors,ChangeTicketEntity,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\ChangeTicketEntity.cs,Process,The length of the statement  "                        CommonEventPublisher.PublishEntityOperation(Entity.GetNullEntity(entityType.Id)' EventTopicNames.SelectEntity' EventTopicNames.EntitySelected); " is 143.
Long Statement,Samba.Modules.TicketModule.ActionProcessors,MoveTaggedOrders,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\MoveTaggedOrders.cs,Process,The length of the statement  "                    var orders = ticket.Orders.Where(y => y.OrderTagExists(z => z.TagName == orderTagName && z.TagValue == orderTagValue)).ToArray(); " is 129.
Long Statement,Samba.Modules.TicketModule.ActionProcessors,OrderTagOperation,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\OrderTagOperation.cs,Process,The length of the statement  "                            orders = orders.Where(o => o.OrderTagExists(y => y.OrderTagGroupId == orderTag.Id && y.TagValue == oldTagValue)).ToList(); " is 122.
Long Statement,Samba.Modules.TicketModule.ActionProcessors,UpdateOrder,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\UpdateOrder.cs,Process,The length of the statement  "                    if (!string.IsNullOrEmpty(actionData.GetAsString("PortionName")) || !string.IsNullOrEmpty(actionData.GetAsString("PriceTag"))) " is 126.
Long Statement,Samba.Modules.TicketModule.ActionProcessors,UpdateOrderState,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\UpdateOrderState.cs,Process,The length of the statement  "                _ticketService.UpdateOrderStates(ticket' orders.ToList()' stateName' currentState' groupOrder' state' stateOrder' stateValue); " is 126.
Long Statement,Samba.Modules.TicketModule,CalculationSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\CalculationSelectorViewModel.cs,OnAddCalculationType,The length of the statement  "                 Model.CalculationTypes.ToList<IOrderable>()' Resources.TicketTag.ToPlural()' string.Format(Resources.SelectItemsFor_f' Resources.CalculationType' Model.Name' Resources.CalculationSelector)' " is 189.
Long Statement,Samba.Modules.TicketModule,CalculationSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\CalculationSelectorViewModel.cs,Initialize,The length of the statement  "            MapController = new MapController<CalculationSelectorMap' AbstractMapViewModel<CalculationSelectorMap>>(Model.CalculationSelectorMaps' Workspace); " is 146.
Long Statement,Samba.Modules.TicketModule,ChangePaymentTypeViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ChangePaymentTypeViewModel.cs,Initialize,The length of the statement  "            MapController = new MapController<ChangePaymentTypeMap' AbstractMapViewModel<ChangePaymentTypeMap>>(Model.ChangePaymentTypeMaps' Workspace); " is 140.
Long Statement,Samba.Modules.TicketModule,OrderTagGroupViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\OrderTagGroupViewModel.cs,OnSortPropertyExecuted,The length of the statement  "            InteractionService.UserIntraction.SortItems(Model.OrderTags' string.Format(Resources.Sort_f' Resources.OrderTag.ToPlural())' ""); " is 129.
Long Statement,Samba.Modules.TicketModule,PaymentTypeViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\PaymentTypeViewModel.cs,Initialize,The length of the statement  "            MapController = new MapController<PaymentTypeMap' AbstractMapViewModel<PaymentTypeMap>>(Model.PaymentTypeMaps' Workspace); " is 122.
Long Statement,Samba.Modules.TicketModule,TicketTagGroupViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\TicketTagGroupViewModel.cs,GetTicketTags,The length of the statement  "            return new ObservableCollection<TicketTagViewModel>(ticketTagGroup.TicketTags.OrderBy(x => x.SortOrder).Select(item => new TicketTagViewModel(item))); " is 150.
Long Statement,Samba.Modules.TicketModule,TicketTypeViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\TicketTypeViewModel.cs,OnAddEntityType,The length of the statement  "            Model.InjectFrom<EntityInjection>(new { EntityTypeAssignments = selectedValues.Cast<EntityTypeAssignment>().ToList() }); " is 120.
Long Statement,Samba.Modules.TicketModule.Widgets.TicketExplorer,TicketExplorerWidgetCreator,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\Widgets\TicketExplorer\TicketExplorerWidgetCreator.cs,CreateWidgetControl,The length of the statement  "            var ret = new TicketExplorerView { DataContext = viewModel.TicketExplorerViewModel' ContextMenu = contextMenu' Tag = viewModel }; " is 129.
Long Statement,Samba.Modules.TicketModule.Widgets.TicketLister,TicketListerWidgetCreator,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\Widgets\TicketLister\TicketListerWidgetCreator.cs,CreateWidgetViewModel,The length of the statement  "            return new TicketListerWidgetViewModel(widget' applicationState' _ticketServiceBase' _printerService' _cacheService' _automationDao); " is 133.
Complex Conditional,Samba.Modules.TicketModule.ActionProcessors,ChangeTicketEntity,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\ChangeTicketEntity.cs,Process,The conditional expression  "(ticket == null || ticket == Ticket.Empty) && actionData.GetAsBoolean("CanCreateTicket") && !_applicationState.IsLocked"  is complex.
Complex Conditional,Samba.Modules.TicketModule.ActionProcessors,Helper,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\ActionProcessors\Helper.cs,GetOrders,The conditional expression  "selectedOrder != null && ticket != null && selectedOrder.SelectedQuantity > 0 &&                  selectedOrder.SelectedQuantity != selectedOrder.Quantity"  is complex.
Magic Number,Samba.Modules.TicketModule,OrderTagGroupViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\OrderTagGroupViewModel.cs,ReorderItems,The following statement contains a magic number: var order = 10;
Magic Number,Samba.Modules.TicketModule,OrderTagGroupViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\OrderTagGroupViewModel.cs,ReorderItems,The following statement contains a magic number: order += 10;
Magic Number,Samba.Modules.TicketModule,OrderTagGroupValidator,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\OrderTagGroupViewModel.cs,OrderTagGroupValidator,The following statement contains a magic number: Custom(x =>              {                  if (!string.IsNullOrWhiteSpace(x.GroupTag) && x.OrderTags.Count < 2)                  {                      return new ValidationFailure("Order Tags"' "Order Tag count should be at least 2 when Group Tag entered.");                  }                  if (x.OrderTags.Select(y => y.Name.ToLower()).Distinct().Count(y => !string.IsNullOrEmpty(y)) != x.OrderTags.Count)                  {                      return new ValidationFailure("Order Tags"' "Order Tags should have unique names");                  }                  return null;              });
Magic Number,Samba.Modules.TicketModule,TicketModule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\TicketModule.cs,TicketModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<TicketTypeViewModel' TicketType>>(Resources.TicketType.ToPlural()' Resources.Tickets' 35);
Magic Number,Samba.Modules.TicketModule,TicketModule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\TicketModule.cs,TicketModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<TicketTagGroupViewModel' TicketTagGroup>>(Resources.TicketTag.ToPlural()' Resources.Tickets' 35);
Magic Number,Samba.Modules.TicketModule,TicketModule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\TicketModule.cs,TicketModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<OrderTagGroupViewModel' OrderTagGroup>>(Resources.OrderTag.ToPlural()' Resources.Tickets' 35);
Magic Number,Samba.Modules.TicketModule,TicketModule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\TicketModule.cs,TicketModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<PaymentTypeViewModel' PaymentType>>(Resources.PaymentType.ToPlural()' Resources.Tickets' 35);
Magic Number,Samba.Modules.TicketModule,TicketModule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\TicketModule.cs,TicketModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<ChangePaymentTypeViewModel' ChangePaymentType>>(Resources.ChangePaymentType.ToPlural()' Resources.Tickets' 35);
Magic Number,Samba.Modules.TicketModule,TicketModule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\TicketModule.cs,TicketModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<CalculationTypeViewModel' CalculationType>>(Resources.CalculationType.ToPlural()' Resources.Tickets' 35);
Magic Number,Samba.Modules.TicketModule,TicketModule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\TicketModule.cs,TicketModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<CalculationSelectorViewModel' CalculationSelector>>(Resources.CalculationSelector.ToPlural()' Resources.Tickets' 35);
Magic Number,Samba.Modules.TicketModule,TicketModule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\TicketModule.cs,TicketModule,The following statement contains a magic number: SetNavigationCommand(Resources.Tickets' Resources.Common' "Images/note.png"' 20);
Magic Number,Samba.Modules.TicketModule,TicketExplorerView,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\TicketExplorerView.xaml.cs,DataGrid_DataContextChanged,The following statement contains a magic number: var entityTypes = d.EntityTypes.Select(entityType => new DataGridTextColumn                  {                      Header = entityType.EntityName'                      Binding = new Binding("[" + entityType.Id + "]")'                      MinWidth = 60'                  });
Magic Number,Samba.Modules.TicketModule,TicketExplorerViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\TicketExplorerViewModel.cs,TicketExplorerViewModel,The following statement contains a magic number: _timer = new Timer(250);
Magic Number,Samba.Modules.TicketModule.Widgets.TicketLister,TicketListerWidgetSettings,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\Widgets\TicketLister\TicketListerWidgetSettings.cs,TicketListerWidgetSettings,The following statement contains a magic number: FontSize = 12;
Magic Number,Samba.Modules.TicketModule.Widgets.TicketLister,TicketListerWidgetSettings,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.TicketModule\Widgets\TicketLister\TicketListerWidgetSettings.cs,TicketListerWidgetSettings,The following statement contains a magic number: MinWidth = 20;
