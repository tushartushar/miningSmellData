Implementation smell,Namespace,Class,File,Method,Description
Long Method,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,GetNext,The method has 134 lines of code.
Complex Method,Samba.Infrastructure.Helpers,AlphanumComparator,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\AlphanumComparator.cs,Compare,Cyclomatic complexity of the method is 13
Complex Method,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,IsNumericType,Cyclomatic complexity of the method is 15
Complex Method,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,RandomString,Cyclomatic complexity of the method is 9
Complex Method,Samba.Infrastructure.Cron,CronEntryBase,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronEntryBase.cs,ParseEntry,Cyclomatic complexity of the method is 17
Complex Method,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,GetNext,Cyclomatic complexity of the method is 14
Long Parameter List,Samba.Infrastructure.Cron,CronExpression,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronExpression.cs,CronExpression,The method has 5 parameters.
Long Parameter List,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,Parse,The method has 5 parameters.
Long Parameter List,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,CronSchedule,The method has 5 parameters.
Long Statement,Samba.Infrastructure.ExceptionReporter,ExceptionReportBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\ExceptionReporter\ExceptionReportBuilder.cs,BuildGeneralInfo,The length of the statement  "	_stringBuilder.AppendLine ("[General Info]").AppendLine ().AppendLine ("Application: SambaPOS").AppendLine ("Version:     " + LocalSettings.AppVersion).AppendLine ("Region:      " + LocalSettings.CurrentLanguage).AppendLine ("DB:          " + LocalSettings.DatabaseLabel).AppendLine ("Machine:     " + _reportInfo.MachineName).AppendLine ("User:        " + _reportInfo.UserName).AppendLine ("Date:        " + _reportInfo.ExceptionDate.ToShortDateString ()).AppendLine ("Time:        " + _reportInfo.ExceptionDate.ToShortTimeString ()).AppendLine (); " is 549.
Long Statement,Samba.Infrastructure.ExceptionReporter,ExceptionReportBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\ExceptionReporter\ExceptionReportBuilder.cs,BuildGeneralInfo,The length of the statement  "	_stringBuilder.AppendLine ("User Explanation:").AppendLine ().AppendFormat ("{0} said \"{1}\""' _reportInfo.UserName' _reportInfo.UserExplanation).AppendLine ().AppendLine ("-----------------------------").AppendLine (); " is 220.
Long Statement,Samba.Infrastructure.ExceptionReporter,ExceptionReportBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\ExceptionReporter\ExceptionReportBuilder.cs,BuildExceptionInfo,The length of the statement  "		_stringBuilder.AppendLine (string.Format ("[Exception Info {0}]"' index + 1)).AppendLine ().AppendLine (ExceptionHierarchyToString (exception)).AppendLine ().AppendLine ("-----------------------------").AppendLine (); " is 217.
Long Statement,Samba.Infrastructure.ExceptionReporter,ExceptionReportBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\ExceptionReporter\ExceptionReportBuilder.cs,BuildAssemblyInfo,The length of the statement  "	_stringBuilder.AppendLine ("[Assembly Info]").AppendLine ().AppendLine (CreateReferencesString (_reportInfo.AppAssembly)).AppendLine ("-----------------------------").AppendLine (); " is 181.
Long Statement,Samba.Infrastructure.ExceptionReporter,ExceptionReportBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\ExceptionReporter\ExceptionReportBuilder.cs,ExceptionHierarchyToString,The length of the statement  "		stringBuilder.AppendLine ("Type:        " + currentException.GetType ()).AppendLine ("Message:     " + currentException.Message).AppendLine ("Source:      " + currentException.Source); " is 184.
Long Statement,Samba.Infrastructure.Helpers,DateFuncParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\DateFuncParser.cs,UpdateDate,The length of the statement  "	return expression.Contains ("-") ? date.AddDays (0 - quantity).ToShortDateString () : date.AddDays (quantity).ToShortDateString (); " is 131.
Long Statement,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GetDateBasedUniqueString,The length of the statement  "	return string.Format ("{0}{1:00}{2:00}{3:00}{4:00}{5:000}"' date.Year' date.Month' date.Day' date.Hour' date.Minute' date.Millisecond); " is 135.
Long Statement,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,ToString,The length of the statement  "	return _minutes.Expression + " " + _hours.Expression + " " + _days.Expression + " " + _months.Expression + " " + _daysOfWeek.Expression; " is 136.
Long Statement,Samba.Infrastructure.Messaging,MessagingClient,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Messaging\MessagingClient.cs,Connect,The length of the statement  "	var url = String.Format ("tcp://{0}:{1}/ChatServer"' LocalSettings.MessagingServerName' LocalSettings.MessagingServerPort); " is 123.
Empty Catch Block,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,IsValidFile,The method has an empty catch block.
Empty Catch Block,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,IsValidFile,The method has an empty catch block.
Empty Catch Block,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,IsValidFile,The method has an empty catch block.
Empty Catch Block,Samba.Infrastructure.Messaging,MessagingClient,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Messaging\MessagingClient.cs,Reconnect,The method has an empty catch block.
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,AddTypedValue,The following statement contains a magic number: if (actualValue.Contains (dc)) {  	int dCount = (actualValue.Length - actualValue.IndexOf (dc));  	fmt = "0.".PadRight (dCount + 2' '0');  	rfmt = format.PadRight (dCount + rfmt.Length' '0');  }  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,AddTypedValue,The following statement contains a magic number: fmt = "0.".PadRight (dCount + 2' '0');  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: for (var i = 0; i < idWithoutCheckdigit.Length; i++) {  	var ch = idWithoutCheckdigit [idWithoutCheckdigit.Length - i - 1];  	if (validChars.IndexOf (ch) == -1)  		throw new Exception (ch + " is an invalid character");  	var digit = ch - 48;  	int weight;  	if (i % 2 == 0) {  		weight = (2 * digit) - digit / 5 * 9;  	} else {  		weight = digit;  	}  	sum += weight;  }  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: for (var i = 0; i < idWithoutCheckdigit.Length; i++) {  	var ch = idWithoutCheckdigit [idWithoutCheckdigit.Length - i - 1];  	if (validChars.IndexOf (ch) == -1)  		throw new Exception (ch + " is an invalid character");  	var digit = ch - 48;  	int weight;  	if (i % 2 == 0) {  		weight = (2 * digit) - digit / 5 * 9;  	} else {  		weight = digit;  	}  	sum += weight;  }  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: for (var i = 0; i < idWithoutCheckdigit.Length; i++) {  	var ch = idWithoutCheckdigit [idWithoutCheckdigit.Length - i - 1];  	if (validChars.IndexOf (ch) == -1)  		throw new Exception (ch + " is an invalid character");  	var digit = ch - 48;  	int weight;  	if (i % 2 == 0) {  		weight = (2 * digit) - digit / 5 * 9;  	} else {  		weight = digit;  	}  	sum += weight;  }  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: for (var i = 0; i < idWithoutCheckdigit.Length; i++) {  	var ch = idWithoutCheckdigit [idWithoutCheckdigit.Length - i - 1];  	if (validChars.IndexOf (ch) == -1)  		throw new Exception (ch + " is an invalid character");  	var digit = ch - 48;  	int weight;  	if (i % 2 == 0) {  		weight = (2 * digit) - digit / 5 * 9;  	} else {  		weight = digit;  	}  	sum += weight;  }  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: for (var i = 0; i < idWithoutCheckdigit.Length; i++) {  	var ch = idWithoutCheckdigit [idWithoutCheckdigit.Length - i - 1];  	if (validChars.IndexOf (ch) == -1)  		throw new Exception (ch + " is an invalid character");  	var digit = ch - 48;  	int weight;  	if (i % 2 == 0) {  		weight = (2 * digit) - digit / 5 * 9;  	} else {  		weight = digit;  	}  	sum += weight;  }  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: if (i % 2 == 0) {  	weight = (2 * digit) - digit / 5 * 9;  } else {  	weight = digit;  }  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: if (i % 2 == 0) {  	weight = (2 * digit) - digit / 5 * 9;  } else {  	weight = digit;  }  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: if (i % 2 == 0) {  	weight = (2 * digit) - digit / 5 * 9;  } else {  	weight = digit;  }  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: if (i % 2 == 0) {  	weight = (2 * digit) - digit / 5 * 9;  } else {  	weight = digit;  }  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: weight = (2 * digit) - digit / 5 * 9;  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: weight = (2 * digit) - digit / 5 * 9;  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: weight = (2 * digit) - digit / 5 * 9;  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: sum = Math.Abs (sum) + 10;  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: return (10 - (sum % 10)) % 10;  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: return (10 - (sum % 10)) % 10;  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,GenerateCheckDigit,The following statement contains a magic number: return (10 - (sum % 10)) % 10;  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,ValidateCheckDigit,The following statement contains a magic number: if (id.Length < 2)  	return false;  
Magic Number,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,RandomString,The following statement contains a magic number: using (var rng = new RNGCryptoServiceProvider ()) {  	var result = new StringBuilder ();  	var buf = new byte[128];  	while (result.Length < length) {  		rng.GetBytes (buf);  		for (var i = 0; i < buf.Length && result.Length < length; ++i) {  			var outOfRangeStart = byteSize - (byteSize % allowedCharSet.Length);  			if (outOfRangeStart <= buf [i])  				continue;  			result.Append (allowedCharSet [buf [i] % allowedCharSet.Length]);  		}  	}  	return result.ToString ();  }  
Magic Number,Samba.Infrastructure.Cron,CronObject,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronObject.cs,Stop,The following statement contains a magic number: lock (_startStopLock) {  	// Can't stop if not started.  	//  	if (!_isStarted) {  		return false;  	}  	_isStarted = false;  	_isStopRequested = true;  	// Signal the thread to wake up early  	//  	_wh.Set ();  	// Wait for the thread to join.  	//  	if (!_thread.Join (5000)) {  		_thread.Abort ();  		// Raise the thread abort event.  		//  		if (OnThreadAbort != null) {  			OnThreadAbort (this' new CronEventArgs {  				CronObject = this  			});  		}  	}  }  
Magic Number,Samba.Infrastructure.Cron,CronObject,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronObject.cs,Stop,The following statement contains a magic number: if (!_thread.Join (5000)) {  	_thread.Abort ();  	// Raise the thread abort event.  	//  	if (OnThreadAbort != null) {  		OnThreadAbort (this' new CronEventArgs {  			CronObject = this  		});  	}  }  
Magic Number,Samba.Infrastructure.Cron,CronObject,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronObject.cs,ThreadRoutine,The following statement contains a magic number: while (!_isStopRequested) {  	// Determine the next cron trigger  	//  	DetermineNextCronTrigger (out _nextCronTrigger);  	TimeSpan sleepSpan = _nextCronTrigger - DateTime.Now;  	if (sleepSpan.TotalMilliseconds < 0) {  		// Next trigger is in the past. Trigger the right away.  		//  		sleepSpan = new TimeSpan (0' 0' 0' 0' 50);  	}  	// Wait here for the timespan or until I am triggered  	//	to wake up.  	//  	if (!_wh.WaitOne (sleepSpan.TotalMilliseconds < int.MaxValue ? (int)sleepSpan.TotalMilliseconds : int.MaxValue)) {  		// Timespan is up...raise the trigger event  		//  		if (OnCronTrigger != null) {  			OnCronTrigger (this' new CronEventArgs {  				CronObject = this  			});  		}  		// Update the last trigger time.  		//  		_cronObjectDataContext.LastTrigger = DateTime.Now;  	}  }  
Magic Number,Samba.Infrastructure.Cron,CronObject,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronObject.cs,ThreadRoutine,The following statement contains a magic number: if (sleepSpan.TotalMilliseconds < 0) {  	// Next trigger is in the past. Trigger the right away.  	//  	sleepSpan = new TimeSpan (0' 0' 0' 0' 50);  }  
Magic Number,Samba.Infrastructure.Cron,CronObject,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronObject.cs,ThreadRoutine,The following statement contains a magic number: sleepSpan = new TimeSpan (0' 0' 0' 0' 50);  
Magic Number,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,Parse,The following statement contains a magic number: if (parts.Length != 5) {  	throw new ArgumentException ("cronExpression");  }  
Magic Number,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,Parse,The following statement contains a magic number: return Parse (parts [0]' parts [1]' parts [2]' parts [3]' parts [4]);  
Magic Number,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,Parse,The following statement contains a magic number: return Parse (parts [0]' parts [1]' parts [2]' parts [3]' parts [4]);  
Magic Number,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,Parse,The following statement contains a magic number: return Parse (parts [0]' parts [1]' parts [2]' parts [3]' parts [4]);  
Magic Number,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,GetNext,The following statement contains a magic number: if (day == CronEntryBase.RolledOver) {  	// Roll forward to the next month  	//  	minute = _minutes.First;  	hour = _hours.First;  	day = _days.First;  	baseMonth++;  	// Need to worry about rolling over to the next year here  	//	because we need to know the number of days in a month  	//	and that is year dependent (leap year).  	//  	if (baseMonth > 12) {  		// Roll over to next year.  		//  		baseMonth = 1;  		baseYear++;  	}  } else if (day > baseDay) {  	// Original day no in the value list...reset.  	//  	minute = _minutes.First;  	hour = _hours.First;  }  
Magic Number,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,GetNext,The following statement contains a magic number: if (baseMonth > 12) {  	// Roll over to next year.  	//  	baseMonth = 1;  	baseYear++;  }  
Magic Number,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,GetNext,The following statement contains a magic number: return GetNext (new DateTime (baseYear' month' day' 23' 59' 0' 0)' out next);  
Magic Number,Samba.Infrastructure.Cron,CronSchedule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\CronSchedule.cs,GetNext,The following statement contains a magic number: return GetNext (new DateTime (baseYear' month' day' 23' 59' 0' 0)' out next);  
Magic Number,Samba.Infrastructure.Cron,DaysCronEntry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\DaysCronEntry.cs,DaysCronEntry,The following statement contains a magic number: Initialize (expression' 1' 31);  
Magic Number,Samba.Infrastructure.Cron,DaysOfWeekCronEntry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\DaysOfWeekCronEntry.cs,DaysOfWeekCronEntry,The following statement contains a magic number: Initialize (expression' 0' 6);  
Magic Number,Samba.Infrastructure.Cron,HoursCronEntry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\HoursCronEntry.cs,HoursCronEntry,The following statement contains a magic number: Initialize (expression' 0' 23);  
Magic Number,Samba.Infrastructure.Cron,MinutesCronEntry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\MinutesCronEntry.cs,MinutesCronEntry,The following statement contains a magic number: Initialize (expression' 0' 59);  
Magic Number,Samba.Infrastructure.Cron,MonthsCronEntry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Cron\MonthsCronEntry.cs,MonthsCronEntry,The following statement contains a magic number: Initialize (expression' 1' 12);  
Magic Number,Samba.Infrastructure.Messaging,MessagingClient,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Messaging\MessagingClient.cs,Connect,The following statement contains a magic number: Timer.Change (0' 1000);  
Magic Number,Samba.Infrastructure.Settings,SettingsObject,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Settings\LocalSettings.cs,SettingsObject,The following statement contains a magic number: MessagingServerPort = 8080;  
Magic Number,Samba.Infrastructure.Settings,LocalSettings,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Settings\LocalSettings.cs,LoadSettings,The following statement contains a magic number: if (DefaultRecordLimit == 0)  	DefaultRecordLimit = 100;  
Magic Number,Samba.Infrastructure.Settings,LocalSettings,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Settings\LocalSettings.cs,LoadSettings,The following statement contains a magic number: DefaultRecordLimit = 100;  
Missing Default,Samba.Infrastructure.Helpers,Utility,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Infrastructure\Helpers\Utility.cs,IsNumericType,The following switch statement is missing a default case: switch (Type.GetTypeCode (type)) {  case TypeCode.Byte:  case TypeCode.Decimal:  case TypeCode.Double:  case TypeCode.Int16:  case TypeCode.Int32:  case TypeCode.Int64:  case TypeCode.SByte:  case TypeCode.Single:  case TypeCode.UInt16:  case TypeCode.UInt32:  case TypeCode.UInt64:  	return true;  case TypeCode.Object:  	if (type.IsGenericType && type.GetGenericTypeDefinition () == typeof(Nullable<>)) {  		return IsNumericType (Nullable.GetUnderlyingType (type));  	}  	return false;  }  
