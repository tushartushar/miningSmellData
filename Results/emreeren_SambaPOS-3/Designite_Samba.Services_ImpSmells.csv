Implementation smell,Namespace,Class,File,Method,Description
Long Method,Samba.Services.Implementations.AutomationModule,AutomationService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AutomationModule\AutomationService.cs,RegisterRules,The method has 174 lines of code.
Long Method,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The method has 117 lines of code.
Long Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,GetElementPropertiesFromCssAttributes,The method has 139 lines of code.
Long Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,WriteFormattingProperties,The method has 105 lines of code.
Long Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The method has 251 lines of code.
Long Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddBlock,The method has 109 lines of code.
Long Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AnalyzeTRStructure,The method has 109 lines of code.
Long Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,ApplyLocalProperties,The method has 209 lines of code.
Long Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The method has 121 lines of code.
Complex Method,Samba.Services.Common,RuleConstraint,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\RuleConstraint.cs,ValueEquals,Cyclomatic complexity of the method is 12
Complex Method,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,GetDescription,Cyclomatic complexity of the method is 8
Complex Method,Samba.Services.Implementations.PrinterModule,TicketPrintTaskBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\TicketPrintTaskBuilder.cs,GetOrders,Cyclomatic complexity of the method is 16
Complex Method,Samba.Services.Implementations.PrinterModule,TicketPrintTaskBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\TicketPrintTaskBuilder.cs,GetPrintTasks,Cyclomatic complexity of the method is 10
Complex Method,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,Cyclomatic complexity of the method is 15
Complex Method,Samba.Services.Implementations.PrinterModule.PrintJobs,SlipPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\SlipPrinterJob.cs,SendToPrinter,Cyclomatic complexity of the method is 15
Complex Method,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,PrintBarCode,Cyclomatic complexity of the method is 9
Complex Method,Samba.Services.Implementations.PrinterModule.Tools,PrinterTools,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\PrinterTools.cs,ReadTable,Cyclomatic complexity of the method is 18
Complex Method,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,Cyclomatic complexity of the method is 10
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,GetElementPropertiesFromCssAttributes,Cyclomatic complexity of the method is 111
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssColor,Cyclomatic complexity of the method is 12
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssFontFamily,Cyclomatic complexity of the method is 14
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,DiscoverStyleDefinitions,Cyclomatic complexity of the method is 15
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,MatchSelectorLevel,Cyclomatic complexity of the method is 9
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,WriteFormattingProperties,Cyclomatic complexity of the method is 80
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,ParseXamlThickness,Cyclomatic complexity of the method is 14
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,WriteElementContent,Cyclomatic complexity of the method is 23
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,WriteElement,Cyclomatic complexity of the method is 50
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,ReadNextToken,Cyclomatic complexity of the method is 20
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextContentToken,Cyclomatic complexity of the method is 11
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextCharacter,Cyclomatic complexity of the method is 10
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,SkipWhiteSpace,Cyclomatic complexity of the method is 9
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlParser.cs,ParseHtmlContent,Cyclomatic complexity of the method is 12
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,ClosesOnNextElementStart,Cyclomatic complexity of the method is 11
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddBlock,Cyclomatic complexity of the method is 61
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddSection,Cyclomatic complexity of the method is 8
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddImplicitParagraph,Cyclomatic complexity of the method is 8
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddInline,Cyclomatic complexity of the method is 18
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTable,Cyclomatic complexity of the method is 9
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetCellFromSingleCellTable,Cyclomatic complexity of the method is 15
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableCellsToTableRow,Cyclomatic complexity of the method is 8
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AnalyzeTableStructure,Cyclomatic complexity of the method is 20
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AnalyzeTbodyStructure,Cyclomatic complexity of the method is 12
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AnalyzeTRStructure,Cyclomatic complexity of the method is 22
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,ApplyLocalProperties,Cyclomatic complexity of the method is 159
Complex Method,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,Cyclomatic complexity of the method is 83
Complex Method,Samba.Services.Implementations.TicketModule,TicketExplorerFilter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\TicketModule\TicketExplorerFilter.cs,GetExpression,Cyclomatic complexity of the method is 8
Long Parameter List,Samba.Services.Common,AccountScreenRow,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\AccountScreenRow.cs,AccountScreenRow,The method has 7 parameters.
Long Parameter List,Samba.Services,IAccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\IAccountService.cs,CreateTransactionDocument,The method has 5 parameters.
Long Parameter List,Samba.Services,ICacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\ICacheService.cs,GetAppRules,The method has 5 parameters.
Long Parameter List,Samba.Services,ICacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\ICacheService.cs,GetProductTimer,The method has 5 parameters.
Long Parameter List,Samba.Services,ICacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\ICacheService.cs,GetOrderTagGroups,The method has 5 parameters.
Long Parameter List,Samba.Services,ICacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\ICacheService.cs,GetTaxTemplates,The method has 5 parameters.
Long Parameter List,Samba.Services,IEmailService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\IEmailService.cs,SendEmail,The method has 12 parameters.
Long Parameter List,Samba.Services,IEmailService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\IEmailService.cs,SendEMailAsync,The method has 12 parameters.
Long Parameter List,Samba.Services,INotificationService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\INotificationService.cs,NotifyEvent,The method has 7 parameters.
Long Parameter List,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,CreateTransactionDocument,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.AutomationModule,NotificationService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AutomationModule\NotificationService.cs,NotifyEvent,The method has 7 parameters.
Long Parameter List,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetAppRules,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetProductTimer,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,InternalGetOrderTagGroups,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetOrderTagGroups,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetTaxTemplates,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations,EMailService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\EMailService.cs,SendEmail,The method has 12 parameters.
Long Parameter List,Samba.Services.Implementations,EMailService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\EMailService.cs,SendEMailAsync,The method has 12 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule,PrinterService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrinterService.cs,PrinterService,The method has 7 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule,TagData,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\TagData.cs,ReplaceInBracketValues,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,FunctionRegistry,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.ValueChangers,TicketValueChanger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\TicketValueChanger.cs,TicketValueChanger,The method has 7 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.Formatters,JustifyAlignFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\JustifyAlignFormatter.cs,JustifyAlignFormatter,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,GetElementPropertiesFromCssAttributes,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseWordEnumeration,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssSize,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddBlock,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddSection,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddParagraph,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddImplicitParagraph,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddInline,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddSpanOrRun,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddHyperlink,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddImage,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddList,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddOrphanListItems,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddListItem,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTable,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddColumnInformation,The method has 6 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableColumnGroup,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableColumn,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableRowsToTableBody,The method has 6 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableCellsToTableRow,The method has 7 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddDataToTableCell,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AnalyzeTbodyStructure,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AnalyzeTRStructure,The method has 5 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,ComposeThicknessProperty,The method has 6 parameters.
Long Parameter List,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The method has 5 parameters.
Long Identifier,Samba.Services.Implementations.PrinterModule.ValueChangers,AccountTransactionDocumentValueChanger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\AccountTransactionDocumentValueChanger.cs,AccountTransactionDocumentValueChanger,The length of the parameter accountTransactionValueChanger is 30.
Long Identifier,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddOrphanListItems,The length of the parameter xamlListItemElementPreviousSibling is 34.
Long Statement,Samba.Services.Common,AccountTransactionSummary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\AccountTransactionSummary.cs,Update,The length of the statement  "	var transactions = Dao.Query (GetCurrentRange (start' end' x => x.AccountId == selectedAccount.Id)).OrderBy (x => x.Date); " is 122.
Long Statement,Samba.Services.Common,AccountTransactionSummary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\AccountTransactionSummary.cs,Update,The length of the statement  "			Summaries.Add (new AccountSummaryData (Resources.TransactionTotal' Transactions.Sum (x => x.Debit)' Transactions.Sum (x => x.Credit))); " is 135.
Long Statement,Samba.Services.Common,AccountTransactionSummary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\AccountTransactionSummary.cs,Update,The length of the statement  "			Summaries.Add (new AccountSummaryData (Resources.DateRangeTotal' Transactions.Sum (x => x.Debit)' Transactions.Sum (x => x.Credit))); " is 133.
Long Statement,Samba.Services.Common,AccountTransactionSummary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\AccountTransactionSummary.cs,Update,The length of the statement  "	Summaries.Add (new AccountSummaryData (Resources.GrandTotal' Transactions.Sum (x => x.Debit)' Transactions.Sum (x => x.Credit))); " is 129.
Long Statement,Samba.Services.Common,AccountTransactionSummary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\AccountTransactionSummary.cs,GetFutureCredit,The length of the statement  "		return Math.Abs (Dao.Sum (x => x.Exchange' GetFutureRange (end' x => x.AccountId == selectedAccount.Id && x.Debit == 0))); " is 122.
Long Statement,Samba.Services.Common,AccountTransactionSummary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\AccountTransactionSummary.cs,GetFutureDebit,The length of the statement  "		return Math.Abs (Dao.Sum (x => x.Exchange' GetFutureRange (end' x => x.AccountId == selectedAccount.Id && x.Credit == 0))); " is 123.
Long Statement,Samba.Services.Common,AccountTransactionSummary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\AccountTransactionSummary.cs,GetPastCredit,The length of the statement  "		return Math.Abs (Dao.Sum (x => x.Exchange' GetPastRange (start' x => x.AccountId == selectedAccount.Id && x.Debit == 0))); " is 122.
Long Statement,Samba.Services.Common,AccountTransactionSummary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\AccountTransactionSummary.cs,GetPastDebit,The length of the statement  "		return Math.Abs (Dao.Sum (x => x.Exchange' GetPastRange (start' x => x.AccountId == selectedAccount.Id && x.Credit == 0))); " is 123.
Long Statement,Samba.Services.Common,AutomationCommandData,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\AutomationCommandData.cs,IsInState,The length of the statement  "	var result = states.Split (''').Where (x => x.Contains ("=")).Select (x => x.Split ('=')).Any (x => ticket.IsInState (x [0]' x [1])); " is 133.
Long Statement,Samba.Services.Common,AutomationCommandData,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\AutomationCommandData.cs,IsInState,The length of the statement  "	var result = states.Split (''').Where (x => x.Contains ("=")).Select (x => x.Split ('=')).Any (x => order.IsInState (x [0]' x [1])); " is 132.
Long Statement,Samba.Services.Common,SerialPortService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SerialPortService.cs,WriteCommand,The length of the statement  "		var data = command.Trim ().Split (''').Select (x => Convert.ToInt32 (x)).Aggregate (""' (current' i) => current + (char)i); " is 123.
Long Statement,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,AddRow,The length of the statement  "	Tables [tableName].RowGroups [0].Rows.Add (CreateRow (values' ColumnTextAlignments.ContainsKey (tableName) ? ColumnTextAlignments [tableName] : new[] { " is 151.
Long Statement,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,AddBoldRow,The length of the statement  "	Tables [tableName].RowGroups [0].Rows.Add (CreateRow (values' ColumnTextAlignments.ContainsKey (tableName) ? ColumnTextAlignments [tableName] : new[] { " is 151.
Long Statement,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,FixTableColumns,The length of the statement  "	var maxes = Enumerable.Range (0' colCount).Select (x => rows.Where (r => r.Cells.Count == colCount).Max (y => y.Cells [x].Blocks.Cast<Paragraph> ().First ().Inlines.OfType<Run> ().First ().Text.Length)).ToList (); " is 213.
Long Statement,Samba.Services.Common,AccountScreenRow,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\AccountScreenRow.cs,Create,The length of the statement  "	return new AccountScreenRow (kvp.Key.Name' kvp.Value.Balance' kvp.Value.Exchange' kvp.Key.Id' currencyFormat' kvp.Key.AccountTypeId' groupKey); " is 143.
Long Statement,Samba.Services.Common,ParameterSources,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\ParameterSources.cs,GetParameterSource,The length of the statement  "	return !string.IsNullOrEmpty (parameterName) && ParameterSource.ContainsKey (parameterName) ? ParameterSource [parameterName].Invoke () : new List<string> (); " is 158.
Long Statement,Samba.Services.Common,RuleActionTypeRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\RuleActionTypeRegistry.cs,GetEventConstraints,The length of the statement  "		var items = obj.Select (x => CreateRuleConstraint (x.Key' OperatorConstants.Equal' GetOperations (x.Value.GetType ()))); " is 120.
Long Statement,Samba.Services.Common,RuleConstraint,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\RuleConstraint.cs,ValueEquals,The length of the statement  "	if (Utility.IsNumericType (parameterValue.GetType ()) || Operation.Contains (OperatorConstants.Greater) || Operation.Contains (OperatorConstants.Less)) { " is 153.
Long Statement,Samba.Services.Implementations.AccountModule,AccountRowBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountRowBuilder.cs,GetAccountScreenRows,The length of the statement  "	var detailedTemplateNames = accountScreen.AccountScreenValues.Where (x => x.DisplayDetails).Select (x => x.AccountTypeId); " is 122.
Long Statement,Samba.Services.Implementations.AccountModule,AccountRowBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountRowBuilder.cs,GetAccountScreenRows,The length of the statement  "	_accountDao.GetAccountBalances (detailedTemplateNames.ToList ()' GetFilter (accountScreen' currentWorkPeriod)).ToList ().ForEach (x => rows.Add (AccountScreenRow.Create (x' _cacheService.GetCurrencySymbol (x.Key.ForeignCurrencyId)' GetGroupKey (accountScreen' x.Key.AccountTypeId)))); " is 284.
Long Statement,Samba.Services.Implementations.AccountModule,AccountRowBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountRowBuilder.cs,GetAccountScreenRows,The length of the statement  "	_accountDao.GetAccountTypeBalances (templateTotals.ToList ()' GetFilter (accountScreen' currentWorkPeriod)).ToList ().ForEach (x => rows.Add (AccountScreenRow.Create (x' GetGroupKey (accountScreen' x.Key.Id)))); " is 211.
Long Statement,Samba.Services.Implementations.AccountModule,AccountRowBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountRowBuilder.cs,GetAccountScreenRows,The length of the statement  "	var hideIfZeroBalanceTypeIds = accountScreen.AccountScreenValues.Where (x => x.HideZeroBalanceAccounts).Select (x => x.AccountTypeId).ToList (); " is 144.
Long Statement,Samba.Services.Implementations.AccountModule,AccountRowBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountRowBuilder.cs,GetAccountScreenRows,The length of the statement  "	var accounts = rows.Where (x => ShouldKeepAccount (x' hideIfZeroBalanceTypeIds)).OrderBy (x => GetSortOrder (accountScreen.AccountScreenValues' x.AccountTypeId)).ThenBy (x => x.Name).ToList (); " is 193.
Long Statement,Samba.Services.Implementations.AccountModule,AccountRowBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountRowBuilder.cs,ShouldKeepAccount,The length of the statement  "	return !hideIfZeroBalanceTypeIds.Contains (accountRowData.AccountTypeId) || (hideIfZeroBalanceTypeIds.Contains (accountRowData.AccountTypeId) && accountRowData.Balance != 0); " is 174.
Long Statement,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,CreateTransactionDocument,The length of the statement  "	return _accountDao.CreateTransactionDocument (selectedAccount' documentType' description' amount' exchangeRate' accountData' _cacheService.GetForeignCurrencies ()); " is 164.
Long Statement,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,GetAccountTransactionSummary,The length of the statement  "	return AccountTransactionSummaryBuilder.Create ().ForAccount (selectedAccount).WithStartDate (start).WithEndDate (end).Build (); " is 128.
Long Statement,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,GetCompletingAccountNames,The length of the statement  "	Expression<Func<Account' bool>> predictate = x => x.AccountTypeId == accountTypeId && x.Name.ToLower ().Contains (lacn); " is 120.
Long Statement,Samba.Services.Implementations.AutomationModule,AutomationService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AutomationModule\AutomationService.cs,RegisterParameterSources,The length of the statement  "	RegisterParameterSource ("TriggerName"' () => Dao.Select<Trigger' string> (yz => yz.Name' y => !string.IsNullOrEmpty (y.Expression))); " is 134.
Long Statement,Samba.Services.Implementations.AutomationModule,AutomationService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AutomationModule\AutomationService.cs,RegisterParameterSources,The length of the statement  "	RegisterParameterSource ("Color"' () => typeof(Colors).GetProperties (BindingFlags.Public | BindingFlags.Static).Select (x => x.Name)); " is 135.
Long Statement,Samba.Services.Implementations.AutomationModule,AutomationService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AutomationModule\AutomationService.cs,RegisterParameterSources,The length of the statement  "	RegisterParameterSource ("AccountTransactionDocumentName"' () => Dao.Distinct<AccountTransactionDocumentType> (x => x.Name)); " is 125.
Long Statement,Samba.Services.Implementations.AutomationModule,NotificationService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AutomationModule\NotificationService.cs,NotifyEvent,The length of the statement  "	_ruleExecutor.SelectFor (eventName).WithTerminalId (terminalId).WithDepartmentId (departmentId).WithUserRoleId (userRoleId).WithTicketTypeId (ticketTypeId).ExecuteWith (dataParameter' dataAction); " is 196.
Long Statement,Samba.Services.Implementations.AutomationModule,Preprocessor,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AutomationModule\Preprocessor.cs,ReplaceParameterValues,The length of the statement  "		foreach (var propertyName in Regex.Matches (parameterValues' "\\[:([^\\]]+)\\]").Cast<Match> ().Select (match => match.Groups [1].Value).ToList ()) { " is 149.
Long Statement,Samba.Services.Implementations.AutomationModule,RuleExecutor,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AutomationModule\RuleExecutor.cs,ExecuteWith,The length of the statement  "	var rules = _cacheService.GetAppRules (_eventName' _terminalId' _departmentId' _userRoleId' _ticketTypeId).Where (x => _conditionChecker.Satisfies (x' dataParameter)); " is 167.
Long Statement,Samba.Services.Implementations.AutomationModule,RuleExecutor,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AutomationModule\RuleExecutor.cs,ExecuteWith,The length of the statement  "	var actionContainers = rules.SelectMany (rule => rule.Actions.OrderBy (x => x.SortOrder).Where (x => _conditionChecker.SatisfiesCustomConstraint (x.CustomConstraint' dataParameter))).ToList (); " is 193.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetAppRules,The length of the statement  "	var maps = Rules.Where (x => x.EventName == eventName).SelectMany (x => x.AppRuleMaps).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.DepartmentId == 0 || x.DepartmentId == departmentId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userRoleId).Where (x => x.TicketTypeId == 0 || x.TicketTypeId == ticketTypeId); " is 343.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetProductTimer,The length of the statement  "	var maps = tgl.SelectMany (x => x.ProductTimerMaps).Where (x => x.TicketTypeId == 0 || x.TicketTypeId == ticketTypeId).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.DepartmentId == 0 || x.DepartmentId == departmentId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userId).Where (x => x.MenuItemGroupCode == null || x.MenuItemGroupCode == mi.GroupCode).Where (x => x.MenuItemId == 0 || x.MenuItemId == menuItemId); " is 445.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,InternalGetOrderTagGroups,The length of the statement  "	var maps = tgl.SelectMany (x => x.OrderTagMaps).Where (x => x.TicketTypeId == 0 || x.TicketTypeId == ticketTypeId).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.DepartmentId == 0 || x.DepartmentId == departmentId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userRoleId).Where (x => x.MenuItemGroupCode == null || x.MenuItemGroupCode == menuItem.GroupCode).Where (x => x.MenuItemId == 0 || x.MenuItemId == menuItemId); " is 451.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetOrderTagGroups,The length of the statement  "	return menuItemIds.Aggregate (orderTags' (x' y) => InternalGetOrderTagGroups (ticketTypeId' terminalId' departmentId' userRoleId' y)); " is 134.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetTaxTemplates,The length of the statement  "	var maps = tgl.SelectMany (x => x.TaxTemplateMaps).Where (x => x.TicketTypeId == 0 || x.TicketTypeId == ticketTypeId).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.DepartmentId == 0 || x.DepartmentId == departmentId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userRoleId).Where (x => x.MenuItemGroupCode == null || x.MenuItemGroupCode == menuItem.GroupCode).Where (x => x.MenuItemId == 0 || x.MenuItemId == menuItemId); " is 454.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetTicketTagGroups,The length of the statement  "	var maps = TicketTagGroups.SelectMany (x => x.TicketTagMaps).Where (x => x.TicketTypeId == 0 || x.TicketTypeId == ticketTypeId).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.DepartmentId == 0 || x.DepartmentId == departmentId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userRoleId); " is 317.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetAccountTransactionDocumentTypes,The length of the statement  "	var maps = DocumentTypes.Where (x => x.MasterAccountTypeId == accountTypeId).SelectMany (x => x.AccountTransactionDocumentTypeMaps).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userRoleId); " is 254.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetAccountTransactionDocumentTypes,The length of the statement  "	return DocumentTypes.Where (x => maps.Any (y => y.AccountTransactionDocumentTypeId == x.Id)).OrderBy (x => x.SortOrder); " is 120.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetBatchDocumentTypes,The length of the statement  "	var maps = DocumentTypes.Where (x => x.BatchCreateDocuments && accountTypeIds.Contains (x.MasterAccountTypeId)).SelectMany (x => x.AccountTransactionDocumentTypeMaps).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userRoleId); " is 289.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetBatchDocumentTypes,The length of the statement  "	return DocumentTypes.Where (x => maps.Any (y => y.AccountTransactionDocumentTypeId == x.Id)).OrderBy (x => x.SortOrder); " is 120.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetChangePaymentTypes,The length of the statement  "	var maps = ChangePaymentTypes.SelectMany (x => x.ChangePaymentTypeMaps).Where (x => x.TicketTypeId == 0 || x.TicketTypeId == ticketTypeId).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.DepartmentId == 0 || x.DepartmentId == departmentId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userRoleId); " is 328.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetPaymentScreenPaymentTypes,The length of the statement  "	var maps = PaymentTypes.SelectMany (x => x.PaymentTypeMaps).Where (x => x.TicketTypeId == 0 || x.TicketTypeId == ticketTypeId).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.DepartmentId == 0 || x.DepartmentId == departmentId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userRoleId); " is 316.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,FindAccountTransactionType,The length of the statement  "	var result = AccountTransactionTypes.Where (x => x.SourceAccountTypeId == sourceAccountTypeId && x.TargetAccountTypeId == targetAccountTypeId).ToList (); " is 153.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetEntityScreens,The length of the statement  "	var maps = EntityScreens.SelectMany (x => x.EntityScreenMaps).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.DepartmentId == 0 || x.DepartmentId == departmentId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userRoleId); " is 251.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetTicketEntityScreens,The length of the statement  "	var maps = EntityScreens.SelectMany (x => x.EntityScreenMaps).Where (x => ticketTypeId == 0 || x.TicketTypeId == 0 || x.TicketTypeId == ticketTypeId).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.DepartmentId == 0 || x.DepartmentId == departmentId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userRoleId); " is 339.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetTicketEntityScreens,The length of the statement  "	return EntityScreens.Where (x => x.EntityTypeId > 0 && maps.Any (y => y.EntityScreenId == x.Id)).OrderBy (x => x.SortOrder); " is 124.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetCalculationSelectors,The length of the statement  "	var maps = CalculationSelectors.SelectMany (x => x.CalculationSelectorMaps).Where (x => x.TicketTypeId == 0 || x.TicketTypeId == ticketTypeId).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.DepartmentId == 0 || x.DepartmentId == departmentId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userRoleId); " is 332.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetAutomationCommands,The length of the statement  "	var maps = AutomationCommands.SelectMany (x => x.AutomationCommandMaps).Where (x => x.TicketTypeId == 0 || x.TicketTypeId == ticketTypeId).Where (x => x.TerminalId == 0 || x.TerminalId == terminalId).Where (x => x.DepartmentId == 0 || x.DepartmentId == departmentId).Where (x => x.UserRoleId == 0 || x.UserRoleId == userRoleId); " is 328.
Long Statement,Samba.Services.Implementations,CacheService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetEntityTypesByTicketType,The length of the statement  "	return TicketTypes.Single (x => x.Id == ticketTypeId).EntityTypeAssignments.OrderBy (x => x.SortOrder).Select (x => GetEntityTypeById (x.EntityTypeId)); " is 152.
Long Statement,Samba.Services.Implementations,EntityCache,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\CacheService.cs,GetEntities,The length of the statement  "		return _cache [entityTypeId].Where (x => entityStates.Where (y => y.IsInState (stateName' state)).Select (y => y.EntityId).Contains (x.Id)); " is 140.
Long Statement,Samba.Services.Implementations,EMailService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\EMailService.cs,SendEMailAsync,The length of the statement  "	var thread = new Thread (() => SendEmail (smtpServerAddress' smtpUser' smtpPassword' smtpPort' toEmailAddress' ccEmailAddresses' fromEmailAddress' subject' body' fileName' deleteFile' byPassSslErrors)); " is 202.
Long Statement,Samba.Services.Implementations,LogService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\LogService.cs,LogError,The length of the statement  "	MessageBox.Show (Resources.ErrorLogMessage + e.Message' Resources.Information' MessageBoxButton.OK' MessageBoxImage.Stop); " is 122.
Long Statement,Samba.Services.Implementations,ReportService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\ReportService.cs,PrintAccountTransactions,The length of the statement  "	report.AddParagraphLine ("Header"' string.Format ("{0}: {1}"' string.Format (Resources.Name_f' Resources.Account)' account.Name)); " is 130.
Long Statement,Samba.Services.Implementations,ReportService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\ReportService.cs,PrintAccountTransactions,The length of the statement  "	report.AddColumTextAlignment ("Transactions"' TextAlignment.Left' TextAlignment.Left' TextAlignment.Right' TextAlignment.Right' TextAlignment.Right); " is 149.
Long Statement,Samba.Services.Implementations,ReportService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\ReportService.cs,PrintAccountTransactions,The length of the statement  "	report.AddTable ("Transactions"' Resources.Date' Resources.Description' Resources.Debit' Resources.Credit' Resources.Balance); " is 126.
Long Statement,Samba.Services.Implementations.EntityModule,EntityService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\EntityModule\EntityService.cs,GetCurrentEntityScreenItems,The length of the statement  "			return entityScreen.ScreenItems.OrderBy (x => x.SortOrder).Where (x => string.IsNullOrEmpty (entityStateFilter) || x.EntityState == entityStateFilter).Skip (entityScreen.ItemCountPerPage * currentPageNo).Take (entityScreen.ItemCountPerPage); " is 241.
Long Statement,Samba.Services.Implementations.EntityModule,EntityService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\EntityModule\EntityService.cs,GetCurrentEntityScreenItems,The length of the statement  "		return entityScreen.ScreenItems.Where (x => string.IsNullOrEmpty (entityStateFilter) || x.EntityState == entityStateFilter); " is 124.
Long Statement,Samba.Services.Implementations.ExpressionModule,ExpressionEngine,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\ExpressionModule\ExpressionEngine.cs,ReplaceExpressionValues,The length of the statement  "		if (expression.StartsWith ("$") && !expression.Trim ().Contains (" ") && Interpreter.Memory.Contains (expression.Trim ('$'))) { " is 127.
Long Statement,Samba.Services.Implementations.ExpressionModule,ExpressionEngine,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\ExpressionModule\ExpressionEngine.cs,ReplaceExpressionValues,The length of the statement  "		if (expression.StartsWith ("$") && !expression.Trim ().Contains (" ") && Interpreter.Memory.Contains (expression.Trim ('$'))) { " is 127.
Long Statement,Samba.Services.Implementations.PrinterModule,AsyncPrintTask,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\AsyncPrintTask.cs,Exec,The length of the statement  "		Application.Current.Dispatcher.BeginInvoke (DispatcherPriority.ApplicationIdle' new Action (() => InternalExec (action' logService))); " is 134.
Long Statement,Samba.Services.Implementations.PrinterModule,ReportPrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ReportPrinter.cs,Print,The length of the statement  "	AsyncPrintTask.Exec (false' () => PrintJobFactory.CreatePrintJob (_printer' _printerService).DoPrint (_document)' _logService); " is 127.
Long Statement,Samba.Services.Implementations.PrinterModule,TicketPrintTaskBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\TicketPrintTaskBuilder.cs,GetLastOrders,The length of the statement  "		var printMap = printJob.PrinterMaps.Count == 1 ? printJob.PrinterMaps [0] : GetPrinterMapForItem (printJob.PrinterMaps' ticket.Orders.Last ().MenuItemId); " is 154.
Long Statement,Samba.Services.Implementations.PrinterModule,TicketPrintTaskBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\TicketPrintTaskBuilder.cs,GetPrintTasks,The length of the statement  "	if (printJob.PrinterMaps.Count == 1 && printJob.WhatToPrint != 3 && printJob.WhatToPrint != 4 && printJob.PrinterMaps [0].MenuItemId == 0 && printJob.PrinterMaps [0].MenuItemGroupCode == null) { " is 194.
Long Statement,Samba.Services.Implementations.PrinterModule,TicketPrintTaskBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\TicketPrintTaskBuilder.cs,GetPrintTasks,The length of the statement  "			var pmap = ordersCache.SingleOrDefault (x => x.Key.PrinterId == lmap.PrinterId && x.Key.PrinterTemplateId == lmap.PrinterTemplateId).Key; " is 137.
Long Statement,Samba.Services.Implementations.PrinterModule,TicketPrintTaskBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\TicketPrintTaskBuilder.cs,GetPrinterMapForItem,The length of the statement  "	maps = maps.Count (x => x.MenuItemGroupCode == menuItemGroupCode) > 0 ? maps.Where (x => x.MenuItemGroupCode == menuItemGroupCode).ToList () : maps.Where (x => x.MenuItemGroupCode == null).ToList (); " is 199.
Long Statement,Samba.Services.Implementations.PrinterModule,TicketPrintTaskBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\TicketPrintTaskBuilder.cs,GetPrinterMapForItem,The length of the statement  "	maps = maps.Count (x => x.MenuItemId == menuItemId) > 0 ? maps.Where (x => x.MenuItemId == menuItemId).ToList () : maps.Where (x => x.MenuItemId == 0).ToList (); " is 161.
Long Statement,Samba.Services.Implementations.PrinterModule,PrinterService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrinterService.cs,PrintTicket,The length of the statement  "	TicketPrinter.For (ticket).WithPrinterService (this).WithLogService (_logService).WithTaskBuilder (_ticketPrintTaskBuilder).WithPrintJob (printJob).WithOrderSelector (orderSelector).IsHighPriority (highPriority).Print (); " is 221.
Long Statement,Samba.Services.Implementations.PrinterModule,PrinterService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrinterService.cs,ExecutePrintJob,The length of the statement  "	PrintJobExecutor.For (printJob).WithPrinterService (this).WithLogSerivce (_logService).WithCacheService (_cacheService).IsHighPriority (highPriority).Execute (); " is 161.
Long Statement,Samba.Services.Implementations.PrinterModule,TicketFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\TicketFormatter.cs,MergeLines,The length of the statement  "	result = result.Union (orders.Where (x => x.GetOrderTagValues ().Count (y => y.Price != 0) > 0)).OrderBy (x => x.CreatedDateTime); " is 130.
Long Statement,Samba.Services.Implementations.PrinterModule.CustomPrinters,SettingPrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\CustomPrinters\SettingPrinter.cs,Process,The length of the statement  "		var setting = settings.IsLocal ? _settingService.ReadLocalSetting (settings.SettingName) : _settingService.ReadGlobalSetting (settings.SettingName); " is 148.
Long Statement,Samba.Services.Implementations.PrinterModule.CustomPrinters,UrlPrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\CustomPrinters\UrlPrinter.cs,ReplaceValues,The length of the statement  "	}' 2)).Where (x => !string.IsNullOrEmpty (x [1])).Aggregate (format' (current' line) => current.Replace (string.Format (tokenFormat + "{0}" + tokenFormat' line [0])' line [1])); " is 177.
Long Statement,Samba.Services.Implementations.PrinterModule.PrintJobs,AbstractPrintJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\AbstractPrintJob.cs,PrintFlowDocument,The length of the statement  "		flowDocument.PagePadding = new Thickness (Math.Max (ia.OriginWidth' pagePadding.Left)' Math.Max (ia.OriginHeight' pagePadding.Top)' Math.Max ((double)pt.PageMediaSize.Width - (ia.OriginWidth + ia.ExtentWidth)' pagePadding.Right)' Math.Max ((double)pt.PageMediaSize.Height - (ia.OriginHeight + ia.ExtentHeight)' pagePadding.Bottom)); " is 332.
Long Statement,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The length of the statement  "		if ((!list [i].ToLower ().EndsWith ("<BR>") && RemoveTag (list [i]).Trim ().Length > 0) || list [i].Trim ().Length == 0) " is 120.
Long Statement,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,GetColumnCount,The length of the statement  "	return value.Select (item => item.Length - item.Replace ("|"' "").Length).Aggregate (0' (current' len) => len > current ? len : current); " is 137.
Long Statement,Samba.Services.Implementations.PrinterModule.PrintJobs,PortPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\PortPrinterJob.cs,DoPrint,The length of the statement  "		var data = line.Contains ("<") ? line.Split ('<').Where (x => !string.IsNullOrEmpty (x)).Select (x => '<' + x) : line.Split ('#'); " is 130.
Long Statement,Samba.Services.Implementations.PrinterModule.PrintJobs,WindowsPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\WindowsPrinterJob.cs,DoPrint,The length of the statement  "	if (q != null || pd.PrintQueue.FullName == Printer.ShareName || Printer.ShareName.ToLower () == "default" || Printer.ShareName.Contains ("/") || pd.ShowDialog ().GetValueOrDefault (false)) { " is 190.
Long Statement,Samba.Services.Implementations.PrinterModule.PrintJobs,WindowsPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\WindowsPrinterJob.cs,DoPrint,The length of the statement  "		document.ColumnWidth = (document.PageWidth - document.ColumnGap - document.PagePadding.Left - document.PagePadding.Right); " is 122.
Long Statement,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,ExecCommand,The length of the statement  "		var data = command.Trim ().Split (''').Select (x => Convert.ToInt32 (x)).Aggregate (""' (current' i) => current + (char)i); " is 123.
Long Statement,Samba.Services.Implementations.PrinterModule.Tools,PrinterTools,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\PrinterTools.cs,ReadTable,The length of the statement  "					value = colAlignments [i] == TextAlignment.Right ? row == table.RowGroups [0].Rows [0] ? value.PadLeft (colLenghts [i]) : "|  " + value : value.PadRight (colLenghts [i]); " is 170.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,AbstractValueChanger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\AbstractValueChanger.cs,Replace,The length of the statement  "	return Helper.FormatData (content' "{" + GetTargetTag () + "}"' () => GetValue (template' models.OrderBy (x => GetModelOrder (template' x)))); " is 142.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,AbstractValueChanger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\AbstractValueChanger.cs,UpdateGroupTemplateValues,The length of the statement  "	templateStr = Helper.FormatDataIf (grouping.Key != null' templateStr' "{GROUP SUM}"' () => grouping.Sum (x => GetSumSelector (x)).ToString (LocalSettings.CurrencyFormat)); " is 171.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,AbstractValueChanger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\AbstractValueChanger.cs,UpdateGroupTemplateValues,The length of the statement  "	templateStr = Helper.FormatDataIf (grouping.Key != null' templateStr' "{QUANTITY SUM}"' () => grouping.Sum (x => GetQuantitySelector (x)).ToString (LocalSettings.QuantityFormat)); " is 179.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionData,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionData.cs,GetResult,The length of the statement  "		currentData = Helper.FormatDataIf (Condition == null || Condition.Invoke (model)' currentData' t' () => Func.Invoke (model' tagValue)); " is 135.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction ("{RANDOMC:([^}]+)}"' (x' d) => GenerateRandomNumber (SafeInt (d' 8)' true)' "Random Number with check digit"); " is 128.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> (TagNames.TicketDate' (x' d) => x.Date.ToShortDateString ()' string.Format (Resources.Date_f' Resources.Ticket)); " is 138.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> (TagNames.TicketTime' (x' d) => x.Date.ToShortTimeString ()' string.Format (Resources.Time' Resources.Ticket)); " is 136.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> ("{LAST ORDER TIME}"' (x' d) => x.LastOrderDate.ToShortTimeString ()' string.Format (Resources.Time' Resources.LastOrder)); " is 148.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> ("{LAST ORDER MINUTES}"' (x' d) => x.GetTicketLastOrderMinuteStr ()' Resources.LastOrderDuration); " is 123.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	//RegisterFunction<Ticket>(TagNames.OrderNo' (x' d) => x.Orders.Last().OrderNumber.ToString()' Resources.LineOrderNumber); " is 122.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> (TagNames.PlainTotal' (x' d) => x.GetPlainSum ().ToString (LocalSettings.CurrencyFormat)' Resources.TicketSubTotal' x => x.GetSum () != x.GetPlainSum ()); " is 179.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> (TagNames.DiscountTotal' (x' d) => x.GetPreTaxServicesTotal ().ToString (LocalSettings.CurrencyFormat)' Resources.DiscountTotal); " is 154.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> (TagNames.TaxTotal' (x' d) => x.CalculateTax (x.GetPlainSum ()' x.GetPreTaxServicesTotal ()).ToString (LocalSettings.CurrencyFormat)' Resources.TaxTotal); " is 179.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> (TagNames.TicketTotal' (x' d) => x.GetSum ().ToString (LocalSettings.CurrencyFormat)' Resources.TicketTotal); " is 134.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> (TagNames.PaymentTotal' (x' d) => x.GetPaymentAmount ().ToString (LocalSettings.CurrencyFormat)' Resources.PaymentTotal); " is 146.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> (TagNames.Balance' (x' d) => x.GetRemainingAmount ().ToString (LocalSettings.CurrencyFormat)' Resources.Balance' x => x.GetRemainingAmount () != x.GetSum ()); " is 183.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> (TagNames.TotalText' (x' d) => HumanFriendlyInteger.CurrencyToWritten (x.GetSum ())' Resources.TextWrittenTotalValue); " is 143.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> (TagNames.Totaltext' (x' d) => HumanFriendlyInteger.CurrencyToWritten (x.GetSum ()' true)' Resources.TextWrittenTotalValue); " is 149.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> ("{TICKET STATE QUANTITY:([^}]+)}"' (x' d) => x.GetStateQuantityStr (d)' "Ticket State Quantity"); " is 123.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> ("{TICKET STATE MINUTES:([^}]+)}"' (x' d) => x.GetStateMinuteStr (d)' "Ticket State Duration"); " is 120.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> ("{CALCULATION TOTAL:([^}]+)}"' (x' d) => x.GetCalculationTotal (d).ToString (LocalSettings.CurrencyFormat)' string.Format (Resources.Total_f' Resources.Calculation)' x => x.Calculations.Count > 0); " is 223.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> ("{ENTITY NAME:([^}]+)}"' (x' d) => x.GetEntityName (_cacheService.GetEntityTypeIdByEntityName (d))' string.Format (Resources.Name_f' Resources.Entity)); " is 178.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> ("{ORDER STATE TOTAL:([^}]+)}"' (x' d) => x.GetOrderStateTotal (d).ToString (LocalSettings.CurrencyFormat)' string.Format (Resources.Total_f' Resources.OrderState)); " is 190.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> ("{ORDER STATE QUANTITY TOTAL:([^}]+)}"' (x' d) => x.GetOrderStateQuantityTotal (d).ToString (LocalSettings.QuantityFormat)' string.Format (Resources.Total_f' "Order State Quantity")); " is 209.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> ("{SERVICE TOTAL}"' (x' d) => x.GetPostTaxServicesTotal ().ToString (LocalSettings.CurrencyFormat)' string.Format (Resources.Total_f' Resources.Service)); " is 179.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> ("{TICKET QUANTITY SUM}"' (x' d) => x.Orders.Sum (y => y.Quantity).ToString (LocalSettings.QuantityFormat)); " is 133.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Ticket> ("{ORDER COUNT}"' (x' d) => x.Orders.Count.ToString (CultureInfo.InvariantCulture)' "Order Count"); " is 124.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Order> (TagNames.Quantity' (x' d) => x.Quantity.ToString (LocalSettings.QuantityFormat)' Resources.LineItemQuantity); " is 134.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Order> (TagNames.Price' (x' d) => x.Price.ToString (LocalSettings.CurrencyFormat)' Resources.LineItemPrice); " is 125.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Order> (TagNames.Total' (x' d) => x.GetPrice ().ToString (LocalSettings.CurrencyFormat)' Resources.LineItemTotal); " is 131.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Order> (TagNames.TotalAmount' (x' d) => x.GetValue ().ToString (LocalSettings.CurrencyFormat)' Resources.LineItemTotalAndQuantity); " is 148.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Order> (TagNames.Cents' (x' d) => (x.Price * 100).ToString (LocalSettings.QuantityFormat)' Resources.LineItemPriceCents); " is 138.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Order> (TagNames.LineAmount' (x' d) => x.GetTotal ().ToString (LocalSettings.CurrencyFormat)' Resources.LineItemTotalWithoutGifts); " is 148.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Order> ("{ORDER DATE}"' (x' d) => x.CreatedDateTime.ToShortDateString ()' string.Format (Resources.Date_f' Resources.Order)); " is 142.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Order> ("{ORDER TIME}"' (x' d) => x.CreatedDateTime.ToShortTimeString ()' string.Format (Resources.Time_f' Resources.Order)); " is 142.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Order> ("{ORDER STATE VALUE:([^}]+)}"' (x' d) => x.GetStateValue (d).StateValue' Resources.OrderStateValue); " is 125.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Order> ("{ORDER TAX RATE:([^}]+)}"' (x' d) => x.GetTaxValue (d).TaxRate.ToString (LocalSettings.QuantityFormat)' Resources.TaxRate); " is 149.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Order> ("{ORDER TAX TEMPLATE NAMES}"' (x' d) => string.Join ("' "' x.GetTaxValues ().Select (y => y.TaxTemplateName))' string.Format (Resources.List_f' Resources.TaxTemplate)); " is 193.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<OrderTagValue> (TagNames.OrderTagPrice' (x' d) => x.AddTagPriceToOrderPrice ? "" : x.Price.ToString (LocalSettings.CurrencyFormat)' Resources.OrderTagPrice' x => x.Price != 0); " is 193.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<OrderTagValue> (TagNames.OrderTagQuantity' (x' d) => x.Quantity.ToString (LocalSettings.QuantityFormat)' Resources.OrderTagQuantity); " is 150.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<OrderTagValue> (TagNames.OrderTagName' (x' d) => x.TagValue' Resources.OrderTagName' x => !string.IsNullOrEmpty (x.TagValue)); " is 143.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<TicketEntity> ("{ENTITY NAME}"' (x' d) => x.EntityName' string.Format (Resources.Name_f' Resources.Entity)); " is 125.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<TicketEntity> ("{ENTITY BALANCE}"' (x' d) => _accountDao.GetAccountBalance (x.AccountId).ToString (LocalSettings.CurrencyFormat)' Resources.AccountBalance' x => x.AccountId > 0); " is 195.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Entity> ("{ENTITY BALANCE}"' (x' d) => _accountDao.GetAccountBalance (x.AccountId).ToString (LocalSettings.CurrencyFormat)' ""' x => x.AccountId > 0); " is 167.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Entity> ("{ENTITY STATE QUANTITY:([^}]+)}"' (x' d) => GetEntityStateQuantity (x' d).ToString (CultureInfo.InvariantCulture)); " is 142.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Calculation> ("{CALCULATION NAME}"' (x' d) => x.Name' string.Format (Resources.Name_f' Resources.Calculation)); " is 128.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Calculation> ("{CALCULATION AMOUNT}"' (x' d) => x.Amount.ToString (LocalSettings.QuantityFormat)' string.Format (Resources.Amount_f' Resources.Calculation)); " is 174.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Calculation> ("{CALCULATION TOTAL}"' (x' d) => x.CalculationAmount.ToString (LocalSettings.CurrencyFormat)' string.Format (Resources.Total_f' Resources.Calculation)' x => x.CalculationAmount != 0); " is 214.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<Payment> ("{PAYMENT AMOUNT}"' (x' d) => x.Amount.ToString (LocalSettings.CurrencyFormat)' string.Format (Resources.Amount_f' Resources.Payment)' x => x.Amount > 0); " is 181.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<ChangePayment> ("{CHANGE PAYMENT AMOUNT}"' (x' d) => x.Amount.ToString (LocalSettings.CurrencyFormat)' string.Format (Resources.Amount_f' Resources.ChangePayment)' x => x.Amount > 0); " is 200.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<ChangePayment> ("{CHANGE PAYMENT NAME}"' (x' d) => x.Name' string.Format (Resources.Name_f' Resources.ChangePayment)); " is 135.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<TaxValue> ("{TAX AMOUNT}"' (x' d) => x.TaxAmount.ToString (LocalSettings.CurrencyFormat)' Resources.TaxAmount' x => x.TaxAmount > 0); " is 150.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<TaxValue> ("{TAX RATE}"' (x' d) => x.Amount.ToString (LocalSettings.QuantityFormat)' Resources.TaxRate' x => x.Amount > 0); " is 140.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<TaxValue> ("{TAXABLE AMOUNT}"' (x' d) => x.OrderAmount.ToString (LocalSettings.CurrencyFormat)' Resources.TaxableAmount' x => x.OrderAmount > 0); " is 162.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<TaxValue> ("{TOTAL TAXABLE AMOUNT}"' (x' d) => x.TotalAmount.ToString (LocalSettings.CurrencyFormat)' Resources.TotalTaxableAmount' x => x.TotalAmount > 0); " is 173.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransactionDocument> ("{DOCUMENT DATE}"' (x' d) => x.Date.ToShortDateString ()' "Document Date"); " is 121.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransactionDocument> ("{DOCUMENT TIME}"' (x' d) => x.Date.ToShortTimeString ()' "Document Time"); " is 121.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransactionDocument> ("{DOCUMENT BALANCE}"' (x' d) => x.AccountTransactions.Sum (y => y.Balance).ToString (LocalSettings.CurrencyFormat)' "Document Balance"); " is 182.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{AMOUNT}"' (x' d) => x.Amount.ToString (LocalSettings.CurrencyFormat)' "Transaction Amount"); " is 132.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{EXCHANGE RATE}"' (x' d) => x.ExchangeRate.ToString (LocalSettings.QuantityFormat)' "Transaction Exchange Rate"); " is 152.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{TRANSACTION TYPE NAME}"' (x' d) => GetTransactionTypeName (x.AccountTransactionTypeId)' "Transaction Type Name"); " is 153.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{SOURCE ACCOUNT TYPE}"' (x' d) => GetAccountTypeName (x.SourceTransactionValue.AccountTypeId)); " is 134.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{SOURCE ACCOUNT}"' (x' d) => GetAccountName (x.SourceTransactionValue.AccountId)); " is 121.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{SOURCE DEBIT}"' (x' d) => x.SourceTransactionValue.Debit.ToString (LocalSettings.CurrencyFormat)); " is 138.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{SOURCE CREDIT}"' (x' d) => x.SourceTransactionValue.Credit.ToString (LocalSettings.CurrencyFormat)); " is 140.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{SOURCE AMOUNT}"' (x' d) => Math.Abs (x.SourceTransactionValue.Debit - x.SourceTransactionValue.Credit).ToString (LocalSettings.CurrencyFormat)); " is 184.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{SOURCE BALANCE}"' (x' d) => GetAccountBalance (x.SourceTransactionValue.AccountId).ToString (LocalSettings.CurrencyFormat)); " is 164.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{TARGET ACCOUNT TYPE}"' (x' d) => GetAccountTypeName (x.TargetTransactionValue.AccountTypeId)); " is 134.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{TARGET ACCOUNT}"' (x' d) => GetAccountName (x.TargetTransactionValue.AccountId)); " is 121.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{TARGET DEBIT}"' (x' d) => x.TargetTransactionValue.Debit.ToString (LocalSettings.CurrencyFormat)); " is 138.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{TARGET CREDIT}"' (x' d) => x.TargetTransactionValue.Credit.ToString (LocalSettings.CurrencyFormat)); " is 140.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{TARGET AMOUNT}"' (x' d) => Math.Abs (x.TargetTransactionValue.Debit - x.TargetTransactionValue.Credit).ToString (LocalSettings.CurrencyFormat)); " is 184.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The length of the statement  "	RegisterFunction<AccountTransaction> ("{TARGET BALANCE}"' (x' d) => GetAccountBalance (x.TargetTransactionValue.AccountId).ToString (LocalSettings.CurrencyFormat)); " is 164.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,ExecuteFunctions,The length of the statement  "	content = Functions [typeof(object)].Cast<FunctionData<object>> ().Aggregate (content' (current' func) => (func.GetResult (model' current' printerTemplate))); " is 158.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,ExecuteFunctions,The length of the statement  "	return Functions [typeof(TModel)].Cast<FunctionData<TModel>> ().Aggregate (content' (current' func) => (func.GetResult (model' current' printerTemplate))); " is 155.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,Helper,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\Helper.cs,FormatData,The length of the statement  "		if (!string.IsNullOrEmpty (value) && tagData.DataString.StartsWith ("[") && tagData.DataString.EndsWith ("]") && value == 0.ToString ("#'#0.00")) " is 145.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,Helper,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\Helper.cs,FormatData,The length of the statement  "			value = !string.IsNullOrEmpty (tagData.Title) && tagData.Title.Contains ("<value>") ? tagData.Title.Replace ("<value>"' value) : tagData.Title + value; " is 151.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,TicketValueChanger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\TicketValueChanger.cs,ReplaceTemplateValues,The length of the statement  "	var result = _preCalculationValueChanger.Replace (template' templatePart' model.Calculations.Where (x => !x.IncludeTax)); " is 121.
Long Statement,Samba.Services.Implementations.PrinterModule.ValueChangers,TicketValueChanger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\TicketValueChanger.cs,GetTaxValues,The length of the statement  "		TaxAmount = ticket.GetTaxTotal (x.Key.TaxTempleteAccountTransactionTypeId' ticket.GetPreTaxServicesTotal ()' ticket.GetPlainSum ())' " is 132.
Long Statement,Samba.Services.Implementations.PrinterModule.Formatters,FormattedDocument,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\FormattedDocument.cs,GetFormattedText,The length of the statement  "	return _lineFormatters.Select (x => x.GetFormattedLineWithoutTags ()).Where (x => !string.IsNullOrEmpty (x)).Aggregate (""' (current' s) => current + GetSeparator (current) + s); " is 178.
Long Statement,Samba.Services.Implementations.PrinterModule.Formatters,JustifyAlignFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\JustifyAlignFormatter.cs,GetSize,The length of the statement  "	var v = new FormattedText (text' CultureInfo.CurrentCulture' FlowDirection.LeftToRight' new Typeface (LocalSettings.PrintFontFamily)' 12' Brushes.Black); " is 153.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,GetElementPropertiesFromCssAttributes,The length of the statement  "				// In our internal notation we intentionally put them at the end - to unify processing in ParseCssRectangleProperty method " is 122.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssFontFamily,The length of the statement  "			//  css font-family can contein a list of names. We only consider the first name from the list. Need a decision what to do with remaining names " is 143.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssRectangleProperty,The length of the statement  "	Debug.Assert (propertyName == "margin" || propertyName == "padding" || propertyName == "border-width" || propertyName == "border-style" || propertyName == "border-color"); " is 171.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssRectangleProperty,The length of the statement  "	string value = propertyName == "border-color" ? ParseCssColor (styleValue' ref nextIndex) : propertyName == "border-style" ? ParseCssBorderStyle (styleValue' ref nextIndex) : ParseCssSize (styleValue' ref nextIndex' /*mustBeNonNegative:*/true); " is 244.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssRectangleProperty,The length of the statement  "		value = propertyName == "border-color" ? ParseCssColor (styleValue' ref nextIndex) : propertyName == "border-style" ? ParseCssBorderStyle (styleValue' ref nextIndex) : ParseCssSize (styleValue' ref nextIndex' /*mustBeNonNegative:*/true); " is 237.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssRectangleProperty,The length of the statement  "			value = propertyName == "border-color" ? ParseCssColor (styleValue' ref nextIndex) : propertyName == "border-style" ? ParseCssBorderStyle (styleValue' ref nextIndex) : ParseCssSize (styleValue' ref nextIndex' /*mustBeNonNegative:*/true); " is 237.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssRectangleProperty,The length of the statement  "				value = propertyName == "border-color" ? ParseCssColor (styleValue' ref nextIndex) : propertyName == "border-style" ? ParseCssBorderStyle (styleValue' ref nextIndex) : ParseCssSize (styleValue' ref nextIndex' /*mustBeNonNegative:*/true); " is 237.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssBorder,The length of the statement  "	while (ParseCssRectangleProperty (styleValue' ref nextIndex' localProperties' "border-width") || ParseCssRectangleProperty (styleValue' ref nextIndex' localProperties' "border-style") || ParseCssRectangleProperty (styleValue' ref nextIndex' localProperties' "border-color")) { " is 276.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,DiscoverStyleDefinitions,The length of the statement  "		for (XmlNode htmlChildNode = htmlElement.FirstChild; htmlChildNode != null; htmlChildNode = htmlChildNode.NextSibling) { " is 120.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,DiscoverStyleDefinitions,The length of the statement  "	for (XmlNode htmlChildNode = htmlElement.FirstChild; htmlChildNode != null; htmlChildNode = htmlChildNode.NextSibling) { " is 120.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,DiscoverStyleDefinitions,The length of the statement  "				this.AddStyleDefinition (stylesheetBuffer.ToString (selectorStart' definitionStart - selectorStart)' stylesheetBuffer.ToString (definitionStart + 1' nextCharacterIndex - definitionStart - 2)); " is 192.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,WriteFlowDocument,The length of the statement  "	if (xamlReader.NodeType != XmlNodeType.Element || (xamlReader.Name != "FlowDocument" && xamlReader.Name != "Section")) { " is 120.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,WriteElementContent,The length of the statement  "				Debug.Assert (xamlReader.NodeType == XmlNodeType.EndElement || xamlReader.NodeType == XmlNodeType.Element && xamlReader.IsEmptyElement); " is 136.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,WriteElement,The length of the statement  "			if (marker == null || marker == "None" || marker == "Disc" || marker == "Circle" || marker == "Square" || marker == "Box") { " is 124.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,ReadNextToken,The length of the statement  "		Debug.Assert (xamlReader.ReadState == ReadState.Interactive' "Reader is expected to be in Interactive state (" + xamlReader.ReadState + ")"); " is 141.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,IsGoodForName,The length of the statement  "	return this.IsGoodForNameStart (character) || character == '.' || character == '-' || character == ':' || Char.IsDigit (character) || IsCombiningCharacter (character) || IsExtender (character); " is 193.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,ReadComment,The length of the statement  "		while (!this.IsAtEndOfStream && !(_nextCharacter == '-' && _lookAheadCharacter == '-' || _nextCharacter == '!' && _lookAheadCharacter == '>')) { " is 144.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,ReadUnknownDirective,The length of the statement  "	Debug.Assert (_previousCharacter == '<' && _nextCharacter == '!' && !(_lookAheadCharacter == '-' || _lookAheadCharacter == '[')); " is 129.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlParser.cs,ParseHtmlContent,The length of the statement  "	// We create "html" element which may be a duplicate of real HTML element' which is ok' as HtmlConverter will swallow it painlessly.. " is 133.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlParser.cs,ParseHtmlContent,The length of the statement  "	if (htmlRootElement.FirstChild is XmlElement && htmlRootElement.FirstChild == htmlRootElement.LastChild && htmlRootElement.FirstChild.LocalName.ToLower () == "html") { " is 167.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlParser.cs,AddEmptyElement,The length of the statement  "	InvariantAssert (_openedElements.Count > 0' "AddEmptyElement: Stack of opened elements cannot be empty' as we have at least one artificial root element"); " is 154.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlParser.cs,OpenStructuringElement,The length of the statement  "			InvariantAssert (_openedElements.Count > 0' "OpenStructuringElement: stack of opened elements cannot become empty here"); " is 121.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlParser.cs,CloseElement,The length of the statement  "	InvariantAssert (_openedElements.Count > 0' "CloseElement: Stack of opened elements cannot be empty' as we have at least one artificial root element"); " is 151.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlParser.cs,CloseElement,The length of the statement  "		InvariantAssert (_openedElements.Count > 0' "CloseElement: Stack of opened elements cannot be empty' as we have at least one artificial root element"); " is 151.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlParser.cs,AddTextContent,The length of the statement  "	InvariantAssert (_openedElements.Count > 0' "AddTextContent: Stack of opened elements cannot be empty' as we have at least one artificial root element"); " is 153.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlParser.cs,AddComment,The length of the statement  "	InvariantAssert (_openedElements.Count > 0' "AddComment: Stack of opened elements cannot be empty' as we have at least one artificial root element"); " is 149.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlParser.cs,OpenPendingInlineElements,The length of the statement  "		InvariantAssert (_openedElements.Count > 0' "OpenPendingInlineElements: Stack of opened elements cannot be empty' as we have at least one artificial root element"); " is 164.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddBreak,The length of the statement  "	XmlElement xamlLineBreak = xamlParentElement.OwnerDocument.CreateElement (/*prefix:*/null' /*localName:*/HtmlToXamlConverter.Xaml_LineBreak' _xamlNamespace); " is 157.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddBreak,The length of the statement  "		xamlLineBreak = xamlParentElement.OwnerDocument.CreateElement (/*prefix:*/null' /*localName:*/HtmlToXamlConverter.Xaml_LineBreak' _xamlNamespace); " is 146.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddSection,The length of the statement  "	for (XmlNode htmlChildNode = htmlElement.FirstChild; htmlChildNode != null; htmlChildNode = htmlChildNode.NextSibling) { " is 120.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddSection,The length of the statement  "		Hashtable currentProperties = GetElementProperties (htmlElement' inheritedProperties' out localProperties' stylesheet' sourceContext); " is 134.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddSection,The length of the statement  "		XmlElement xamlElement = xamlParentElement.OwnerDocument.CreateElement (/*prefix:*/null' /*localName:*/HtmlToXamlConverter.Xaml_Section' _xamlNamespace); " is 153.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddSection,The length of the statement  "		for (XmlNode htmlChildNode = htmlElement.FirstChild; htmlChildNode != null; htmlChildNode = htmlChildNode != null ? htmlChildNode.NextSibling : null) { " is 151.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddParagraph,The length of the statement  "	Hashtable currentProperties = GetElementProperties (htmlElement' inheritedProperties' out localProperties' stylesheet' sourceContext); " is 134.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddParagraph,The length of the statement  "	XmlElement xamlElement = xamlParentElement.OwnerDocument.CreateElement (/*prefix:*/null' /*localName:*/HtmlToXamlConverter.Xaml_Paragraph' _xamlNamespace); " is 155.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddParagraph,The length of the statement  "	for (XmlNode htmlChildNode = htmlElement.FirstChild; htmlChildNode != null; htmlChildNode = htmlChildNode.NextSibling) { " is 120.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddImplicitParagraph,The length of the statement  "	XmlElement xamlParagraph = xamlParentElement.OwnerDocument.CreateElement (/*prefix:*/null' /*localName:*/HtmlToXamlConverter.Xaml_Paragraph' _xamlNamespace); " is 157.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddSpanOrRun,The length of the statement  "			if (HtmlSchema.IsInlineElement (htmlChildName) || HtmlSchema.IsBlockElement (htmlChildName) || htmlChildName == "img" || htmlChildName == "br" || htmlChildName == "hr") { " is 170.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddSpanOrRun,The length of the statement  "	Hashtable currentProperties = GetElementProperties (htmlElement' inheritedProperties' out localProperties' stylesheet' sourceContext); " is 134.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddSpanOrRun,The length of the statement  "	XmlElement xamlElement = xamlParentElement.OwnerDocument.CreateElement (/*prefix:*/null' /*localName:*/xamlElementName' _xamlNamespace); " is 136.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddSpanOrRun,The length of the statement  "	for (XmlNode htmlChildNode = htmlElement.FirstChild; htmlChildNode != null; htmlChildNode = htmlChildNode.NextSibling) { " is 120.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddHyperlink,The length of the statement  "		Hashtable currentProperties = GetElementProperties (htmlElement' inheritedProperties' out localProperties' stylesheet' sourceContext); " is 134.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddHyperlink,The length of the statement  "		XmlElement xamlElement = xamlParentElement.OwnerDocument.CreateElement (/*prefix:*/null' /*localName:*/HtmlToXamlConverter.Xaml_Hyperlink' _xamlNamespace); " is 155.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddHyperlink,The length of the statement  "		for (XmlNode htmlChildNode = htmlElement.FirstChild; htmlChildNode != null; htmlChildNode = htmlChildNode.NextSibling) { " is 120.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,ExtractInlineFragment,The length of the statement  "			xamlFlowDocumentElement = xamlFlowDocumentElement.OwnerDocument.CreateElement (/*prefix:*/null' /*localName:*/HtmlToXamlConverter.Xaml_Span' _xamlNamespace); " is 157.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddList,The length of the statement  "	Hashtable currentProperties = GetElementProperties (htmlListElement' inheritedProperties' out localProperties' stylesheet' sourceContext); " is 138.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddList,The length of the statement  "	for (XmlNode htmlChildNode = htmlListElement.FirstChild; htmlChildNode != null; htmlChildNode = htmlChildNode.NextSibling) { " is 124.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddListItem,The length of the statement  "	Hashtable currentProperties = GetElementProperties (htmlLIElement' inheritedProperties' out localProperties' stylesheet' sourceContext); " is 136.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddListItem,The length of the statement  "	for (XmlNode htmlChildNode = htmlLIElement.FirstChild; htmlChildNode != null; htmlChildNode = htmlChildNode != null ? htmlChildNode.NextSibling : null) { " is 153.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTable,The length of the statement  "	Hashtable currentProperties = GetElementProperties (htmlTableElement' inheritedProperties' out localProperties' stylesheet' sourceContext); " is 139.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTable,The length of the statement  "		for (XmlNode htmlChildNode = singleCell.FirstChild; htmlChildNode != null; htmlChildNode = htmlChildNode != null ? htmlChildNode.NextSibling : null) { " is 150.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTable,The length of the statement  "				XmlElement xamlTableBodyElement = xamlTableElement.OwnerDocument.CreateElement (null' Xaml_TableRowGroup' _xamlNamespace); " is 122.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTable,The length of the statement  "				Hashtable tbodyElementCurrentProperties = GetElementProperties ((XmlElement)htmlChildNode' currentProperties' out tbodyElementLocalProperties' stylesheet' sourceContext); " is 170.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTable,The length of the statement  "				AddTableRowsToTableBody (xamlTableBodyElement' htmlChildNode.FirstChild' tbodyElementCurrentProperties' columnStarts' stylesheet' sourceContext); " is 145.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTable,The length of the statement  "				XmlElement xamlTableBodyElement = xamlTableElement.OwnerDocument.CreateElement (null' Xaml_TableRowGroup' _xamlNamespace); " is 122.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTable,The length of the statement  "				// We use currentProperties of xamlTableElement when adding rows since the tbody element is artificially created and has  " is 120.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTable,The length of the statement  "				htmlChildNode = AddTableRowsToTableBody (xamlTableBodyElement' htmlChildNode' currentProperties' columnStarts' stylesheet' sourceContext); " is 138.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddColumnInformation,The length of the statement  "			xamlColumnElement.SetAttribute (Xaml_Width' ((double)columnStartsAllRows [columnIndex + 1] - (double)columnStartsAllRows [columnIndex]).ToString ()); " is 149.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddColumnInformation,The length of the statement  "		for (XmlNode htmlChildNode = htmlTableElement.FirstChild; htmlChildNode != null; htmlChildNode = htmlChildNode.NextSibling) { " is 125.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableColumnGroup,The length of the statement  "	Hashtable currentProperties = GetElementProperties (htmlColgroupElement' inheritedProperties' out localProperties' stylesheet' sourceContext); " is 142.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableColumn,The length of the statement  "	Hashtable currentProperties = GetElementProperties (htmlColElement' inheritedProperties' out localProperties' stylesheet' sourceContext); " is 137.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableColumn,The length of the statement  "	XmlElement xamlTableColumnElement = xamlTableElement.OwnerDocument.CreateElement (null' Xaml_TableColumn' _xamlNamespace); " is 122.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableRowsToTableBody,The length of the statement  "			XmlElement xamlTableRowElement = xamlTableBodyElement.OwnerDocument.CreateElement (null' Xaml_TableRow' _xamlNamespace); " is 120.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableRowsToTableBody,The length of the statement  "			Hashtable trElementCurrentProperties = GetElementProperties ((XmlElement)htmlChildNode' currentProperties' out trElementLocalProperties' stylesheet' sourceContext); " is 164.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableRowsToTableBody,The length of the statement  "			AddTableCellsToTableRow (xamlTableRowElement' htmlChildNode.FirstChild' trElementCurrentProperties' columnStarts' activeRowSpans' stylesheet' sourceContext); " is 157.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableRowsToTableBody,The length of the statement  "			XmlElement xamlTableRowElement = xamlTableBodyElement.OwnerDocument.CreateElement (null' Xaml_TableRow' _xamlNamespace); " is 120.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableRowsToTableBody,The length of the statement  "			htmlChildNode = AddTableCellsToTableRow (xamlTableRowElement' htmlChildNode' currentProperties' columnStarts' activeRowSpans' stylesheet' sourceContext); " is 153.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableCellsToTableRow,The length of the statement  "	while (htmlChildNode != null && htmlChildNode.LocalName.ToLower () != "tr" && htmlChildNode.LocalName.ToLower () != "tbody" && htmlChildNode.LocalName.ToLower () != "thead" && htmlChildNode.LocalName.ToLower () != "tfoot") { " is 224.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableCellsToTableRow,The length of the statement  "			XmlElement xamlTableCellElement = xamlTableRowElement.OwnerDocument.CreateElement (null' Xaml_TableCell' _xamlNamespace); " is 121.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableCellsToTableRow,The length of the statement  "			Hashtable tdElementCurrentProperties = GetElementProperties ((XmlElement)htmlChildNode' currentProperties' out tdElementLocalProperties' stylesheet' sourceContext); " is 164.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTableCellsToTableRow,The length of the statement  "			AddDataToTableCell (xamlTableCellElement' htmlChildNode.FirstChild' tdElementCurrentProperties' stylesheet' sourceContext); " is 123.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddDataToTableCell,The length of the statement  "	for (XmlNode htmlChildNode = htmlDataStartNode; htmlChildNode != null; htmlChildNode = htmlChildNode != null ? htmlChildNode.NextSibling : null) { " is 146.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AnalyzeTableStructure,The length of the statement  "			double tbodyWidth = AnalyzeTbodyStructure ((XmlElement)htmlChildNode' columnStarts' activeRowSpans' tableWidth' stylesheet); " is 124.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetNextColumnIndex,The length of the statement  "	while (spannedColumnIndex < columnStarts.Count && (double)columnStarts [spannedColumnIndex] < columnStart + columnWidth && spannedColumnIndex != -1) { " is 150.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,ApplyLocalProperties,The length of the statement  "		// In our internal notation we intentionally put them at the end - to unify processing in ParseCssRectangleProperty method " is 122.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,ApplyLocalProperties,The length of the statement  "			//  We currently ignore possible difference in brush colors on different border sides. Use the last colored side mentioned " is 122.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,ApplyLocalProperties,The length of the statement  "			ComposeThicknessProperty (xamlElement' Xaml_BorderThickness' borderThicknessLeft' borderThicknessRight' borderThicknessTop' borderThicknessBottom); " is 147.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,SetPropertyValue,The length of the statement  "	System.ComponentModel.TypeConverter typeConverter = System.ComponentModel.TypeDescriptor.GetConverter (property.PropertyType); " is 126.
Long Statement,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The length of the statement  "	HtmlCssParser.GetElementPropertiesFromCssAttributes (htmlElement' elementName' stylesheet' localProperties' sourceContext); " is 123.
Long Statement,Samba.Services.Implementations.TicketModule,TicketServiceBase,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\TicketModule\TicketServiceBase.cs,GetTicketsByState,The length of the statement  "	var result = Dao.Query<Ticket> (x => x.TicketStates.Contains (sv)' x => x.Orders.Select (y => y.ProductTimerValue)' x => x.TicketEntities' x => x.Calculations' x => x.Payments' x => x.ChangePayments).ToList (); " is 210.
Complex Conditional,Samba.Services.Implementations.PrinterModule,TicketPrintTaskBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\TicketPrintTaskBuilder.cs,GetPrintTasks,The conditional expression  "printJob.PrinterMaps.Count == 1 && printJob.WhatToPrint != 3 && printJob.WhatToPrint != 4 && printJob.PrinterMaps [0].MenuItemId == 0 && printJob.PrinterMaps [0].MenuItemGroupCode == null"  is complex.
Complex Conditional,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The conditional expression  "line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))"  is complex.
Complex Conditional,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The conditional expression  "line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))"  is complex.
Complex Conditional,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The conditional expression  "line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))"  is complex.
Complex Conditional,Samba.Services.Implementations.PrinterModule.PrintJobs,WindowsPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\WindowsPrinterJob.cs,DoPrint,The conditional expression  "q != null || pd.PrintQueue.FullName == Printer.ShareName || Printer.ShareName.ToLower () == "default" || Printer.ShareName.Contains ("/") || pd.ShowDialog ().GetValueOrDefault (false)"  is complex.
Complex Conditional,Samba.Services.Implementations.PrinterModule.ValueChangers,Helper,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\Helper.cs,FormatData,The conditional expression  "!string.IsNullOrEmpty (value) && tagData.DataString.StartsWith ("[") && tagData.DataString.EndsWith ("]") && value == 0.ToString ("#'#0.00")"  is complex.
Complex Conditional,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssColor,The conditional expression  "!('0' <= character && character <= '9' || 'A' <= character && character <= 'F')"  is complex.
Complex Conditional,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,WriteElement,The conditional expression  "marker == null || marker == "None" || marker == "Disc" || marker == "Circle" || marker == "Square" || marker == "Box""  is complex.
Complex Conditional,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,UnQuote,The conditional expression  "value.StartsWith ("\"") && value.EndsWith ("\"") || value.StartsWith ("'") && value.EndsWith ("'")"  is complex.
Complex Conditional,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddSpanOrRun,The conditional expression  "HtmlSchema.IsInlineElement (htmlChildName) || HtmlSchema.IsBlockElement (htmlChildName) || htmlChildName == "img" || htmlChildName == "br" || htmlChildName == "hr""  is complex.
Empty Catch Block,Samba.Services.Common,SerialPortService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SerialPortService.cs,WritePort,The method has an empty catch block.
Empty Catch Block,Samba.Services.Implementations,EMailService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\EMailService.cs,SendEmail,The method has an empty catch block.
Empty Catch Block,Samba.Services.Implementations.Messaging,MessagingService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\Messaging\MessagingService.cs,SendMessageAsync,The method has an empty catch block.
Empty Catch Block,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,SetPropertyValue,The method has an empty catch block.
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,SimpleReport,The following statement contains a magic number: Header = new Paragraph {  	TextAlignment = TextAlignment.Center'  	FontSize = 14  };  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,SimpleReport,The following statement contains a magic number: Document = new FlowDocument (Header) {  	ColumnWidth = 999999'  	ColumnGap = 20.0'  	ColumnRuleBrush = Brushes.DodgerBlue'  	ColumnRuleWidth = 2.0'  	PageWidth = StringToLength ("10cm")'  	FontFamily = new FontFamily ("Segoe UI")  };  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,SimpleReport,The following statement contains a magic number: Document = new FlowDocument (Header) {  	ColumnWidth = 999999'  	ColumnGap = 20.0'  	ColumnRuleBrush = Brushes.DodgerBlue'  	ColumnRuleWidth = 2.0'  	PageWidth = StringToLength ("10cm")'  	FontFamily = new FontFamily ("Segoe UI")  };  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,SimpleReport,The following statement contains a magic number: Document = new FlowDocument (Header) {  	ColumnWidth = 999999'  	ColumnGap = 20.0'  	ColumnRuleBrush = Brushes.DodgerBlue'  	ColumnRuleWidth = 2.0'  	PageWidth = StringToLength ("10cm")'  	FontFamily = new FontFamily ("Segoe UI")  };  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,CreateRow,The following statement contains a magic number: foreach (var value in values) {  	var val = value ?? "";  	var r = new Run (val) {  		FontWeight = bold ? FontWeights.Bold : FontWeights.Normal  	};  	if (string.IsNullOrEmpty (val) && lastCell != null)  		lastCell.ColumnSpan++;  	else {  		var p = new Paragraph (r);  		p.FontSize = 14;  		p.TextAlignment = alignment.Length <= index ? alignment [alignment.Length - 1] : alignment [index];  		lastCell = new TableCell (p) {  			BorderBrush = Brushes.Black'  			BorderThickness = new Thickness (0' 0' 0.5' 0.5)'  			Padding = new Thickness (3)'  			Background = Brushes.Snow  		};  		if (bold) {  			lastCell.Foreground = Brushes.White;  			lastCell.Background = Brushes.Gray;  		}  		row.Cells.Add (lastCell);  	}  	index++;  }  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,CreateRow,The following statement contains a magic number: foreach (var value in values) {  	var val = value ?? "";  	var r = new Run (val) {  		FontWeight = bold ? FontWeights.Bold : FontWeights.Normal  	};  	if (string.IsNullOrEmpty (val) && lastCell != null)  		lastCell.ColumnSpan++;  	else {  		var p = new Paragraph (r);  		p.FontSize = 14;  		p.TextAlignment = alignment.Length <= index ? alignment [alignment.Length - 1] : alignment [index];  		lastCell = new TableCell (p) {  			BorderBrush = Brushes.Black'  			BorderThickness = new Thickness (0' 0' 0.5' 0.5)'  			Padding = new Thickness (3)'  			Background = Brushes.Snow  		};  		if (bold) {  			lastCell.Foreground = Brushes.White;  			lastCell.Background = Brushes.Gray;  		}  		row.Cells.Add (lastCell);  	}  	index++;  }  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,CreateRow,The following statement contains a magic number: foreach (var value in values) {  	var val = value ?? "";  	var r = new Run (val) {  		FontWeight = bold ? FontWeights.Bold : FontWeights.Normal  	};  	if (string.IsNullOrEmpty (val) && lastCell != null)  		lastCell.ColumnSpan++;  	else {  		var p = new Paragraph (r);  		p.FontSize = 14;  		p.TextAlignment = alignment.Length <= index ? alignment [alignment.Length - 1] : alignment [index];  		lastCell = new TableCell (p) {  			BorderBrush = Brushes.Black'  			BorderThickness = new Thickness (0' 0' 0.5' 0.5)'  			Padding = new Thickness (3)'  			Background = Brushes.Snow  		};  		if (bold) {  			lastCell.Foreground = Brushes.White;  			lastCell.Background = Brushes.Gray;  		}  		row.Cells.Add (lastCell);  	}  	index++;  }  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,CreateRow,The following statement contains a magic number: foreach (var value in values) {  	var val = value ?? "";  	var r = new Run (val) {  		FontWeight = bold ? FontWeights.Bold : FontWeights.Normal  	};  	if (string.IsNullOrEmpty (val) && lastCell != null)  		lastCell.ColumnSpan++;  	else {  		var p = new Paragraph (r);  		p.FontSize = 14;  		p.TextAlignment = alignment.Length <= index ? alignment [alignment.Length - 1] : alignment [index];  		lastCell = new TableCell (p) {  			BorderBrush = Brushes.Black'  			BorderThickness = new Thickness (0' 0' 0.5' 0.5)'  			Padding = new Thickness (3)'  			Background = Brushes.Snow  		};  		if (bold) {  			lastCell.Foreground = Brushes.White;  			lastCell.Background = Brushes.Gray;  		}  		row.Cells.Add (lastCell);  	}  	index++;  }  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,CreateRow,The following statement contains a magic number: if (string.IsNullOrEmpty (val) && lastCell != null)  	lastCell.ColumnSpan++;  else {  	var p = new Paragraph (r);  	p.FontSize = 14;  	p.TextAlignment = alignment.Length <= index ? alignment [alignment.Length - 1] : alignment [index];  	lastCell = new TableCell (p) {  		BorderBrush = Brushes.Black'  		BorderThickness = new Thickness (0' 0' 0.5' 0.5)'  		Padding = new Thickness (3)'  		Background = Brushes.Snow  	};  	if (bold) {  		lastCell.Foreground = Brushes.White;  		lastCell.Background = Brushes.Gray;  	}  	row.Cells.Add (lastCell);  }  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,CreateRow,The following statement contains a magic number: if (string.IsNullOrEmpty (val) && lastCell != null)  	lastCell.ColumnSpan++;  else {  	var p = new Paragraph (r);  	p.FontSize = 14;  	p.TextAlignment = alignment.Length <= index ? alignment [alignment.Length - 1] : alignment [index];  	lastCell = new TableCell (p) {  		BorderBrush = Brushes.Black'  		BorderThickness = new Thickness (0' 0' 0.5' 0.5)'  		Padding = new Thickness (3)'  		Background = Brushes.Snow  	};  	if (bold) {  		lastCell.Foreground = Brushes.White;  		lastCell.Background = Brushes.Gray;  	}  	row.Cells.Add (lastCell);  }  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,CreateRow,The following statement contains a magic number: if (string.IsNullOrEmpty (val) && lastCell != null)  	lastCell.ColumnSpan++;  else {  	var p = new Paragraph (r);  	p.FontSize = 14;  	p.TextAlignment = alignment.Length <= index ? alignment [alignment.Length - 1] : alignment [index];  	lastCell = new TableCell (p) {  		BorderBrush = Brushes.Black'  		BorderThickness = new Thickness (0' 0' 0.5' 0.5)'  		Padding = new Thickness (3)'  		Background = Brushes.Snow  	};  	if (bold) {  		lastCell.Foreground = Brushes.White;  		lastCell.Background = Brushes.Gray;  	}  	row.Cells.Add (lastCell);  }  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,CreateRow,The following statement contains a magic number: if (string.IsNullOrEmpty (val) && lastCell != null)  	lastCell.ColumnSpan++;  else {  	var p = new Paragraph (r);  	p.FontSize = 14;  	p.TextAlignment = alignment.Length <= index ? alignment [alignment.Length - 1] : alignment [index];  	lastCell = new TableCell (p) {  		BorderBrush = Brushes.Black'  		BorderThickness = new Thickness (0' 0' 0.5' 0.5)'  		Padding = new Thickness (3)'  		Background = Brushes.Snow  	};  	if (bold) {  		lastCell.Foreground = Brushes.White;  		lastCell.Background = Brushes.Gray;  	}  	row.Cells.Add (lastCell);  }  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,CreateRow,The following statement contains a magic number: p.FontSize = 14;  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,CreateRow,The following statement contains a magic number: lastCell = new TableCell (p) {  	BorderBrush = Brushes.Black'  	BorderThickness = new Thickness (0' 0' 0.5' 0.5)'  	Padding = new Thickness (3)'  	Background = Brushes.Snow  };  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,CreateRow,The following statement contains a magic number: lastCell = new TableCell (p) {  	BorderBrush = Brushes.Black'  	BorderThickness = new Thickness (0' 0' 0.5' 0.5)'  	Padding = new Thickness (3)'  	Background = Brushes.Snow  };  
Magic Number,Samba.Services.Common,SimpleReport,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\SimpleReport.cs,CreateRow,The following statement contains a magic number: lastCell = new TableCell (p) {  	BorderBrush = Brushes.Black'  	BorderThickness = new Thickness (0' 0' 0.5' 0.5)'  	Padding = new Thickness (3)'  	Background = Brushes.Snow  };  
Magic Number,Samba.Services.Common,RuleConstraint,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\RuleConstraint.cs,RuleConstraint,The following statement contains a magic number: if (parts.Count () > 2)  	Value = parts [2];  
Magic Number,Samba.Services.Common,RuleConstraint,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\RuleConstraint.cs,RuleConstraint,The following statement contains a magic number: if (parts.Count () > 2)  	Value = parts [2];  
Magic Number,Samba.Services.Common,RuleConstraint,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Common\RuleConstraint.cs,RuleConstraint,The following statement contains a magic number: Value = parts [2];  
Magic Number,Samba.Services.Implementations.AccountModule,AccountRowBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountRowBuilder.cs,GetFilter,The following statement contains a magic number: if (selectedAccountScreen.Filter == 2) {  	var date = DateTime.Now.StartOfWeek ();  	return x => x.Date >= date;  }  
Magic Number,Samba.Services.Implementations.AccountModule,AccountRowBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountRowBuilder.cs,GetFilter,The following statement contains a magic number: if (selectedAccountScreen.Filter == 3) {  	var date = currentWorkPeriod.StartDate;  	return x => x.Date >= date;  }  
Magic Number,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,GetAccountTransactionSummary,The following statement contains a magic number: if (!start.HasValue) {  	var accountType = _cacheService.GetAccountTypeById (selectedAccount.AccountTypeId);  	if (accountType != null) {  		if (accountType.DefaultFilterType == 1)  			start = DateTime.Now.MonthStart ();  		if (accountType.DefaultFilterType == 2)  			start = DateTime.Now.StartOfWeek ();  		if (accountType.DefaultFilterType == 3)  			start = currentWorkPeriod.StartDate;  	}  }  
Magic Number,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,GetAccountTransactionSummary,The following statement contains a magic number: if (!start.HasValue) {  	var accountType = _cacheService.GetAccountTypeById (selectedAccount.AccountTypeId);  	if (accountType != null) {  		if (accountType.DefaultFilterType == 1)  			start = DateTime.Now.MonthStart ();  		if (accountType.DefaultFilterType == 2)  			start = DateTime.Now.StartOfWeek ();  		if (accountType.DefaultFilterType == 3)  			start = currentWorkPeriod.StartDate;  	}  }  
Magic Number,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,GetAccountTransactionSummary,The following statement contains a magic number: if (accountType != null) {  	if (accountType.DefaultFilterType == 1)  		start = DateTime.Now.MonthStart ();  	if (accountType.DefaultFilterType == 2)  		start = DateTime.Now.StartOfWeek ();  	if (accountType.DefaultFilterType == 3)  		start = currentWorkPeriod.StartDate;  }  
Magic Number,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,GetAccountTransactionSummary,The following statement contains a magic number: if (accountType != null) {  	if (accountType.DefaultFilterType == 1)  		start = DateTime.Now.MonthStart ();  	if (accountType.DefaultFilterType == 2)  		start = DateTime.Now.StartOfWeek ();  	if (accountType.DefaultFilterType == 3)  		start = currentWorkPeriod.StartDate;  }  
Magic Number,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,GetAccountTransactionSummary,The following statement contains a magic number: if (accountType.DefaultFilterType == 2)  	start = DateTime.Now.StartOfWeek ();  
Magic Number,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,GetAccountTransactionSummary,The following statement contains a magic number: if (accountType.DefaultFilterType == 3)  	start = currentWorkPeriod.StartDate;  
Magic Number,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,GetDateRange,The following statement contains a magic number: if (rangeName == Resources.PastWeek)  	return new DateRange (DateTime.Now.StartOfPastWeek ()' DateTime.Now.StartOfWeek ().AddDays (7));  
Magic Number,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,GetDateRange,The following statement contains a magic number: return new DateRange (DateTime.Now.StartOfPastWeek ()' DateTime.Now.StartOfWeek ().AddDays (7));  
Magic Number,Samba.Services.Implementations.AccountModule,AccountService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AccountModule\AccountService.cs,GetDocumentAccounts,The following statement contains a magic number: switch (documentType.Filter) {  case 1:  	return GetBalancedAccounts (documentType.MasterAccountTypeId);  case 2:  	return GetAccounts (documentType.AccountTransactionDocumentAccountMaps.Select (x => x.AccountId));  default:  	return GetAccounts (documentType.MasterAccountTypeId);  }  
Magic Number,Samba.Services.Implementations.AutomationModule,AutomationService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AutomationModule\AutomationService.cs,RegisterParameterSources,The following statement contains a magic number: RegisterParameterSource ("OrderState"' () => Dao.Distinct<State> (x => x.Name' x => x.StateType == 2));  
Magic Number,Samba.Services.Implementations.AutomationModule,AutomationService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\AutomationModule\AutomationService.cs,RegisterParameterSources,The following statement contains a magic number: RegisterParameterSource ("OrderStateName"' () => Dao.Distinct<State> (x => x.GroupName' x => x.StateType == 2));  
Magic Number,Samba.Services.Implementations.EntityModule,EntityService,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\EntityModule\EntityService.cs,SearchEntities,The following statement contains a magic number: if (searchString.Contains (":") && !searchString.EndsWith (":")) {  	var parts = searchString.Split (new[] {  		':'  	}' 2);  	return _entityDao.FindEntities (selectedEntityType' parts [0]' parts [1]' stateFilter);  }  
Magic Number,Samba.Services.Implementations.ExpressionModule.Accessors,TicketAccessor,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\ExpressionModule\Accessors\TicketAccessor.cs,IsInState,The following statement contains a magic number: if (state.Contains (":")) {  	var parts = state.Split (new[] {  		':'  	}' 2);  	return InState (parts [0]' parts [1]);  }  
Magic Number,Samba.Services.Implementations.PrinterModule,TicketPrintTaskBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\TicketPrintTaskBuilder.cs,GetPrintTasks,The following statement contains a magic number: if (printJob.PrinterMaps.Count == 1 && printJob.WhatToPrint != 3 && printJob.WhatToPrint != 4 && printJob.PrinterMaps [0].MenuItemId == 0 && printJob.PrinterMaps [0].MenuItemGroupCode == null) {  	result.Add (GetPrintTask (ticket' orders' printJob.PrinterMaps [0]));  	return result;  }  
Magic Number,Samba.Services.Implementations.PrinterModule,TicketPrintTaskBuilder,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\TicketPrintTaskBuilder.cs,GetPrintTasks,The following statement contains a magic number: if (printJob.PrinterMaps.Count == 1 && printJob.WhatToPrint != 3 && printJob.WhatToPrint != 4 && printJob.PrinterMaps [0].MenuItemId == 0 && printJob.PrinterMaps [0].MenuItemGroupCode == null) {  	result.Add (GetPrintTask (ticket' orders' printJob.PrinterMaps [0]));  	return result;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.CustomPrinters,UrlPrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\CustomPrinters\UrlPrinter.cs,ReplaceValues,The following statement contains a magic number: return document.Split (new[] {  	'\r''  	'\n'  }' StringSplitOptions.RemoveEmptyEntries).Select (x => x.Split (new[] {  	'='  }' 2)).Where (x => !string.IsNullOrEmpty (x [1])).Aggregate (format' (current' line) => current.Replace (string.Format (tokenFormat + "{0}" + tokenFormat' line [0])' line [1]));  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("<F>") && line.Length > 3)  		list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  	if (line.StartsWith ("<T>"))  		list.Add (string.Format ("<B>{0}</B>"' RemoveTag (line)));  	if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<EB>"))  		list.Add ("<B>");  	if (line.StartsWith ("<DB>"))  		list.Add ("</B>");  	if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  		if (!lastLine.StartsWith ("<J")) {  			tableCount++;  			list.Add ("tbl" + tableCount);  		}  		var tableName = "tbl" + tableCount;  		if (!tables.ContainsKey (tableName))  			tables.Add (tableName' new List<string> ());  		tables [tableName].Add (RemoveTag (line));  	}  	if (!line.Contains ("<") && !string.IsNullOrEmpty (line.Trim ()))  		list.Add (line);  	lastLine = line;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("<F>") && line.Length > 3)  		list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  	if (line.StartsWith ("<T>"))  		list.Add (string.Format ("<B>{0}</B>"' RemoveTag (line)));  	if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<EB>"))  		list.Add ("<B>");  	if (line.StartsWith ("<DB>"))  		list.Add ("</B>");  	if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  		if (!lastLine.StartsWith ("<J")) {  			tableCount++;  			list.Add ("tbl" + tableCount);  		}  		var tableName = "tbl" + tableCount;  		if (!tables.ContainsKey (tableName))  			tables.Add (tableName' new List<string> ());  		tables [tableName].Add (RemoveTag (line));  	}  	if (!line.Contains ("<") && !string.IsNullOrEmpty (line.Trim ()))  		list.Add (line);  	lastLine = line;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("<F>") && line.Length > 3)  		list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  	if (line.StartsWith ("<T>"))  		list.Add (string.Format ("<B>{0}</B>"' RemoveTag (line)));  	if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<EB>"))  		list.Add ("<B>");  	if (line.StartsWith ("<DB>"))  		list.Add ("</B>");  	if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  		if (!lastLine.StartsWith ("<J")) {  			tableCount++;  			list.Add ("tbl" + tableCount);  		}  		var tableName = "tbl" + tableCount;  		if (!tables.ContainsKey (tableName))  			tables.Add (tableName' new List<string> ());  		tables [tableName].Add (RemoveTag (line));  	}  	if (!line.Contains ("<") && !string.IsNullOrEmpty (line.Trim ()))  		list.Add (line);  	lastLine = line;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("<F>") && line.Length > 3)  		list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  	if (line.StartsWith ("<T>"))  		list.Add (string.Format ("<B>{0}</B>"' RemoveTag (line)));  	if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<EB>"))  		list.Add ("<B>");  	if (line.StartsWith ("<DB>"))  		list.Add ("</B>");  	if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  		if (!lastLine.StartsWith ("<J")) {  			tableCount++;  			list.Add ("tbl" + tableCount);  		}  		var tableName = "tbl" + tableCount;  		if (!tables.ContainsKey (tableName))  			tables.Add (tableName' new List<string> ());  		tables [tableName].Add (RemoveTag (line));  	}  	if (!line.Contains ("<") && !string.IsNullOrEmpty (line.Trim ()))  		list.Add (line);  	lastLine = line;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("<F>") && line.Length > 3)  		list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  	if (line.StartsWith ("<T>"))  		list.Add (string.Format ("<B>{0}</B>"' RemoveTag (line)));  	if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<EB>"))  		list.Add ("<B>");  	if (line.StartsWith ("<DB>"))  		list.Add ("</B>");  	if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  		if (!lastLine.StartsWith ("<J")) {  			tableCount++;  			list.Add ("tbl" + tableCount);  		}  		var tableName = "tbl" + tableCount;  		if (!tables.ContainsKey (tableName))  			tables.Add (tableName' new List<string> ());  		tables [tableName].Add (RemoveTag (line));  	}  	if (!line.Contains ("<") && !string.IsNullOrEmpty (line.Trim ()))  		list.Add (line);  	lastLine = line;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("<F>") && line.Length > 3)  		list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  	if (line.StartsWith ("<T>"))  		list.Add (string.Format ("<B>{0}</B>"' RemoveTag (line)));  	if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<EB>"))  		list.Add ("<B>");  	if (line.StartsWith ("<DB>"))  		list.Add ("</B>");  	if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  		if (!lastLine.StartsWith ("<J")) {  			tableCount++;  			list.Add ("tbl" + tableCount);  		}  		var tableName = "tbl" + tableCount;  		if (!tables.ContainsKey (tableName))  			tables.Add (tableName' new List<string> ());  		tables [tableName].Add (RemoveTag (line));  	}  	if (!line.Contains ("<") && !string.IsNullOrEmpty (line.Trim ()))  		list.Add (line);  	lastLine = line;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("<F>") && line.Length > 3)  		list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  	if (line.StartsWith ("<T>"))  		list.Add (string.Format ("<B>{0}</B>"' RemoveTag (line)));  	if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<EB>"))  		list.Add ("<B>");  	if (line.StartsWith ("<DB>"))  		list.Add ("</B>");  	if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  		if (!lastLine.StartsWith ("<J")) {  			tableCount++;  			list.Add ("tbl" + tableCount);  		}  		var tableName = "tbl" + tableCount;  		if (!tables.ContainsKey (tableName))  			tables.Add (tableName' new List<string> ());  		tables [tableName].Add (RemoveTag (line));  	}  	if (!line.Contains ("<") && !string.IsNullOrEmpty (line.Trim ()))  		list.Add (line);  	lastLine = line;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("<F>") && line.Length > 3)  		list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  	if (line.StartsWith ("<T>"))  		list.Add (string.Format ("<B>{0}</B>"' RemoveTag (line)));  	if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<EB>"))  		list.Add ("<B>");  	if (line.StartsWith ("<DB>"))  		list.Add ("</B>");  	if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  		if (!lastLine.StartsWith ("<J")) {  			tableCount++;  			list.Add ("tbl" + tableCount);  		}  		var tableName = "tbl" + tableCount;  		if (!tables.ContainsKey (tableName))  			tables.Add (tableName' new List<string> ());  		tables [tableName].Add (RemoveTag (line));  	}  	if (!line.Contains ("<") && !string.IsNullOrEmpty (line.Trim ()))  		list.Add (line);  	lastLine = line;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("<F>") && line.Length > 3)  		list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  	if (line.StartsWith ("<T>"))  		list.Add (string.Format ("<B>{0}</B>"' RemoveTag (line)));  	if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<EB>"))  		list.Add ("<B>");  	if (line.StartsWith ("<DB>"))  		list.Add ("</B>");  	if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  		if (!lastLine.StartsWith ("<J")) {  			tableCount++;  			list.Add ("tbl" + tableCount);  		}  		var tableName = "tbl" + tableCount;  		if (!tables.ContainsKey (tableName))  			tables.Add (tableName' new List<string> ());  		tables [tableName].Add (RemoveTag (line));  	}  	if (!line.Contains ("<") && !string.IsNullOrEmpty (line.Trim ()))  		list.Add (line);  	lastLine = line;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("<F>") && line.Length > 3)  		list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  	if (line.StartsWith ("<T>"))  		list.Add (string.Format ("<B>{0}</B>"' RemoveTag (line)));  	if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<EB>"))  		list.Add ("<B>");  	if (line.StartsWith ("<DB>"))  		list.Add ("</B>");  	if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  		if (!lastLine.StartsWith ("<J")) {  			tableCount++;  			list.Add ("tbl" + tableCount);  		}  		var tableName = "tbl" + tableCount;  		if (!tables.ContainsKey (tableName))  			tables.Add (tableName' new List<string> ());  		tables [tableName].Add (RemoveTag (line));  	}  	if (!line.Contains ("<") && !string.IsNullOrEmpty (line.Trim ()))  		list.Add (line);  	lastLine = line;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("<F>") && line.Length > 3)  		list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  	if (line.StartsWith ("<T>"))  		list.Add (string.Format ("<B>{0}</B>"' RemoveTag (line)));  	if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<EB>"))  		list.Add ("<B>");  	if (line.StartsWith ("<DB>"))  		list.Add ("</B>");  	if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  		if (!lastLine.StartsWith ("<J")) {  			tableCount++;  			list.Add ("tbl" + tableCount);  		}  		var tableName = "tbl" + tableCount;  		if (!tables.ContainsKey (tableName))  			tables.Add (tableName' new List<string> ());  		tables [tableName].Add (RemoveTag (line));  	}  	if (!line.Contains ("<") && !string.IsNullOrEmpty (line.Trim ()))  		list.Add (line);  	lastLine = line;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("<F>") && line.Length > 3)  		list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  	if (line.StartsWith ("<T>"))  		list.Add (string.Format ("<B>{0}</B>"' RemoveTag (line)));  	if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  		list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  	if (line.StartsWith ("<EB>"))  		list.Add ("<B>");  	if (line.StartsWith ("<DB>"))  		list.Add ("</B>");  	if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  		if (!lastLine.StartsWith ("<J")) {  			tableCount++;  			list.Add ("tbl" + tableCount);  		}  		var tableName = "tbl" + tableCount;  		if (!tables.ContainsKey (tableName))  			tables.Add (tableName' new List<string> ());  		tables [tableName].Add (RemoveTag (line));  	}  	if (!line.Contains ("<") && !string.IsNullOrEmpty (line.Trim ()))  		list.Add (line);  	lastLine = line;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: if (line.StartsWith ("<F>") && line.Length > 3)  	list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: if (line.StartsWith ("<F>") && line.Length > 3)  	list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: if (line.StartsWith ("<F>") && line.Length > 3)  	list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: list.Add (string.Format ("<span>{0}</span>"' line [3].ToString ().PadLeft (lines.Max (x => x.Length)' line [3])));  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  	list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  	list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: if (line.StartsWith ("<C") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  	list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  	list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  	list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: if (line.StartsWith ("<L") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2])))  	list.Add (string.Format ("<span>{0}</span>"' RemoveTag (line)));  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  	if (!lastLine.StartsWith ("<J")) {  		tableCount++;  		list.Add ("tbl" + tableCount);  	}  	var tableName = "tbl" + tableCount;  	if (!tables.ContainsKey (tableName))  		tables.Add (tableName' new List<string> ());  	tables [tableName].Add (RemoveTag (line));  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  	if (!lastLine.StartsWith ("<J")) {  		tableCount++;  		list.Add ("tbl" + tableCount);  	}  	var tableName = "tbl" + tableCount;  	if (!tables.ContainsKey (tableName))  		tables.Add (tableName' new List<string> ());  	tables [tableName].Add (RemoveTag (line));  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,HtmlPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\HtmlPrinterJob.cs,ConvertTagsToHtml,The following statement contains a magic number: if (line.StartsWith ("<J") && line.Length > 3 && (line [2] == '>' || char.IsDigit (line [2]))) {  	if (!lastLine.StartsWith ("<J")) {  		tableCount++;  		list.Add ("tbl" + tableCount);  	}  	var tableName = "tbl" + tableCount;  	if (!tables.ContainsKey (tableName))  		tables.Add (tableName' new List<string> ());  	tables [tableName].Add (RemoveTag (line));  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,PortPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\PortPrinterJob.cs,DoPrint,The following statement contains a magic number: foreach (var line in document) {  	var data = line.Contains ("<") ? line.Split ('<').Where (x => !string.IsNullOrEmpty (x)).Select (x => '<' + x) : line.Split ('#');  	foreach (var s in data) {  		if (s.Trim ().ToLower () == "<w>")  			System.Threading.Thread.Sleep (100);  		if (s.ToLower ().StartsWith ("<lb")) {  			SerialPortService.WritePort (Printer.ShareName' RemoveTag (s) + "\n\r");  		} else if (s.ToLower ().StartsWith ("<xct")) {  			var lineData = s.ToLower ().Replace ("<xct"' "").Trim (new[] {  				' ''  				'<''  				'>'  			});  			SerialPortService.WriteCommand (Printer.ShareName' lineData' Printer.CodePage);  		} else  			SerialPortService.WritePort (Printer.ShareName' RemoveTag (s)' Printer.CodePage);  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,PortPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\PortPrinterJob.cs,DoPrint,The following statement contains a magic number: foreach (var s in data) {  	if (s.Trim ().ToLower () == "<w>")  		System.Threading.Thread.Sleep (100);  	if (s.ToLower ().StartsWith ("<lb")) {  		SerialPortService.WritePort (Printer.ShareName' RemoveTag (s) + "\n\r");  	} else if (s.ToLower ().StartsWith ("<xct")) {  		var lineData = s.ToLower ().Replace ("<xct"' "").Trim (new[] {  			' ''  			'<''  			'>'  		});  		SerialPortService.WriteCommand (Printer.ShareName' lineData' Printer.CodePage);  	} else  		SerialPortService.WritePort (Printer.ShareName' RemoveTag (s)' Printer.CodePage);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,PortPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\PortPrinterJob.cs,DoPrint,The following statement contains a magic number: if (s.Trim ().ToLower () == "<w>")  	System.Threading.Thread.Sleep (100);  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,PortPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\PortPrinterJob.cs,DoPrint,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,WindowsPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\WindowsPrinterJob.cs,DoPrint,The following statement contains a magic number: if (q != null || pd.PrintQueue.FullName == Printer.ShareName || Printer.ShareName.ToLower () == "default" || Printer.ShareName.Contains ("/") || pd.ShowDialog ().GetValueOrDefault (false)) {  	document.Background = Brushes.Transparent;  	document.FontFamily = new FontFamily (LocalSettings.PrintFontFamily);  	document.PageHeight = pd.PrintableAreaHeight;  	document.PageWidth = pd.PrintableAreaWidth;  	document.PagePadding = new Thickness (25);  	document.ColumnGap = 0;  	document.ColumnWidth = (document.PageWidth - document.ColumnGap - document.PagePadding.Left - document.PagePadding.Right);  	pd.PrintDocument (((IDocumentPaginatorSource)document).DocumentPaginator' "");  }  
Magic Number,Samba.Services.Implementations.PrinterModule.PrintJobs,WindowsPrinterJob,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\PrintJobs\WindowsPrinterJob.cs,DoPrint,The following statement contains a magic number: document.PagePadding = new Thickness (25);  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,EnableRight,The following statement contains a magic number: WriteData (AsciiControlChars.Escape + "a" + (char)2);  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,SelectTurkishCodePage,The following statement contains a magic number: WriteData (AsciiControlChars.Escape + (char)0x1D + "t" + (char)12);  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,Cut,The following statement contains a magic number: WriteData (AsciiControlChars.GroupSeparator + "V" + (char)66 + (char)0);  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,PrintWindow,The following statement contains a magic number: WriteLine (tl + hl.PadLeft (_maxChars - 2' hl [0]) + tr' 1' 0' LineAlignment.Left);  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,PrintWindow,The following statement contains a magic number: WriteLine (bl + hl.PadLeft (_maxChars - 2' hl [0]) + br);  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,PrintQrCode,The following statement contains a magic number: if (size == 0)  	size = 6;  else  	size = (size * 2) + 1;  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,PrintQrCode,The following statement contains a magic number: if (size == 0)  	size = 6;  else  	size = (size * 2) + 1;  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,PrintQrCode,The following statement contains a magic number: size = 6;  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,PrintQrCode,The following statement contains a magic number: size = (size * 2) + 1;  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,PrintBarCode,The following statement contains a magic number: using (var img = barcodeDraw.Draw (barcode' 80' 2)) {  	PrintBitmap (new Bitmap (img)' space);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,PrintBarCode,The following statement contains a magic number: using (var img = barcodeDraw.Draw (barcode' 80' 2)) {  	PrintBitmap (new Bitmap (img)' space);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,ConvertBitmapData,The following statement contains a magic number: for (var y = 0; y < bitmap.Height; y++) {  	for (var x = 0; x < bitmap.Width; x++) {  		var color = bitmap.GetPixel (x' y);  		var luminance = (int)(color.R * 0.3 + color.G * 0.59 + color.B * 0.11);  		dots [index] = (luminance < threshold);  		index++;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,ConvertBitmapData,The following statement contains a magic number: for (var y = 0; y < bitmap.Height; y++) {  	for (var x = 0; x < bitmap.Width; x++) {  		var color = bitmap.GetPixel (x' y);  		var luminance = (int)(color.R * 0.3 + color.G * 0.59 + color.B * 0.11);  		dots [index] = (luminance < threshold);  		index++;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,ConvertBitmapData,The following statement contains a magic number: for (var y = 0; y < bitmap.Height; y++) {  	for (var x = 0; x < bitmap.Width; x++) {  		var color = bitmap.GetPixel (x' y);  		var luminance = (int)(color.R * 0.3 + color.G * 0.59 + color.B * 0.11);  		dots [index] = (luminance < threshold);  		index++;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,ConvertBitmapData,The following statement contains a magic number: for (var x = 0; x < bitmap.Width; x++) {  	var color = bitmap.GetPixel (x' y);  	var luminance = (int)(color.R * 0.3 + color.G * 0.59 + color.B * 0.11);  	dots [index] = (luminance < threshold);  	index++;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,ConvertBitmapData,The following statement contains a magic number: for (var x = 0; x < bitmap.Width; x++) {  	var color = bitmap.GetPixel (x' y);  	var luminance = (int)(color.R * 0.3 + color.G * 0.59 + color.B * 0.11);  	dots [index] = (luminance < threshold);  	index++;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,ConvertBitmapData,The following statement contains a magic number: for (var x = 0; x < bitmap.Width; x++) {  	var color = bitmap.GetPixel (x' y);  	var luminance = (int)(color.R * 0.3 + color.G * 0.59 + color.B * 0.11);  	dots [index] = (luminance < threshold);  	index++;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: bw.Write ((byte)24);  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: while (offset < data.Height) {  	bw.Write ("".PadLeft (space));  	bw.Write (AsciiControlChars.Escape);  	bw.Write ('*');  	// bit-image mode  	bw.Write ((byte)33);  	// 24-dot double-density  	bw.Write (width [0]);  	// width low byte  	bw.Write (width [1]);  	// width high byte  	for (var x = 0; x < data.Width; ++x) {  		for (var k = 0; k < 3; ++k) {  			byte slice = 0;  			for (var b = 0; b < 8; ++b) {  				var y = (((offset / 8) + k) * 8) + b;  				var i = (y * data.Width) + x;  				var v = false;  				if (i < dots.Length)  					v = dots [i];  				slice |= (byte)((v ? 1 : 0) << (7 - b));  			}  			bw.Write (slice);  		}  	}  	offset += 24;  	bw.Write (AsciiControlChars.Newline);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: while (offset < data.Height) {  	bw.Write ("".PadLeft (space));  	bw.Write (AsciiControlChars.Escape);  	bw.Write ('*');  	// bit-image mode  	bw.Write ((byte)33);  	// 24-dot double-density  	bw.Write (width [0]);  	// width low byte  	bw.Write (width [1]);  	// width high byte  	for (var x = 0; x < data.Width; ++x) {  		for (var k = 0; k < 3; ++k) {  			byte slice = 0;  			for (var b = 0; b < 8; ++b) {  				var y = (((offset / 8) + k) * 8) + b;  				var i = (y * data.Width) + x;  				var v = false;  				if (i < dots.Length)  					v = dots [i];  				slice |= (byte)((v ? 1 : 0) << (7 - b));  			}  			bw.Write (slice);  		}  	}  	offset += 24;  	bw.Write (AsciiControlChars.Newline);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: while (offset < data.Height) {  	bw.Write ("".PadLeft (space));  	bw.Write (AsciiControlChars.Escape);  	bw.Write ('*');  	// bit-image mode  	bw.Write ((byte)33);  	// 24-dot double-density  	bw.Write (width [0]);  	// width low byte  	bw.Write (width [1]);  	// width high byte  	for (var x = 0; x < data.Width; ++x) {  		for (var k = 0; k < 3; ++k) {  			byte slice = 0;  			for (var b = 0; b < 8; ++b) {  				var y = (((offset / 8) + k) * 8) + b;  				var i = (y * data.Width) + x;  				var v = false;  				if (i < dots.Length)  					v = dots [i];  				slice |= (byte)((v ? 1 : 0) << (7 - b));  			}  			bw.Write (slice);  		}  	}  	offset += 24;  	bw.Write (AsciiControlChars.Newline);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: while (offset < data.Height) {  	bw.Write ("".PadLeft (space));  	bw.Write (AsciiControlChars.Escape);  	bw.Write ('*');  	// bit-image mode  	bw.Write ((byte)33);  	// 24-dot double-density  	bw.Write (width [0]);  	// width low byte  	bw.Write (width [1]);  	// width high byte  	for (var x = 0; x < data.Width; ++x) {  		for (var k = 0; k < 3; ++k) {  			byte slice = 0;  			for (var b = 0; b < 8; ++b) {  				var y = (((offset / 8) + k) * 8) + b;  				var i = (y * data.Width) + x;  				var v = false;  				if (i < dots.Length)  					v = dots [i];  				slice |= (byte)((v ? 1 : 0) << (7 - b));  			}  			bw.Write (slice);  		}  	}  	offset += 24;  	bw.Write (AsciiControlChars.Newline);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: while (offset < data.Height) {  	bw.Write ("".PadLeft (space));  	bw.Write (AsciiControlChars.Escape);  	bw.Write ('*');  	// bit-image mode  	bw.Write ((byte)33);  	// 24-dot double-density  	bw.Write (width [0]);  	// width low byte  	bw.Write (width [1]);  	// width high byte  	for (var x = 0; x < data.Width; ++x) {  		for (var k = 0; k < 3; ++k) {  			byte slice = 0;  			for (var b = 0; b < 8; ++b) {  				var y = (((offset / 8) + k) * 8) + b;  				var i = (y * data.Width) + x;  				var v = false;  				if (i < dots.Length)  					v = dots [i];  				slice |= (byte)((v ? 1 : 0) << (7 - b));  			}  			bw.Write (slice);  		}  	}  	offset += 24;  	bw.Write (AsciiControlChars.Newline);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: while (offset < data.Height) {  	bw.Write ("".PadLeft (space));  	bw.Write (AsciiControlChars.Escape);  	bw.Write ('*');  	// bit-image mode  	bw.Write ((byte)33);  	// 24-dot double-density  	bw.Write (width [0]);  	// width low byte  	bw.Write (width [1]);  	// width high byte  	for (var x = 0; x < data.Width; ++x) {  		for (var k = 0; k < 3; ++k) {  			byte slice = 0;  			for (var b = 0; b < 8; ++b) {  				var y = (((offset / 8) + k) * 8) + b;  				var i = (y * data.Width) + x;  				var v = false;  				if (i < dots.Length)  					v = dots [i];  				slice |= (byte)((v ? 1 : 0) << (7 - b));  			}  			bw.Write (slice);  		}  	}  	offset += 24;  	bw.Write (AsciiControlChars.Newline);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: while (offset < data.Height) {  	bw.Write ("".PadLeft (space));  	bw.Write (AsciiControlChars.Escape);  	bw.Write ('*');  	// bit-image mode  	bw.Write ((byte)33);  	// 24-dot double-density  	bw.Write (width [0]);  	// width low byte  	bw.Write (width [1]);  	// width high byte  	for (var x = 0; x < data.Width; ++x) {  		for (var k = 0; k < 3; ++k) {  			byte slice = 0;  			for (var b = 0; b < 8; ++b) {  				var y = (((offset / 8) + k) * 8) + b;  				var i = (y * data.Width) + x;  				var v = false;  				if (i < dots.Length)  					v = dots [i];  				slice |= (byte)((v ? 1 : 0) << (7 - b));  			}  			bw.Write (slice);  		}  	}  	offset += 24;  	bw.Write (AsciiControlChars.Newline);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: bw.Write ((byte)33);  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var x = 0; x < data.Width; ++x) {  	for (var k = 0; k < 3; ++k) {  		byte slice = 0;  		for (var b = 0; b < 8; ++b) {  			var y = (((offset / 8) + k) * 8) + b;  			var i = (y * data.Width) + x;  			var v = false;  			if (i < dots.Length)  				v = dots [i];  			slice |= (byte)((v ? 1 : 0) << (7 - b));  		}  		bw.Write (slice);  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var x = 0; x < data.Width; ++x) {  	for (var k = 0; k < 3; ++k) {  		byte slice = 0;  		for (var b = 0; b < 8; ++b) {  			var y = (((offset / 8) + k) * 8) + b;  			var i = (y * data.Width) + x;  			var v = false;  			if (i < dots.Length)  				v = dots [i];  			slice |= (byte)((v ? 1 : 0) << (7 - b));  		}  		bw.Write (slice);  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var x = 0; x < data.Width; ++x) {  	for (var k = 0; k < 3; ++k) {  		byte slice = 0;  		for (var b = 0; b < 8; ++b) {  			var y = (((offset / 8) + k) * 8) + b;  			var i = (y * data.Width) + x;  			var v = false;  			if (i < dots.Length)  				v = dots [i];  			slice |= (byte)((v ? 1 : 0) << (7 - b));  		}  		bw.Write (slice);  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var x = 0; x < data.Width; ++x) {  	for (var k = 0; k < 3; ++k) {  		byte slice = 0;  		for (var b = 0; b < 8; ++b) {  			var y = (((offset / 8) + k) * 8) + b;  			var i = (y * data.Width) + x;  			var v = false;  			if (i < dots.Length)  				v = dots [i];  			slice |= (byte)((v ? 1 : 0) << (7 - b));  		}  		bw.Write (slice);  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var x = 0; x < data.Width; ++x) {  	for (var k = 0; k < 3; ++k) {  		byte slice = 0;  		for (var b = 0; b < 8; ++b) {  			var y = (((offset / 8) + k) * 8) + b;  			var i = (y * data.Width) + x;  			var v = false;  			if (i < dots.Length)  				v = dots [i];  			slice |= (byte)((v ? 1 : 0) << (7 - b));  		}  		bw.Write (slice);  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var k = 0; k < 3; ++k) {  	byte slice = 0;  	for (var b = 0; b < 8; ++b) {  		var y = (((offset / 8) + k) * 8) + b;  		var i = (y * data.Width) + x;  		var v = false;  		if (i < dots.Length)  			v = dots [i];  		slice |= (byte)((v ? 1 : 0) << (7 - b));  	}  	bw.Write (slice);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var k = 0; k < 3; ++k) {  	byte slice = 0;  	for (var b = 0; b < 8; ++b) {  		var y = (((offset / 8) + k) * 8) + b;  		var i = (y * data.Width) + x;  		var v = false;  		if (i < dots.Length)  			v = dots [i];  		slice |= (byte)((v ? 1 : 0) << (7 - b));  	}  	bw.Write (slice);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var k = 0; k < 3; ++k) {  	byte slice = 0;  	for (var b = 0; b < 8; ++b) {  		var y = (((offset / 8) + k) * 8) + b;  		var i = (y * data.Width) + x;  		var v = false;  		if (i < dots.Length)  			v = dots [i];  		slice |= (byte)((v ? 1 : 0) << (7 - b));  	}  	bw.Write (slice);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var k = 0; k < 3; ++k) {  	byte slice = 0;  	for (var b = 0; b < 8; ++b) {  		var y = (((offset / 8) + k) * 8) + b;  		var i = (y * data.Width) + x;  		var v = false;  		if (i < dots.Length)  			v = dots [i];  		slice |= (byte)((v ? 1 : 0) << (7 - b));  	}  	bw.Write (slice);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var k = 0; k < 3; ++k) {  	byte slice = 0;  	for (var b = 0; b < 8; ++b) {  		var y = (((offset / 8) + k) * 8) + b;  		var i = (y * data.Width) + x;  		var v = false;  		if (i < dots.Length)  			v = dots [i];  		slice |= (byte)((v ? 1 : 0) << (7 - b));  	}  	bw.Write (slice);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var b = 0; b < 8; ++b) {  	var y = (((offset / 8) + k) * 8) + b;  	var i = (y * data.Width) + x;  	var v = false;  	if (i < dots.Length)  		v = dots [i];  	slice |= (byte)((v ? 1 : 0) << (7 - b));  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var b = 0; b < 8; ++b) {  	var y = (((offset / 8) + k) * 8) + b;  	var i = (y * data.Width) + x;  	var v = false;  	if (i < dots.Length)  		v = dots [i];  	slice |= (byte)((v ? 1 : 0) << (7 - b));  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var b = 0; b < 8; ++b) {  	var y = (((offset / 8) + k) * 8) + b;  	var i = (y * data.Width) + x;  	var v = false;  	if (i < dots.Length)  		v = dots [i];  	slice |= (byte)((v ? 1 : 0) << (7 - b));  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: for (var b = 0; b < 8; ++b) {  	var y = (((offset / 8) + k) * 8) + b;  	var i = (y * data.Width) + x;  	var v = false;  	if (i < dots.Length)  		v = dots [i];  	slice |= (byte)((v ? 1 : 0) << (7 - b));  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: slice |= (byte)((v ? 1 : 0) << (7 - b));  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: offset += 24;  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,RenderBitmap,The following statement contains a magic number: bw.Write ((byte)30);  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,OpenCashDrawer,The following statement contains a magic number: WriteData (((char)27 + (char)112 + (char)0 + (char)25 + (char)250).ToString (CultureInfo.InvariantCulture));  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,OpenCashDrawer,The following statement contains a magic number: WriteData (((char)27 + (char)112 + (char)0 + (char)25 + (char)250).ToString (CultureInfo.InvariantCulture));  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,OpenCashDrawer,The following statement contains a magic number: WriteData (((char)27 + (char)112 + (char)0 + (char)25 + (char)250).ToString (CultureInfo.InvariantCulture));  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,LinePrinter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\LinePrinter.cs,OpenCashDrawer,The following statement contains a magic number: WriteData (((char)27 + (char)112 + (char)0 + (char)25 + (char)250).ToString (CultureInfo.InvariantCulture));  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,PrinterTools,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\PrinterTools.cs,ReadTable,The following statement contains a magic number: foreach (var row in table.RowGroups [0].Rows) {  	for (var i = 0; i < row.Cells.Count; i++) {  		if (table.RowGroups [0].Rows.Count > 1 && row == table.RowGroups [0].Rows [1])  			colAlignments [i] = (row.Cells [i].Blocks.First ()).TextAlignment;  		var value = string.Join (" "' ReadBlocks (row.Cells [i].Blocks)).Trim ();  		if (value.Length > colLenghts [i] && row.Cells [0].ColumnSpan == 1)  			colLenghts [i] = value.Length + 2;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,PrinterTools,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\PrinterTools.cs,ReadTable,The following statement contains a magic number: for (var i = 0; i < row.Cells.Count; i++) {  	if (table.RowGroups [0].Rows.Count > 1 && row == table.RowGroups [0].Rows [1])  		colAlignments [i] = (row.Cells [i].Blocks.First ()).TextAlignment;  	var value = string.Join (" "' ReadBlocks (row.Cells [i].Blocks)).Trim ();  	if (value.Length > colLenghts [i] && row.Cells [0].ColumnSpan == 1)  		colLenghts [i] = value.Length + 2;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,PrinterTools,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\PrinterTools.cs,ReadTable,The following statement contains a magic number: if (value.Length > colLenghts [i] && row.Cells [0].ColumnSpan == 1)  	colLenghts [i] = value.Length + 2;  
Magic Number,Samba.Services.Implementations.PrinterModule.Tools,PrinterTools,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Tools\PrinterTools.cs,ReadTable,The following statement contains a magic number: colLenghts [i] = value.Length + 2;  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The following statement contains a magic number: RegisterFunction ("{RANDOM:([^}]+)}"' (x' d) => GenerateRandomNumber (SafeInt (d' 8)' false)' "Random Number");  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The following statement contains a magic number: RegisterFunction ("{RANDOMC:([^}]+)}"' (x' d) => GenerateRandomNumber (SafeInt (d' 8)' true)' "Random Number with check digit");  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,FunctionRegistry,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\FunctionRegistry.cs,RegisterFunctions,The following statement contains a magic number: RegisterFunction<Order> (TagNames.Cents' (x' d) => (x.Price * 100).ToString (LocalSettings.QuantityFormat)' Resources.LineItemPriceCents);  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,Helper,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\Helper.cs,FormatData,The following statement contains a magic number: while (data.Contains (tag) && i < 99) {  	var value = valueFunc.Invoke ();  	var tagData = new TagData (data' tag);  	if (!string.IsNullOrEmpty (value) && tagData.DataString.StartsWith ("[") && tagData.DataString.EndsWith ("]") && value == 0.ToString ("#'#0.00"))  		value = "";  	if (!string.IsNullOrEmpty (value) || data.Contains ("\""))  		value = !string.IsNullOrEmpty (tagData.Title) && tagData.Title.Contains ("<value>") ? tagData.Title.Replace ("<value>"' value) : tagData.Title + value;  	var spos = data.IndexOf (tagData.DataString);  	data = data.Remove (spos' tagData.Length).Insert (spos' value ?? "");  	i++;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10) {  	friendlyInt += Ones [n];  } else if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 20) {  	friendlyInt += Teens [n - 10];  } else if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: friendlyInt += Teens [n - 10];  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 100) {  	friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  } else if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: friendlyInt += FriendlyInteger (n % 10' Tens [n / 10 - 2]' 0);  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 1000) {  	var t = Ones [n / 100] + " " + Resources.Hundred;  	if (n / 100 == 1)  		t = Resources.OneHundred;  	friendlyInt += FriendlyInteger (n % 100' t' 0);  } else if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n / 100 == 1)  	t = Resources.OneHundred;  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: friendlyInt += FriendlyInteger (n % 100' t' 0);  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n < 10000 && thousands == 0) {  	var t = Ones [n / 1000] + " " + Resources.Thousand;  	if (n / 1000 == 1)  		t = Resources.OneThousand;  	friendlyInt += FriendlyInteger (n % 1000' t' 0);  } else {  	friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: if (n / 1000 == 1)  	t = Resources.OneThousand;  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: friendlyInt += FriendlyInteger (n % 1000' t' 0);  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,FriendlyInteger,The following statement contains a magic number: friendlyInt += FriendlyInteger (n % 1000' FriendlyInteger (n / 1000' ""' thousands + 1)' 0);  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,HumanFriendlyInteger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\HumanFriendlyInteger.cs,CurrencyToWritten,The following statement contains a magic number: if (fraction > 0) {  	var end = IntegerToWritten (Convert.ToInt32 (fraction * 100));  	if (upper)  		end = end.Replace (" "' "").ToUpper ();  	result += string.Format ("{0} {1} "' end' Resources.Cent + GetPlural (fraction));  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,OrderValueChanger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\OrderValueChanger.cs,FilterMatch,The following statement contains a magic number: if (key.Contains ("=")) {  	var parts = key.Split ('=');  	if (parts.Count () == 2) {  		return model.IsInState (parts [0]' parts [1]);  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.ValueChangers,OrderValueChanger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\ValueChangers\OrderValueChanger.cs,FilterMatch,The following statement contains a magic number: if (parts.Count () == 2) {  	return model.IsInState (parts [0]' parts [1]);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,BoxFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\BoxFormatter.cs,PrintWindow,The following statement contains a magic number: sb.AppendLine (tl + hl.PadLeft (MaxWidth - 2' hl [0]) + tr);  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,BoxFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\BoxFormatter.cs,PrintWindow,The following statement contains a magic number: sb.Append (bl + hl.PadLeft (MaxWidth - 2' hl [0]) + br);  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,CenterAlignFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\CenterAlignFormatter.cs,GetFormattedLine,The following statement contains a magic number: return Line.PadLeft (((MaxWidth + Line.Length) / 2)' ' ').PadRight (MaxWidth);  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,FormatTag,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\FormatTag.cs,FormatTag,The following statement contains a magic number: if (Tag.Length > 4 && char.IsNumber (data [Tag.Length - 3]) && char.IsNumber (data [Tag.Length - 2])) {  	Height = Convert.ToInt32 (Tag [Tag.Length - 3].ToString ());  	Width = Convert.ToInt32 (Tag [Tag.Length - 2].ToString ());  	TagName = TagName.Substring (0' TagName.Length - 2);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,FormatTag,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\FormatTag.cs,FormatTag,The following statement contains a magic number: if (Tag.Length > 4 && char.IsNumber (data [Tag.Length - 3]) && char.IsNumber (data [Tag.Length - 2])) {  	Height = Convert.ToInt32 (Tag [Tag.Length - 3].ToString ());  	Width = Convert.ToInt32 (Tag [Tag.Length - 2].ToString ());  	TagName = TagName.Substring (0' TagName.Length - 2);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,FormatTag,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\FormatTag.cs,FormatTag,The following statement contains a magic number: if (Tag.Length > 4 && char.IsNumber (data [Tag.Length - 3]) && char.IsNumber (data [Tag.Length - 2])) {  	Height = Convert.ToInt32 (Tag [Tag.Length - 3].ToString ());  	Width = Convert.ToInt32 (Tag [Tag.Length - 2].ToString ());  	TagName = TagName.Substring (0' TagName.Length - 2);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,FormatTag,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\FormatTag.cs,FormatTag,The following statement contains a magic number: if (Tag.Length > 4 && char.IsNumber (data [Tag.Length - 3]) && char.IsNumber (data [Tag.Length - 2])) {  	Height = Convert.ToInt32 (Tag [Tag.Length - 3].ToString ());  	Width = Convert.ToInt32 (Tag [Tag.Length - 2].ToString ());  	TagName = TagName.Substring (0' TagName.Length - 2);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,FormatTag,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\FormatTag.cs,FormatTag,The following statement contains a magic number: if (Tag.Length > 4 && char.IsNumber (data [Tag.Length - 3]) && char.IsNumber (data [Tag.Length - 2])) {  	Height = Convert.ToInt32 (Tag [Tag.Length - 3].ToString ());  	Width = Convert.ToInt32 (Tag [Tag.Length - 2].ToString ());  	TagName = TagName.Substring (0' TagName.Length - 2);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,FormatTag,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\FormatTag.cs,FormatTag,The following statement contains a magic number: if (Tag.Length > 4 && char.IsNumber (data [Tag.Length - 3]) && char.IsNumber (data [Tag.Length - 2])) {  	Height = Convert.ToInt32 (Tag [Tag.Length - 3].ToString ());  	Width = Convert.ToInt32 (Tag [Tag.Length - 2].ToString ());  	TagName = TagName.Substring (0' TagName.Length - 2);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,FormatTag,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\FormatTag.cs,FormatTag,The following statement contains a magic number: Height = Convert.ToInt32 (Tag [Tag.Length - 3].ToString ());  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,FormatTag,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\FormatTag.cs,FormatTag,The following statement contains a magic number: Width = Convert.ToInt32 (Tag [Tag.Length - 2].ToString ());  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,FormatTag,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\FormatTag.cs,FormatTag,The following statement contains a magic number: TagName = TagName.Substring (0' TagName.Length - 2);  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,JustifyAlignFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\JustifyAlignFormatter.cs,ActualLength,The following statement contains a magic number: for (var i = 0; i < n; i++) {  	var strWord = GetStrAt (str' i);  	if (strWord.Length > 1) {  		lenTotal++;  		continue;  	}  	int asc = Convert.ToChar (strWord);  	if (asc == 9) {  		lenTotal = Math.Truncate (lenTotal);  		lenTotal = lenTotal + GetTabLength (lenTotal);  	} else if (asc > 0 && asc < 256)  		lenTotal++;  	else  		lenTotal = lenTotal + GetDifference (strWord);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,JustifyAlignFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\JustifyAlignFormatter.cs,ActualLength,The following statement contains a magic number: for (var i = 0; i < n; i++) {  	var strWord = GetStrAt (str' i);  	if (strWord.Length > 1) {  		lenTotal++;  		continue;  	}  	int asc = Convert.ToChar (strWord);  	if (asc == 9) {  		lenTotal = Math.Truncate (lenTotal);  		lenTotal = lenTotal + GetTabLength (lenTotal);  	} else if (asc > 0 && asc < 256)  		lenTotal++;  	else  		lenTotal = lenTotal + GetDifference (strWord);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,JustifyAlignFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\JustifyAlignFormatter.cs,ActualLength,The following statement contains a magic number: if (asc == 9) {  	lenTotal = Math.Truncate (lenTotal);  	lenTotal = lenTotal + GetTabLength (lenTotal);  } else if (asc > 0 && asc < 256)  	lenTotal++;  else  	lenTotal = lenTotal + GetDifference (strWord);  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,JustifyAlignFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\JustifyAlignFormatter.cs,ActualLength,The following statement contains a magic number: if (asc == 9) {  	lenTotal = Math.Truncate (lenTotal);  	lenTotal = lenTotal + GetTabLength (lenTotal);  } else if (asc > 0 && asc < 256)  	lenTotal++;  else  	lenTotal = lenTotal + GetDifference (strWord);  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,JustifyAlignFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\JustifyAlignFormatter.cs,ActualLength,The following statement contains a magic number: if (asc > 0 && asc < 256)  	lenTotal++;  else  	lenTotal = lenTotal + GetDifference (strWord);  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,JustifyAlignFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\JustifyAlignFormatter.cs,GetTabLength,The following statement contains a magic number: if (lenTotal >= 8)  	diff = diff % 8;  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,JustifyAlignFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\JustifyAlignFormatter.cs,GetTabLength,The following statement contains a magic number: if (lenTotal >= 8)  	diff = diff % 8;  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,JustifyAlignFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\JustifyAlignFormatter.cs,GetTabLength,The following statement contains a magic number: diff = diff % 8;  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,JustifyAlignFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\JustifyAlignFormatter.cs,GetTabLength,The following statement contains a magic number: return 8 - diff;  
Magic Number,Samba.Services.Implementations.PrinterModule.Formatters,TitleFormatter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\Formatters\TitleFormatter.cs,PrintCenteredLabel,The following statement contains a magic number: if (leftPad % 2 == 1)  	leftPad++;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,GetElementPropertiesFromCssAttributes,The following statement contains a magic number: if (style != null) {  	string[] styleValues = style.Split (';');  	for (int i = 0; i < styleValues.Length; i++) {  		string[] styleNameValue;  		styleNameValue = styleValues [i].Split (':');  		if (styleNameValue.Length == 2) {  			string styleName = styleNameValue [0].Trim ().ToLower ();  			string styleValue = HtmlToXamlConverter.UnQuote (styleNameValue [1].Trim ()).ToLower ();  			int nextIndex = 0;  			switch (styleName) {  			case "font":  				ParseCssFont (styleValue' localProperties);  				break;  			case "font-family":  				ParseCssFontFamily (styleValue' ref nextIndex' localProperties);  				break;  			case "font-size":  				ParseCssSize (styleValue' ref nextIndex' localProperties' "font-size"' /*mustBeNonNegative:*/true);  				break;  			case "font-style":  				ParseCssFontStyle (styleValue' ref nextIndex' localProperties);  				break;  			case "font-weight":  				ParseCssFontWeight (styleValue' ref nextIndex' localProperties);  				break;  			case "font-variant":  				ParseCssFontVariant (styleValue' ref nextIndex' localProperties);  				break;  			case "line-height":  				ParseCssSize (styleValue' ref nextIndex' localProperties' "line-height"' /*mustBeNonNegative:*/true);  				break;  			case "word-spacing":  				//  Implement word-spacing conversion  				break;  			case "letter-spacing":  				//  Implement letter-spacing conversion  				break;  			case "color":  				ParseCssColor (styleValue' ref nextIndex' localProperties' "color");  				break;  			case "text-decoration":  				ParseCssTextDecoration (styleValue' ref nextIndex' localProperties);  				break;  			case "text-transform":  				ParseCssTextTransform (styleValue' ref nextIndex' localProperties);  				break;  			case "background-color":  				ParseCssColor (styleValue' ref nextIndex' localProperties' "background-color");  				break;  			case "background":  				ParseCssBackground (styleValue' ref nextIndex' localProperties);  				break;  			case "text-align":  				ParseCssTextAlign (styleValue' ref nextIndex' localProperties);  				break;  			case "vertical-align":  				ParseCssVerticalAlign (styleValue' ref nextIndex' localProperties);  				break;  			case "text-indent":  				ParseCssSize (styleValue' ref nextIndex' localProperties' "text-indent"' /*mustBeNonNegative:*/false);  				break;  			case "width":  			case "height":  				ParseCssSize (styleValue' ref nextIndex' localProperties' styleName' /*mustBeNonNegative:*/true);  				break;  			case "margin":  				// top/right/bottom/left  				ParseCssRectangleProperty (styleValue' ref nextIndex' localProperties' styleName);  				break;  			case "margin-top":  			case "margin-right":  			case "margin-bottom":  			case "margin-left":  				ParseCssSize (styleValue' ref nextIndex' localProperties' styleName' /*mustBeNonNegative:*/true);  				break;  			case "padding":  				ParseCssRectangleProperty (styleValue' ref nextIndex' localProperties' styleName);  				break;  			case "padding-top":  			case "padding-right":  			case "padding-bottom":  			case "padding-left":  				ParseCssSize (styleValue' ref nextIndex' localProperties' styleName' /*mustBeNonNegative:*/true);  				break;  			case "border":  				ParseCssBorder (styleValue' ref nextIndex' localProperties);  				break;  			case "border-style":  			case "border-width":  			case "border-color":  				ParseCssRectangleProperty (styleValue' ref nextIndex' localProperties' styleName);  				break;  			case "border-top":  			case "border-right":  			case "border-left":  			case "border-bottom":  				//  Parse css border style  				break;  			// In our internal notation we intentionally put them at the end - to unify processing in ParseCssRectangleProperty method  			case "border-top-style":  			case "border-right-style":  			case "border-left-style":  			case "border-bottom-style":  			case "border-top-color":  			case "border-right-color":  			case "border-left-color":  			case "border-bottom-color":  			case "border-top-width":  			case "border-right-width":  			case "border-left-width":  			case "border-bottom-width":  				//  Parse css border style  				break;  			case "display":  				//  Implement display style conversion  				break;  			case "float":  				ParseCssFloat (styleValue' ref nextIndex' localProperties);  				break;  			case "clear":  				ParseCssClear (styleValue' ref nextIndex' localProperties);  				break;  			default:  				break;  			}  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,GetElementPropertiesFromCssAttributes,The following statement contains a magic number: for (int i = 0; i < styleValues.Length; i++) {  	string[] styleNameValue;  	styleNameValue = styleValues [i].Split (':');  	if (styleNameValue.Length == 2) {  		string styleName = styleNameValue [0].Trim ().ToLower ();  		string styleValue = HtmlToXamlConverter.UnQuote (styleNameValue [1].Trim ()).ToLower ();  		int nextIndex = 0;  		switch (styleName) {  		case "font":  			ParseCssFont (styleValue' localProperties);  			break;  		case "font-family":  			ParseCssFontFamily (styleValue' ref nextIndex' localProperties);  			break;  		case "font-size":  			ParseCssSize (styleValue' ref nextIndex' localProperties' "font-size"' /*mustBeNonNegative:*/true);  			break;  		case "font-style":  			ParseCssFontStyle (styleValue' ref nextIndex' localProperties);  			break;  		case "font-weight":  			ParseCssFontWeight (styleValue' ref nextIndex' localProperties);  			break;  		case "font-variant":  			ParseCssFontVariant (styleValue' ref nextIndex' localProperties);  			break;  		case "line-height":  			ParseCssSize (styleValue' ref nextIndex' localProperties' "line-height"' /*mustBeNonNegative:*/true);  			break;  		case "word-spacing":  			//  Implement word-spacing conversion  			break;  		case "letter-spacing":  			//  Implement letter-spacing conversion  			break;  		case "color":  			ParseCssColor (styleValue' ref nextIndex' localProperties' "color");  			break;  		case "text-decoration":  			ParseCssTextDecoration (styleValue' ref nextIndex' localProperties);  			break;  		case "text-transform":  			ParseCssTextTransform (styleValue' ref nextIndex' localProperties);  			break;  		case "background-color":  			ParseCssColor (styleValue' ref nextIndex' localProperties' "background-color");  			break;  		case "background":  			ParseCssBackground (styleValue' ref nextIndex' localProperties);  			break;  		case "text-align":  			ParseCssTextAlign (styleValue' ref nextIndex' localProperties);  			break;  		case "vertical-align":  			ParseCssVerticalAlign (styleValue' ref nextIndex' localProperties);  			break;  		case "text-indent":  			ParseCssSize (styleValue' ref nextIndex' localProperties' "text-indent"' /*mustBeNonNegative:*/false);  			break;  		case "width":  		case "height":  			ParseCssSize (styleValue' ref nextIndex' localProperties' styleName' /*mustBeNonNegative:*/true);  			break;  		case "margin":  			// top/right/bottom/left  			ParseCssRectangleProperty (styleValue' ref nextIndex' localProperties' styleName);  			break;  		case "margin-top":  		case "margin-right":  		case "margin-bottom":  		case "margin-left":  			ParseCssSize (styleValue' ref nextIndex' localProperties' styleName' /*mustBeNonNegative:*/true);  			break;  		case "padding":  			ParseCssRectangleProperty (styleValue' ref nextIndex' localProperties' styleName);  			break;  		case "padding-top":  		case "padding-right":  		case "padding-bottom":  		case "padding-left":  			ParseCssSize (styleValue' ref nextIndex' localProperties' styleName' /*mustBeNonNegative:*/true);  			break;  		case "border":  			ParseCssBorder (styleValue' ref nextIndex' localProperties);  			break;  		case "border-style":  		case "border-width":  		case "border-color":  			ParseCssRectangleProperty (styleValue' ref nextIndex' localProperties' styleName);  			break;  		case "border-top":  		case "border-right":  		case "border-left":  		case "border-bottom":  			//  Parse css border style  			break;  		// In our internal notation we intentionally put them at the end - to unify processing in ParseCssRectangleProperty method  		case "border-top-style":  		case "border-right-style":  		case "border-left-style":  		case "border-bottom-style":  		case "border-top-color":  		case "border-right-color":  		case "border-left-color":  		case "border-bottom-color":  		case "border-top-width":  		case "border-right-width":  		case "border-left-width":  		case "border-bottom-width":  			//  Parse css border style  			break;  		case "display":  			//  Implement display style conversion  			break;  		case "float":  			ParseCssFloat (styleValue' ref nextIndex' localProperties);  			break;  		case "clear":  			ParseCssClear (styleValue' ref nextIndex' localProperties);  			break;  		default:  			break;  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,GetElementPropertiesFromCssAttributes,The following statement contains a magic number: if (styleNameValue.Length == 2) {  	string styleName = styleNameValue [0].Trim ().ToLower ();  	string styleValue = HtmlToXamlConverter.UnQuote (styleNameValue [1].Trim ()).ToLower ();  	int nextIndex = 0;  	switch (styleName) {  	case "font":  		ParseCssFont (styleValue' localProperties);  		break;  	case "font-family":  		ParseCssFontFamily (styleValue' ref nextIndex' localProperties);  		break;  	case "font-size":  		ParseCssSize (styleValue' ref nextIndex' localProperties' "font-size"' /*mustBeNonNegative:*/true);  		break;  	case "font-style":  		ParseCssFontStyle (styleValue' ref nextIndex' localProperties);  		break;  	case "font-weight":  		ParseCssFontWeight (styleValue' ref nextIndex' localProperties);  		break;  	case "font-variant":  		ParseCssFontVariant (styleValue' ref nextIndex' localProperties);  		break;  	case "line-height":  		ParseCssSize (styleValue' ref nextIndex' localProperties' "line-height"' /*mustBeNonNegative:*/true);  		break;  	case "word-spacing":  		//  Implement word-spacing conversion  		break;  	case "letter-spacing":  		//  Implement letter-spacing conversion  		break;  	case "color":  		ParseCssColor (styleValue' ref nextIndex' localProperties' "color");  		break;  	case "text-decoration":  		ParseCssTextDecoration (styleValue' ref nextIndex' localProperties);  		break;  	case "text-transform":  		ParseCssTextTransform (styleValue' ref nextIndex' localProperties);  		break;  	case "background-color":  		ParseCssColor (styleValue' ref nextIndex' localProperties' "background-color");  		break;  	case "background":  		ParseCssBackground (styleValue' ref nextIndex' localProperties);  		break;  	case "text-align":  		ParseCssTextAlign (styleValue' ref nextIndex' localProperties);  		break;  	case "vertical-align":  		ParseCssVerticalAlign (styleValue' ref nextIndex' localProperties);  		break;  	case "text-indent":  		ParseCssSize (styleValue' ref nextIndex' localProperties' "text-indent"' /*mustBeNonNegative:*/false);  		break;  	case "width":  	case "height":  		ParseCssSize (styleValue' ref nextIndex' localProperties' styleName' /*mustBeNonNegative:*/true);  		break;  	case "margin":  		// top/right/bottom/left  		ParseCssRectangleProperty (styleValue' ref nextIndex' localProperties' styleName);  		break;  	case "margin-top":  	case "margin-right":  	case "margin-bottom":  	case "margin-left":  		ParseCssSize (styleValue' ref nextIndex' localProperties' styleName' /*mustBeNonNegative:*/true);  		break;  	case "padding":  		ParseCssRectangleProperty (styleValue' ref nextIndex' localProperties' styleName);  		break;  	case "padding-top":  	case "padding-right":  	case "padding-bottom":  	case "padding-left":  		ParseCssSize (styleValue' ref nextIndex' localProperties' styleName' /*mustBeNonNegative:*/true);  		break;  	case "border":  		ParseCssBorder (styleValue' ref nextIndex' localProperties);  		break;  	case "border-style":  	case "border-width":  	case "border-color":  		ParseCssRectangleProperty (styleValue' ref nextIndex' localProperties' styleName);  		break;  	case "border-top":  	case "border-right":  	case "border-left":  	case "border-bottom":  		//  Parse css border style  		break;  	// In our internal notation we intentionally put them at the end - to unify processing in ParseCssRectangleProperty method  	case "border-top-style":  	case "border-right-style":  	case "border-left-style":  	case "border-bottom-style":  	case "border-top-color":  	case "border-right-color":  	case "border-left-color":  	case "border-bottom-color":  	case "border-top-width":  	case "border-right-width":  	case "border-left-width":  	case "border-bottom-width":  		//  Parse css border style  		break;  	case "display":  		//  Implement display style conversion  		break;  	case "float":  		ParseCssFloat (styleValue' ref nextIndex' localProperties);  		break;  	case "clear":  		ParseCssClear (styleValue' ref nextIndex' localProperties);  		break;  	default:  		break;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssColor,The following statement contains a magic number: if (nextIndex < styleValue.Length) {  	int startIndex = nextIndex;  	char character = styleValue [nextIndex];  	if (character == '#') {  		nextIndex++;  		while (nextIndex < styleValue.Length) {  			character = Char.ToUpper (styleValue [nextIndex]);  			if (!('0' <= character && character <= '9' || 'A' <= character && character <= 'F')) {  				break;  			}  			nextIndex++;  		}  		if (nextIndex > startIndex + 1) {  			color = styleValue.Substring (startIndex' nextIndex - startIndex);  		}  	} else if (styleValue.Substring (nextIndex' 3).ToLower () == "rbg") {  		//  Implement real rgb() color parsing  		while (nextIndex < styleValue.Length && styleValue [nextIndex] != ')') {  			nextIndex++;  		}  		if (nextIndex < styleValue.Length) {  			nextIndex++;  			// to skip ')'  		}  		color = "gray";  		// return bogus color  	} else if (Char.IsLetter (character)) {  		color = ParseWordEnumeration (_colors' styleValue' ref nextIndex);  		if (color == null) {  			color = ParseWordEnumeration (_systemColors' styleValue' ref nextIndex);  			if (color != null) {  				//  Implement smarter system color converions into real colors  				color = "black";  			}  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssColor,The following statement contains a magic number: if (character == '#') {  	nextIndex++;  	while (nextIndex < styleValue.Length) {  		character = Char.ToUpper (styleValue [nextIndex]);  		if (!('0' <= character && character <= '9' || 'A' <= character && character <= 'F')) {  			break;  		}  		nextIndex++;  	}  	if (nextIndex > startIndex + 1) {  		color = styleValue.Substring (startIndex' nextIndex - startIndex);  	}  } else if (styleValue.Substring (nextIndex' 3).ToLower () == "rbg") {  	//  Implement real rgb() color parsing  	while (nextIndex < styleValue.Length && styleValue [nextIndex] != ')') {  		nextIndex++;  	}  	if (nextIndex < styleValue.Length) {  		nextIndex++;  		// to skip ')'  	}  	color = "gray";  	// return bogus color  } else if (Char.IsLetter (character)) {  	color = ParseWordEnumeration (_colors' styleValue' ref nextIndex);  	if (color == null) {  		color = ParseWordEnumeration (_systemColors' styleValue' ref nextIndex);  		if (color != null) {  			//  Implement smarter system color converions into real colors  			color = "black";  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssColor,The following statement contains a magic number: if (styleValue.Substring (nextIndex' 3).ToLower () == "rbg") {  	//  Implement real rgb() color parsing  	while (nextIndex < styleValue.Length && styleValue [nextIndex] != ')') {  		nextIndex++;  	}  	if (nextIndex < styleValue.Length) {  		nextIndex++;  		// to skip ')'  	}  	color = "gray";  	// return bogus color  } else if (Char.IsLetter (character)) {  	color = ParseWordEnumeration (_colors' styleValue' ref nextIndex);  	if (color == null) {  		color = ParseWordEnumeration (_systemColors' styleValue' ref nextIndex);  		if (color != null) {  			//  Implement smarter system color converions into real colors  			color = "black";  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssFontFamily,The following statement contains a magic number: while (nextIndex < styleValue.Length) {  	// Try generic-family  	string fontFamily = ParseWordEnumeration (_fontGenericFamilies' styleValue' ref nextIndex);  	if (fontFamily == null) {  		// Try quoted font family name  		if (nextIndex < styleValue.Length && (styleValue [nextIndex] == '"' || styleValue [nextIndex] == '\'')) {  			char quote = styleValue [nextIndex];  			nextIndex++;  			int startIndex = nextIndex;  			while (nextIndex < styleValue.Length && styleValue [nextIndex] != quote) {  				nextIndex++;  			}  			fontFamily = '"' + styleValue.Substring (startIndex' nextIndex - startIndex) + '"';  		}  		if (fontFamily == null) {  			// Try unquoted font family name  			int startIndex = nextIndex;  			while (nextIndex < styleValue.Length && styleValue [nextIndex] != ''' && styleValue [nextIndex] != ';') {  				nextIndex++;  			}  			if (nextIndex > startIndex) {  				fontFamily = styleValue.Substring (startIndex' nextIndex - startIndex).Trim ();  				if (fontFamily.Length == 0) {  					fontFamily = null;  				}  			}  		}  	}  	ParseWhiteSpace (styleValue' ref nextIndex);  	if (nextIndex < styleValue.Length && styleValue [nextIndex] == ''') {  		nextIndex++;  	}  	if (fontFamily != null) {  		//  css font-family can contein a list of names. We only consider the first name from the list. Need a decision what to do with remaining names  		// fontFamilyList = (fontFamilyList == null) ? fontFamily : fontFamilyList + "'" + fontFamily;  		if (fontFamilyList == null && fontFamily.Length > 0) {  			if (fontFamily [0] == '"' || fontFamily [0] == '\'') {  				// Unquote the font family name  				fontFamily = fontFamily.Substring (1' fontFamily.Length - 2);  			} else {  				// Convert generic css family name  			}  			fontFamilyList = fontFamily;  		}  	} else {  		break;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssFontFamily,The following statement contains a magic number: if (fontFamily != null) {  	//  css font-family can contein a list of names. We only consider the first name from the list. Need a decision what to do with remaining names  	// fontFamilyList = (fontFamilyList == null) ? fontFamily : fontFamilyList + "'" + fontFamily;  	if (fontFamilyList == null && fontFamily.Length > 0) {  		if (fontFamily [0] == '"' || fontFamily [0] == '\'') {  			// Unquote the font family name  			fontFamily = fontFamily.Substring (1' fontFamily.Length - 2);  		} else {  			// Convert generic css family name  		}  		fontFamilyList = fontFamily;  	}  } else {  	break;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssFontFamily,The following statement contains a magic number: if (fontFamilyList == null && fontFamily.Length > 0) {  	if (fontFamily [0] == '"' || fontFamily [0] == '\'') {  		// Unquote the font family name  		fontFamily = fontFamily.Substring (1' fontFamily.Length - 2);  	} else {  		// Convert generic css family name  	}  	fontFamilyList = fontFamily;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssFontFamily,The following statement contains a magic number: if (fontFamily [0] == '"' || fontFamily [0] == '\'') {  	// Unquote the font family name  	fontFamily = fontFamily.Substring (1' fontFamily.Length - 2);  } else {  	// Convert generic css family name  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlCssParser,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,ParseCssFontFamily,The following statement contains a magic number: fontFamily = fontFamily.Substring (1' fontFamily.Length - 2);  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,DiscoverStyleDefinitions,The following statement contains a magic number: while (nextCharacterIndex < stylesheetBuffer.Length) {  	// Extract selector  	int selectorStart = nextCharacterIndex;  	while (nextCharacterIndex < stylesheetBuffer.Length && stylesheetBuffer [nextCharacterIndex] != '{') {  		// Skip declaration directive starting from @  		if (stylesheetBuffer [nextCharacterIndex] == '@') {  			while (nextCharacterIndex < stylesheetBuffer.Length && stylesheetBuffer [nextCharacterIndex] != ';') {  				nextCharacterIndex++;  			}  			selectorStart = nextCharacterIndex + 1;  		}  		nextCharacterIndex++;  	}  	if (nextCharacterIndex < stylesheetBuffer.Length) {  		// Extract definition  		int definitionStart = nextCharacterIndex;  		while (nextCharacterIndex < stylesheetBuffer.Length && stylesheetBuffer [nextCharacterIndex] != '}') {  			nextCharacterIndex++;  		}  		// Define a style  		if (nextCharacterIndex - definitionStart > 2) {  			this.AddStyleDefinition (stylesheetBuffer.ToString (selectorStart' definitionStart - selectorStart)' stylesheetBuffer.ToString (definitionStart + 1' nextCharacterIndex - definitionStart - 2));  		}  		// Skip closing brace  		if (nextCharacterIndex < stylesheetBuffer.Length) {  			Debug.Assert (stylesheetBuffer [nextCharacterIndex] == '}');  			nextCharacterIndex++;  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,DiscoverStyleDefinitions,The following statement contains a magic number: while (nextCharacterIndex < stylesheetBuffer.Length) {  	// Extract selector  	int selectorStart = nextCharacterIndex;  	while (nextCharacterIndex < stylesheetBuffer.Length && stylesheetBuffer [nextCharacterIndex] != '{') {  		// Skip declaration directive starting from @  		if (stylesheetBuffer [nextCharacterIndex] == '@') {  			while (nextCharacterIndex < stylesheetBuffer.Length && stylesheetBuffer [nextCharacterIndex] != ';') {  				nextCharacterIndex++;  			}  			selectorStart = nextCharacterIndex + 1;  		}  		nextCharacterIndex++;  	}  	if (nextCharacterIndex < stylesheetBuffer.Length) {  		// Extract definition  		int definitionStart = nextCharacterIndex;  		while (nextCharacterIndex < stylesheetBuffer.Length && stylesheetBuffer [nextCharacterIndex] != '}') {  			nextCharacterIndex++;  		}  		// Define a style  		if (nextCharacterIndex - definitionStart > 2) {  			this.AddStyleDefinition (stylesheetBuffer.ToString (selectorStart' definitionStart - selectorStart)' stylesheetBuffer.ToString (definitionStart + 1' nextCharacterIndex - definitionStart - 2));  		}  		// Skip closing brace  		if (nextCharacterIndex < stylesheetBuffer.Length) {  			Debug.Assert (stylesheetBuffer [nextCharacterIndex] == '}');  			nextCharacterIndex++;  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,DiscoverStyleDefinitions,The following statement contains a magic number: if (nextCharacterIndex < stylesheetBuffer.Length) {  	// Extract definition  	int definitionStart = nextCharacterIndex;  	while (nextCharacterIndex < stylesheetBuffer.Length && stylesheetBuffer [nextCharacterIndex] != '}') {  		nextCharacterIndex++;  	}  	// Define a style  	if (nextCharacterIndex - definitionStart > 2) {  		this.AddStyleDefinition (stylesheetBuffer.ToString (selectorStart' definitionStart - selectorStart)' stylesheetBuffer.ToString (definitionStart + 1' nextCharacterIndex - definitionStart - 2));  	}  	// Skip closing brace  	if (nextCharacterIndex < stylesheetBuffer.Length) {  		Debug.Assert (stylesheetBuffer [nextCharacterIndex] == '}');  		nextCharacterIndex++;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,DiscoverStyleDefinitions,The following statement contains a magic number: if (nextCharacterIndex < stylesheetBuffer.Length) {  	// Extract definition  	int definitionStart = nextCharacterIndex;  	while (nextCharacterIndex < stylesheetBuffer.Length && stylesheetBuffer [nextCharacterIndex] != '}') {  		nextCharacterIndex++;  	}  	// Define a style  	if (nextCharacterIndex - definitionStart > 2) {  		this.AddStyleDefinition (stylesheetBuffer.ToString (selectorStart' definitionStart - selectorStart)' stylesheetBuffer.ToString (definitionStart + 1' nextCharacterIndex - definitionStart - 2));  	}  	// Skip closing brace  	if (nextCharacterIndex < stylesheetBuffer.Length) {  		Debug.Assert (stylesheetBuffer [nextCharacterIndex] == '}');  		nextCharacterIndex++;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,DiscoverStyleDefinitions,The following statement contains a magic number: if (nextCharacterIndex - definitionStart > 2) {  	this.AddStyleDefinition (stylesheetBuffer.ToString (selectorStart' definitionStart - selectorStart)' stylesheetBuffer.ToString (definitionStart + 1' nextCharacterIndex - definitionStart - 2));  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,DiscoverStyleDefinitions,The following statement contains a magic number: if (nextCharacterIndex - definitionStart > 2) {  	this.AddStyleDefinition (stylesheetBuffer.ToString (selectorStart' definitionStart - selectorStart)' stylesheetBuffer.ToString (definitionStart + 1' nextCharacterIndex - definitionStart - 2));  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,DiscoverStyleDefinitions,The following statement contains a magic number: this.AddStyleDefinition (stylesheetBuffer.ToString (selectorStart' definitionStart - selectorStart)' stylesheetBuffer.ToString (definitionStart + 1' nextCharacterIndex - definitionStart - 2));  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,CssStylesheet,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlCssParser.cs,RemoveComments,The following statement contains a magic number: return text.Substring (0' commentStart) + " " + RemoveComments (text.Substring (commentEnd + 2));  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,ConvertXamlToHtml,The following statement contains a magic number: htmlStringBuilder = new StringBuilder (100);  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,ParseXamlColor,The following statement contains a magic number: if (color.StartsWith ("#")) {  	// Remove transparancy value  	color = "#" + color.Substring (3);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,ParseXamlColor,The following statement contains a magic number: color = "#" + color.Substring (3);  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,ParseXamlThickness,The following statement contains a magic number: switch (values.Length) {  case 1:  	cssThickness = thickness;  	break;  case 2:  	cssThickness = values [1] + " " + values [0];  	break;  case 4:  	cssThickness = values [1] + " " + values [2] + " " + values [3] + " " + values [0];  	break;  default:  	cssThickness = values [0];  	break;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,ParseXamlThickness,The following statement contains a magic number: switch (values.Length) {  case 1:  	cssThickness = thickness;  	break;  case 2:  	cssThickness = values [1] + " " + values [0];  	break;  case 4:  	cssThickness = values [1] + " " + values [2] + " " + values [3] + " " + values [0];  	break;  default:  	cssThickness = values [0];  	break;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,ParseXamlThickness,The following statement contains a magic number: switch (values.Length) {  case 1:  	cssThickness = thickness;  	break;  case 2:  	cssThickness = values [1] + " " + values [0];  	break;  case 4:  	cssThickness = values [1] + " " + values [2] + " " + values [3] + " " + values [0];  	break;  default:  	cssThickness = values [0];  	break;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,ParseXamlThickness,The following statement contains a magic number: switch (values.Length) {  case 1:  	cssThickness = thickness;  	break;  case 2:  	cssThickness = values [1] + " " + values [0];  	break;  case 4:  	cssThickness = values [1] + " " + values [2] + " " + values [3] + " " + values [0];  	break;  default:  	cssThickness = values [0];  	break;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,ParseXamlThickness,The following statement contains a magic number: cssThickness = values [1] + " " + values [2] + " " + values [3] + " " + values [0];  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,ParseXamlThickness,The following statement contains a magic number: cssThickness = values [1] + " " + values [2] + " " + values [3] + " " + values [0];  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,HtmlLexicalAnalyzer,The following statement contains a magic number: _nextToken = new StringBuilder (100);  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextCharacter,The following statement contains a magic number: if (_nextCharacter == '&') {  	if (_lookAheadCharacter == '#') {  		// numeric entity - parse digits - &#DDDDD;  		int entityCode;  		entityCode = 0;  		this.ReadLookAheadCharacter ();  		// largest numeric entity is 7 characters  		for (int i = 0; i < 7 && Char.IsDigit (_lookAheadCharacter); i++) {  			entityCode = 10 * entityCode + (_lookAheadCharacterCode - (int)'0');  			this.ReadLookAheadCharacter ();  		}  		if (_lookAheadCharacter == ';') {  			// correct format - advance  			this.ReadLookAheadCharacter ();  			_nextCharacterCode = entityCode;  			// if this is out of range it will set the character to '?'  			_nextCharacter = (char)_nextCharacterCode;  			// as far as we are concerned' this is an entity  			_isNextCharacterEntity = true;  		} else {  			// not an entity' set next character to the current lookahread character  			// we would have eaten up some digits  			_nextCharacter = _lookAheadCharacter;  			_nextCharacterCode = _lookAheadCharacterCode;  			this.ReadLookAheadCharacter ();  			_isNextCharacterEntity = false;  		}  	} else if (Char.IsLetter (_lookAheadCharacter)) {  		// entity is written as a string  		string entity = "";  		// maximum length of string entities is 10 characters  		for (int i = 0; i < 10 && (Char.IsLetter (_lookAheadCharacter) || Char.IsDigit (_lookAheadCharacter)); i++) {  			entity += _lookAheadCharacter;  			this.ReadLookAheadCharacter ();  		}  		if (_lookAheadCharacter == ';') {  			// advance  			this.ReadLookAheadCharacter ();  			if (HtmlSchema.IsEntity (entity)) {  				_nextCharacter = HtmlSchema.EntityCharacterValue (entity);  				_nextCharacterCode = (int)_nextCharacter;  				_isNextCharacterEntity = true;  			} else {  				// just skip the whole thing - invalid entity  				// move on to the next character  				_nextCharacter = _lookAheadCharacter;  				_nextCharacterCode = _lookAheadCharacterCode;  				this.ReadLookAheadCharacter ();  				// not an entity  				_isNextCharacterEntity = false;  			}  		} else {  			// skip whatever we read after the ampersand  			// set next character and move on  			_nextCharacter = _lookAheadCharacter;  			this.ReadLookAheadCharacter ();  			_isNextCharacterEntity = false;  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextCharacter,The following statement contains a magic number: if (_nextCharacter == '&') {  	if (_lookAheadCharacter == '#') {  		// numeric entity - parse digits - &#DDDDD;  		int entityCode;  		entityCode = 0;  		this.ReadLookAheadCharacter ();  		// largest numeric entity is 7 characters  		for (int i = 0; i < 7 && Char.IsDigit (_lookAheadCharacter); i++) {  			entityCode = 10 * entityCode + (_lookAheadCharacterCode - (int)'0');  			this.ReadLookAheadCharacter ();  		}  		if (_lookAheadCharacter == ';') {  			// correct format - advance  			this.ReadLookAheadCharacter ();  			_nextCharacterCode = entityCode;  			// if this is out of range it will set the character to '?'  			_nextCharacter = (char)_nextCharacterCode;  			// as far as we are concerned' this is an entity  			_isNextCharacterEntity = true;  		} else {  			// not an entity' set next character to the current lookahread character  			// we would have eaten up some digits  			_nextCharacter = _lookAheadCharacter;  			_nextCharacterCode = _lookAheadCharacterCode;  			this.ReadLookAheadCharacter ();  			_isNextCharacterEntity = false;  		}  	} else if (Char.IsLetter (_lookAheadCharacter)) {  		// entity is written as a string  		string entity = "";  		// maximum length of string entities is 10 characters  		for (int i = 0; i < 10 && (Char.IsLetter (_lookAheadCharacter) || Char.IsDigit (_lookAheadCharacter)); i++) {  			entity += _lookAheadCharacter;  			this.ReadLookAheadCharacter ();  		}  		if (_lookAheadCharacter == ';') {  			// advance  			this.ReadLookAheadCharacter ();  			if (HtmlSchema.IsEntity (entity)) {  				_nextCharacter = HtmlSchema.EntityCharacterValue (entity);  				_nextCharacterCode = (int)_nextCharacter;  				_isNextCharacterEntity = true;  			} else {  				// just skip the whole thing - invalid entity  				// move on to the next character  				_nextCharacter = _lookAheadCharacter;  				_nextCharacterCode = _lookAheadCharacterCode;  				this.ReadLookAheadCharacter ();  				// not an entity  				_isNextCharacterEntity = false;  			}  		} else {  			// skip whatever we read after the ampersand  			// set next character and move on  			_nextCharacter = _lookAheadCharacter;  			this.ReadLookAheadCharacter ();  			_isNextCharacterEntity = false;  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextCharacter,The following statement contains a magic number: if (_nextCharacter == '&') {  	if (_lookAheadCharacter == '#') {  		// numeric entity - parse digits - &#DDDDD;  		int entityCode;  		entityCode = 0;  		this.ReadLookAheadCharacter ();  		// largest numeric entity is 7 characters  		for (int i = 0; i < 7 && Char.IsDigit (_lookAheadCharacter); i++) {  			entityCode = 10 * entityCode + (_lookAheadCharacterCode - (int)'0');  			this.ReadLookAheadCharacter ();  		}  		if (_lookAheadCharacter == ';') {  			// correct format - advance  			this.ReadLookAheadCharacter ();  			_nextCharacterCode = entityCode;  			// if this is out of range it will set the character to '?'  			_nextCharacter = (char)_nextCharacterCode;  			// as far as we are concerned' this is an entity  			_isNextCharacterEntity = true;  		} else {  			// not an entity' set next character to the current lookahread character  			// we would have eaten up some digits  			_nextCharacter = _lookAheadCharacter;  			_nextCharacterCode = _lookAheadCharacterCode;  			this.ReadLookAheadCharacter ();  			_isNextCharacterEntity = false;  		}  	} else if (Char.IsLetter (_lookAheadCharacter)) {  		// entity is written as a string  		string entity = "";  		// maximum length of string entities is 10 characters  		for (int i = 0; i < 10 && (Char.IsLetter (_lookAheadCharacter) || Char.IsDigit (_lookAheadCharacter)); i++) {  			entity += _lookAheadCharacter;  			this.ReadLookAheadCharacter ();  		}  		if (_lookAheadCharacter == ';') {  			// advance  			this.ReadLookAheadCharacter ();  			if (HtmlSchema.IsEntity (entity)) {  				_nextCharacter = HtmlSchema.EntityCharacterValue (entity);  				_nextCharacterCode = (int)_nextCharacter;  				_isNextCharacterEntity = true;  			} else {  				// just skip the whole thing - invalid entity  				// move on to the next character  				_nextCharacter = _lookAheadCharacter;  				_nextCharacterCode = _lookAheadCharacterCode;  				this.ReadLookAheadCharacter ();  				// not an entity  				_isNextCharacterEntity = false;  			}  		} else {  			// skip whatever we read after the ampersand  			// set next character and move on  			_nextCharacter = _lookAheadCharacter;  			this.ReadLookAheadCharacter ();  			_isNextCharacterEntity = false;  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextCharacter,The following statement contains a magic number: if (_lookAheadCharacter == '#') {  	// numeric entity - parse digits - &#DDDDD;  	int entityCode;  	entityCode = 0;  	this.ReadLookAheadCharacter ();  	// largest numeric entity is 7 characters  	for (int i = 0; i < 7 && Char.IsDigit (_lookAheadCharacter); i++) {  		entityCode = 10 * entityCode + (_lookAheadCharacterCode - (int)'0');  		this.ReadLookAheadCharacter ();  	}  	if (_lookAheadCharacter == ';') {  		// correct format - advance  		this.ReadLookAheadCharacter ();  		_nextCharacterCode = entityCode;  		// if this is out of range it will set the character to '?'  		_nextCharacter = (char)_nextCharacterCode;  		// as far as we are concerned' this is an entity  		_isNextCharacterEntity = true;  	} else {  		// not an entity' set next character to the current lookahread character  		// we would have eaten up some digits  		_nextCharacter = _lookAheadCharacter;  		_nextCharacterCode = _lookAheadCharacterCode;  		this.ReadLookAheadCharacter ();  		_isNextCharacterEntity = false;  	}  } else if (Char.IsLetter (_lookAheadCharacter)) {  	// entity is written as a string  	string entity = "";  	// maximum length of string entities is 10 characters  	for (int i = 0; i < 10 && (Char.IsLetter (_lookAheadCharacter) || Char.IsDigit (_lookAheadCharacter)); i++) {  		entity += _lookAheadCharacter;  		this.ReadLookAheadCharacter ();  	}  	if (_lookAheadCharacter == ';') {  		// advance  		this.ReadLookAheadCharacter ();  		if (HtmlSchema.IsEntity (entity)) {  			_nextCharacter = HtmlSchema.EntityCharacterValue (entity);  			_nextCharacterCode = (int)_nextCharacter;  			_isNextCharacterEntity = true;  		} else {  			// just skip the whole thing - invalid entity  			// move on to the next character  			_nextCharacter = _lookAheadCharacter;  			_nextCharacterCode = _lookAheadCharacterCode;  			this.ReadLookAheadCharacter ();  			// not an entity  			_isNextCharacterEntity = false;  		}  	} else {  		// skip whatever we read after the ampersand  		// set next character and move on  		_nextCharacter = _lookAheadCharacter;  		this.ReadLookAheadCharacter ();  		_isNextCharacterEntity = false;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextCharacter,The following statement contains a magic number: if (_lookAheadCharacter == '#') {  	// numeric entity - parse digits - &#DDDDD;  	int entityCode;  	entityCode = 0;  	this.ReadLookAheadCharacter ();  	// largest numeric entity is 7 characters  	for (int i = 0; i < 7 && Char.IsDigit (_lookAheadCharacter); i++) {  		entityCode = 10 * entityCode + (_lookAheadCharacterCode - (int)'0');  		this.ReadLookAheadCharacter ();  	}  	if (_lookAheadCharacter == ';') {  		// correct format - advance  		this.ReadLookAheadCharacter ();  		_nextCharacterCode = entityCode;  		// if this is out of range it will set the character to '?'  		_nextCharacter = (char)_nextCharacterCode;  		// as far as we are concerned' this is an entity  		_isNextCharacterEntity = true;  	} else {  		// not an entity' set next character to the current lookahread character  		// we would have eaten up some digits  		_nextCharacter = _lookAheadCharacter;  		_nextCharacterCode = _lookAheadCharacterCode;  		this.ReadLookAheadCharacter ();  		_isNextCharacterEntity = false;  	}  } else if (Char.IsLetter (_lookAheadCharacter)) {  	// entity is written as a string  	string entity = "";  	// maximum length of string entities is 10 characters  	for (int i = 0; i < 10 && (Char.IsLetter (_lookAheadCharacter) || Char.IsDigit (_lookAheadCharacter)); i++) {  		entity += _lookAheadCharacter;  		this.ReadLookAheadCharacter ();  	}  	if (_lookAheadCharacter == ';') {  		// advance  		this.ReadLookAheadCharacter ();  		if (HtmlSchema.IsEntity (entity)) {  			_nextCharacter = HtmlSchema.EntityCharacterValue (entity);  			_nextCharacterCode = (int)_nextCharacter;  			_isNextCharacterEntity = true;  		} else {  			// just skip the whole thing - invalid entity  			// move on to the next character  			_nextCharacter = _lookAheadCharacter;  			_nextCharacterCode = _lookAheadCharacterCode;  			this.ReadLookAheadCharacter ();  			// not an entity  			_isNextCharacterEntity = false;  		}  	} else {  		// skip whatever we read after the ampersand  		// set next character and move on  		_nextCharacter = _lookAheadCharacter;  		this.ReadLookAheadCharacter ();  		_isNextCharacterEntity = false;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextCharacter,The following statement contains a magic number: if (_lookAheadCharacter == '#') {  	// numeric entity - parse digits - &#DDDDD;  	int entityCode;  	entityCode = 0;  	this.ReadLookAheadCharacter ();  	// largest numeric entity is 7 characters  	for (int i = 0; i < 7 && Char.IsDigit (_lookAheadCharacter); i++) {  		entityCode = 10 * entityCode + (_lookAheadCharacterCode - (int)'0');  		this.ReadLookAheadCharacter ();  	}  	if (_lookAheadCharacter == ';') {  		// correct format - advance  		this.ReadLookAheadCharacter ();  		_nextCharacterCode = entityCode;  		// if this is out of range it will set the character to '?'  		_nextCharacter = (char)_nextCharacterCode;  		// as far as we are concerned' this is an entity  		_isNextCharacterEntity = true;  	} else {  		// not an entity' set next character to the current lookahread character  		// we would have eaten up some digits  		_nextCharacter = _lookAheadCharacter;  		_nextCharacterCode = _lookAheadCharacterCode;  		this.ReadLookAheadCharacter ();  		_isNextCharacterEntity = false;  	}  } else if (Char.IsLetter (_lookAheadCharacter)) {  	// entity is written as a string  	string entity = "";  	// maximum length of string entities is 10 characters  	for (int i = 0; i < 10 && (Char.IsLetter (_lookAheadCharacter) || Char.IsDigit (_lookAheadCharacter)); i++) {  		entity += _lookAheadCharacter;  		this.ReadLookAheadCharacter ();  	}  	if (_lookAheadCharacter == ';') {  		// advance  		this.ReadLookAheadCharacter ();  		if (HtmlSchema.IsEntity (entity)) {  			_nextCharacter = HtmlSchema.EntityCharacterValue (entity);  			_nextCharacterCode = (int)_nextCharacter;  			_isNextCharacterEntity = true;  		} else {  			// just skip the whole thing - invalid entity  			// move on to the next character  			_nextCharacter = _lookAheadCharacter;  			_nextCharacterCode = _lookAheadCharacterCode;  			this.ReadLookAheadCharacter ();  			// not an entity  			_isNextCharacterEntity = false;  		}  	} else {  		// skip whatever we read after the ampersand  		// set next character and move on  		_nextCharacter = _lookAheadCharacter;  		this.ReadLookAheadCharacter ();  		_isNextCharacterEntity = false;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextCharacter,The following statement contains a magic number: for (int i = 0; i < 7 && Char.IsDigit (_lookAheadCharacter); i++) {  	entityCode = 10 * entityCode + (_lookAheadCharacterCode - (int)'0');  	this.ReadLookAheadCharacter ();  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextCharacter,The following statement contains a magic number: for (int i = 0; i < 7 && Char.IsDigit (_lookAheadCharacter); i++) {  	entityCode = 10 * entityCode + (_lookAheadCharacterCode - (int)'0');  	this.ReadLookAheadCharacter ();  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextCharacter,The following statement contains a magic number: entityCode = 10 * entityCode + (_lookAheadCharacterCode - (int)'0');  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextCharacter,The following statement contains a magic number: if (Char.IsLetter (_lookAheadCharacter)) {  	// entity is written as a string  	string entity = "";  	// maximum length of string entities is 10 characters  	for (int i = 0; i < 10 && (Char.IsLetter (_lookAheadCharacter) || Char.IsDigit (_lookAheadCharacter)); i++) {  		entity += _lookAheadCharacter;  		this.ReadLookAheadCharacter ();  	}  	if (_lookAheadCharacter == ';') {  		// advance  		this.ReadLookAheadCharacter ();  		if (HtmlSchema.IsEntity (entity)) {  			_nextCharacter = HtmlSchema.EntityCharacterValue (entity);  			_nextCharacterCode = (int)_nextCharacter;  			_isNextCharacterEntity = true;  		} else {  			// just skip the whole thing - invalid entity  			// move on to the next character  			_nextCharacter = _lookAheadCharacter;  			_nextCharacterCode = _lookAheadCharacterCode;  			this.ReadLookAheadCharacter ();  			// not an entity  			_isNextCharacterEntity = false;  		}  	} else {  		// skip whatever we read after the ampersand  		// set next character and move on  		_nextCharacter = _lookAheadCharacter;  		this.ReadLookAheadCharacter ();  		_isNextCharacterEntity = false;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlLexicalAnalyzer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlLexicalAnalyzer.cs,GetNextCharacter,The following statement contains a magic number: for (int i = 0; i < 10 && (Char.IsLetter (_lookAheadCharacter) || Char.IsDigit (_lookAheadCharacter)); i++) {  	entity += _lookAheadCharacter;  	this.ReadLookAheadCharacter ();  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Aacute"] = (char)193;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["aacute"] = (char)225;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Acirc"] = (char)194;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["acirc"] = (char)226;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["acute"] = (char)180;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["AElig"] = (char)198;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["aelig"] = (char)230;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Agrave"] = (char)192;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["agrave"] = (char)224;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["alefsym"] = (char)8501;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Alpha"] = (char)913;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["alpha"] = (char)945;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["amp"] = (char)38;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["and"] = (char)8743;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ang"] = (char)8736;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Aring"] = (char)197;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["aring"] = (char)229;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["asymp"] = (char)8776;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Atilde"] = (char)195;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["atilde"] = (char)227;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Auml"] = (char)196;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["auml"] = (char)228;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["bdquo"] = (char)8222;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Beta"] = (char)914;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["beta"] = (char)946;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["brvbar"] = (char)166;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["bull"] = (char)8226;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["cap"] = (char)8745;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Ccedil"] = (char)199;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ccedil"] = (char)231;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["cent"] = (char)162;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Chi"] = (char)935;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["chi"] = (char)967;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["circ"] = (char)710;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["clubs"] = (char)9827;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["cong"] = (char)8773;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["copy"] = (char)169;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["crarr"] = (char)8629;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["cup"] = (char)8746;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["curren"] = (char)164;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["dagger"] = (char)8224;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Dagger"] = (char)8225;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["darr"] = (char)8595;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["dArr"] = (char)8659;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["deg"] = (char)176;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Delta"] = (char)916;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["delta"] = (char)948;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["diams"] = (char)9830;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["divide"] = (char)247;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Eacute"] = (char)201;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["eacute"] = (char)233;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Ecirc"] = (char)202;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ecirc"] = (char)234;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Egrave"] = (char)200;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["egrave"] = (char)232;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["empty"] = (char)8709;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["emsp"] = (char)8195;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ensp"] = (char)8194;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Epsilon"] = (char)917;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["epsilon"] = (char)949;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["equiv"] = (char)8801;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Eta"] = (char)919;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["eta"] = (char)951;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ETH"] = (char)208;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["eth"] = (char)240;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Euml"] = (char)203;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["euml"] = (char)235;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["euro"] = (char)8364;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["exist"] = (char)8707;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["fnof"] = (char)402;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["forall"] = (char)8704;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["frac12"] = (char)189;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["frac14"] = (char)188;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["frac34"] = (char)190;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["frasl"] = (char)8260;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Gamma"] = (char)915;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["gamma"] = (char)947;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ge"] = (char)8805;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["gt"] = (char)62;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["harr"] = (char)8596;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["hArr"] = (char)8660;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["hearts"] = (char)9829;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["hellip"] = (char)8230;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Iacute"] = (char)205;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["iacute"] = (char)237;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Icirc"] = (char)206;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["icirc"] = (char)238;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["iexcl"] = (char)161;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Igrave"] = (char)204;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["igrave"] = (char)236;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["image"] = (char)8465;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["infin"] = (char)8734;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["int"] = (char)8747;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Iota"] = (char)921;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["iota"] = (char)953;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["iquest"] = (char)191;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["isin"] = (char)8712;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Iuml"] = (char)207;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["iuml"] = (char)239;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Kappa"] = (char)922;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["kappa"] = (char)954;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Lambda"] = (char)923;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["lambda"] = (char)955;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["lang"] = (char)9001;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["laquo"] = (char)171;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["larr"] = (char)8592;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["lArr"] = (char)8656;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["lceil"] = (char)8968;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ldquo"] = (char)8220;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["le"] = (char)8804;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["lfloor"] = (char)8970;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["lowast"] = (char)8727;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["loz"] = (char)9674;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["lrm"] = (char)8206;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["lsaquo"] = (char)8249;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["lsquo"] = (char)8216;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["lt"] = (char)60;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["macr"] = (char)175;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["mdash"] = (char)8212;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["micro"] = (char)181;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["middot"] = (char)183;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["minus"] = (char)8722;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Mu"] = (char)924;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["mu"] = (char)956;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["nabla"] = (char)8711;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["nbsp"] = (char)160;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ndash"] = (char)8211;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ne"] = (char)8800;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ni"] = (char)8715;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["not"] = (char)172;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["notin"] = (char)8713;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["nsub"] = (char)8836;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Ntilde"] = (char)209;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ntilde"] = (char)241;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Nu"] = (char)925;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["nu"] = (char)957;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Oacute"] = (char)211;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ocirc"] = (char)244;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["OElig"] = (char)338;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["oelig"] = (char)339;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Ograve"] = (char)210;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ograve"] = (char)242;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["oline"] = (char)8254;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Omega"] = (char)937;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["omega"] = (char)969;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Omicron"] = (char)927;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["omicron"] = (char)959;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["oplus"] = (char)8853;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["or"] = (char)8744;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ordf"] = (char)170;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ordm"] = (char)186;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Oslash"] = (char)216;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["oslash"] = (char)248;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Otilde"] = (char)213;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["otilde"] = (char)245;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["otimes"] = (char)8855;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Ouml"] = (char)214;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ouml"] = (char)246;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["para"] = (char)182;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["part"] = (char)8706;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["permil"] = (char)8240;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["perp"] = (char)8869;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Phi"] = (char)934;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["phi"] = (char)966;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["pi"] = (char)960;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["piv"] = (char)982;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["plusmn"] = (char)177;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["pound"] = (char)163;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["prime"] = (char)8242;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Prime"] = (char)8243;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["prod"] = (char)8719;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["prop"] = (char)8733;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Psi"] = (char)936;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["psi"] = (char)968;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["quot"] = (char)34;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["radic"] = (char)8730;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["rang"] = (char)9002;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["raquo"] = (char)187;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["rarr"] = (char)8594;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["rArr"] = (char)8658;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["rceil"] = (char)8969;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["rdquo"] = (char)8221;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["real"] = (char)8476;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["reg"] = (char)174;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["rfloor"] = (char)8971;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Rho"] = (char)929;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["rho"] = (char)961;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["rlm"] = (char)8207;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["rsaquo"] = (char)8250;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["rsquo"] = (char)8217;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sbquo"] = (char)8218;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Scaron"] = (char)352;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["scaron"] = (char)353;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sdot"] = (char)8901;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sect"] = (char)167;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["shy"] = (char)173;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Sigma"] = (char)931;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sigma"] = (char)963;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sigmaf"] = (char)962;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sim"] = (char)8764;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["spades"] = (char)9824;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sub"] = (char)8834;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sube"] = (char)8838;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sum"] = (char)8721;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sup"] = (char)8835;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sup1"] = (char)185;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sup2"] = (char)178;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["sup3"] = (char)179;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["supe"] = (char)8839;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["szlig"] = (char)223;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Tau"] = (char)932;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["tau"] = (char)964;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["there4"] = (char)8756;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Theta"] = (char)920;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["theta"] = (char)952;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["thetasym"] = (char)977;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["thinsp"] = (char)8201;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["THORN"] = (char)222;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["thorn"] = (char)254;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["tilde"] = (char)732;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["times"] = (char)215;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["trade"] = (char)8482;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Uacute"] = (char)218;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["uacute"] = (char)250;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["uarr"] = (char)8593;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["uArr"] = (char)8657;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Ucirc"] = (char)219;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ucirc"] = (char)251;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Ugrave"] = (char)217;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["ugrave"] = (char)249;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["uml"] = (char)168;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["upsih"] = (char)978;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Upsilon"] = (char)933;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["upsilon"] = (char)965;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Uuml"] = (char)220;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["uuml"] = (char)252;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["weierp"] = (char)8472;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Xi"] = (char)926;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["xi"] = (char)958;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Yacute"] = (char)221;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["yacute"] = (char)253;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["yen"] = (char)165;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Yuml"] = (char)376;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["yuml"] = (char)255;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["Zeta"] = (char)918;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["zeta"] = (char)950;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["zwj"] = (char)8205;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,InitializeHtmlCharacterEntities,The following statement contains a magic number: _htmlCharacterEntities ["zwnj"] = (char)8204;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,UnQuote,The following statement contains a magic number: Contract.Requires (0 <= (value.Length - 2));  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,UnQuote,The following statement contains a magic number: if (value.StartsWith ("\"") && value.EndsWith ("\"") || value.StartsWith ("'") && value.EndsWith ("'")) {  	value = value.Substring (1' value.Length - 2).Trim ();  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,UnQuote,The following statement contains a magic number: value = value.Substring (1' value.Length - 2).Trim ();  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddTextRun,The following statement contains a magic number: textData = textData.Replace ((char)160' ' ');  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddHyperlink,The following statement contains a magic number: if (href == null) {  	// When href attribute is missing - ignore the hyperlink  	AddSpanOrRun (xamlParentElement' htmlElement' inheritedProperties' stylesheet' sourceContext);  } else {  	// Create currentProperties as a compilation of local and inheritedProperties' set localProperties  	Hashtable localProperties;  	Hashtable currentProperties = GetElementProperties (htmlElement' inheritedProperties' out localProperties' stylesheet' sourceContext);  	// Create a XAML element corresponding to this html element  	XmlElement xamlElement = xamlParentElement.OwnerDocument.CreateElement (/*prefix:*/null' /*localName:*/HtmlToXamlConverter.Xaml_Hyperlink' _xamlNamespace);  	ApplyLocalProperties (xamlElement' localProperties' /*isBlock:*/false);  	string[] hrefParts = href.Split (new char[] {  		'#'  	});  	if (hrefParts.Length > 0 && hrefParts [0].Trim ().Length > 0) {  		xamlElement.SetAttribute (HtmlToXamlConverter.Xaml_Hyperlink_NavigateUri' hrefParts [0].Trim ());  	}  	if (hrefParts.Length == 2 && hrefParts [1].Trim ().Length > 0) {  		xamlElement.SetAttribute (HtmlToXamlConverter.Xaml_Hyperlink_TargetName' hrefParts [1].Trim ());  	}  	// Recurse into element subtree  	for (XmlNode htmlChildNode = htmlElement.FirstChild; htmlChildNode != null; htmlChildNode = htmlChildNode.NextSibling) {  		AddInline (xamlElement' htmlChildNode' currentProperties' stylesheet' sourceContext);  	}  	// Add the new element to the parent.  	xamlParentElement.AppendChild (xamlElement);  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,AddHyperlink,The following statement contains a magic number: if (hrefParts.Length == 2 && hrefParts [1].Trim ().Length > 0) {  	xamlElement.SetAttribute (HtmlToXamlConverter.Xaml_Hyperlink_TargetName' hrefParts [1].Trim ());  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,VerifyColumnStartsAscendingOrder,The following statement contains a magic number: columnStart = -0.01;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: switch (elementName) {  // Character formatting  case "i":  case "italic":  case "em":  	localProperties ["font-style"] = "italic";  	break;  case "b":  case "bold":  case "strong":  case "dfn":  	localProperties ["font-weight"] = "bold";  	break;  case "u":  case "underline":  	localProperties ["text-decoration-underline"] = "true";  	break;  case "font":  	string attributeValue = GetAttribute (htmlElement' "face");  	if (attributeValue != null) {  		localProperties ["font-family"] = attributeValue;  	}  	attributeValue = GetAttribute (htmlElement' "size");  	if (attributeValue != null) {  		double fontSize = double.Parse (attributeValue) * (12.0 / 3.0);  		if (fontSize < 1.0) {  			fontSize = 1.0;  		} else if (fontSize > 1000.0) {  			fontSize = 1000.0;  		}  		localProperties ["font-size"] = fontSize.ToString ();  	}  	attributeValue = GetAttribute (htmlElement' "color");  	if (attributeValue != null) {  		localProperties ["color"] = attributeValue;  	}  	break;  case "samp":  	localProperties ["font-family"] = "Courier New";  	// code sample  	localProperties ["font-size"] = Xaml_FontSize_XXSmall;  	localProperties ["text-align"] = "Left";  	break;  case "sub":  	break;  case "sup":  	break;  // Hyperlinks  case "a":  	// href' hreflang' urn' methods' rel' rev' title  	//  Set default hyperlink properties  	break;  case "acronym":  	break;  // Paragraph formatting:  case "p":  	//  Set default paragraph properties  	break;  case "div":  	//  Set default div properties  	break;  case "pre":  	localProperties ["font-family"] = "Courier New";  	// renders text in a fixed-width font  	localProperties ["font-size"] = Xaml_FontSize_XXSmall;  	localProperties ["text-align"] = "Left";  	break;  case "blockquote":  	localProperties ["margin-left"] = "16";  	break;  case "h1":  	localProperties ["font-size"] = Xaml_FontSize_XXLarge;  	break;  case "h2":  	localProperties ["font-size"] = Xaml_FontSize_XLarge;  	break;  case "h3":  	localProperties ["font-size"] = Xaml_FontSize_Large;  	break;  case "h4":  	localProperties ["font-size"] = Xaml_FontSize_Medium;  	break;  case "h5":  	localProperties ["font-size"] = Xaml_FontSize_Small;  	break;  case "h6":  	localProperties ["font-size"] = Xaml_FontSize_XSmall;  	break;  // List properties  case "ul":  	localProperties ["list-style-type"] = "disc";  	break;  case "ol":  	localProperties ["list-style-type"] = "decimal";  	break;  case "table":  case "body":  case "html":  	break;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: switch (elementName) {  // Character formatting  case "i":  case "italic":  case "em":  	localProperties ["font-style"] = "italic";  	break;  case "b":  case "bold":  case "strong":  case "dfn":  	localProperties ["font-weight"] = "bold";  	break;  case "u":  case "underline":  	localProperties ["text-decoration-underline"] = "true";  	break;  case "font":  	string attributeValue = GetAttribute (htmlElement' "face");  	if (attributeValue != null) {  		localProperties ["font-family"] = attributeValue;  	}  	attributeValue = GetAttribute (htmlElement' "size");  	if (attributeValue != null) {  		double fontSize = double.Parse (attributeValue) * (12.0 / 3.0);  		if (fontSize < 1.0) {  			fontSize = 1.0;  		} else if (fontSize > 1000.0) {  			fontSize = 1000.0;  		}  		localProperties ["font-size"] = fontSize.ToString ();  	}  	attributeValue = GetAttribute (htmlElement' "color");  	if (attributeValue != null) {  		localProperties ["color"] = attributeValue;  	}  	break;  case "samp":  	localProperties ["font-family"] = "Courier New";  	// code sample  	localProperties ["font-size"] = Xaml_FontSize_XXSmall;  	localProperties ["text-align"] = "Left";  	break;  case "sub":  	break;  case "sup":  	break;  // Hyperlinks  case "a":  	// href' hreflang' urn' methods' rel' rev' title  	//  Set default hyperlink properties  	break;  case "acronym":  	break;  // Paragraph formatting:  case "p":  	//  Set default paragraph properties  	break;  case "div":  	//  Set default div properties  	break;  case "pre":  	localProperties ["font-family"] = "Courier New";  	// renders text in a fixed-width font  	localProperties ["font-size"] = Xaml_FontSize_XXSmall;  	localProperties ["text-align"] = "Left";  	break;  case "blockquote":  	localProperties ["margin-left"] = "16";  	break;  case "h1":  	localProperties ["font-size"] = Xaml_FontSize_XXLarge;  	break;  case "h2":  	localProperties ["font-size"] = Xaml_FontSize_XLarge;  	break;  case "h3":  	localProperties ["font-size"] = Xaml_FontSize_Large;  	break;  case "h4":  	localProperties ["font-size"] = Xaml_FontSize_Medium;  	break;  case "h5":  	localProperties ["font-size"] = Xaml_FontSize_Small;  	break;  case "h6":  	localProperties ["font-size"] = Xaml_FontSize_XSmall;  	break;  // List properties  case "ul":  	localProperties ["list-style-type"] = "disc";  	break;  case "ol":  	localProperties ["list-style-type"] = "decimal";  	break;  case "table":  case "body":  case "html":  	break;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: switch (elementName) {  // Character formatting  case "i":  case "italic":  case "em":  	localProperties ["font-style"] = "italic";  	break;  case "b":  case "bold":  case "strong":  case "dfn":  	localProperties ["font-weight"] = "bold";  	break;  case "u":  case "underline":  	localProperties ["text-decoration-underline"] = "true";  	break;  case "font":  	string attributeValue = GetAttribute (htmlElement' "face");  	if (attributeValue != null) {  		localProperties ["font-family"] = attributeValue;  	}  	attributeValue = GetAttribute (htmlElement' "size");  	if (attributeValue != null) {  		double fontSize = double.Parse (attributeValue) * (12.0 / 3.0);  		if (fontSize < 1.0) {  			fontSize = 1.0;  		} else if (fontSize > 1000.0) {  			fontSize = 1000.0;  		}  		localProperties ["font-size"] = fontSize.ToString ();  	}  	attributeValue = GetAttribute (htmlElement' "color");  	if (attributeValue != null) {  		localProperties ["color"] = attributeValue;  	}  	break;  case "samp":  	localProperties ["font-family"] = "Courier New";  	// code sample  	localProperties ["font-size"] = Xaml_FontSize_XXSmall;  	localProperties ["text-align"] = "Left";  	break;  case "sub":  	break;  case "sup":  	break;  // Hyperlinks  case "a":  	// href' hreflang' urn' methods' rel' rev' title  	//  Set default hyperlink properties  	break;  case "acronym":  	break;  // Paragraph formatting:  case "p":  	//  Set default paragraph properties  	break;  case "div":  	//  Set default div properties  	break;  case "pre":  	localProperties ["font-family"] = "Courier New";  	// renders text in a fixed-width font  	localProperties ["font-size"] = Xaml_FontSize_XXSmall;  	localProperties ["text-align"] = "Left";  	break;  case "blockquote":  	localProperties ["margin-left"] = "16";  	break;  case "h1":  	localProperties ["font-size"] = Xaml_FontSize_XXLarge;  	break;  case "h2":  	localProperties ["font-size"] = Xaml_FontSize_XLarge;  	break;  case "h3":  	localProperties ["font-size"] = Xaml_FontSize_Large;  	break;  case "h4":  	localProperties ["font-size"] = Xaml_FontSize_Medium;  	break;  case "h5":  	localProperties ["font-size"] = Xaml_FontSize_Small;  	break;  case "h6":  	localProperties ["font-size"] = Xaml_FontSize_XSmall;  	break;  // List properties  case "ul":  	localProperties ["list-style-type"] = "disc";  	break;  case "ol":  	localProperties ["list-style-type"] = "decimal";  	break;  case "table":  case "body":  case "html":  	break;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: switch (elementName) {  // Character formatting  case "i":  case "italic":  case "em":  	localProperties ["font-style"] = "italic";  	break;  case "b":  case "bold":  case "strong":  case "dfn":  	localProperties ["font-weight"] = "bold";  	break;  case "u":  case "underline":  	localProperties ["text-decoration-underline"] = "true";  	break;  case "font":  	string attributeValue = GetAttribute (htmlElement' "face");  	if (attributeValue != null) {  		localProperties ["font-family"] = attributeValue;  	}  	attributeValue = GetAttribute (htmlElement' "size");  	if (attributeValue != null) {  		double fontSize = double.Parse (attributeValue) * (12.0 / 3.0);  		if (fontSize < 1.0) {  			fontSize = 1.0;  		} else if (fontSize > 1000.0) {  			fontSize = 1000.0;  		}  		localProperties ["font-size"] = fontSize.ToString ();  	}  	attributeValue = GetAttribute (htmlElement' "color");  	if (attributeValue != null) {  		localProperties ["color"] = attributeValue;  	}  	break;  case "samp":  	localProperties ["font-family"] = "Courier New";  	// code sample  	localProperties ["font-size"] = Xaml_FontSize_XXSmall;  	localProperties ["text-align"] = "Left";  	break;  case "sub":  	break;  case "sup":  	break;  // Hyperlinks  case "a":  	// href' hreflang' urn' methods' rel' rev' title  	//  Set default hyperlink properties  	break;  case "acronym":  	break;  // Paragraph formatting:  case "p":  	//  Set default paragraph properties  	break;  case "div":  	//  Set default div properties  	break;  case "pre":  	localProperties ["font-family"] = "Courier New";  	// renders text in a fixed-width font  	localProperties ["font-size"] = Xaml_FontSize_XXSmall;  	localProperties ["text-align"] = "Left";  	break;  case "blockquote":  	localProperties ["margin-left"] = "16";  	break;  case "h1":  	localProperties ["font-size"] = Xaml_FontSize_XXLarge;  	break;  case "h2":  	localProperties ["font-size"] = Xaml_FontSize_XLarge;  	break;  case "h3":  	localProperties ["font-size"] = Xaml_FontSize_Large;  	break;  case "h4":  	localProperties ["font-size"] = Xaml_FontSize_Medium;  	break;  case "h5":  	localProperties ["font-size"] = Xaml_FontSize_Small;  	break;  case "h6":  	localProperties ["font-size"] = Xaml_FontSize_XSmall;  	break;  // List properties  case "ul":  	localProperties ["list-style-type"] = "disc";  	break;  case "ol":  	localProperties ["list-style-type"] = "decimal";  	break;  case "table":  case "body":  case "html":  	break;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: if (attributeValue != null) {  	double fontSize = double.Parse (attributeValue) * (12.0 / 3.0);  	if (fontSize < 1.0) {  		fontSize = 1.0;  	} else if (fontSize > 1000.0) {  		fontSize = 1000.0;  	}  	localProperties ["font-size"] = fontSize.ToString ();  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: if (attributeValue != null) {  	double fontSize = double.Parse (attributeValue) * (12.0 / 3.0);  	if (fontSize < 1.0) {  		fontSize = 1.0;  	} else if (fontSize > 1000.0) {  		fontSize = 1000.0;  	}  	localProperties ["font-size"] = fontSize.ToString ();  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: if (attributeValue != null) {  	double fontSize = double.Parse (attributeValue) * (12.0 / 3.0);  	if (fontSize < 1.0) {  		fontSize = 1.0;  	} else if (fontSize > 1000.0) {  		fontSize = 1000.0;  	}  	localProperties ["font-size"] = fontSize.ToString ();  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: if (attributeValue != null) {  	double fontSize = double.Parse (attributeValue) * (12.0 / 3.0);  	if (fontSize < 1.0) {  		fontSize = 1.0;  	} else if (fontSize > 1000.0) {  		fontSize = 1000.0;  	}  	localProperties ["font-size"] = fontSize.ToString ();  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: if (fontSize < 1.0) {  	fontSize = 1.0;  } else if (fontSize > 1000.0) {  	fontSize = 1000.0;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: if (fontSize < 1.0) {  	fontSize = 1.0;  } else if (fontSize > 1000.0) {  	fontSize = 1000.0;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: if (fontSize > 1000.0) {  	fontSize = 1000.0;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: if (fontSize > 1000.0) {  	fontSize = 1000.0;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following statement contains a magic number: fontSize = 1000.0;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetCssAttribute,The following statement contains a magic number: if (cssStyle != null) {  	string[] styleValues;  	attributeName = attributeName.ToLower ();  	// Check for width specification in style string  	styleValues = cssStyle.Split (';');  	for (int styleValueIndex = 0; styleValueIndex < styleValues.Length; styleValueIndex++) {  		string[] styleNameValue;  		styleNameValue = styleValues [styleValueIndex].Split (':');  		if (styleNameValue.Length == 2) {  			if (styleNameValue [0].Trim ().ToLower () == attributeName) {  				return styleNameValue [1].Trim ();  			}  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetCssAttribute,The following statement contains a magic number: for (int styleValueIndex = 0; styleValueIndex < styleValues.Length; styleValueIndex++) {  	string[] styleNameValue;  	styleNameValue = styleValues [styleValueIndex].Split (':');  	if (styleNameValue.Length == 2) {  		if (styleNameValue [0].Trim ().ToLower () == attributeName) {  			return styleNameValue [1].Trim ();  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetCssAttribute,The following statement contains a magic number: if (styleNameValue.Length == 2) {  	if (styleNameValue [0].Trim ().ToLower () == attributeName) {  		return styleNameValue [1].Trim ();  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: if (lengthAsString != null) {  	lengthAsString = lengthAsString.Trim ().ToLower ();  	// We try to convert currentColumnWidthAsString into a double. This will eliminate widths of type "50%"' etc.  	if (lengthAsString.EndsWith ("pt")) {  		lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  		if (Double.TryParse (lengthAsString' out length)) {  			length = (length * 96.0) / 72.0;  			// convert from points to pixels  		} else {  			length = Double.NaN;  		}  	} else if (lengthAsString.EndsWith ("px")) {  		lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  		if (!Double.TryParse (lengthAsString' out length)) {  			length = Double.NaN;  		}  	} else {  		if (!Double.TryParse (lengthAsString' out length))// Assuming pixels  		 {  			length = Double.NaN;  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: if (lengthAsString != null) {  	lengthAsString = lengthAsString.Trim ().ToLower ();  	// We try to convert currentColumnWidthAsString into a double. This will eliminate widths of type "50%"' etc.  	if (lengthAsString.EndsWith ("pt")) {  		lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  		if (Double.TryParse (lengthAsString' out length)) {  			length = (length * 96.0) / 72.0;  			// convert from points to pixels  		} else {  			length = Double.NaN;  		}  	} else if (lengthAsString.EndsWith ("px")) {  		lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  		if (!Double.TryParse (lengthAsString' out length)) {  			length = Double.NaN;  		}  	} else {  		if (!Double.TryParse (lengthAsString' out length))// Assuming pixels  		 {  			length = Double.NaN;  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: if (lengthAsString != null) {  	lengthAsString = lengthAsString.Trim ().ToLower ();  	// We try to convert currentColumnWidthAsString into a double. This will eliminate widths of type "50%"' etc.  	if (lengthAsString.EndsWith ("pt")) {  		lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  		if (Double.TryParse (lengthAsString' out length)) {  			length = (length * 96.0) / 72.0;  			// convert from points to pixels  		} else {  			length = Double.NaN;  		}  	} else if (lengthAsString.EndsWith ("px")) {  		lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  		if (!Double.TryParse (lengthAsString' out length)) {  			length = Double.NaN;  		}  	} else {  		if (!Double.TryParse (lengthAsString' out length))// Assuming pixels  		 {  			length = Double.NaN;  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: if (lengthAsString != null) {  	lengthAsString = lengthAsString.Trim ().ToLower ();  	// We try to convert currentColumnWidthAsString into a double. This will eliminate widths of type "50%"' etc.  	if (lengthAsString.EndsWith ("pt")) {  		lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  		if (Double.TryParse (lengthAsString' out length)) {  			length = (length * 96.0) / 72.0;  			// convert from points to pixels  		} else {  			length = Double.NaN;  		}  	} else if (lengthAsString.EndsWith ("px")) {  		lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  		if (!Double.TryParse (lengthAsString' out length)) {  			length = Double.NaN;  		}  	} else {  		if (!Double.TryParse (lengthAsString' out length))// Assuming pixels  		 {  			length = Double.NaN;  		}  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: if (lengthAsString.EndsWith ("pt")) {  	lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  	if (Double.TryParse (lengthAsString' out length)) {  		length = (length * 96.0) / 72.0;  		// convert from points to pixels  	} else {  		length = Double.NaN;  	}  } else if (lengthAsString.EndsWith ("px")) {  	lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  	if (!Double.TryParse (lengthAsString' out length)) {  		length = Double.NaN;  	}  } else {  	if (!Double.TryParse (lengthAsString' out length))// Assuming pixels  	 {  		length = Double.NaN;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: if (lengthAsString.EndsWith ("pt")) {  	lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  	if (Double.TryParse (lengthAsString' out length)) {  		length = (length * 96.0) / 72.0;  		// convert from points to pixels  	} else {  		length = Double.NaN;  	}  } else if (lengthAsString.EndsWith ("px")) {  	lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  	if (!Double.TryParse (lengthAsString' out length)) {  		length = Double.NaN;  	}  } else {  	if (!Double.TryParse (lengthAsString' out length))// Assuming pixels  	 {  		length = Double.NaN;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: if (lengthAsString.EndsWith ("pt")) {  	lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  	if (Double.TryParse (lengthAsString' out length)) {  		length = (length * 96.0) / 72.0;  		// convert from points to pixels  	} else {  		length = Double.NaN;  	}  } else if (lengthAsString.EndsWith ("px")) {  	lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  	if (!Double.TryParse (lengthAsString' out length)) {  		length = Double.NaN;  	}  } else {  	if (!Double.TryParse (lengthAsString' out length))// Assuming pixels  	 {  		length = Double.NaN;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: if (lengthAsString.EndsWith ("pt")) {  	lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  	if (Double.TryParse (lengthAsString' out length)) {  		length = (length * 96.0) / 72.0;  		// convert from points to pixels  	} else {  		length = Double.NaN;  	}  } else if (lengthAsString.EndsWith ("px")) {  	lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  	if (!Double.TryParse (lengthAsString' out length)) {  		length = Double.NaN;  	}  } else {  	if (!Double.TryParse (lengthAsString' out length))// Assuming pixels  	 {  		length = Double.NaN;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: if (Double.TryParse (lengthAsString' out length)) {  	length = (length * 96.0) / 72.0;  	// convert from points to pixels  } else {  	length = Double.NaN;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: if (Double.TryParse (lengthAsString' out length)) {  	length = (length * 96.0) / 72.0;  	// convert from points to pixels  } else {  	length = Double.NaN;  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: length = (length * 96.0) / 72.0;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: length = (length * 96.0) / 72.0;  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: if (lengthAsString.EndsWith ("px")) {  	lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  	if (!Double.TryParse (lengthAsString' out length)) {  		length = Double.NaN;  	}  } else {  	if (!Double.TryParse (lengthAsString' out length))// Assuming pixels  	 {  		length = Double.NaN;  	}  }  
Magic Number,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,TryGetLengthValue,The following statement contains a magic number: lengthAsString = lengthAsString.Substring (0' lengthAsString.Length - 2);  
Missing Default,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,WriteFormattingProperties,The following switch statement is missing a default case: switch (xamlReader.Name) {  // Character fomatting properties  // ------------------------------  case "Background":  	css = "background-color:" + ParseXamlColor (xamlReader.Value) + ";";  	break;  case "FontFamily":  	css = "font-family:" + xamlReader.Value + ";";  	break;  case "FontStyle":  	css = "font-style:" + xamlReader.Value.ToLower () + ";";  	break;  case "FontWeight":  	css = "font-weight:" + xamlReader.Value.ToLower () + ";";  	break;  case "FontStretch":  	break;  case "FontSize":  	css = "font-size:" + xamlReader.Value + ";";  	break;  case "Foreground":  	css = "color:" + ParseXamlColor (xamlReader.Value) + ";";  	break;  case "TextDecorations":  	css = "text-decoration:underline;";  	break;  case "TextEffects":  	break;  case "Emphasis":  	break;  case "StandardLigatures":  	break;  case "Variants":  	break;  case "Capitals":  	break;  case "Fraction":  	break;  // Paragraph formatting properties  // -------------------------------  case "Padding":  	css = "padding:" + ParseXamlThickness (xamlReader.Value) + ";";  	break;  case "Margin":  	css = "margin:" + ParseXamlThickness (xamlReader.Value) + ";";  	break;  case "BorderThickness":  	css = "border-width:" + ParseXamlThickness (xamlReader.Value) + ";";  	borderSet = true;  	break;  case "BorderBrush":  	css = "border-color:" + ParseXamlColor (xamlReader.Value) + ";";  	borderSet = true;  	break;  case "LineHeight":  	break;  case "TextIndent":  	css = "text-indent:" + xamlReader.Value + ";";  	break;  case "TextAlignment":  	css = "text-align:" + xamlReader.Value + ";";  	break;  case "IsKeptTogether":  	break;  case "IsKeptWithNext":  	break;  case "ColumnBreakBefore":  	break;  case "PageBreakBefore":  	break;  case "FlowDirection":  	break;  // Table attributes  // ----------------  case "Width":  	css = "width:" + xamlReader.Value + ";";  	break;  case "ColumnSpan":  	htmlWriter.WriteAttributeString ("COLSPAN"' xamlReader.Value);  	break;  case "RowSpan":  	htmlWriter.WriteAttributeString ("ROWSPAN"' xamlReader.Value);  	break;  }  
Missing Default,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlFromXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlFromXamlConverter.cs,WriteElementContent,The following switch statement is missing a default case: switch (xamlReader.NodeType) {  case XmlNodeType.Element:  	if (xamlReader.Name.Contains (".")) {  		AddComplexProperty (xamlReader' inlineStyle);  	} else {  		if (htmlWriter != null && !elementContentStarted && inlineStyle.Length > 0) {  			// Output STYLE attribute and clear inlineStyle buffer.  			htmlWriter.WriteAttributeString ("STYLE"' inlineStyle.ToString ());  			inlineStyle.Remove (0' inlineStyle.Length);  		}  		elementContentStarted = true;  		WriteElement (xamlReader' htmlWriter' inlineStyle);  	}  	Debug.Assert (xamlReader.NodeType == XmlNodeType.EndElement || xamlReader.NodeType == XmlNodeType.Element && xamlReader.IsEmptyElement);  	break;  case XmlNodeType.Comment:  	if (htmlWriter != null) {  		if (!elementContentStarted && inlineStyle.Length > 0) {  			htmlWriter.WriteAttributeString ("STYLE"' inlineStyle.ToString ());  		}  		htmlWriter.WriteComment (xamlReader.Value);  	}  	elementContentStarted = true;  	break;  case XmlNodeType.CDATA:  case XmlNodeType.Text:  case XmlNodeType.SignificantWhitespace:  	if (htmlWriter != null) {  		if (!elementContentStarted && inlineStyle.Length > 0) {  			htmlWriter.WriteAttributeString ("STYLE"' inlineStyle.ToString ());  		}  		htmlWriter.WriteString (xamlReader.Value);  	}  	elementContentStarted = true;  	break;  }  
Missing Default,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlSchema,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlSchema.cs,ClosesOnNextElementStart,The following switch statement is missing a default case: switch (currentElementName) {  case "colgroup":  	return _htmlElementsClosingColgroup.Contains (nextElementName) && HtmlSchema.IsBlockElement (nextElementName);  case "dd":  	return _htmlElementsClosingDD.Contains (nextElementName) && HtmlSchema.IsBlockElement (nextElementName);  case "dt":  	return _htmlElementsClosingDT.Contains (nextElementName) && HtmlSchema.IsBlockElement (nextElementName);  case "li":  	return _htmlElementsClosingLI.Contains (nextElementName);  case "p":  	return HtmlSchema.IsBlockElement (nextElementName);  case "tbody":  	return _htmlElementsClosingTbody.Contains (nextElementName);  case "tfoot":  	return _htmlElementsClosingTfoot.Contains (nextElementName);  case "thead":  	return _htmlElementsClosingThead.Contains (nextElementName);  case "tr":  	return _htmlElementsClosingTR.Contains (nextElementName);  case "td":  	return _htmlElementsClosingTD.Contains (nextElementName);  case "th":  	return _htmlElementsClosingTH.Contains (nextElementName);  }  
Missing Default,Samba.Services.Implementations.PrinterModule.HtmlConverter,HtmlToXamlConverter,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Services\Implementations\PrinterModule\HtmlConverter\HtmlToXamlConverter.cs,GetElementProperties,The following switch statement is missing a default case: switch (elementName) {  // Character formatting  case "i":  case "italic":  case "em":  	localProperties ["font-style"] = "italic";  	break;  case "b":  case "bold":  case "strong":  case "dfn":  	localProperties ["font-weight"] = "bold";  	break;  case "u":  case "underline":  	localProperties ["text-decoration-underline"] = "true";  	break;  case "font":  	string attributeValue = GetAttribute (htmlElement' "face");  	if (attributeValue != null) {  		localProperties ["font-family"] = attributeValue;  	}  	attributeValue = GetAttribute (htmlElement' "size");  	if (attributeValue != null) {  		double fontSize = double.Parse (attributeValue) * (12.0 / 3.0);  		if (fontSize < 1.0) {  			fontSize = 1.0;  		} else if (fontSize > 1000.0) {  			fontSize = 1000.0;  		}  		localProperties ["font-size"] = fontSize.ToString ();  	}  	attributeValue = GetAttribute (htmlElement' "color");  	if (attributeValue != null) {  		localProperties ["color"] = attributeValue;  	}  	break;  case "samp":  	localProperties ["font-family"] = "Courier New";  	// code sample  	localProperties ["font-size"] = Xaml_FontSize_XXSmall;  	localProperties ["text-align"] = "Left";  	break;  case "sub":  	break;  case "sup":  	break;  // Hyperlinks  case "a":  	// href' hreflang' urn' methods' rel' rev' title  	//  Set default hyperlink properties  	break;  case "acronym":  	break;  // Paragraph formatting:  case "p":  	//  Set default paragraph properties  	break;  case "div":  	//  Set default div properties  	break;  case "pre":  	localProperties ["font-family"] = "Courier New";  	// renders text in a fixed-width font  	localProperties ["font-size"] = Xaml_FontSize_XXSmall;  	localProperties ["text-align"] = "Left";  	break;  case "blockquote":  	localProperties ["margin-left"] = "16";  	break;  case "h1":  	localProperties ["font-size"] = Xaml_FontSize_XXLarge;  	break;  case "h2":  	localProperties ["font-size"] = Xaml_FontSize_XLarge;  	break;  case "h3":  	localProperties ["font-size"] = Xaml_FontSize_Large;  	break;  case "h4":  	localProperties ["font-size"] = Xaml_FontSize_Medium;  	break;  case "h5":  	localProperties ["font-size"] = Xaml_FontSize_Small;  	break;  case "h6":  	localProperties ["font-size"] = Xaml_FontSize_XSmall;  	break;  // List properties  case "ul":  	localProperties ["list-style-type"] = "disc";  	break;  case "ol":  	localProperties ["list-style-type"] = "decimal";  	break;  case "table":  case "body":  case "html":  	break;  }  
