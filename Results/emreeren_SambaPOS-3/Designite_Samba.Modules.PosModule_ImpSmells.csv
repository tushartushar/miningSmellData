Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,FindMenuItem,Cyclomatic complexity of the method is 8
Complex Method,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,CreateCategoryButtons,Cyclomatic complexity of the method is 8
Complex Method,Samba.Modules.PosModule,PosView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosView.xaml.cs,OnEvent,Cyclomatic complexity of the method is 15
Complex Method,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnEntitySelectedForTicket,Cyclomatic complexity of the method is 8
Complex Method,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnTicketEvent,Cyclomatic complexity of the method is 20
Long Parameter List,Samba.Modules.PosModule,PosModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosModule.cs,PosModule,The method has 9 parameters.
Long Parameter List,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,PosViewModel,The method has 17 parameters.
Long Parameter List,Samba.Modules.PosModule,TicketViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,TicketViewModel,The method has 10 parameters.
Long Statement,Samba.Modules.PosModule,TicketTypeListViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketTypeListViewModel.cs,OnClose,The length of the statement  "	CommonEventPublisher.PublishEntityOperation<Entity> (null' EventTopicNames.SelectEntity' EventTopicNames.EntitySelected); " is 121.
Long Statement,Samba.Modules.PosModule,TicketEntityListViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketEntityListViewModel.cs,Update,The length of the statement  "	var rt = _cacheService.GetTicketTypeById (selectedTicket.TicketTypeId).EntityTypeAssignments.First (x => x.AskBeforeCreatingTicket && selectedTicket.TicketEntities.All (y => y.EntityTypeId != x.EntityTypeId)); " is 209.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,FilterMenuItems,The length of the statement  "		var items = Categories.Select (x => x.Category).SelectMany (x => x.ScreenMenuItems).Where (x => numeratorValue.ToLower ().Split (' ').All (y => x.Name.ToLower ().Contains (y))).Select (x => new ScreenMenuItemButton (x' MenuItemCommand' SelectedCategory)); " is 255.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,FindMenuItem,The length of the statement  "	var separator = _settingService.ProgramSettings.QuantitySeparators.Split (''').FirstOrDefault (x => NumeratorValue.Contains (x)); " is 129.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,FindMenuItem,The length of the statement  "		if (itemLength > 0 && quantityLength > 0 && insertedData.Length >= itemLength + quantityLength + weightBarcodePrefix.Length) { " is 126.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,CreateMostUsedMenuItems,The length of the statement  "			return new ObservableCollection<ScreenMenuItemButton> (MostUsedItemsCategory.ScreenMenuItems.OrderBy (x => x.SortOrder).Select (x => new ScreenMenuItemButton (x' MenuItemCommand' MostUsedItemsCategory))); " is 204.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,UpdateMenuButtons,The length of the statement  "	SubCategories.AddRange (category.GetScreenMenuCategories (CurrentTag).Select (x => new ScreenSubCategoryButton (x' SubCategoryCommand' GetCategorySubButtonColor (x' category)' category.MainFontSize' category.SubButtonHeight))); " is 227.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,OnCategoryCommandExecute,The length of the statement  "	AlphaButtonValues = string.IsNullOrEmpty (category.AlphaButtonValues) ? new string[0] : category.AlphaButtonValues.Split ('''); " is 127.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnTicketEventReceived,The length of the statement  "		var newTicketId = _ticketService.MoveOrders (SelectedTicket' SelectedTicket.ExtractSelectedOrders ().ToArray ()' 0).TicketId; " is 125.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnEntitySelectedForTicket,The length of the statement  "			if (_applicationState.CurrentDepartment != null && _applicationState.CurrentDepartment.TicketCreationMethod == 0 && _applicationState.SelectedEntityScreen != null && SelectedTicket.Orders.Count > 0 && eventParameters.Value.SelectedItem.Id > 0 && _applicationState.TempEntityScreen != null && eventParameters.Value.SelectedItem.EntityTypeId == _applicationState.TempEntityScreen.EntityTypeId) " is 391.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnEntitySelectedForTicket,The length of the statement  "				if (_applicationState.SelectedEntityScreen != null && _applicationState.SelectedEntityScreen.AskTicketType && _cacheService.GetTicketTypes ().Count () > 1 && _applicationState.TempTicketType == null) { " is 201.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,CreateTicket,The length of the statement  "		if (_applicationState.CurrentTicketType.EntityTypeAssignments.Any (x => x.CopyToNewTickets && x.EntityTypeId == ticketEntity.EntityTypeId)) { " is 141.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,CreateTicket,The length of the statement  "			_ticketService.UpdateEntity (SelectedTicket' entity' ticketEntity.AccountTypeId' ticketEntity.AccountId' ticketEntity.EntityCustomData); " is 136.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,DisplayTickets,The length of the statement  "	if (SelectedTicket != null || !_applicationState.GetTicketEntityScreens ().Any () || _applicationState.CurrentDepartment.TicketCreationMethod == 1) { " is 149.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,DisplayTickets,The length of the statement  "	CommonEventPublisher.PublishEntityOperation<Entity> (null' EventTopicNames.SelectEntity' EventTopicNames.EntitySelected); " is 121.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,DisplaySingleTicket,The length of the statement  "	if (SelectedTicket != null && !_userService.IsUserPermittedFor (PermissionNames.DisplayOtherWaitersTickets) && SelectedTicket.Orders.Any () && SelectedTicket.Orders [0].CreatingUserName != _applicationState.CurrentLoggedInUser.Name) { " is 234.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,ShouldDisplayTicketTagList,The length of the statement  "	return ticket != null && ticket.Orders.Count == 0 && _applicationState.GetTicketTagGroups ().Any (x => x.AskBeforeCreatingTicket && !ticket.IsTaggedWith (x.Name)); " is 163.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,ShouldDisplayEntityList,The length of the statement  "	return ticket != null && ticket.Orders.Count == 0 && _cacheService.GetTicketTypeById (ticket.TicketTypeId).EntityTypeAssignments.Any (x => x.AskBeforeCreatingTicket && ticket.TicketEntities.All (y => y.EntityTypeId != x.EntityTypeId)); " is 235.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,HandleTextInput,The length of the statement  "	return _regionManager.Regions [RegionNames.PosSubRegion].ActiveViews.Contains (_menuItemSelectorView) && _menuItemSelectorViewModel.HandleTextInput (text); " is 155.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,CloseTicket,The length of the statement  "	if (!SelectedTicket.CanCloseTicket () && !SelectedTicket.IsTaggedWithDefinedTags (_cacheService.GetTicketTagGroupNames ())) { " is 125.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,GetPrintError,The length of the statement  "			return string.Format (Resources.TagCantBeEmpty_f' _applicationState.GetTicketTagGroups ().First (x => x.ForceValue && !_ticketViewModel.IsTaggedWith (x.Name)).Name); " is 165.
Long Statement,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,SaveTicketIfNew,The length of the statement  "	if ((SelectedTicket.Id == 0 || _ticketOrdersViewModel.Orders.Any (x => x.Model.Id == 0)) && _ticketOrdersViewModel.Orders.Count > 0) { " is 134.
Long Statement,Samba.Modules.PosModule,TicketListViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketListViewModel.cs,CreateCommandButtons,The length of the statement  "		result.AddRange (_applicationState.GetAutomationCommands ().Where (x => x.DisplayOnTicketList).Select (x => new CommandButtonViewModel<object> { " is 144.
Long Statement,Samba.Modules.PosModule,TicketListViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketListViewModel.cs,UpdateListByTicketTagGroup,The length of the statement  "	_tickets = _ticketServiceBase.GetOpenTickets (x => !x.IsClosed && x.TicketTags.Contains (tagValue)).Select (x => new TicketButtonViewModel (x' null)).ToList (); " is 160.
Long Statement,Samba.Modules.PosModule,TicketListViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketListViewModel.cs,UpdateListByTicketState,The length of the statement  "	_tickets = _ticketServiceBase.GetOpenTickets (x => x.TicketStates.Contains (stateValue)).Select (x => new TicketButtonViewModel (x' null)).ToList (); " is 149.
Long Statement,Samba.Modules.PosModule,TicketViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,OnModifyOrder,The length of the statement  "	OperationRequest<SelectedOrdersData>.Publish (so' EventTopicNames.DisplayTicketOrderDetails' EventTopicNames.ActivatePosView' ""); " is 130.
Long Statement,Samba.Modules.PosModule,TicketViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,CanExecuteAutomationCommand,The length of the statement  "	return arg.IsEnabled && arg.CommandContainer.CanExecute (SelectedTicket) && _expressionService.EvalCommand (FunctionNames.CanExecuteAutomationCommand' arg.CommandContainer.AutomationCommand' new { " is 196.
Long Statement,Samba.Modules.PosModule,TicketViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,CanSelectEntity,The length of the statement  "	return arg != null && !SelectedTicket.IsLocked && SelectedTicket.CanSubmit && _applicationState.GetTicketEntityScreens ().Any (x => x.EntityTypeId == arg.Id); " is 158.
Long Statement,Samba.Modules.PosModule,TicketViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,OnSelectEntity,The length of the statement  "	var selectedEntity = ticketEntity != null ? _cacheService.GetEntityById (ticketEntity.EntityId) : Entity.GetNullEntity (obj.Id); " is 128.
Long Statement,Samba.Modules.PosModule,TicketViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,OnOrderTagEvent,The length of the statement  "		_ticketService.TagOrders (SelectedTicket' SelectedTicket.ExtractSelectedOrders ()' obj.Value.OrderTagGroup' obj.Value.SelectedOrderTag' ""); " is 140.
Long Statement,Samba.Modules.PosModule,TicketViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,OnOrderTagEvent,The length of the statement  "		_ticketService.UntagOrders (SelectedTicket' SelectedTicket.ExtractSelectedOrders ()' obj.Value.OrderTagGroup' obj.Value.SelectedOrderTag); " is 138.
Long Statement,Samba.Modules.PosModule,TicketViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,OnSelectedOrdersChanged,The length of the statement  "			OperationRequest<SelectedOrdersData>.Publish (so' EventTopicNames.DisplayTicketOrderDetails' EventTopicNames.ActivatePosView' ""); " is 130.
Long Statement,Samba.Modules.PosModule,TicketViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,CanChangePrice,The length of the statement  "	return !SelectedTicket.IsLocked && SelectedTicket.CanSubmit && SelectedOrder != null && (SelectedOrder.Price == 0 || _userService.IsUserPermittedFor (PermissionNames.ChangeItemPrice)); " is 184.
Long Statement,Samba.Modules.PosModule,TicketOrdersViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketOrdersViewModel.cs,AddOrder,The length of the statement  "		ExecuteAutomationCommand (SelectedTicket' ti.Model' data.ScreenMenuItem.AutomationCommand' data.ScreenMenuItem.AutomationCommandValue); " is 135.
Long Statement,Samba.Modules.PosModule,TicketOrdersViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketOrdersViewModel.cs,AddOrder,The length of the statement  "				OperationRequest<SelectedOrdersData>.Publish (so' EventTopicNames.DisplayTicketOrderDetails' EventTopicNames.RefreshSelectedTicket' ""); " is 136.
Long Statement,Samba.Modules.PosModule,TicketOrdersViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketOrdersViewModel.cs,UpdateOrderTag,The length of the statement  "	var ot = string.IsNullOrEmpty (orderTagGroup) ? _cacheService.GetOrderTagGroupByOrderTagName (orderTag) : _cacheService.GetOrderTagGroupByName (orderTagGroup); " is 159.
Complex Conditional,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnEntitySelectedForTicket,The conditional expression  "_applicationState.CurrentDepartment != null && _applicationState.CurrentDepartment.TicketCreationMethod == 0 && _applicationState.SelectedEntityScreen != null && SelectedTicket.Orders.Count > 0 && eventParameters.Value.SelectedItem.Id > 0 && _applicationState.TempEntityScreen != null && eventParameters.Value.SelectedItem.EntityTypeId == _applicationState.TempEntityScreen.EntityTypeId"  is complex.
Complex Conditional,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnEntitySelectedForTicket,The conditional expression  "_applicationState.SelectedEntityScreen != null && _applicationState.SelectedEntityScreen.AskTicketType && _cacheService.GetTicketTypes ().Count () > 1 && _applicationState.TempTicketType == null"  is complex.
Complex Conditional,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,DisplaySingleTicket,The conditional expression  "SelectedTicket != null && !_userService.IsUserPermittedFor (PermissionNames.DisplayOtherWaitersTickets) && SelectedTicket.Orders.Any () && SelectedTicket.Orders [0].CreatingUserName != _applicationState.CurrentLoggedInUser.Name"  is complex.
Magic Number,Samba.Modules.PosModule,MenuItemSelectorView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorView.xaml.cs,UpdateCategoryWidth,The following statement contains a magic number: if (_categoryWidth.Value != _viewModel.CategoryColumnWidthRate) {  	_categoryWidth = new GridLength (_viewModel.CategoryColumnWidthRate' GridUnitType.Star);  	_menuSectionWidth = new GridLength (100 - _categoryWidth.Value' GridUnitType.Star);  }  
Magic Number,Samba.Modules.PosModule,MenuItemSelectorView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorView.xaml.cs,UpdateCategoryWidth,The following statement contains a magic number: _menuSectionWidth = new GridLength (100 - _categoryWidth.Value' GridUnitType.Star);  
Magic Number,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,FilterMenuItems,The following statement contains a magic number: if (!string.IsNullOrEmpty (numeratorValue) && Char.IsLower (numeratorValue [0]) && MenuItems != null) {  	_filtered = true;  	SubCategories.Clear ();  	MenuItems.Clear ();  	var items = Categories.Select (x => x.Category).SelectMany (x => x.ScreenMenuItems).Where (x => numeratorValue.ToLower ().Split (' ').All (y => x.Name.ToLower ().Contains (y))).Select (x => new ScreenMenuItemButton (x' MenuItemCommand' SelectedCategory));  	MenuItems.AddRange (items.OrderBy (x => x.FindOrder (numeratorValue)).Take (30));  } else if (_filtered) {  	_filtered = false;  	UpdateMenuButtons (SelectedCategory);  }  
Magic Number,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,FilterMenuItems,The following statement contains a magic number: MenuItems.AddRange (items.OrderBy (x => x.FindOrder (numeratorValue)).Take (30));  
Magic Number,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,UpdateMenuButtons,The following statement contains a magic number: if (Categories != null && MenuItems.Count == 0) {  	if (category.NumeratorType == 2 && SubCategories.Count == 0)  		InteractionService.ShowKeyboard ();  	MenuItems.Clear ();  	if (category.MaxItems > 0) {  		IEnumerable<ScreenMenuItem> sitems = category.ScreenMenuItems.OrderBy (x => x.SortOrder);  		if (SubCategories.Count == 0) {  			sitems = Categories.Select (x => x.Category).SelectMany (x => x.ScreenMenuItems);  		}  		var items = sitems.Select (x => new ScreenMenuItemButton (x' MenuItemCommand' SelectedCategory));  		MenuItems.AddRange (items.Take (category.MaxItems));  	}  }  
Magic Number,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,UpdateMenuButtons,The following statement contains a magic number: if (category.NumeratorType == 2 && SubCategories.Count == 0)  	InteractionService.ShowKeyboard ();  
Magic Number,Samba.Modules.PosModule,PosModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosModule.cs,PosModule,The following statement contains a magic number: SetNavigationCommand (Resources.POS' Resources.Common' "Images/Network.png"' 10);  
Magic Number,Samba.Modules.PosModule,TicketListViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketListViewModel.cs,CreateCommandButtons,The following statement contains a magic number: if (SelectedEntity != null) {  	result.AddRange (_applicationState.GetAutomationCommands ().Where (x => x.DisplayOnTicketList).Select (x => new CommandButtonViewModel<object> {  		Caption = x.AutomationCommand.Name'  		Command = _executeAutomationCommand'  		Color = x.AutomationCommand.Color'  		FontSize = x.AutomationCommand.FontSize'  		Parameter = x  	}));  	result.Add (new CommandButtonViewModel<object> {  		Caption = MergeTicketsCommand.Caption'  		Command = MergeTicketsCommand'  		FontSize = 40'  		Color = "Gainsboro"  	});  	result.Add (new CommandButtonViewModel<object> {  		Caption = CloseCommand.Caption'  		Command = CloseCommand'  		FontSize = 40'  		Color = "Red"  	});  }  
Magic Number,Samba.Modules.PosModule,TicketListViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketListViewModel.cs,CreateCommandButtons,The following statement contains a magic number: if (SelectedEntity != null) {  	result.AddRange (_applicationState.GetAutomationCommands ().Where (x => x.DisplayOnTicketList).Select (x => new CommandButtonViewModel<object> {  		Caption = x.AutomationCommand.Name'  		Command = _executeAutomationCommand'  		Color = x.AutomationCommand.Color'  		FontSize = x.AutomationCommand.FontSize'  		Parameter = x  	}));  	result.Add (new CommandButtonViewModel<object> {  		Caption = MergeTicketsCommand.Caption'  		Command = MergeTicketsCommand'  		FontSize = 40'  		Color = "Gainsboro"  	});  	result.Add (new CommandButtonViewModel<object> {  		Caption = CloseCommand.Caption'  		Command = CloseCommand'  		FontSize = 40'  		Color = "Red"  	});  }  
Magic Number,Samba.Modules.PosModule,TicketListViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketListViewModel.cs,CreateCommandButtons,The following statement contains a magic number: result.Add (new CommandButtonViewModel<object> {  	Caption = MergeTicketsCommand.Caption'  	Command = MergeTicketsCommand'  	FontSize = 40'  	Color = "Gainsboro"  });  
Magic Number,Samba.Modules.PosModule,TicketListViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketListViewModel.cs,CreateCommandButtons,The following statement contains a magic number: result.Add (new CommandButtonViewModel<object> {  	Caption = CloseCommand.Caption'  	Command = CloseCommand'  	FontSize = 40'  	Color = "Red"  });  
Magic Number,Samba.Modules.PosModule,TicketOrdersViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketOrdersViewModel.cs,UpdateOrderStates,The following statement contains a magic number: orderStates.Split (''').Where (x => x.Contains ('=')).Select (x => x.Split (new[] {  	'='  }' 2)).ToList ().ForEach (x => UpdateOrderState (ticket' order' x [0]' x [1]));  
Missing Default,Samba.Modules.PosModule,MenuItemSelectorView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorView.xaml.cs,OnEvent,The following switch statement is missing a default case: switch (obj.Topic) {  case EventTopicNames.DisableLandscape:  	DisableLandscapeMode ();  	break;  case EventTopicNames.EnableLandscape:  	EnableLandscapeMode ();  	break;  }  
Missing Default,Samba.Modules.PosModule,MenuItemSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,OnEvent,The following switch statement is missing a default case: switch (obj.Topic) {  case EventTopicNames.ResetNumerator:  	NumeratorValue = "";  	break;  case EventTopicNames.ActivateMenuView:  	SelectedMenuItems.Clear ();  	break;  }  
Missing Default,Samba.Modules.PosModule,PosView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosView.xaml.cs,OnEvent,The following switch statement is missing a default case: switch (obj.Topic) {  case EventTopicNames.ActivateMenuView:  	if (IsPortrait)  		Grid2.SelectedIndex = 1;  	break;  case EventTopicNames.ActivatePosView:  	if (IsPortrait)  		Grid2.SelectedIndex = 0;  	LayoutTabControl.BackgroundFocus ();  	break;  case EventTopicNames.DisableLandscape:  	DisableLandscapeMode ();  	break;  case EventTopicNames.EnableLandscape:  	EnableLandscapeMode ();  	break;  }  
Missing Default,Samba.Modules.PosModule,PosViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnTicketEvent,The following switch statement is missing a default case: switch (obj.Topic) {  case EventTopicNames.CreateTicket:  	CreateTicket ();  	EventServiceFactory.EventService.PublishEvent (EventTopicNames.RefreshSelectedTicket);  	break;  case EventTopicNames.ActivatePosView:  	if (SelectedTicket == null || _ticketService.CanDeselectOrders (SelectedTicket.SelectedOrders)) {  		DisplayTickets ();  		DisplayMenuScreen ();  		_ticketViewModel.ResetTicket ();  	}  	break;  case EventTopicNames.RegenerateSelectedTicket:  	if (SelectedTicket != null) {  		_ticketViewModel.ResetTicket ();  		DisplaySingleTicket ();  	}  	break;  case EventTopicNames.RefreshSelectedTicket:  	DisplayMenuScreen ();  	DisplaySingleTicket ();  	break;  case EventTopicNames.CloseTicketRequested:  	DisplayMenuScreen ();  	CloseTicket ();  	break;  }  
Missing Default,Samba.Modules.PosModule,TicketView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketView.xaml.cs,OnEvent,The following switch statement is missing a default case: switch (obj.Topic) {  case EventTopicNames.DisableLandscape:  	DisableLandscapeMode ();  	break;  case EventTopicNames.EnableLandscape:  	EnableLandscapeMode ();  	break;  }  
