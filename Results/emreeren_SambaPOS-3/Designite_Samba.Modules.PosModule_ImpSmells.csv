Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,FindMenuItem,Cyclomatic complexity of the method is 9
Complex Method,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,CreateCategoryButtons,Cyclomatic complexity of the method is 8
Complex Method,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnEntitySelectedForTicket,Cyclomatic complexity of the method is 8
Complex Method,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,CloseTicket,Cyclomatic complexity of the method is 8
Long Parameter List,Samba.Modules.PosModule,PosModule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosModule.cs,PosModule,The method has 9 parameters. Parameters: regionManager' applicationState' posView' ticketView' ticketListView' ticketTagListView' menuItemSelectorView' ticketEntityListView' ticketTypeListView
Long Parameter List,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,PosViewModel,The method has 17 parameters. Parameters: regionManager' applicationState' applicationStateSetter' ticketService' ticketServiceBase' userService' cacheService' messagingService' ticketListViewModel' ticketTagListViewModel' menuItemSelectorViewModel' menuItemSelectorView' ticketViewModel' ticketOrdersViewModel' ticketEntityListViewModel' ticketTypeListViewModel' accountBalances
Long Parameter List,Samba.Modules.PosModule,TicketViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,TicketViewModel,The method has 10 parameters. Parameters: applicationState' expressionService' ticketService' accountService' locationService' userService' cacheService' ticketOrdersViewModel' totals' ticketInfoViewModel
Long Statement,Samba.Modules.PosModule,TicketTypeListViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketTypeListViewModel.cs,OnClose,The length of the statement  "            CommonEventPublisher.PublishEntityOperation<Entity>(null' EventTopicNames.SelectEntity' EventTopicNames.EntitySelected); " is 120.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,FindMenuItem,The length of the statement  "            var separator = _settingService.ProgramSettings.QuantitySeparators.Split(''').FirstOrDefault(x => NumeratorValue.Contains(x)); " is 126.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,FindMenuItem,The length of the statement  "                if (itemLength > 0 && quantityLength > 0 && insertedData.Length >= itemLength + quantityLength + weightBarcodePrefix.Length) " is 124.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,FindMenuItem,The length of the statement  "                _applicationState.NotifyEvent(RuleEventNames.NumberpadValueEntered' new { Ticket = SelectedTicket' NumberpadValue = insertedData }); " is 132.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,CreateMostUsedMenuItems,The length of the statement  "                    MostUsedItemsCategory.ScreenMenuItems.OrderBy(x => x.SortOrder).Select(x => new ScreenMenuItemButton(x' MenuItemCommand' MostUsedItemsCategory))); " is 146.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,UpdateMenuButtons,The length of the statement  "                .Select(x => new ScreenSubCategoryButton(x' SubCategoryCommand' GetCategorySubButtonColor(x' category)' category.MainFontSize' category.SubButtonHeight))); " is 155.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,UpdateMenuButtons,The length of the statement  "                var backButton = new ScreenSubCategoryButton(CurrentTag.Replace(CurrentTag.Split(''').Last()' "").Trim(new[] { '''' ' ' })' SubCategoryCommand' "Gainsboro"' category.MainFontSize' category.SubButtonHeight' true); " is 212.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,GetCategorySubButtonColor,The length of the statement  "            if (string.IsNullOrEmpty(category.SubButtonColorDef) || !category.SubButtonColorDef.Contains(name + "=")) return category.MainButtonColor; " is 138.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,OnCategoryCommandExecute,The length of the statement  "                QuickNumeratorValues = string.IsNullOrEmpty(category.NumeratorValues) ? new[] { "1"' "2"' "3"' "4"' "5" } : category.NumeratorValues.Split('''); " is 144.
Long Statement,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,OnCategoryCommandExecute,The length of the statement  "            AlphaButtonValues = string.IsNullOrEmpty(category.AlphaButtonValues) ? new string[0] : category.AlphaButtonValues.Split('''); " is 125.
Long Statement,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnTicketEventReceived,The length of the statement  "                var newTicketId = _ticketService.MoveOrders(SelectedTicket' SelectedTicket.ExtractSelectedOrders().ToArray()' 0).TicketId; " is 122.
Long Statement,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,CreateTicket,The length of the statement  "                    _ticketService.UpdateEntity(SelectedTicket' entity' ticketEntity.AccountTypeId' ticketEntity.AccountId' ticketEntity.EntityCustomData); " is 135.
Long Statement,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,DisplayTickets,The length of the statement  "            if (SelectedTicket != null || !_applicationState.GetTicketEntityScreens().Any() || _applicationState.CurrentDepartment.TicketCreationMethod == 1) " is 145.
Long Statement,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,DisplayTickets,The length of the statement  "            CommonEventPublisher.PublishEntityOperation<Entity>(null' EventTopicNames.SelectEntity' EventTopicNames.EntitySelected); " is 120.
Long Statement,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,DisplaySingleTicket,The length of the statement  "            if (SelectedTicket != null && !_userService.IsUserPermittedFor(PermissionNames.DisplayOtherWaitersTickets) && SelectedTicket.Orders.Any() && SelectedTicket.Orders[0].CreatingUserName != _applicationState.CurrentLoggedInUser.Name) " is 229.
Long Statement,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,CloseTicket,The length of the statement  "            if (!SelectedTicket.CanCloseTicket() && !SelectedTicket.IsTaggedWithDefinedTags(_cacheService.GetTicketTagGroupNames())) " is 120.
Long Statement,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,GetPrintError,The length of the statement  "                    return string.Format(Resources.TagCantBeEmpty_f' _applicationState.GetTicketTagGroups().First(x => x.ForceValue && !_ticketViewModel.IsTaggedWith(x.Name)).Name); " is 161.
Long Statement,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,SaveTicketIfNew,The length of the statement  "            if ((SelectedTicket.Id == 0 || _ticketOrdersViewModel.Orders.Any(x => x.Model.Id == 0)) && _ticketOrdersViewModel.Orders.Count > 0) " is 131.
Long Statement,Samba.Modules.PosModule,TicketListViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketListViewModel.cs,OnExecuteAutomationCommand,The length of the statement  "            _applicationState.NotifyEvent(RuleEventNames.AutomationCommandExecuted' new { TicketId = GetLastTicketId()' AutomationCommandName = obj.AutomationCommand.Name' CommandValue = GetTicketIds() }); " is 193.
Long Statement,Samba.Modules.PosModule,TicketListViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketListViewModel.cs,UpdateListByTicketTagGroup,The length of the statement  "            _tickets = _ticketServiceBase.GetOpenTickets(x => !x.IsClosed && x.TicketTags.Contains(tagValue)).Select(x => new TicketButtonViewModel(x' null)).ToList(); " is 155.
Long Statement,Samba.Modules.PosModule,TicketListViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketListViewModel.cs,UpdateListByTicketState,The length of the statement  "            _tickets = _ticketServiceBase.GetOpenTickets(x => x.TicketStates.Contains(stateValue)).Select(x => new TicketButtonViewModel(x' null)).ToList(); " is 144.
Long Statement,Samba.Modules.PosModule,TicketViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,OnModifyOrder,The length of the statement  "            OperationRequest<SelectedOrdersData>.Publish(so' EventTopicNames.DisplayTicketOrderDetails' EventTopicNames.ActivatePosView' ""); " is 129.
Long Statement,Samba.Modules.PosModule,TicketViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,CanExecuteAutomationCommand,The length of the statement  "            return arg.IsEnabled && arg.CommandContainer.CanExecute(SelectedTicket) && _expressionService.EvalCommand(FunctionNames.CanExecuteAutomationCommand' arg.CommandContainer.AutomationCommand' new { Ticket = SelectedTicket }' true); " is 228.
Long Statement,Samba.Modules.PosModule,TicketViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,CanSelectEntity,The length of the statement  "            return arg != null && !SelectedTicket.IsLocked && SelectedTicket.CanSubmit && _applicationState.GetTicketEntityScreens().Any(x => x.EntityTypeId == arg.Id); " is 156.
Long Statement,Samba.Modules.PosModule,TicketViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,OnSelectEntity,The length of the statement  "            var selectedEntity = ticketEntity != null ? _cacheService.GetEntityById(ticketEntity.EntityId) : Entity.GetNullEntity(obj.Id); " is 126.
Long Statement,Samba.Modules.PosModule,TicketViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,OnOrderTagEvent,The length of the statement  "                _ticketService.TagOrders(SelectedTicket' SelectedTicket.ExtractSelectedOrders()' obj.Value.OrderTagGroup' obj.Value.SelectedOrderTag' ""); " is 138.
Long Statement,Samba.Modules.PosModule,TicketViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,OnSelectedOrdersChanged,The length of the statement  "                    OperationRequest<SelectedOrdersData>.Publish(so' EventTopicNames.DisplayTicketOrderDetails' EventTopicNames.ActivatePosView' ""); " is 129.
Long Statement,Samba.Modules.PosModule,TicketViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketViewModel.cs,CanMoveOrders,The length of the statement  "            if (SelectedOrders.Any(x => !x.Locked) && _userService.IsUserPermittedFor(PermissionNames.MoveUnlockedOrders)) return true; " is 123.
Long Statement,Samba.Modules.PosModule,TicketOrdersViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketOrdersViewModel.cs,AddOrder,The length of the statement  "                ExecuteAutomationCommand(SelectedTicket' ti.Model' data.ScreenMenuItem.AutomationCommand' data.ScreenMenuItem.AutomationCommandValue); " is 134.
Long Statement,Samba.Modules.PosModule,TicketOrdersViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketOrdersViewModel.cs,AddOrder,The length of the statement  "                        OperationRequest<SelectedOrdersData>.Publish(so' EventTopicNames.DisplayTicketOrderDetails' EventTopicNames.RefreshSelectedTicket' ""); " is 135.
Complex Conditional,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnEntitySelectedForTicket,The conditional expression  "_applicationState.CurrentDepartment != null && _applicationState.CurrentDepartment.TicketCreationMethod == 0                          && _applicationState.SelectedEntityScreen != null                          && SelectedTicket.Orders.Count > 0 && eventParameters.Value.SelectedItem.Id > 0                          && _applicationState.TempEntityScreen != null                          && eventParameters.Value.SelectedItem.EntityTypeId == _applicationState.TempEntityScreen.EntityTypeId"  is complex.
Complex Conditional,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnEntitySelectedForTicket,The conditional expression  "_applicationState.SelectedEntityScreen != null &&                              _applicationState.SelectedEntityScreen.AskTicketType &&                              _cacheService.GetTicketTypes().Count() > 1 &&                              _applicationState.TempTicketType == null"  is complex.
Complex Conditional,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,DisplaySingleTicket,The conditional expression  "SelectedTicket != null && !_userService.IsUserPermittedFor(PermissionNames.DisplayOtherWaitersTickets) && SelectedTicket.Orders.Any() && SelectedTicket.Orders[0].CreatingUserName != _applicationState.CurrentLoggedInUser.Name"  is complex.
Magic Number,Samba.Modules.PosModule,MenuItemSelectorView,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorView.xaml.cs,UpdateCategoryWidth,The following statement contains a magic number: _menuSectionWidth = new GridLength(100 - _categoryWidth.Value' GridUnitType.Star);
Magic Number,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,FilterMenuItems,The following statement contains a magic number: MenuItems.AddRange(items.OrderBy(x => x.FindOrder(numeratorValue)).Take(30));
Magic Number,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,UpdateMenuButtons,The following statement contains a magic number: category.NumeratorType == 2 && SubCategories.Count == 0
Magic Number,Samba.Modules.PosModule,PosModule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosModule.cs,PosModule,The following statement contains a magic number: SetNavigationCommand(Resources.POS' Resources.Common' "Images/Network.png"' 10);
Magic Number,Samba.Modules.PosModule,TicketListViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketListViewModel.cs,CreateCommandButtons,The following statement contains a magic number: result.Add(new CommandButtonViewModel<object>                                 {                                     Caption = MergeTicketsCommand.Caption'                                     Command = MergeTicketsCommand'                                     FontSize = 40'                                     Color = "Gainsboro"                                 });
Magic Number,Samba.Modules.PosModule,TicketListViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketListViewModel.cs,CreateCommandButtons,The following statement contains a magic number: result.Add(new CommandButtonViewModel<object>                                 {                                     Caption = CloseCommand.Caption'                                     Command = CloseCommand'                                     FontSize = 40'                                     Color = "Red"                                 });
Magic Number,Samba.Modules.PosModule,TicketOrdersViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketOrdersViewModel.cs,UpdateOrderStates,The following statement contains a magic number: orderStates.Split(''')                             .Where(x => x.Contains('='))                             .Select(x => x.Split(new[] { '=' }' 2))                             .ToList()                             .ForEach(x => UpdateOrderState(ticket' order' x[0]' x[1]));
Missing Default,Samba.Modules.PosModule,MenuItemSelectorView,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorView.xaml.cs,OnEvent,The following switch statement is missing a default case: switch (obj.Topic)              {                  case EventTopicNames.DisableLandscape:                      DisableLandscapeMode();                      break;                  case EventTopicNames.EnableLandscape:                      EnableLandscapeMode();                      break;              }
Missing Default,Samba.Modules.PosModule,MenuItemSelectorViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\MenuItemSelectorViewModel.cs,OnEvent,The following switch statement is missing a default case: switch (obj.Topic)              {                  case EventTopicNames.ResetNumerator:                      NumeratorValue = "";                      break;                  case EventTopicNames.ActivateMenuView:                      SelectedMenuItems.Clear();                      break;              }
Missing Default,Samba.Modules.PosModule,PosView,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosView.xaml.cs,OnEvent,The following switch statement is missing a default case: switch (obj.Topic)              {                  case EventTopicNames.ActivateMenuView:                      if (IsPortrait) Grid2.SelectedIndex = 1;                      break;                  case EventTopicNames.ActivatePosView:                      if (IsPortrait) Grid2.SelectedIndex = 0;                      LayoutTabControl.BackgroundFocus();                      break;                  case EventTopicNames.DisableLandscape:                      DisableLandscapeMode();                      break;                  case EventTopicNames.EnableLandscape:                      EnableLandscapeMode();                      break;              }
Missing Default,Samba.Modules.PosModule,PosViewModel,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\PosViewModel.cs,OnTicketEvent,The following switch statement is missing a default case: switch (obj.Topic)              {                  case EventTopicNames.CreateTicket:                      CreateTicket();                      EventServiceFactory.EventService.PublishEvent(EventTopicNames.RefreshSelectedTicket);                      break;                  case EventTopicNames.ActivatePosView:                      if (SelectedTicket == null || _ticketService.CanDeselectOrders(SelectedTicket.SelectedOrders))                      {                          DisplayTickets();                          DisplayMenuScreen();                          _ticketViewModel.ResetTicket();                      }                      break;                  case EventTopicNames.RegenerateSelectedTicket:                      if (SelectedTicket != null)                      {                          _ticketViewModel.ResetTicket();                          DisplaySingleTicket();                      }                      break;                  case EventTopicNames.RefreshSelectedTicket:                      DisplayMenuScreen();                      DisplaySingleTicket();                      break;                  case EventTopicNames.CloseTicketRequested:                      DisplayMenuScreen();                      CloseTicket();                      break;              }
Missing Default,Samba.Modules.PosModule,TicketView,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Modules.PosModule\TicketView.xaml.cs,OnEvent,The following switch statement is missing a default case: switch (obj.Topic)              {                  case EventTopicNames.DisableLandscape:                      DisableLandscapeMode();                      break;                  case EventTopicNames.EnableLandscape:                      EnableLandscapeMode();                      break;              }
