Implementation smell,Namespace,Class,File,Method,Description
Long Method,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The method has 142 lines of code.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The length of the statement  "            Assert.AreEqual(25 - ((120m * 3) / 1000m)' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse)); " is 124.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The length of the statement  "            Assert.AreEqual(25 - ((120m * 6) / 1000m)' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse)); " is 124.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The length of the statement  "            var order = ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 164.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The length of the statement  "            order = ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 160.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanHandleMultipleCostCalculation,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanHandleMultipleCostCalculation,The length of the statement  "            ticket.AddOrder(AccountTransactionType.Default' testContext.Department' "Emre"' testContext.Iskender' null' testContext.Iskender.Portions[0]' ""' null); " is 152.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The length of the statement  "            testContext.DonerEti = new InventoryItem { Name = "Döner Eti"' BaseUnit = "GR"' GroupCode = ""' TransactionUnit = "KG"' TransactionUnitMultiplier = 1000 }; " is 155.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The length of the statement  "            testContext.Yogurt = new InventoryItem { Name = "Yoğurt"' BaseUnit = "GR"' GroupCode = ""' TransactionUnit = "KG"' TransactionUnitMultiplier = 1000 }; " is 150.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The length of the statement  "            testContext.Pide = new InventoryItem { Name = "Pide"' BaseUnit = "Yarım"' GroupCode = ""' TransactionUnit = "Adet"' TransactionUnitMultiplier = 2 }; " is 148.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The length of the statement  "            testContext.ZeytinYagi = new InventoryItem { Name = "Zeytin Yağı"' BaseUnit = "Ölçü"' GroupCode = ""' TransactionUnit = "Litre"' TransactionUnitMultiplier = 100 }; " is 163.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The length of the statement  "            testContext.Tuz = new InventoryItem { Name = "Tuz"' BaseUnit = "Ölçü"' GroupCode = ""' TransactionUnit = "Paket"' TransactionUnitMultiplier = 100 }; " is 148.
Long Statement,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The length of the statement  "            testContext.Kekik = new InventoryItem { Name = "Kekik"' BaseUnit = "Ölçü"' GroupCode = ""' TransactionUnit = "Paket"' TransactionUnitMultiplier = 100 }; " is 152.
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.Pide' 1' 50' "Adet"' 2);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.Pide' 1' 50' "Adet"' 2);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.ZeytinYagi' 5' 5' "Litre"' 100);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.ZeytinYagi' 5' 5' "Litre"' 100);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.ZeytinYagi' 5' 5' "Litre"' 100);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: Assert.AreEqual(iskenderCostItem.Quantity' 3);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: var etCost = ((16m / 1000m) * 120m);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: var etCost = ((16m / 1000m) * 120m);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: var etCost = ((16m / 1000m) * 120m);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: var pideCost = ((1m / 2m) * 2m);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: var pideCost = ((1m / 2m) * 2m);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: var yogurtCost = ((4m / 1000m) * 50m);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: var yogurtCost = ((4m / 1000m) * 50m);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: var yogurtCost = ((4m / 1000m) * 50m);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: var zeytinYagiCost = ((5m / 100m) * 1m);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: var zeytinYagiCost = ((5m / 100m) * 1m);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: var iskenderCost = decimal.Round(etCost + pideCost + yogurtCost + zeytinYagiCost' 2);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: etpc.PhysicalInventory = 9.5m;
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: yogurtpc.PhysicalInventory = 28;
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: zeytinYagipc.PhysicalInventory = 4.5m;
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestCost,The following statement contains a magic number: Assert.AreEqual(iskenderCostItem.Cost' decimal.Round(etCost + pideCost + yogurtCost + zeytinYagiCost' 2));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.Pide' 1' 50' "Adet"' 2);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.Pide' 1' 50' "Adet"' 2);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: transaction.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(transactionTotal' (16 * 10) + (50 * 1) + (30 * 4));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(transactionTotal' (16 * 10) + (50 * 1) + (30 * 4));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(transactionTotal' (16 * 10) + (50 * 1) + (30 * 4));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(transactionTotal' (16 * 10) + (50 * 1) + (30 * 4));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(transactionTotal' (16 * 10) + (50 * 1) + (30 * 4));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: transaction2.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 15' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: transaction2.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 15' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: transaction2.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 15' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(20' etpc.Purchase);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(0.24m' etpc.Consumption);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(15.5m' etpc.Cost);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(30' yogurtpc.Purchase);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(0.1m' yogurtpc.Consumption);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(50' pidepc.Purchase);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(2' pidepc.Consumption);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(20 - 0.24m' etpc.InStock);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(20 - 0.24m' etpc.InStock);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: const int etAlimMiktari = 50;
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: var ti = transaction.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 12' etAlimMiktari' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: var ti = transaction.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 12' etAlimMiktari' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(etpc2.GetInventoryPrediction()' etpc.GetInventoryPrediction() + etAlimMiktari - 0.24m);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: cost = decimal.Round(cost' 2);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: ti = transaction.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 10' etAlimMiktari' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: ti = transaction.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 10' etAlimMiktari' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: Assert.AreEqual(etpc3.GetInventoryPrediction()' etpc2.GetInventoryPrediction() + etAlimMiktari - 0.24m);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,TestPurchase,The following statement contains a magic number: cost = decimal.Round(cost' 2);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Pide' 1' 50' "Adet"' 2);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Pide' 1' 50' "Adet"' 2);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.ZeytinYagi' 5' 5' "Litre"' 100);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.ZeytinYagi' 5' 5' "Litre"' 100);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.ZeytinYagi' 5' 5' "Litre"' 100);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(4' inventoryTransaction1.TransactionItems.Count);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(10' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(50' InventoryService.GetInventory(testContext.Pide' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(30' InventoryService.GetInventory(testContext.Yogurt' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(5' InventoryService.GetInventory(testContext.ZeytinYagi' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 15' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 15' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 15' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(25' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(25 - ((120m * 3) / 1000m)' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(25 - ((120m * 3) / 1000m)' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(25 - ((120m * 3) / 1000m)' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(25 - ((120m * 3) / 1000m)' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(25 - ((120m * 6) / 1000m)' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(25 - ((120m * 6) / 1000m)' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(25 - ((120m * 6) / 1000m)' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(25 - ((120m * 6) / 1000m)' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(50 - (2 * 6) / 2' InventoryService.GetInventory(testContext.Pide' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(50 - (2 * 6) / 2' InventoryService.GetInventory(testContext.Pide' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(50 - (2 * 6) / 2' InventoryService.GetInventory(testContext.Pide' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual(50 - (2 * 6) / 2' InventoryService.GetInventory(testContext.Pide' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual((-10m * 6) / 100' InventoryService.GetInventory(testContext.Tuz' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual((-10m * 6) / 100' InventoryService.GetInventory(testContext.Tuz' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanReadInventory,The following statement contains a magic number: Assert.AreEqual((-10m * 6) / 100' InventoryService.GetInventory(testContext.Tuz' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: Assert.AreEqual(30' InventoryService.GetInventory(testContext.Yogurt' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: order.Quantity = 600;
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: order.Quantity = 600;
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: Assert.AreEqual(-30' InventoryService.GetInventory(testContext.Yogurt' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: Assert.AreEqual(-30' InventoryService.GetInventory(testContext.Yogurt' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: inventoryTransaction2.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: inventoryTransaction2.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: inventoryTransaction2.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: pci.PhysicalInventory = 10;
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanFilterUnneededConsumptionItems,The following statement contains a magic number: Assert.AreEqual(10' InventoryService.GetInventory(testContext.Yogurt' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.DonerEti' 16' 10' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Pide' 1' 50' "Adet"' 2);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Pide' 1' 50' "Adet"' 2);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.Yogurt' 4' 30' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.ZeytinYagi' 5' 5' "Litre"' 100);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.ZeytinYagi' 5' 5' "Litre"' 100);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction1.Add(testContext.PurchaseTransactionType' testContext.ZeytinYagi' 5' 5' "Litre"' 100);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: Assert.AreEqual(10' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction2.Add(testContext.BarTransferTransactionType' testContext.DonerEti' 16' 5' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction2.Add(testContext.BarTransferTransactionType' testContext.DonerEti' 16' 5' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: inventoryTransaction2.Add(testContext.BarTransferTransactionType' testContext.DonerEti' 16' 5' "KG"' 1000);
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: Assert.AreEqual(5' InventoryService.GetInventory(testContext.DonerEti' testContext.BarWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CanAssignWarehouse,The following statement contains a magic number: Assert.AreEqual(5' InventoryService.GetInventory(testContext.DonerEti' testContext.LocalWarehouse));
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The following statement contains a magic number: testContext.DonerEti = new InventoryItem { Name = "Döner Eti"' BaseUnit = "GR"' GroupCode = ""' TransactionUnit = "KG"' TransactionUnitMultiplier = 1000 };
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The following statement contains a magic number: testContext.Yogurt = new InventoryItem { Name = "Yoğurt"' BaseUnit = "GR"' GroupCode = ""' TransactionUnit = "KG"' TransactionUnitMultiplier = 1000 };
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The following statement contains a magic number: testContext.Pide = new InventoryItem { Name = "Pide"' BaseUnit = "Yarım"' GroupCode = ""' TransactionUnit = "Adet"' TransactionUnitMultiplier = 2 };
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The following statement contains a magic number: testContext.ZeytinYagi = new InventoryItem { Name = "Zeytin Yağı"' BaseUnit = "Ölçü"' GroupCode = ""' TransactionUnit = "Litre"' TransactionUnitMultiplier = 100 };
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The following statement contains a magic number: testContext.Tuz = new InventoryItem { Name = "Tuz"' BaseUnit = "Ölçü"' GroupCode = ""' TransactionUnit = "Paket"' TransactionUnitMultiplier = 100 };
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The following statement contains a magic number: testContext.Kekik = new InventoryItem { Name = "Kekik"' BaseUnit = "Ölçü"' GroupCode = ""' TransactionUnit = "Paket"' TransactionUnitMultiplier = 100 };
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The following statement contains a magic number: testContext.IskenderRecipe.RecipeItems.Add(new RecipeItem { InventoryItem = testContext.DonerEti' Quantity = 120 });
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The following statement contains a magic number: testContext.IskenderRecipe.RecipeItems.Add(new RecipeItem { InventoryItem = testContext.Yogurt' Quantity = 50 });
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The following statement contains a magic number: testContext.IskenderRecipe.RecipeItems.Add(new RecipeItem { InventoryItem = testContext.Pide' Quantity = 2 });
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The following statement contains a magic number: testContext.IskenderRecipe.RecipeItems.Add(new RecipeItem { InventoryItem = testContext.Tuz' Quantity = 10 });
Magic Number,Samba.Presentation.Tests,InventoryTests,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Presentation.Tests\InventoryTests.cs,CreateWarehouseTestContext,The following statement contains a magic number: testContext.DonerRecipe.RecipeItems.Add(new RecipeItem{InventoryItem=testContext.DonerEti'Quantity = 120});
