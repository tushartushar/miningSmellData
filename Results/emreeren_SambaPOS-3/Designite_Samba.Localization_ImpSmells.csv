Implementation smell,Namespace,Class,File,Method,Description
Long Method,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetUKOddsFormatLookupTable,The method has 290 lines of code.
Complex Method,Samba.Localization.BaseExtensions,BaseLocalizeExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\BaseExtensions\BaseLocalizeExtension.cs,ProvideValue,Cyclomatic complexity of the method is 15
Complex Method,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,GetLocalizedObject,Cyclomatic complexity of the method is 9
Complex Method,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,GetResourceManager,Cyclomatic complexity of the method is 14
Complex Method,Samba.Localization.Engine,ObjectDependencyManager,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\ObjectDependencyManager.cs,CleanUp,Cyclomatic complexity of the method is 8
Complex Method,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,Cyclomatic complexity of the method is 19
Complex Method,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,ProvideValue,Cyclomatic complexity of the method is 9
Long Statement,Samba.Localization.BaseExtensions,BaseLocalizeExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\BaseExtensions\BaseLocalizeExtension.cs,ProvideValue,The length of the statement  "	return LocalizeDictionary.Instance.GetLocalizedObject<object> (this.Assembly' this.Dict' this.Key' this.GetForcedCultureOrDefault ()); " is 134.
Long Statement,Samba.Localization.BaseExtensions,BaseLocalizeExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\BaseExtensions\BaseLocalizeExtension.cs,ResolveLocalizedValue,The length of the statement  "	object localizedObject = LocalizeDictionary.Instance.GetLocalizedObject<object> (this.Assembly' this.Dict' this.Key' targetCulture); " is 132.
Long Statement,Samba.Localization.BaseExtensions,BaseLocalizeExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\BaseExtensions\BaseLocalizeExtension.cs,SetBinding,The length of the statement  "		object output = this.FormatOutput (LocalizeDictionary.Instance.GetLocalizedObject<object> (this.Assembly' this.Dict' this.Key' this.GetForcedCultureOrDefault ())); " is 163.
Long Statement,Samba.Localization.BaseExtensions,BaseLocalizeExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\BaseExtensions\BaseLocalizeExtension.cs,HandleNewValue,The length of the statement  "	this.SetNewValue (LocalizeDictionary.Instance.GetLocalizedObject<object> (this.Assembly' this.Dict' this.Key' this.GetForcedCultureOrDefault ())); " is 146.
Long Statement,Samba.Localization,DateTimeExtensions,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\DateTimeExtensions.cs,ToShortDuration,The length of the statement  "	string formatted = string.Format ("{0}{1}{2}"' span.Days > 0 ? string.Format ("{0:0}{1} "' span.Days' Resources.Day.ToLower () [0]) : string.Empty' span.Hours > 0 ? string.Format ("{0:0}{1} "' span.Hours' Resources.Hour.ToLower () [0]) : string.Empty' span.Minutes > 0 ? string.Format ("{0:0}{1} "' span.Minutes' Resources.Minute.ToLower () [0]) : string.Empty); " is 362.
Long Statement,Samba.Localization,DateTimeExtensions,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\DateTimeExtensions.cs,ToLongDuration,The length of the statement  "	string formatted = string.Format ("{0}{1}{2}"' span.Days > 0 ? string.Format ("{0:0} {1} "' span.Days' PluralizeInt (Resources.Day' span.Days)) : string.Empty' span.Hours > 0 ? string.Format ("{0:0} {1} "' span.Hours' PluralizeInt (Resources.Hour' span.Hours)) : string.Empty' span.Minutes > 0 ? string.Format ("{0:0} {1} "' span.Minutes' PluralizeInt (Resources.Minute' span.Minutes)) : string.Empty); " is 402.
Long Statement,Samba.Localization,DateTimeExtensions,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\DateTimeExtensions.cs,WeekOfYear,The length of the statement  "	return CultureInfo.CurrentCulture.Calendar.GetWeekOfYear (dateTime' CultureInfo.CurrentCulture.DateTimeFormat.CalendarWeekRule' CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek); " is 186.
Long Statement,Samba.Localization,DateTimeExtensions,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\DateTimeExtensions.cs,FirstDateOfWeek,The length of the statement  "	int firstWeek = CultureInfo.CurrentCulture.Calendar.GetWeekOfYear (jan1' CultureInfo.CurrentCulture.DateTimeFormat.CalendarWeekRule' CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek); " is 191.
Long Statement,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,GetLocalizedObject,The length of the statement  "		throw new ArgumentException (string.Format ("No resource key with name '{0}' in dictionary '{1}' in assembly '{2}' founded! ({2}.{1}.{0})"' resourceKey' resourceDictionary' resourceAssembly)); " is 192.
Long Statement,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,ResourceKeyExists,The length of the statement  "		return this.GetResourceManager (resourceAssembly' resourceDictionary' resourceKey).GetObject (resourceKey' cultureToUse) != null; " is 129.
Long Statement,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,GetResourceManager,The length of the statement  "			if (/* availableResources[i].StartsWith(resourceAssembly + ".") && */availableResources [i].EndsWith (resManagerNameToSearch)) { " is 128.
Long Statement,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,GetResourceManager,The length of the statement  "			throw new ArgumentException (string.Format ("No resource key with name '{0}' in dictionary '{1}' in assembly '{2}' founded! ({2}.{1}.{0})"' resourceKey' resourceDictionary' resourceAssembly)); " is 192.
Long Statement,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,ChangeLanguage,The length of the statement  "			requestedLang = LocalSettings.SupportedLanguages.Contains (currentUiLanguage) ? currentUiLanguage : LocalSettings.SupportedLanguages [0]; " is 137.
Long Statement,Samba.Localization.Engine,LocalizedObjectOperation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizedObjectOperation.cs,GetErrorMessage,The length of the statement  "		return (string)LocalizeDictionary.Instance.GetLocalizedObject<object> (LocalizeDictionary.Instance.GetAssemblyName (Assembly.GetExecutingAssembly ())' "ResError"' "ERR_" + errorNo' LocalizeDictionary.Instance.Culture); " is 218.
Long Statement,Samba.Localization.Engine,LocalizedObjectOperation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizedObjectOperation.cs,GetGuiString,The length of the statement  "		return (string)LocalizeDictionary.Instance.GetLocalizedObject<object> (LocalizeDictionary.Instance.GetAssemblyName (Assembly.GetExecutingAssembly ())' "ResGui"' key' language); " is 176.
Long Statement,Samba.Localization.Engine,LocalizedObjectOperation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizedObjectOperation.cs,GetHelpString,The length of the statement  "		return (string)LocalizeDictionary.Instance.GetLocalizedObject<object> (LocalizeDictionary.Instance.GetAssemblyName (Assembly.GetExecutingAssembly ())' "ResHelp"' key' LocalizeDictionary.Instance.Culture); " is 204.
Long Statement,Samba.Localization.Engine,LocalizedObjectOperation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizedObjectOperation.cs,GetMaintenanceString,The length of the statement  "		return (string)LocalizeDictionary.Instance.GetLocalizedObject<object> (LocalizeDictionary.Instance.GetAssemblyName (Assembly.GetExecutingAssembly ())' "ResMaintenance"' key' LocalizeDictionary.Instance.Culture); " is 211.
Long Statement,Samba.Localization.Engine,LocalizedObjectOperation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizedObjectOperation.cs,GetUpdateAgentString,The length of the statement  "		return (string)LocalizeDictionary.Instance.GetLocalizedObject<object> (LocalizeDictionary.Instance.GetAssemblyName (Assembly.GetExecutingAssembly ())' "ResUpdateAgent"' key' LocalizeDictionary.Instance.Culture); " is 211.
Long Statement,Samba.Localization.Extensions,LocBrushExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocBrushExtension.cs,ProvideValue,The length of the statement  "	throw new NotSupportedException (string.Format ("ResourceKey '{0}' returns '{1}' which is not type of System.Drawing.Bitmap"' this.Key' obj.GetType ().FullName)); " is 162.
Long Statement,Samba.Localization.Extensions,LocBrushExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocBrushExtension.cs,HandleNewValue,The length of the statement  "	object obj = LocalizeDictionary.Instance.GetLocalizedObject<object> (this.Assembly' this.Dict' this.Key' this.GetForcedCultureOrDefault ()); " is 140.
Long Statement,Samba.Localization.Extensions,LocDoubleExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocDoubleExtension.cs,ProvideValue,The length of the statement  "	throw new NotSupportedException (string.Format ("ResourceKey '{0}' returns '{1}' which is not type of double"' this.Key' obj.GetType ().FullName)); " is 147.
Long Statement,Samba.Localization.Extensions,LocDoubleExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocDoubleExtension.cs,HandleNewValue,The length of the statement  "	object obj = LocalizeDictionary.Instance.GetLocalizedObject<object> (this.Assembly' this.Dict' this.Key' this.GetForcedCultureOrDefault ()); " is 140.
Long Statement,Samba.Localization.Extensions,LocDoubleExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocDoubleExtension.cs,FormatOutput,The length of the statement  "	////System.Reflection.MethodInfo method = typeof(System.ComponentModel.DoubleConverter).GetMethod("FromString"' System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.NonPublic); " is 194.
Long Statement,Samba.Localization.Extensions,LocFlowDirectionExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocFlowDirectionExtension.cs,ProvideValue,The length of the statement  "	throw new NotSupportedException (string.Format ("ResourceKey '{0}' returns '{1}' which is not type of FlowDirection"' this.Key' obj.GetType ().FullName)); " is 154.
Long Statement,Samba.Localization.Extensions,LocFlowDirectionExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocFlowDirectionExtension.cs,HandleNewValue,The length of the statement  "	var obj = LocalizeDictionary.Instance.GetLocalizedObject<object> (this.Assembly' this.Dict' this.Key' this.GetForcedCultureOrDefault ()); " is 137.
Long Statement,Samba.Localization.Extensions,LocImageExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocImageExtension.cs,ProvideValue,The length of the statement  "	throw new NotSupportedException (string.Format ("ResourceKey '{0}' returns '{1}' which is not type of System.Drawing.Bitmap"' this.Key' obj.GetType ().FullName)); " is 162.
Long Statement,Samba.Localization.Extensions,LocImageExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocImageExtension.cs,HandleNewValue,The length of the statement  "	object obj = LocalizeDictionary.Instance.GetLocalizedObject<object> (this.Assembly' this.Dict' this.Key' this.GetForcedCultureOrDefault ()); " is 140.
Long Statement,Samba.Localization.Extensions,LocImageExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocImageExtension.cs,FormatOutput,The length of the statement  "	System.Windows.Media.Imaging.BitmapSource bitmapSource = System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap (bmpPt' IntPtr.Zero' Int32Rect.Empty' System.Windows.Media.Imaging.BitmapSizeOptions.FromEmptyOptions ()); " is 224.
Long Statement,Samba.Localization.Extensions,LocTextExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocTextExtension.cs,ProvideValue,The length of the statement  "	throw new NotSupportedException (string.Format ("ResourceKey '{0}' returns '{1}' which is not type of System.String"' this.Key' obj.GetType ().FullName)); " is 154.
Long Statement,Samba.Localization.Extensions,LocTextExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocTextExtension.cs,FormatOutput,The length of the statement  "		input = input ?? LocalizeDictionary.Instance.GetLocalizedObject<object> (this.Assembly' this.Dict' this.Key' this.GetForcedCultureOrDefault ()); " is 144.
Long Statement,Samba.Localization.Extensions,LocTextExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocTextExtension.cs,FormatOutput,The length of the statement  "			textMain = string.Format (LocalizeDictionary.Instance.SpecificCulture' textMain' this.formatSegments [0] ?? string.Empty); " is 122.
Long Statement,Samba.Localization.Extensions,LocTextLowerExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocTextLowerExtension.cs,ProvideValue,The length of the statement  "	throw new NotSupportedException (string.Format ("ResourceKey '{0}' returns '{1}' which is not type of System.String"' this.Key' obj.GetType ().FullName)); " is 154.
Long Statement,Samba.Localization.Extensions,LocTextLowerExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocTextLowerExtension.cs,HandleNewValue,The length of the statement  "	object obj = LocalizeDictionary.Instance.GetLocalizedObject<object> (this.Assembly' this.Dict' this.Key' this.GetForcedCultureOrDefault ()); " is 140.
Long Statement,Samba.Localization.Extensions,LocTextUpperExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocTextUpperExtension.cs,ProvideValue,The length of the statement  "	throw new NotSupportedException (string.Format ("ResourceKey '{0}' returns '{1}' which is not type of System.String"' this.Key' obj.GetType ().FullName)); " is 154.
Long Statement,Samba.Localization.Extensions,LocTextUpperExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocTextUpperExtension.cs,HandleNewValue,The length of the statement  "	object obj = LocalizeDictionary.Instance.GetLocalizedObject<object> (this.Assembly' this.Dict' this.Key' this.GetForcedCultureOrDefault ()); " is 140.
Long Statement,Samba.Localization.Extensions,LocThicknessExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocThicknessExtension.cs,ProvideValue,The length of the statement  "	throw new NotSupportedException (string.Format ("ResourceKey '{0}' returns '{1}' which is not type of double"' this.Key' obj.GetType ().FullName)); " is 147.
Long Statement,Samba.Localization.Extensions,LocThicknessExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocThicknessExtension.cs,HandleNewValue,The length of the statement  "	object obj = LocalizeDictionary.Instance.GetLocalizedObject<object> (this.Assembly' this.Dict' this.Key' this.GetForcedCultureOrDefault ()); " is 140.
Long Statement,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The length of the statement  "	return GetLocalizedOddsString (sourceOdds' OddsFormatManager.Instance.OddsFormatType' LocalizeDictionary.Instance.SpecificCulture); " is 131.
Long Statement,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The length of the statement  "			while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) { " is 121.
Long Statement,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,SetBinding,The length of the statement  "		targetObject.SetValue (this.TargetProperty' GetLocalizedOddsString (this.displayValue' this.GetForcedOddsFormatOrDefault ())); " is 126.
Magic Number,Samba.Localization,DateTimeExtensions,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\DateTimeExtensions.cs,NextWeekOfYear,The following statement contains a magic number: return WeekOfYear (dateTime.AddDays (7));  
Magic Number,Samba.Localization,DateTimeExtensions,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\DateTimeExtensions.cs,FirstDateOfWeek,The following statement contains a magic number: return firstMonday.AddDays (weekOfYear * 7);  
Magic Number,Samba.Localization,DateTimeExtensions,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\DateTimeExtensions.cs,StartOfWeek,The following statement contains a magic number: if (diff < 0) {  	diff += 7;  }  
Magic Number,Samba.Localization,DateTimeExtensions,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\DateTimeExtensions.cs,StartOfWeek,The following statement contains a magic number: diff += 7;  
Magic Number,Samba.Localization,DateTimeExtensions,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\DateTimeExtensions.cs,StartOfPastWeek,The following statement contains a magic number: if (diff < 0) {  	diff += 7;  }  
Magic Number,Samba.Localization,DateTimeExtensions,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\DateTimeExtensions.cs,StartOfPastWeek,The following statement contains a magic number: diff += 7;  
Magic Number,Samba.Localization,DateTimeExtensions,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\DateTimeExtensions.cs,StartOfPastWeek,The following statement contains a magic number: return dt.AddDays (-1 * diff).Date.AddDays (-7);  
Magic Number,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,ParseKey,The following statement contains a magic number: if (!string.IsNullOrEmpty (inKey)) {  	string[] split = inKey.Trim ().Split (":".ToCharArray ()' 3);  	// assembly:dict:key  	if (split.Length == 3) {  		outAssembly = !string.IsNullOrEmpty (split [0]) ? split [0] : null;  		outDict = !string.IsNullOrEmpty (split [1]) ? split [1] : null;  		outKey = split [2];  	}  	// dict:key  	// assembly = ExecutingAssembly  	if (split.Length == 2) {  		outDict = !string.IsNullOrEmpty (split [0]) ? split [0] : null;  		outKey = split [1];  	}  	// key  	// assembly = ExecutingAssembly  	// dict = standard resourcedictionary  	if (split.Length == 1) {  		outKey = split [0];  	}  } else {  	// if the passed value is null pr empty' throw an exception if in runtime  	if (!Instance.GetIsInDesignMode ()) {  		throw new ArgumentNullException ("inKey");  	}  }  
Magic Number,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,ParseKey,The following statement contains a magic number: if (!string.IsNullOrEmpty (inKey)) {  	string[] split = inKey.Trim ().Split (":".ToCharArray ()' 3);  	// assembly:dict:key  	if (split.Length == 3) {  		outAssembly = !string.IsNullOrEmpty (split [0]) ? split [0] : null;  		outDict = !string.IsNullOrEmpty (split [1]) ? split [1] : null;  		outKey = split [2];  	}  	// dict:key  	// assembly = ExecutingAssembly  	if (split.Length == 2) {  		outDict = !string.IsNullOrEmpty (split [0]) ? split [0] : null;  		outKey = split [1];  	}  	// key  	// assembly = ExecutingAssembly  	// dict = standard resourcedictionary  	if (split.Length == 1) {  		outKey = split [0];  	}  } else {  	// if the passed value is null pr empty' throw an exception if in runtime  	if (!Instance.GetIsInDesignMode ()) {  		throw new ArgumentNullException ("inKey");  	}  }  
Magic Number,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,ParseKey,The following statement contains a magic number: if (!string.IsNullOrEmpty (inKey)) {  	string[] split = inKey.Trim ().Split (":".ToCharArray ()' 3);  	// assembly:dict:key  	if (split.Length == 3) {  		outAssembly = !string.IsNullOrEmpty (split [0]) ? split [0] : null;  		outDict = !string.IsNullOrEmpty (split [1]) ? split [1] : null;  		outKey = split [2];  	}  	// dict:key  	// assembly = ExecutingAssembly  	if (split.Length == 2) {  		outDict = !string.IsNullOrEmpty (split [0]) ? split [0] : null;  		outKey = split [1];  	}  	// key  	// assembly = ExecutingAssembly  	// dict = standard resourcedictionary  	if (split.Length == 1) {  		outKey = split [0];  	}  } else {  	// if the passed value is null pr empty' throw an exception if in runtime  	if (!Instance.GetIsInDesignMode ()) {  		throw new ArgumentNullException ("inKey");  	}  }  
Magic Number,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,ParseKey,The following statement contains a magic number: if (!string.IsNullOrEmpty (inKey)) {  	string[] split = inKey.Trim ().Split (":".ToCharArray ()' 3);  	// assembly:dict:key  	if (split.Length == 3) {  		outAssembly = !string.IsNullOrEmpty (split [0]) ? split [0] : null;  		outDict = !string.IsNullOrEmpty (split [1]) ? split [1] : null;  		outKey = split [2];  	}  	// dict:key  	// assembly = ExecutingAssembly  	if (split.Length == 2) {  		outDict = !string.IsNullOrEmpty (split [0]) ? split [0] : null;  		outKey = split [1];  	}  	// key  	// assembly = ExecutingAssembly  	// dict = standard resourcedictionary  	if (split.Length == 1) {  		outKey = split [0];  	}  } else {  	// if the passed value is null pr empty' throw an exception if in runtime  	if (!Instance.GetIsInDesignMode ()) {  		throw new ArgumentNullException ("inKey");  	}  }  
Magic Number,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,ParseKey,The following statement contains a magic number: if (split.Length == 3) {  	outAssembly = !string.IsNullOrEmpty (split [0]) ? split [0] : null;  	outDict = !string.IsNullOrEmpty (split [1]) ? split [1] : null;  	outKey = split [2];  }  
Magic Number,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,ParseKey,The following statement contains a magic number: if (split.Length == 3) {  	outAssembly = !string.IsNullOrEmpty (split [0]) ? split [0] : null;  	outDict = !string.IsNullOrEmpty (split [1]) ? split [1] : null;  	outKey = split [2];  }  
Magic Number,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,ParseKey,The following statement contains a magic number: outKey = split [2];  
Magic Number,Samba.Localization.Engine,LocalizeDictionary,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Engine\LocalizeDictionary.cs,ParseKey,The following statement contains a magic number: if (split.Length == 2) {  	outDict = !string.IsNullOrEmpty (split [0]) ? split [0] : null;  	outKey = split [1];  }  
Magic Number,Samba.Localization.Extensions,LocTextExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\LocTextExtension.cs,InitializeLocText,The following statement contains a magic number: this.formatSegments = new string[5];  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: switch (oddsType) {  case OddsFormatType.UK:  	if (sourceOdds <= 0) {  		return "0";  	}  	// versucht den decimal wert in der uk lookup table zu finden.  	// wenn nichts gefunden wurde' wird die quote berechnet.  	string lookupValue;  	if (TryGetUKOddsLookupValue (sourceOdds' out lookupValue)) {  		// wenn der decimal wert gefunden wurde' wird der lookup wert retuniert  		return lookupValue;  	}  	// Fraktionelle Quote  	// �berlegungen:   	// * Die Quote wird mit 2 Nachkommastellen angezeigt' d.h. max /100  	// * Alle Nachkommaquoten m�ssen f�r eine korrekte und zugleich   	// mathematisch maximal gek�rzte Darstellung entweder durch 2 oder durch 5 teilbar sein'  	// weitere K�rzungen wiederum durch 2 oder durch 5'   	// d.h. maximal /2/2/5/5 ( <= Primfaktorenzerlegung von 100 = {2' 2' 5' 5})  	decimal nachkommastellen = (sourceOdds % 1.0m) * 100;  	if (nachkommastellen == 0) {  		// gerade Quote  		return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  	} else {  		int zweier = 0;  		int fuenfer = 0;  		decimal ggT = 1;  		// Gr��ter gemeinsamer Teiler  		while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  			if (nachkommastellen % 2 == 0) {  				++zweier;  				nachkommastellen = nachkommastellen / 2;  				ggT = ggT * 2;  			}  			if (nachkommastellen % 5 == 0) {  				++fuenfer;  				nachkommastellen = nachkommastellen / 5;  				ggT = ggT * 5;  			}  		}  		// hier haben wir den ggT' mit dem 100 geteilt wird  		decimal divisor = 100 / ggT;  		decimal ergebnis = (sourceOdds - 1) * divisor;  		return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  	}  case OddsFormatType.US:  	// bei Quote <=1 -> Fehler  	if (sourceOdds <= 1) {  		return "0";  	} else {  		if (sourceOdds < 2) {  			// negative US-Quote  			return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  		} else {  			// Positive US-Quote  			return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  		}  	}  case OddsFormatType.EU:  	return sourceOdds.ToString ("N2"' specificCulture);  default:  	throw new NotSupportedException ();  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen == 0) {  	// gerade Quote  	return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  } else {  	int zweier = 0;  	int fuenfer = 0;  	decimal ggT = 1;  	// Gr��ter gemeinsamer Teiler  	while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  		if (nachkommastellen % 2 == 0) {  			++zweier;  			nachkommastellen = nachkommastellen / 2;  			ggT = ggT * 2;  		}  		if (nachkommastellen % 5 == 0) {  			++fuenfer;  			nachkommastellen = nachkommastellen / 5;  			ggT = ggT * 5;  		}  	}  	// hier haben wir den ggT' mit dem 100 geteilt wird  	decimal divisor = 100 / ggT;  	decimal ergebnis = (sourceOdds - 1) * divisor;  	return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen == 0) {  	// gerade Quote  	return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  } else {  	int zweier = 0;  	int fuenfer = 0;  	decimal ggT = 1;  	// Gr��ter gemeinsamer Teiler  	while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  		if (nachkommastellen % 2 == 0) {  			++zweier;  			nachkommastellen = nachkommastellen / 2;  			ggT = ggT * 2;  		}  		if (nachkommastellen % 5 == 0) {  			++fuenfer;  			nachkommastellen = nachkommastellen / 5;  			ggT = ggT * 5;  		}  	}  	// hier haben wir den ggT' mit dem 100 geteilt wird  	decimal divisor = 100 / ggT;  	decimal ergebnis = (sourceOdds - 1) * divisor;  	return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen == 0) {  	// gerade Quote  	return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  } else {  	int zweier = 0;  	int fuenfer = 0;  	decimal ggT = 1;  	// Gr��ter gemeinsamer Teiler  	while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  		if (nachkommastellen % 2 == 0) {  			++zweier;  			nachkommastellen = nachkommastellen / 2;  			ggT = ggT * 2;  		}  		if (nachkommastellen % 5 == 0) {  			++fuenfer;  			nachkommastellen = nachkommastellen / 5;  			ggT = ggT * 5;  		}  	}  	// hier haben wir den ggT' mit dem 100 geteilt wird  	decimal divisor = 100 / ggT;  	decimal ergebnis = (sourceOdds - 1) * divisor;  	return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen == 0) {  	// gerade Quote  	return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  } else {  	int zweier = 0;  	int fuenfer = 0;  	decimal ggT = 1;  	// Gr��ter gemeinsamer Teiler  	while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  		if (nachkommastellen % 2 == 0) {  			++zweier;  			nachkommastellen = nachkommastellen / 2;  			ggT = ggT * 2;  		}  		if (nachkommastellen % 5 == 0) {  			++fuenfer;  			nachkommastellen = nachkommastellen / 5;  			ggT = ggT * 5;  		}  	}  	// hier haben wir den ggT' mit dem 100 geteilt wird  	decimal divisor = 100 / ggT;  	decimal ergebnis = (sourceOdds - 1) * divisor;  	return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen == 0) {  	// gerade Quote  	return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  } else {  	int zweier = 0;  	int fuenfer = 0;  	decimal ggT = 1;  	// Gr��ter gemeinsamer Teiler  	while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  		if (nachkommastellen % 2 == 0) {  			++zweier;  			nachkommastellen = nachkommastellen / 2;  			ggT = ggT * 2;  		}  		if (nachkommastellen % 5 == 0) {  			++fuenfer;  			nachkommastellen = nachkommastellen / 5;  			ggT = ggT * 5;  		}  	}  	// hier haben wir den ggT' mit dem 100 geteilt wird  	decimal divisor = 100 / ggT;  	decimal ergebnis = (sourceOdds - 1) * divisor;  	return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen == 0) {  	// gerade Quote  	return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  } else {  	int zweier = 0;  	int fuenfer = 0;  	decimal ggT = 1;  	// Gr��ter gemeinsamer Teiler  	while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  		if (nachkommastellen % 2 == 0) {  			++zweier;  			nachkommastellen = nachkommastellen / 2;  			ggT = ggT * 2;  		}  		if (nachkommastellen % 5 == 0) {  			++fuenfer;  			nachkommastellen = nachkommastellen / 5;  			ggT = ggT * 5;  		}  	}  	// hier haben wir den ggT' mit dem 100 geteilt wird  	decimal divisor = 100 / ggT;  	decimal ergebnis = (sourceOdds - 1) * divisor;  	return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen == 0) {  	// gerade Quote  	return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  } else {  	int zweier = 0;  	int fuenfer = 0;  	decimal ggT = 1;  	// Gr��ter gemeinsamer Teiler  	while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  		if (nachkommastellen % 2 == 0) {  			++zweier;  			nachkommastellen = nachkommastellen / 2;  			ggT = ggT * 2;  		}  		if (nachkommastellen % 5 == 0) {  			++fuenfer;  			nachkommastellen = nachkommastellen / 5;  			ggT = ggT * 5;  		}  	}  	// hier haben wir den ggT' mit dem 100 geteilt wird  	decimal divisor = 100 / ggT;  	decimal ergebnis = (sourceOdds - 1) * divisor;  	return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen == 0) {  	// gerade Quote  	return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  } else {  	int zweier = 0;  	int fuenfer = 0;  	decimal ggT = 1;  	// Gr��ter gemeinsamer Teiler  	while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  		if (nachkommastellen % 2 == 0) {  			++zweier;  			nachkommastellen = nachkommastellen / 2;  			ggT = ggT * 2;  		}  		if (nachkommastellen % 5 == 0) {  			++fuenfer;  			nachkommastellen = nachkommastellen / 5;  			ggT = ggT * 5;  		}  	}  	// hier haben wir den ggT' mit dem 100 geteilt wird  	decimal divisor = 100 / ggT;  	decimal ergebnis = (sourceOdds - 1) * divisor;  	return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen == 0) {  	// gerade Quote  	return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  } else {  	int zweier = 0;  	int fuenfer = 0;  	decimal ggT = 1;  	// Gr��ter gemeinsamer Teiler  	while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  		if (nachkommastellen % 2 == 0) {  			++zweier;  			nachkommastellen = nachkommastellen / 2;  			ggT = ggT * 2;  		}  		if (nachkommastellen % 5 == 0) {  			++fuenfer;  			nachkommastellen = nachkommastellen / 5;  			ggT = ggT * 5;  		}  	}  	// hier haben wir den ggT' mit dem 100 geteilt wird  	decimal divisor = 100 / ggT;  	decimal ergebnis = (sourceOdds - 1) * divisor;  	return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen == 0) {  	// gerade Quote  	return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  } else {  	int zweier = 0;  	int fuenfer = 0;  	decimal ggT = 1;  	// Gr��ter gemeinsamer Teiler  	while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  		if (nachkommastellen % 2 == 0) {  			++zweier;  			nachkommastellen = nachkommastellen / 2;  			ggT = ggT * 2;  		}  		if (nachkommastellen % 5 == 0) {  			++fuenfer;  			nachkommastellen = nachkommastellen / 5;  			ggT = ggT * 5;  		}  	}  	// hier haben wir den ggT' mit dem 100 geteilt wird  	decimal divisor = 100 / ggT;  	decimal ergebnis = (sourceOdds - 1) * divisor;  	return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen == 0) {  	// gerade Quote  	return string.Format (specificCulture' "{0:N0}/1"' sourceOdds - 1);  } else {  	int zweier = 0;  	int fuenfer = 0;  	decimal ggT = 1;  	// Gr��ter gemeinsamer Teiler  	while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  		if (nachkommastellen % 2 == 0) {  			++zweier;  			nachkommastellen = nachkommastellen / 2;  			ggT = ggT * 2;  		}  		if (nachkommastellen % 5 == 0) {  			++fuenfer;  			nachkommastellen = nachkommastellen / 5;  			ggT = ggT * 5;  		}  	}  	// hier haben wir den ggT' mit dem 100 geteilt wird  	decimal divisor = 100 / ggT;  	decimal ergebnis = (sourceOdds - 1) * divisor;  	return string.Format (specificCulture' "{0:N0}/{1:N0}"' ergebnis' divisor);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  	if (nachkommastellen % 2 == 0) {  		++zweier;  		nachkommastellen = nachkommastellen / 2;  		ggT = ggT * 2;  	}  	if (nachkommastellen % 5 == 0) {  		++fuenfer;  		nachkommastellen = nachkommastellen / 5;  		ggT = ggT * 5;  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  	if (nachkommastellen % 2 == 0) {  		++zweier;  		nachkommastellen = nachkommastellen / 2;  		ggT = ggT * 2;  	}  	if (nachkommastellen % 5 == 0) {  		++fuenfer;  		nachkommastellen = nachkommastellen / 5;  		ggT = ggT * 5;  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  	if (nachkommastellen % 2 == 0) {  		++zweier;  		nachkommastellen = nachkommastellen / 2;  		ggT = ggT * 2;  	}  	if (nachkommastellen % 5 == 0) {  		++fuenfer;  		nachkommastellen = nachkommastellen / 5;  		ggT = ggT * 5;  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  	if (nachkommastellen % 2 == 0) {  		++zweier;  		nachkommastellen = nachkommastellen / 2;  		ggT = ggT * 2;  	}  	if (nachkommastellen % 5 == 0) {  		++fuenfer;  		nachkommastellen = nachkommastellen / 5;  		ggT = ggT * 5;  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  	if (nachkommastellen % 2 == 0) {  		++zweier;  		nachkommastellen = nachkommastellen / 2;  		ggT = ggT * 2;  	}  	if (nachkommastellen % 5 == 0) {  		++fuenfer;  		nachkommastellen = nachkommastellen / 5;  		ggT = ggT * 5;  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  	if (nachkommastellen % 2 == 0) {  		++zweier;  		nachkommastellen = nachkommastellen / 2;  		ggT = ggT * 2;  	}  	if (nachkommastellen % 5 == 0) {  		++fuenfer;  		nachkommastellen = nachkommastellen / 5;  		ggT = ggT * 5;  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  	if (nachkommastellen % 2 == 0) {  		++zweier;  		nachkommastellen = nachkommastellen / 2;  		ggT = ggT * 2;  	}  	if (nachkommastellen % 5 == 0) {  		++fuenfer;  		nachkommastellen = nachkommastellen / 5;  		ggT = ggT * 5;  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  	if (nachkommastellen % 2 == 0) {  		++zweier;  		nachkommastellen = nachkommastellen / 2;  		ggT = ggT * 2;  	}  	if (nachkommastellen % 5 == 0) {  		++fuenfer;  		nachkommastellen = nachkommastellen / 5;  		ggT = ggT * 5;  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  	if (nachkommastellen % 2 == 0) {  		++zweier;  		nachkommastellen = nachkommastellen / 2;  		ggT = ggT * 2;  	}  	if (nachkommastellen % 5 == 0) {  		++fuenfer;  		nachkommastellen = nachkommastellen / 5;  		ggT = ggT * 5;  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: while ((nachkommastellen > 1 && zweier < 2 && fuenfer < 2) && (nachkommastellen % 2 == 0 || nachkommastellen % 5 == 0)) {  	if (nachkommastellen % 2 == 0) {  		++zweier;  		nachkommastellen = nachkommastellen / 2;  		ggT = ggT * 2;  	}  	if (nachkommastellen % 5 == 0) {  		++fuenfer;  		nachkommastellen = nachkommastellen / 5;  		ggT = ggT * 5;  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen % 2 == 0) {  	++zweier;  	nachkommastellen = nachkommastellen / 2;  	ggT = ggT * 2;  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen % 2 == 0) {  	++zweier;  	nachkommastellen = nachkommastellen / 2;  	ggT = ggT * 2;  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen % 2 == 0) {  	++zweier;  	nachkommastellen = nachkommastellen / 2;  	ggT = ggT * 2;  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: nachkommastellen = nachkommastellen / 2;  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: ggT = ggT * 2;  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen % 5 == 0) {  	++fuenfer;  	nachkommastellen = nachkommastellen / 5;  	ggT = ggT * 5;  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen % 5 == 0) {  	++fuenfer;  	nachkommastellen = nachkommastellen / 5;  	ggT = ggT * 5;  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (nachkommastellen % 5 == 0) {  	++fuenfer;  	nachkommastellen = nachkommastellen / 5;  	ggT = ggT * 5;  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: nachkommastellen = nachkommastellen / 5;  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: ggT = ggT * 5;  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (sourceOdds <= 1) {  	return "0";  } else {  	if (sourceOdds < 2) {  		// negative US-Quote  		return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  	} else {  		// Positive US-Quote  		return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (sourceOdds <= 1) {  	return "0";  } else {  	if (sourceOdds < 2) {  		// negative US-Quote  		return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  	} else {  		// Positive US-Quote  		return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (sourceOdds <= 1) {  	return "0";  } else {  	if (sourceOdds < 2) {  		// negative US-Quote  		return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  	} else {  		// Positive US-Quote  		return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  	}  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (sourceOdds < 2) {  	// negative US-Quote  	return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  } else {  	// Positive US-Quote  	return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (sourceOdds < 2) {  	// negative US-Quote  	return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  } else {  	// Positive US-Quote  	return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: if (sourceOdds < 2) {  	// negative US-Quote  	return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  } else {  	// Positive US-Quote  	return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  }  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: return (-100 / (sourceOdds - 1)).ToString ("N0"' specificCulture);  
Magic Number,Samba.Localization.Extensions,OddsFormatExtension,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Localization\Extensions\OddsFormatExtension.cs,GetLocalizedOddsString,The following statement contains a magic number: return string.Format (specificCulture' "+{0:N0}"' (sourceOdds - 1) * 100);  
