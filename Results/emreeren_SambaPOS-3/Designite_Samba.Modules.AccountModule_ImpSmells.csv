Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,Cyclomatic complexity of the method is 9
Long Parameter List,Samba.Modules.AccountModule,AccountSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountSelectorViewModel.cs,AccountSelectorViewModel,The method has 5 parameters.
Long Parameter List,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,AccountModule,The method has 9 parameters.
Long Identifier,Samba.Modules.AccountModule.Dashboard,AccountTransactionDocumentAccountMapViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountTransactionDocumentAccountMapViewModel.cs,AccountTransactionDocumentAccountMapViewModel,The length of the parameter accountTransactionDocumentAccountMap is 36.
Long Statement,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,UpdateTemplates,The length of the statement  "		var templates = _applicationState.GetAccountTransactionDocumentTypes (SelectedAccount.AccountTypeId).Where (x => !string.IsNullOrEmpty (x.ButtonHeader) && x.CanMakeAccountTransaction (SelectedAccount)); " is 202.
Long Statement,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,DisplayTransactions,The length of the statement  "	var transactionData = _accountService.GetAccountTransactionSummary (SelectedAccount' _applicationState.CurrentWorkPeriod' Start' End); " is 134.
Long Statement,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,OnDisplayTicket,The length of the statement  "			string expectedEvent = _currentOperationRequest != null ? _currentOperationRequest.GetExpectedEvent () : EventTopicNames.DisplayAccountTransactions; " is 148.
Long Statement,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,OnDisplayTicket,The length of the statement  "			ExtensionMethods.PublishIdEvent (ticket.Id' EventTopicNames.DisplayTicket' () => CommonEventPublisher.PublishEntityOperation (new AccountData (SelectedAccount)' EventTopicNames.DisplayAccountTransactions' expectedEvent)); " is 221.
Long Statement,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,OnPrintAccount,The length of the statement  "	_reportService.PrintAccountTransactions (SelectedAccount' _applicationState.CurrentWorkPeriod' _applicationState.GetReportPrinter ()' FilterType); " is 146.
Long Statement,Samba.Modules.AccountModule,AccountRowViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountRowViewModel.cs,GetAccountSelectors,The length of the statement  "	var accountMap = documentType.AccountTransactionDocumentAccountMaps.FirstOrDefault (x => x.AccountId == selectedAccount.Id); " is 124.
Long Statement,Samba.Modules.AccountModule,AccountRowViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountRowViewModel.cs,GetAccountSelectors,The length of the statement  "	return accountMap != null ? documentType.GetNeededAccountTypes ().Select (x => new AccountSelectViewModel (accountService' cacheService.GetAccountTypeById (x)' accountMap.MappedAccountId' accountMap.MappedAccountName)) : documentType.GetNeededAccountTypes ().Select (x => new AccountSelectViewModel (accountService' cacheService.GetAccountTypeById (x))); " is 354.
Long Statement,Samba.Modules.AccountModule,BatchDocumentCreatorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\BatchDocumentCreatorViewModel.cs,CreateDocument,The length of the statement  "	var document = _accountService.CreateTransactionDocument (accountRowViewModel.Account' SelectedDocumentType' accountRowViewModel.Description' accountRowViewModel.Amount' accountRowViewModel.TargetAccounts.Select (y => new Account { " is 231.
Long Statement,Samba.Modules.AccountModule,BatchDocumentCreatorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\BatchDocumentCreatorViewModel.cs,Update,The length of the statement  "	Accounts.AddRange (accounts.AsParallel ().SetCulture ().Select (x => new AccountRowViewModel (x' value' _accountService' _cacheService))); " is 138.
Long Statement,Samba.Modules.AccountModule,AccountSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountSelectorViewModel.cs,OnShowAccountDetails,The length of the statement  "	CommonEventPublisher.PublishEntityOperation (new AccountData (SelectedAccount.AccountId)' EventTopicNames.DisplayAccountTransactions' EventTopicNames.ActivateAccountSelector); " is 175.
Long Statement,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,OnInitialization,The length of the statement  "	EventServiceFactory.EventService.GetEvent<GenericEvent<AccountTransactionDocumentType>> ().Subscribe (OnTransactionDocumentEvent); " is 130.
Long Statement,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,OnInitialization,The length of the statement  "	EventServiceFactory.EventService.GetEvent<GenericEvent<OperationRequest<AccountData>>> ().Subscribe (OnAccountDataEvent); " is 121.
Long Statement,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,CanNavigate,The length of the statement  "	return _userService.IsUserPermittedFor (PermissionNames.NavigateAccountView) && _applicationState.CurrentWorkPeriod != null; " is 124.
Long Statement,Samba.Modules.AccountModule,DocumentCreatorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\DocumentCreatorViewModel.cs,GetAccountSelectors,The length of the statement  "	return map != null ? DocumentType.GetNeededAccountTypes ().Select (x => new AccountSelectViewModel (_accountService' _cacheService.GetAccountTypeById (x)' map.MappedAccountId' map.MappedAccountName)) : DocumentType.GetNeededAccountTypes ().Select (x => new AccountSelectViewModel (_accountService' _cacheService.GetAccountTypeById (x))); " is 337.
Long Statement,Samba.Modules.AccountModule,DocumentCreatorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\DocumentCreatorViewModel.cs,OnCancel,The length of the statement  "	CommonEventPublisher.PublishEntityOperation (new AccountData (SelectedAccount)' EventTopicNames.DisplayAccountTransactions); " is 124.
Long Statement,Samba.Modules.AccountModule,DocumentCreatorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\DocumentCreatorViewModel.cs,Action,The length of the statement  "		CommonEventPublisher.PublishEntityOperation (new AccountData (SelectedAccount)' EventTopicNames.DisplayAccountTransactions); " is 124.
Long Statement,Samba.Modules.AccountModule,DocumentCreatorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\DocumentCreatorViewModel.cs,CreateDocument,The length of the statement  "	return _accountService.CreateTransactionDocument (SelectedAccount' DocumentType' description' Amount' AccountSelectors.Select (x => new Account { " is 145.
Long Statement,Samba.Modules.AccountModule.ActionProcessors,CreateAccountTransaction,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\ActionProcessors\CreateAccountTransaction.cs,Process,The length of the statement  "				var ts = ticket.TicketEntities.FirstOrDefault (x => _ticketService.CanMakeAccountTransaction (x' accountTransactionType' 0)); " is 125.
Long Statement,Samba.Modules.AccountModule.Dashboard,AccountScreenViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountScreenViewModel.cs,OnSelectAutomationCommand,The length of the statement  "	var values = _dataService.GetAutomationCommands ().Where (x => selectedItems.All (y => y.AutomationCommandName != x.Name)).Select (x => new AccountScreenAutmationCommandMap { " is 174.
Long Statement,Samba.Modules.AccountModule.Dashboard,AccountScreenViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountScreenViewModel.cs,OnSelectAutomationCommand,The length of the statement  "	var selectedValues = InteractionService.UserIntraction.ChooseValuesFrom (values' selectedItems.ToList<IOrderable> ()' Resources.AutomationCommand.ToPlural ()' string.Format (Resources.SelectItemsFor_f' Resources.AutomationCommand.ToPlural ()' Model.Name' Resources.AccountScreen)' Resources.AutomationCommand' Resources.AutomationCommand.ToPlural ()); " is 351.
Long Statement,Samba.Modules.AccountModule.Dashboard,AccountScreenViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountScreenViewModel.cs,OnAddScreenFilter,The length of the statement  "	var values = AccountTypes.Where (x => selectedItems.All (y => y.AccountTypeName != x.Name)).Select (x => new AccountScreenValue { " is 129.
Long Statement,Samba.Modules.AccountModule.Dashboard,AccountScreenViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountScreenViewModel.cs,OnAddScreenFilter,The length of the statement  "	var selectedValues = InteractionService.UserIntraction.ChooseValuesFrom (values' selectedItems.ToList<IOrderable> ()' Resources.AccountType.ToPlural ()' string.Format (Resources.SelectItemsFor_f' Resources.AccountType.ToPlural ()' Model.Name' Resources.AccountScreen)' Resources.AccountType' Resources.AccountType.ToPlural ()); " is 327.
Long Statement,Samba.Modules.AccountModule.Dashboard,AccountTransactionDocumentTypeViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountTransactionDocumentTypeViewModel.cs,CreateAccountMaps,The length of the statement  "	return new ObservableCollection<AccountTransactionDocumentAccountMapViewModel> (Model.AccountTransactionDocumentAccountMaps.Select (x => new AccountTransactionDocumentAccountMapViewModel (_accountService' x' MasterAccountType' NeededAccountType))); " is 248.
Long Statement,Samba.Modules.AccountModule.Dashboard,AccountTransactionDocumentTypeViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountTransactionDocumentTypeViewModel.cs,OnAddAccountMap,The length of the statement  "	AccountTransactionDocumentAccountMaps.Add (new AccountTransactionDocumentAccountMapViewModel (_accountService' result' MasterAccountType' NeededAccountType)); " is 158.
Long Statement,Samba.Modules.AccountModule.Dashboard,AccountTransactionDocumentTypeViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountTransactionDocumentTypeViewModel.cs,OnAddTransactionType,The length of the statement  "	var selectedValues = InteractionService.UserIntraction.ChooseValuesFrom (Workspace.All<AccountTransactionType> ().ToList<IOrderable> ()' Model.TransactionTypes.ToList<IOrderable> ()' Resources.AccountTransactionType.ToPlural ()' string.Format (Resources.SelectItemsFor_f' Resources.AccountTransactionType.ToPlural ()' Model.Name' Resources.DocumentType)' Resources.AccountTransactionType' Resources.AccountTransactionType.ToPlural ()); " is 435.
Long Statement,Samba.Modules.AccountModule.Dashboard,AccountTransactionDocumentTypeViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountTransactionDocumentTypeViewModel.cs,Initialize,The length of the statement  "	MapController = new MapController<AccountTransactionDocumentTypeMap' AbstractMapViewModel<AccountTransactionDocumentTypeMap>> (Model.AccountTransactionDocumentTypeMaps' Workspace); " is 180.
Long Statement,Samba.Modules.AccountModule.Dashboard,AccountTransactionDocumentView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountTransactionDocumentView.xaml.cs,UIElement_OnPreviewKeyDown,The length of the statement  "	if (e.Key == Key.Insert || (e.Key == Key.Down && ViewModel.SelectedTransaction == ViewModel.AccountTransactions.LastOrDefault () && ViewModel.SelectedTransaction != null && ViewModel.SelectedTransaction.AccountTransactionType.Id > 0 && ViewModel.SelectedTransaction.Amount > 0)) { " is 280.
Long Statement,Samba.Modules.AccountModule.Dashboard,AccountTransactionTypeViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountTransactionTypeViewModel.cs,GetSoruceAccounts,The length of the statement  "	return SourceAccountType != null ? Workspace.All<Account> (x => x.AccountTypeId == SourceAccountType.Id).ToList () : null; " is 122.
Long Statement,Samba.Modules.AccountModule.Dashboard,AccountTransactionTypeViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountTransactionTypeViewModel.cs,GetTargetAccounts,The length of the statement  "	return TargetAccountType != null ? Workspace.All<Account> (x => x.AccountTypeId == TargetAccountType.Id).ToList () : null; " is 122.
Complex Conditional,Samba.Modules.AccountModule.Dashboard,AccountTransactionDocumentView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountTransactionDocumentView.xaml.cs,UIElement_OnPreviewKeyDown,The conditional expression  "e.Key == Key.Insert || (e.Key == Key.Down && ViewModel.SelectedTransaction == ViewModel.AccountTransactions.LastOrDefault () && ViewModel.SelectedTransaction != null && ViewModel.SelectedTransaction.AccountTransactionType.Id > 0 && ViewModel.SelectedTransaction.Amount > 0)"  is complex.
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: if (vals.Count == 2)  	vals.Add (DateTime.Now.Year);  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: if (vals [2] < 1) {  	vals [2] = DateTime.Now.Year;  }  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: if (vals [2] < 1) {  	vals [2] = DateTime.Now.Year;  }  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: vals [2] = DateTime.Now.Year;  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: if (vals [2] < 1000) {  	vals [2] += 2000;  }  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: if (vals [2] < 1000) {  	vals [2] += 2000;  }  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: if (vals [2] < 1000) {  	vals [2] += 2000;  }  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: if (vals [2] < 1000) {  	vals [2] += 2000;  }  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: vals [2] += 2000;  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: vals [2] += 2000;  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: if (vals [1] > 12) {  	vals [1] = 12;  }  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: if (vals [1] > 12) {  	vals [1] = 12;  }  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: vals [1] = 12;  
Magic Number,Samba.Modules.AccountModule,AccountDetailsViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountDetailsViewModel.cs,StrToDate,The following statement contains a magic number: return new DateTime (vals [2]' vals [1]' vals [0]);  
Magic Number,Samba.Modules.AccountModule,BatchDocumentCreatorView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\BatchDocumentCreatorView.xaml.cs,viewModel_OnUpdate,The following statement contains a magic number: MainDataGrid.Columns.Where (x => x.MinWidth == 59).ToList ().ForEach (x => MainDataGrid.Columns.Remove (x));  
Magic Number,Samba.Modules.AccountModule,BatchDocumentCreatorView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\BatchDocumentCreatorView.xaml.cs,viewModel_OnUpdate,The following statement contains a magic number: if (d != null) {  	var i = 2;  	foreach (var accountType in d.GetNeededAccountTypes ()) {  		var accountNameBinding = new Binding (string.Format ("[{0}].AccountName"' accountType.Id)) {  			UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged  		};  		var itemsSourceBinding = new Binding (string.Format ("[{0}].AccountNames"' accountType.Id));  		var dgtc = new DataGridTemplateColumn {  			MinWidth = 59'  			Header = accountType.Name'  		};  		var ct = new FrameworkElementFactory (typeof(TextBlock));  		ct.SetValue (MarginProperty' new Thickness (3));  		ct.SetBinding (TextBlock.TextProperty' accountNameBinding);  		dgtc.CellTemplate = new DataTemplate {  			VisualTree = ct  		};  		var cte = new FrameworkElementFactory (typeof(ComboBox));  		cte.SetValue (ComboBox.IsEditableProperty' true);  		cte.SetBinding (ItemsControl.ItemsSourceProperty' itemsSourceBinding);  		cte.SetBinding (ComboBox.TextProperty' accountNameBinding);  		dgtc.CellEditingTemplate = new DataTemplate {  			VisualTree = cte  		};  		MainDataGrid.Columns.Insert (i' dgtc);  		i++;  	}  }  
Magic Number,Samba.Modules.AccountModule,BatchDocumentCreatorView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\BatchDocumentCreatorView.xaml.cs,viewModel_OnUpdate,The following statement contains a magic number: if (d != null) {  	var i = 2;  	foreach (var accountType in d.GetNeededAccountTypes ()) {  		var accountNameBinding = new Binding (string.Format ("[{0}].AccountName"' accountType.Id)) {  			UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged  		};  		var itemsSourceBinding = new Binding (string.Format ("[{0}].AccountNames"' accountType.Id));  		var dgtc = new DataGridTemplateColumn {  			MinWidth = 59'  			Header = accountType.Name'  		};  		var ct = new FrameworkElementFactory (typeof(TextBlock));  		ct.SetValue (MarginProperty' new Thickness (3));  		ct.SetBinding (TextBlock.TextProperty' accountNameBinding);  		dgtc.CellTemplate = new DataTemplate {  			VisualTree = ct  		};  		var cte = new FrameworkElementFactory (typeof(ComboBox));  		cte.SetValue (ComboBox.IsEditableProperty' true);  		cte.SetBinding (ItemsControl.ItemsSourceProperty' itemsSourceBinding);  		cte.SetBinding (ComboBox.TextProperty' accountNameBinding);  		dgtc.CellEditingTemplate = new DataTemplate {  			VisualTree = cte  		};  		MainDataGrid.Columns.Insert (i' dgtc);  		i++;  	}  }  
Magic Number,Samba.Modules.AccountModule,BatchDocumentCreatorView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\BatchDocumentCreatorView.xaml.cs,viewModel_OnUpdate,The following statement contains a magic number: if (d != null) {  	var i = 2;  	foreach (var accountType in d.GetNeededAccountTypes ()) {  		var accountNameBinding = new Binding (string.Format ("[{0}].AccountName"' accountType.Id)) {  			UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged  		};  		var itemsSourceBinding = new Binding (string.Format ("[{0}].AccountNames"' accountType.Id));  		var dgtc = new DataGridTemplateColumn {  			MinWidth = 59'  			Header = accountType.Name'  		};  		var ct = new FrameworkElementFactory (typeof(TextBlock));  		ct.SetValue (MarginProperty' new Thickness (3));  		ct.SetBinding (TextBlock.TextProperty' accountNameBinding);  		dgtc.CellTemplate = new DataTemplate {  			VisualTree = ct  		};  		var cte = new FrameworkElementFactory (typeof(ComboBox));  		cte.SetValue (ComboBox.IsEditableProperty' true);  		cte.SetBinding (ItemsControl.ItemsSourceProperty' itemsSourceBinding);  		cte.SetBinding (ComboBox.TextProperty' accountNameBinding);  		dgtc.CellEditingTemplate = new DataTemplate {  			VisualTree = cte  		};  		MainDataGrid.Columns.Insert (i' dgtc);  		i++;  	}  }  
Magic Number,Samba.Modules.AccountModule,BatchDocumentCreatorView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\BatchDocumentCreatorView.xaml.cs,viewModel_OnUpdate,The following statement contains a magic number: foreach (var accountType in d.GetNeededAccountTypes ()) {  	var accountNameBinding = new Binding (string.Format ("[{0}].AccountName"' accountType.Id)) {  		UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged  	};  	var itemsSourceBinding = new Binding (string.Format ("[{0}].AccountNames"' accountType.Id));  	var dgtc = new DataGridTemplateColumn {  		MinWidth = 59'  		Header = accountType.Name'  	};  	var ct = new FrameworkElementFactory (typeof(TextBlock));  	ct.SetValue (MarginProperty' new Thickness (3));  	ct.SetBinding (TextBlock.TextProperty' accountNameBinding);  	dgtc.CellTemplate = new DataTemplate {  		VisualTree = ct  	};  	var cte = new FrameworkElementFactory (typeof(ComboBox));  	cte.SetValue (ComboBox.IsEditableProperty' true);  	cte.SetBinding (ItemsControl.ItemsSourceProperty' itemsSourceBinding);  	cte.SetBinding (ComboBox.TextProperty' accountNameBinding);  	dgtc.CellEditingTemplate = new DataTemplate {  		VisualTree = cte  	};  	MainDataGrid.Columns.Insert (i' dgtc);  	i++;  }  
Magic Number,Samba.Modules.AccountModule,BatchDocumentCreatorView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\BatchDocumentCreatorView.xaml.cs,viewModel_OnUpdate,The following statement contains a magic number: foreach (var accountType in d.GetNeededAccountTypes ()) {  	var accountNameBinding = new Binding (string.Format ("[{0}].AccountName"' accountType.Id)) {  		UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged  	};  	var itemsSourceBinding = new Binding (string.Format ("[{0}].AccountNames"' accountType.Id));  	var dgtc = new DataGridTemplateColumn {  		MinWidth = 59'  		Header = accountType.Name'  	};  	var ct = new FrameworkElementFactory (typeof(TextBlock));  	ct.SetValue (MarginProperty' new Thickness (3));  	ct.SetBinding (TextBlock.TextProperty' accountNameBinding);  	dgtc.CellTemplate = new DataTemplate {  		VisualTree = ct  	};  	var cte = new FrameworkElementFactory (typeof(ComboBox));  	cte.SetValue (ComboBox.IsEditableProperty' true);  	cte.SetBinding (ItemsControl.ItemsSourceProperty' itemsSourceBinding);  	cte.SetBinding (ComboBox.TextProperty' accountNameBinding);  	dgtc.CellEditingTemplate = new DataTemplate {  		VisualTree = cte  	};  	MainDataGrid.Columns.Insert (i' dgtc);  	i++;  }  
Magic Number,Samba.Modules.AccountModule,BatchDocumentCreatorView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\BatchDocumentCreatorView.xaml.cs,viewModel_OnUpdate,The following statement contains a magic number: ct.SetValue (MarginProperty' new Thickness (3));  
Magic Number,Samba.Modules.AccountModule,AccountSelectorViewModel,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountSelectorViewModel.cs,OnAutomationCommandSelected,The following statement contains a magic number: if (obj.AutomationCommandValueType == 2)//Entity Id List   {  	value = string.Join ("'"' _entityService.GetEntitiesByAccountId (SelectedAccount.AccountId).Select (x => x.Id));  }  
Magic Number,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,AccountModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<AccountTypeViewModel' AccountType>> (Resources.AccountType.ToPlural ()' Resources.Accounts' 40);  
Magic Number,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,AccountModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<AccountViewModel' Account>> (Resources.Account.ToPlural ()' Resources.Accounts' 40);  
Magic Number,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,AccountModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<AccountScreenViewModel' AccountScreen>> (Resources.AccountScreen.ToPlural ()' Resources.Accounts' 40);  
Magic Number,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,AccountModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<AccountTransactionTypeViewModel' AccountTransactionType>> (Resources.TransactionType.ToPlural ()' Resources.Accounts' 40);  
Magic Number,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,AccountModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<AccountTransactionDocumentTypeViewModel' AccountTransactionDocumentType>> (Resources.DocumentType.ToPlural ()' Resources.Accounts' 40);  
Magic Number,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,AccountModule,The following statement contains a magic number: AddDashboardCommand<EntityCollectionViewModelBase<AccountTransactionDocumentViewModel' AccountTransactionDocument>> (Resources.Transaction.ToPlural ()' Resources.Accounts' 40);  
Magic Number,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,AccountModule,The following statement contains a magic number: SetNavigationCommand (Resources.Accounts' Resources.Common' "Images/Xls.png"' 30);  
Magic Number,Samba.Modules.AccountModule.Dashboard,AccountTransactionDocumentView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountTransactionDocumentView.xaml.cs,ViewModel_RowInserted,The following statement contains a magic number: if (ViewModel.SelectedTransaction != null && ViewModel.SelectedTransaction.SourceAccountId == 0)  	column = 1;  else if (ViewModel.SelectedTransaction != null && ViewModel.SelectedTransaction.TargetAccountId == 0)  	column = 2;  
Magic Number,Samba.Modules.AccountModule.Dashboard,AccountTransactionDocumentView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountTransactionDocumentView.xaml.cs,ViewModel_RowInserted,The following statement contains a magic number: if (ViewModel.SelectedTransaction != null && ViewModel.SelectedTransaction.TargetAccountId == 0)  	column = 2;  
Magic Number,Samba.Modules.AccountModule.Dashboard,AccountTransactionDocumentView,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\Dashboard\AccountTransactionDocumentView.xaml.cs,ViewModel_RowInserted,The following statement contains a magic number: column = 2;  
Missing Default,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,OnTransactionDocumentEvent,The following switch statement is missing a default case: switch (ep.Topic) {  case EventTopicNames.BatchCreateDocument:  	_batchDocumentCreatorViewModel.Update (ep.Value);  	ActivateBatchDocumentCreator ();  	break;  case EventTopicNames.BatchDocumentsCreated:  	ActivateAccountSelector ();  	break;  }  
Missing Default,Samba.Modules.AccountModule,AccountModule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Modules.AccountModule\AccountModule.cs,OnAccountDataEvent,The following switch statement is missing a default case: switch (ep.Topic) {  case EventTopicNames.DisplayAccountTransactions:  	ActivateAccountTransactions ();  	break;  case EventTopicNames.ActivateAccountSelector:  	ActivateAccountSelector ();  	break;  }  
