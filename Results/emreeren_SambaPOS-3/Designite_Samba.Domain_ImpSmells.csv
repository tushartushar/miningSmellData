Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Samba.Domain.Models.Accounts,AccountTransactionDocumentType,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransactionDocumentType.cs,CreateDocument,Cyclomatic complexity of the method is 8
Complex Method,Samba.Domain.Models.Automation,RuleConstraintValue,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\RuleConstraintValue.cs,Compare,Cyclomatic complexity of the method is 15
Complex Method,Samba.Domain.Models.Tickets,OrderMerger,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderMerger.cs,CanMergeOrders,Cyclomatic complexity of the method is 10
Complex Method,Samba.Domain.Models.Tickets,Calculation,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,Cyclomatic complexity of the method is 12
Long Parameter List,Samba.Domain.Models.Accounts,AccountTransactionDocumentType,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransactionDocumentType.cs,CreateDocument,The method has 6 parameters. Parameters: account' description' amount' exchangeRate' accounts' currencies
Long Parameter List,Samba.Domain.Models.Inventory,InventoryTransactionDocument,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\InventoryTransactionDocument.cs,Add,The method has 6 parameters. Parameters: transactionType' inventoryItem' price' quantity' unit' multiplier
Long Parameter List,Samba.Domain.Models.Tickets,TaxValue,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\TaxValue.cs,GetTaxAmount,The method has 5 parameters. Parameters: taxIncluded' price' totalRate' plainSum' preTaxServices
Long Parameter List,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddOrder,The method has 8 parameters. Parameters: template' department' userName' menuItem' taxTemplates' portion' priceTag' timer
Long Parameter List,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddPayment,The method has 5 parameters. Parameters: paymentType' account' amount' exchangeRate' userId
Long Parameter List,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddChangePayment,The method has 5 parameters. Parameters: changePaymentType' account' amount' exchangeRate' userId
Long Parameter List,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,UpdateEntity,The method has 6 parameters. Parameters: entityTypeId' entityId' entityName' accountTypeId' accountId' entityCustomData
Long Parameter List,Samba.Domain.Models.Tickets,Order,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,UpdateMenuItem,The method has 6 parameters. Parameters: userName' menuItem' taxTemplates' portion' priceTag' quantity
Long Parameter List,Samba.Domain.Models.Tickets,Order,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,TagOrder,The method has 5 parameters. Parameters: orderTagGroup' orderTag' userId' tagIndex' tagNote
Long Parameter List,Samba.Domain.Models.Tickets,Order,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,SetStateValue,The method has 6 parameters. Parameters: groupName' groupOrder' state' stateOrder' stateValue' userId
Long Identifier,Samba.Domain.Builders,AccountTransactionTypeBuilderFor<T>,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Builders\AccountTransactionTypeBuilderFor.cs,,The length of the parameter _accountTransactionTypeBuilder is 30.
Long Identifier,Samba.Domain.Models.Accounts,AccountTransactionDocumentType,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransactionDocumentType.cs,,The length of the parameter _accountTransactionDocumentTypeMaps is 35.
Long Identifier,Samba.Domain.Models.Accounts,AccountTransactionDocumentType,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransactionDocumentType.cs,,The length of the parameter _accountTransactionDocumentAccountMaps is 38.
Long Identifier,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetSum,The length of the parameter taxTempleteAccountTransactionTypeId is 35.
Long Identifier,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetPlainSum,The length of the parameter taxTempleteAccountTransactionTypeId is 35.
Long Identifier,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTaxTotal,The length of the parameter taxTemplateAccountTransactionTypeId is 35.
Long Statement,Samba.Domain.Models.Accounts,AccountTransaction,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransaction.cs,Create,The length of the statement  "                                 SourceTransactionValue = new AccountTransactionValue { AccountId = template.DefaultSourceAccountId' AccountTypeId = template.SourceAccountTypeId' Name = template.Name }' " is 169.
Long Statement,Samba.Domain.Models.Accounts,AccountTransaction,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransaction.cs,Create,The length of the statement  "                                 TargetTransactionValue = new AccountTransactionValue { AccountId = template.DefaultTargetAccountId' AccountTypeId = template.TargetAccountTypeId' Name = template.Name }' " is 169.
Long Statement,Samba.Domain.Models.Automation,AppRule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AppRule.cs,AddRuleConstraint,The length of the statement  "            var result = new RuleConstraintValue { Name = Utility.RandomString(10)' Left = left' Operation = operation' Right = right }; " is 124.
Long Statement,Samba.Domain.Models.Automation,AppRule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AppRule.cs,RemoveInvalidConstraints,The length of the statement  "            RuleConstraintValues.Where(x => string.IsNullOrEmpty(x.Left) || string.IsNullOrEmpty(x.Operation)).ToList().ForEach(x => RuleConstraintValues.Remove(x)); " is 153.
Long Statement,Samba.Domain.Models.Automation,AppAction,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AppAction.cs,Format,The length of the statement  "                foreach (var propertyName in Regex.Matches(parameterValues' "\\[:([^\\]]+)\\]").Cast<Match>().Select(match => match.Groups[1].Value).ToList()) " is 142.
Long Statement,Samba.Domain.Models.Automation,AppAction,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AppAction.cs,Format,The length of the statement  "            s = matches.Aggregate(s' (current' value) => current.Replace(string.Format("[:{0}]"' value)' parameters[value].ToString())); " is 124.
Long Statement,Samba.Domain.Models.Entities,EntityCustomField,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Entities\EntityCustomField.cs,GetValues,The length of the statement  "            return File.Exists(ValueSource) ? File.ReadAllLines(ValueSource) : (ValueSource ?? "").Split(''').Select(x => x.Trim()); " is 120.
Long Statement,Samba.Domain.Models.Entities,EntityStateValue,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Entities\EntityStateValue.cs,GetStateData,The length of the statement  "            return string.Join("\r"' EntityStateValues.Where(x => !string.IsNullOrEmpty(x.State)).Select(x => string.Format("{0}:{1}"' x.StateName' x.State))); " is 147.
Long Statement,Samba.Domain.Models.Entities,EntityType,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Entities\EntityType.cs,GetMatchingFields,The length of the statement  "                return EntityCustomFields.Where(x => data.Any(y => y.ToLower().Contains(string.Format(nameFormat' x.Name).ToLower()) && y.ToLower().Contains(searchString.ToLower()))); " is 167.
Long Statement,Samba.Domain.Models.Inventory,WarehouseConsumption,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\WarehouseConsumption.cs,CreatePeriodicConsumptionItem,The length of the statement  "            pci.Added = tim.Where(x => x.TargetWarehouseId == WarehouseId).Sum(x => x.Quantity * x.Multiplier) / pci.UnitMultiplier; " is 120.
Long Statement,Samba.Domain.Models.Inventory,WarehouseConsumption,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\WarehouseConsumption.cs,CreatePeriodicConsumptionItem,The length of the statement  "            pci.Removed = tim.Where(x => x.SourceWarehouseId == WarehouseId).Sum(x => x.Quantity * x.Multiplier) / pci.UnitMultiplier; " is 122.
Long Statement,Samba.Domain.Models.Menus,ScreenMenuCategory,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,GetScreenMenuItems,The length of the statement  "            var items = ScreenMenuItems.Where(x => x.SubMenuTag == tag || (string.IsNullOrEmpty(tag) && string.IsNullOrEmpty(x.SubMenuTag))); " is 129.
Long Statement,Samba.Domain.Models.Settings,PrinterTemplate,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Settings\PrinterTemplate.cs,GetFilters,The length of the statement  "            return Parts.Where(x => x.Key.StartsWith(partName + ":")).ToDictionary(y => y.Key.Substring(y.Key.IndexOf(":"' StringComparison.Ordinal) + 1)' y => y.Key); " is 155.
Long Statement,Samba.Domain.Models.Tickets,Calculation,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,UpdateCalculationTransaction,The length of the statement  "            if (amount == 0 && Amount == 0 && document.AccountTransactions.Any(x => x.AccountTransactionTypeId == AccountTransactionTypeId)) " is 128.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTicketAccounts,The length of the statement  "            return TicketEntities.Select(x => new AccountData(x.AccountTypeId' x.AccountId)).Union(includes.Select(x => new AccountData(x.AccountTypeId' x.Id))); " is 149.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddPayment,The length of the statement  "            var transaction = TransactionDocument.AddNewTransaction(paymentType.AccountTransactionType' GetTicketAccounts(account)' amount' exchangeRate); " is 142.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddPayment,The length of the statement  "            var payment = new Payment { AccountTransaction = transaction' Amount = amount' Name = account.Name' PaymentTypeId = paymentType.Id' UserId = userId }; " is 150.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddChangePayment,The length of the statement  "            var transaction = TransactionDocument.AddNewTransaction(changePaymentType.AccountTransactionType' GetTicketAccounts(account)' amount' exchangeRate); " is 148.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddChangePayment,The length of the statement  "            var payment = new ChangePayment { AccountTransaction = transaction' Amount = amount' Name = account.Name' ChangePaymentTypeId = changePaymentType.Id' UserId = userId }; " is 168.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,RemovePayment,The length of the statement  "            TransactionDocument.AccountTransactions.Where(x => x.Id == py.AccountTransaction.Id).ToList().ForEach(x => TransactionDocument.AccountTransactions.Remove(x)); " is 158.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,RemoveChangePayment,The length of the statement  "            TransactionDocument.AccountTransactions.Where(x => x.Id == py.AccountTransaction.Id).ToList().ForEach(x => TransactionDocument.AccountTransactions.Remove(x)); " is 158.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,CalculateServices,The length of the statement  "                var sumValue = calculation.UsePlainSum ? Orders.Where(x => x.DecreaseInventory || x.IncreaseInventory).Sum(x => x.GetVisibleValue()) : sum; " is 139.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddCalculation,The length of the statement  "                TransactionDocument.AddSingletonTransaction(calculation.AccountTransactionTypeId' calculationType.AccountTransactionType' GetTicketAccounts()); " is 143.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetStateData,The length of the statement  "            return string.Join("\r"' TicketStateValues.Where(canDisplayState).Where(x => !string.IsNullOrEmpty(x.State)).Select(x => string.Format("{0}{1}: {2} {3}"' x.Quantity > 0 ? string.Format("{0} "' x.Quantity.ToString(CultureInfo.CurrentCulture)) : ""' x.StateName' x.State' !string.IsNullOrEmpty(x.StateValue) ? string.Format("[{0}]"' x.StateValue) : ""))); " is 353.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTagData,The length of the statement  "            return string.Join("\r"' TicketTagValues.Where(x => !string.IsNullOrEmpty(x.TagValue)).Select(x => string.Format("{0}: {1}"' x.TagName' x.TagValue))); " is 150.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTaxTotal,The length of the statement  "            var result = Orders.Sum(x => x.GetTotalTaxAmount(TaxIncluded' plainSum' preTaxServicesTotal' taxTemplateAccountTransactionTypeId)); " is 131.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,StopActiveTimers,The length of the statement  "            Orders.Where(x => x.ProductTimerValue != null && x.ProductTimerValue.IsActive).ToList().ForEach(x => x.StopProductTimer()); " is 123.
Long Statement,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,RemoveZeroAmountAccountTransactions,The length of the statement  "            TransactionDocument.AccountTransactions.Where(x => x.Amount == 0).ToList().ForEach(x => TransactionDocument.AccountTransactions.Remove(x)); " is 139.
Long Statement,Samba.Domain.Models.Tickets,Order,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,ToggleOrderTag,The length of the statement  "                if (orderTagGroup.MaxSelectedItems > 1 && OrderTagValues.Count(x => x.OrderTagGroupId == orderTagGroup.Id) >= orderTagGroup.MaxSelectedItems) return false; " is 155.
Long Statement,Samba.Domain.Models.Tickets,Order,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetStateData,The length of the statement  "            return string.Join("\r"' OrderStateValues.Where(x => !string.IsNullOrEmpty(x.State)).OrderBy(x => x.OrderKey).Select(x => string.Format("{0} {1}"' x.State' !string.IsNullOrEmpty(x.StateValue) ? string.Format("[{0}]"' x.StateValue) : ""))); " is 239.
Long Statement,Samba.Domain.Models.Tickets,Order,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetTaxAmount,The length of the statement  "            var result = CalculatePrice ? TaxValues.Sum(x => x.GetTaxAmount(taxIncluded' GetTaxablePrice()' TaxValues.Sum(y => y.TaxRate)' plainSum' preTaxServices)) : 0; " is 158.
Long Statement,Samba.Domain.Models.Tickets,Order,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetTotalTaxAmount,The length of the statement  "            var result = CalculatePrice ? TaxValues.Sum(x => x.GetTaxAmount(taxIncluded' GetTaxablePrice()' TaxValues.Sum(y => y.TaxRate)' plainSum' preTaxServices)) * Quantity : 0; " is 169.
Long Statement,Samba.Domain.Models.Tickets,Order,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetTotalTaxAmount,The length of the statement  "                .Sum(x => x.GetTaxAmount(taxIncluded' GetTaxablePrice()' TaxValues.Sum(y => y.TaxRate)' plainSum' preTaxServices)) * Quantity : 0; " is 130.
Long Statement,Samba.Domain.Models.Tickets,OrderTagValue,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderTagValue.cs,ToShort,The length of the statement  "            return name.Contains(" ") ? string.Join(""' name.Split(' ').Select(x => char.IsNumber(x.ElementAt(0)) ? x : x.ElementAt(0).ToString())) : TagValue.Substring(0' 2); " is 163.
Complex Conditional,Samba.Domain.Models.Tickets,Order,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetPortionDesc,The conditional expression  "PortionCount > 1                  && !string.IsNullOrEmpty(PortionName)                  && !string.IsNullOrEmpty(PortionName.Trim('\b'' ' '' '\t'))                  && PortionName.ToLower() != "normal""  is complex.
Magic Number,Samba.Domain.Models.Accounts,AccountTransaction,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransaction.cs,UpdateAmount,The following statement contains a magic number: Amount = Decimal.Round(Amount' 2' MidpointRounding.AwayFromZero);
Magic Number,Samba.Domain.Models.Accounts,AccountTransactionValue,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransactionValue.cs,UpdateExchange,The following statement contains a magic number: Exchange = exchangeRate == 0 ? 0 : decimal.Round((Debit - Credit) / exchangeRate' 2);
Magic Number,Samba.Domain.Models.Automation,AutomationCommand,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AutomationCommand.cs,AutomationCommand,The following statement contains a magic number: FontSize = 30;
Magic Number,Samba.Domain.Models.Automation,AppRule,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AppRule.cs,AddRuleConstraint,The following statement contains a magic number: var result = new RuleConstraintValue { Name = Utility.RandomString(10)' Left = left' Operation = operation' Right = right };
Magic Number,Samba.Domain.Models.Automation,AppAction,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AppAction.cs,Format,The following statement contains a magic number: var parameters = (parameterValues ?? "")                  .Split('#')                  .Select(y => y.Split(new[] { '=' }' 2))                  .Where(x => x.Length > 1)                  .ToDictionary(x => x[0]' x => x[1]);
Magic Number,Samba.Domain.Models.Entities,Entity,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Entities\Entity.cs,SetDefaultValues,The following statement contains a magic number: var parts = data.Split(new[] { ':' }' 2);
Magic Number,Samba.Domain.Models.Entities,EntityScreen,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Entities\EntityScreen.cs,EntityScreen,The following statement contains a magic number: FontSize = 50;
Magic Number,Samba.Domain.Models.Inventory,WarehouseConsumption,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\WarehouseConsumption.cs,UpdateFinalCost,The following statement contains a magic number: ci.Cost = decimal.Round(totalcost' 2);
Magic Number,Samba.Domain.Models.Inventory,WarehouseConsumption,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\WarehouseConsumption.cs,CreatePeriodicConsumptionItem,The following statement contains a magic number: pci.Cost = decimal.Round((totalPrice + previousCost) / (pci.InStock + pci.Added)' 2);
Magic Number,Samba.Domain.Models.Menus,ScreenMenu,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenu.cs,ScreenMenu,The following statement contains a magic number: CategoryColumnWidthRate = 25;
Magic Number,Samba.Domain.Models.Menus,ScreenMenuCategory,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,ScreenMenuCategory,The following statement contains a magic number: MainButtonHeight = 65;
Magic Number,Samba.Domain.Models.Menus,ScreenMenuCategory,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,ScreenMenuCategory,The following statement contains a magic number: MenuItemButtonHeight = 65;
Magic Number,Samba.Domain.Models.Menus,ScreenMenuCategory,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,ScreenMenuCategory,The following statement contains a magic number: SubButtonHeight = 65;
Magic Number,Samba.Domain.Models.Menus,ScreenMenuCategory,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,ScreenMenuCategory,The following statement contains a magic number: NumeratorType = 2;
Magic Number,Samba.Domain.Models.Menus,ScreenMenuCategory,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,ScreenMenuCategory,The following statement contains a magic number: MainFontSize = 30;
Magic Number,Samba.Domain.Models.Menus,ScreenMenuCategory,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,ScreenMenuCategory,The following statement contains a magic number: MenuItemFontSize = 30;
Magic Number,Samba.Domain.Models.Settings,Printer,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Settings\Printer.cs,Printer,The following statement contains a magic number: CharsPerLine = 42;
Magic Number,Samba.Domain.Models.Settings,Printer,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Settings\Printer.cs,Printer,The following statement contains a magic number: CodePage = 857;
Magic Number,Samba.Domain.Models.Tickets,ProductTimerValue,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\ProductTimerValue.cs,GetTimePeriod,The following statement contains a magic number: switch (PriceType)              {                  case 2: return Convert.ToDecimal(ts.TotalDays);                  case 1: return Convert.ToDecimal(ts.TotalHours);                  default: return Convert.ToDecimal(ts.TotalMinutes);              }
Magic Number,Samba.Domain.Models.Tickets,ProductTimerValue,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\ProductTimerValue.cs,GetDuration,The following statement contains a magic number: switch (PriceType)              {                  case 2: return TimeSpan.FromDays(Convert.ToDouble(GetTime()));                  case 1: return TimeSpan.FromHours(Convert.ToDouble(GetTime()));                  default: return TimeSpan.FromMinutes(Convert.ToDouble(GetTime()));              }
Magic Number,Samba.Domain.Models.Tickets,CalculationSelector,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\CalculationSelector.cs,CalculationSelector,The following statement contains a magic number: FontSize = 30;
Magic Number,Samba.Domain.Models.Tickets,Calculation,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: CalculationAmount = Amount > 0 ? (sum * Amount) / 100 : 0;
Magic Number,Samba.Domain.Models.Tickets,PaymentType,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\PaymentType..cs,PaymentType,The following statement contains a magic number: FontSize = 40;
Magic Number,Samba.Domain.Models.Tickets,TaxValue,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\TaxValue.cs,GetTax,The following statement contains a magic number: result = decimal.Round((price * TaxRate) / (100 + totalRate)' Rounding' MidpointRounding.AwayFromZero);
Magic Number,Samba.Domain.Models.Tickets,OrderTagGroup,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderTagGroup.cs,OrderTagGroup,The following statement contains a magic number: ColumnCount = 5;
Magic Number,Samba.Domain.Models.Tickets,OrderTagGroup,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderTagGroup.cs,OrderTagGroup,The following statement contains a magic number: ButtonHeight = 65;
Magic Number,Samba.Domain.Models.Tickets,OrderTagGroup,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderTagGroup.cs,OrderTagGroup,The following statement contains a magic number: FontSize = 14;
Magic Number,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,CalculateServices,The following statement contains a magic number: calculation.Amount == 0 && calculation.CalculationType != 5
Magic Number,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddCalculation,The following statement contains a magic number: amount == 0 && calculation.CalculationType != 5
Magic Number,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTaxTotal,The following statement contains a magic number: return decimal.Round(result' 2' MidpointRounding.AwayFromZero);
Magic Number,Samba.Domain.Models.Tickets,Ticket,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTaxTotal,The following statement contains a magic number: return decimal.Round(result' 2' MidpointRounding.AwayFromZero);
Magic Number,Samba.Domain.Models.Tickets,OrderTagValue,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderTagValue.cs,ToShort,The following statement contains a magic number: TagValue.Length < 3
Magic Number,Samba.Domain.Models.Tickets,OrderTagValue,D:\research\architectureSmells\repos\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderTagValue.cs,ToShort,The following statement contains a magic number: return name.Contains(" ") ? string.Join(""' name.Split(' ').Select(x => char.IsNumber(x.ElementAt(0)) ? x : x.ElementAt(0).ToString())) : TagValue.Substring(0' 2);
