Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Samba.Domain.Models.Accounts,AccountTransactionDocumentType,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransactionDocumentType.cs,CreateDocument,Cyclomatic complexity of the method is 8
Complex Method,Samba.Domain.Models.Automation,RuleConstraintValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\RuleConstraintValue.cs,Compare,Cyclomatic complexity of the method is 15
Complex Method,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,Cyclomatic complexity of the method is 12
Long Parameter List,Samba.Domain.Models.Accounts,AccountTransactionDocumentType,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransactionDocumentType.cs,CreateDocument,The method has 6 parameters.
Long Parameter List,Samba.Domain.Models.Inventory,InventoryTransactionDocument,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\InventoryTransactionDocument.cs,Add,The method has 6 parameters.
Long Parameter List,Samba.Domain.Models.Tickets,TaxValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\TaxValue.cs,GetTaxAmount,The method has 5 parameters.
Long Parameter List,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddOrder,The method has 8 parameters.
Long Parameter List,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddPayment,The method has 5 parameters.
Long Parameter List,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddChangePayment,The method has 5 parameters.
Long Parameter List,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,UpdateEntity,The method has 6 parameters.
Long Parameter List,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,UpdateMenuItem,The method has 6 parameters.
Long Parameter List,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,TagOrder,The method has 5 parameters.
Long Parameter List,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,SetStateValue,The method has 6 parameters.
Long Identifier,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetSum,The length of the parameter taxTempleteAccountTransactionTypeId is 35.
Long Identifier,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetPlainSum,The length of the parameter taxTempleteAccountTransactionTypeId is 35.
Long Identifier,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTaxTotal,The length of the parameter taxTemplateAccountTransactionTypeId is 35.
Long Statement,Samba.Domain.Models.Accounts,AccountTransactionDocumentType,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransactionDocumentType.cs,GetNeededAccountTypes,The length of the statement  "		if (accountTransactionType.TargetAccountTypeId != MasterAccountTypeId && accountTransactionType.DefaultTargetAccountId == 0) { " is 126.
Long Statement,Samba.Domain.Models.Accounts,AccountTransactionDocumentType,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransactionDocumentType.cs,GetNeededAccountTypes,The length of the statement  "		if (accountTransactionType.SourceAccountTypeId != MasterAccountTypeId && accountTransactionType.DefaultSourceAccountId == 0) { " is 126.
Long Statement,Samba.Domain.Models.Automation,RuleConstraintValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\RuleConstraintValue.cs,Satisfies,The length of the statement  "	return Utility.IsNumericType (type) ? CompareNumeric (left' Right' Operation) : Compare (left.ToString ()' Right' Operation); " is 125.
Long Statement,Samba.Domain.Models.Automation,AppRule,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AppRule.cs,RemoveInvalidConstraints,The length of the statement  "	RuleConstraintValues.Where (x => string.IsNullOrEmpty (x.Left) || string.IsNullOrEmpty (x.Operation)).ToList ().ForEach (x => RuleConstraintValues.Remove (x)); " is 159.
Long Statement,Samba.Domain.Models.Automation,AppAction,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AppAction.cs,Format,The length of the statement  "		foreach (var propertyName in Regex.Matches (parameterValues' "\\[:([^\\]]+)\\]").Cast<Match> ().Select (match => match.Groups [1].Value).ToList ()) { " is 149.
Long Statement,Samba.Domain.Models.Automation,AppAction,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AppAction.cs,Format,The length of the statement  "	var matches = Regex.Matches (s' "\\[:([^\\]]+)\\]").Cast<Match> ().Select (match => match.Groups [1].Value).Where (value => parameters.Keys.Contains (value)); " is 158.
Long Statement,Samba.Domain.Models.Automation,AppAction,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AppAction.cs,Format,The length of the statement  "	s = matches.Aggregate (s' (current' value) => current.Replace (string.Format ("[:{0}]"' value)' parameters [value].ToString ())); " is 129.
Long Statement,Samba.Domain.Models.Automation,AppAction,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AppAction.cs,Format,The length of the statement  "	var matches2 = Regex.Matches (s' "\\[:([^\\]]+)\\]").Cast<Match> ().Select (match => match.Groups [1].Value).Where (value => !parameters.Keys.Contains (value)); " is 160.
Long Statement,Samba.Domain.Models.Entities,EntityCustomField,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Entities\EntityCustomField.cs,GetValues,The length of the statement  "	return File.Exists (ValueSource) ? File.ReadAllLines (ValueSource) : (ValueSource ?? "").Split (''').Select (x => x.Trim ()); " is 125.
Long Statement,Samba.Domain.Models.Entities,EntityStateValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Entities\EntityStateValue.cs,GetStateData,The length of the statement  "	return string.Join ("\r"' EntityStateValues.Where (x => !string.IsNullOrEmpty (x.State)).Select (x => string.Format ("{0}:{1}"' x.StateName' x.State))); " is 152.
Long Statement,Samba.Domain.Models.Entities,EntityType,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Entities\EntityType.cs,GetMatchingFields,The length of the statement  "		}' StringSplitOptions.RemoveEmptyEntries).Where (x => Regex.Match (x' "\"Value\":\"([^\"]+)\"").Groups [1].Value.ToLower ().Contains (searchString.ToLower ())); " is 160.
Long Statement,Samba.Domain.Models.Entities,EntityType,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Entities\EntityType.cs,GetMatchingFields,The length of the statement  "		return EntityCustomFields.Where (x => data.Any (y => y.ToLower ().Contains (string.Format (nameFormat' x.Name).ToLower ()) && y.ToLower ().Contains (searchString.ToLower ()))); " is 176.
Long Statement,Samba.Domain.Models.Inventory,WarehouseConsumption,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\WarehouseConsumption.cs,CreatePeriodicConsumptionItem,The length of the statement  "			pci.InStock = previousPci.PhysicalInventory != null ? previousPci.PhysicalInventory.GetValueOrDefault (0) : previousPci.GetInventoryPrediction (); " is 146.
Long Statement,Samba.Domain.Models.Inventory,WarehouseConsumption,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\WarehouseConsumption.cs,CreatePeriodicConsumptionItem,The length of the statement  "	pci.Added = tim.Where (x => x.TargetWarehouseId == WarehouseId).Sum (x => x.Quantity * x.Multiplier) / pci.UnitMultiplier; " is 122.
Long Statement,Samba.Domain.Models.Inventory,WarehouseConsumption,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\WarehouseConsumption.cs,CreatePeriodicConsumptionItem,The length of the statement  "	pci.Removed = tim.Where (x => x.SourceWarehouseId == WarehouseId).Sum (x => x.Quantity * x.Multiplier) / pci.UnitMultiplier; " is 124.
Long Statement,Samba.Domain.Models.Inventory,PeriodicConsumption,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\PeriodicConsumption.cs,CreatePeriodicConsumptionItems,The length of the statement  "	var previousWhc = previousPc != null ? previousPc.WarehouseConsumptions.SingleOrDefault (x => x.WarehouseId == warehouseConsumption.WarehouseId) : null; " is 152.
Long Statement,Samba.Domain.Models.Menus,ScreenMenuCategory,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,GetScreenMenuItems,The length of the statement  "	var items = ScreenMenuItems.Where (x => x.SubMenuTag == tag || (string.IsNullOrEmpty (tag) && string.IsNullOrEmpty (x.SubMenuTag))); " is 132.
Long Statement,Samba.Domain.Models.Menus,ScreenMenuCategory,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,GetScreenMenuCategories,The length of the statement  "	return ScreenMenuItems.Where (x => !string.IsNullOrEmpty (x.SubMenuTag)).Select (x => x.SubMenuTag).Distinct ().Where (x => string.IsNullOrEmpty (parentTag) || (x.StartsWith (parentTag) && x != parentTag)).Select (x => Regex.Replace (x' "^" + parentTag + "'"' "")).Where (x => !x.Contains ("'")).Select (x => !string.IsNullOrEmpty (parentTag) ? parentTag + "'" + x : x); " is 370.
Long Statement,Samba.Domain.Models.Settings,WorkPeriod,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Settings\WorkPeriod.cs,ToString,The length of the statement  "	return StartDate == EndDate ? StartDate.ToString ("dd MMMMM yyyy HH:mm") : string.Format ("{0} - {1}"' StartDate.ToString ("dd MMMMM yyyy HH:mm")' EndDate.ToString ("dd MMMMM yyyy HH:mm")); " is 189.
Long Statement,Samba.Domain.Models.Settings,PrinterTemplate,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Settings\PrinterTemplate.cs,GetFilters,The length of the statement  "	return Parts.Where (x => x.Key.StartsWith (partName + ":")).ToDictionary (y => y.Key.Substring (y.Key.IndexOf (":"' StringComparison.Ordinal) + 1)' y => y.Key); " is 160.
Long Statement,Samba.Domain.Models.Tickets,OrderMerger,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderMerger.cs,OldMerge,The length of the statement  "		var item = mergedOrders.SingleOrDefault (x => x.OrderTagValues.Count == 0 && x.MenuItemId == ti.MenuItemId && x.PortionName == ti.PortionName && x.CalculatePrice == ti.CalculatePrice && x.Price == ti.Price); " is 207.
Long Statement,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,UpdateCalculationTransaction,The length of the statement  "	if (amount == 0 && Amount == 0 && document.AccountTransactions.Any (x => x.AccountTransactionTypeId == AccountTransactionTypeId)) { " is 131.
Long Statement,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,UpdateCalculationTransaction,The length of the statement  "		document.AccountTransactions.Remove (document.AccountTransactions.Single (x => x.AccountTransactionTypeId == AccountTransactionTypeId)); " is 136.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTicketAccounts,The length of the statement  "	return TicketEntities.Select (x => new AccountData (x.AccountTypeId' x.AccountId)).Union (includes.Select (x => new AccountData (x.AccountTypeId' x.Id))); " is 154.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddOrder,The length of the statement  "	var order = OrderBuilder.Create ().WithDepartment (department).ForMenuItem (menuItem).WithUserName (userName).WithTaxTemplates (taxTemplates).WithPortion (portion).WithPriceTag (priceTag).WithAccountTransactionType (template).WithProductTimer (timer).Build (); " is 260.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddOrder,The length of the statement  "			TransactionDocument.AddSingletonTransaction (taxTemplate.AccountTransactionType.Id' taxTemplate.AccountTransactionType' GetTicketAccounts ()); " is 142.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddPayment,The length of the statement  "	var transaction = TransactionDocument.AddNewTransaction (paymentType.AccountTransactionType' GetTicketAccounts (account)' amount' exchangeRate); " is 144.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddChangePayment,The length of the statement  "	var transaction = TransactionDocument.AddNewTransaction (changePaymentType.AccountTransactionType' GetTicketAccounts (account)' amount' exchangeRate); " is 150.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,RemoveOrder,The length of the statement  "		TransactionDocument.AccountTransactions.Where (x => x.AccountTransactionTypeId == transactionId).ToList ().ForEach (x => TransactionDocument.AccountTransactions.Remove (x)); " is 173.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,RemovePayment,The length of the statement  "	TransactionDocument.AccountTransactions.Where (x => x.Id == py.AccountTransaction.Id).ToList ().ForEach (x => TransactionDocument.AccountTransactions.Remove (x)); " is 162.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,RemoveChangePayment,The length of the statement  "	TransactionDocument.AccountTransactions.Where (x => x.Id == py.AccountTransaction.Id).ToList ().ForEach (x => TransactionDocument.AccountTransactions.Remove (x)); " is 162.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,RemoveCalculation,The length of the statement  "		TransactionDocument.AccountTransactions.Where (x => x.AccountTransactionTypeId == transactionId).ToList ().ForEach (x => TransactionDocument.AccountTransactions.Remove (x)); " is 173.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,CalculateTax,The length of the statement  "	var result = Orders.Where (x => x.CalculatePrice).Sum (x => x.GetTotalTaxAmount (TaxIncluded' plainSum' preTaxServices)); " is 121.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,CalculateServices,The length of the statement  "		var sumValue = calculation.UsePlainSum ? Orders.Where (x => x.DecreaseInventory || x.IncreaseInventory).Sum (x => x.GetVisibleValue ()) : sum; " is 142.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddCalculation,The length of the statement  "	var calculation = Calculations.SingleOrDefault (x => x.CalculationTypeId == calculationType.Id) ?? Calculations.SingleOrDefault (x => x.AccountTransactionTypeId == calculationType.AccountTransactionType.Id); " is 207.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddCalculation,The length of the statement  "		TransactionDocument.AddSingletonTransaction (calculation.AccountTransactionTypeId' calculationType.AccountTransactionType' GetTicketAccounts ()); " is 145.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetPlainSum,The length of the statement  "	return Orders.Where (x => x.GetTaxValues ().Any (y => y.TaxTempleteAccountTransactionTypeId == taxTempleteAccountTransactionTypeId)).Sum (x => x.GetTotal ()); " is 158.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetStateData,The length of the statement  "	return string.Join ("\r"' TicketStateValues.Where (canDisplayState).Where (x => !string.IsNullOrEmpty (x.State)).Select (x => string.Format ("{0}{1}: {2} {3}"' x.Quantity > 0 ? string.Format ("{0} "' x.Quantity.ToString (CultureInfo.CurrentCulture)) : ""' x.StateName' x.State' !string.IsNullOrEmpty (x.StateValue) ? string.Format ("[{0}]"' x.StateValue) : ""))); " is 363.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTagData,The length of the statement  "	return string.Join ("\r"' TicketTagValues.Where (x => !string.IsNullOrEmpty (x.TagValue)).Select (x => string.Format ("{0}: {1}"' x.TagName' x.TagValue))); " is 155.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTaxIds,The length of the statement  "	return Orders.SelectMany (x => x.TaxValues).Where (x => x.TaxTempleteAccountTransactionTypeId > 0).Select (x => x.TaxTempleteAccountTransactionTypeId).Distinct ().ToList (); " is 173.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTaxTotal,The length of the statement  "	var result = Orders.Sum (x => x.GetTotalTaxAmount (TaxIncluded' plainSum' preTaxServicesTotal' taxTemplateAccountTransactionTypeId)); " is 133.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,FixSelectedOrders,The length of the statement  "	return Orders.Where (x => x.SelectedQuantity > 0 && x.SelectedQuantity < x.Quantity).ToList ().Select (FixOrder).Where (newItem => newItem != null).ToList (); " is 158.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,StopActiveTimers,The length of the statement  "	Orders.Where (x => x.ProductTimerValue != null && x.ProductTimerValue.IsActive).ToList ().ForEach (x => x.StopProductTimer ()); " is 127.
Long Statement,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,RemoveZeroAmountAccountTransactions,The length of the statement  "	TransactionDocument.AccountTransactions.Where (x => x.Amount == 0).ToList ().ForEach (x => TransactionDocument.AccountTransactions.Remove (x)); " is 143.
Long Statement,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,TagIfNotTagged,The length of the statement  "	if (OrderTagValues.FirstOrDefault (x => x.OrderTagGroupId == orderTagGroup.Id && x.TagValue == orderTag.Name) == null) { " is 120.
Long Statement,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,ToggleOrderTag,The length of the statement  "		if (orderTagGroup.MaxSelectedItems > 1 && OrderTagValues.Count (x => x.OrderTagGroupId == orderTagGroup.Id) >= orderTagGroup.MaxSelectedItems) " is 142.
Long Statement,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetStateDesc,The length of the statement  "	var result = string.Join ("' "' OrderStateValues.Where (filter).OrderBy (x => x.OrderKey).Where (x => !string.IsNullOrEmpty (x.State)).Select (x => string.Format ("{0}{1}"' x.State.Trim ()' !string.IsNullOrEmpty (x.StateValue) ? string.Format (":{0}"' x.StateValue.Trim ()) : "").Trim ())); " is 290.
Long Statement,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetStateData,The length of the statement  "	return string.Join ("\r"' OrderStateValues.Where (x => !string.IsNullOrEmpty (x.State)).OrderBy (x => x.OrderKey).Select (x => string.Format ("{0} {1}"' x.State' !string.IsNullOrEmpty (x.StateValue) ? string.Format ("[{0}]"' x.StateValue) : ""))); " is 247.
Long Statement,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetPortionDesc,The length of the statement  "	if (PortionCount > 1 && !string.IsNullOrEmpty (PortionName) && !string.IsNullOrEmpty (PortionName.Trim ('\b'' ' '' '\t')) && PortionName.ToLower () != "normal") " is 160.
Long Statement,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetTaxAmount,The length of the statement  "	var result = CalculatePrice ? TaxValues.Sum (x => x.GetTaxAmount (taxIncluded' GetTaxablePrice ()' TaxValues.Sum (y => y.TaxRate)' plainSum' preTaxServices)) : 0; " is 162.
Long Statement,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetTotalTaxAmount,The length of the statement  "	var result = CalculatePrice ? TaxValues.Sum (x => x.GetTaxAmount (taxIncluded' GetTaxablePrice ()' TaxValues.Sum (y => y.TaxRate)' plainSum' preTaxServices)) * Quantity : 0; " is 173.
Long Statement,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetTotalTaxAmount,The length of the statement  "	var result = CalculatePrice ? TaxValues.Where (x => x.TaxTempleteAccountTransactionTypeId == taxTemplateId).Sum (x => x.GetTaxAmount (taxIncluded' GetTaxablePrice ()' TaxValues.Sum (y => y.TaxRate)' plainSum' preTaxServices)) * Quantity : 0; " is 241.
Long Statement,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetTaxValue,The length of the statement  "	return TaxValues.Any (x => x.TaxTemplateName == taxTemplateName) ? GetTaxValues ().SingleOrDefault (x => x.TaxTemplateName == taxTemplateName) : TaxValue.Empty; " is 160.
Long Statement,Samba.Domain.Models.Tickets,OrderTagValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderTagValue.cs,ToShort,The length of the statement  "	return name.Contains (" ") ? string.Join (""' name.Split (' ').Select (x => char.IsNumber (x.ElementAt (0)) ? x : x.ElementAt (0).ToString ())) : TagValue.Substring (0' 2); " is 172.
Complex Conditional,Samba.Domain.Models.Tickets,Order,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Order.cs,GetPortionDesc,The conditional expression  "PortionCount > 1 && !string.IsNullOrEmpty (PortionName) && !string.IsNullOrEmpty (PortionName.Trim ('\b'' ' '' '\t')) && PortionName.ToLower () != "normal""  is complex.
Magic Number,Samba.Domain.Models.Accounts,AccountTransaction,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransaction.cs,UpdateAmount,The following statement contains a magic number: Amount = Decimal.Round (Amount' 2' MidpointRounding.AwayFromZero);  
Magic Number,Samba.Domain.Models.Accounts,AccountTransactionValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Accounts\AccountTransactionValue.cs,UpdateExchange,The following statement contains a magic number: Exchange = exchangeRate == 0 ? 0 : decimal.Round ((Debit - Credit) / exchangeRate' 2);  
Magic Number,Samba.Domain.Models.Automation,AutomationCommand,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Automation\AutomationCommand.cs,AutomationCommand,The following statement contains a magic number: FontSize = 30;  
Magic Number,Samba.Domain.Models.Entities,Entity,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Entities\Entity.cs,SetDefaultValues,The following statement contains a magic number: if (!string.IsNullOrEmpty (data) && data.Contains (":")) {  	var parts = data.Split (new[] {  		':'  	}' 2);  	SetCustomData (parts [0]' parts [1]);  } else {  	Name = CultureInfo.CurrentCulture.TextInfo.ToTitleCase (data ?? "");  }  
Magic Number,Samba.Domain.Models.Entities,EntityScreen,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Entities\EntityScreen.cs,EntityScreen,The following statement contains a magic number: FontSize = 50;  
Magic Number,Samba.Domain.Models.Inventory,WarehouseConsumption,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\WarehouseConsumption.cs,UpdateFinalCost,The following statement contains a magic number: ci.Cost = decimal.Round (totalcost' 2);  
Magic Number,Samba.Domain.Models.Inventory,WarehouseConsumption,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\WarehouseConsumption.cs,CreatePeriodicConsumptionItem,The following statement contains a magic number: if (pci.InStock + pci.Purchase > 0)  	pci.Cost = decimal.Round ((totalPrice + previousCost) / (pci.InStock + pci.Added)' 2);  
Magic Number,Samba.Domain.Models.Inventory,WarehouseConsumption,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Inventory\WarehouseConsumption.cs,CreatePeriodicConsumptionItem,The following statement contains a magic number: pci.Cost = decimal.Round ((totalPrice + previousCost) / (pci.InStock + pci.Added)' 2);  
Magic Number,Samba.Domain.Models.Menus,ScreenMenu,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenu.cs,ScreenMenu,The following statement contains a magic number: CategoryColumnWidthRate = 25;  
Magic Number,Samba.Domain.Models.Menus,ScreenMenuCategory,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,ScreenMenuCategory,The following statement contains a magic number: MainButtonHeight = 65;  
Magic Number,Samba.Domain.Models.Menus,ScreenMenuCategory,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,ScreenMenuCategory,The following statement contains a magic number: MenuItemButtonHeight = 65;  
Magic Number,Samba.Domain.Models.Menus,ScreenMenuCategory,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,ScreenMenuCategory,The following statement contains a magic number: SubButtonHeight = 65;  
Magic Number,Samba.Domain.Models.Menus,ScreenMenuCategory,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,ScreenMenuCategory,The following statement contains a magic number: NumeratorType = 2;  
Magic Number,Samba.Domain.Models.Menus,ScreenMenuCategory,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,ScreenMenuCategory,The following statement contains a magic number: MainFontSize = 30;  
Magic Number,Samba.Domain.Models.Menus,ScreenMenuCategory,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Menus\ScreenMenuCategory.cs,ScreenMenuCategory,The following statement contains a magic number: MenuItemFontSize = 30;  
Magic Number,Samba.Domain.Models.Settings,Printer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Settings\Printer.cs,Printer,The following statement contains a magic number: CharsPerLine = 42;  
Magic Number,Samba.Domain.Models.Settings,Printer,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Settings\Printer.cs,Printer,The following statement contains a magic number: CodePage = 857;  
Magic Number,Samba.Domain.Models.Tickets,ProductTimerValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\ProductTimerValue.cs,GetTimePeriod,The following statement contains a magic number: switch (PriceType) {  case 2:  	return Convert.ToDecimal (ts.TotalDays);  case 1:  	return Convert.ToDecimal (ts.TotalHours);  default:  	return Convert.ToDecimal (ts.TotalMinutes);  }  
Magic Number,Samba.Domain.Models.Tickets,ProductTimerValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\ProductTimerValue.cs,GetDuration,The following statement contains a magic number: switch (PriceType) {  case 2:  	return TimeSpan.FromDays (Convert.ToDouble (GetTime ()));  case 1:  	return TimeSpan.FromHours (Convert.ToDouble (GetTime ()));  default:  	return TimeSpan.FromMinutes (Convert.ToDouble (GetTime ()));  }  
Magic Number,Samba.Domain.Models.Tickets,CalculationSelector,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\CalculationSelector.cs,CalculationSelector,The following statement contains a magic number: FontSize = 30;  
Magic Number,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: if (CalculationType == 0) {  	CalculationAmount = Amount > 0 ? (sum * Amount) / 100 : 0;  } else if (CalculationType == 1) {  	CalculationAmount = Amount > 0 ? (currentSum * Amount) / 100 : 0;  } else if (CalculationType == 3) {  	if (Amount == currentSum)  		Amount = 0;  	else if (currentSum > 0 && DecreaseAmount && Amount > currentSum)  		Amount = 0;  	else if (currentSum > 0 && !DecreaseAmount && Amount < currentSum)  		Amount = 0;  	else  		CalculationAmount = Amount - currentSum;  } else if (CalculationType == 4) {  	if (Amount > 0)  		CalculationAmount = (decimal.Round (currentSum / Amount' MidpointRounding.AwayFromZero) * Amount) - currentSum;  	else  		// eğer yuvarlama eksi olarak verildiyse hep aşağı yuvarlar  		CalculationAmount = (Math.Truncate (currentSum / Amount) * Amount) - currentSum;  	if (DecreaseAmount && CalculationAmount > 0)  		CalculationAmount = 0;  	if (!DecreaseAmount && CalculationAmount < 0)  		CalculationAmount = 0;  } else  	CalculationAmount = Amount;  
Magic Number,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: if (CalculationType == 0) {  	CalculationAmount = Amount > 0 ? (sum * Amount) / 100 : 0;  } else if (CalculationType == 1) {  	CalculationAmount = Amount > 0 ? (currentSum * Amount) / 100 : 0;  } else if (CalculationType == 3) {  	if (Amount == currentSum)  		Amount = 0;  	else if (currentSum > 0 && DecreaseAmount && Amount > currentSum)  		Amount = 0;  	else if (currentSum > 0 && !DecreaseAmount && Amount < currentSum)  		Amount = 0;  	else  		CalculationAmount = Amount - currentSum;  } else if (CalculationType == 4) {  	if (Amount > 0)  		CalculationAmount = (decimal.Round (currentSum / Amount' MidpointRounding.AwayFromZero) * Amount) - currentSum;  	else  		// eğer yuvarlama eksi olarak verildiyse hep aşağı yuvarlar  		CalculationAmount = (Math.Truncate (currentSum / Amount) * Amount) - currentSum;  	if (DecreaseAmount && CalculationAmount > 0)  		CalculationAmount = 0;  	if (!DecreaseAmount && CalculationAmount < 0)  		CalculationAmount = 0;  } else  	CalculationAmount = Amount;  
Magic Number,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: if (CalculationType == 0) {  	CalculationAmount = Amount > 0 ? (sum * Amount) / 100 : 0;  } else if (CalculationType == 1) {  	CalculationAmount = Amount > 0 ? (currentSum * Amount) / 100 : 0;  } else if (CalculationType == 3) {  	if (Amount == currentSum)  		Amount = 0;  	else if (currentSum > 0 && DecreaseAmount && Amount > currentSum)  		Amount = 0;  	else if (currentSum > 0 && !DecreaseAmount && Amount < currentSum)  		Amount = 0;  	else  		CalculationAmount = Amount - currentSum;  } else if (CalculationType == 4) {  	if (Amount > 0)  		CalculationAmount = (decimal.Round (currentSum / Amount' MidpointRounding.AwayFromZero) * Amount) - currentSum;  	else  		// eğer yuvarlama eksi olarak verildiyse hep aşağı yuvarlar  		CalculationAmount = (Math.Truncate (currentSum / Amount) * Amount) - currentSum;  	if (DecreaseAmount && CalculationAmount > 0)  		CalculationAmount = 0;  	if (!DecreaseAmount && CalculationAmount < 0)  		CalculationAmount = 0;  } else  	CalculationAmount = Amount;  
Magic Number,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: if (CalculationType == 0) {  	CalculationAmount = Amount > 0 ? (sum * Amount) / 100 : 0;  } else if (CalculationType == 1) {  	CalculationAmount = Amount > 0 ? (currentSum * Amount) / 100 : 0;  } else if (CalculationType == 3) {  	if (Amount == currentSum)  		Amount = 0;  	else if (currentSum > 0 && DecreaseAmount && Amount > currentSum)  		Amount = 0;  	else if (currentSum > 0 && !DecreaseAmount && Amount < currentSum)  		Amount = 0;  	else  		CalculationAmount = Amount - currentSum;  } else if (CalculationType == 4) {  	if (Amount > 0)  		CalculationAmount = (decimal.Round (currentSum / Amount' MidpointRounding.AwayFromZero) * Amount) - currentSum;  	else  		// eğer yuvarlama eksi olarak verildiyse hep aşağı yuvarlar  		CalculationAmount = (Math.Truncate (currentSum / Amount) * Amount) - currentSum;  	if (DecreaseAmount && CalculationAmount > 0)  		CalculationAmount = 0;  	if (!DecreaseAmount && CalculationAmount < 0)  		CalculationAmount = 0;  } else  	CalculationAmount = Amount;  
Magic Number,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: CalculationAmount = Amount > 0 ? (sum * Amount) / 100 : 0;  
Magic Number,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: if (CalculationType == 1) {  	CalculationAmount = Amount > 0 ? (currentSum * Amount) / 100 : 0;  } else if (CalculationType == 3) {  	if (Amount == currentSum)  		Amount = 0;  	else if (currentSum > 0 && DecreaseAmount && Amount > currentSum)  		Amount = 0;  	else if (currentSum > 0 && !DecreaseAmount && Amount < currentSum)  		Amount = 0;  	else  		CalculationAmount = Amount - currentSum;  } else if (CalculationType == 4) {  	if (Amount > 0)  		CalculationAmount = (decimal.Round (currentSum / Amount' MidpointRounding.AwayFromZero) * Amount) - currentSum;  	else  		// eğer yuvarlama eksi olarak verildiyse hep aşağı yuvarlar  		CalculationAmount = (Math.Truncate (currentSum / Amount) * Amount) - currentSum;  	if (DecreaseAmount && CalculationAmount > 0)  		CalculationAmount = 0;  	if (!DecreaseAmount && CalculationAmount < 0)  		CalculationAmount = 0;  } else  	CalculationAmount = Amount;  
Magic Number,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: if (CalculationType == 1) {  	CalculationAmount = Amount > 0 ? (currentSum * Amount) / 100 : 0;  } else if (CalculationType == 3) {  	if (Amount == currentSum)  		Amount = 0;  	else if (currentSum > 0 && DecreaseAmount && Amount > currentSum)  		Amount = 0;  	else if (currentSum > 0 && !DecreaseAmount && Amount < currentSum)  		Amount = 0;  	else  		CalculationAmount = Amount - currentSum;  } else if (CalculationType == 4) {  	if (Amount > 0)  		CalculationAmount = (decimal.Round (currentSum / Amount' MidpointRounding.AwayFromZero) * Amount) - currentSum;  	else  		// eğer yuvarlama eksi olarak verildiyse hep aşağı yuvarlar  		CalculationAmount = (Math.Truncate (currentSum / Amount) * Amount) - currentSum;  	if (DecreaseAmount && CalculationAmount > 0)  		CalculationAmount = 0;  	if (!DecreaseAmount && CalculationAmount < 0)  		CalculationAmount = 0;  } else  	CalculationAmount = Amount;  
Magic Number,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: if (CalculationType == 1) {  	CalculationAmount = Amount > 0 ? (currentSum * Amount) / 100 : 0;  } else if (CalculationType == 3) {  	if (Amount == currentSum)  		Amount = 0;  	else if (currentSum > 0 && DecreaseAmount && Amount > currentSum)  		Amount = 0;  	else if (currentSum > 0 && !DecreaseAmount && Amount < currentSum)  		Amount = 0;  	else  		CalculationAmount = Amount - currentSum;  } else if (CalculationType == 4) {  	if (Amount > 0)  		CalculationAmount = (decimal.Round (currentSum / Amount' MidpointRounding.AwayFromZero) * Amount) - currentSum;  	else  		// eğer yuvarlama eksi olarak verildiyse hep aşağı yuvarlar  		CalculationAmount = (Math.Truncate (currentSum / Amount) * Amount) - currentSum;  	if (DecreaseAmount && CalculationAmount > 0)  		CalculationAmount = 0;  	if (!DecreaseAmount && CalculationAmount < 0)  		CalculationAmount = 0;  } else  	CalculationAmount = Amount;  
Magic Number,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: CalculationAmount = Amount > 0 ? (currentSum * Amount) / 100 : 0;  
Magic Number,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: if (CalculationType == 3) {  	if (Amount == currentSum)  		Amount = 0;  	else if (currentSum > 0 && DecreaseAmount && Amount > currentSum)  		Amount = 0;  	else if (currentSum > 0 && !DecreaseAmount && Amount < currentSum)  		Amount = 0;  	else  		CalculationAmount = Amount - currentSum;  } else if (CalculationType == 4) {  	if (Amount > 0)  		CalculationAmount = (decimal.Round (currentSum / Amount' MidpointRounding.AwayFromZero) * Amount) - currentSum;  	else  		// eğer yuvarlama eksi olarak verildiyse hep aşağı yuvarlar  		CalculationAmount = (Math.Truncate (currentSum / Amount) * Amount) - currentSum;  	if (DecreaseAmount && CalculationAmount > 0)  		CalculationAmount = 0;  	if (!DecreaseAmount && CalculationAmount < 0)  		CalculationAmount = 0;  } else  	CalculationAmount = Amount;  
Magic Number,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: if (CalculationType == 3) {  	if (Amount == currentSum)  		Amount = 0;  	else if (currentSum > 0 && DecreaseAmount && Amount > currentSum)  		Amount = 0;  	else if (currentSum > 0 && !DecreaseAmount && Amount < currentSum)  		Amount = 0;  	else  		CalculationAmount = Amount - currentSum;  } else if (CalculationType == 4) {  	if (Amount > 0)  		CalculationAmount = (decimal.Round (currentSum / Amount' MidpointRounding.AwayFromZero) * Amount) - currentSum;  	else  		// eğer yuvarlama eksi olarak verildiyse hep aşağı yuvarlar  		CalculationAmount = (Math.Truncate (currentSum / Amount) * Amount) - currentSum;  	if (DecreaseAmount && CalculationAmount > 0)  		CalculationAmount = 0;  	if (!DecreaseAmount && CalculationAmount < 0)  		CalculationAmount = 0;  } else  	CalculationAmount = Amount;  
Magic Number,Samba.Domain.Models.Tickets,Calculation,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Calculation.cs,Update,The following statement contains a magic number: if (CalculationType == 4) {  	if (Amount > 0)  		CalculationAmount = (decimal.Round (currentSum / Amount' MidpointRounding.AwayFromZero) * Amount) - currentSum;  	else  		// eğer yuvarlama eksi olarak verildiyse hep aşağı yuvarlar  		CalculationAmount = (Math.Truncate (currentSum / Amount) * Amount) - currentSum;  	if (DecreaseAmount && CalculationAmount > 0)  		CalculationAmount = 0;  	if (!DecreaseAmount && CalculationAmount < 0)  		CalculationAmount = 0;  } else  	CalculationAmount = Amount;  
Magic Number,Samba.Domain.Models.Tickets,PaymentType,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\PaymentType..cs,PaymentType,The following statement contains a magic number: FontSize = 40;  
Magic Number,Samba.Domain.Models.Tickets,TaxValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\TaxValue.cs,GetTax,The following statement contains a magic number: if (taxIncluded && totalRate > 0) {  	if (Rounding > 0)  		result = decimal.Round ((price * TaxRate) / (100 + totalRate)' Rounding' MidpointRounding.AwayFromZero);  	else  		result = (price * TaxRate) / (100 + totalRate);  } else if (TaxRate > 0) {  	result = (price * TaxRate) / 100;  } else  	result = 0;  
Magic Number,Samba.Domain.Models.Tickets,TaxValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\TaxValue.cs,GetTax,The following statement contains a magic number: if (taxIncluded && totalRate > 0) {  	if (Rounding > 0)  		result = decimal.Round ((price * TaxRate) / (100 + totalRate)' Rounding' MidpointRounding.AwayFromZero);  	else  		result = (price * TaxRate) / (100 + totalRate);  } else if (TaxRate > 0) {  	result = (price * TaxRate) / 100;  } else  	result = 0;  
Magic Number,Samba.Domain.Models.Tickets,TaxValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\TaxValue.cs,GetTax,The following statement contains a magic number: if (taxIncluded && totalRate > 0) {  	if (Rounding > 0)  		result = decimal.Round ((price * TaxRate) / (100 + totalRate)' Rounding' MidpointRounding.AwayFromZero);  	else  		result = (price * TaxRate) / (100 + totalRate);  } else if (TaxRate > 0) {  	result = (price * TaxRate) / 100;  } else  	result = 0;  
Magic Number,Samba.Domain.Models.Tickets,TaxValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\TaxValue.cs,GetTax,The following statement contains a magic number: if (Rounding > 0)  	result = decimal.Round ((price * TaxRate) / (100 + totalRate)' Rounding' MidpointRounding.AwayFromZero);  else  	result = (price * TaxRate) / (100 + totalRate);  
Magic Number,Samba.Domain.Models.Tickets,TaxValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\TaxValue.cs,GetTax,The following statement contains a magic number: if (Rounding > 0)  	result = decimal.Round ((price * TaxRate) / (100 + totalRate)' Rounding' MidpointRounding.AwayFromZero);  else  	result = (price * TaxRate) / (100 + totalRate);  
Magic Number,Samba.Domain.Models.Tickets,TaxValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\TaxValue.cs,GetTax,The following statement contains a magic number: result = decimal.Round ((price * TaxRate) / (100 + totalRate)' Rounding' MidpointRounding.AwayFromZero);  
Magic Number,Samba.Domain.Models.Tickets,TaxValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\TaxValue.cs,GetTax,The following statement contains a magic number: result = (price * TaxRate) / (100 + totalRate);  
Magic Number,Samba.Domain.Models.Tickets,TaxValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\TaxValue.cs,GetTax,The following statement contains a magic number: if (TaxRate > 0) {  	result = (price * TaxRate) / 100;  } else  	result = 0;  
Magic Number,Samba.Domain.Models.Tickets,TaxValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\TaxValue.cs,GetTax,The following statement contains a magic number: result = (price * TaxRate) / 100;  
Magic Number,Samba.Domain.Models.Tickets,OrderTagGroup,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderTagGroup.cs,OrderTagGroup,The following statement contains a magic number: ColumnCount = 5;  
Magic Number,Samba.Domain.Models.Tickets,OrderTagGroup,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderTagGroup.cs,OrderTagGroup,The following statement contains a magic number: ButtonHeight = 65;  
Magic Number,Samba.Domain.Models.Tickets,OrderTagGroup,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderTagGroup.cs,OrderTagGroup,The following statement contains a magic number: FontSize = 14;  
Magic Number,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,CalculateServices,The following statement contains a magic number: foreach (var calculation in calculations.OrderBy (x => x.Order)) {  	var sumValue = calculation.UsePlainSum ? Orders.Where (x => x.DecreaseInventory || x.IncreaseInventory).Sum (x => x.GetVisibleValue ()) : sum;  	calculation.Update (sumValue' currentSum' LocalSettings.Decimals);  	totalAmount += calculation.CalculationAmount;  	currentSum += calculation.CalculationAmount;  	if (calculation.Amount == 0 && calculation.CalculationType != 5) {  		Calculations.Remove (calculation);  	}  	calculation.UpdateCalculationTransaction (TransactionDocument' Math.Abs (calculation.CalculationAmount)' ExchangeRate);  }  
Magic Number,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,CalculateServices,The following statement contains a magic number: if (calculation.Amount == 0 && calculation.CalculationType != 5) {  	Calculations.Remove (calculation);  }  
Magic Number,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,AddCalculation,The following statement contains a magic number: if (amount == 0 && calculation.CalculationType != 5) {  	Calculations.Remove (calculation);  	calculation.UpdateCalculationTransaction (TransactionDocument' 0' ExchangeRate);  }  
Magic Number,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTaxTotal,The following statement contains a magic number: return decimal.Round (result' 2' MidpointRounding.AwayFromZero);  
Magic Number,Samba.Domain.Models.Tickets,Ticket,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\Ticket.cs,GetTaxTotal,The following statement contains a magic number: return decimal.Round (result' 2' MidpointRounding.AwayFromZero);  
Magic Number,Samba.Domain.Models.Tickets,OrderTagValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderTagValue.cs,ToShort,The following statement contains a magic number: if (TagValue.Length < 3)  	return name;  
Magic Number,Samba.Domain.Models.Tickets,OrderTagValue,F:\newReposMay17\emreeren_SambaPOS-3\Samba.Domain\Models\Tickets\OrderTagValue.cs,ToShort,The following statement contains a magic number: return name.Contains (" ") ? string.Join (""' name.Split (' ').Select (x => char.IsNumber (x.ElementAt (0)) ? x : x.ElementAt (0).ToString ())) : TagValue.Substring (0' 2);  
