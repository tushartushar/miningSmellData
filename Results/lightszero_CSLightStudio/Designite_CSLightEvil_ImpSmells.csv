Implementation smell,Namespace,Class,File,Method,Description
Long Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The method has 122 lines of code.
Long Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeAny,The method has 147 lines of code.
Long Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeInBlock,The method has 148 lines of code.
Long Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeAnyInFunc,The method has 143 lines of code.
Long Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression,The method has 401 lines of code.
Long Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The method has 314 lines of code.
Long Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,_FileCompiler,The method has 107 lines of code.
Long Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Class,The method has 253 lines of code.
Long Method,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,GetToken,The method has 501 lines of code.
Complex Method,CSLE,CLS_Environment,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\CLS_Environment.cs,GetTypeByKeyword,Cyclomatic complexity of the method is 12
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindFullExpression,Cyclomatic complexity of the method is 11
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,Cyclomatic complexity of the method is 28
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeAny,Cyclomatic complexity of the method is 37
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeInBlock,Cyclomatic complexity of the method is 37
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeAnyInFunc,Cyclomatic complexity of the method is 36
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeAnyWithoutKeyword,Cyclomatic complexity of the method is 23
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,SplitExpressionWithOp,Cyclomatic complexity of the method is 13
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,Cyclomatic complexity of the method is 25
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Value,Cyclomatic complexity of the method is 9
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,Cyclomatic complexity of the method is 33
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Loop_ForEach,Cyclomatic complexity of the method is 9
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Loop_If,Cyclomatic complexity of the method is 8
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Loop_Try,Cyclomatic complexity of the method is 8
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,_FileCompiler,Cyclomatic complexity of the method is 20
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Class,Cyclomatic complexity of the method is 33
Complex Method,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindBlock,Cyclomatic complexity of the method is 10
Complex Method,CSLE,CLS_Expression_Function,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Function\CLS_Expression_Function.cs,ComputeValue,Cyclomatic complexity of the method is 8
Complex Method,CSLE,CLS_Expression_LoopWhile,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopWhile.cs,ComputeValue,Cyclomatic complexity of the method is 10
Complex Method,CSLE,CLS_Expression_LoopFor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopFor.cs,ComputeValue,Cyclomatic complexity of the method is 11
Complex Method,CSLE,CLS_Expression_LoopForEach,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopForEach.cs,ComputeValue,Cyclomatic complexity of the method is 11
Complex Method,CSLE,CLS_Expression_Math2ValueAndOr,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Math\CLS_Expression_Math2ValueAndOR.cs,ComputeValue,Cyclomatic complexity of the method is 8
Complex Method,CSLE,RegHelper_DeleAction<T;T1;T2>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleAction3Param.cs,Math2Value,Cyclomatic complexity of the method is 17
Complex Method,CSLE,RegHelper_DeleAction<T;T1>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleAction2Param.cs,Math2Value,Cyclomatic complexity of the method is 17
Complex Method,CSLE,RegHelper_DeleAction<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleAction1Param.cs,Math2Value,Cyclomatic complexity of the method is 17
Complex Method,CSLE,RegHelper_DeleNonVoidAction<ReturnType>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleNonVoidAction.cs,Math2Value,Cyclomatic complexity of the method is 17
Complex Method,CSLE,RegHelper_DeleNonVoidAction<ReturnType;T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleNonVoidAction1Param.cs,Math2Value,Cyclomatic complexity of the method is 17
Complex Method,CSLE,RegHelper_DeleNonVoidAction<ReturnType;T;T1>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleNonVoidAction2Param.cs,Math2Value,Cyclomatic complexity of the method is 17
Complex Method,CSLE,RegHelper_DeleNonVoidAction<ReturnType;T;T1;T2>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleNonVoidAction3Param.cs,Math2Value,Cyclomatic complexity of the method is 17
Complex Method,CSLE,RegHelper_DeleAction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleAction.cs,Math2Value,Cyclomatic complexity of the method is 17
Complex Method,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,StaticCall,Cyclomatic complexity of the method is 14
Complex Method,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,FindTMethod,Cyclomatic complexity of the method is 13
Complex Method,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,MemberCall,Cyclomatic complexity of the method is 15
Complex Method,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,GetMethodSlow,Cyclomatic complexity of the method is 18
Complex Method,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,MemberValueGet,Cyclomatic complexity of the method is 8
Complex Method,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,MemberValueSet,Cyclomatic complexity of the method is 8
Complex Method,CSLE,RegHelper_Type,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,ConvertTo,Cyclomatic complexity of the method is 12
Complex Method,CSLE,RegHelper_Type,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,MathLogic,Cyclomatic complexity of the method is 11
Complex Method,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,GetToken,Cyclomatic complexity of the method is 85
Complex Method,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,Cyclomatic complexity of the method is 11
Complex Method,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,SaveTokenList,Cyclomatic complexity of the method is 8
Complex Method,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,ReadTokenList,Cyclomatic complexity of the method is 10
Complex Method,CSLE,SType,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Class.cs,StaticCall,Cyclomatic complexity of the method is 12
Complex Method,CSLE,SType,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Class.cs,MemberCall,Cyclomatic complexity of the method is 13
Complex Method,CSLE,NumericTypeUtils,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\utils\NumericTypeUtils.cs,GetDecimalValue,Cyclomatic complexity of the method is 12
Complex Method,CSLE,NumericTypeUtils,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\utils\NumericTypeUtils.cs,Decimal2TargetType,Cyclomatic complexity of the method is 12
Complex Method,CSLE,CLS_Content,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\_Interface\CLS_Content.cs,DumpStack,Cyclomatic complexity of the method is 10
Long Parameter List,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Block,The method has 5 parameters. Parameters: tlist' content' pos' posend' value
Long Parameter List,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression,The method has 5 parameters. Parameters: tlist' content' pos' posend' value
Long Parameter List,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,_FileCompiler,The method has 5 parameters. Parameters: filename' tokens' embDeubgToken' env' onlyGotType
Long Parameter List,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Class,The method has 11 parameters. Parameters: env' classname' bInterface' basetype' filename' tokens' ibegin' iend' EmbDebugToken' onlyGotType' usinglist
Long Parameter List,CSLE,RegHelper_DeleAction<T;T1;T2>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleAction3Param.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,RegHelper_DeleAction<T;T1>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleAction2Param.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,RegHelper_DeleAction<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleAction1Param.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,RegHelper_DeleNonVoidAction<ReturnType>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleNonVoidAction.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,RegHelper_DeleNonVoidAction<ReturnType;T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleNonVoidAction1Param.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,RegHelper_DeleNonVoidAction<ReturnType;T;T1>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleNonVoidAction2Param.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,RegHelper_DeleNonVoidAction<ReturnType;T;T1;T2>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleNonVoidAction3Param.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,RegHelper_DeleAction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleAction.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,MemberCall,The method has 5 parameters. Parameters: environment' object_this' function' _params' cache
Long Parameter List,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,GetMethodSlow,The method has 5 parameters. Parameters: content' bStatic' funcname' types' _params
Long Parameter List,CSLE,RegHelper_Type,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_Bool,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Bool.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_Long,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\ints\CLS_Type_Long.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_ULong,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\ints\CLS_Type_ULong.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_UShort,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\ints\CLS_Type_Ushort.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_Short,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\ints\CLS_Type_Short.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_Char,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\ints\CLS_Type_Char.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_Sbyte,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\ints\CLS_Type_Sbyte.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,SType,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Class.cs,SType,The method has 5 parameters. Parameters: keyword' _namespace' filename' bInterface' basetype
Long Parameter List,CSLE,SType,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Class.cs,MemberCall,The method has 5 parameters. Parameters: contentParent' object_this' func' _params' cache
Long Parameter List,CSLE,CLS_Type_Class,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Class.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_Double,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Double.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_Float,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Float.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_Delegate,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Delegate.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_Byte,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\ints\CLS_Type_Byte.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_Lambda,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Lambda.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_Int,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\ints\CLS_Type_Int.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_NULL,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Null.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_String,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_String.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_UInt,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\ints\CLS_Type_UInt.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,CLS_Type_Var,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Var.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Parameter List,CSLE,NumericTypeUtils,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\utils\NumericTypeUtils.cs,Math2Value,The method has 5 parameters. Parameters: opCode' left' right' returntype' math2ValueSuccess
Long Parameter List,CSLE,ICLS_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\_Interface\CLS_Type.cs,MemberCall,The method has 5 parameters. Parameters: environment' object_this' func' _params' cache
Long Parameter List,CSLE,ICLS_Type,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\_Interface\CLS_Type.cs,Math2Value,The method has 5 parameters. Parameters: env' code' left' right' returntype
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,OptimizeSingle,The length of the statement  "            if (expr is CLS_Expression_Math2Value || expr is CLS_Expression_Math2ValueAndOr || expr is CLS_Expression_Math2ValueLogic) " is 122.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,SplitExpressionWithOp,The length of the statement  "                if (tokens[i].type == TokenType.PUNCTUATION || (tokens[i].type == TokenType.KEYWORD && tokens[i].text == "as") || (tokens[i].type == TokenType.KEYWORD && tokens[i].text == "is")) " is 178.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,SplitExpressionWithOp,The length of the statement  "                        if (dep == 0 && (i == pos || tokens[i - 1].type == TokenType.PUNCTUATION) && i + 1 <= posend && tokens[i + 1].type == TokenType.TYPE) " is 133.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,SplitExpressionWithOp,The length of the statement  "                    if (tokens[i].type == TokenType.PUNCTUATION || (tokens[i].type == TokenType.KEYWORD && tokens[i].text == "as") || (tokens[i].type == TokenType.KEYWORD && tokens[i].text == "is")) " is 178.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression,The length of the statement  "                        else if (tlist[expbegin + 1].text == "[" && tlist[expbegin + 2].text == "]" && tlist[expbegin + 3].type == TokenType.IDENTIFIER)//定义表达式或者定义并赋值表达式 " is 145.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression,The length of the statement  "                    if (!bTest && (tlist[expbegin].type == TokenType.IDENTIFIER || tlist[expbegin].type == TokenType.VALUE || tlist[expbegin].type == TokenType.STRING)) " is 148.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_NegativeLogic,The length of the statement  "                    if (subvalue is CLS_Expression_Math2Value || subvalue is CLS_Expression_Math2ValueAndOr || subvalue is CLS_Expression_Math2ValueLogic) " is 134.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_NegativeLogic,The length of the statement  "                        CLS_Expression_NegativeLogic v = new CLS_Expression_NegativeLogic(pp.tokenBegin' pp.tokenEnd' pp.lineBegin' pp.lineEnd); " is 120.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                //if (posend >= pos + 3 && tlist[pos].text == "(" && tlist[pos].type == TokenType.PUNCTUATION && tlist[pos + 2].text == ")" && tlist[pos + 2].type == TokenType.PUNCTUATION " is 171.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                        CLS_Expression_StaticFunction value = new CLS_Expression_StaticFunction(pos' rightend' tlist[pos].line' tlist[rightend].line); " is 126.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                    CLS_Expression_TypeConvert convert = new CLS_Expression_TypeConvert(left' oppos + 1' tlist[left].line' tlist[oppos + 1].line); " is 126.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                    CLS_Expression_TypeCheck check = new CLS_Expression_TypeCheck(left' oppos + 1' tlist[left].line' tlist[oppos + 1].line); " is 120.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                            CLS_Expression_MemberSetValue value = new CLS_Expression_MemberSetValue(left' rightend' tlist[left].line' tlist[rightend].line); " is 128.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                            CLS_Expression_StaticSetValue value = new CLS_Expression_StaticSetValue(left' rightend' tlist[left].line' tlist[rightend].line); " is 128.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                            CLS_Expression_IndexSetValue value = new CLS_Expression_IndexSetValue(left' rightend' tlist[left].line' tlist[rightend].line); " is 126.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                            CLS_Expression_MemberFind value = new CLS_Expression_MemberFind(left' rightend' tlist[left].line' tlist[rightend].line); " is 120.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                            CLS_Expression_MemberFunction value = new CLS_Expression_MemberFunction(left' rightend' tlist[left].line' tlist[rightend].line); " is 128.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                            CLS_Expression_MemberMath value = new CLS_Expression_MemberMath(left' rightend' tlist[left].line' tlist[rightend].line); " is 120.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                    else if (tlist[oppos].text == "+=" || tlist[oppos].text == "-=" || tlist[oppos].text == "*=" || tlist[oppos].text == "/=" || tlist[oppos].text == "%=") " is 151.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                        //    CLS_Expression_MemberMath value = new CLS_Expression_MemberMath(left' rightend' tlist[left].line' tlist[rightend].line); " is 126.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                        //    CLS_Expression_StaticMath value = new CLS_Expression_StaticMath(left' rightend' tlist[left].line' tlist[rightend].line); " is 126.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                            CLS_Expression_SelfOpWithValue value = new CLS_Expression_SelfOpWithValue(left' rightend' tlist[left].line' tlist[rightend].line); " is 130.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                        CLS_Expression_Math2ValueAndOr value = new CLS_Expression_Math2ValueAndOr(left' rightend' tlist[left].line' tlist[rightend].line); " is 130.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                    else if (tlist[oppos].text == ">" || tlist[oppos].text == ">=" || tlist[oppos].text == "<" || tlist[oppos].text == "<=" || tlist[oppos].text == "==" || tlist[oppos].text == "!=") " is 178.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                        CLS_Expression_Math2ValueLogic value = new CLS_Expression_Math2ValueLogic(left' rightend' tlist[left].line' tlist[rightend].line); " is 130.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                            CLS_Expression_Math3Value value = new CLS_Expression_Math3Value(left' rightend' tlist[left].line' tlist[rightend].line); " is 120.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The length of the statement  "                            CLS_Expression_Math2Value value = new CLS_Expression_Math2Value(left' rightend' tlist[left].line' tlist[rightend].line); " is 120.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_FunctionNew,The length of the statement  "                CLS_Expression_FunctionNewArray func = new CLS_Expression_FunctionNewArray(pos' posend' tlist[pos].line' tlist[posend].line); " is 125.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,_FileCompiler,The length of the statement  "                        //ICLS_Type type = Compiler_Class(env' name' (tokens[i].text == "interface")' filename' tokens' ibegin' iend' embDeubgToken' true); " is 131.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,_FileCompiler,The length of the statement  "                        ICLS_Type type = Compiler_Class(env' name' (tokens[i].text == "interface")' typebase' filename' tokens' ibegin' iend' embDeubgToken' onlyGotType' usingList); " is 157.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Class,The length of the statement  "            //                if ((startpos + 2) <= iend && tokens[startpos + 1].text == "." && tokens[startpos + 2].type == TokenType.IDENTIFIER) " is 134.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Class,The length of the statement  "                else if (tokens[i].type == TokenType.TYPE || (tokens[i].type == TokenType.IDENTIFIER && tokens[i].text == classname))//发现类型 " is 123.
Long Statement,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Class,The length of the statement  "                        else if (tokens[i + 2].type == CSLE.TokenType.PUNCTUATION && (tokens[i + 2].text == "=" || tokens[i + 2].text == ";"))//这是成员定义 " is 126.
Long Statement,CSLE,RegHelper_Type,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,MathLogic,The length of the statement  "            else if (code == logictoken.more_equal)//[3] = {Boolean op_GreaterThanOrEqual(CLScriptExt.Vector3' CLScriptExt.Vector3)} " is 120.
Long Statement,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,GetToken,The length of the statement  "                while (i < line.Length - 1 && char.IsSeparator(line' i) == false && line[i] != '\n' && line[i] != '\r' && line[i] != '\t') " is 122.
Long Statement,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The length of the statement  "                    if (ts.Count >= 2 && t.type == TokenType.IDENTIFIER && ts[ts.Count - 1].text == "." && ts[ts.Count - 2].type == TokenType.TYPE) " is 127.
Long Statement,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The length of the statement  "                    if (ts.Count >= 2 && t.type == TokenType.TYPE && ts[ts.Count - 1].text == "." && (ts[ts.Count - 2].type == TokenType.TYPE || ts[ts.Count - 2].type == TokenType.IDENTIFIER)) " is 172.
Long Statement,CSLE,SType,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Class.cs,New,The length of the statement  "                            sv.value_value.member[i.Key].value = content.environment.GetType(value.type).ConvertTo(content' value.value' i.Value.type.type); " is 128.
Long Statement,CSLE,SType,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Class.cs,NewStatic,The length of the statement  "                                staticMemberInstance[i.Key].value = env.GetType(value.type).ConvertTo(contentMemberCalc' value.value' i.Value.type.type); " is 121.
Long Statement,CSLE,SType,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Class.cs,StaticValueSet,The length of the statement  "                            value = content.environment.GetType((value as SInstance).type).ConvertTo(content' value' this.members[valuename].type.type); " is 124.
Long Statement,CSLE,SType,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\CLS_Type_Class.cs,MemberValueSet,The length of the statement  "                            value = content.environment.GetType((value as SInstance).type).ConvertTo(content' value' this.members[valuename].type.type); " is 124.
Complex Conditional,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,SplitExpressionWithOp,The conditional expression  "tokens[i].type == TokenType.PUNCTUATION || (tokens[i].type == TokenType.KEYWORD && tokens[i].text == "as") || (tokens[i].type == TokenType.KEYWORD && tokens[i].text == "is")"  is complex.
Complex Conditional,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,SplitExpressionWithOp,The conditional expression  "dep == 0 && (i == pos || tokens[i - 1].type == TokenType.PUNCTUATION) && i + 1 <= posend && tokens[i + 1].type == TokenType.TYPE"  is complex.
Complex Conditional,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,SplitExpressionWithOp,The conditional expression  "dep == 0 && i > pos && i < posend && i != skip"  is complex.
Complex Conditional,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,SplitExpressionWithOp,The conditional expression  "tokens[i].type == TokenType.PUNCTUATION || (tokens[i].type == TokenType.KEYWORD && tokens[i].text == "as") || (tokens[i].type == TokenType.KEYWORD && tokens[i].text == "is")"  is complex.
Complex Conditional,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression,The conditional expression  "!bTest && (tlist[expbegin].type == TokenType.IDENTIFIER || tlist[expbegin].type == TokenType.VALUE || tlist[expbegin].type == TokenType.STRING)"  is complex.
Complex Conditional,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The conditional expression  "succ1 && succ2 && valueright != null && valueleft != null"  is complex.
Complex Conditional,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The conditional expression  "tlist[oppos].text == "+=" || tlist[oppos].text == "-=" || tlist[oppos].text == "*=" || tlist[oppos].text == "/=" || tlist[oppos].text == "%=""  is complex.
Complex Conditional,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Math,The conditional expression  "tlist[oppos].text == ">" || tlist[oppos].text == ">=" || tlist[oppos].text == "<" || tlist[oppos].text == "<=" || tlist[oppos].text == "==" || tlist[oppos].text == "!=""  is complex.
Complex Conditional,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,FindStart,The conditional expression  "!char.IsSeparator(lines' i) && lines[i] != '\n' && lines[i] != '\r' && lines[i] != '\t'"  is complex.
Complex Conditional,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,GetToken,The conditional expression  "i < line.Length - 1 && char.IsSeparator(line' i) == false && line[i] != '\n' && line[i] != '\r' && line[i] != '\t'"  is complex.
Complex Conditional,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The conditional expression  "ts.Count >= 2 && t.type == TokenType.IDENTIFIER && ts[ts.Count - 1].text == "." && ts[ts.Count - 2].type == TokenType.TYPE"  is complex.
Complex Conditional,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The conditional expression  "ts.Count >= 3 && t.type == TokenType.PUNCTUATION && t.text == ">"                          && ts[ts.Count - 1].type == TokenType.TYPE                          && ts[ts.Count - 2].type == TokenType.PUNCTUATION && ts[ts.Count - 2].text == "<"                          && ts[ts.Count - 3].type == TokenType.IDENTIFIER"  is complex.
Complex Conditional,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The conditional expression  "ts.Count >= 2 && t.type == TokenType.TYPE && ts[ts.Count - 1].text == "." && (ts[ts.Count - 2].type == TokenType.TYPE || ts[ts.Count - 2].type == TokenType.IDENTIFIER)"  is complex.
Complex Conditional,CSLE,NumericTypeUtils,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\utils\NumericTypeUtils.cs,GetReturnType_Math2Value,The conditional expression  "(ltIndex == T_Int && rtIndex == T_UInt) || (ltIndex == T_UInt && rtIndex == T_Int)"  is complex.
Complex Conditional,CSLE,NumericTypeUtils,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Type\utils\NumericTypeUtils.cs,GetReturnType_Math2Value,The conditional expression  "(ltIndex == T_UInt && rtIndex != T_Int) || (rtIndex == T_UInt && ltIndex != T_Int)"  is complex.
Empty Catch Block,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,StaticCall,The method has an empty catch block.
Magic Number,CSLE,CLS_Environment,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\CLS_Environment.cs,Project_PacketToStream,The following statement contains a magic number: outstream.Write(FileHead' 0' 8);
Magic Number,CSLE,CLS_Environment,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\CLS_Environment.cs,Project_PacketToStream,The following statement contains a magic number: outstream.Write(BitConverter.GetBytes(count)' 0' 2);
Magic Number,CSLE,CLS_Environment,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\CLS_Environment.cs,Project_FromPacketStream,The following statement contains a magic number: byte[] buf = new byte[8];
Magic Number,CSLE,CLS_Environment,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\CLS_Environment.cs,Project_FromPacketStream,The following statement contains a magic number: instream.Read(buf' 0' 8);
Magic Number,CSLE,CLS_Environment,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\CLS_Environment.cs,Project_FromPacketStream,The following statement contains a magic number: string filehead = System.Text.Encoding.UTF8.GetString(buf' 0' 8);
Magic Number,CSLE,CLS_Environment,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\CLS_Environment.cs,Project_FromPacketStream,The following statement contains a magic number: instream.Read(buf' 0' 2);
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeAny,The following statement contains a magic number: depstyle = 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeAny,The following statement contains a magic number: depstyle == 2 && dep == 0
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeInBlock,The following statement contains a magic number: depstyle = 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeInBlock,The following statement contains a magic number: depstyle == 2 && dep == 0
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeAnyInFunc,The following statement contains a magic number: depstyle = 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeAnyInFunc,The following statement contains a magic number: depstyle == 2 && dep == 0
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeAnyWithoutKeyword,The following statement contains a magic number: depstyle = 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeAnyWithoutKeyword,The following statement contains a magic number: depstyle == 2 && dep == 0
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,FindCodeKeyWord_New,The following statement contains a magic number: int fs1 = pos + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following statement contains a magic number: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Block,The following statement contains a magic number: bdep == 2
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_DefineArray,The following statement contains a magic number: define.value_name = tlist[pos + 3].text;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Lambda,The following statement contains a magic number: testbegin = fe2 + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Lambda,The following statement contains a magic number: int fs2 = fe1 + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_DefineAndSet,The following statement contains a magic number: int expbegin =pos+3;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_DefineAndSetArray,The following statement contains a magic number: int expbegin = pos + 5;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_DefineAndSetArray,The following statement contains a magic number: define.value_name = tlist[pos + 3].text;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Set,The following statement contains a magic number: int expbegin = pos + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Function,The following statement contains a magic number: int begin = pos + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Function,The following statement contains a magic number: begin = end + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_FunctionTrace,The following statement contains a magic number: begin = end + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_FunctionNew,The following statement contains a magic number: int begin = pos + 3;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_FunctionNew,The following statement contains a magic number: begin = end + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_FunctionNew,The following statement contains a magic number: tlist[pos + 2].type == TokenType.PUNCTUATION && tlist[pos + 2].text == "("
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_FunctionNew,The following statement contains a magic number: tlist[pos + 2].type == TokenType.PUNCTUATION && tlist[pos + 2].text == "("
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_FunctionStatic,The following statement contains a magic number: int begin = pos + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_FunctionStatic,The following statement contains a magic number: begin = end + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_IndexFind,The following statement contains a magic number: int begin = pos + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_IndexFind,The following statement contains a magic number: begin = end + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Loop_For,The following statement contains a magic number: testbegin = fe2 + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Loop_For,The following statement contains a magic number: value.listParam.Count != 3
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Loop_Dowhile,The following statement contains a magic number: int fs2 = fe1 + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Loop_Try,The following statement contains a magic number: b1 != 2
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,Compiler_Expression_Loop_Try,The following statement contains a magic number: int fs2 = fe1 + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,_FileCompiler,The following statement contains a magic number: i = i + 2;
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,_FileCompiler,The following statement contains a magic number: tokens[i + 1].text == "NotScipt" || (tokens[i + 1].text == "CSLE" && tokens[i + 3].text == "NotScipt")
Magic Number,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,_FileCompiler,The following statement contains a magic number: int ibegin = i + 2;
Magic Number,CSLE,CLS_Expression_IndexSetValue,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Function\CLS_Expression_IndexSetValue.cs,ComputeValue,The following statement contains a magic number: var value = listParam[2].ComputeValue(content);
Magic Number,CSLE,CLS_Expression_LoopBreak,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopBreak.cs,ComputeValue,The following statement contains a magic number: rv.breakBlock = 2;
Magic Number,CSLE,CLS_Expression_LoopWhile,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopWhile.cs,ComputeValue,The following statement contains a magic number: v.breakBlock > 2
Magic Number,CSLE,CLS_Expression_LoopDowhile,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopDowhile.cs,ComputeValue,The following statement contains a magic number: v.breakBlock > 2
Magic Number,CSLE,CLS_Expression_LoopFor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopFor.cs,ComputeValue,The following statement contains a magic number: ICLS_Expression expr_step = listParam[2] as ICLS_Expression;
Magic Number,CSLE,CLS_Expression_LoopFor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopFor.cs,ComputeValue,The following statement contains a magic number: ICLS_Expression expr_block = listParam[3] as ICLS_Expression;
Magic Number,CSLE,CLS_Expression_LoopFor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopFor.cs,ComputeValue,The following statement contains a magic number: v.breakBlock > 2
Magic Number,CSLE,CLS_Expression_LoopForEach,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopForEach.cs,ComputeValue,The following statement contains a magic number: ICLS_Expression expr_block = listParam[2] as ICLS_Expression;
Magic Number,CSLE,CLS_Expression_LoopForEach,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopForEach.cs,ComputeValue,The following statement contains a magic number: v.breakBlock > 2
Magic Number,CSLE,CLS_Expression_LoopIf,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopIf.cs,ComputeValue,The following statement contains a magic number: expr_go2= listParam[2];
Magic Number,CSLE,CLS_Expression_LoopIf,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopIf.cs,ComputeValue,The following statement contains a magic number: listParam.Count>2
Magic Number,CSLE,CLS_Expression_LoopReturn,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Expression\Loop\CLS_Expression_LoopReturn.cs,ComputeValue,The following statement contains a magic number: rv.breakBlock = 10;
Magic Number,CSLE,RegHelper_DeleAction<T;T1;T2>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleAction3Param.cs,CreateDelegate,The following statement contains a magic number: Action<T' T1' T2> dele = (T param0' T1 param1' T2 param2) =>              {                  var func = _func.calltype.functions[_func.function];                  if (func.expr_runtime != null)                  {                      CLS_Content content = new CLS_Content(env);                      try                      {                          content.DepthAdd();                          content.CallThis = _func.callthis;                          content.CallType = _func.calltype;                          content.function = _func.function;                              content.DefineAndSet(func._paramnames[0]' func._paramtypes[0].type' param0);                          content.DefineAndSet(func._paramnames[1]' func._paramtypes[1].type' param1);                          content.DefineAndSet(func._paramnames[2]' func._paramtypes[2].type' param2);                            func.expr_runtime.ComputeValue(content);                          content.DepthRemove();                      }                      catch (Exception err)                      {                          env.logger.Log(content.Dump());                          throw err;                      }                  }              };
Magic Number,CSLE,RegHelper_DeleAction<T;T1;T2>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleAction3Param.cs,CreateDelegate,The following statement contains a magic number: Action<T' T1' T2> dele = (T param0' T1 param1' T2 param2) =>              {                  var func = _func.calltype.functions[_func.function];                  if (func.expr_runtime != null)                  {                      CLS_Content content = new CLS_Content(env);                      try                      {                          content.DepthAdd();                          content.CallThis = _func.callthis;                          content.CallType = _func.calltype;                          content.function = _func.function;                              content.DefineAndSet(func._paramnames[0]' func._paramtypes[0].type' param0);                          content.DefineAndSet(func._paramnames[1]' func._paramtypes[1].type' param1);                          content.DefineAndSet(func._paramnames[2]' func._paramtypes[2].type' param2);                            func.expr_runtime.ComputeValue(content);                          content.DepthRemove();                      }                      catch (Exception err)                      {                          env.logger.Log(content.Dump());                          throw err;                      }                  }              };
Magic Number,CSLE,RegHelper_DeleAction<T;T1;T2>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleAction3Param.cs,CreateDelegate,The following statement contains a magic number: Action<T' T1' T2> dele = (T param0' T1 param1' T2 param2) =>              {                  if (expr != null)                  {                      try                      {                          content.DepthAdd();                            content.DefineAndSet(pnames[0]' typeof(T)' param0);                          content.DefineAndSet(pnames[1]' typeof(T1)' param1);                          content.DefineAndSet(pnames[2]' typeof(T2)' param2);                          expr.ComputeValue(content);                            content.DepthRemove();                      }                      catch (Exception err)                      {                          env.logger.Log(content.Dump());                          throw err;                      }                  }              };
Magic Number,CSLE,RegHelper_DeleNonVoidAction<ReturnType;T;T1;T2>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleNonVoidAction3Param.cs,CreateDelegate,The following statement contains a magic number: NonVoidDelegate dele = delegate(T param0' T1 param1' T2 param2)              {                  var func = _func.calltype.functions[_func.function];                  if (func.expr_runtime != null)                  {                      CLS_Content content = new CLS_Content(env);                      try                      {                          content.DepthAdd();                          content.CallThis = _func.callthis;                          content.CallType = _func.calltype;                          content.function = _func.function;                            content.DefineAndSet(func._paramnames[0]' func._paramtypes[0].type' param0);                          content.DefineAndSet(func._paramnames[1]' func._paramtypes[1].type' param1);                          content.DefineAndSet(func._paramnames[2]' func._paramtypes[2].type' param2);                            CLS_Content.Value retValue = func.expr_runtime.ComputeValue(content);                          content.DepthRemove();                            return (ReturnType)retValue.value;                      }                      catch (Exception err)                      {                          env.logger.Log(content.Dump());                          throw err;                      }                  }                  return default(ReturnType);              };
Magic Number,CSLE,RegHelper_DeleNonVoidAction<ReturnType;T;T1;T2>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleNonVoidAction3Param.cs,CreateDelegate,The following statement contains a magic number: NonVoidDelegate dele = delegate(T param0' T1 param1' T2 param2)              {                  var func = _func.calltype.functions[_func.function];                  if (func.expr_runtime != null)                  {                      CLS_Content content = new CLS_Content(env);                      try                      {                          content.DepthAdd();                          content.CallThis = _func.callthis;                          content.CallType = _func.calltype;                          content.function = _func.function;                            content.DefineAndSet(func._paramnames[0]' func._paramtypes[0].type' param0);                          content.DefineAndSet(func._paramnames[1]' func._paramtypes[1].type' param1);                          content.DefineAndSet(func._paramnames[2]' func._paramtypes[2].type' param2);                            CLS_Content.Value retValue = func.expr_runtime.ComputeValue(content);                          content.DepthRemove();                            return (ReturnType)retValue.value;                      }                      catch (Exception err)                      {                          env.logger.Log(content.Dump());                          throw err;                      }                  }                  return default(ReturnType);              };
Magic Number,CSLE,RegHelper_DeleNonVoidAction<ReturnType;T;T1;T2>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_DeleNonVoidAction3Param.cs,CreateDelegate,The following statement contains a magic number: NonVoidDelegate dele = delegate(T param0' T1 param1' T2 param2)              {                  if (expr != null)                  {                      try                      {                          content.DepthAdd();                            content.DefineAndSet(pnames[0]' typeof(T)' param0);                          content.DefineAndSet(pnames[1]' typeof(T1)' param1);                          content.DefineAndSet(pnames[2]' typeof(T2)' param2);                          CLS_Content.Value retValue = expr.ComputeValue(content);                            content.DepthRemove();                            return (ReturnType)retValue.value;                      }                      catch (Exception err)                      {                          env.logger.Log(content.Dump());                          throw err;                      }                  }                  return default(ReturnType);              };
Magic Number,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,StaticCall,The following statement contains a magic number: string strparam = function.Substring(sppos + 1' function.Length - sppos - 2);
Magic Number,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,MemberCall,The following statement contains a magic number: string strparam = function.Substring(sppos + 1' function.Length - sppos - 2);
Magic Number,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,MemberValueGet,The following statement contains a magic number: switch (c.type)              {                  case 1:                        v.value = c.finfo.GetValue(object_this);                      v.type = c.finfo.FieldType;                      break;                  case 2:                        v.value = c.minfo.Invoke(object_this' null);                      v.type = c.minfo.ReturnType;                      break;                  case 3:                      v.value = new DeleEvent(object_this' c.einfo);                      v.type = c.einfo.EventHandlerType;                      break;                }
Magic Number,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,MemberValueGet,The following statement contains a magic number: switch (c.type)              {                  case 1:                        v.value = c.finfo.GetValue(object_this);                      v.type = c.finfo.FieldType;                      break;                  case 2:                        v.value = c.minfo.Invoke(object_this' null);                      v.type = c.minfo.ReturnType;                      break;                  case 3:                      v.value = new DeleEvent(object_this' c.einfo);                      v.type = c.einfo.EventHandlerType;                      break;                }
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: string ntype = ts[ts.Count - 2].text + ts[ts.Count - 1].text + t.text;
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: t.pos = ts[ts.Count - 2].pos;
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: t.line = ts[ts.Count - 2].line;
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: ts.Count >= 2 && t.type == TokenType.IDENTIFIER && ts[ts.Count - 1].text == "." && ts[ts.Count - 2].type == TokenType.TYPE
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: ts.Count >= 2 && t.type == TokenType.IDENTIFIER && ts[ts.Count - 1].text == "." && ts[ts.Count - 2].type == TokenType.TYPE
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: string ntype = ts[ts.Count - 3].text + ts[ts.Count - 2].text + ts[ts.Count - 1].text + t.text;
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: string ntype = ts[ts.Count - 3].text + ts[ts.Count - 2].text + ts[ts.Count - 1].text + t.text;
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: t.pos = ts[ts.Count - 2].pos;
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: t.line = ts[ts.Count - 2].line;
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: ts.Count >= 3 && t.type == TokenType.PUNCTUATION && t.text == ">"                          && ts[ts.Count - 1].type == TokenType.TYPE                          && ts[ts.Count - 2].type == TokenType.PUNCTUATION && ts[ts.Count - 2].text == "<"                          && ts[ts.Count - 3].type == TokenType.IDENTIFIER
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: ts.Count >= 3 && t.type == TokenType.PUNCTUATION && t.text == ">"                          && ts[ts.Count - 1].type == TokenType.TYPE                          && ts[ts.Count - 2].type == TokenType.PUNCTUATION && ts[ts.Count - 2].text == "<"                          && ts[ts.Count - 3].type == TokenType.IDENTIFIER
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: ts.Count >= 3 && t.type == TokenType.PUNCTUATION && t.text == ">"                          && ts[ts.Count - 1].type == TokenType.TYPE                          && ts[ts.Count - 2].type == TokenType.PUNCTUATION && ts[ts.Count - 2].text == "<"                          && ts[ts.Count - 3].type == TokenType.IDENTIFIER
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: ts.Count >= 3 && t.type == TokenType.PUNCTUATION && t.text == ">"                          && ts[ts.Count - 1].type == TokenType.TYPE                          && ts[ts.Count - 2].type == TokenType.PUNCTUATION && ts[ts.Count - 2].text == "<"                          && ts[ts.Count - 3].type == TokenType.IDENTIFIER
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: ts.Count >= 2 && t.type == TokenType.TYPE && ts[ts.Count - 1].text == "." && (ts[ts.Count - 2].type == TokenType.TYPE || ts[ts.Count - 2].type == TokenType.IDENTIFIER)
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: ts.Count >= 2 && t.type == TokenType.TYPE && ts[ts.Count - 1].text == "." && (ts[ts.Count - 2].type == TokenType.TYPE || ts[ts.Count - 2].type == TokenType.IDENTIFIER)
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,Parse,The following statement contains a magic number: ts.Count >= 2 && t.type == TokenType.TYPE && ts[ts.Count - 1].text == "." && (ts[ts.Count - 2].type == TokenType.TYPE || ts[ts.Count - 2].type == TokenType.IDENTIFIER)
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,SaveTokenList,The following statement contains a magic number: stream.Write(BitConverter.GetBytes(linecount)' 0' 2);
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,SaveTokenList,The following statement contains a magic number: stream.Write(nbs' 0' 2);
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,ReadTokenList,The following statement contains a magic number: stream.Read(bs' 0' 2);
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,ReadTokenList,The following statement contains a magic number: stream.Read(bs' 0' 2);
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,ReadTokenList,The following statement contains a magic number: stream.Read(bs' 0' 2);
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,ReadTokenList,The following statement contains a magic number: stream.Read(bs' 0' 4);
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,ReadTokenList,The following statement contains a magic number: byte[] bufu = new byte[2];
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,ReadTokenList,The following statement contains a magic number: stream.Read(bufu' 0' 2);
Magic Number,CSLE,CLS_TokenParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Token\CLS_Token.cs,ReadTokenList,The following statement contains a magic number: stream.Read(bufu' 0' 2);
Missing Default,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetExpressionOp,The following switch statement is missing a default case: switch (tokens[i].text)                  {                      case "<":                          max = 6;                          break;                      case ">":                          max = 6;                          break;                      case "<=":                          max = 6;                          break;                      case ">=":                          max = 6;                          break;                      case "&&":                          max = 5;                          break;                      case "||":                          max = 5;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 3;                          break;                      case "/":                          max = 3;                          break;                      case "+":                          max = 2;                          break;                      case "-":                          max = 2;                          break;                  }
Missing Default,CSLE,CLS_Expression_Compiler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\Compitler\CLS_Compiler.cs,GetLowestMathOp,The following switch statement is missing a default case: switch (tokens[i].text)                  {                      case "?":                          max = -1;                          break;                      case ":":                          max = 0;                          break;                      case "<":                          max = 5;                          break;                      case ">":                          max = 5;                          break;                      case "<=":                          max = 5;                          break;                      case ">=":                          max = 5;                          break;                      case "&&":                          max = 3;                          break;                      case "||":                          max = 3;                          break;                      case "==":                          max = 4;                          break;                      case "!=":                          max = 4;                          break;                      case "*":                          max = 7;                          break;                      case "/":                          max = 7;                          break;                      case "%":                          max = 7;                          break;                      case "+":                          max = 6;                          break;                      case "-":                          max = 6;                          break;                      case ".":                          max = 10;                          break;                      case "=>":                          max = 8;                          break;                      case "[":                          max = 10;                          break;                      case "(":                          max = 9;                          break;                      case "as":                          max = 9;                          break;                      case "is":                          max = 9;                          break;                  }
Missing Default,CSLE,RegHelper_TypeFunction,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\core\CSLightEvil\C#LE\RegHelper\RegHelper_Type.cs,MemberValueGet,The following switch statement is missing a default case: switch (c.type)              {                  case 1:                        v.value = c.finfo.GetValue(object_this);                      v.type = c.finfo.FieldType;                      break;                  case 2:                        v.value = c.minfo.Invoke(object_this' null);                      v.type = c.minfo.ReturnType;                      break;                  case 3:                      v.value = new DeleEvent(object_this' c.einfo);                      v.type = c.einfo.EventHandlerType;                      break;                }
