Implementation smell,Namespace,Class,File,Method,Description
Long Method,ICSharpCode.AvalonEdit.Indentation.CSharp,IndentationReformatter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Indentation\CSharp\IndentationReformatter.cs,Step,The method has 281 lines of code.
Long Method,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadTag,The method has 120 lines of code.
Long Method,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadText,The method has 120 lines of code.
Long Method,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,Dereference,The method has 106 lines of code.
Complex Method,ICSharpCode.AvalonEdit,TextEditor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextEditor.cs,ScrollTo,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,HandleKey,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,SelectItemWithStart,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,GetMatchQuality,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.AvalonEdit.Document,TextUtilities,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\NewLineFinder.cs,GetNextCaretPosition,Cyclomatic complexity of the method is 19
Complex Method,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,FindOverlappingSegments,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,UpdateAugmentedData,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,RemoveNode,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,FixTreeOnDelete,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.AvalonEdit.Document,TextAnchorTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextAnchorTree.cs,HandleTextChange,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.AvalonEdit.Document,TextAnchorTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextAnchorTree.cs,RemoveNode,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Document,TextAnchorTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextAnchorTree.cs,FixTreeOnDelete,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.AvalonEdit.Document,LineManager,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\LineManager.cs,SetLineLength,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Document,DocumentLineTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\DocumentLineTree.cs,RemoveNode,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Document,DocumentLineTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\DocumentLineTree.cs,FixTreeOnDelete,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.AvalonEdit.Document,TextDocument,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextDocument.cs,Replace,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.AvalonEdit.Document,TextDocument,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextDocument.cs,DoReplace,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Editing,Caret,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\Caret.cs,RevalidateVisualColumn,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Editing,CaretNavigationCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\CaretNavigationCommandHandler.cs,MoveCaret,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.AvalonEdit.Editing,CaretNavigationCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\CaretNavigationCommandHandler.cs,MoveCaretUpDown,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.AvalonEdit.Editing,EditingCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\EditingCommandHandler.cs,TransformSelectedLines,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Editing,EditingCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\EditingCommandHandler.cs,TransformSelectedSegments,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Editing,EditingCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\EditingCommandHandler.cs,OnPaste,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Editing,SelectionMouseHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionMouseHandler.cs,textArea_MouseLeftButtonDown,Cyclomatic complexity of the method is 16
Complex Method,ICSharpCode.AvalonEdit.Folding,FoldingManager,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingManager.cs,UpdateFoldings,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,CalculateFoldLinesForFoldingsActiveAtStart,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,CalculateFoldLinesForMarkers,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Highlighting,DocumentHighlighter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\DocumentHighlighter.cs,HighlightLineInternal,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.AvalonEdit.Highlighting,DocumentHighlighter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\DocumentHighlighter.cs,HighlightNonSpans,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Highlighting,HighlightedInlineBuilder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\HighlightedInlineBuilder.cs,SetHighlighting,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Highlighting,HighlightedLine,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\HighlightedLine.cs,ToHtml,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.AvalonEdit.Highlighting,HtmlClipboard,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\HtmlClipboard.cs,CreateHtmlFragment,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Highlighting,HtmlClipboard,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\HtmlClipboard.cs,EscapeHtml,Cyclomatic complexity of the method is 14
Complex Method,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,ImportRuleSet,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,ImportRegex,Cyclomatic complexity of the method is 14
Complex Method,ICSharpCode.AvalonEdit.Highlighting.Xshd,V2Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V2Loader.cs,ParseElements,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.AvalonEdit.Highlighting.Xshd,V2Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V2Loader.cs,ParseSpan,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Highlighting.Xshd,TranslateElementVisitor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\XmlHighlightingDefinition.cs,VisitRuleSet,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Highlighting.Xshd,TranslateElementVisitor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\XmlHighlightingDefinition.cs,VisitKeywords,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.AvalonEdit.Indentation.CSharp,IndentationReformatter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Indentation\CSharp\IndentationReformatter.cs,Step,Cyclomatic complexity of the method is 73
Complex Method,ICSharpCode.AvalonEdit.Rendering,BackgroundGeometryBuilder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\BackgroundGeometryBuilder.cs,GetRectsForSegmentImpl,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Rendering,BackgroundGeometryBuilder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\BackgroundGeometryBuilder.cs,ProcessTextLines,Cyclomatic complexity of the method is 14
Complex Method,ICSharpCode.AvalonEdit.Rendering,ColorizingTransformer,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\ColorizingTransformer.cs,ChangeVisualElements,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Rendering,HeightTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\HeightTree.cs,InsertAfter,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Rendering,HeightTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\HeightTree.cs,MergeCollapsedSectionsIfPossible,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.AvalonEdit.Rendering,HeightTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\HeightTree.cs,RemoveNode,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Rendering,HeightTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\HeightTree.cs,FixTreeOnDelete,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.AvalonEdit.Rendering,HeightTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\HeightTree.cs,AddRemoveCollapsedSection,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,InsertLayer,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,MeasureOverride,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,CreateAndMeasureVisualLines,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,BuildVisualLine,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,ArrangeOverride,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,OnRender,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,MakeVisible,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Rendering,VisualLine,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLine.cs,PerformVisualElementConstruction,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.AvalonEdit.Rendering,VisualLine,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLine.cs,GetTextLineVisualYPosition,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.AvalonEdit.Rendering,VisualLine,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLine.cs,GetNextCaretPosition,Cyclomatic complexity of the method is 24
Complex Method,ICSharpCode.AvalonEdit.Rendering,VisualLineTextSource,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineTextSource.cs,GetTextRun,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Snippets,InsertionContext,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Snippets\InsertionContext.cs,RaiseInsertionCompleted,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Utils,CompressingTreeList<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\CompressingTreeList.cs,InsertRange,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Utils,CompressingTreeList<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\CompressingTreeList.cs,RemoveRange,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.AvalonEdit.Utils,CompressingTreeList<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\CompressingTreeList.cs,RemoveNode,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Utils,CompressingTreeList<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\CompressingTreeList.cs,FixTreeOnDelete,Cyclomatic complexity of the method is 11
Complex Method,ICSharpCode.AvalonEdit.Utils,FileReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\FileReader.cs,AutoDetect,Cyclomatic complexity of the method is 16
Complex Method,ICSharpCode.AvalonEdit.Utils,Rope<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\Rope.cs,FindNodeUsingCache,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Utils,RopeNode<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\RopeNode.cs,RemoveRange,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Xml,CanonicalPrintAXmlVisitor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\CanonicalPrintAXmlVisitor.cs,VisitTag,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.AvalonEdit.Xml,FilteredCollection<T;TCollection>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\FilteredCollection.cs,SourceCollectionChanged,Cyclomatic complexity of the method is 13
Complex Method,ICSharpCode.AvalonEdit.Xml,TagMatchingHeuristics,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagMatchingHeuristics.cs,ReadDocument,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.AvalonEdit.Xml,TagMatchingHeuristics,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagMatchingHeuristics.cs,ReadElement,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Xml,TagMatchingHeuristics,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagMatchingHeuristics.cs,ProcessObject,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadTag,Cyclomatic complexity of the method is 35
Complex Method,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadOpeningBracket,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadContentOfDTD,Cyclomatic complexity of the method is 14
Complex Method,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadAttribulte,Cyclomatic complexity of the method is 12
Complex Method,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadAttributeValue,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadText,Cyclomatic complexity of the method is 32
Complex Method,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,Dereference,Cyclomatic complexity of the method is 22
Long Parameter List,ICSharpCode.AvalonEdit.Document,OffsetChangeMapEntry,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\OffsetChangeMap.cs,OffsetChangeMapEntry,The method has 5 parameters. Parameters: offset' removalLength' insertionLength' removalNeverCausesAnchorDeletion' defaultAnchorMovementIsBeforeInsertion
Long Parameter List,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,CheckNodeProperties,The method has 5 parameters. Parameters: node' parentNode' parentColor' blackCount' expectedBlackCount
Long Parameter List,ICSharpCode.AvalonEdit.Document,TextAnchorTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextAnchorTree.cs,CheckNodeProperties,The method has 5 parameters. Parameters: node' parentNode' parentColor' blackCount' expectedBlackCount
Long Parameter List,ICSharpCode.AvalonEdit.Document,DocumentLineTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\DocumentLineTree.cs,CheckNodeProperties,The method has 5 parameters. Parameters: node' parentNode' parentColor' blackCount' expectedBlackCount
Long Parameter List,ICSharpCode.AvalonEdit.Editing,CaretNavigationCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\CaretNavigationCommandHandler.cs,MoveCaretUpDown,The method has 5 parameters. Parameters: textArea' direction' visualLine' textLine' caretVisualColumn
Long Parameter List,ICSharpCode.AvalonEdit.Editing,CaretNavigationCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\CaretNavigationCommandHandler.cs,SetCaretPosition,The method has 5 parameters. Parameters: textArea' targetVisualLine' targetLine' newVisualColumn' allowWrapToNextLine
Long Parameter List,ICSharpCode.AvalonEdit.Editing,ImeSupport,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\ImeSupport.cs,WndProc,The method has 5 parameters. Parameters: hWnd' msg' wParam' lParam' handled
Long Parameter List,ICSharpCode.AvalonEdit.Rendering,HeightTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\HeightTree.cs,CheckNodeProperties,The method has 5 parameters. Parameters: node' parentNode' parentColor' blackCount' expectedBlackCount
Long Parameter List,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,BuildVisualLine,The method has 6 parameters. Parameters: documentLine' globalTextRunProperties' paragraphProperties' elementGeneratorsArray' lineTransformersArray' availableSize
Long Parameter List,ICSharpCode.AvalonEdit.Utils,CompressingTreeList<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\CompressingTreeList.cs,CheckNodeProperties,The method has 5 parameters. Parameters: node' parentNode' parentColor' blackCount' expectedBlackCount
Long Parameter List,ICSharpCode.AvalonEdit.Utils,TextFormatterFactory,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\TextFormatterFactory.cs,CreateFormattedText,The method has 5 parameters. Parameters: element' text' typeface' emSize' foreground
Long Parameter List,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,OnSyntaxError,The method has 5 parameters. Parameters: obj' start' end' message' args
Long Identifier,ICSharpCode.AvalonEdit,TextEditor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextEditor.cs,,The length of the parameter HorizontalScrollBarVisibilityProperty is 37.
Long Identifier,ICSharpCode.AvalonEdit,TextEditor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextEditor.cs,,The length of the parameter VerticalScrollBarVisibilityProperty is 35.
Long Identifier,ICSharpCode.AvalonEdit,TextEditorOptions,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextEditorOptions.cs,,The length of the parameter requireControlModifierForHyperlinkClick is 39.
Long Identifier,ICSharpCode.AvalonEdit.Document,OffsetChangeMapEntry,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\OffsetChangeMap.cs,OffsetChangeMapEntry,The length of the parameter removalNeverCausesAnchorDeletion is 32.
Long Identifier,ICSharpCode.AvalonEdit.Document,OffsetChangeMapEntry,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\OffsetChangeMap.cs,OffsetChangeMapEntry,The length of the parameter defaultAnchorMovementIsBeforeInsertion is 38.
Long Identifier,ICSharpCode.AvalonEdit.Document,OffsetChangeMapEntry,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\OffsetChangeMap.cs,,The length of the parameter insertionLengthWithMovementFlag is 31.
Long Identifier,ICSharpCode.AvalonEdit.Document,TextAnchorTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextAnchorTree.cs,InsertText,The length of the parameter defaultAnchorMovementIsBeforeInsertion is 38.
Long Identifier,ICSharpCode.AvalonEdit.Document,TextAnchorTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextAnchorTree.cs,PerformInsertText,The length of the parameter defaultAnchorMovementIsBeforeInsertion is 38.
Long Identifier,ICSharpCode.AvalonEdit.Document,UndoStack,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\UndoStack.cs,,The length of the parameter elementsOnUndoUntilOriginalFile is 31.
Long Identifier,ICSharpCode.AvalonEdit.Editing,Caret,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\Caret.cs,,The length of the parameter raisePositionChangedOnUpdateFinished is 36.
Long Identifier,ICSharpCode.AvalonEdit.Editing,ImeNativeWrapper,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\ImeNativeWrapper.cs,,The length of the parameter textFrameworkThreadMgrInitialized is 33.
Long Identifier,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,,The length of the parameter FoldingMarkerBackgroundBrushProperty is 36.
Long Identifier,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,,The length of the parameter SelectedFoldingMarkerBrushProperty is 34.
Long Identifier,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,,The length of the parameter SelectedFoldingMarkerBackgroundBrushProperty is 44.
Long Identifier,ICSharpCode.AvalonEdit.Rendering,DocumentColorizingTransformer,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\DocumentColorizingTransformer.cs,,The length of the parameter currentDocumentLineStartOffset is 30.
Long Identifier,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,Redraw,The length of the parameter changedSomethingBeforeOrInLine is 30.
Long Identifier,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,,The length of the parameter singleCharacterElementGenerator is 31.
Long Identifier,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,,The length of the parameter visualLinesWithOutstandingInlineObjects is 39.
Long Identifier,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,,The length of the parameter NonPrintableCharacterBrushProperty is 34.
Long Identifier,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,,The length of the parameter LinkTextForegroundBrushProperty is 31.
Long Identifier,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,,The length of the parameter LinkTextBackgroundBrushProperty is 31.
Long Identifier,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,,The length of the parameter AdditionalHorizontalScrollAmount is 32.
Long Identifier,ICSharpCode.AvalonEdit.Rendering,VisualLineElement,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineElement.cs,SplitHelper,The length of the parameter relativeSplitRelativeTextOffset is 31.
Long Identifier,ICSharpCode.AvalonEdit.Search,DropDownButton,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Search\DropDownButton.cs,,The length of the parameter IsDropDownContentOpenPropertyKey is 32.
Long Statement,ICSharpCode.AvalonEdit,TextEditor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextEditor.cs,OnLineNumbersForegroundChanged,The length of the statement  "			var lineNumberMargin = editor.TextArea.LeftMargins.FirstOrDefault(margin => margin is LineNumberMargin) as LineNumberMargin;; " is 125.
Long Statement,ICSharpCode.AvalonEdit,TextEditor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextEditor.cs,Load,The length of the statement  "				this.Encoding = reader.CurrentEncoding; // assign encoding after ReadToEnd() so that the StreamReader can autodetect the encoding " is 129.
Long Statement,ICSharpCode.AvalonEdit,TextEditor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextEditor.cs,ScrollTo,The length of the statement  "				Point p = textArea.TextView.GetVisualPosition(new TextViewPosition(line' Math.Max(1' column))' VisualYPosition.LineMiddle); " is 123.
Long Statement,ICSharpCode.AvalonEdit.CodeCompletion,CompletionWindowBase,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionWindowBase.cs,TextViewScrollOffsetChanged,The length of the statement  "			Rect visibleRect = new Rect(scrollInfo.HorizontalOffset' scrollInfo.VerticalOffset' scrollInfo.ViewportWidth' scrollInfo.ViewportHeight); " is 137.
Long Statement,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,SelectItemFiltering,The length of the statement  "			var listToFilter = (this.currentList != null && (!string.IsNullOrEmpty(this.currentText)) && (!string.IsNullOrEmpty(query)) && " is 126.
Long Statement,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,SelectItemFiltering,The length of the statement  "			ICompletionData suggestedItem = listBox.SelectedIndex != -1 ? (ICompletionData)(listBox.Items[listBox.SelectedIndex]) : null; " is 125.
Long Statement,ICSharpCode.AvalonEdit.CodeCompletion,CompletionWindow,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionWindow.cs,completionList_InsertionRequested,The length of the statement  "				item.Complete(this.TextArea' new AnchorSegment(this.TextArea.Document' this.StartOffset' this.EndOffset - this.StartOffset)' e); " is 128.
Long Statement,ICSharpCode.AvalonEdit.CodeCompletion,InsightWindow,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\InsightWindow.cs,OnSourceInitialized,The length of the statement  "			Rect workingArea = System.Windows.Forms.Screen.FromPoint(pointOnScreen.ToSystemDrawing()).WorkingArea.ToWpf().TransformFromDevice(this); " is 136.
Long Statement,ICSharpCode.AvalonEdit.Document,SimpleSegment,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\ISegment.cs,ToString,The length of the statement  "			return "[Offset=" + Offset.ToString(CultureInfo.InvariantCulture) + "' Length=" + Length.ToString(CultureInfo.InvariantCulture) + "]"; " is 134.
Long Statement,ICSharpCode.AvalonEdit.Document,AnchorSegment,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\ISegment.cs,ToString,The length of the statement  "			return "[Offset=" + Offset.ToString(CultureInfo.InvariantCulture) + "' EndOffset=" + EndOffset.ToString(CultureInfo.InvariantCulture) + "]"; " is 140.
Long Statement,ICSharpCode.AvalonEdit.Document,OffsetChangeMapEntry,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\OffsetChangeMap.cs,Equals,The length of the statement  "			return offset == other.offset && insertionLengthWithMovementFlag == other.insertionLengthWithMovementFlag && removalLengthWithDeletionFlag == other.removalLengthWithDeletionFlag; " is 178.
Long Statement,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,UpdateOffsets,The length of the statement  "				throw new InvalidOperationException("This TextSegmentCollection will automatically update offsets; do not call UpdateOffsets manually!"); " is 137.
Long Statement,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,UpdateOffsets,The length of the statement  "				throw new InvalidOperationException("This TextSegmentCollection will automatically update offsets; do not call UpdateOffsets manually!"); " is 137.
Long Statement,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,UpdateOffsetsInternal,The length of the statement  "			// Special case pure insertions' because they don't always cause a text segment to increase in size when the replaced region " is 124.
Long Statement,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,CopyTo,The length of the statement  "				throw new ArgumentOutOfRangeException("arrayIndex"' arrayIndex' "Value must be between 0 and " + (array.Length - count)); " is 121.
Long Statement,ICSharpCode.AvalonEdit.Document,DocumentLineTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\DocumentLineTree.cs,CopyTo,The length of the statement  "				throw new ArgumentOutOfRangeException("arrayIndex"' arrayIndex' "Value must be between 0 and " + (array.Length - LineCount)); " is 125.
Long Statement,ICSharpCode.AvalonEdit.Document,TextDocument,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextDocument.cs,ThrowIfRangeInvalid,The length of the statement  "				throw new ArgumentOutOfRangeException("offset"' offset' "0 <= offset <= " + rope.Length.ToString(CultureInfo.InvariantCulture)); " is 128.
Long Statement,ICSharpCode.AvalonEdit.Document,TextDocument,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextDocument.cs,ThrowIfRangeInvalid,The length of the statement  "				throw new ArgumentOutOfRangeException("length"' length' "0 <= length' offset(" + offset + ")+length <= " + rope.Length.ToString(CultureInfo.InvariantCulture)); " is 159.
Long Statement,ICSharpCode.AvalonEdit.Document,TextDocument,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextDocument.cs,CreateAnchor,The length of the statement  "				throw new ArgumentOutOfRangeException("offset"' offset' "0 <= offset <= " + rope.Length.ToString(CultureInfo.InvariantCulture)); " is 128.
Long Statement,ICSharpCode.AvalonEdit.Editing,Caret,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\Caret.cs,RevalidateVisualColumn,The length of the statement  "			int newVisualColumnForwards = visualLine.GetNextCaretPosition(position.VisualColumn - 1' LogicalDirection.Forward' CaretPositioningMode.Normal' textArea.Selection.EnableVirtualSpace); " is 183.
Long Statement,ICSharpCode.AvalonEdit.Editing,Caret,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\Caret.cs,RevalidateVisualColumn,The length of the statement  "				int newVisualColumnBackwards = visualLine.GetNextCaretPosition(position.VisualColumn + 1' LogicalDirection.Backward' CaretPositioningMode.Normal' textArea.Selection.EnableVirtualSpace); " is 185.
Long Statement,ICSharpCode.AvalonEdit.Editing,CaretNavigationCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\CaretNavigationCommandHandler.cs,OnMoveCaretExtendSelection,The length of the statement  "					if (!textArea.Document.IsInUpdate) // if we're inside a larger update (e.g. called by EditingCommandHandler.OnDelete())' avoid calculating the caret rectangle now " is 162.
Long Statement,ICSharpCode.AvalonEdit.Editing,CaretNavigationCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\CaretNavigationCommandHandler.cs,MoveCaretToStartOfLine,The length of the statement  "			int newVC = visualLine.GetNextCaretPosition(-1' LogicalDirection.Forward' CaretPositioningMode.WordStart' textArea.Selection.EnableVirtualSpace); " is 145.
Long Statement,ICSharpCode.AvalonEdit.Editing,CaretNavigationCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\CaretNavigationCommandHandler.cs,MoveCaretRight,The length of the statement  "			int pos = visualLine.GetNextCaretPosition(caretPosition.VisualColumn' LogicalDirection.Forward' mode' textArea.Selection.EnableVirtualSpace); " is 141.
Long Statement,ICSharpCode.AvalonEdit.Editing,CaretNavigationCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\CaretNavigationCommandHandler.cs,MoveCaretRight,The length of the statement  "					Debug.Assert(visualLine.LastDocumentLine.Offset + visualLine.LastDocumentLine.TotalLength == textArea.Document.TextLength); " is 123.
Long Statement,ICSharpCode.AvalonEdit.Editing,CaretNavigationCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\CaretNavigationCommandHandler.cs,MoveCaretLeft,The length of the statement  "			int pos = visualLine.GetNextCaretPosition(caretPosition.VisualColumn' LogicalDirection.Backward' mode' textArea.Selection.EnableVirtualSpace); " is 142.
Long Statement,ICSharpCode.AvalonEdit.Editing,CaretNavigationCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\CaretNavigationCommandHandler.cs,MoveCaretLeft,The length of the statement  "					pos = previousLine.GetNextCaretPosition(previousLine.VisualLength + 1' LogicalDirection.Backward' mode' textArea.Selection.EnableVirtualSpace); " is 143.
Long Statement,ICSharpCode.AvalonEdit.Editing,EditingCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\EditingCommandHandler.cs,OnTab,The length of the statement  "								textArea.Document.Replace(offset' 0' textArea.Options.IndentationString' OffsetChangeMappingType.KeepAnchorBeforeInsertion); " is 124.
Long Statement,ICSharpCode.AvalonEdit.Editing,EditingCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\EditingCommandHandler.cs,OnCut,The length of the statement  "					ISegment[] segmentsToDelete = textArea.GetDeletableSegments(new SimpleSegment(currentLine.Offset' currentLine.TotalLength)); " is 124.
Long Statement,ICSharpCode.AvalonEdit.Editing,EditingCommandHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\EditingCommandHandler.cs,CopyWholeLine,The length of the statement  "			HtmlClipboard.SetHtml(data' HtmlClipboard.CreateHtmlFragment(textArea.Document' highlighter' wholeLine' new HtmlOptions(textArea.Options))); " is 140.
Long Statement,ICSharpCode.AvalonEdit.Editing,SelectionSegment,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionSegment.cs,ToString,The length of the statement  "			return string.Format("[SelectionSegment StartOffset={0}' EndOffset={1}' StartVC={2}' EndVC={3}]"' startOffset' endOffset' startVC' endVC); " is 138.
Long Statement,ICSharpCode.AvalonEdit.Editing,RectangleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\RectangleSelection.cs,UpdateOnDocumentChange,The length of the statement  "			TextLocation newStartLocation = textArea.Document.GetLocation(e.GetNewOffset(topLeftOffset' AnchorMovementType.AfterInsertion)); " is 128.
Long Statement,ICSharpCode.AvalonEdit.Editing,RectangleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\RectangleSelection.cs,UpdateOnDocumentChange,The length of the statement  "			TextLocation newEndLocation = textArea.Document.GetLocation(e.GetNewOffset(bottomRightOffset' AnchorMovementType.BeforeInsertion)); " is 131.
Long Statement,ICSharpCode.AvalonEdit.Editing,RectangleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\RectangleSelection.cs,ReplaceSelectionWithText,The length of the statement  "				TextViewPosition start = new TextViewPosition(document.GetLocation(topLeftOffset)' GetVisualColumnFromXPos(startLine' startXPos)); " is 130.
Long Statement,ICSharpCode.AvalonEdit.Editing,RectangleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\RectangleSelection.cs,ReplaceSelectionWithText,The length of the statement  "				TextViewPosition end = new TextViewPosition(document.GetLocation(bottomRightOffset)' GetVisualColumnFromXPos(endLine' endXPos)); " is 128.
Long Statement,ICSharpCode.AvalonEdit.Editing,RectangleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\RectangleSelection.cs,ReplaceSelectionWithText,The length of the statement  "				textArea.Caret.Position = textArea.TextView.GetPosition(new Point(GetXPos(textArea' pos)' textArea.TextView.GetVisualTopByDocumentLine(Math.Max(startLine' endLine)))).GetValueOrDefault(); " is 187.
Long Statement,ICSharpCode.AvalonEdit.Editing,RectangleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\RectangleSelection.cs,ReplaceSingleLineText,The length of the statement  "					newText = AddSpacesIfRequired(newText' new TextViewPosition(document.GetLocation(lineSegment.StartOffset)' lineSegment.StartVisualColumn)' new TextViewPosition(document.GetLocation(lineSegment.EndOffset)' lineSegment.EndVisualColumn)); " is 235.
Long Statement,ICSharpCode.AvalonEdit.Editing,RectangleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\RectangleSelection.cs,ReplaceSingleLineText,The length of the statement  "						if (segmentsToDelete[i].Offset == SurroundingSegment.Offset && segmentsToDelete[i].Length == SurroundingSegment.Length) { " is 121.
Long Statement,ICSharpCode.AvalonEdit.Editing,RectangleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\RectangleSelection.cs,ReplaceSingleLineText,The length of the statement  "							newText = AddSpacesIfRequired(newText' new TextViewPosition(document.GetLocation(lineSegment.StartOffset)' lineSegment.StartVisualColumn)' new TextViewPosition(document.GetLocation(lineSegment.EndOffset)' lineSegment.EndVisualColumn)); " is 235.
Long Statement,ICSharpCode.AvalonEdit.Editing,RectangleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\RectangleSelection.cs,PerformRectangularPaste,The length of the statement  "			int newLineCount = text.Count(c => c == '\n'); // TODO might not work in all cases' but single \r line endings are really rare today. " is 133.
Long Statement,ICSharpCode.AvalonEdit.Editing,RectangleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\RectangleSelection.cs,PerformRectangularPaste,The length of the statement  "					RectangleSelection rsel = new RectangleSelection(textArea' startPosition' endLocation.Line' GetXPos(textArea' startPosition)); " is 126.
Long Statement,ICSharpCode.AvalonEdit.Editing,RectangleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\RectangleSelection.cs,ToString,The length of the statement  "			return string.Format("[RectangleSelection {0} {1} {2} to {3} {4} {5}]"' startLine' topLeftOffset' startXPos' endLine' bottomRightOffset' endXPos); " is 146.
Long Statement,ICSharpCode.AvalonEdit.Editing,Selection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\Selection.cs,Create,The length of the statement  "			if (textArea.Document.GetOffset(start.Location) == textArea.Document.GetOffset(end.Location) && start.VisualColumn == end.VisualColumn) " is 135.
Long Statement,ICSharpCode.AvalonEdit.Editing,Selection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\Selection.cs,IsInVirtualSpace,The length of the statement  "			return pos.VisualColumn > textArea.TextView.GetOrConstructVisualLine(textArea.Document.GetLineByNumber(pos.Line)).VisualLength; " is 127.
Long Statement,ICSharpCode.AvalonEdit.Editing,SelectionColorizer,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionColorizer.cs,Colorize,The length of the statement  "					startColumn = context.VisualLine.ValidateVisualColumn(segment.StartOffset' segment.StartVisualColumn' textArea.Selection.EnableVirtualSpace); " is 141.
Long Statement,ICSharpCode.AvalonEdit.Editing,SelectionColorizer,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionColorizer.cs,Colorize,The length of the statement  "					endColumn = context.VisualLine.ValidateVisualColumn(segment.EndOffset' segment.EndVisualColumn' textArea.Selection.EnableVirtualSpace); " is 135.
Long Statement,ICSharpCode.AvalonEdit.Editing,SelectionMouseHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionMouseHandler.cs,StartDrag,The length of the statement  "			if (deleteOnMove != null && resultEffect == DragDropEffects.Move && (allowedEffects & DragDropEffects.Move) == DragDropEffects.Move) { " is 134.
Long Statement,ICSharpCode.AvalonEdit.Editing,SelectionMouseHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionMouseHandler.cs,textArea_MouseLeftButtonDown,The length of the statement  "								textArea.Selection = textArea.Selection.SetEndpoint(new TextViewPosition(textArea.Document.GetLocation(startWord.Offset))); " is 123.
Long Statement,ICSharpCode.AvalonEdit.Editing,SelectionMouseHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionMouseHandler.cs,textArea_MouseLeftButtonDown,The length of the statement  "								textArea.Selection = textArea.Selection.SetEndpoint(new TextViewPosition(textArea.Document.GetLocation(startWord.EndOffset))); " is 126.
Long Statement,ICSharpCode.AvalonEdit.Editing,SelectionMouseHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionMouseHandler.cs,GetWordAtMousePosition,The length of the statement  "				int wordStartVC = line.GetNextCaretPosition(visualColumn + 1' LogicalDirection.Backward' CaretPositioningMode.WordStartOrSymbol' textArea.Selection.EnableVirtualSpace); " is 168.
Long Statement,ICSharpCode.AvalonEdit.Editing,SelectionMouseHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionMouseHandler.cs,GetWordAtMousePosition,The length of the statement  "				int wordEndVC = line.GetNextCaretPosition(wordStartVC' LogicalDirection.Forward' CaretPositioningMode.WordBorderOrSymbol' textArea.Selection.EnableVirtualSpace); " is 161.
Long Statement,ICSharpCode.AvalonEdit.Editing,SelectionMouseHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionMouseHandler.cs,textArea_MouseMove,The length of the statement  "			if (mode == SelectionMode.Normal || mode == SelectionMode.WholeWord || mode == SelectionMode.WholeLine || mode == SelectionMode.Rectangular) { " is 142.
Long Statement,ICSharpCode.AvalonEdit.Editing,SelectionMouseHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionMouseHandler.cs,textArea_MouseLeftButtonUp,The length of the statement  "			} else if (mode == SelectionMode.Normal || mode == SelectionMode.WholeWord || mode == SelectionMode.WholeLine || mode == SelectionMode.Rectangular) { " is 149.
Long Statement,ICSharpCode.AvalonEdit.Editing,SimpleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SimpleSelection.cs,ReplaceSelectionWithText,The length of the statement  "						if (segmentsToDelete[i].Offset == SurroundingSegment.Offset && segmentsToDelete[i].Length == SurroundingSegment.Length) { " is 121.
Long Statement,ICSharpCode.AvalonEdit.Editing,SimpleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SimpleSelection.cs,UpdateOnDocumentChange,The length of the statement  "				new TextViewPosition(textArea.Document.GetLocation(e.GetNewOffset(startOffset' AnchorMovementType.Default))' start.VisualColumn)' " is 129.
Long Statement,ICSharpCode.AvalonEdit.Editing,SimpleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SimpleSelection.cs,UpdateOnDocumentChange,The length of the statement  "				new TextViewPosition(textArea.Document.GetLocation(e.GetNewOffset(endOffset' AnchorMovementType.Default))' end.VisualColumn) " is 124.
Long Statement,ICSharpCode.AvalonEdit.Editing,TextArea,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\TextArea.cs,OnTextInput,The length of the statement  "			//Debug.WriteLine("TextInput: Text='" + e.Text + "' SystemText='" + e.SystemText + "' ControlText='" + e.ControlText + "'"); " is 124.
Long Statement,ICSharpCode.AvalonEdit.Editing,TextArea,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\TextArea.cs,GetDeletableSegments,The length of the statement  "					throw new InvalidOperationException("ReadOnlySectionProvider returned incorrect segments (outside of input segment / wrong order)"); " is 132.
Long Statement,ICSharpCode.AvalonEdit.Editing,TextArea,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\TextArea.cs,GetDeletableSegments,The length of the statement  "				throw new InvalidOperationException("ReadOnlySectionProvider returned incorrect segments (outside of input segment / wrong order)"); " is 132.
Long Statement,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,DrawFoldLines,The length of the statement  "						drawingContext.DrawLine(endMarker[tlNumber]' new Point(markerXPos - pixelSize.Width / 2' visualPos)' new Point(RenderSize.Width' visualPos)); " is 141.
Long Statement,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,DrawFoldLines,The length of the statement  "							drawingContext.DrawLine(currentPen' new Point(markerXPos' startY + pixelSize.Height / 2)' new Point(markerXPos' visualPos - pixelSize.Height / 2)); " is 147.
Long Statement,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,DrawFoldLines,The length of the statement  "				drawingContext.DrawLine(currentPen' new Point(markerXPos' startY + pixelSize.Height / 2)' new Point(markerXPos' RenderSize.Height)); " is 132.
Long Statement,ICSharpCode.AvalonEdit.Folding,FoldingSection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingSection.cs,ValidateCollapsedLineSections,The length of the statement  "							Debug.WriteLine("CollapsedLineSection validation - recreate collapsed section from " + startLinePlusOne + " to " + endLine); " is 124.
Long Statement,ICSharpCode.AvalonEdit.Folding,XmlFoldingStrategy,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\XmlFoldingStrategy.cs,CreateElementFoldStart,The length of the statement  "			//XmlFoldStart newFoldStart = new XmlFoldStart(reader.Prefix' reader.LocalName' reader.LineNumber - 1' reader.LinePosition - 2); " is 128.
Long Statement,ICSharpCode.AvalonEdit.Highlighting,DocumentHighlighter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\DocumentHighlighter.cs,HighlightLineAndUpdateTreeList,The length of the statement  "				//Debug.WriteLine("Span stack in line " + lineNumber + " changed from " + storedSpanStacks[lineNumber] + " to " + spanStack); " is 125.
Long Statement,ICSharpCode.AvalonEdit.Highlighting,HighlightedLine,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\HighlightedLine.cs,ToHtml,The length of the statement  "				throw new ArgumentOutOfRangeException("startOffset"' startOffset' "Value must be between " + documentLineStartOffset + " and " + documentLineEndOffset); " is 152.
Long Statement,ICSharpCode.AvalonEdit.Highlighting,HighlightedLine,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\HighlightedLine.cs,ToHtml,The length of the statement  "				throw new ArgumentOutOfRangeException("endOffset"' endOffset' "Value must be between startOffset and " + documentLineEndOffset); " is 128.
Long Statement,ICSharpCode.AvalonEdit.Highlighting,HighlightingColorizer,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\HighlightingColorizer.cs,textView_VisualLineConstructionStarting,The length of the statement  "				// This is necessary in case the document gets modified above the FirstLineInView so that the highlighting state changes. " is 121.
Long Statement,ICSharpCode.AvalonEdit.Highlighting,TextViewDocumentHighlighter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\HighlightingColorizer.cs,OnHighlightStateChanged,The length of the statement  "				 * But doing it too early means it doesn't have the information necessary to re-highlight and redraw only the desired parts. " is 123.
Long Statement,ICSharpCode.AvalonEdit.Highlighting,DelayLoadedHighlightingDefinition,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\HighlightingManager.cs,GetDefinition,The length of the statement  "							throw new InvalidOperationException("Tried to create delay-loaded highlighting definition recursively. Make sure the are no cyclic references between the highlighting definitions."); " is 182.
Long Statement,ICSharpCode.AvalonEdit.Highlighting,DefaultHighlightingManager,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\HighlightingManager.cs,RegisterHighlighting,The length of the statement  "//						new System.Runtime.Serialization.Formatters.Binary.BinaryFormatter().Serialize(fs' Xshd.HighlightingLoader.Load(xshd' this)); " is 133.
Long Statement,ICSharpCode.AvalonEdit.Highlighting,HtmlClipboard,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\HtmlClipboard.cs,SetHtml,The length of the statement  "			string htmlEnd = "<!--EndFragment-->" + Environment.NewLine + "</BODY>" + Environment.NewLine + "</HTML>" + Environment.NewLine; " is 128.
Long Statement,ICSharpCode.AvalonEdit.Highlighting.Xshd,SaveXshdVisitor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\SaveXshdVisitor.cs,WriteRuleSetReference,The length of the statement  "					writer.WriteAttributeString("ruleSet"' ruleSetReference.ReferencedDefinition + "/" + ruleSetReference.ReferencedElement); " is 121.
Long Statement,ICSharpCode.AvalonEdit.Highlighting.Xshd,SaveXshdVisitor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\SaveXshdVisitor.cs,WriteColorAttributes,The length of the statement  "				writer.WriteAttributeString("fontWeight"' V2Loader.FontWeightConverter.ConvertToInvariantString(color.FontWeight.Value).ToLowerInvariant()); " is 140.
Long Statement,ICSharpCode.AvalonEdit.Highlighting.Xshd,SaveXshdVisitor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\SaveXshdVisitor.cs,WriteColorAttributes,The length of the statement  "				writer.WriteAttributeString("fontStyle"' V2Loader.FontStyleConverter.ConvertToInvariantString(color.FontStyle.Value).ToLowerInvariant()); " is 137.
Long Statement,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,GetColorFromElement,The length of the statement  "			if (!element.HasAttribute("bold") && !element.HasAttribute("italic") && !element.HasAttribute("color") && !element.HasAttribute("bgcolor")) " is 139.
Long Statement,ICSharpCode.AvalonEdit.Highlighting.Xshd,V2Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V2Loader.cs,Error,The length of the statement  "				return new HighlightingDefinitionInvalidException(HighlightingLoader.FormatExceptionMessage(message' lineInfo.LineNumber' lineInfo.LinePosition)); " is 146.
Long Statement,ICSharpCode.AvalonEdit.Highlighting.Xshd,TranslateElementVisitor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\XmlHighlightingDefinition.cs,GetDefinition,The length of the statement  "					throw Error(position' "Resolving references to other syntax definitions is not possible because the IHighlightingDefinitionReferenceResolver is null."); " is 152.
Long Statement,ICSharpCode.AvalonEdit.Indentation.CSharp,IndentationReformatter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Indentation\CSharp\IndentationReformatter.cs,Step,The length of the statement  "				if (block.LastWord == "case" || line.StartsWith("case "' StringComparison.Ordinal) || line.StartsWith(block.LastWord + ":"' StringComparison.Ordinal)) " is 150.
Long Statement,ICSharpCode.AvalonEdit.Rendering,BackgroundGeometryBuilder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\BackgroundGeometryBuilder.cs,ProcessTextLines,The length of the statement  "					// The following special cases are necessary to get rid of empty rectangles at the end of a TextLine if "Show Spaces" is active. " is 128.
Long Statement,ICSharpCode.AvalonEdit.Rendering,BackgroundGeometryBuilder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\BackgroundGeometryBuilder.cs,ProcessTextLines,The length of the statement  "					// If not excluded once' the same rectangle is calculated (and added) twice (since the offset could be mapped to two visual positions; end/start of line)' if there is no trailing whitespace. " is 190.
Long Statement,ICSharpCode.AvalonEdit.Rendering,BackgroundGeometryBuilder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\BackgroundGeometryBuilder.cs,ProcessTextLines,The length of the statement  "					// Skip this TextLine segment' if it is at the end of this line and this line is not the last line of the VisualLine and the selection continues and there is no trailing whitespace. " is 181.
Long Statement,ICSharpCode.AvalonEdit.Rendering,BackgroundGeometryBuilder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\BackgroundGeometryBuilder.cs,ProcessTextLines,The length of the statement  "					if (segmentEndVCInLine == visualEndCol && i < visualLine.TextLines.Count - 1 && segmentEndVC > segmentEndVCInLine && line.TrailingWhitespaceLength == 0) " is 152.
Long Statement,ICSharpCode.AvalonEdit.Rendering,BackgroundGeometryBuilder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\BackgroundGeometryBuilder.cs,ProcessTextLines,The length of the statement  "					if (segmentStartVCInLine == visualStartCol && i > 0 && segmentStartVC < segmentStartVCInLine && visualLine.TextLines[i - 1].TrailingWhitespaceLength == 0) " is 154.
Long Statement,ICSharpCode.AvalonEdit.Rendering,BackgroundGeometryBuilder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\BackgroundGeometryBuilder.cs,ProcessTextLines,The length of the statement  "						double left = (segmentStartVC > visualLine.VisualLengthWithEndOfLineMarker ? visualLine.GetTextLineVisualXPosition(lastTextLine' segmentStartVC) : line.Width) - scrollOffset.X; " is 176.
Long Statement,ICSharpCode.AvalonEdit.Rendering,BackgroundGeometryBuilder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\BackgroundGeometryBuilder.cs,ProcessTextLines,The length of the statement  "						double right = ((segmentEndVC == int.MaxValue || line != lastTextLine) ? Math.Max(((IScrollInfo)textView).ExtentWidth' ((IScrollInfo)textView).ViewportWidth) : visualLine.GetTextLineVisualXPosition(lastTextLine' segmentEndVC)) - scrollOffset.X; " is 244.
Long Statement,ICSharpCode.AvalonEdit.Rendering,DocumentColorizingTransformer,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\DocumentColorizingTransformer.cs,ChangeLinePart,The length of the statement  "				throw new ArgumentOutOfRangeException("startOffset"' startOffset' "Value must be between " + currentDocumentLineStartOffset + " and " + currentDocumentLineEndOffset); " is 166.
Long Statement,ICSharpCode.AvalonEdit.Rendering,DocumentColorizingTransformer,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\DocumentColorizingTransformer.cs,ChangeLinePart,The length of the statement  "				throw new ArgumentOutOfRangeException("endOffset"' endOffset' "Value must be between " + startOffset + " and " + currentDocumentLineEndOffset); " is 143.
Long Statement,ICSharpCode.AvalonEdit.Rendering,MouseHoverLogic,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\MouseHoverLogic.cs,StartHovering,The length of the statement  "			mouseHoverTimer = new DispatcherTimer(SystemParameters.MouseHoverTime' DispatcherPriority.Background' OnMouseHoverTimerElapsed' this.target.Dispatcher); " is 152.
Long Statement,ICSharpCode.AvalonEdit.Rendering,SingleCharacterElementGenerator,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,ConstructElement,The length of the statement  "				return new SpaceTextElement(CurrentContext.TextView.cachedElements.GetTextForNonPrintableCharacter("\u00B7"' CurrentContext)); " is 126.
Long Statement,ICSharpCode.AvalonEdit.Rendering,SingleCharacterElementGenerator,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,ConstructElement,The length of the statement  "				return new TabTextElement(CurrentContext.TextView.cachedElements.GetTextForNonPrintableCharacter("\u00BB"' CurrentContext)); " is 124.
Long Statement,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,ReceiveWeakEvent,The length of the statement  "				// Unfortunately the "easy" approach (just use DispatcherPriority.Background) here makes the editor twice as slow because " is 121.
Long Statement,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,ReceiveWeakEvent,The length of the statement  "				// When fixing this' make sure performance on the SharpDevelop "type text in C# comment" stress test doesn't get significantly worse. " is 133.
Long Statement,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,UpdateBuiltinElementGeneratorsFromOptions,The length of the statement  "			AddRemoveDefaultElementGeneratorOnDemand(ref singleCharacterElementGenerator' options.ShowBoxForControlCharacters || options.ShowSpaces || options.ShowTabs); " is 157.
Long Statement,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,EnsureVisualLines,The length of the statement  "				throw new InvalidOperationException("The visual line build process is already running! Cannot EnsureVisualLines() during Measure!"); " is 132.
Long Statement,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,BuildVisualLine,The length of the statement  "							throw new InvalidOperationException("Line " + i + " was skipped by a VisualLineElementGenerator' but it is not collapsed."); " is 124.
Long Statement,ICSharpCode.AvalonEdit.Rendering,VisualLine,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLine.cs,ReplaceElement,The length of the statement  "				throw new InvalidOperationException("Old elements have document length " + oldDocumentLength + "' but new elements have length " + newDocumentLength); " is 150.
Long Statement,ICSharpCode.AvalonEdit.Rendering,VisualLine,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLine.cs,GetNextCaretPosition,The length of the statement  "				if (visualColumn > this.VisualLength && !elements[elements.Count-1].HandlesLineBorders && HasImplicitStopAtLineEnd(mode)) { " is 123.
Long Statement,ICSharpCode.AvalonEdit.Rendering,VisualLineElement,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineElement.cs,SplitHelper,The length of the statement  "				throw new ArgumentOutOfRangeException("splitVisualColumn"' splitVisualColumn' "Value must be between " + (VisualColumn + 1) + " and " + (VisualColumn + VisualLength - 1)); " is 171.
Long Statement,ICSharpCode.AvalonEdit.Rendering,VisualLineElement,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineElement.cs,SplitHelper,The length of the statement  "				throw new ArgumentOutOfRangeException("splitRelativeTextOffset"' splitRelativeTextOffset' "Value must be between " + (RelativeTextOffset) + " and " + (RelativeTextOffset + DocumentLength)); " is 189.
Long Statement,ICSharpCode.AvalonEdit.Rendering,VisualLineElement,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineElement.cs,GetNextCaretPosition,The length of the statement  "				else if (visualColumn < stop2 && mode != CaretPositioningMode.WordStart && mode != CaretPositioningMode.WordStartOrSymbol) " is 122.
Long Statement,ICSharpCode.AvalonEdit.Rendering,VisualLineText,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineText.cs,CreateTextRun,The length of the statement  "			StringSegment text = context.GetText(context.VisualLine.FirstDocumentLine.Offset + RelativeTextOffset + relativeOffset' DocumentLength - relativeOffset); " is 153.
Long Statement,ICSharpCode.AvalonEdit.Rendering,VisualLineText,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineText.cs,GetPrecedingText,The length of the statement  "			return new TextSpan<CultureSpecificCharacterBufferRange>(range.Length' new CultureSpecificCharacterBufferRange(this.TextRunProperties.CultureInfo' range)); " is 155.
Long Statement,ICSharpCode.AvalonEdit.Rendering,VisualLineText,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineText.cs,Split,The length of the statement  "				throw new ArgumentOutOfRangeException("splitVisualColumn"' splitVisualColumn' "Value must be between " + (VisualColumn + 1) + " and " + (VisualColumn + VisualLength - 1)); " is 171.
Long Statement,ICSharpCode.AvalonEdit.Rendering,VisualLineText,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineText.cs,GetNextCaretPosition,The length of the statement  "			int pos = TextUtilities.GetNextCaretPosition(parentVisualLine.Document' textOffset + visualColumn - this.VisualColumn' direction' mode); " is 136.
Long Statement,ICSharpCode.AvalonEdit.Rendering,VisualLineTextSource,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineTextSource.cs,CreateTextRunForNewLine,The length of the statement  "			return new FormattedTextRun(new FormattedTextElement(TextView.cachedElements.GetTextForNonPrintableCharacter(newlineText' this)' 0)' GlobalTextRunProperties); " is 158.
Long Statement,ICSharpCode.AvalonEdit.Rendering,VisualLineTextSource,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineTextSource.cs,GetPrecedingText,The length of the statement  "				return new TextSpan<CultureSpecificCharacterBufferRange>(empty.Length' new CultureSpecificCharacterBufferRange(null' empty)); " is 125.
Long Statement,ICSharpCode.AvalonEdit.Search,RegexSearchStrategy,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Search\RegexSearchStrategy.cs,IsWordBorder,The length of the statement  "			return TextUtilities.GetNextCaretPosition(document' offset - 1' LogicalDirection.Forward' CaretPositioningMode.WordBorder) == offset; " is 133.
Long Statement,ICSharpCode.AvalonEdit.Search,SearchPanel,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Search\SearchPanel.cs,UpdateSearch,The length of the statement  "			strategy = SearchStrategyFactory.Create(SearchPattern ?? ""' !MatchCase' WholeWords' UseRegex ? SearchMode.RegEx : SearchMode.Normal); " is 134.
Long Statement,ICSharpCode.AvalonEdit.Utils,CharRope,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\CharRope.cs,InsertText,The length of the statement  "				throw new ArgumentOutOfRangeException("index"' index' "0 <= index <= " + rope.Length.ToString(CultureInfo.InvariantCulture)); " is 125.
Long Statement,ICSharpCode.AvalonEdit.Utils,CompressingTreeList<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\CompressingTreeList.cs,CopyTo,The length of the statement  "				throw new ArgumentOutOfRangeException("arrayIndex"' arrayIndex' "Value must be between 0 and " + (array.Length - this.Count)); " is 126.
Long Statement,ICSharpCode.AvalonEdit.Utils,ExtensionMethods,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\ExtensionMethods.cs,Log,The length of the statement  "				string output = DateTime.Now.ToString("hh:MM:ss") + ": " + string.Format(format' args) + Environment.NewLine + Environment.StackTrace; " is 134.
Long Statement,ICSharpCode.AvalonEdit.Utils,Rope<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\Rope.cs,InsertRange,The length of the statement  "				throw new ArgumentOutOfRangeException("index"' index' "0 <= index <= " + this.Length.ToString(CultureInfo.InvariantCulture)); " is 125.
Long Statement,ICSharpCode.AvalonEdit.Utils,Rope<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\Rope.cs,InsertRange,The length of the statement  "				throw new ArgumentOutOfRangeException("index"' index' "0 <= index <= " + this.Length.ToString(CultureInfo.InvariantCulture)); " is 125.
Long Statement,ICSharpCode.AvalonEdit.Utils,Rope<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\Rope.cs,VerifyRange,The length of the statement  "				throw new ArgumentOutOfRangeException("startIndex"' startIndex' "0 <= startIndex <= " + this.Length.ToString(CultureInfo.InvariantCulture)); " is 140.
Long Statement,ICSharpCode.AvalonEdit.Utils,Rope<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\Rope.cs,VerifyRange,The length of the statement  "				throw new ArgumentOutOfRangeException("length"' length' "0 <= length' startIndex(" + startIndex + ")+length <= " + this.Length.ToString(CultureInfo.InvariantCulture)); " is 167.
Long Statement,ICSharpCode.AvalonEdit.Utils,Rope<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\Rope.cs,VerifyArrayWithRange,The length of the statement  "				throw new ArgumentOutOfRangeException("startIndex"' arrayIndex' "0 <= arrayIndex <= " + array.Length.ToString(CultureInfo.InvariantCulture)); " is 141.
Long Statement,ICSharpCode.AvalonEdit.Utils,Rope<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\Rope.cs,VerifyArrayWithRange,The length of the statement  "				throw new ArgumentOutOfRangeException("count"' count' "0 <= length' arrayIndex(" + arrayIndex + ")+count <= " + array.Length.ToString(CultureInfo.InvariantCulture)); " is 165.
Long Statement,ICSharpCode.AvalonEdit.Utils,RopeNode<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\RopeNode.cs,ToString,The length of the statement  "				return "[Concat length=" + length + "' isShared=" + isShared + "' height=" + height + "' Balance=" + this.Balance + "]"; " is 120.
Long Statement,ICSharpCode.AvalonEdit.Utils,FunctionNode<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\RopeNode.cs,GetContentNode,The length of the statement  "						throw new InvalidOperationException("Trying to load this node recursively; or: a previous call to a rope initializer failed."); " is 127.
Long Statement,ICSharpCode.AvalonEdit.Utils,ThrowUtil,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\ThrowUtil.cs,CheckInRangeInclusive,The length of the statement  "				throw new ArgumentOutOfRangeException(parameterName' val' "Expected: " + lower.ToString(CultureInfo.InvariantCulture) + " <= " + parameterName + " <= " + upper.ToString(CultureInfo.InvariantCulture)); " is 200.
Long Statement,ICSharpCode.AvalonEdit.Xml,AXmlAttribute,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlAttribute.cs,ToString,The length of the statement  "			return string.Format(CultureInfo.InvariantCulture' "[{0} '{1}{2}{3}']"' base.ToString()' this.Name' this.EqualsSign' this.Value); " is 129.
Long Statement,ICSharpCode.AvalonEdit.Xml,AXmlDocument,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlDocument.cs,OnObjectInserted,The length of the statement  "				ObjectInserted(this' new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add' new AXmlObject[] { obj }.ToList()' index)); " is 136.
Long Statement,ICSharpCode.AvalonEdit.Xml,AXmlDocument,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlDocument.cs,OnObjectRemoved,The length of the statement  "				ObjectRemoved(this' new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove' new AXmlObject[] { obj }.ToList()' index)); " is 138.
Long Statement,ICSharpCode.AvalonEdit.Xml,AXmlElement,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlElement.cs,ToString,The length of the statement  "			return string.Format(CultureInfo.InvariantCulture' "[{0} '{1}' Attr:{2} Chld:{3} Nest:{4}]"' base.ToString()' this.Name' this.HasStartOrEmptyTag ? this.StartTag.Children.Count : 0' this.Children.Count' this.IsProperlyNested ? "Ok" : "Bad"); " is 240.
Long Statement,ICSharpCode.AvalonEdit.Xml,AXmlObject,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlObject.cs,ToString,The length of the statement  "			return string.Format(CultureInfo.InvariantCulture' "{0}({1}-{2})"' this.GetType().Name.Remove(0' 4)' this.StartOffset' this.EndOffset); " is 135.
Long Statement,ICSharpCode.AvalonEdit.Xml,AXmlObjectCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlObjectCollection.cs,InsertItemAt,The length of the statement  "				OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add' new T[] { item }.ToList()' index)); " is 127.
Long Statement,ICSharpCode.AvalonEdit.Xml,AXmlObjectCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlObjectCollection.cs,RemoveItemAt,The length of the statement  "				OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove' new T[] { removed }.ToList()' index)); " is 133.
Long Statement,ICSharpCode.AvalonEdit.Xml,AXmlParser,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlParser.cs,Parse,The length of the statement  "			Assert(userDocument.GetSelfAndAllChildren().Count() == parsedDocument.GetSelfAndAllChildren().Count()' "Parsed document and updated document have different number of children"); " is 177.
Long Statement,ICSharpCode.AvalonEdit.Xml,AXmlTag,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlTag.cs,ToString,The length of the statement  "			return string.Format(CultureInfo.InvariantCulture' "[{0} '{1}{2}{3}' Attr:{4}]"' base.ToString()' this.OpeningBracket' this.Name' this.ClosingBracket' this.Children.Count); " is 172.
Long Statement,ICSharpCode.AvalonEdit.Xml,TagMatchingHeuristics,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagMatchingHeuristics.cs,ReadDocument,The length of the statement  "			foreach(AXmlTag xmlDeclaration in doc.Children.OfType<AXmlTag>().Where(t => t.IsProcessingInstruction && string.Equals(t.Name' "xml"' StringComparison.OrdinalIgnoreCase))) { " is 173.
Long Statement,ICSharpCode.AvalonEdit.Xml,TagMatchingHeuristics,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagMatchingHeuristics.cs,ProcessObject,The length of the statement  "			AXmlParser.DebugAssert(objAsTag != null || objAsElement != null || obj is AXmlText' obj.GetType().Name + " not expected"); " is 122.
Long Statement,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,OnParsed,The length of the statement  "			trackedSegments.AddParsedObject(obj' this.MaxTouchedLocation > this.CurrentLocation ? (int?)this.MaxTouchedLocation : null); " is 124.
Long Statement,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadTag,The length of the statement  "					throw new InternalException(string.Format(CultureInfo.InvariantCulture' "Unknown opening bracket '{0}'"' tag.OpeningBracket)); " is 126.
Long Statement,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadTag,The length of the statement  "				if (tag.ClosingBracket != ">" && tag.ClosingBracket != "/>") OnSyntaxError(tag' brStart' brEnd' "'>' or '/>' expected"); " is 120.
Long Statement,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadTag,The length of the statement  "				throw new InternalException(string.Format(CultureInfo.InvariantCulture' "Unknown opening bracket '{0}'"' tag.OpeningBracket)); " is 126.
Long Statement,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadText,The length of the statement  "					AXmlObject nextFragment = trackedSegments.GetCachedObject<AXmlText>(this.CurrentLocation + maxEntityLength' lookAheadLength - maxEntityLength' t => t.Type == type); " is 164.
Long Statement,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadText,The length of the statement  "						AXmlParser.Log("Parsing only text ({0}-{1}) because later text was already processed"' this.CurrentLocation' fragmentEnd); " is 122.
Long Statement,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,Dereference,The length of the statement  "						if (!int.TryParse(name.Substring(2)' NumberStyles.AllowHexSpecifier' CultureInfo.InvariantCulture.NumberFormat' out num)) { " is 123.
Long Statement,ICSharpCode.AvalonEdit.Xml,TokenReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TokenReader.cs,PrintStringCacheStats,The length of the statement  "			AXmlParser.Log("String cache: Requested {0} ({1} bytes);  Actaully stored {2} ({3} bytes); {4}% stored"' stringCacheRequestedCount' stringCacheRequestedSize' stringCacheStoredCount' stringCacheStoredSize' stringCacheRequestedSize == 0 ? 0 : stringCacheStoredSize * 100 / stringCacheRequestedSize); " is 297.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,ICSharpCode.AvalonEdit.Document,TextUtilities,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\NewLineFinder.cs,GetNextCaretPosition,The conditional expression  "mode != CaretPositioningMode.Normal  			    && mode != CaretPositioningMode.WordBorder  			    && mode != CaretPositioningMode.WordStart  			    && mode != CaretPositioningMode.WordBorderOrSymbol  			    && mode != CaretPositioningMode.WordStartOrSymbol"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,TextUtilities,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\NewLineFinder.cs,GetNextCaretPosition,The conditional expression  "!((mode == CaretPositioningMode.WordStart || mode == CaretPositioningMode.WordStartOrSymbol)  						      && (charAfter == CharacterClass.Whitespace || charAfter == CharacterClass.LineTerminator))"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,FixTreeOnDelete,The conditional expression  "parentNode.color == BLACK  			    && sibling.color == BLACK  			    && GetColor(sibling.left) == BLACK  			    && GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,FixTreeOnDelete,The conditional expression  "parentNode.color == RED  			    && sibling.color == BLACK  			    && GetColor(sibling.left) == BLACK  			    && GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,FixTreeOnDelete,The conditional expression  "node == parentNode.left &&  			    sibling.color == BLACK &&  			    GetColor(sibling.left) == RED &&  			    GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,FixTreeOnDelete,The conditional expression  "node == parentNode.right &&  			         sibling.color == BLACK &&  			         GetColor(sibling.right) == RED &&  			         GetColor(sibling.left) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,TextAnchorTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextAnchorTree.cs,FixTreeOnDelete,The conditional expression  "parentNode.color == BLACK  			    && sibling.color == BLACK  			    && GetColor(sibling.left) == BLACK  			    && GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,TextAnchorTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextAnchorTree.cs,FixTreeOnDelete,The conditional expression  "parentNode.color == RED  			    && sibling.color == BLACK  			    && GetColor(sibling.left) == BLACK  			    && GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,TextAnchorTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextAnchorTree.cs,FixTreeOnDelete,The conditional expression  "node == parentNode.left &&  			    sibling.color == BLACK &&  			    GetColor(sibling.left) == RED &&  			    GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,TextAnchorTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextAnchorTree.cs,FixTreeOnDelete,The conditional expression  "node == parentNode.right &&  			         sibling.color == BLACK &&  			         GetColor(sibling.right) == RED &&  			         GetColor(sibling.left) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,DocumentLineTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\DocumentLineTree.cs,FixTreeOnDelete,The conditional expression  "parentNode.color == BLACK  			    && sibling.color == BLACK  			    && GetColor(sibling.left) == BLACK  			    && GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,DocumentLineTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\DocumentLineTree.cs,FixTreeOnDelete,The conditional expression  "parentNode.color == RED  			    && sibling.color == BLACK  			    && GetColor(sibling.left) == BLACK  			    && GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,DocumentLineTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\DocumentLineTree.cs,FixTreeOnDelete,The conditional expression  "node == parentNode.left &&  			    sibling.color == BLACK &&  			    GetColor(sibling.left) == RED &&  			    GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Document,DocumentLineTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\DocumentLineTree.cs,FixTreeOnDelete,The conditional expression  "node == parentNode.right &&  			         sibling.color == BLACK &&  			         GetColor(sibling.right) == RED &&  			         GetColor(sibling.left) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Editing,SelectionMouseHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionMouseHandler.cs,textArea_QueryCursor,The conditional expression  "p.X >= 0 && p.Y >= 0 && p.X <= textArea.TextView.ActualWidth && p.Y <= textArea.TextView.ActualHeight"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Editing,SelectionMouseHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionMouseHandler.cs,textArea_MouseMove,The conditional expression  "mode == SelectionMode.Normal || mode == SelectionMode.WholeWord || mode == SelectionMode.WholeLine || mode == SelectionMode.Rectangular"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Editing,SelectionMouseHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionMouseHandler.cs,textArea_MouseLeftButtonUp,The conditional expression  "mode == SelectionMode.Normal || mode == SelectionMode.WholeWord || mode == SelectionMode.WholeLine || mode == SelectionMode.Rectangular"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Editing,TextArea,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\TextArea.cs,OnPropertyChanged,The conditional expression  "e.Property == SelectionBrushProperty  			    || e.Property == SelectionBorderProperty  			    || e.Property == SelectionForegroundProperty  			    || e.Property == SelectionCornerRadiusProperty"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Highlighting,DocumentHighlighter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\DocumentHighlighter.cs,Minimum,The conditional expression  "endSpanMatch != null && endSpanMatch.Success && (min == null || endSpanMatch.Index < min.Index)"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,GetColorFromElement,The conditional expression  "!element.HasAttribute("bold") && !element.HasAttribute("italic") && !element.HasAttribute("color") && !element.HasAttribute("bgcolor")"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Indentation.CSharp,IndentationReformatter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Indentation\CSharp\IndentationReformatter.cs,Step,The conditional expression  "lineComment || blockComment || inString || inChar"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Indentation.CSharp,IndentationReformatter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Indentation\CSharp\IndentationReformatter.cs,Step,The conditional expression  "!oldBlock.Continuation && oldBlock.OneLineBlock == 0 &&  				    oldBlock.StartLine == block.StartLine &&  				    block.StartLine < doc.LineNumber && lastRealChar != ':'"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Rendering,BackgroundGeometryBuilder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\BackgroundGeometryBuilder.cs,ProcessTextLines,The conditional expression  "segmentEndVCInLine == visualEndCol && i < visualLine.TextLines.Count - 1 && segmentEndVC > segmentEndVCInLine && line.TrailingWhitespaceLength == 0"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Rendering,BackgroundGeometryBuilder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\BackgroundGeometryBuilder.cs,ProcessTextLines,The conditional expression  "segmentStartVCInLine == visualStartCol && i > 0 && segmentStartVC < segmentStartVCInLine && visualLine.TextLines[i - 1].TrailingWhitespaceLength == 0"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Rendering,HeightTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\HeightTree.cs,FixTreeOnDelete,The conditional expression  "parentNode.color == BLACK  			    && sibling.color == BLACK  			    && GetColor(sibling.left) == BLACK  			    && GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Rendering,HeightTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\HeightTree.cs,FixTreeOnDelete,The conditional expression  "parentNode.color == RED  			    && sibling.color == BLACK  			    && GetColor(sibling.left) == BLACK  			    && GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Rendering,HeightTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\HeightTree.cs,FixTreeOnDelete,The conditional expression  "node == parentNode.left &&  			    sibling.color == BLACK &&  			    GetColor(sibling.left) == RED &&  			    GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Rendering,HeightTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\HeightTree.cs,FixTreeOnDelete,The conditional expression  "node == parentNode.right &&  			         sibling.color == BLACK &&  			         GetColor(sibling.right) == RED &&  			         GetColor(sibling.left) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,MakeVisible,The conditional expression  "rectangle.IsEmpty || visual == null || visual == this || !this.IsAncestorOf(visual)"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,OnPropertyChanged,The conditional expression  "e.Property == Control.ForegroundProperty  			           || e.Property == TextView.NonPrintableCharacterBrushProperty  			           || e.Property == TextView.LinkTextBackgroundBrushProperty  			           || e.Property == TextView.LinkTextForegroundBrushProperty"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,OnPropertyChanged,The conditional expression  "e.Property == Control.FontFamilyProperty  			    || e.Property == Control.FontSizeProperty  			    || e.Property == Control.FontStretchProperty  			    || e.Property == Control.FontStyleProperty  			    || e.Property == Control.FontWeightProperty"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Utils,CompressingTreeList<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\CompressingTreeList.cs,FixTreeOnDelete,The conditional expression  "parentNode.color == BLACK  			    && sibling.color == BLACK  			    && GetColor(sibling.left) == BLACK  			    && GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Utils,CompressingTreeList<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\CompressingTreeList.cs,FixTreeOnDelete,The conditional expression  "parentNode.color == RED  			    && sibling.color == BLACK  			    && GetColor(sibling.left) == BLACK  			    && GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Utils,CompressingTreeList<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\CompressingTreeList.cs,FixTreeOnDelete,The conditional expression  "node == parentNode.left &&  			    sibling.color == BLACK &&  			    GetColor(sibling.left) == RED &&  			    GetColor(sibling.right) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Utils,CompressingTreeList<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\CompressingTreeList.cs,FixTreeOnDelete,The conditional expression  "node == parentNode.right &&  			         sibling.color == BLACK &&  			         GetColor(sibling.right) == RED &&  			         GetColor(sibling.left) == BLACK"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Xml,AXmlAttribute,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlAttribute.cs,UpdateDataFrom,The conditional expression  "this.Name != src.Name ||  				this.EqualsSign != src.EqualsSign ||  				this.QuotedValue != src.QuotedValue ||  				this.Value != src.Value"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Xml,AXmlObject,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlObject.cs,OnChanging,The conditional expression  "me != null && (me.IsStartOrEmptyTag || me.IsEndTag) && me.Parent is AXmlElement"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Xml,AXmlObject,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlObject.cs,OnChanged,The conditional expression  "me != null && (me.IsStartOrEmptyTag || me.IsEndTag) && me.Parent is AXmlElement"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Xml,TagMatchingHeuristics,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagMatchingHeuristics.cs,Split,The conditional expression  "elem.HasStartOrEmptyTag && elem.StartTag.IsStartTag && !elem.HasEndTag && myIndention != -1"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadAttributeValue,The conditional expression  "TryMoveToNonWhiteSpace() && TryRead("=") &&  					    TryMoveToNonWhiteSpace() && TryPeekAnyOf('"'' '\'')"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Xml,TokenReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TokenReader.cs,TryMoveToNonWhiteSpace,The conditional expression  "((int)c <= 0x20) && (c == ' ' || c == '\t' || c == '\n' || c == '\r')"  is complex.
Complex Conditional,ICSharpCode.AvalonEdit.Xml,TokenReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TokenReader.cs,TryReadName,The conditional expression  "c == ' ' || c == '\n' || c == '\r' || c == '\t' ||  // Reject whitesapce  				    c == '=' || c == '\'' || c == '"'  ||               // Reject attributes  				    c == '<' || c == '>'  || c == '/'  || c == '?'"  is complex.
Virtual Method Call from Constructor,ICSharpCode.AvalonEdit.Snippets,InsertionContext,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Snippets\InsertionContext.cs,InsertionContext,The constructor "InsertionContext" calls a virtual method "GetText".
Empty Catch Block,ICSharpCode.AvalonEdit.Rendering,VisualLineLinkText,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineLinkText.cs,OnMouseDown,The method has an empty catch block.
Magic Number,ICSharpCode.AvalonEdit,TextEditor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextEditor.cs,ScrollTo,The following statement contains a magic number: const double MinimumScrollPercentage = 0.3;
Magic Number,ICSharpCode.AvalonEdit,TextEditor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextEditor.cs,ScrollTo,The following statement contains a magic number: double remainingHeight = scrollViewer.ViewportHeight / 2;
Magic Number,ICSharpCode.AvalonEdit,TextEditor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextEditor.cs,ScrollTo,The following statement contains a magic number: double verticalPos = p.Y - scrollViewer.ViewportHeight / 2;
Magic Number,ICSharpCode.AvalonEdit,TextEditor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextEditor.cs,ScrollTo,The following statement contains a magic number: double horizontalPos = Math.Max(0' p.X - scrollViewer.ViewportWidth / 2);
Magic Number,ICSharpCode.AvalonEdit,TextEditor,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextEditor.cs,ScrollTo,The following statement contains a magic number: p.X > scrollViewer.ViewportWidth - Caret.MinimumDistanceToViewBorder * 2
Magic Number,ICSharpCode.AvalonEdit,TextViewPosition,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextViewPosition.cs,GetHashCode,The following statement contains a magic number: hashCode += 1000000007 * Line.GetHashCode();
Magic Number,ICSharpCode.AvalonEdit,TextViewPosition,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextViewPosition.cs,GetHashCode,The following statement contains a magic number: hashCode += 1000000009 * Column.GetHashCode();
Magic Number,ICSharpCode.AvalonEdit,TextViewPosition,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\TextViewPosition.cs,GetHashCode,The following statement contains a magic number: hashCode += 1000000021 * VisualColumn.GetHashCode();
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionListBox,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionListBox.cs,CenterViewOn,The following statement contains a magic number: this.FirstVisibleItem = index - VisibleItemCount / 2;
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,GetMatchQuality,The following statement contains a magic number: return 8;
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,GetMatchQuality,The following statement contains a magic number: return 7;
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,GetMatchQuality,The following statement contains a magic number: return 6;
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,GetMatchQuality,The following statement contains a magic number: return 5;
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,GetMatchQuality,The following statement contains a magic number: return 4;
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,GetMatchQuality,The following statement contains a magic number: query.Length <= 2
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,GetMatchQuality,The following statement contains a magic number: return 3;
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,GetMatchQuality,The following statement contains a magic number: return 2;
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionWindow,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionWindow.cs,CompletionWindow,The following statement contains a magic number: this.MaxHeight = 300;
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionWindow,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionWindow.cs,CompletionWindow,The following statement contains a magic number: this.Width = 175;
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionWindow,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionWindow.cs,CompletionWindow,The following statement contains a magic number: this.MinHeight = 15;
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CompletionWindow,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionWindow.cs,CompletionWindow,The following statement contains a magic number: this.MinWidth = 30;
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,InsightWindow,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\InsightWindow.cs,OnSourceInitialized,The following statement contains a magic number: MaxWidth = Math.Min(workingArea.Width' Math.Max(1000' workingArea.Width * 0.6));
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,InsightWindow,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\InsightWindow.cs,OnSourceInitialized,The following statement contains a magic number: MaxWidth = Math.Min(workingArea.Width' Math.Max(1000' workingArea.Width * 0.6));
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,OverloadInsightWindow,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\OverloadInsightWindow.cs,OverloadInsightWindow,The following statement contains a magic number: overloadViewer.Margin = new Thickness(2'0'0'0);
Magic Number,ICSharpCode.AvalonEdit.CodeCompletion,CollapseIfSingleOverloadConverter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\OverloadViewer.cs,Convert,The following statement contains a magic number: return ((int)value < 2) ? Visibility.Collapsed : Visibility.Visible;
Magic Number,ICSharpCode.AvalonEdit.Document,SimpleSegment,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\ISegment.cs,GetHashCode,The following statement contains a magic number: return Offset + 10301 * Length;
Magic Number,ICSharpCode.AvalonEdit.Document,NewLineFinder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\NewLineFinder.cs,NextNewLine,The following statement contains a magic number: return new SimpleSegment(pos' 2);
Magic Number,ICSharpCode.AvalonEdit.Document,NewLineFinder,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\NewLineFinder.cs,NextNewLine,The following statement contains a magic number: return new SimpleSegment(pos' 2);
Magic Number,ICSharpCode.AvalonEdit.Document,OffsetChangeMapEntry,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\OffsetChangeMap.cs,GetHashCode,The following statement contains a magic number: return offset + 3559 * (int)insertionLengthWithMovementFlag + 3571 * (int)removalLengthWithDeletionFlag;
Magic Number,ICSharpCode.AvalonEdit.Document,OffsetChangeMapEntry,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\OffsetChangeMap.cs,GetHashCode,The following statement contains a magic number: return offset + 3559 * (int)insertionLengthWithMovementFlag + 3571 * (int)removalLengthWithDeletionFlag;
Magic Number,ICSharpCode.AvalonEdit.Document,TextSegmentCollection<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextSegmentCollection.cs,AppendTreeToString,The following statement contains a magic number: indent += 2;
Magic Number,ICSharpCode.AvalonEdit.Document,TextAnchorTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextAnchorTree.cs,AppendTreeToString,The following statement contains a magic number: indent += 2;
Magic Number,ICSharpCode.AvalonEdit.Document,TextLocation,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextLocation.cs,GetHashCode,The following statement contains a magic number: return unchecked (87 * x.GetHashCode() ^ y.GetHashCode());
Magic Number,ICSharpCode.AvalonEdit.Document,LineManager,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\LineManager.cs,Remove,The following statement contains a magic number: Debug.Assert(startLine.DelimiterLength == 2);
Magic Number,ICSharpCode.AvalonEdit.Document,LineManager,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\LineManager.cs,Insert,The following statement contains a magic number: Debug.Assert(line.DelimiterLength == 2);
Magic Number,ICSharpCode.AvalonEdit.Document,DocumentLineTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\DocumentLineTree.cs,BuildTree,The following statement contains a magic number: int middle = (start + end) / 2;
Magic Number,ICSharpCode.AvalonEdit.Document,DocumentLineTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\DocumentLineTree.cs,AppendTreeToString,The following statement contains a magic number: indent += 2;
Magic Number,ICSharpCode.AvalonEdit.Document,TextDocument,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Document\TextDocument.cs,Replace,The following statement contains a magic number: switch (offsetChangeMappingType) {  				case OffsetChangeMappingType.Normal:  					Replace(offset' length' text' null);  					break;  				case OffsetChangeMappingType.KeepAnchorBeforeInsertion:  					Replace(offset' length' text' OffsetChangeMap.FromSingleElement(  						new OffsetChangeMapEntry(offset' length' text.Length' false' true)));  					break;  				case OffsetChangeMappingType.RemoveAndInsert:  					if (length == 0 || text.Length == 0) {  						// only insertion or only removal?  						// OffsetChangeMappingType doesn't matter' just use Normal.  						Replace(offset' length' text' null);  					} else {  						OffsetChangeMap map = new OffsetChangeMap(2);  						map.Add(new OffsetChangeMapEntry(offset' length' 0));  						map.Add(new OffsetChangeMapEntry(offset' 0' text.Length));  						map.Freeze();  						Replace(offset' length' text' map);  					}  					break;  				case OffsetChangeMappingType.CharacterReplace:  					if (length == 0 || text.Length == 0) {  						// only insertion or only removal?  						// OffsetChangeMappingType doesn't matter' just use Normal.  						Replace(offset' length' text' null);  					} else if (text.Length > length) {  						// look at OffsetChangeMappingType.CharacterReplace XML comments on why we need to replace  						// the last character  						OffsetChangeMapEntry entry = new OffsetChangeMapEntry(offset + length - 1' 1' 1 + text.Length - length);  						Replace(offset' length' text' OffsetChangeMap.FromSingleElement(entry));  					} else if (text.Length < length) {  						OffsetChangeMapEntry entry = new OffsetChangeMapEntry(offset + text.Length' length - text.Length' 0' true' false);  						Replace(offset' length' text' OffsetChangeMap.FromSingleElement(entry));  					} else {  						Replace(offset' length' text' OffsetChangeMap.Empty);  					}  					break;  				default:  					throw new ArgumentOutOfRangeException("offsetChangeMappingType"' offsetChangeMappingType' "Invalid enum value");  			}
Magic Number,ICSharpCode.AvalonEdit.Editing,DottedLineMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\DottedLineMargin.cs,Create,The following statement contains a magic number: Line line = new Line {  				X1 = 0' Y1 = 0' X2 = 0' Y2 = 1'  				StrokeDashArray = { 0' 2 }'  				Stretch = Stretch.Fill'  				StrokeThickness = 1'  				StrokeDashCap = PenLineCap.Round'  				Margin = new Thickness(2' 0' 2' 0)'  				Tag = tag  			};
Magic Number,ICSharpCode.AvalonEdit.Editing,DottedLineMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\DottedLineMargin.cs,Create,The following statement contains a magic number: Line line = new Line {  				X1 = 0' Y1 = 0' X2 = 0' Y2 = 1'  				StrokeDashArray = { 0' 2 }'  				Stretch = Stretch.Fill'  				StrokeThickness = 1'  				StrokeDashCap = PenLineCap.Round'  				Margin = new Thickness(2' 0' 2' 0)'  				Tag = tag  			};
Magic Number,ICSharpCode.AvalonEdit.Editing,DottedLineMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\DottedLineMargin.cs,Create,The following statement contains a magic number: Line line = new Line {  				X1 = 0' Y1 = 0' X2 = 0' Y2 = 1'  				StrokeDashArray = { 0' 2 }'  				Stretch = Stretch.Fill'  				StrokeThickness = 1'  				StrokeDashCap = PenLineCap.Round'  				Margin = new Thickness(2' 0' 2' 0)'  				Tag = tag  			};
Magic Number,ICSharpCode.AvalonEdit.Editing,LineNumberMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\LineNumberMargin.cs,OnDocumentLineCountChanged,The following statement contains a magic number: newLength = 2;
Magic Number,ICSharpCode.AvalonEdit.Editing,LineNumberMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\LineNumberMargin.cs,OnDocumentLineCountChanged,The following statement contains a magic number: newLength < 2
Magic Number,ICSharpCode.AvalonEdit.Editing,SelectionMouseHandler,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SelectionMouseHandler.cs,ExtendSelectionToMouse,The following statement contains a magic number: textArea.Caret.BringCaretToView(5.0);
Magic Number,ICSharpCode.AvalonEdit.Editing,SimpleSelection,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\SimpleSelection.cs,GetHashCode,The following statement contains a magic number: return startOffset * 27811 + endOffset + textArea.GetHashCode();
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingLineElement,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingElementGenerator.cs,OnMouseDown,The following statement contains a magic number: e.ClickCount == 2 && e.ChangedButton == MouseButton.Left
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,ArrangeOverride,The following statement contains a magic number: yPos -= m.DesiredSize.Height / 2;
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,ArrangeOverride,The following statement contains a magic number: double xPos = (finalSize.Width - m.DesiredSize.Width) / 2;
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,DrawFoldLines,The following statement contains a magic number: double markerXPos = PixelSnapHelpers.PixelAlign(RenderSize.Width / 2' pixelSize.Width);
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,DrawFoldLines,The following statement contains a magic number: drawingContext.DrawLine(endMarker[tlNumber]' new Point(markerXPos - pixelSize.Width / 2' visualPos)' new Point(RenderSize.Width' visualPos));
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,DrawFoldLines,The following statement contains a magic number: drawingContext.DrawLine(currentPen' new Point(markerXPos' startY + pixelSize.Height / 2)' new Point(markerXPos' visualPos - pixelSize.Height / 2));
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,DrawFoldLines,The following statement contains a magic number: drawingContext.DrawLine(currentPen' new Point(markerXPos' startY + pixelSize.Height / 2)' new Point(markerXPos' visualPos - pixelSize.Height / 2));
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingMargin,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMargin.cs,DrawFoldLines,The following statement contains a magic number: drawingContext.DrawLine(currentPen' new Point(markerXPos' startY + pixelSize.Height / 2)' new Point(markerXPos' RenderSize.Height));
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingMarginMarker,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMarginMarker.cs,OnRender,The following statement contains a magic number: Rect rect = new Rect(pixelSize.Width / 2'  			                     pixelSize.Height / 2'  			                     this.RenderSize.Width - pixelSize.Width'  			                     this.RenderSize.Height - pixelSize.Height);
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingMarginMarker,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMarginMarker.cs,OnRender,The following statement contains a magic number: Rect rect = new Rect(pixelSize.Width / 2'  			                     pixelSize.Height / 2'  			                     this.RenderSize.Width - pixelSize.Width'  			                     this.RenderSize.Height - pixelSize.Height);
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingMarginMarker,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMarginMarker.cs,OnRender,The following statement contains a magic number: double middleX = rect.Left + rect.Width / 2;
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingMarginMarker,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMarginMarker.cs,OnRender,The following statement contains a magic number: double middleY = rect.Top + rect.Height / 2;
Magic Number,ICSharpCode.AvalonEdit.Folding,FoldingMarginMarker,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\FoldingMarginMarker.cs,OnRender,The following statement contains a magic number: double space = PixelSnapHelpers.Round(rect.Width / 8' pixelSize.Width) + pixelSize.Width;
Magic Number,ICSharpCode.AvalonEdit.Folding,XmlFoldingStrategy,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\XmlFoldingStrategy.cs,CreateCommentFold,The following statement contains a magic number: int startOffset = GetOffset(document' reader) - 4;
Magic Number,ICSharpCode.AvalonEdit.Folding,XmlFoldingStrategy,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\XmlFoldingStrategy.cs,CreateCommentFold,The following statement contains a magic number: int endOffset = startOffset + comment.Length + 7;
Magic Number,ICSharpCode.AvalonEdit.Highlighting,HtmlOptions,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\HtmlClipboard.cs,HtmlOptions,The following statement contains a magic number: this.TabSize = 4;
Magic Number,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,ParseColor,The following statement contains a magic number: int a = 255;
Magic Number,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,ParseColor,The following statement contains a magic number: offset = 2;
Magic Number,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,ParseColor,The following statement contains a magic number: a = Int32.Parse(c.Substring(1'2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,ParseColor,The following statement contains a magic number: c.Length > 7
Magic Number,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,ParseColor,The following statement contains a magic number: int r = Int32.Parse(c.Substring(1 + offset'2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,ParseColor,The following statement contains a magic number: int g = Int32.Parse(c.Substring(3 + offset'2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,ParseColor,The following statement contains a magic number: int g = Int32.Parse(c.Substring(3 + offset'2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,ParseColor,The following statement contains a magic number: int b = Int32.Parse(c.Substring(5 + offset'2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,ICSharpCode.AvalonEdit.Highlighting.Xshd,V1Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V1Loader.cs,ParseColor,The following statement contains a magic number: int b = Int32.Parse(c.Substring(5 + offset'2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,ICSharpCode.AvalonEdit.Highlighting.Xshd,V2Loader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Highlighting\Xshd\V2Loader.cs,GetSystemColorBrush,The following statement contains a magic number: string shortName = name.Substring(13);
Magic Number,ICSharpCode.AvalonEdit.Rendering,FormattedTextElement,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\FormattedTextElement.cs,PrepareText,The following statement contains a magic number: return formatter.FormatLine(  				new SimpleTextSource(text' properties)'  				0'  				32000'  				new VisualLineTextParagraphProperties {  					defaultTextRunProperties = properties'  					textWrapping = TextWrapping.NoWrap'  					tabSize = 40  				}'  				null);
Magic Number,ICSharpCode.AvalonEdit.Rendering,FormattedTextElement,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\FormattedTextElement.cs,PrepareText,The following statement contains a magic number: return formatter.FormatLine(  				new SimpleTextSource(text' properties)'  				0'  				32000'  				new VisualLineTextParagraphProperties {  					defaultTextRunProperties = properties'  					textWrapping = TextWrapping.NoWrap'  					tabSize = 40  				}'  				null);
Magic Number,ICSharpCode.AvalonEdit.Rendering,HeightTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\HeightTree.cs,BuildTree,The following statement contains a magic number: int middle = (start + end) / 2;
Magic Number,ICSharpCode.AvalonEdit.Rendering,HeightTree,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\HeightTree.cs,AppendTreeToString,The following statement contains a magic number: indent += 2;
Magic Number,ICSharpCode.AvalonEdit.Rendering,SpecialCharacterTextRun,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,SpecialCharacterTextRun,The following statement contains a magic number: darkGrayBrush = new SolidColorBrush(Color.FromArgb(200' 128' 128' 128));
Magic Number,ICSharpCode.AvalonEdit.Rendering,SpecialCharacterTextRun,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,SpecialCharacterTextRun,The following statement contains a magic number: darkGrayBrush = new SolidColorBrush(Color.FromArgb(200' 128' 128' 128));
Magic Number,ICSharpCode.AvalonEdit.Rendering,SpecialCharacterTextRun,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,SpecialCharacterTextRun,The following statement contains a magic number: darkGrayBrush = new SolidColorBrush(Color.FromArgb(200' 128' 128' 128));
Magic Number,ICSharpCode.AvalonEdit.Rendering,SpecialCharacterTextRun,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,SpecialCharacterTextRun,The following statement contains a magic number: darkGrayBrush = new SolidColorBrush(Color.FromArgb(200' 128' 128' 128));
Magic Number,ICSharpCode.AvalonEdit.Rendering,SpecialCharacterTextRun,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,Draw,The following statement contains a magic number: Point newOrigin = new Point(origin.X + 1.5' origin.Y);
Magic Number,ICSharpCode.AvalonEdit.Rendering,SpecialCharacterTextRun,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,Draw,The following statement contains a magic number: Rect r = new Rect(newOrigin.X - 0.5' newOrigin.Y - metrics.Baseline' metrics.Width + 2' metrics.Height);
Magic Number,ICSharpCode.AvalonEdit.Rendering,SpecialCharacterTextRun,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,Draw,The following statement contains a magic number: Rect r = new Rect(newOrigin.X - 0.5' newOrigin.Y - metrics.Baseline' metrics.Width + 2' metrics.Height);
Magic Number,ICSharpCode.AvalonEdit.Rendering,SpecialCharacterTextRun,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,Draw,The following statement contains a magic number: drawingContext.DrawRoundedRectangle(darkGrayBrush' null' r' 2.5' 2.5);
Magic Number,ICSharpCode.AvalonEdit.Rendering,SpecialCharacterTextRun,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,Draw,The following statement contains a magic number: drawingContext.DrawRoundedRectangle(darkGrayBrush' null' r' 2.5' 2.5);
Magic Number,ICSharpCode.AvalonEdit.Rendering,SpecialCharacterTextRun,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,Format,The following statement contains a magic number: return new TextEmbeddedObjectMetrics(metrics.Width + 3'  				                                     metrics.Height' metrics.Baseline);
Magic Number,ICSharpCode.AvalonEdit.Rendering,SpecialCharacterTextRun,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\SingleCharacterElementGenerator.cs,ComputeBoundingBox,The following statement contains a magic number: r.Width += 3;
Magic Number,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,MeasureOverride,The following statement contains a magic number: availableSize.Width = 32000;
Magic Number,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,MeasureOverride,The following statement contains a magic number: availableSize.Width > 32000
Magic Number,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,MeasureOverride,The following statement contains a magic number: heightTreeHeight = Math.Max(heightTreeHeight' Math.Min(heightTreeHeight - 50' scrollOffset.Y) + scrollViewport.Height);
Magic Number,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,BuildVisualLine,The following statement contains a magic number: indentation > 0 && indentation * 2 < availableSize.Width
Magic Number,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,OnRender,The following statement contains a magic number: builder.CornerRadius = 3;
Magic Number,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,OnRender,The following statement contains a magic number: builder.CornerRadius = 3;
Magic Number,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,MakeVisible,The following statement contains a magic number: newScrollOffset.X = rectangle.Left + rectangle.Width / 2;
Magic Number,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,MakeVisible,The following statement contains a magic number: newScrollOffset.Y = rectangle.Top + rectangle.Height / 2;
Magic Number,ICSharpCode.AvalonEdit.Rendering,VisualLine,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLine.cs,GetTextLineVisualYPosition,The following statement contains a magic number: switch (yPositionMode) {  						case VisualYPosition.LineTop:  							return pos;  						case VisualYPosition.LineMiddle:  							return pos + tl.Height / 2;  						case VisualYPosition.LineBottom:  							return pos + tl.Height;  						case VisualYPosition.TextTop:  							return pos + tl.Baseline - textView.DefaultBaseline;  						case VisualYPosition.TextBottom:  							return pos + tl.Baseline - textView.DefaultBaseline + textView.DefaultLineHeight;  						case VisualYPosition.TextMiddle:  							return pos + tl.Baseline - textView.DefaultBaseline + textView.DefaultLineHeight / 2;  						case VisualYPosition.Baseline:  							return pos + tl.Baseline;  						default:  							throw new ArgumentException("Invalid yPositionMode:" + yPositionMode);  					}
Magic Number,ICSharpCode.AvalonEdit.Rendering,VisualLine,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLine.cs,GetTextLineVisualYPosition,The following statement contains a magic number: switch (yPositionMode) {  						case VisualYPosition.LineTop:  							return pos;  						case VisualYPosition.LineMiddle:  							return pos + tl.Height / 2;  						case VisualYPosition.LineBottom:  							return pos + tl.Height;  						case VisualYPosition.TextTop:  							return pos + tl.Baseline - textView.DefaultBaseline;  						case VisualYPosition.TextBottom:  							return pos + tl.Baseline - textView.DefaultBaseline + textView.DefaultLineHeight;  						case VisualYPosition.TextMiddle:  							return pos + tl.Baseline - textView.DefaultBaseline + textView.DefaultLineHeight / 2;  						case VisualYPosition.Baseline:  							return pos + tl.Baseline;  						default:  							throw new ArgumentException("Invalid yPositionMode:" + yPositionMode);  					}
Magic Number,ICSharpCode.AvalonEdit.Rendering,VisualLine,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLine.cs,GetTextLineByVisualYPosition,The following statement contains a magic number: const double epsilon = 0.0001;
Magic Number,ICSharpCode.AvalonEdit.Rendering,VisualLineTextSource,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\VisualLineTextSource.cs,CreateTextRunForNewLine,The following statement contains a magic number: lastDocumentLine.DelimiterLength == 2
Magic Number,ICSharpCode.AvalonEdit.Search,SearchResultBackgroundRenderer,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Search\SearchResultBackgroundRenderer.cs,Draw,The following statement contains a magic number: geoBuilder.CornerRadius = 3;
Magic Number,ICSharpCode.AvalonEdit.Snippets,Renderer,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Snippets\SnippetReplaceableTextElement.cs,CreateBackgroundBrush,The following statement contains a magic number: b.Opacity = 0.4;
Magic Number,ICSharpCode.AvalonEdit.Utils,CompressingTreeList<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\CompressingTreeList.cs,AppendTreeToString,The following statement contains a magic number: indent += 2;
Magic Number,ICSharpCode.AvalonEdit.Utils,Deque<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\Deque.cs,PushBack,The following statement contains a magic number: SetCapacity(Math.Max(4' arr.Length * 2));
Magic Number,ICSharpCode.AvalonEdit.Utils,Deque<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\Deque.cs,PushBack,The following statement contains a magic number: SetCapacity(Math.Max(4' arr.Length * 2));
Magic Number,ICSharpCode.AvalonEdit.Utils,Deque<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\Deque.cs,PushFront,The following statement contains a magic number: SetCapacity(Math.Max(4' arr.Length * 2));
Magic Number,ICSharpCode.AvalonEdit.Utils,Deque<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\Deque.cs,PushFront,The following statement contains a magic number: SetCapacity(Math.Max(4' arr.Length * 2));
Magic Number,ICSharpCode.AvalonEdit.Utils,FileReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\FileReader.cs,IsUnicode,The following statement contains a magic number: switch (encoding.CodePage) {  				case 65000: // UTF-7  				case 65001: // UTF-8  				case 1200: // UTF-16 LE  				case 1201: // UTF-16 BE  				case 12000: // UTF-32 LE  				case 12001: // UTF-32 BE  					return true;  				default:  					return false;  			}
Magic Number,ICSharpCode.AvalonEdit.Utils,FileReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\FileReader.cs,IsUnicode,The following statement contains a magic number: switch (encoding.CodePage) {  				case 65000: // UTF-7  				case 65001: // UTF-8  				case 1200: // UTF-16 LE  				case 1201: // UTF-16 BE  				case 12000: // UTF-32 LE  				case 12001: // UTF-32 BE  					return true;  				default:  					return false;  			}
Magic Number,ICSharpCode.AvalonEdit.Utils,FileReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\FileReader.cs,IsUnicode,The following statement contains a magic number: switch (encoding.CodePage) {  				case 65000: // UTF-7  				case 65001: // UTF-8  				case 1200: // UTF-16 LE  				case 1201: // UTF-16 BE  				case 12000: // UTF-32 LE  				case 12001: // UTF-32 BE  					return true;  				default:  					return false;  			}
Magic Number,ICSharpCode.AvalonEdit.Utils,FileReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\FileReader.cs,IsUnicode,The following statement contains a magic number: switch (encoding.CodePage) {  				case 65000: // UTF-7  				case 65001: // UTF-8  				case 1200: // UTF-16 LE  				case 1201: // UTF-16 BE  				case 12000: // UTF-32 LE  				case 12001: // UTF-32 BE  					return true;  				default:  					return false;  			}
Magic Number,ICSharpCode.AvalonEdit.Utils,FileReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\FileReader.cs,IsUnicode,The following statement contains a magic number: switch (encoding.CodePage) {  				case 65000: // UTF-7  				case 65001: // UTF-8  				case 1200: // UTF-16 LE  				case 1201: // UTF-16 BE  				case 12000: // UTF-32 LE  				case 12001: // UTF-32 BE  					return true;  				default:  					return false;  			}
Magic Number,ICSharpCode.AvalonEdit.Utils,FileReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\FileReader.cs,IsUnicode,The following statement contains a magic number: switch (encoding.CodePage) {  				case 65000: // UTF-7  				case 65001: // UTF-8  				case 1200: // UTF-16 LE  				case 1201: // UTF-16 BE  				case 12000: // UTF-32 LE  				case 12001: // UTF-32 BE  					return true;  				default:  					return false;  			}
Magic Number,ICSharpCode.AvalonEdit.Utils,FileReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\FileReader.cs,OpenStream,The following statement contains a magic number: switch ((firstByte << 8) | secondByte) {  					case 0x0000: // either UTF-32 Big Endian or a binary file; use StreamReader  					case 0xfffe: // Unicode BOM (UTF-16 LE or UTF-32 LE)  					case 0xfeff: // UTF-16 BE BOM  					case 0xefbb: // start of UTF-8 BOM  						// StreamReader autodetection works  						stream.Position = 0;  						return new StreamReader(stream);  					default:  						return AutoDetect(stream' (byte)firstByte' (byte)secondByte' defaultEncoding);  				}
Magic Number,ICSharpCode.AvalonEdit.Utils,FileReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\FileReader.cs,OpenStream,The following statement contains a magic number: stream.Length >= 2
Magic Number,ICSharpCode.AvalonEdit.Utils,FileReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\FileReader.cs,AutoDetect,The following statement contains a magic number: int max = (int)Math.Min(fs.Length' 500000);
Magic Number,ICSharpCode.AvalonEdit.Utils,FileReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\FileReader.cs,AutoDetect,The following statement contains a magic number: const int UTF8  = 2;
Magic Number,ICSharpCode.AvalonEdit.Utils,FileReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\FileReader.cs,AutoDetect,The following statement contains a magic number: const int UTF8Sequence = 3;
Magic Number,ICSharpCode.AvalonEdit.Utils,RopeNode<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\RopeNode.cs,AppendTreeToString,The following statement contains a magic number: indent += 2;
Magic Number,ICSharpCode.AvalonEdit.Utils,FunctionNode<T>,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\RopeNode.cs,AppendTreeToString,The following statement contains a magic number: indent += 2;
Magic Number,ICSharpCode.AvalonEdit.Utils,PixelSnapHelpers,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\PixelSnapHelpers.cs,PixelAlign,The following statement contains a magic number: return pixelSize * (Math.Round((value / pixelSize) + 0.5) - 0.5);
Magic Number,ICSharpCode.AvalonEdit.Utils,PixelSnapHelpers,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\PixelSnapHelpers.cs,PixelAlign,The following statement contains a magic number: return pixelSize * (Math.Round((value / pixelSize) + 0.5) - 0.5);
Magic Number,ICSharpCode.AvalonEdit.Utils,PixelSnapHelpers,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Utils\PixelSnapHelpers.cs,RoundToOdd,The following statement contains a magic number: return Round(value - pixelSize' pixelSize * 2) + pixelSize;
Magic Number,ICSharpCode.AvalonEdit.Xml,AXmlObject,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\AXmlObject.cs,ToString,The following statement contains a magic number: return string.Format(CultureInfo.InvariantCulture' "{0}({1}-{2})"' this.GetType().Name.Remove(0' 4)' this.StartOffset' this.EndOffset);
Magic Number,ICSharpCode.AvalonEdit.Xml,TagMatchingHeuristics,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagMatchingHeuristics.cs,ReadDocument,The following statement contains a magic number: TagReader.OnSyntaxError(doc' xmlDeclaration.StartOffset' xmlDeclaration.StartOffset + 5'  					                        "XML declaration must be at the start of document");
Magic Number,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadAttribulte,The following statement contains a magic number: TryPeekPrevious('='' 2) || (TryPeekPrevious('='' 3) && TryPeekPrevious(' '' 2))
Magic Number,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadAttribulte,The following statement contains a magic number: TryPeekPrevious('='' 2) || (TryPeekPrevious('='' 3) && TryPeekPrevious(' '' 2))
Magic Number,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,ReadAttribulte,The following statement contains a magic number: TryPeekPrevious('='' 2) || (TryPeekPrevious('='' 3) && TryPeekPrevious(' '' 2))
Magic Number,ICSharpCode.AvalonEdit.Xml,TagReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TagReader.cs,Unquote,The following statement contains a magic number: return quoted.Substring(1' quoted.Length - 2);
Magic Number,ICSharpCode.AvalonEdit.Xml,TokenReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TokenReader.cs,GetCachedString,The following statement contains a magic number: stringCacheRequestedSize += 8 + 2 * cached.Length;
Magic Number,ICSharpCode.AvalonEdit.Xml,TokenReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TokenReader.cs,GetCachedString,The following statement contains a magic number: stringCacheRequestedSize += 8 + 2 * cached.Length;
Magic Number,ICSharpCode.AvalonEdit.Xml,TokenReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TokenReader.cs,GetCachedString,The following statement contains a magic number: stringCacheStoredSize += 8 + 2 * cached.Length;
Magic Number,ICSharpCode.AvalonEdit.Xml,TokenReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TokenReader.cs,GetCachedString,The following statement contains a magic number: stringCacheStoredSize += 8 + 2 * cached.Length;
Magic Number,ICSharpCode.AvalonEdit.Xml,TokenReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TokenReader.cs,GetCachedString,The following statement contains a magic number: cached.Length > 32
Magic Number,ICSharpCode.AvalonEdit.Xml,TokenReader,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Xml\TokenReader.cs,PrintStringCacheStats,The following statement contains a magic number: AXmlParser.Log("String cache: Requested {0} ({1} bytes);  Actaully stored {2} ({3} bytes); {4}% stored"' stringCacheRequestedCount' stringCacheRequestedSize' stringCacheStoredCount' stringCacheStoredSize' stringCacheRequestedSize == 0 ? 0 : stringCacheStoredSize * 100 / stringCacheRequestedSize);
Missing Default,ICSharpCode.AvalonEdit.CodeCompletion,CompletionList,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\CompletionList.cs,HandleKey,The following switch statement is missing a default case: switch (e.Key) {  				case Key.Down:  					e.Handled = true;  					listBox.SelectIndex(listBox.SelectedIndex + 1);  					break;  				case Key.Up:  					e.Handled = true;  					listBox.SelectIndex(listBox.SelectedIndex - 1);  					break;  				case Key.PageDown:  					e.Handled = true;  					listBox.SelectIndex(listBox.SelectedIndex + listBox.VisibleItemCount);  					break;  				case Key.PageUp:  					e.Handled = true;  					listBox.SelectIndex(listBox.SelectedIndex - listBox.VisibleItemCount);  					break;  				case Key.Home:  					e.Handled = true;  					listBox.SelectIndex(0);  					break;  				case Key.End:  					e.Handled = true;  					listBox.SelectIndex(listBox.Items.Count - 1);  					break;  				case Key.Tab:  				case Key.Enter:  					e.Handled = true;  					RequestInsertion(e);  					break;  			}
Missing Default,ICSharpCode.AvalonEdit.CodeCompletion,OverloadInsightWindow,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\CodeCompletion\OverloadInsightWindow.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.Key) {  					case Key.Up:  						e.Handled = true;  						overloadViewer.ChangeIndex(-1);  						break;  					case Key.Down:  						e.Handled = true;  						overloadViewer.ChangeIndex(+1);  						break;  				}
Missing Default,ICSharpCode.AvalonEdit.Editing,ImeSupport,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Editing\ImeSupport.cs,WndProc,The following switch statement is missing a default case: switch (msg) {  				case ImeNativeWrapper.WM_INPUTLANGCHANGE:  					// Don't mark the message as handled; other windows  					// might want to handle it as well.  					  					// If we have a context' recreate it  					if (hwndSource != null) {  						ClearContext();  						CreateContext();  					}  					break;  				case ImeNativeWrapper.WM_IME_COMPOSITION:  					UpdateCompositionWindow();  					break;  			}
Missing Default,ICSharpCode.AvalonEdit.Folding,XmlFoldingStrategy,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Folding\XmlFoldingStrategy.cs,CreateNewFoldings,The following switch statement is missing a default case: switch (reader.NodeType) {  						case XmlNodeType.Element:  							if (!reader.IsEmptyElement) {  								XmlFoldStart newFoldStart = CreateElementFoldStart(document' reader);  								stack.Push(newFoldStart);  							}  							break;  							  						case XmlNodeType.EndElement:  							XmlFoldStart foldStart = stack.Pop();  							CreateElementFold(document' foldMarkers' reader' foldStart);  							break;  							  						case XmlNodeType.Comment:  							CreateCommentFold(document' foldMarkers' reader);  							break;  					}
Missing Default,ICSharpCode.AvalonEdit.Indentation.CSharp,IndentationReformatter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Indentation\CSharp\IndentationReformatter.cs,Step,The following switch statement is missing a default case: switch (c) {  					case '/':  						if (blockComment && lastchar == '*')  							blockComment = false;  						if (!inString && !inChar) {  							if (!blockComment && nextchar == '/')  								lineComment = true;  							if (!lineComment && nextchar == '*')  								blockComment = true;  						}  						break;  					case '#':  						if (!(inChar || blockComment || inString))  							lineComment = true;  						break;  					case '"':  						if (!(inChar || lineComment || blockComment)) {  							inString = !inString;  							if (!inString && verbatim) {  								if (nextchar == '"') {  									escape = true; // skip escaped quote  									inString = true;  								} else {  									verbatim = false;  								}  							} else if (inString && lastchar == '@') {  								verbatim = true;  							}  						}  						break;  					case '\'':  						if (!(inString || lineComment || blockComment)) {  							inChar = !inChar;  						}  						break;  					case '\\':  						if ((inString && !verbatim) || inChar)  							escape = true; // skip next character  						break;  				}
Missing Default,ICSharpCode.AvalonEdit.Indentation.CSharp,IndentationReformatter,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Indentation\CSharp\IndentationReformatter.cs,Step,The following switch statement is missing a default case: switch (c) {  					case '{':  						block.ResetOneLineBlock();  						blocks.Push(block);  						block.StartLine = doc.LineNumber;  						if (block.LastWord == "switch") {  							block.Indent(set.IndentString + set.IndentString);  							/* oldBlock refers to the previous line' not the previous block  							 * The block we want is not available anymore because it was never pushed.  							 * } else if (oldBlock.OneLineBlock) {  							// Inside a one-line-block is another statement  							// with a full block: indent the inner full block  							// by one additional level  							block.Indent(set' set.IndentString + set.IndentString);  							block.OuterIndent += set.IndentString;  							// Indent current line if it starts with the '{' character  							if (i == 0) {  								oldBlock.InnerIndent += set.IndentString;  							}*/  						} else {  							block.Indent(set);  						}  						block.Bracket = '{';  						break;  					case '}':  						while (block.Bracket != '{') {  							if (blocks.Count == 0) break;  							block = blocks.Pop();  						}  						if (blocks.Count == 0) break;  						block = blocks.Pop();  						block.Continuation = false;  						block.ResetOneLineBlock();  						break;  					case '(':  					case '[':  						blocks.Push(block);  						if (block.StartLine == doc.LineNumber)  							block.InnerIndent = block.OuterIndent;  						else  							block.StartLine = doc.LineNumber;  						block.Indent(Repeat(set.IndentString' oldBlock.OneLineBlock) +  						             (oldBlock.Continuation ? set.IndentString : "") +  						             (i == line.Length - 1 ? set.IndentString : new String(' '' i + 1)));  						block.Bracket = c;  						break;  					case ')':  						if (blocks.Count == 0) break;  						if (block.Bracket == '(') {  							block = blocks.Pop();  							if (IsSingleStatementKeyword(block.LastWord))  								block.Continuation = false;  						}  						break;  					case ']':  						if (blocks.Count == 0) break;  						if (block.Bracket == '[')  							block = blocks.Pop();  						break;  					case ';':  					case ''':  						block.Continuation = false;  						block.ResetOneLineBlock();  						break;  					case ':':  						if (block.LastWord == "case"   						    || line.StartsWith("case "' StringComparison.Ordinal)   						    || line.StartsWith(block.LastWord + ":"' StringComparison.Ordinal))   						{  							block.Continuation = false;  							block.ResetOneLineBlock();  						}  						break;  				}
Missing Default,ICSharpCode.AvalonEdit.Rendering,TextView,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Rendering\TextView.cs,InsertLayer,The following switch statement is missing a default case: switch (position) {  							case LayerInsertionPosition.Below:  								layers.Insert(i' layer);  								return;  							case LayerInsertionPosition.Above:  								layers.Insert(i + 1' layer);  								return;  							case LayerInsertionPosition.Replace:  								layers[i] = layer;  								return;  						}
Missing Default,ICSharpCode.AvalonEdit.Search,SearchPanel,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Search\SearchPanel.cs,SearchLayerKeyDown,The following switch statement is missing a default case: switch (e.Key) {  				case Key.Enter:  					e.Handled = true;  					messageView.IsOpen = false;  					if ((Keyboard.Modifiers & ModifierKeys.Shift) == ModifierKeys.Shift)  						FindPrevious();  					else  						FindNext();  					if (searchTextBox != null) {  						var error = Validation.GetErrors(searchTextBox).FirstOrDefault();  						if (error != null) {  							messageView.Content = Localization.ErrorText + " " + error.ErrorContent;  							messageView.PlacementTarget = searchTextBox;  							messageView.IsOpen = true;  						}  					}  					break;  				case Key.Escape:  					e.Handled = true;  					Close();  					break;  			}
Missing Default,ICSharpCode.AvalonEdit.Search,SearchStrategyFactory,D:\research\architectureSmells\repos\lightszero_CSLightStudio\CSLightStudio\windows\debugger\avalonEdit\ICSharpCode.AvalonEdit\Search\SearchStrategyFactory.cs,Create,The following switch statement is missing a default case: switch (mode) {  				case SearchMode.Normal:  					searchPattern = Regex.Escape(searchPattern);  					break;  				case SearchMode.Wildcard:  					searchPattern = ConvertWildcardsToRegex(searchPattern);  					break;  			}
