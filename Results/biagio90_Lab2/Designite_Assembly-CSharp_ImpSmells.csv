Implementation smell,Namespace,Class,File,Method,Description
Complex Method,URandom,GammaDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\GammaDistribution.cs,Normalize,Cyclomatic complexity of the method is 8
Complex Method,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,Cyclomatic complexity of the method is 9
Complex Method,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,GetPointOnCubeSurface,Cyclomatic complexity of the method is 35
Complex Method,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Volume,Cyclomatic complexity of the method is 15
Complex Method,URandom,RandomDisk,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomDisk.cs,Circle,Cyclomatic complexity of the method is 9
Complex Method,URandom,RandomDisk,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomDisk.cs,Disk,Cyclomatic complexity of the method is 12
Complex Method,URandom,RandomSquare,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomSquare.cs,Area,Cyclomatic complexity of the method is 12
Complex Method,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,Cyclomatic complexity of the method is 10
Long Parameter List,URandom,RandomSphere,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomSphere.cs,GetPointOnRing,The method has 5 parameters.
Long Parameter List,URandom,SpecialFunctions,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\SpecialFunctions.cs,ScaleFloatToRange,The method has 5 parameters.
Long Statement,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The length of the statement  "		y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]); " is 134.
Long Statement,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The length of the statement  "		y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]); " is 242.
Long Statement,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The length of the statement  "		y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]); " is 162.
Long Statement,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The length of the statement  "		u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1); " is 158.
Long Statement,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The length of the statement  "		u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1); " is 140.
Long Statement,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,Normalize,The length of the statement  "	// Trasformiamo questo numero in una distribuzione normale (CDF inversa' nota anche come Gaussiana' vedi http://en.wikipedia.org/wiki/Normal_distribution) " is 154.
Long Statement,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,Normalize,The length of the statement  "	// facendo l'inversa della cumulative density function su una distribuzione uniforme [0'1] otteniamo una distribuzione normale (-inf'+inf) centrata a zero " is 154.
Long Statement,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,Normalize,The length of the statement  "	// Questo ci riporta a un campo (0'1)' il valore 5 fa si che circa il 90% dei valori restituiti sia tra 0.45 e 0.55' aumentandolo " is 129.
Long Statement,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,Normalize,The length of the statement  "	// la distribuzione si stringe (piu' valori vicini a 0.5)' abbassandolo si allarga' ma a differenza di una gaussiana in ogni caso " is 129.
Long Statement,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The length of the statement  "		pos = GetPointOnCubeSurface ((float)NormalDistribution.Normalize (_rand.NextSingle (true)' t)' (float)NormalDistribution.Normalize (_rand.NextSingle (true)' t)' _rand.Next (5)); " is 177.
Long Statement,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The length of the statement  "		pos = GetPointOnCubeSurface ((float)PowerLaw.Normalize (_rand.NextSingle (true)' t' 0' 1)' (float)PowerLaw.Normalize (_rand.NextSingle (true)' t' 0' 1)' _rand.Next (5)); " is 169.
Long Statement,URandom,RandomDisk,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomDisk.cs,Circle,The length of the statement  "		r = SpecialFunctions.ScaleFloatToRange ((float)NormalDistribution.Normalize (_rand.NextSingle (true)' t)' 0' Int32.MaxValue' 0' 1); " is 131.
Long Statement,URandom,RandomSphere,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomSphere.cs,GetPointOnRing,The length of the statement  "	float angle2 = SpecialFunctions.ScaleFloatToRange (_rand.NextSingle (true)' innerSpotAngle' outerSpotAngle' 0' 1) * Mathf.Deg2Rad; " is 130.
Magic Number,URandom,GammaDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\GammaDistribution.cs,Normalize,The following statement contains a magic number: if (ia < 6) {  	// use direct method' addin waiting times   	x = 1.0f;  	for (j = 1; j <= ia; j++)  		x *= _rand.NextSingle (true);  	x = (float)-(Math.Log (x));  }  else {  	do {  		do {  			// This four lines generate the tanget of random angle  			// Equivalent to y = tan( pi * rand())  			do {  				v1 = _rand.NextSingle (true);  				v2 = 2.0f * _rand.NextSingle (true) - 1.0f;  			}  			while (v1 * v1 + v2 * v2 > 1.0f);  			y = v2 / v1;  			am = ia - 1;  			s = (float)Math.Sqrt (2.0 * am + 1.0f);  			x = s * y + am;  			// We decide wheter to reject x' Reject in 0 probability region  		}  		while (x <= 0.0f);  		e = (float)((1.0f + y * y) * Math.Exp (am * Math.Log (x / am) - s * y));  	}  	while (_rand.NextSingle (true) > e);  }  
Magic Number,URandom,GammaDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\GammaDistribution.cs,Normalize,The following statement contains a magic number: if (ia < 6) {  	// use direct method' addin waiting times   	x = 1.0f;  	for (j = 1; j <= ia; j++)  		x *= _rand.NextSingle (true);  	x = (float)-(Math.Log (x));  }  else {  	do {  		do {  			// This four lines generate the tanget of random angle  			// Equivalent to y = tan( pi * rand())  			do {  				v1 = _rand.NextSingle (true);  				v2 = 2.0f * _rand.NextSingle (true) - 1.0f;  			}  			while (v1 * v1 + v2 * v2 > 1.0f);  			y = v2 / v1;  			am = ia - 1;  			s = (float)Math.Sqrt (2.0 * am + 1.0f);  			x = s * y + am;  			// We decide wheter to reject x' Reject in 0 probability region  		}  		while (x <= 0.0f);  		e = (float)((1.0f + y * y) * Math.Exp (am * Math.Log (x / am) - s * y));  	}  	while (_rand.NextSingle (true) > e);  }  
Magic Number,URandom,GammaDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\GammaDistribution.cs,Normalize,The following statement contains a magic number: do {  	do {  		// This four lines generate the tanget of random angle  		// Equivalent to y = tan( pi * rand())  		do {  			v1 = _rand.NextSingle (true);  			v2 = 2.0f * _rand.NextSingle (true) - 1.0f;  		}  		while (v1 * v1 + v2 * v2 > 1.0f);  		y = v2 / v1;  		am = ia - 1;  		s = (float)Math.Sqrt (2.0 * am + 1.0f);  		x = s * y + am;  		// We decide wheter to reject x' Reject in 0 probability region  	}  	while (x <= 0.0f);  	e = (float)((1.0f + y * y) * Math.Exp (am * Math.Log (x / am) - s * y));  }  while (_rand.NextSingle (true) > e);  
Magic Number,URandom,GammaDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\GammaDistribution.cs,Normalize,The following statement contains a magic number: do {  	// This four lines generate the tanget of random angle  	// Equivalent to y = tan( pi * rand())  	do {  		v1 = _rand.NextSingle (true);  		v2 = 2.0f * _rand.NextSingle (true) - 1.0f;  	}  	while (v1 * v1 + v2 * v2 > 1.0f);  	y = v2 / v1;  	am = ia - 1;  	s = (float)Math.Sqrt (2.0 * am + 1.0f);  	x = s * y + am;  	// We decide wheter to reject x' Reject in 0 probability region  }  while (x <= 0.0f);  
Magic Number,URandom,GammaDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\GammaDistribution.cs,Normalize,The following statement contains a magic number: s = (float)Math.Sqrt (2.0 * am + 1.0f);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 0.46875 * msqrt2) {  	/* evaluate erf() for |u| <= sqrt(2)*0.46875 */z = y * y;  	y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  	return 0.5 + y;  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 0.46875 * msqrt2) {  	/* evaluate erf() for |u| <= sqrt(2)*0.46875 */z = y * y;  	y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  	return 0.5 + y;  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 0.46875 * msqrt2) {  	/* evaluate erf() for |u| <= sqrt(2)*0.46875 */z = y * y;  	y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  	return 0.5 + y;  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 0.46875 * msqrt2) {  	/* evaluate erf() for |u| <= sqrt(2)*0.46875 */z = y * y;  	y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  	return 0.5 + y;  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 0.46875 * msqrt2) {  	/* evaluate erf() for |u| <= sqrt(2)*0.46875 */z = y * y;  	y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  	return 0.5 + y;  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 0.46875 * msqrt2) {  	/* evaluate erf() for |u| <= sqrt(2)*0.46875 */z = y * y;  	y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  	return 0.5 + y;  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 0.46875 * msqrt2) {  	/* evaluate erf() for |u| <= sqrt(2)*0.46875 */z = y * y;  	y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  	return 0.5 + y;  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 0.46875 * msqrt2) {  	/* evaluate erf() for |u| <= sqrt(2)*0.46875 */z = y * y;  	y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  	return 0.5 + y;  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = u * ((((a [0] * z + a [1]) * z + a [2]) * z + a [3]) * z + a [4]) / ((((b [0] * z + b [1]) * z + b [2]) * z + b [3]) * z + b [4]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: return 0.5 + y;  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: z = Math.Exp (-y * y / 2) / 2;  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: z = Math.Exp (-y * y / 2) / 2;  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: if (y <= 4.0) {  	/* evaluate erfc() for sqrt(2)*0.46875 <= |u| <= sqrt(2)*4.0 */y = y / msqrt2;  	y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  	y = z * y;  }  else {  	/* evaluate erfc() for |u| > sqrt(2)*4.0 */z = z * msqrt2 / y;  	y = 2 / (y * y);  	y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  	y = z * (m_1_sqrtpi - y);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = ((((((((c [0] * y + c [1]) * y + c [2]) * y + c [3]) * y + c [4]) * y + c [5]) * y + c [6]) * y + c [7]) * y + c [8]) / ((((((((d [0] * y + d [1]) * y + d [2]) * y + d [3]) * y + d [4]) * y + d [5]) * y + d [6]) * y + d [7]) * y + d [8]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = 2 / (y * y);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalCDF,The following statement contains a magic number: y = y * (((((p [0] * y + p [1]) * y + p [2]) * y + p [3]) * y + p [4]) * y + p [5]) / (((((q [0] * y + q [1]) * y + q [2]) * y + q [3]) * y + q [4]) * y + q [5]);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: if (q > 0.02425) {  	/* Rational approximation for central region. */u = q - 0.5;  	t = u * u;  	u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  }  else {  	/* Rational approximation for tail region. */t = Math.Sqrt (-2 * Math.Log (q));  	u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  }  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = q - 0.5;  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = u * (((((a [0] * t + a [1]) * t + a [2]) * t + a [3]) * t + a [4]) * t + a [5]) / (((((b [0] * t + b [1]) * t + b [2]) * t + b [3]) * t + b [4]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: t = Math.Sqrt (-2 * Math.Log (q));  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = (((((c [0] * t + c [1]) * t + c [2]) * t + c [3]) * t + c [4]) * t + c [5]) / ((((d [0] * t + d [1]) * t + d [2]) * t + d [3]) * t + 1);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: t = t * m_sqrt2pi * Math.Exp (u * u / 2);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: u = u - t / (1 + u * t / 2);  
Magic Number,URandom,NormalDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\NormalDistribution.cs,StdNormalINV,The following statement contains a magic number: return (p > 0.5 ? -u : u);  
Magic Number,URandom,PoissonDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\PoissonDistribution.cs,Normalize,The following statement contains a magic number: if (xm < 12.0f) {  	// Use direct method				  	if (xm != oldm) {  		oldm = xm;  		g = Math.Exp (-xm);  		// if x is new' compute the exponential  	}  	em = -1;  	t = 1.0f;  	// Instead of adding exponential deviates it is equivalent to multiply unifomr deviates  	// We never actually take the log' we compare the precomupted exponential				  	do {  		++em;  		t *= _rand.NextSingle (true);  	}  	while (t > g);  }  else {  	// Use REJECTION method  	// xm has changed?  	if (xm != oldm) {  		oldm = xm;  		sq = Math.Sqrt (2.0 * xm);  		alxm = Math.Log (xm);  		// Gammln is the natural log of a gamma function  		g = xm * alxm - SpecialFunctions.gammln (xm + 1.0f);  	}  	do {  		do {  			// y is the deviate from a Lorentzian comparison function  			y = Math.Tan (Math.PI * _rand.NextSingle (true));  			em = sq * y + xm;  		}  		while (em < 0.0);  		em = Math.Floor (em);  		t = 0.9 * (1.0 + y * y) * Math.Exp (em * alxm - SpecialFunctions.gammln (em + 1.0f) - g);  	}  	while (_rand.NextSingle (true) > t);  }  
Magic Number,URandom,PoissonDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\PoissonDistribution.cs,Normalize,The following statement contains a magic number: if (xm < 12.0f) {  	// Use direct method				  	if (xm != oldm) {  		oldm = xm;  		g = Math.Exp (-xm);  		// if x is new' compute the exponential  	}  	em = -1;  	t = 1.0f;  	// Instead of adding exponential deviates it is equivalent to multiply unifomr deviates  	// We never actually take the log' we compare the precomupted exponential				  	do {  		++em;  		t *= _rand.NextSingle (true);  	}  	while (t > g);  }  else {  	// Use REJECTION method  	// xm has changed?  	if (xm != oldm) {  		oldm = xm;  		sq = Math.Sqrt (2.0 * xm);  		alxm = Math.Log (xm);  		// Gammln is the natural log of a gamma function  		g = xm * alxm - SpecialFunctions.gammln (xm + 1.0f);  	}  	do {  		do {  			// y is the deviate from a Lorentzian comparison function  			y = Math.Tan (Math.PI * _rand.NextSingle (true));  			em = sq * y + xm;  		}  		while (em < 0.0);  		em = Math.Floor (em);  		t = 0.9 * (1.0 + y * y) * Math.Exp (em * alxm - SpecialFunctions.gammln (em + 1.0f) - g);  	}  	while (_rand.NextSingle (true) > t);  }  
Magic Number,URandom,PoissonDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\PoissonDistribution.cs,Normalize,The following statement contains a magic number: if (xm != oldm) {  	oldm = xm;  	sq = Math.Sqrt (2.0 * xm);  	alxm = Math.Log (xm);  	// Gammln is the natural log of a gamma function  	g = xm * alxm - SpecialFunctions.gammln (xm + 1.0f);  }  
Magic Number,URandom,PoissonDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\PoissonDistribution.cs,Normalize,The following statement contains a magic number: sq = Math.Sqrt (2.0 * xm);  
Magic Number,URandom,PoissonDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\PoissonDistribution.cs,Normalize,The following statement contains a magic number: do {  	do {  		// y is the deviate from a Lorentzian comparison function  		y = Math.Tan (Math.PI * _rand.NextSingle (true));  		em = sq * y + xm;  	}  	while (em < 0.0);  	em = Math.Floor (em);  	t = 0.9 * (1.0 + y * y) * Math.Exp (em * alxm - SpecialFunctions.gammln (em + 1.0f) - g);  }  while (_rand.NextSingle (true) > t);  
Magic Number,URandom,PoissonDistribution,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\PoissonDistribution.cs,Normalize,The following statement contains a magic number: t = 0.9 * (1.0 + y * y) * Math.Exp (em * alxm - SpecialFunctions.gammln (em + 1.0f) - g);  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The following statement contains a magic number: return new Vector3 ((2 * pos.x) - 1' (2 * pos.y) - 1' (2 * pos.z) - 1);  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The following statement contains a magic number: return new Vector3 ((2 * pos.x) - 1' (2 * pos.y) - 1' (2 * pos.z) - 1);  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The following statement contains a magic number: return new Vector3 ((2 * pos.x) - 1' (2 * pos.y) - 1' (2 * pos.z) - 1);  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The following statement contains a magic number: switch (n) {  case UnityRandom.Normalization.STDNORMAL:  	pos = GetPointOnCubeSurface ((float)NormalDistribution.Normalize (_rand.NextSingle (true)' t)' (float)NormalDistribution.Normalize (_rand.NextSingle (true)' t)' _rand.Next (5));  	break;  case UnityRandom.Normalization.POWERLAW:  	pos = GetPointOnCubeSurface ((float)PowerLaw.Normalize (_rand.NextSingle (true)' t' 0' 1)' (float)PowerLaw.Normalize (_rand.NextSingle (true)' t' 0' 1)' _rand.Next (5));  	break;  default:  	pos = GetPointOnCubeSurface (_rand.NextSingle (true)' _rand.NextSingle (true)' _rand.Next (5));  	break;  }  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The following statement contains a magic number: switch (n) {  case UnityRandom.Normalization.STDNORMAL:  	pos = GetPointOnCubeSurface ((float)NormalDistribution.Normalize (_rand.NextSingle (true)' t)' (float)NormalDistribution.Normalize (_rand.NextSingle (true)' t)' _rand.Next (5));  	break;  case UnityRandom.Normalization.POWERLAW:  	pos = GetPointOnCubeSurface ((float)PowerLaw.Normalize (_rand.NextSingle (true)' t' 0' 1)' (float)PowerLaw.Normalize (_rand.NextSingle (true)' t' 0' 1)' _rand.Next (5));  	break;  default:  	pos = GetPointOnCubeSurface (_rand.NextSingle (true)' _rand.NextSingle (true)' _rand.Next (5));  	break;  }  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The following statement contains a magic number: switch (n) {  case UnityRandom.Normalization.STDNORMAL:  	pos = GetPointOnCubeSurface ((float)NormalDistribution.Normalize (_rand.NextSingle (true)' t)' (float)NormalDistribution.Normalize (_rand.NextSingle (true)' t)' _rand.Next (5));  	break;  case UnityRandom.Normalization.POWERLAW:  	pos = GetPointOnCubeSurface ((float)PowerLaw.Normalize (_rand.NextSingle (true)' t' 0' 1)' (float)PowerLaw.Normalize (_rand.NextSingle (true)' t' 0' 1)' _rand.Next (5));  	break;  default:  	pos = GetPointOnCubeSurface (_rand.NextSingle (true)' _rand.NextSingle (true)' _rand.Next (5));  	break;  }  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The following statement contains a magic number: pos = GetPointOnCubeSurface ((float)NormalDistribution.Normalize (_rand.NextSingle (true)' t)' (float)NormalDistribution.Normalize (_rand.NextSingle (true)' t)' _rand.Next (5));  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The following statement contains a magic number: pos = GetPointOnCubeSurface ((float)PowerLaw.Normalize (_rand.NextSingle (true)' t' 0' 1)' (float)PowerLaw.Normalize (_rand.NextSingle (true)' t' 0' 1)' _rand.Next (5));  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The following statement contains a magic number: pos = GetPointOnCubeSurface (_rand.NextSingle (true)' _rand.NextSingle (true)' _rand.Next (5));  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The following statement contains a magic number: return new Vector3 ((2 * pos.x) - 1' (2 * pos.y) - 1' (2 * pos.z) - 1);  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The following statement contains a magic number: return new Vector3 ((2 * pos.x) - 1' (2 * pos.y) - 1' (2 * pos.z) - 1);  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Surface,The following statement contains a magic number: return new Vector3 ((2 * pos.x) - 1' (2 * pos.y) - 1' (2 * pos.z) - 1);  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,GetPointOnCubeSurface,The following statement contains a magic number: switch (side) {  case 0:  	z = 0;  	x = xx;  	y = yy;  	break;  case 1:  	z = 1;  	x = xx;  	y = yy;  	break;  case 2:  	z = xx;  	x = yy;  	y = 0;  	break;  case 3:  	z = xx;  	x = yy;  	y = 1;  	break;  case 4:  	z = xx;  	y = yy;  	x = 0;  	break;  case 5:  	z = xx;  	y = yy;  	x = 1;  	break;  default:  	x = 0;  	y = 0;  	z = 0;  	break;  }  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,GetPointOnCubeSurface,The following statement contains a magic number: switch (side) {  case 0:  	z = 0;  	x = xx;  	y = yy;  	break;  case 1:  	z = 1;  	x = xx;  	y = yy;  	break;  case 2:  	z = xx;  	x = yy;  	y = 0;  	break;  case 3:  	z = xx;  	x = yy;  	y = 1;  	break;  case 4:  	z = xx;  	y = yy;  	x = 0;  	break;  case 5:  	z = xx;  	y = yy;  	x = 1;  	break;  default:  	x = 0;  	y = 0;  	z = 0;  	break;  }  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,GetPointOnCubeSurface,The following statement contains a magic number: switch (side) {  case 0:  	z = 0;  	x = xx;  	y = yy;  	break;  case 1:  	z = 1;  	x = xx;  	y = yy;  	break;  case 2:  	z = xx;  	x = yy;  	y = 0;  	break;  case 3:  	z = xx;  	x = yy;  	y = 1;  	break;  case 4:  	z = xx;  	y = yy;  	x = 0;  	break;  case 5:  	z = xx;  	y = yy;  	x = 1;  	break;  default:  	x = 0;  	y = 0;  	z = 0;  	break;  }  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,GetPointOnCubeSurface,The following statement contains a magic number: switch (side) {  case 0:  	z = 0;  	x = xx;  	y = yy;  	break;  case 1:  	z = 1;  	x = xx;  	y = yy;  	break;  case 2:  	z = xx;  	x = yy;  	y = 0;  	break;  case 3:  	z = xx;  	x = yy;  	y = 1;  	break;  case 4:  	z = xx;  	y = yy;  	x = 0;  	break;  case 5:  	z = xx;  	y = yy;  	x = 1;  	break;  default:  	x = 0;  	y = 0;  	z = 0;  	break;  }  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Volume,The following statement contains a magic number: return new Vector3 ((2 * pos.x) - 1' (2 * pos.y) - 1' (2 * pos.z) - 1);  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Volume,The following statement contains a magic number: return new Vector3 ((2 * pos.x) - 1' (2 * pos.y) - 1' (2 * pos.z) - 1);  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Volume,The following statement contains a magic number: return new Vector3 ((2 * pos.x) - 1' (2 * pos.y) - 1' (2 * pos.z) - 1);  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Volume,The following statement contains a magic number: return new Vector3 ((2 * x) - 1' (2 * y) - 1' (2 * z) - 1);  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Volume,The following statement contains a magic number: return new Vector3 ((2 * x) - 1' (2 * y) - 1' (2 * z) - 1);  
Magic Number,URandom,RandomCube,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomCube.cs,Volume,The following statement contains a magic number: return new Vector3 ((2 * x) - 1' (2 * y) - 1' (2 * z) - 1);  
Magic Number,URandom,RandomDisk,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomDisk.cs,Disk,The following statement contains a magic number: switch (n) {  case UnityRandom.Normalization.STDNORMAL:  	t = NormalDistribution.Normalize (_rand.NextSingle (true)' temp);  	theta = NormalDistribution.Normalize (_rand.NextSingle (true)' temp) * 2 * Math.PI;  	break;  case UnityRandom.Normalization.POWERLAW:  	t = PowerLaw.Normalize (_rand.NextSingle (true)' temp' 0' 1);  	theta = PowerLaw.Normalize (_rand.NextSingle (true)' temp' 0' 1) * 2 * Math.PI;  	break;  default:  	t = (float)_rand.NextSingle (true);  	theta = _rand.NextSingle (false) * 2 * Math.PI;  	break;  }  
Magic Number,URandom,RandomDisk,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomDisk.cs,Disk,The following statement contains a magic number: switch (n) {  case UnityRandom.Normalization.STDNORMAL:  	t = NormalDistribution.Normalize (_rand.NextSingle (true)' temp);  	theta = NormalDistribution.Normalize (_rand.NextSingle (true)' temp) * 2 * Math.PI;  	break;  case UnityRandom.Normalization.POWERLAW:  	t = PowerLaw.Normalize (_rand.NextSingle (true)' temp' 0' 1);  	theta = PowerLaw.Normalize (_rand.NextSingle (true)' temp' 0' 1) * 2 * Math.PI;  	break;  default:  	t = (float)_rand.NextSingle (true);  	theta = _rand.NextSingle (false) * 2 * Math.PI;  	break;  }  
Magic Number,URandom,RandomDisk,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomDisk.cs,Disk,The following statement contains a magic number: switch (n) {  case UnityRandom.Normalization.STDNORMAL:  	t = NormalDistribution.Normalize (_rand.NextSingle (true)' temp);  	theta = NormalDistribution.Normalize (_rand.NextSingle (true)' temp) * 2 * Math.PI;  	break;  case UnityRandom.Normalization.POWERLAW:  	t = PowerLaw.Normalize (_rand.NextSingle (true)' temp' 0' 1);  	theta = PowerLaw.Normalize (_rand.NextSingle (true)' temp' 0' 1) * 2 * Math.PI;  	break;  default:  	t = (float)_rand.NextSingle (true);  	theta = _rand.NextSingle (false) * 2 * Math.PI;  	break;  }  
Magic Number,URandom,RandomDisk,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomDisk.cs,Disk,The following statement contains a magic number: theta = NormalDistribution.Normalize (_rand.NextSingle (true)' temp) * 2 * Math.PI;  
Magic Number,URandom,RandomDisk,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomDisk.cs,Disk,The following statement contains a magic number: theta = PowerLaw.Normalize (_rand.NextSingle (true)' temp' 0' 1) * 2 * Math.PI;  
Magic Number,URandom,RandomDisk,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomDisk.cs,Disk,The following statement contains a magic number: theta = _rand.NextSingle (false) * 2 * Math.PI;  
Magic Number,URandom,RandomSquare,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomSquare.cs,Area,The following statement contains a magic number: return new Vector2 ((2 * _rand.NextSingle (true) - 1)' (2 * _rand.NextSingle (true) - 1));  
Magic Number,URandom,RandomSquare,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomSquare.cs,Area,The following statement contains a magic number: return new Vector2 ((2 * _rand.NextSingle (true) - 1)' (2 * _rand.NextSingle (true) - 1));  
Magic Number,URandom,RandomSquare,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomSquare.cs,Area,The following statement contains a magic number: return new Vector2 ((2 * x - 1)' (2 * y - 1));  
Magic Number,URandom,RandomSquare,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\RandomSquare.cs,Area,The following statement contains a magic number: return new Vector2 ((2 * x - 1)' (2 * y - 1));  
Magic Number,URandom,SpecialFunctions,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\SpecialFunctions.cs,gammln,The following statement contains a magic number: tmp = x + 5.5;  
Magic Number,URandom,SpecialFunctions,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\SpecialFunctions.cs,gammln,The following statement contains a magic number: tmp -= (x + 0.5) * Math.Log (tmp);  
Magic Number,URandom,SpecialFunctions,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\SpecialFunctions.cs,gammln,The following statement contains a magic number: ser = 1.000000000190015;  
Magic Number,URandom,SpecialFunctions,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\SpecialFunctions.cs,gammln,The following statement contains a magic number: for (j = 0; j <= 5; j++) {  	ser += cof [j] / ++y;  }  
Magic Number,URandom,SpecialFunctions,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\SpecialFunctions.cs,gammln,The following statement contains a magic number: return -tmp + Math.Log (2.5066282746310005 * ser / x);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 440) {  	r = -(wave - 440) / (440 - 380);  	g = 0.0f;  	b = 1.0f;  }  else if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: r = -(wave - 440) / (440 - 380);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: r = -(wave - 440) / (440 - 380);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: r = -(wave - 440) / (440 - 380);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 440 && wave < 490) {  	r = 0.0f;  	g = (wave - 440) / (490 - 440);  	b = 1.0f;  }  else if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: g = (wave - 440) / (490 - 440);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: g = (wave - 440) / (490 - 440);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: g = (wave - 440) / (490 - 440);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 490 && wave < 510) {  	r = 0.0f;  	g = 1.0f;  	b = -(wave - 510) / (510 - 490);  }  else if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: b = -(wave - 510) / (510 - 490);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: b = -(wave - 510) / (510 - 490);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: b = -(wave - 510) / (510 - 490);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 510 && wave < 580) {  	r = (wave - 510) / (580 - 510);  	g = 1.0f;  	b = 0.0f;  }  else if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: r = (wave - 510) / (580 - 510);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: r = (wave - 510) / (580 - 510);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: r = (wave - 510) / (580 - 510);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 580 && wave < 645) {  	r = 1.0f;  	g = -(wave - 645) / (645 - 580);  	b = 0.0f;  }  else if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: g = -(wave - 645) / (645 - 580);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: g = -(wave - 645) / (645 - 580);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: g = -(wave - 645) / (645 - 580);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 645 && wave <= 780) {  	r = 1.0f;  	g = 0.0f;  	b = 0.0f;  }  else {  	r = 0.0f;  	g = 0.0f;  	b = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 420) {  	factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  }  else if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 420) {  	factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  }  else if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 420) {  	factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  }  else if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 420) {  	factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  }  else if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 420) {  	factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  }  else if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 420) {  	factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  }  else if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 420) {  	factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  }  else if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 420) {  	factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  }  else if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 420) {  	factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  }  else if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 420) {  	factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  }  else if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 420) {  	factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  }  else if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 380 && wave < 420) {  	factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  }  else if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: factor = 0.3f + 0.7f * (wave - 380) / (420 - 380);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 420 && wave < 700) {  	factor = 1.0f;  }  else if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: if (wave >= 700 && wave <= 780) {  	factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  }  else {  	factor = 0.0f;  }  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: factor = 0.3f + 0.7f * (780 - wave) / (780 - 700);  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: r = r / 255;  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: g = g / 255;  
Magic Number,URandom,WaveToRgb,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\WaveToRgb.cs,WaveLengthToRgb,The following statement contains a magic number: b = b / 255;  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,NextBytes,The following statement contains a magic number: for (Int32 idx = 0; idx < bufLen; ++idx) {  	buffer [idx] = (Byte)Next (256);  }  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,NextBytes,The following statement contains a magic number: buffer [idx] = (Byte)Next (256);  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,NextDoublePositive,The following statement contains a magic number: return compute53BitRandom (0.5' Inverse53BitsOf1s);  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,temperingShiftU,The following statement contains a magic number: return (y >> 11);  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,temperingShiftS,The following statement contains a magic number: return (y << 7);  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,temperingShiftT,The following statement contains a magic number: return (y << 15);  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,temperingShiftL,The following statement contains a magic number: return (y >> 18);  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,init,The following statement contains a magic number: for (_mti = 1; _mti < N; _mti++) {  	_mt [_mti] = (uint)(1812433253U * (_mt [_mti - 1] ^ (_mt [_mti - 1] >> 30)) + _mti);  	// See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier.   	// In the previous versions' MSBs of the seed affect     	// only MSBs of the array _mt[].                          	// 2002/01/09 modified by Makoto Matsumoto               	_mt [_mti] &= 0xffffffffU;  	// for >32 bit machines  }  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,init,The following statement contains a magic number: _mt [_mti] = (uint)(1812433253U * (_mt [_mti - 1] ^ (_mt [_mti - 1] >> 30)) + _mti);  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,init,The following statement contains a magic number: for (; k > 0; k--) {  	_mt [i] = (uint)((_mt [i] ^ ((_mt [i - 1] ^ (_mt [i - 1] >> 30)) * 1664525U)) + key [j] + j);  	/* non linear */_mt [i] &= 0xffffffffU;  	// for WORDSIZE > 32 machines  	i++;  	j++;  	if (i >= N) {  		_mt [0] = _mt [N - 1];  		i = 1;  	}  	if (j >= keyLength)  		j = 0;  }  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,init,The following statement contains a magic number: _mt [i] = (uint)((_mt [i] ^ ((_mt [i - 1] ^ (_mt [i - 1] >> 30)) * 1664525U)) + key [j] + j);  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,init,The following statement contains a magic number: for (k = N - 1; k > 0; k--) {  	_mt [i] = (uint)((_mt [i] ^ ((_mt [i - 1] ^ (_mt [i - 1] >> 30)) * 1566083941U)) - i);  	/* non linear */_mt [i] &= 0xffffffffU;  	// for WORDSIZE > 32 machines  	i++;  	if (i < N) {  		continue;  	}  	_mt [0] = _mt [N - 1];  	i = 1;  }  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,init,The following statement contains a magic number: _mt [i] = (uint)((_mt [i] ^ ((_mt [i - 1] ^ (_mt [i - 1] >> 30)) * 1566083941U)) - i);  
Magic Number,NPack,MersenneTwister,C:\repos\biagio90_Lab2\Assets\Script\utility_script\UnityRandom-master\lib\MersenneTwister.cs,compute53BitRandom,The following statement contains a magic number: return ((a * 67108864.0 + b) + translate) * scale;  
