Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ProtoBuf.Data,ProtoDataReader,C:\repos\rdingwall_protobuf-net-data\src\ProtoBuf.Data\ProtoDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,ProtoBuf.Data,ProtoDataReader,C:\repos\rdingwall_protobuf-net-data\src\ProtoBuf.Data\ProtoDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Statement,ProtoBuf.Data,ProtoDataWriterOptions,C:\repos\rdingwall_protobuf-net-data\src\ProtoBuf.Data\ProtoDataWriterOptions.cs,Equals,The length of the statement  "            return other.SerializeEmptyArraysAsNull.Equals(SerializeEmptyArraysAsNull) && other.IncludeComputedColumns.Equals(IncludeComputedColumns); " is 138.
Complex Conditional,ProtoBuf.Data.Internal,RowWriter,C:\repos\rdingwall_protobuf-net-data\src\ProtoBuf.Data\Internal\RowWriter.cs,WriteRow,The conditional expression  "value == null || value is DBNull || (options.SerializeEmptyArraysAsNull && IsZeroLengthArray(value))"  is complex.
Magic Number,ProtoBuf.Data,ProtoDataReader,C:\repos\rdingwall_protobuf-net-data\src\ProtoBuf.Data\ProtoDataReader.cs,ReadNextTableHeader,The following statement contains a magic number: if (currentField != 2)              {                  throw new InvalidOperationException("No header found! Invalid/corrupt stream.");              }
Magic Number,ProtoBuf.Data,ProtoDataReader,C:\repos\rdingwall_protobuf-net-data\src\ProtoBuf.Data\ProtoDataReader.cs,ReadHeader,The following statement contains a magic number: do              {                  ReadColumn();                  AdvanceToNextField();              }              while (currentField == 2);
Magic Number,ProtoBuf.Data,ProtoDataReader,C:\repos\rdingwall_protobuf-net-data\src\ProtoBuf.Data\ProtoDataReader.cs,ReadColumn,The following statement contains a magic number: while ((field = reader.ReadFieldHeader()) != 0)              {                  switch (field)                  {                      case 1:                          name = reader.ReadString();                          break;                      case 2:                          protoDataType = (ProtoDataType)reader.ReadInt32();                          break;                      default:                          reader.SkipField();                          break;                  }              }
Magic Number,ProtoBuf.Data,ProtoDataWriterOptions,C:\repos\rdingwall_protobuf-net-data\src\ProtoBuf.Data\ProtoDataWriterOptions.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  return (SerializeEmptyArraysAsNull.GetHashCode() * 397) ^ IncludeComputedColumns.GetHashCode();              }
Magic Number,ProtoBuf.Data.Internal,HeaderWriter,C:\repos\rdingwall_protobuf-net-data\src\ProtoBuf.Data\Internal\HeaderWriter.cs,WriteHeader,The following statement contains a magic number: foreach (ProtoDataColumn column in columns)              {                  // for each' write the name and data type                  ProtoWriter.WriteFieldHeader(2' WireType.StartGroup' writer);                  SubItemToken columnToken = ProtoWriter.StartSubItem(column' writer);                  ProtoWriter.WriteFieldHeader(1' WireType.String' writer);                  ProtoWriter.WriteString(column.ColumnName' writer);                  ProtoWriter.WriteFieldHeader(2' WireType.Variant' writer);                  ProtoWriter.WriteInt32((int)column.ProtoDataType' writer);                  ProtoWriter.EndSubItem(columnToken' writer);              }
Magic Number,ProtoBuf.Data.Internal,HeaderWriter,C:\repos\rdingwall_protobuf-net-data\src\ProtoBuf.Data\Internal\HeaderWriter.cs,WriteHeader,The following statement contains a magic number: foreach (ProtoDataColumn column in columns)              {                  // for each' write the name and data type                  ProtoWriter.WriteFieldHeader(2' WireType.StartGroup' writer);                  SubItemToken columnToken = ProtoWriter.StartSubItem(column' writer);                  ProtoWriter.WriteFieldHeader(1' WireType.String' writer);                  ProtoWriter.WriteString(column.ColumnName' writer);                  ProtoWriter.WriteFieldHeader(2' WireType.Variant' writer);                  ProtoWriter.WriteInt32((int)column.ProtoDataType' writer);                  ProtoWriter.EndSubItem(columnToken' writer);              }
Magic Number,ProtoBuf.Data.Internal,RowWriter,C:\repos\rdingwall_protobuf-net-data\src\ProtoBuf.Data\Internal\RowWriter.cs,WriteRow,The following statement contains a magic number: ProtoWriter.WriteFieldHeader(3' WireType.StartGroup' writer);
