Implementation smell,Namespace,Class,File,Method,Description
Long Method,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The method has 273 lines of code.
Long Method,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The method has 221 lines of code.
Complex Method,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,Cyclomatic complexity of the method is 44
Complex Method,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,Cyclomatic complexity of the method is 29
Complex Method,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,ToString2,Cyclomatic complexity of the method is 20
Long Parameter List,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Process,The method has 8 parameters. Parameters: root' sourceAssembly' targetFile' sourceTypeName' targetTypeName' includeAsync' createAliases' exludeFromCodeCoverage
Long Parameter List,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The method has 8 parameters. Parameters: input' xml' output' sourceTypeName' targetTypeName' includeAsync' createAliases' exludeFromCodeCoverage
Long Parameter List,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The method has 6 parameters. Parameters: t' docs' typeName' includeAsync' createAliases' exludeFromCodeCoverage
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The length of the statement  "            var docs = XDocument.Load(xml).Root.Element("members").Elements("member").ToDictionary(m => m.Attribute("name").Value' m => m); " is 127.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The length of the statement  "            var except = new[] { "ToAsync"' "FromAsyncPattern"' "And"' "Then"' "GetEnumerator"' "get_Provider"' "Wait"' "ForEach"' "ForEachAsync"' "GetAwaiter"' "RunAsync"' "First"' "FirstOrDefault"' "Last"' "LastOrDefault"' "Single"' "SingleOrDefault"' "Subscribe"' "AsQbservable"' "AsObservable"' "ToEvent"' "ToEventPattern" }; " is 317.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The length of the statement  "            foreach (var m in t.GetMethods(BindingFlags.Public | BindingFlags.Static).OrderBy(m => m.Name).ThenBy(m => !m.IsGenericMethod ? "" : string.Join("'"' m.GetGenericArguments().Select(p => p.Name))).ThenBy(m => string.Join("'"' m.GetParameters().Select(p => p.Name + ":" + p.ParameterType.FullName))).Where(m => !except.Contains(m.Name))) " is 335.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The length of the statement  "                            WriteLine("/// <param name=\"provider\">Query provider used to construct the <see cref=\"IQbservable{T}\"/> data source.</param>"); " is 131.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The length of the statement  "                            WriteLine("/// <remarks>This operator requires the source's <see cref=\"IQbservableProvider\"/> object (see <see cref=\"IQbservable.Provider\"/>) to implement <see cref=\"IQueryProvider\"/>.</remarks>"); " is 203.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The length of the statement  "                    WriteLine("InfoOf(() => " + typeName + "." + name + g + "(" + string.Join("' "' ptps.Select(pt => "default(" + pt + ")")) + "))" + cma); " is 136.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The length of the statement  "                        WriteLine("((MethodInfo)MethodInfo.GetCurrentMethod()).MakeGenericMethod(" + string.Join("' "' m.GetGenericArguments().Select(ga => "typeof(" + ga.Name + ")").ToArray()) + ")" + cma); " is 183.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The length of the statement  "                            WriteLine("/// <param name=\"provider\">Query provider used to construct the <see cref=\"IQbservable{T}\"/> data source.</param>"); " is 131.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The length of the statement  "                        WriteLine("public static " + retType + " ToAsync" + genArgss + "(this IQbservableProvider provider' " + actType + " " + fParam + (withScheduler ? "' IScheduler scheduler" : "") + ")"); " is 184.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The length of the statement  "                        WriteLine("var m = InfoOf(() => " + typeName + ".ToAsync" + genArgss + "(" + string.Join("' "' aprs.Select(pt => "default(" + pt + ")")) + "));"); " is 146.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The length of the statement  "                            WriteLine("var m = ((MethodInfo)MethodInfo.GetCurrentMethod()).MakeGenericMethod(" + string.Join("' "' genArgs.Select(a => "typeof(" + a + ")").ToArray()) + ");"); " is 163.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The length of the statement  "                    var begType = "Expression<Func<" + string.Join("' "' genArgs.Concat(new[] { "AsyncCallback"' "object"' "IAsyncResult" }).ToArray()) + ">>"; " is 139.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The length of the statement  "                        var docArgB = "System.Func{" + string.Join("'"' Enumerable.Range(0' genArgs.Length).Select(j => "``" + j)) + (genArgs.Length > 0 ? "'" : "") + "System.AsyncCallback'System.Object'System.IAsyncResult}"; " is 201.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The length of the statement  "                        var docArgB = "System.Func{" + string.Join("'"' Enumerable.Range(0' genArgs.Length - 1).Select(j => "``" + j)) + (genArgs.Length > 1 ? "'" : "") + "System.AsyncCallback'System.Object'System.IAsyncResult}"; " is 205.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The length of the statement  "                        WriteLine("/// <param name=\"provider\">Query provider used to construct the <see cref=\"IQbservable{T}\"/> data source.</param>"); " is 131.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The length of the statement  "                    WriteLine("public static " + retType + " FromAsyncPattern" + genArgss + "(this IQbservableProvider provider' " + begType + " begin' " + endType + "end)"); " is 154.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The length of the statement  "                    WriteLine("var m = InfoOf(() => " + typeName + ".FromAsyncPattern" + genArgss + "(" + string.Join("' "' aprs.Select(pt => "default(" + pt + ")")) + "));"); " is 155.
Long Statement,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The length of the statement  "                        WriteLine("var m = ((MethodInfo)MethodInfo.GetCurrentMethod()).MakeGenericMethod(" + string.Join("' "' genArgs.Select(a => "typeof(" + a + ")").ToArray()) + ");"); " is 163.
Complex Conditional,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The conditional expression  "isObs(pt) || pt.IsArray && isObs(pt.GetElementType()) || isEnm(pt) || pt.IsArray && isEnm(pt.GetElementType())"  is complex.
Empty Catch Block,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The method has an empty catch block.
Magic Number,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The following statement contains a magic number: var funky = from pi in p                              let pt = pi.ParameterType                              where pt.IsGenericType                              let ptgtd = pt.GetGenericTypeDefinition()                              where ptgtd.Name.StartsWith("Func")                              where ptgtd.GetGenericArguments().Count() > 5                              select pi;
Magic Number,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The following statement contains a magic number: i <= 16
Magic Number,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,GenerateAsync,The following statement contains a magic number: i < 15
Magic Number,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,WriteLine,The following statement contains a magic number: var indentspace = noIndent || string.IsNullOrWhiteSpace(t)                      ? ""                       : new string(' '' _indent * 4);
Missing Default,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,Generate,The following switch statement is missing a default case: switch (name)                          {                              case "Map":                                  underlying = "Select";                                  break;                              case "FlatMap":                                  underlying = "SelectMany";                                  break;                              case "Filter":                                  underlying = "Where";                                  break;                          }
Missing Default,HomoIconize,Program,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\Rx.NET\tools\HomoIcon\Program.cs,SimplyfyDocType,The following switch statement is missing a default case: switch (v)              {                  case "Double": return "double";                  // case "Decimal": return "decimal";                  case "Int32": return "int";                  case "Inte16": return "short";                  case "Int64": return "long";                  // case "Single": return "float";                  case "IObservable`1": return "IObservable{T}";              }
