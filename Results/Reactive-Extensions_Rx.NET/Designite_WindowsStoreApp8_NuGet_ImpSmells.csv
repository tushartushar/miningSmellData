Implementation smell,Namespace,Class,File,Method,Description
Long Statement,WindowsStoreApp8_NuGet,MainPage,C:\repos\Reactive-Extensions_Rx.NET\Rx.NET\Test\Rx\WindowsStoreApp8_NuGet\MainPage.xaml.cs,button1_Click,The length of the statement  "            var txt = Observable.FromEventPattern<TextChangedEventArgs>(textBox1' "TextChanged").Select(evt => ((TextBox)evt.Sender).Text).Throttle(TimeSpan.FromSeconds(.5)).DistinctUntilChanged(); " is 185.
Magic Number,WindowsStoreApp8_NuGet,MainPage,C:\repos\Reactive-Extensions_Rx.NET\Rx.NET\Test\Rx\WindowsStoreApp8_NuGet\MainPage.xaml.cs,button1_Click,The following statement contains a magic number: var txt = Observable.FromEventPattern<TextChangedEventArgs>(textBox1' "TextChanged").Select(evt => ((TextBox)evt.Sender).Text).Throttle(TimeSpan.FromSeconds(.5)).DistinctUntilChanged();
Magic Number,WindowsStoreApp8_NuGet,MainPage,C:\repos\Reactive-Extensions_Rx.NET\Rx.NET\Test\Rx\WindowsStoreApp8_NuGet\MainPage.xaml.cs,button1_Click,The following statement contains a magic number: var input = from t in Observable.Timer(TimeSpan.FromMilliseconds(100))                          from _ in txt                          select _;
Magic Number,WindowsStoreApp8_NuGet,MainPage,C:\repos\Reactive-Extensions_Rx.NET\Rx.NET\Test\Rx\WindowsStoreApp8_NuGet\MainPage.xaml.cs,button1_Click,The following statement contains a magic number: var xs = from word in input.StartWith("")                       from length in Task.Run(async () => { await Task.Delay(250); return word.Length; }).AsAsyncOperation()                       select length;
