Implementation smell,Namespace,Class,File,Method,Description
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Amb,The method has 107 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Buffer,The method has 108 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 117 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 138 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 170 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 181 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 223 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 224 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 276 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 267 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 329 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 310 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 382 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 353 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 435 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 396 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 488 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 439 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 541 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 482 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 594 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 525 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 647 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 568 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 700 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 611 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 753 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 654 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The method has 806 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupBy,The method has 114 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 191 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupJoin,The method has 159 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Join,The method has 180 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,SequenceEqual,The method has 140 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Throttle,The method has 101 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Window,The method has 128 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The method has 100 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The method has 102 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The method has 104 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The method has 106 lines of code.
Long Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The method has 108 lines of code.
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 8
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 8
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 8
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 9
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 9
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 9
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 10
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 10
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 10
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 11
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 11
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 11
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 12
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 12
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 12
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 13
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 13
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 13
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 14
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 14
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 14
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 15
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 15
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 15
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 16
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 16
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 16
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 17
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,Cyclomatic complexity of the method is 17
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GetEventMethods,Cyclomatic complexity of the method is 14
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 8
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 8
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 8
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 9
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 9
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 9
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 10
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 10
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 10
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 11
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 11
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 11
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 12
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 12
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 12
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 13
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 13
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 13
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 14
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 14
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 14
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 15
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 15
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 15
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 16
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 16
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 16
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 17
Complex Method,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,Cyclomatic complexity of the method is 17
Complex Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupBy,Cyclomatic complexity of the method is 8
Complex Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,Cyclomatic complexity of the method is 8
Complex Method,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,Cyclomatic complexity of the method is 8
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 5 parameters. Parameters: observer1' observer2' observer3' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 6 parameters. Parameters: observer1' observer2' observer3' observer4' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 7 parameters. Parameters: observer1' observer2' observer3' observer4' observer5' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 8 parameters. Parameters: observer1' observer2' observer3' observer4' observer5' observer6' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 9 parameters. Parameters: observer1' observer2' observer3' observer4' observer5' observer6' observer7' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 10 parameters. Parameters: observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 11 parameters. Parameters: observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 12 parameters. Parameters: observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 13 parameters. Parameters: observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 14 parameters. Parameters: observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 15 parameters. Parameters: observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 16 parameters. Parameters: observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 17 parameters. Parameters: observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14' observer15' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,ActiveAsyncPlan,The method has 18 parameters. Parameters: observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14' observer15' observer16' onNext' onCompleted
Long Parameter List,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,AsyncPattern,The method has 5 parameters. Parameters: source1' source2' source3' source4' source5
Long Parameter List,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,AsyncPattern,The method has 6 parameters. Parameters: source1' source2' source3' source4' source5' source6
Long Parameter List,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,AsyncPattern,The method has 7 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7
Long Parameter List,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,AsyncPattern,The method has 8 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8
Long Parameter List,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,AsyncPattern,The method has 9 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9
Long Parameter List,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,AsyncPattern,The method has 10 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10
Long Parameter List,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,AsyncPattern,The method has 11 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11
Long Parameter List,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,AsyncPattern,The method has 12 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12
Long Parameter List,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,AsyncPattern,The method has 13 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13
Long Parameter List,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,AsyncPattern,The method has 14 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14
Long Parameter List,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,AsyncPattern,The method has 15 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14' source15
Long Parameter List,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,AsyncPattern,The method has 16 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14' source15' source16
Long Parameter List,System.Reactive.Joins,AsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 5 parameters. Parameters: arg1' arg2' arg3' arg4' arg5
Long Parameter List,System.Reactive.Joins,AsyncPlanWithTask<TSource1;TSource2;TSource3;TSource4;TSource5;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 5 parameters. Parameters: arg1' arg2' arg3' arg4' arg5
Long Parameter List,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 5 parameters. Parameters: arg1' arg2' arg3' arg4' arg5
Long Parameter List,System.Reactive.Joins,AsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 6 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6
Long Parameter List,System.Reactive.Joins,AsyncPlanWithTask<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 6 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6
Long Parameter List,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 6 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6
Long Parameter List,System.Reactive.Joins,AsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 7 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7
Long Parameter List,System.Reactive.Joins,AsyncPlanWithTask<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 7 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7
Long Parameter List,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 7 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7
Long Parameter List,System.Reactive.Joins,AsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 8 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8
Long Parameter List,System.Reactive.Joins,AsyncPlanWithTask<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 8 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8
Long Parameter List,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 8 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8
Long Parameter List,System.Reactive.Joins,AsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 9 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9
Long Parameter List,System.Reactive.Joins,AsyncPlanWithTask<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 9 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9
Long Parameter List,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 9 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9
Long Parameter List,System.Reactive.Joins,AsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 10 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10
Long Parameter List,System.Reactive.Joins,AsyncPlanWithTask<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 10 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10
Long Parameter List,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 10 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10
Long Parameter List,System.Reactive.Joins,AsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 11 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11
Long Parameter List,System.Reactive.Joins,AsyncPlanWithTask<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 11 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11
Long Parameter List,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 11 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11
Long Parameter List,System.Reactive.Joins,AsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 12 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12
Long Parameter List,System.Reactive.Joins,AsyncPlanWithTask<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 12 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12
Long Parameter List,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 12 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12
Long Parameter List,System.Reactive.Joins,AsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 13 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13
Long Parameter List,System.Reactive.Joins,AsyncPlanWithTask<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 13 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13
Long Parameter List,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 13 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13
Long Parameter List,System.Reactive.Joins,AsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 14 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14
Long Parameter List,System.Reactive.Joins,AsyncPlanWithTask<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 14 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14
Long Parameter List,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 14 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14
Long Parameter List,System.Reactive.Joins,AsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 15 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15
Long Parameter List,System.Reactive.Joins,AsyncPlanWithTask<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 15 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15
Long Parameter List,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 15 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15
Long Parameter List,System.Reactive.Joins,AsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 16 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16
Long Parameter List,System.Reactive.Joins,AsyncPlanWithTask<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 16 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16
Long Parameter List,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,EvalAsync,The method has 16 parameters. Parameters: arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 5 parameters. Parameters: source1' source2' source3' source4' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 5 parameters. Parameters: source1' source2' source3' source4' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 5 parameters. Parameters: source1' source2' source3' source4' source5
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 6 parameters. Parameters: source1' source2' source3' source4' source5' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 6 parameters. Parameters: source1' source2' source3' source4' source5' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 6 parameters. Parameters: source1' source2' source3' source4' source5' source6
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 7 parameters. Parameters: source1' source2' source3' source4' source5' source6' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 7 parameters. Parameters: source1' source2' source3' source4' source5' source6' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 7 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 8 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 8 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 8 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 9 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 9 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 9 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 10 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 10 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 10 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 11 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 11 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 11 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 12 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 12 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 12 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 13 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 13 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 13 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 14 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 14 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 14 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 15 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 15 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 15 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14' source15
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 16 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14' source15' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The method has 16 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14' source15' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPatternCore,The method has 5 parameters. Parameters: type' target' eventName' scheduler' resultSelector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The method has 5 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The method has 6 parameters. Parameters: initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The method has 5 parameters. Parameters: source' keySelector' elementSelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The method has 5 parameters. Parameters: source' keySelector' elementSelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The method has 5 parameters. Parameters: source' keySelector' durationSelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The method has 5 parameters. Parameters: source' keySelector' elementSelector' durationSelector' comparer
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The method has 5 parameters. Parameters: source' keySelector' elementSelector' durationSelector' capacity
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The method has 6 parameters. Parameters: source' keySelector' elementSelector' durationSelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The method has 5 parameters. Parameters: source' keySelector' durationSelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The method has 5 parameters. Parameters: source' keySelector' elementSelector' durationSelector' comparer
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The method has 5 parameters. Parameters: source' keySelector' elementSelector' durationSelector' capacity
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The method has 6 parameters. Parameters: source' keySelector' elementSelector' durationSelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupJoin,The method has 5 parameters. Parameters: left' right' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Join,The method has 5 parameters. Parameters: left' right' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Replay,The method has 5 parameters. Parameters: source' selector' bufferSize' window' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Replay,The method has 5 parameters. Parameters: source' selector' bufferSize' window' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 5 parameters. Parameters: source1' source2' source3' source4' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 5 parameters. Parameters: source1' source2' source3' source4' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 5 parameters. Parameters: source1' source2' source3' source4' source5
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 6 parameters. Parameters: source1' source2' source3' source4' source5' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 6 parameters. Parameters: source1' source2' source3' source4' source5' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 6 parameters. Parameters: source1' source2' source3' source4' source5' source6
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 7 parameters. Parameters: source1' source2' source3' source4' source5' source6' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 7 parameters. Parameters: source1' source2' source3' source4' source5' source6' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 7 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 8 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 8 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 8 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 9 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 9 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 9 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 10 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 10 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 10 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 11 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 11 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 11 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 12 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 12 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 12 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 13 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 13 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 13 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 14 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 14 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 14 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 15 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 15 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 15 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14' source15
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 16 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14' source15' selector
Long Parameter List,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The method has 16 parameters. Parameters: source1' source2' source3' source4' source5' source6' source7' source8' source9' source10' source11' source12' source13' source14' source15' selector
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 5 parameters. Parameters: observer' begin' end' arg1' arg2
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 6 parameters. Parameters: observer' begin' end' arg1' arg2' arg3
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 7 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 8 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 9 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 10 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 11 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 12 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 13 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 14 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 15 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 16 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 17 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 5 parameters. Parameters: observer' begin' end' arg1' arg2
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 6 parameters. Parameters: observer' begin' end' arg1' arg2' arg3
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 7 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 8 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 9 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 10 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 11 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 12 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 13 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 14 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 15 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 16 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,FromAsyncPattern,The method has 17 parameters. Parameters: observer' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The method has 5 parameters. Parameters: observer' initialState' condition' iterate' resultSelector
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The method has 6 parameters. Parameters: observer' initialState' condition' iterate' resultSelector' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The method has 5 parameters. Parameters: observer' initialState' condition' iterate' resultSelector
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The method has 6 parameters. Parameters: observer' initialState' condition' iterate' resultSelector' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The method has 6 parameters. Parameters: observer' initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The method has 7 parameters. Parameters: observer' initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The method has 6 parameters. Parameters: observer' initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The method has 7 parameters. Parameters: observer' initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The method has 6 parameters. Parameters: observer' initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The method has 7 parameters. Parameters: observer' initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The method has 6 parameters. Parameters: observer' initialState' condition' iterate' resultSelector' timeSelector
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The method has 7 parameters. Parameters: observer' initialState' condition' iterate' resultSelector' timeSelector' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupBy,The method has 5 parameters. Parameters: observer' subscription' keySelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupBy,The method has 5 parameters. Parameters: observer' subscription' keySelector' elementSelector' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupBy,The method has 5 parameters. Parameters: observer' subscription' keySelector' elementSelector' capacity
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupBy,The method has 6 parameters. Parameters: observer' subscription' keySelector' elementSelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupBy,The method has 5 parameters. Parameters: observer' subscription' keySelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupBy,The method has 5 parameters. Parameters: observer' subscription' keySelector' elementSelector' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupBy,The method has 5 parameters. Parameters: observer' subscription' keySelector' elementSelector' capacity
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupBy,The method has 6 parameters. Parameters: observer' subscription' keySelector' elementSelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 5 parameters. Parameters: observer' subscription' keySelector' durationSelector' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 5 parameters. Parameters: observer' subscription' keySelector' durationSelector' capacity
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 6 parameters. Parameters: observer' subscription' keySelector' durationSelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 5 parameters. Parameters: observer' subscription' keySelector' elementSelector' durationSelector
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 6 parameters. Parameters: observer' subscription' keySelector' elementSelector' durationSelector' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 6 parameters. Parameters: observer' subscription' keySelector' elementSelector' durationSelector' capacity
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 7 parameters. Parameters: observer' subscription' keySelector' elementSelector' durationSelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 5 parameters. Parameters: observer' subscription' keySelector' durationSelector' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 5 parameters. Parameters: observer' subscription' keySelector' durationSelector' capacity
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 6 parameters. Parameters: observer' subscription' keySelector' durationSelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 5 parameters. Parameters: observer' subscription' keySelector' elementSelector' durationSelector
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 6 parameters. Parameters: observer' subscription' keySelector' elementSelector' durationSelector' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 6 parameters. Parameters: observer' subscription' keySelector' elementSelector' durationSelector' capacity
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The method has 7 parameters. Parameters: observer' subscription' keySelector' elementSelector' durationSelector' capacity' comparer
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupJoin,The method has 5 parameters. Parameters: observer' subscriptions' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Join,The method has 5 parameters. Parameters: observer' subscriptions' leftDurationSelector' rightDurationSelector' resultSelector
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Timeout,The method has 5 parameters. Parameters: observer' sourceSubscription' dueTime' other' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 5 parameters. Parameters: observer' function' arg1' arg2' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 5 parameters. Parameters: observer' function' arg1' arg2' arg3
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 6 parameters. Parameters: observer' function' arg1' arg2' arg3' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 6 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 7 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 7 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 8 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 8 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 9 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 9 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 10 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 10 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 11 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 11 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 12 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 12 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 13 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 13 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 14 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 14 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 15 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 15 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 16 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 16 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 17 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 17 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 18 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 18 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 19 parameters. Parameters: observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 5 parameters. Parameters: observer' action' arg1' arg2' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 5 parameters. Parameters: observer' action' arg1' arg2' arg3
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 6 parameters. Parameters: observer' action' arg1' arg2' arg3' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 6 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 7 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 7 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 8 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 8 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 9 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 9 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 10 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 10 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 11 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 11 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 12 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 12 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 13 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 13 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 14 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 14 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 15 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 15 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 16 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 16 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 17 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 17 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 18 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 18 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The method has 19 parameters. Parameters: observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Window,The method has 5 parameters. Parameters: observer' subscription' timeSpan' timeShift' scheduler
Long Parameter List,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Window,The method has 5 parameters. Parameters: observer' subscription' timeSpan' count' scheduler
Long Statement,System.Reactive,EventPatternSourceBase<TSender;TEventArgs>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Internal\EventPatternSourceBase.cs,Add,The length of the statement  "            // [OK] Use of unsafe SubscribeAsync: non-pretentious wrapper of an observable in an event; exceptions can occur during +=. " is 123.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted) " is 163.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0) " is 121.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted) " is 217.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0) " is 151.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted) " is 271.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                return _onNext(notification1.Value' notification2.Value' notification3.Value' notification4.Value' notification5.Value); " is 120.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0) " is 181.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted) " is 325.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                return _onNext(notification1.Value' notification2.Value' notification3.Value' notification4.Value' notification5.Value' notification6.Value); " is 141.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0) " is 211.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted) " is 379.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                return _onNext(notification1.Value' notification2.Value' notification3.Value' notification4.Value' notification5.Value' notification6.Value' notification7.Value); " is 162.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0) " is 241.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted) " is 433.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                return _onNext(notification1.Value' notification2.Value' notification3.Value' notification4.Value' notification5.Value' notification6.Value' notification7.Value' notification8.Value); " is 183.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0) " is 271.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted) " is 487.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                return _onNext(notification1.Value' notification2.Value' notification3.Value' notification4.Value' notification5.Value' notification6.Value' notification7.Value' notification8.Value' notification9.Value); " is 204.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0) " is 302.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted) " is 542.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                return _onNext(notification1.Value' notification2.Value' notification3.Value' notification4.Value' notification5.Value' notification6.Value' notification7.Value' notification8.Value' notification9.Value' notification10.Value); " is 226.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0 && _observer11.Queue.Count > 0) " is 333.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted || notification11.Kind == NotificationKind.OnCompleted) " is 597.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                return _onNext(notification1.Value' notification2.Value' notification3.Value' notification4.Value' notification5.Value' notification6.Value' notification7.Value' notification8.Value' notification9.Value' notification10.Value' notification11.Value); " is 248.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0 && _observer11.Queue.Count > 0 && _observer12.Queue.Count > 0) " is 364.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted || notification11.Kind == NotificationKind.OnCompleted || notification12.Kind == NotificationKind.OnCompleted) " is 652.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                return _onNext(notification1.Value' notification2.Value' notification3.Value' notification4.Value' notification5.Value' notification6.Value' notification7.Value' notification8.Value' notification9.Value' notification10.Value' notification11.Value' notification12.Value); " is 270.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0 && _observer11.Queue.Count > 0 && _observer12.Queue.Count > 0 && _observer13.Queue.Count > 0) " is 395.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted || notification11.Kind == NotificationKind.OnCompleted || notification12.Kind == NotificationKind.OnCompleted || notification13.Kind == NotificationKind.OnCompleted) " is 707.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                return _onNext(notification1.Value' notification2.Value' notification3.Value' notification4.Value' notification5.Value' notification6.Value' notification7.Value' notification8.Value' notification9.Value' notification10.Value' notification11.Value' notification12.Value' notification13.Value); " is 292.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0 && _observer11.Queue.Count > 0 && _observer12.Queue.Count > 0 && _observer13.Queue.Count > 0 && _observer14.Queue.Count > 0) " is 426.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted || notification11.Kind == NotificationKind.OnCompleted || notification12.Kind == NotificationKind.OnCompleted || notification13.Kind == NotificationKind.OnCompleted || notification14.Kind == NotificationKind.OnCompleted) " is 762.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                return _onNext(notification1.Value' notification2.Value' notification3.Value' notification4.Value' notification5.Value' notification6.Value' notification7.Value' notification8.Value' notification9.Value' notification10.Value' notification11.Value' notification12.Value' notification13.Value' notification14.Value); " is 314.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0 && _observer11.Queue.Count > 0 && _observer12.Queue.Count > 0 && _observer13.Queue.Count > 0 && _observer14.Queue.Count > 0 && _observer15.Queue.Count > 0) " is 457.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted || notification11.Kind == NotificationKind.OnCompleted || notification12.Kind == NotificationKind.OnCompleted || notification13.Kind == NotificationKind.OnCompleted || notification14.Kind == NotificationKind.OnCompleted || notification15.Kind == NotificationKind.OnCompleted) " is 817.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                return _onNext(notification1.Value' notification2.Value' notification3.Value' notification4.Value' notification5.Value' notification6.Value' notification7.Value' notification8.Value' notification9.Value' notification10.Value' notification11.Value' notification12.Value' notification13.Value' notification14.Value' notification15.Value); " is 336.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "            if (_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0 && _observer11.Queue.Count > 0 && _observer12.Queue.Count > 0 && _observer13.Queue.Count > 0 && _observer14.Queue.Count > 0 && _observer15.Queue.Count > 0 && _observer16.Queue.Count > 0) " is 488.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                if (notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted || notification11.Kind == NotificationKind.OnCompleted || notification12.Kind == NotificationKind.OnCompleted || notification13.Kind == NotificationKind.OnCompleted || notification14.Kind == NotificationKind.OnCompleted || notification15.Kind == NotificationKind.OnCompleted || notification16.Kind == NotificationKind.OnCompleted) " is 872.
Long Statement,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The length of the statement  "                return _onNext(notification1.Value' notification2.Value' notification3.Value' notification4.Value' notification5.Value' notification6.Value' notification7.Value' notification8.Value' notification9.Value' notification10.Value' notification11.Value' notification12.Value' notification13.Value' notification14.Value' notification15.Value' notification16.Value); " is 358.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlanWithTask<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TResult>(this' selector); " is 124.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TResult>(this' selector); " is 126.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlanWithTask<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TResult>(this' selector); " is 134.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TResult>(this' selector); " is 136.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlanWithTask<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TResult>(this' selector); " is 144.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TResult>(this' selector); " is 147.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlanWithTask<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TResult>(this' selector); " is 155.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TResult>(this' selector); " is 158.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlanWithTask<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TResult>(this' selector); " is 166.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TResult>(this' selector); " is 169.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlanWithTask<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TResult>(this' selector); " is 177.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TResult>(this' selector); " is 180.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlanWithTask<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TResult>(this' selector); " is 188.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TSource14' TResult>(this' selector); " is 191.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlanWithTask<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TSource14' TResult>(this' selector); " is 199.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TSource14' TSource15' TResult>(this' selector); " is 202.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlanWithTask<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TSource14' TSource15' TResult>(this' selector); " is 210.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TSource14' TSource15' TSource16' TResult>(this' selector); " is 213.
Long Statement,System.Reactive.Joins,AsyncPattern<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPattern.Generated.cs,Then,The length of the statement  "            return new AsyncPlanWithTask<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TSource14' TSource15' TSource16' TResult>(this' selector); " is 221.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var activePlan = default(ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8>); " is 122.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var activePlan = default(ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9>); " is 132.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            activePlan = new ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9>( " is 123.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver10 = AsyncPlan<TResult>.CreateObserver<TSource10>(externalSubscriptions' _expression.Source10' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var activePlan = default(ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10>); " is 143.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            activePlan = new ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10>( " is 134.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver10 = AsyncPlan<TResult>.CreateObserver<TSource10>(externalSubscriptions' _expression.Source10' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver11 = AsyncPlan<TResult>.CreateObserver<TSource11>(externalSubscriptions' _expression.Source11' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var activePlan = default(ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11>); " is 154.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            activePlan = new ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11>( " is 145.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver10 = AsyncPlan<TResult>.CreateObserver<TSource10>(externalSubscriptions' _expression.Source10' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver11 = AsyncPlan<TResult>.CreateObserver<TSource11>(externalSubscriptions' _expression.Source11' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver12 = AsyncPlan<TResult>.CreateObserver<TSource12>(externalSubscriptions' _expression.Source12' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var activePlan = default(ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12>); " is 165.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            activePlan = new ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12>( " is 156.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver10 = AsyncPlan<TResult>.CreateObserver<TSource10>(externalSubscriptions' _expression.Source10' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver11 = AsyncPlan<TResult>.CreateObserver<TSource11>(externalSubscriptions' _expression.Source11' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver12 = AsyncPlan<TResult>.CreateObserver<TSource12>(externalSubscriptions' _expression.Source12' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver13 = AsyncPlan<TResult>.CreateObserver<TSource13>(externalSubscriptions' _expression.Source13' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var activePlan = default(ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13>); " is 176.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            activePlan = new ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13>( " is 167.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "                        res = await EvalAsync(arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13).ConfigureAwait(false); " is 126.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver10 = AsyncPlan<TResult>.CreateObserver<TSource10>(externalSubscriptions' _expression.Source10' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver11 = AsyncPlan<TResult>.CreateObserver<TSource11>(externalSubscriptions' _expression.Source11' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver12 = AsyncPlan<TResult>.CreateObserver<TSource12>(externalSubscriptions' _expression.Source12' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver13 = AsyncPlan<TResult>.CreateObserver<TSource13>(externalSubscriptions' _expression.Source13' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver14 = AsyncPlan<TResult>.CreateObserver<TSource14>(externalSubscriptions' _expression.Source14' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var activePlan = default(ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TSource14>); " is 187.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            activePlan = new ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TSource14>( " is 178.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "                        res = await EvalAsync(arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14).ConfigureAwait(false); " is 133.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver10 = AsyncPlan<TResult>.CreateObserver<TSource10>(externalSubscriptions' _expression.Source10' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver11 = AsyncPlan<TResult>.CreateObserver<TSource11>(externalSubscriptions' _expression.Source11' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver12 = AsyncPlan<TResult>.CreateObserver<TSource12>(externalSubscriptions' _expression.Source12' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver13 = AsyncPlan<TResult>.CreateObserver<TSource13>(externalSubscriptions' _expression.Source13' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver14 = AsyncPlan<TResult>.CreateObserver<TSource14>(externalSubscriptions' _expression.Source14' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver15 = AsyncPlan<TResult>.CreateObserver<TSource15>(externalSubscriptions' _expression.Source15' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var activePlan = default(ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TSource14' TSource15>); " is 198.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            activePlan = new ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TSource14' TSource15>( " is 189.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "                        res = await EvalAsync(arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15).ConfigureAwait(false); " is 140.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver10 = AsyncPlan<TResult>.CreateObserver<TSource10>(externalSubscriptions' _expression.Source10' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver11 = AsyncPlan<TResult>.CreateObserver<TSource11>(externalSubscriptions' _expression.Source11' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver12 = AsyncPlan<TResult>.CreateObserver<TSource12>(externalSubscriptions' _expression.Source12' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver13 = AsyncPlan<TResult>.CreateObserver<TSource13>(externalSubscriptions' _expression.Source13' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver14 = AsyncPlan<TResult>.CreateObserver<TSource14>(externalSubscriptions' _expression.Source14' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver15 = AsyncPlan<TResult>.CreateObserver<TSource15>(externalSubscriptions' _expression.Source15' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var joinObserver16 = AsyncPlan<TResult>.CreateObserver<TSource16>(externalSubscriptions' _expression.Source16' onError); " is 120.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            var activePlan = default(ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TSource14' TSource15' TSource16>); " is 209.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "            activePlan = new ActiveAsyncPlan<TSource1' TSource2' TSource3' TSource4' TSource5' TSource6' TSource7' TSource8' TSource9' TSource10' TSource11' TSource12' TSource13' TSource14' TSource15' TSource16>( " is 200.
Long Statement,System.Reactive.Joins,AsyncPlanBase<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16;TResult>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\AsyncPlan.Generated.cs,Activate,The length of the statement  "                        res = await EvalAsync(arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16).ConfigureAwait(false); " is 147.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Aggregate,The length of the statement  "            return Create<TResult>(observer => source.SubscribeSafeAsync(AsyncObserver.Aggregate(observer' seed' func' resultSelector))); " is 125.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Aggregate,The length of the statement  "            return Create<TResult>(observer => source.SubscribeSafeAsync(AsyncObserver.Aggregate(observer' seed' func' resultSelector))); " is 125.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Amb,The length of the statement  "                var firstTask = first.SubscribeSafeAsync(firstObserver).ContinueWith(d => firstSubscription.AssignAsync(d.Result)).Unwrap(); " is 124.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Amb,The length of the statement  "                var secondTask = second.SubscribeSafeAsync(secondObserver).ContinueWith(d => secondSubscription.AssignAsync(d.Result)).Unwrap(); " is 128.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Amb,The length of the statement  "                    tasks[i] = sources[i].SubscribeSafeAsync(observers[i]).ContinueWith(d => subscriptions[i].AssignAsync(d.Result)).Unwrap(); " is 122.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Average,The length of the statement  "            return Create<Decimal?>(observer => source.SubscribeSafeAsync(AsyncObserver.AverageNullableDecimal(observer' selector))); " is 121.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Average,The length of the statement  "            return Create<Decimal?>(observer => source.SubscribeSafeAsync(AsyncObserver.AverageNullableDecimal(observer' selector))); " is 121.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Buffer,The length of the statement  "                var (sourceObserver' closingDisposable) = await AsyncObserver.Buffer<TSource' TBufferClosing>(observer' bufferClosingSelector).ConfigureAwait(false); " is 149.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6) = AsyncObserver.CombineLatest(observer' selector); " is 121.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6) = AsyncObserver.CombineLatest(observer' selector); " is 121.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7) = AsyncObserver.CombineLatest(observer); " is 122.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7) = AsyncObserver.CombineLatest(observer' selector); " is 132.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7) = AsyncObserver.CombineLatest(observer' selector); " is 132.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8) = AsyncObserver.CombineLatest(observer); " is 133.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8) = AsyncObserver.CombineLatest(observer' selector); " is 143.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8) = AsyncObserver.CombineLatest(observer' selector); " is 143.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9) = AsyncObserver.CombineLatest(observer); " is 144.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9) = AsyncObserver.CombineLatest(observer' selector); " is 154.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9) = AsyncObserver.CombineLatest(observer' selector); " is 154.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10) = AsyncObserver.CombineLatest(observer); " is 156.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10) = AsyncObserver.CombineLatest(observer' selector); " is 166.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10) = AsyncObserver.CombineLatest(observer' selector); " is 166.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11) = AsyncObserver.CombineLatest(observer); " is 168.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11) = AsyncObserver.CombineLatest(observer' selector); " is 178.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11) = AsyncObserver.CombineLatest(observer' selector); " is 178.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12) = AsyncObserver.CombineLatest(observer); " is 180.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12) = AsyncObserver.CombineLatest(observer' selector); " is 190.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12) = AsyncObserver.CombineLatest(observer' selector); " is 190.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13) = AsyncObserver.CombineLatest(observer); " is 192.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13).ConfigureAwait(false); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13) = AsyncObserver.CombineLatest(observer' selector); " is 202.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13).ConfigureAwait(false); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13) = AsyncObserver.CombineLatest(observer' selector); " is 202.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13).ConfigureAwait(false); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14) = AsyncObserver.CombineLatest(observer); " is 204.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13' sub14).ConfigureAwait(false); " is 130.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14) = AsyncObserver.CombineLatest(observer' selector); " is 214.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13' sub14).ConfigureAwait(false); " is 130.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14) = AsyncObserver.CombineLatest(observer' selector); " is 214.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13' sub14).ConfigureAwait(false); " is 130.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14' observer15) = AsyncObserver.CombineLatest(observer); " is 216.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13' sub14' sub15).ConfigureAwait(false); " is 137.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14' observer15) = AsyncObserver.CombineLatest(observer' selector); " is 226.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13' sub14' sub15).ConfigureAwait(false); " is 137.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14' observer15) = AsyncObserver.CombineLatest(observer' selector); " is 226.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,CombineLatest,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13' sub14' sub15).ConfigureAwait(false); " is 137.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,DefaultIfEmpty,The length of the statement  "            return Create<TSource>(observer => source.SubscribeSafeAsync(AsyncObserver.DefaultIfEmpty<TSource>(observer' defaultValue))); " is 125.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,DistinctUntilChanged,The length of the statement  "            return Create<TSource>(observer => source.SubscribeSafeAsync(AsyncObserver.DistinctUntilChanged(observer' keySelector))); " is 121.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,DistinctUntilChanged,The length of the statement  "            return Create<TSource>(observer => source.SubscribeSafeAsync(AsyncObserver.DistinctUntilChanged(observer' keySelector))); " is 121.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,DistinctUntilChanged,The length of the statement  "            return Create<TSource>(observer => source.SubscribeSafeAsync(AsyncObserver.DistinctUntilChanged(observer' keySelector' comparer))); " is 131.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,DistinctUntilChanged,The length of the statement  "            return Create<TSource>(observer => source.SubscribeSafeAsync(AsyncObserver.DistinctUntilChanged(observer' keySelector' comparer))); " is 131.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromAsyncPattern,The length of the statement  "                    AsyncObserver.FromAsyncPattern(subject' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11); " is 120.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromAsyncPattern,The length of the statement  "                    AsyncObserver.FromAsyncPattern(subject' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12); " is 127.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromAsyncPattern,The length of the statement  "                    AsyncObserver.FromAsyncPattern(subject' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13); " is 134.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromAsyncPattern,The length of the statement  "                    AsyncObserver.FromAsyncPattern(subject' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14); " is 141.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromAsyncPattern,The length of the statement  "                    AsyncObserver.FromAsyncPattern(subject' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11); " is 120.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromAsyncPattern,The length of the statement  "                    AsyncObserver.FromAsyncPattern(subject' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12); " is 127.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromAsyncPattern,The length of the statement  "                    AsyncObserver.FromAsyncPattern(subject' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13); " is 134.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromAsyncPattern,The length of the statement  "                    AsyncObserver.FromAsyncPattern(subject' begin' end' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14); " is 141.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<TEventArgs>' TEventArgs>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 121.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' TEventArgs>(h => ConvertDelegate<Action<TEventArgs>' TDelegate>(h)' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 160.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' TEventArgs>(h => ConvertDelegate<Action<TEventArgs>' TDelegate>(h)' addHandler' removeHandler' scheduler); " is 138.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action' Unit>(h => () => h(Unit.Default)' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 147.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3>' T1' T2' T3>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 121.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 153.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4>' T1' T2' T3' T4>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 129.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 120.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 159.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5>' T1' T2' T3' T4' T5>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 137.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 124.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4' arg5)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 165.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6>' T1' T2' T3' T4' T5' T6>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 145.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6>' T1' T2' T3' T4' T5' T6>(h => h' addHandler' removeHandler' scheduler); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 128.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4' arg5' arg6)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 171.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7>' T1' T2' T3' T4' T5' T6' T7>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 153.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7>' T1' T2' T3' T4' T5' T6' T7>(h => h' addHandler' removeHandler' scheduler); " is 131.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 132.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4' arg5' arg6' arg7)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 177.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8>' T1' T2' T3' T4' T5' T6' T7' T8>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 161.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8>' T1' T2' T3' T4' T5' T6' T7' T8>(h => h' addHandler' removeHandler' scheduler); " is 139.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 136.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 183.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9>' T1' T2' T3' T4' T5' T6' T7' T8' T9>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 169.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9>' T1' T2' T3' T4' T5' T6' T7' T8' T9>(h => h' addHandler' removeHandler' scheduler); " is 147.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 140.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 189.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 179.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>(h => h' addHandler' removeHandler' scheduler); " is 157.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 145.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>(conversion' addHandler' removeHandler' scheduler); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                        var handler = new Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10) => " is 130.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 196.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 189.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>(h => h' addHandler' removeHandler' scheduler); " is 167.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 150.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>(conversion' addHandler' removeHandler' scheduler); " is 128.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                    Create<(T1 arg1' T2 arg2' T3 arg3' T4 arg4' T5 arg5' T6 arg6' T7 arg7' T8 arg8' T9 arg9' T10 arg10' T11 arg11)>(observer => " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                        var handler = new Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11) => " is 142.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 203.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 199.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>(h => h' addHandler' removeHandler' scheduler); " is 177.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 155.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>(conversion' addHandler' removeHandler' scheduler); " is 133.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                    Create<(T1 arg1' T2 arg2' T3 arg3' T4 arg4' T5 arg5' T6 arg6' T7 arg7' T8 arg8' T9 arg9' T10 arg10' T11 arg11' T12 arg12)>(observer => " is 134.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                        var handler = new Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12) => " is 154.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 210.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 209.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>(h => h' addHandler' removeHandler' scheduler); " is 187.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 160.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>(conversion' addHandler' removeHandler' scheduler); " is 138.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                    Create<(T1 arg1' T2 arg2' T3 arg3' T4 arg4' T5 arg5' T6 arg6' T7 arg7' T8 arg8' T9 arg9' T10 arg10' T11 arg11' T12 arg12' T13 arg13)>(observer => " is 145.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                        var handler = new Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13) => " is 166.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 217.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 219.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>(h => h' addHandler' removeHandler' scheduler); " is 197.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 165.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>(conversion' addHandler' removeHandler' scheduler); " is 143.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                    Create<(T1 arg1' T2 arg2' T3 arg3' T4 arg4' T5 arg5' T6 arg6' T7 arg7' T8 arg8' T9 arg9' T10 arg10' T11 arg11' T12 arg12' T13 arg13' T14 arg14)>(observer => " is 156.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                        var handler = new Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14) => " is 178.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 224.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 229.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>(h => h' addHandler' removeHandler' scheduler); " is 207.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 170.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>(conversion' addHandler' removeHandler' scheduler); " is 148.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                    Create<(T1 arg1' T2 arg2' T3 arg3' T4 arg4' T5 arg5' T6 arg6' T7 arg7' T8 arg8' T9 arg9' T10 arg10' T11 arg11' T12 arg12' T13 arg13' T14 arg14' T15 arg15)>(observer => " is 167.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                        var handler = new Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15) => " is 190.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 231.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>(h => h' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 239.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>(h => h' addHandler' removeHandler' scheduler); " is 217.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>(conversion' addHandler' removeHandler' GetSchedulerForCurrentContext()); " is 175.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEvent,The length of the statement  "            return FromEventCore<TDelegate' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>(conversion' addHandler' removeHandler' scheduler); " is 153.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                    Create<(T1 arg1' T2 arg2' T3 arg3' T4 arg4' T5 arg5' T6 arg6' T7 arg7' T8 arg8' T9 arg9' T10 arg10' T11 arg11' T12 arg12' T13 arg13' T14 arg14' T15 arg15' T16 arg16)>(observer => " is 178.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                        var handler = new Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16) => " is 202.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventCore,The length of the statement  "                            observer.OnNextAsync((arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 238.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPattern,The length of the statement  "            return FromEvent<EventHandler' object' EventArgs>(action => new EventHandler((o' e) => action(o' e))' addHandler' removeHandler' scheduler).Select(t => new EventPattern<object>(t.arg1' t.arg2)); " is 194.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPattern,The length of the statement  "            return FromEvent<TDelegate' object' TEventArgs>(action => ConvertDelegate<Action<object' TEventArgs>' TDelegate>(action)' addHandler' removeHandler' scheduler).Select(t => new EventPattern<TEventArgs>(t.arg1' t.arg2)); " is 218.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPattern,The length of the statement  "            return FromEvent<TDelegate' object' TEventArgs>(action => conversion(new EventHandler<TEventArgs>((o' e) => action(o' e)))' addHandler' removeHandler' scheduler).Select(t => new EventPattern<TEventArgs>(t.arg1' t.arg2)); " is 220.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPattern,The length of the statement  "            return FromEvent<TDelegate' TSender' TEventArgs>(action => ConvertDelegate<Action<TSender' TEventArgs>' TDelegate>(action)' addHandler' removeHandler' scheduler).Select(t => new EventPattern<TSender' TEventArgs>(t.arg1' t.arg2)); " is 229.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPattern,The length of the statement  "            return FromEvent<EventHandler<TEventArgs>' object' TEventArgs>(action => ConvertDelegate<Action<object' TEventArgs>' EventHandler<TEventArgs>>(action)' addHandler' removeHandler' scheduler).Select(t => new EventPattern<TEventArgs>(t.arg1' t.arg2)); " is 248.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPattern,The length of the statement  "            return FromEventPatternCore<object' object' EventPattern<object>>(target.GetType()' target' eventName' scheduler' (o' e) => new EventPattern<object>(o' e)); " is 156.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPattern,The length of the statement  "            return FromEventPatternCore<object' TEventArgs' EventPattern<TEventArgs>>(target.GetType()' target' eventName' scheduler' (o' e) => new EventPattern<TEventArgs>(o' e)); " is 168.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPattern,The length of the statement  "            return FromEventPatternCore<TSender' TEventArgs' EventPattern<TSender' TEventArgs>>(target.GetType()' target' eventName' scheduler' (o' e) => new EventPattern<TSender' TEventArgs>(o' e)); " is 187.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPattern,The length of the statement  "            return FromEventPatternCore<object' object' EventPattern<object>>(type' null' eventName' scheduler' (o' e) => new EventPattern<object>(o' e)); " is 142.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPattern,The length of the statement  "            return FromEventPatternCore<object' TEventArgs' EventPattern<TEventArgs>>(type' null' eventName' scheduler' (o' e) => new EventPattern<TEventArgs>(o' e)); " is 154.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPattern,The length of the statement  "            return FromEventPatternCore<TSender' TEventArgs' EventPattern<TSender' TEventArgs>>(type' null' eventName' scheduler' (o' e) => new EventPattern<TSender' TEventArgs>(o' e)); " is 173.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPatternCore,The length of the statement  "            var (addMethod' removeMethod' delegateType' isWinRT) = GetEventMethods<object' object>(target.GetType()' target' eventName); " is 124.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPatternCore,The length of the statement  "                        observer.OnNextAsync(resultSelector(o' e)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 155.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,FromEventPatternCore,The length of the statement  "                        observer.OnNextAsync(resultSelector(o' e)); // REVIEW: Fire-and-forget can lead to out of order processing' and observers may reject these calls as "busy". " is 155.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GetEventMethods,The length of the statement  "                    throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "Could not find static event '{0}' on type '{1}'."' eventName' targetType.FullName)); " is 163.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GetEventMethods,The length of the statement  "                    throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "Could not find instance event '{0}' on type '{1}'."' eventName' targetType.FullName)); " is 165.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GetEventMethods,The length of the statement  "                    throw new InvalidOperationException("An event should either have add and remove methods that return void or an add method that returns a type compatible with the parameter type of the remove method."); " is 201.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GetEventMethods,The length of the statement  "                throw new InvalidOperationException("The delegate type for an event conforming to the traditional event pattern should take two parameters."); " is 142.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GetEventMethods,The length of the statement  "                throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "The sender parameter of the event is not assignable to '{0}'."' typeof(TSender).FullName)); " is 170.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GetEventMethods,The length of the statement  "                throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "The event arguments parameter of the event is not assignable to '{0}'."' typeof(TEventArgs).FullName)); " is 182.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GetEventEx,The length of the statement  "            return type.GetEvent(name' isStatic ? BindingFlags.Public | BindingFlags.Static : BindingFlags.Public | BindingFlags.Instance); " is 127.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The length of the statement  "            return Create<TResult>(observer => AsyncObserver.Generate(observer' initialState' condition' iterate' resultSelector' scheduler)); " is 130.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The length of the statement  "            return Create<TResult>(observer => AsyncObserver.Generate(observer' initialState' condition' iterate' resultSelector' scheduler)); " is 130.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The length of the statement  "            return Create<TResult>(observer => AsyncObserver.Generate(observer' initialState' condition' iterate' resultSelector' timeSelector)); " is 133.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The length of the statement  "            return Create<TResult>(observer => AsyncObserver.Generate(observer' initialState' condition' iterate' resultSelector' timeSelector' scheduler)); " is 144.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The length of the statement  "            return Create<TResult>(observer => AsyncObserver.Generate(observer' initialState' condition' iterate' resultSelector' timeSelector)); " is 133.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The length of the statement  "            return Create<TResult>(observer => AsyncObserver.Generate(observer' initialState' condition' iterate' resultSelector' timeSelector' scheduler)); " is 144.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The length of the statement  "            return Create<TResult>(observer => AsyncObserver.Generate(observer' initialState' condition' iterate' resultSelector' timeSelector)); " is 133.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The length of the statement  "            return Create<TResult>(observer => AsyncObserver.Generate(observer' initialState' condition' iterate' resultSelector' timeSelector' scheduler)); " is 144.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The length of the statement  "            return Create<TResult>(observer => AsyncObserver.Generate(observer' initialState' condition' iterate' resultSelector' timeSelector)); " is 133.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Generate,The length of the statement  "            return Create<TResult>(observer => AsyncObserver.Generate(observer' initialState' condition' iterate' resultSelector' timeSelector' scheduler)); " is 144.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector))); " is 149.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' comparer))); " is 159.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' capacity))); " is 159.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' capacity' comparer))); " is 169.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' elementSelector))); " is 167.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' elementSelector' comparer))); " is 177.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' elementSelector' capacity))); " is 177.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' elementSelector' capacity' comparer))); " is 187.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector))); " is 149.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' comparer))); " is 159.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' capacity))); " is 159.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' capacity' comparer))); " is 169.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' elementSelector))); " is 167.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' elementSelector' comparer))); " is 177.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' elementSelector' capacity))); " is 177.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupBy,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByCore(source' observer' (o' d) => AsyncObserver.GroupBy(o' d' keySelector' elementSelector' capacity' comparer))); " is 187.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByUntilCore<TSource' TKey' TSource' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' durationSelector))); " is 212.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByUntilCore<TSource' TKey' TSource' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' durationSelector' comparer))); " is 222.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByUntilCore<TSource' TKey' TSource' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' durationSelector' capacity))); " is 222.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByUntilCore<TSource' TKey' TSource' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' durationSelector' capacity' comparer))); " is 232.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByUntilCore<TSource' TKey' TElement' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' elementSelector' durationSelector))); " is 231.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByUntilCore<TSource' TKey' TElement' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' elementSelector' durationSelector' comparer))); " is 241.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByUntilCore<TSource' TKey' TElement' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' elementSelector' durationSelector' capacity))); " is 241.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByUntilCore<TSource' TKey' TElement' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' elementSelector' durationSelector' capacity' comparer))); " is 251.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByUntilCore<TSource' TKey' TSource' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' durationSelector))); " is 212.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByUntilCore<TSource' TKey' TSource' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' durationSelector' comparer))); " is 222.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByUntilCore<TSource' TKey' TSource' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' durationSelector' capacity))); " is 222.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TSource>>(observer => GroupByUntilCore<TSource' TKey' TSource' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' durationSelector' capacity' comparer))); " is 232.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByUntilCore<TSource' TKey' TElement' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' elementSelector' durationSelector))); " is 231.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByUntilCore<TSource' TKey' TElement' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' elementSelector' durationSelector' comparer))); " is 241.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByUntilCore<TSource' TKey' TElement' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' elementSelector' durationSelector' capacity))); " is 241.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupByUntil,The length of the statement  "            return Create<IGroupedAsyncObservable<TKey' TElement>>(observer => GroupByUntilCore<TSource' TKey' TElement' TDuration>(source' observer' (o' d) => AsyncObserver.GroupByUntil(o' d' keySelector' elementSelector' durationSelector' capacity' comparer))); " is 251.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GroupJoin,The length of the statement  "                var (leftObserver' rightObserver' disposable) = AsyncObserver.GroupJoin(observer' subscriptions' leftDurationSelector' rightDurationSelector' resultSelector); " is 158.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Join,The length of the statement  "                var (leftObserver' rightObserver' disposable) = AsyncObserver.Join(observer' subscriptions' leftDurationSelector' rightDurationSelector' resultSelector); " is 153.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,MaxBy,The length of the statement  "            return Create<IList<TSource>>(observer => source.SubscribeSafeAsync(AsyncObserver.MaxBy(observer' keySelector' comparer))); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,MaxBy,The length of the statement  "            return Create<IList<TSource>>(observer => source.SubscribeSafeAsync(AsyncObserver.MaxBy(observer' keySelector' comparer))); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,MinBy,The length of the statement  "            return Create<IList<TSource>>(observer => source.SubscribeSafeAsync(AsyncObserver.MinBy(observer' keySelector' comparer))); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,MinBy,The length of the statement  "            return Create<IList<TSource>>(observer => source.SubscribeSafeAsync(AsyncObserver.MinBy(observer' keySelector' comparer))); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Multicast,The length of the statement  "            return Multicast(source' () => Task.FromResult<IAsyncSubject<TSource' TSource>>(subjectFactory())' x => Task.FromResult(x)); " is 124.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Multicast,The length of the statement  "            return Multicast<TSource' TSource' TSource>(source' async () => await subjectFactory().ConfigureAwait(false)' x => Task.FromResult(x)); " is 135.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Prepend,The length of the statement  "            return Create<TSource>(async observer => await source.SubscribeSafeAsync(await AsyncObserver.Prepend(observer' value).ConfigureAwait(false)).ConfigureAwait(false)); " is 164.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Prepend,The length of the statement  "            return Create<TSource>(async observer => await source.SubscribeSafeAsync(await AsyncObserver.Prepend(observer' values).ConfigureAwait(false)).ConfigureAwait(false)); " is 165.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Prepend,The length of the statement  "            return Create<TSource>(async observer => await source.SubscribeSafeAsync(await AsyncObserver.Prepend(observer' values).ConfigureAwait(false)).ConfigureAwait(false)); " is 165.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Publish,The length of the statement  "            return Multicast(source' () => Task.FromResult<IAsyncSubject<TSource' TSource>>(new SequentialSimpleAsyncSubject<TSource>())' selector); " is 136.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Publish,The length of the statement  "            return Multicast(source' () => Task.FromResult<IAsyncSubject<TSource' TSource>>(new SequentialBehaviorAsyncSubject<TSource>(value))' selector); " is 143.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,PublishLast,The length of the statement  "            return Multicast(source' () => Task.FromResult<IAsyncSubject<TSource' TSource>>(new SequentialAsyncAsyncSubject<TSource>())' selector); " is 135.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Replay,The length of the statement  "            return Multicast(source' () => Task.FromResult<IAsyncSubject<TSource' TSource>>(new SequentialReplayAsyncSubject<TSource>())' selector); " is 136.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Replay,The length of the statement  "            return Multicast(source' () => Task.FromResult<IAsyncSubject<TSource' TSource>>(new SequentialReplayAsyncSubject<TSource>(scheduler))' selector); " is 145.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Replay,The length of the statement  "            return Multicast(source' () => Task.FromResult<IAsyncSubject<TSource' TSource>>(new SequentialReplayAsyncSubject<TSource>(bufferSize))' selector); " is 146.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Replay,The length of the statement  "            return Multicast(source' () => Task.FromResult<IAsyncSubject<TSource' TSource>>(new SequentialReplayAsyncSubject<TSource>(bufferSize' scheduler))' selector); " is 157.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Replay,The length of the statement  "            return Multicast(source' () => Task.FromResult<IAsyncSubject<TSource' TSource>>(new SequentialReplayAsyncSubject<TSource>(window))' selector); " is 142.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Replay,The length of the statement  "            return Multicast(source' () => Task.FromResult<IAsyncSubject<TSource' TSource>>(new SequentialReplayAsyncSubject<TSource>(window' scheduler))' selector); " is 153.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Replay,The length of the statement  "            return Multicast(source' () => Task.FromResult<IAsyncSubject<TSource' TSource>>(new SequentialReplayAsyncSubject<TSource>(bufferSize' window))' selector); " is 154.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Replay,The length of the statement  "            return Multicast(source' () => Task.FromResult<IAsyncSubject<TSource' TSource>>(new SequentialReplayAsyncSubject<TSource>(bufferSize' window' scheduler))' selector); " is 165.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,TakeLastBuffer,The length of the statement  "            return Create<IList<TSource>>(observer => source.SubscribeSafeAsync(AsyncObserver.TakeLastBuffer(observer' duration' clock))); " is 126.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,TimeInterval,The length of the statement  "            return Create<TimeInterval<TSource>>(observer => source.SubscribeSafeAsync(AsyncObserver.TimeInterval(observer' clock))); " is 121.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Timeout,The length of the statement  "                var (sink' disposable) = await AsyncObserver.Timeout(observer' sourceSubscription' dueTime' scheduler).ConfigureAwait(false); " is 125.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Timeout,The length of the statement  "                var (sink' disposable) = await AsyncObserver.Timeout(observer' sourceSubscription' dueTime' other).ConfigureAwait(false); " is 121.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Timeout,The length of the statement  "                var (sink' disposable) = await AsyncObserver.Timeout(observer' sourceSubscription' dueTime' other' scheduler).ConfigureAwait(false); " is 132.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 134.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 140.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 146.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 152.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 158.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4' arg5); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 164.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4' arg5' arg6); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 170.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 176.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 182.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 188.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 195.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 202.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 209.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 216.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 223.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 230.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 237.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 132.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 138.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 144.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 150.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 156.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4' arg5); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 162.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4' arg5' arg6); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 168.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 174.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 180.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 186.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 193.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 200.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 207.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 214.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 221.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 228.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToAsync,The length of the statement  "                AsyncObserver.ToAsync(subject' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16); // NB: We don't do anything with the result of scheduling the action; it can't be cancelled. " is 235.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToDictionary,The length of the statement  "            return Create<IDictionary<TKey' TValue>>(observer => source.SubscribeSafeAsync(AsyncObserver.ToDictionary(observer' keySelector' valueSelector))); " is 146.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToDictionary,The length of the statement  "            return Create<IDictionary<TKey' TValue>>(observer => source.SubscribeSafeAsync(AsyncObserver.ToDictionary(observer' keySelector' valueSelector' comparer))); " is 156.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToDictionary,The length of the statement  "            return Create<IDictionary<TKey' TValue>>(observer => source.SubscribeSafeAsync(AsyncObserver.ToDictionary(observer' keySelector' valueSelector))); " is 146.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToDictionary,The length of the statement  "            return Create<IDictionary<TKey' TValue>>(observer => source.SubscribeSafeAsync(AsyncObserver.ToDictionary(observer' keySelector' valueSelector' comparer))); " is 156.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToLookup,The length of the statement  "            return Create<ILookup<TKey' TValue>>(observer => source.SubscribeSafeAsync(AsyncObserver.ToLookup(observer' keySelector' valueSelector))); " is 138.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToLookup,The length of the statement  "            return Create<ILookup<TKey' TValue>>(observer => source.SubscribeSafeAsync(AsyncObserver.ToLookup(observer' keySelector' valueSelector' comparer))); " is 148.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToLookup,The length of the statement  "            return Create<ILookup<TKey' TValue>>(observer => source.SubscribeSafeAsync(AsyncObserver.ToLookup(observer' keySelector' valueSelector))); " is 138.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,ToLookup,The length of the statement  "            return Create<ILookup<TKey' TValue>>(observer => source.SubscribeSafeAsync(AsyncObserver.ToLookup(observer' keySelector' valueSelector' comparer))); " is 148.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Window,The length of the statement  "            return Create<IAsyncObservable<TSource>>(observer => WindowCore(source' observer' (o' d) => AsyncObserver.Window(o' d' count))); " is 128.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Window,The length of the statement  "            return Create<IAsyncObservable<TSource>>(observer => WindowCore(source' observer' (o' d) => AsyncObserver.Window(o' d' count' skip))); " is 134.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Window,The length of the statement  "            return Create<IAsyncObservable<TSource>>(observer => WindowAsyncCore(source' observer' (o' d) => AsyncObserver.Window(o' d' timeSpan))); " is 136.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Window,The length of the statement  "            return Create<IAsyncObservable<TSource>>(observer => WindowAsyncCore(source' observer' (o' d) => AsyncObserver.Window(o' d' timeSpan' scheduler))); " is 147.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Window,The length of the statement  "            return Create<IAsyncObservable<TSource>>(observer => WindowAsyncCore(source' observer' (o' d) => AsyncObserver.Window(o' d' timeSpan' timeShift))); " is 147.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Window,The length of the statement  "            return Create<IAsyncObservable<TSource>>(observer => WindowAsyncCore(source' observer' (o' d) => AsyncObserver.Window(o' d' timeSpan' timeShift' scheduler))); " is 158.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Window,The length of the statement  "            return Create<IAsyncObservable<TSource>>(observer => WindowAsyncCore(source' observer' (o' d) => AsyncObserver.Window(o' d' timeSpan' count))); " is 143.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Window,The length of the statement  "            return Create<IAsyncObservable<TSource>>(observer => WindowAsyncCore(source' observer' (o' d) => AsyncObserver.Window(o' d' timeSpan' count' scheduler))); " is 154.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Window,The length of the statement  "                var (sourceObserver' boundariesObserver' subscription) = await AsyncObserver.Window<TSource' TWindowBoundary>(observer' d).ConfigureAwait(false); " is 145.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Window,The length of the statement  "                var (sourceObserver' closingSubscription' subscription) = await AsyncObserver.Window<TSource' TWindowClosing>(observer' windowClosingSelector' d).ConfigureAwait(false); " is 168.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7) = AsyncObserver.Zip(observer' selector); " is 122.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7) = AsyncObserver.Zip(observer' selector); " is 122.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8) = AsyncObserver.Zip(observer); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8) = AsyncObserver.Zip(observer' selector); " is 133.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8) = AsyncObserver.Zip(observer' selector); " is 133.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9) = AsyncObserver.Zip(observer); " is 134.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9) = AsyncObserver.Zip(observer' selector); " is 144.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9) = AsyncObserver.Zip(observer' selector); " is 144.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10) = AsyncObserver.Zip(observer); " is 146.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10) = AsyncObserver.Zip(observer' selector); " is 156.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10) = AsyncObserver.Zip(observer' selector); " is 156.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11) = AsyncObserver.Zip(observer); " is 158.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11) = AsyncObserver.Zip(observer' selector); " is 168.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11) = AsyncObserver.Zip(observer' selector); " is 168.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12) = AsyncObserver.Zip(observer); " is 170.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12) = AsyncObserver.Zip(observer' selector); " is 180.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12) = AsyncObserver.Zip(observer' selector); " is 180.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13) = AsyncObserver.Zip(observer); " is 182.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13).ConfigureAwait(false); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13) = AsyncObserver.Zip(observer' selector); " is 192.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13).ConfigureAwait(false); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13) = AsyncObserver.Zip(observer' selector); " is 192.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13).ConfigureAwait(false); " is 123.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14) = AsyncObserver.Zip(observer); " is 194.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13' sub14).ConfigureAwait(false); " is 130.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14) = AsyncObserver.Zip(observer' selector); " is 204.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13' sub14).ConfigureAwait(false); " is 130.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14) = AsyncObserver.Zip(observer' selector); " is 204.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13' sub14).ConfigureAwait(false); " is 130.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14' observer15) = AsyncObserver.Zip(observer); " is 206.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13' sub14' sub15).ConfigureAwait(false); " is 137.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14' observer15) = AsyncObserver.Zip(observer' selector); " is 216.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13' sub14' sub15).ConfigureAwait(false); " is 137.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                var (observer1' observer2' observer3' observer4' observer5' observer6' observer7' observer8' observer9' observer10' observer11' observer12' observer13' observer14' observer15) = AsyncObserver.Zip(observer' selector); " is 216.
Long Statement,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,Zip,The length of the statement  "                await Task.WhenAll(sub1' sub2' sub3' sub4' sub5' sub6' sub7' sub8' sub9' sub10' sub11' sub12' sub13' sub14' sub15).ConfigureAwait(false); " is 137.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5)).ConfigureAwait(false); " is 121.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5)).ConfigureAwait(false); " is 121.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5)).ConfigureAwait(false); " is 121.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5)).ConfigureAwait(false); " is 121.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5)).ConfigureAwait(false); " is 121.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "            return CombineLatest<T1' T2' T3' T4' T5' TResult>(observer' (x1' x2' x3' x4' x5) => Task.FromResult(selector(x1' x2' x3' x4' x5))); " is 131.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6)).ConfigureAwait(false); " is 135.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6)).ConfigureAwait(false); " is 135.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6)).ConfigureAwait(false); " is 135.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6)).ConfigureAwait(false); " is 135.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6)).ConfigureAwait(false); " is 135.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6)).ConfigureAwait(false); " is 135.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "            return CombineLatest<T1' T2' T3' T4' T5' T6' TResult>(observer' (x1' x2' x3' x4' x5' x6) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6))); " is 143.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6).ConfigureAwait(false); " is 127.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6).ConfigureAwait(false); " is 127.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6).ConfigureAwait(false); " is 127.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6).ConfigureAwait(false); " is 127.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6).ConfigureAwait(false); " is 127.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6).ConfigureAwait(false); " is 127.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7)).ConfigureAwait(false); " is 149.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7)).ConfigureAwait(false); " is 149.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7)).ConfigureAwait(false); " is 149.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7)).ConfigureAwait(false); " is 149.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7)).ConfigureAwait(false); " is 149.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7)).ConfigureAwait(false); " is 149.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7)).ConfigureAwait(false); " is 149.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "            return CombineLatest<T1' T2' T3' T4' T5' T6' T7' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7))); " is 155.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7).ConfigureAwait(false); " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7).ConfigureAwait(false); " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7).ConfigureAwait(false); " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7).ConfigureAwait(false); " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7).ConfigureAwait(false); " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7).ConfigureAwait(false); " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7).ConfigureAwait(false); " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8)).ConfigureAwait(false); " is 163.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8)).ConfigureAwait(false); " is 163.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8)).ConfigureAwait(false); " is 163.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8)).ConfigureAwait(false); " is 163.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8)).ConfigureAwait(false); " is 163.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8)).ConfigureAwait(false); " is 163.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8)).ConfigureAwait(false); " is 163.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8)).ConfigureAwait(false); " is 163.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "            return CombineLatest<T1' T2' T3' T4' T5' T6' T7' T8' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8))); " is 167.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8).ConfigureAwait(false); " is 155.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8).ConfigureAwait(false); " is 155.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8).ConfigureAwait(false); " is 155.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8).ConfigureAwait(false); " is 155.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8).ConfigureAwait(false); " is 155.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8).ConfigureAwait(false); " is 155.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8).ConfigureAwait(false); " is 155.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8).ConfigureAwait(false); " is 155.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9)).ConfigureAwait(false); " is 177.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9)).ConfigureAwait(false); " is 177.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9)).ConfigureAwait(false); " is 177.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9)).ConfigureAwait(false); " is 177.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9)).ConfigureAwait(false); " is 177.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9)).ConfigureAwait(false); " is 177.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9)).ConfigureAwait(false); " is 177.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9)).ConfigureAwait(false); " is 177.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9)).ConfigureAwait(false); " is 177.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "            return CombineLatest<T1' T2' T3' T4' T5' T6' T7' T8' T9' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9))); " is 179.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9).ConfigureAwait(false); " is 169.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9).ConfigureAwait(false); " is 169.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9).ConfigureAwait(false); " is 169.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9).ConfigureAwait(false); " is 169.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9).ConfigureAwait(false); " is 169.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9).ConfigureAwait(false); " is 169.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9).ConfigureAwait(false); " is 169.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9).ConfigureAwait(false); " is 169.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9; " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9).ConfigureAwait(false); " is 169.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10)).ConfigureAwait(false); " is 192.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10)).ConfigureAwait(false); " is 192.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10)).ConfigureAwait(false); " is 192.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10)).ConfigureAwait(false); " is 192.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10)).ConfigureAwait(false); " is 192.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10)).ConfigureAwait(false); " is 192.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10)).ConfigureAwait(false); " is 192.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10)).ConfigureAwait(false); " is 192.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10)).ConfigureAwait(false); " is 192.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10)).ConfigureAwait(false); " is 192.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "            return CombineLatest<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9' x10) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9' x10))); " is 194.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10).ConfigureAwait(false); " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10).ConfigureAwait(false); " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10).ConfigureAwait(false); " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10).ConfigureAwait(false); " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10).ConfigureAwait(false); " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10).ConfigureAwait(false); " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10).ConfigureAwait(false); " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10).ConfigureAwait(false); " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10).ConfigureAwait(false); " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10; " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10).ConfigureAwait(false); " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11)).ConfigureAwait(false); " is 207.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11)).ConfigureAwait(false); " is 207.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11)).ConfigureAwait(false); " is 207.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11)).ConfigureAwait(false); " is 207.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11)).ConfigureAwait(false); " is 207.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11)).ConfigureAwait(false); " is 207.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11)).ConfigureAwait(false); " is 207.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11)).ConfigureAwait(false); " is 207.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11)).ConfigureAwait(false); " is 207.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11)).ConfigureAwait(false); " is 207.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11)).ConfigureAwait(false); " is 207.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "            return CombineLatest<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11))); " is 209.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11).ConfigureAwait(false); " is 199.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11).ConfigureAwait(false); " is 199.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11).ConfigureAwait(false); " is 199.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11).ConfigureAwait(false); " is 199.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11).ConfigureAwait(false); " is 199.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11).ConfigureAwait(false); " is 199.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11).ConfigureAwait(false); " is 199.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11).ConfigureAwait(false); " is 199.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11).ConfigureAwait(false); " is 199.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11).ConfigureAwait(false); " is 199.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11; " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11).ConfigureAwait(false); " is 199.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 124.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12)).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12)).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12)).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12)).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12)).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12)).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12)).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12)).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12)).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12)).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12) " is 129.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12)).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12) " is 129.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12)).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 129.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "            return CombineLatest<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12))); " is 224.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12) " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12) " is 129.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12) " is 129.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12; " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11) " is 129.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12 && isDone13) " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12 && isDone13) " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone13) " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13)).ConfigureAwait(false); " is 237.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "            return CombineLatest<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12' x13) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12' x13))); " is 239.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12 && isDone13) " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12 && isDone13) " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12 && isDone13) " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone13) " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13; " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13).ConfigureAwait(false); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12) " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12 && isDone13 && isDone14) " is 153.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12 && isDone13 && isDone14) " is 153.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone13 && isDone14) " is 153.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone14) " is 153.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14)).ConfigureAwait(false); " is 252.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 153.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "            return CombineLatest<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12' x13' x14) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12' x13' x14))); " is 254.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12 && isDone13 && isDone14) " is 153.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12 && isDone13 && isDone14) " is 153.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone13 && isDone14) " is 153.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone14) " is 153.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14; " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14).ConfigureAwait(false); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13) " is 153.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 160.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12 && isDone13 && isDone14 && isDone15) " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone13 && isDone14 && isDone15) " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone14 && isDone15) " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone15) " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                await observer.OnNextAsync((latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15)).ConfigureAwait(false); " is 267.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "            return CombineLatest<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12' x13' x14' x15) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12' x13' x14' x15))); " is 269.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 166.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12 && isDone13 && isDone14 && isDone15) " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone13 && isDone14 && isDone15) " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone14 && isDone15) " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone15) " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                allHasValue = hasValue1 && hasValue2 && hasValue3 && hasValue4 && hasValue5 && hasValue6 && hasValue7 && hasValue8 && hasValue9 && hasValue10 && hasValue11 && hasValue12 && hasValue13 && hasValue14 && hasValue15; " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                                    res = await selector(latestValue1' latestValue2' latestValue3' latestValue4' latestValue5' latestValue6' latestValue7' latestValue8' latestValue9' latestValue10' latestValue11' latestValue12' latestValue13' latestValue14' latestValue15).ConfigureAwait(false); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            else if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14) " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The length of the statement  "                            if (isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15) " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Do,The length of the statement  "            return Do(observer' Create<TSource>(_ => Task.CompletedTask' ex => { onError(ex); return Task.CompletedTask; }' () => Task.CompletedTask)); " is 139.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Do,The length of the statement  "            return Do(observer' Create<TSource>(_ => Task.CompletedTask' _ => Task.CompletedTask' () => { onCompleted(); return Task.CompletedTask; })); " is 140.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Do,The length of the statement  "            return Do(observer' x => { onNext(x); return Task.CompletedTask; }' ex => { onError(ex); return Task.CompletedTask; }' () => { onCompleted(); return Task.CompletedTask; }); " is 172.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ElementAt,The length of the statement  "                    await observer.OnErrorAsync(new ArgumentOutOfRangeException("The element at the specified index was not found.")).ConfigureAwait(false); " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The length of the statement  "            return Generate(observer' initialState' s => Task.FromResult(condition(s))' s => Task.FromResult(iterate(s))' s => Task.FromResult(resultSelector(s))' TaskPoolAsyncScheduler.Default); " is 183.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The length of the statement  "            return Generate(observer' initialState' s => Task.FromResult(condition(s))' s => Task.FromResult(iterate(s))' s => Task.FromResult(resultSelector(s))' scheduler); " is 162.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The length of the statement  "            return Generate(observer' initialState' s => Task.FromResult(condition(s))' s => Task.FromResult(iterate(s))' s => Task.FromResult(resultSelector(s))' s => Task.FromResult(timeSelector(s))' TaskPoolAsyncScheduler.Default); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The length of the statement  "            return Generate(observer' initialState' s => Task.FromResult(condition(s))' s => Task.FromResult(iterate(s))' s => Task.FromResult(resultSelector(s))' s => Task.FromResult(timeSelector(s))' scheduler); " is 201.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The length of the statement  "            return Generate(observer' initialState' condition' iterate' resultSelector' timeSelector' TaskPoolAsyncScheduler.Default); " is 122.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The length of the statement  "            return Generate(observer' initialState' s => Task.FromResult(condition(s))' s => Task.FromResult(iterate(s))' s => Task.FromResult(resultSelector(s))' s => Task.FromResult(timeSelector(s))' TaskPoolAsyncScheduler.Default); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The length of the statement  "            return Generate(observer' initialState' s => Task.FromResult(condition(s))' s => Task.FromResult(iterate(s))' s => Task.FromResult(resultSelector(s))' s => Task.FromResult(timeSelector(s))' scheduler); " is 201.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Generate,The length of the statement  "            return Generate(observer' initialState' condition' iterate' resultSelector' timeSelector' TaskPoolAsyncScheduler.Default); " is 122.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupBy,The length of the statement  "            return GroupBy<TSource' TKey' TElement>(observer' subscription' x => Task.FromResult(keySelector(x))' x => Task.FromResult(elementSelector(x))' capacity' comparer); " is 164.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The length of the statement  "            return GroupByUntil(observer' subscription' keySelector' durationSelector' int.MaxValue' EqualityComparer<TKey>.Default); " is 121.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The length of the statement  "            return GroupByUntil(observer' subscription' x => Task.FromResult(keySelector(x))' durationSelector' capacity' comparer); " is 120.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The length of the statement  "            return GroupByUntil(observer' subscription' keySelector' elementSelector' durationSelector' int.MaxValue' EqualityComparer<TKey>.Default); " is 138.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The length of the statement  "            return GroupByUntil(observer' subscription' keySelector' elementSelector' durationSelector' capacity' EqualityComparer<TKey>.Default); " is 134.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The length of the statement  "            return GroupByUntil<TSource' TKey' TElement' TDuration>(observer' subscription' x => Task.FromResult(keySelector(x))' x => Task.FromResult(elementSelector(x))' durationSelector' capacity' comparer); " is 198.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The length of the statement  "            return GroupByUntil(observer' subscription' keySelector' durationSelector' int.MaxValue' EqualityComparer<TKey>.Default); " is 121.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The length of the statement  "            return GroupByUntil(observer' subscription' keySelector' x => Task.FromResult(x)' durationSelector' capacity' comparer); " is 120.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The length of the statement  "            return GroupByUntil(observer' subscription' keySelector' elementSelector' durationSelector' int.MaxValue' EqualityComparer<TKey>.Default); " is 138.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The length of the statement  "            return GroupByUntil(observer' subscription' keySelector' elementSelector' durationSelector' capacity' EqualityComparer<TKey>.Default); " is 134.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,GroupByUntil,The length of the statement  "            // REVIEW: Concurrent execution of a duration callback and an event could lead to an OnNext call being queued in an AsyncLockObserver " is 133.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,SelectMany,The length of the statement  "            return SelectMany<TSource' TResult' TResult>(observer' x => Task.FromResult(selector(x))' (x' y) => Task.FromResult(y)); " is 120.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,SelectMany,The length of the statement  "            return SelectMany<TSource' TCollection' TResult>(observer' x => Task.FromResult(collectionSelector(x))' (x' y) => Task.FromResult(resultSelector(x' y))); " is 153.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,SelectMany,The length of the statement  "            return SelectMany<TSource' TResult' TResult>(observer' (x' i) => Task.FromResult(selector(x' i))' (x' i' y' j) => Task.FromResult(y)); " is 134.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,SelectMany,The length of the statement  "            return SelectMany<TSource' TCollection' TResult>(observer' (x' i) => Task.FromResult(collectionSelector(x' i))' (x' i' y' j) => Task.FromResult(resultSelector(x' i' y' j))); " is 173.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,SelectMany,The length of the statement  "            Func<(TSource item' int i)' Task<IAsyncObservable<(TCollection item' int i)>>> collectionSelectorWithIndex = async t => (await collectionSelector(t.item' t.i).ConfigureAwait(false)).Select((item' i) => (item' i)); " is 213.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,SelectMany,The length of the statement  "            Func<(TSource item' int i)' (TCollection item' int i)' Task<TResult>> resultSelectorWithIndex = (outer' inner) => resultSelector(outer.item' outer.i' inner.item' inner.i); " is 171.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Single,The length of the statement  "                        await observer.OnErrorAsync(new InvalidOperationException("The sequence contains more than one element.")).ConfigureAwait(false); " is 129.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,SingleOrDefault,The length of the statement  "                        await observer.OnErrorAsync(new InvalidOperationException("The sequence contains more than one element.")).ConfigureAwait(false); " is 129.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Skip,The length of the statement  "                // DESIGN: It seems that if an observer would be an IAsyncDisposable' this could get a bit easier ("inject" the inner disposable). " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,SkipUntil,The length of the statement  "                // DESIGN: It seems that if an observer would be an IAsyncDisposable' this could get a bit easier ("inject" the inner disposable). " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Take,The length of the statement  "                // DESIGN: It seems that if an observer would be an IAsyncDisposable' this could get a bit easier ("inject" the inner disposable). " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,TakeUntil,The length of the statement  "                // DESIGN: It seems that if an observer would be an IAsyncDisposable' this could get a bit easier ("inject" the inner disposable). " is 130.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Timeout,The length of the statement  "            return Timeout(observer' sourceSubscription' dueTime' AsyncObservable.Throw<TSource>(new TimeoutException())' TaskPoolAsyncScheduler.Default); " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Timeout,The length of the statement  "            return Timeout(observer' sourceSubscription' dueTime' AsyncObservable.Throw<TSource>(new TimeoutException())' scheduler); " is 121.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToArray,The length of the statement  "            return Aggregate<TSource' List<TSource>' TSource[]>(observer' new List<TSource>()' (xs' x) => { xs.Add(x); return xs; }' xs => xs.ToArray()); " is 141.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' TaskPoolAsyncScheduler.Default); " is 121.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' TaskPoolAsyncScheduler.Default); " is 128.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' TaskPoolAsyncScheduler.Default); " is 135.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' TaskPoolAsyncScheduler.Default); " is 142.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' TaskPoolAsyncScheduler.Default); " is 149.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' TaskPoolAsyncScheduler.Default); " is 156.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' TaskPoolAsyncScheduler.Default); " is 163.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' function' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16' TaskPoolAsyncScheduler.Default); " is 170.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' TaskPoolAsyncScheduler.Default); " is 126.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' TaskPoolAsyncScheduler.Default); " is 133.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' TaskPoolAsyncScheduler.Default); " is 140.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' TaskPoolAsyncScheduler.Default); " is 147.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' TaskPoolAsyncScheduler.Default); " is 154.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' TaskPoolAsyncScheduler.Default); " is 161.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToAsync,The length of the statement  "            return ToAsync(observer' action' arg1' arg2' arg3' arg4' arg5' arg6' arg7' arg8' arg9' arg10' arg11' arg12' arg13' arg14' arg15' arg16' TaskPoolAsyncScheduler.Default); " is 168.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToHashSet,The length of the statement  "            return Aggregate<TSource' HashSet<TSource>>(observer' new HashSet<TSource>(comparer)' (set' x) => { set.Add(x); return set; }); " is 127.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,ToList,The length of the statement  "            return Aggregate<TSource' List<TSource>' IList<TSource>>(observer' new List<TSource>()' (xs' x) => { xs.Add(x); return xs; }' xs => xs); " is 136.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue())).ConfigureAwait(false); " is 127.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue())).ConfigureAwait(false); " is 146.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "            return Zip<T1' T2' T3' T4' T5' TResult>(observer' (x1' x2' x3' x4' x5) => Task.FromResult(selector(x1' x2' x3' x4' x5))); " is 121.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                    res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()).ConfigureAwait(false); " is 138.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0) " is 127.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue())).ConfigureAwait(false); " is 165.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "            return Zip<T1' T2' T3' T4' T5' T6' TResult>(observer' (x1' x2' x3' x4' x5' x6) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6))); " is 133.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0) " is 127.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                    res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()).ConfigureAwait(false); " is 157.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue())).ConfigureAwait(false); " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "            return Zip<T1' T2' T3' T4' T5' T6' T7' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7))); " is 145.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0) " is 148.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                    res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()).ConfigureAwait(false); " is 176.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0) " is 169.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue())).ConfigureAwait(false); " is 203.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "            return Zip<T1' T2' T3' T4' T5' T6' T7' T8' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8))); " is 157.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0) " is 169.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                    res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()).ConfigureAwait(false); " is 195.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0) " is 190.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue())).ConfigureAwait(false); " is 222.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "            return Zip<T1' T2' T3' T4' T5' T6' T7' T8' T9' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9))); " is 169.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0) " is 190.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                    res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()).ConfigureAwait(false); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0) " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue())).ConfigureAwait(false); " is 242.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "            return Zip<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9' x10) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9' x10))); " is 184.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0) " is 212.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                    res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()).ConfigureAwait(false); " is 234.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0) " is 234.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue())).ConfigureAwait(false); " is 262.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "            return Zip<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11))); " is 199.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0) " is 234.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                    res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()).ConfigureAwait(false); " is 254.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0) " is 256.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue())).ConfigureAwait(false); " is 282.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "            return Zip<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12))); " is 214.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0) " is 256.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                    res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()).ConfigureAwait(false); " is 274.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0) " is 278.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue())).ConfigureAwait(false); " is 302.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "            return Zip<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12' x13) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12' x13))); " is 229.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0) " is 278.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                    res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()).ConfigureAwait(false); " is 294.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0) " is 300.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()' values14.Dequeue())).ConfigureAwait(false); " is 322.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "            return Zip<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12' x13' x14) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12' x13' x14))); " is 244.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0) " is 300.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                    res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()' values14.Dequeue()).ConfigureAwait(false); " is 314.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0 && values15.Count > 0) " is 322.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()' values14.Dequeue()' values15.Dequeue())).ConfigureAwait(false); " is 342.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "            return Zip<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' TResult>(observer' (x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12' x13' x14' x15) => Task.FromResult(selector(x1' x2' x3' x4' x5' x6' x7' x8' x9' x10' x11' x12' x13' x14' x15))); " is 259.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                            if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0 && values15.Count > 0) " is 322.
Long Statement,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The length of the statement  "                                    res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()' values14.Dequeue()' values15.Dequeue()).ConfigureAwait(false); " is 334.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0 && _observer11.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted || notification11.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0 && _observer11.Queue.Count > 0 && _observer12.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted || notification11.Kind == NotificationKind.OnCompleted || notification12.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0 && _observer11.Queue.Count > 0 && _observer12.Queue.Count > 0 && _observer13.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted || notification11.Kind == NotificationKind.OnCompleted || notification12.Kind == NotificationKind.OnCompleted || notification13.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0 && _observer11.Queue.Count > 0 && _observer12.Queue.Count > 0 && _observer13.Queue.Count > 0 && _observer14.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted || notification11.Kind == NotificationKind.OnCompleted || notification12.Kind == NotificationKind.OnCompleted || notification13.Kind == NotificationKind.OnCompleted || notification14.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0 && _observer11.Queue.Count > 0 && _observer12.Queue.Count > 0 && _observer13.Queue.Count > 0 && _observer14.Queue.Count > 0 && _observer15.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted || notification11.Kind == NotificationKind.OnCompleted || notification12.Kind == NotificationKind.OnCompleted || notification13.Kind == NotificationKind.OnCompleted || notification14.Kind == NotificationKind.OnCompleted || notification15.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "_observer1.Queue.Count > 0 && _observer2.Queue.Count > 0 && _observer3.Queue.Count > 0 && _observer4.Queue.Count > 0 && _observer5.Queue.Count > 0 && _observer6.Queue.Count > 0 && _observer7.Queue.Count > 0 && _observer8.Queue.Count > 0 && _observer9.Queue.Count > 0 && _observer10.Queue.Count > 0 && _observer11.Queue.Count > 0 && _observer12.Queue.Count > 0 && _observer13.Queue.Count > 0 && _observer14.Queue.Count > 0 && _observer15.Queue.Count > 0 && _observer16.Queue.Count > 0"  is complex.
Complex Conditional,System.Reactive.Joins,ActiveAsyncPlan<TSource1;TSource2;TSource3;TSource4;TSource5;TSource6;TSource7;TSource8;TSource9;TSource10;TSource11;TSource12;TSource13;TSource14;TSource15;TSource16>,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Joins\ActiveAsyncPlan.Generated.cs,Match,The conditional expression  "notification1.Kind == NotificationKind.OnCompleted || notification2.Kind == NotificationKind.OnCompleted || notification3.Kind == NotificationKind.OnCompleted || notification4.Kind == NotificationKind.OnCompleted || notification5.Kind == NotificationKind.OnCompleted || notification6.Kind == NotificationKind.OnCompleted || notification7.Kind == NotificationKind.OnCompleted || notification8.Kind == NotificationKind.OnCompleted || notification9.Kind == NotificationKind.OnCompleted || notification10.Kind == NotificationKind.OnCompleted || notification11.Kind == NotificationKind.OnCompleted || notification12.Kind == NotificationKind.OnCompleted || notification13.Kind == NotificationKind.OnCompleted || notification14.Kind == NotificationKind.OnCompleted || notification15.Kind == NotificationKind.OnCompleted || notification16.Kind == NotificationKind.OnCompleted"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,CombineLatest,The conditional expression  "isDone1 && isDone2 && isDone3 && isDone4 && isDone5 && isDone6 && isDone7 && isDone8 && isDone9 && isDone10 && isDone11 && isDone12 && isDone13 && isDone14 && isDone15"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,MaxNullableSingle,The conditional expression  "x != null && (max == null || x > max || double.IsNaN(x.Value))"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,MaxNullableDouble,The conditional expression  "x != null && (max == null || x > max || double.IsNaN(x.Value))"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,MinNullableSingle,The conditional expression  "x != null && (min == null || x < min || double.IsNaN(x.Value))"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,MinNullableDouble,The conditional expression  "x != null && (min == null || x < min || double.IsNaN(x.Value))"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0 && values15.Count > 0"  is complex.
Complex Conditional,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The conditional expression  "values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0 && values15.Count > 0"  is complex.
Magic Number,System.Reactive.Linq,AsyncObservable,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObservable.cs,GetEventMethods,The following statement contains a magic number: parameters.Length != 2
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[2];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 2; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 2; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 2; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 2; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[2];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 2; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 2; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 2; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 2; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[3];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 3; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 3; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 3; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 3; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[3];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 3; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 3; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 3; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 3; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[4];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 4; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 4; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 4; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 4; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[4];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 4; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 4; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 4; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 4; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[5];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 5; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 5; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 5; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 5; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[5];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 5; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 5; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 5; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 5; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[6];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 6; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 6; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 6; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 6; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[6];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 6; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 6; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 6; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 6; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[7];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 7; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 7; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 7; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 7; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[7];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 7; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 7; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 7; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 7; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[8];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 8; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 8; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 8; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 8; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[8];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 8; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 8; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 8; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 8; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[9];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 9; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 9; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 9; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 9; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[9];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 9; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 9; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 9; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 9; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[10];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 10; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 10; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 10; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 10; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[10];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 10; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 10; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 10; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 10; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[11];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 11; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 11; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 11; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 11; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[11];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 11; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 11; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 11; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 11; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[12];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 12; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 12; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 12; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 12; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[12];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 12; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 12; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 12; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 12; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[13];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 13; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 13; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 13; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 13; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[13];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 13; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 13; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 13; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 13; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[14];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()' values14.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 14; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 14; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()' values14.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 14; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 14; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[14];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()' values14.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 14; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 14; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()' values14.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 14; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 14; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[15];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0 && values15.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()' values14.Dequeue()' values15.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 15; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 15; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0 && values15.Count > 0)                              {                                  await observer.OnNextAsync((values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()' values14.Dequeue()' values15.Dequeue())).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 15; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 15; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: var isDone = new bool[15];
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0 && values15.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()' values14.Dequeue()' values15.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 15; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 15; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: IAsyncObserver<T> CreateObserver<T>(int index' Queue<T> queue) =>                  Create<T>(                      async x =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              queue.Enqueue(x);                                if (values1.Count > 0 && values2.Count > 0 && values3.Count > 0 && values4.Count > 0 && values5.Count > 0 && values6.Count > 0 && values7.Count > 0 && values8.Count > 0 && values9.Count > 0 && values10.Count > 0 && values11.Count > 0 && values12.Count > 0 && values13.Count > 0 && values14.Count > 0 && values15.Count > 0)                              {                                  TResult res;                                    try                                  {                                      res = await selector(values1.Dequeue()' values2.Dequeue()' values3.Dequeue()' values4.Dequeue()' values5.Dequeue()' values6.Dequeue()' values7.Dequeue()' values8.Dequeue()' values9.Dequeue()' values10.Dequeue()' values11.Dequeue()' values12.Dequeue()' values13.Dequeue()' values14.Dequeue()' values15.Dequeue()).ConfigureAwait(false);                                  }                                  catch (Exception ex)                                  {                                      await observer.OnErrorAsync(ex).ConfigureAwait(false);                                      return;                                  }                                    await observer.OnNextAsync(res).ConfigureAwait(false);                              }                              else                              {                                  var allDone = true;                                    for (var i = 0; i < 15; i++)                                  {                                      if (i != index && !isDone[i])                                      {                                          allDone = false;                                          break;                                      }                                  }                                    if (allDone)                                  {                                      await observer.OnCompletedAsync().ConfigureAwait(false);                                  }                              }                          }                      }'                      async ex =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              await observer.OnErrorAsync(ex).ConfigureAwait(false);                          }                      }'                      async () =>                      {                          using (await gate.LockAsync().ConfigureAwait(false))                          {                              isDone[index] = true;                                var allDone = true;                                for (var i = 0; i < 15; i++)                              {                                  if (!isDone[i])                                  {                                      allDone = false;                                      break;                                  }                              }                                if (allDone)                              {                                  await observer.OnCompletedAsync().ConfigureAwait(false);                              }                          }                      }                  );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Magic Number,System.Reactive.Linq,AsyncObserver,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Reactive\Linq\AsyncObserver.cs,Zip,The following statement contains a magic number: return              (                  CreateObserver<T1>(1' values1)'                  CreateObserver<T2>(2' values2)'                  CreateObserver<T3>(3' values3)'                  CreateObserver<T4>(4' values4)'                  CreateObserver<T5>(5' values5)'                  CreateObserver<T6>(6' values6)'                  CreateObserver<T7>(7' values7)'                  CreateObserver<T8>(8' values8)'                  CreateObserver<T9>(9' values9)'                  CreateObserver<T10>(10' values10)'                  CreateObserver<T11>(11' values11)'                  CreateObserver<T12>(12' values12)'                  CreateObserver<T13>(13' values13)'                  CreateObserver<T14>(14' values14)'                  CreateObserver<T15>(15' values15)              );
Missing Default,System.Threading.Tasks,TaskAsyncObservableExtensions,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Threading\Tasks\TaskAsyncObservableExtensions.cs,AcceptAsync,The following switch statement is missing a default case: switch (task.Status)                      {                          case TaskStatus.RanToCompletion:                              await observer.OnNextAsync(Unit.Default).RendezVous(scheduler' ct);                              await observer.OnCompletedAsync().RendezVous(scheduler' ct);                              break;                          case TaskStatus.Faulted:                              await observer.OnErrorAsync(task.Exception.InnerException).RendezVous(scheduler' ct);                              break;                          case TaskStatus.Canceled:                              await observer.OnErrorAsync(new TaskCanceledException(task)).RendezVous(scheduler' ct);                              break;                      }
Missing Default,System.Threading.Tasks,TaskAsyncObservableExtensions,C:\research\architectureSmells\repos\Reactive-Extensions_Rx.NET\AsyncRx.NET\System.Reactive.Async.Linq\System\Threading\Tasks\TaskAsyncObservableExtensions.cs,AcceptAsync,The following switch statement is missing a default case: switch (task.Status)                      {                          case TaskStatus.RanToCompletion:                              await observer.OnNextAsync(task.Result).RendezVous(scheduler' ct);                              await observer.OnCompletedAsync().RendezVous(scheduler' ct);                              break;                          case TaskStatus.Faulted:                              await observer.OnErrorAsync(task.Exception.InnerException).RendezVous(scheduler' ct);                              break;                          case TaskStatus.Canceled:                              await observer.OnErrorAsync(new TaskCanceledException(task)).RendezVous(scheduler' ct);                              break;                      }
