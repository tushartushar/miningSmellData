Implementation smell,Namespace,Class,File,Method,Description
Long Method,ChromeLauncher.CommandLineApplication,ChromeLauncher_HelpGenerator,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_HelpGenerator.cs,GetHelpString,The method has 105 lines of code.
Complex Method,ChromeLauncher.CommandLineApplication,ChromeLauncher_Commands,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_Commands.cs,Load,Cyclomatic complexity of the method is 12
Complex Method,ChromeLauncher.CommandLineApplication,ChromeLauncher_Commands,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_Commands.cs,HandleError,Cyclomatic complexity of the method is 12
Complex Method,ChromeLauncher.CommandLineApplication,ChromeLauncher_HelpGenerator,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_HelpGenerator.cs,GetHelpString,Cyclomatic complexity of the method is 23
Complex Method,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,launch_test,Cyclomatic complexity of the method is 10
Long Parameter List,ChromeLauncher.CommandLineApplication,ChromeLauncher_HelpGenerator,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_HelpGenerator.cs,GetHelpString,The method has 7 parameters.
Long Parameter List,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,Engine,The method has 5 parameters.
Long Parameter List,ChromeLauncher.Model,ScreensHandler,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\ScreensHandler.cs,SetWindowPos,The method has 7 parameters.
Long Identifier,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,set_window_placement_in_Preferences_Chrome_File,The length of the parameter data_pathfile_Chrome_Preferences is 32.
Long Identifier,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,get_chrome_preferences_file,The length of the parameter temp_pathfile_Chrome_Preferences is 32.
Long Statement,ChromeLauncher.CommandLineApplication,ChromeLauncher_Commands,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_Commands.cs,Load,The length of the statement  "			Engine chrome_engine = new Engine (action.Url' action.Arguments' action.Fullscreen' action.Indexscreen' this._debug_mode); " is 122.
Long Statement,ChromeLauncher.CommandLineApplication,ChromeLauncher_Commands,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_Commands.cs,HandleError,The length of the statement  "		Console.WriteLine ("[ERREUR] " + begin + " La commande '" + ((VerbNotFoundException)context.Exception).Verb + "' n'existe pas"); " is 128.
Long Statement,ChromeLauncher.CommandLineApplication,ChromeLauncher_Commands,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_Commands.cs,HandleError,The length of the statement  "		Console.WriteLine ("[ERREUR] " + begin + " La \n" + "commande précedente requiert obligatoirement que le paramètre " + "'-" + ((MissingRequiredArgumentException)context.Exception).ParameterName + "'" + " soit \nrenseigné."); " is 224.
Long Statement,ChromeLauncher.CommandLineApplication,ChromeLauncher_Commands,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_Commands.cs,GetVersionAndCopyright,The length of the statement  "	return @"_______________________________________________________________________________" + Environment.NewLine + @"                                                                               " + Environment.NewLine + @"    ___  _                            _                        _               " + Environment.NewLine + @"   |  _>| |_  _ _  ___ ._ _ _  ___   | |   ___  _ _ ._ _  ___ | |_  ___  _ _   " + Environment.NewLine + @"   | <__| . || '_|/ . \| ' ' |/ ._>  | |_ <_> || | || ' |/ | '| . |/ ._>| '_|  " + Environment.NewLine + @"   `___/|_|_||_|  \___/|_|_|_|\___.  |___|<___|`___||_|_|\_|_.|_|_|\___.|_|    " + Environment.NewLine + @"                                                                               " + Environment.NewLine + @"  Version : " + Program.Version + Environment.NewLine + @"  Contact : " + Program.Contact + Environment.NewLine + @"     Date : " + Program.Date + Environment.NewLine + @"                                                                               " + Environment.NewLine + @"  Copyright © 2014' Académie d'Orléans-Tours / Division de l'évaluation et de " + Environment.NewLine + @"  la prospective / Pôle analyse et développement informatique. " + Environment.NewLine + @"_______________________________________________________________________________" + Environment.NewLine; " is 1336.
Long Statement,ChromeLauncher.CommandLineApplication,ChromeLauncher_Commands,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_Commands.cs,console_write_title_application_color,The length of the statement  "	Console.Write (@"_______________________________________________________________________________" + Environment.NewLine); " is 121.
Long Statement,ChromeLauncher.CommandLineApplication,ChromeLauncher_Commands,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_Commands.cs,console_write_title_application_color,The length of the statement  "	Console.Write (@"                                                                               " + Environment.NewLine); " is 121.
Long Statement,ChromeLauncher.CommandLineApplication,ChromeLauncher_Commands,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_Commands.cs,console_write_title_application_color,The length of the statement  "	Console.Write (@"                                                                               " + Environment.NewLine); " is 121.
Long Statement,ChromeLauncher.CommandLineApplication,ChromeLauncher_Commands,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_Commands.cs,console_write_title_application_color,The length of the statement  "	Console.Write (@"  Version : " + Program.Version + Environment.NewLine + @"  Contact : " + Program.Contact + Environment.NewLine + @"     Date : " + Program.Date + Environment.NewLine + @"                                                                               " + Environment.NewLine + @"  Copyright © 2014' Académie d'Orléans-Tours / Division de l'évaluation et de " + Environment.NewLine + @"  la prospective / Pôle analyse et développement informatique. " + Environment.NewLine + @"_______________________________________________________________________________" + Environment.NewLine); " is 596.
Long Statement,ChromeLauncher.CommandLineApplication,ChromeLauncher_HelpGenerator,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_HelpGenerator.cs,GetHelpString,The length of the statement  "					sb_temp_parameter.AppendFormat ("-{0} : "' p.Names.StringJoin (" -").ToLowerInvariant ().PadRight (longestParameter' ' ')); " is 123.
Long Statement,ChromeLauncher.CommandLineApplication,UtilsServices,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_Services.cs,GetAllMethods,The length of the statement  "	var methods = type.GetMethods (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.FlattenHierarchy); " is 155.
Long Statement,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,launch_Process_chrome,The length of the statement  "				Console.WriteLine ("[ERREUR] Impossible de lancer chrome sur l'écran " + (this.Index_screen + 1) + " car il n'existe pas. Ainsi"); " is 130.
Long Statement,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,launch_Process_chrome,The length of the statement  "				Console.WriteLine ("ce dernier est lancé sur le dernier écran disponible' à savoir l'écran " + this.ScreensHandler.ScreensInformation.NumberScreen); " is 148.
Long Statement,ChromeLauncher.Model,ScreensHandler,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\ScreensHandler.cs,place_onscreen,The length of the statement  "			current_screen_WorkingArea.Left' current_screen_WorkingArea.Top' current_screen_WorkingArea.Width' current_screen_WorkingArea.Height' 0); " is 137.
Long Statement,ChromeLauncher.Model,ScreensHandler,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\ScreensHandler.cs,place_onscreen,The length of the statement  "			this.Log_place_onscreen = "   ---{SUCESS}-----------------------------------------\n" + "   | Place WindowHandle(#" + WindowHandle + ") on screen(#" + index_screen + ") \n" + "   | Device name : " + current_screen.DeviceName.ToString () + "\n" + "   | Working area : " + current_screen.WorkingArea.ToString () + "\n" + "   | Primary ? : " + current_screen.Primary.ToString () + "\n" + "   ----------------------------------------------------\n"; " is 445.
Long Statement,ChromeLauncher.Model,ScreensHandler,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\ScreensHandler.cs,place_onscreen,The length of the statement  "		this.Log_place_onscreen = "   ---{FAILED}-----------------------------------------\n" + "   | The screen with index (#" + index_screen + ") doesn't exist \n" + "   ----------------------------------------------------\n"; " is 220.
Magic Number,ChromeLauncher.CommandLineApplication,ChromeLauncher_HelpGenerator,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_HelpGenerator.cs,GetHelpString,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	var parser = helpInfo.Parsers [i];  	foreach (var verb in parser.Verbs.OrderByDescending (v => v.IsDefault)) {  		sb.AppendLine ();  		sb_temp_verb.Clear ();  		sb_temp_verb.Append (verbsLead);  		if (multi) {  			sb_temp_verb.AppendFormat ("{0}."' parser.Type.Name.ToLowerInvariant ());  		}  		sb_temp_verb.Append (verb.Names.StringJoin ("|").ToLowerInvariant ());  		length_verb = sb_temp_verb.Length + 1;  		if (verb.IsDefault) {  			sb_temp_verb.Append (" (défaut)");  		}  		if (!string.IsNullOrEmpty (verb.Description)) {  			sb_temp_verb.AppendFormat (": {0}"' verb.Description);  		}  		sb.Append (sb_temp_verb.ToString ().Replace ("\n"' "\n" + AddBlankInString (length_verb)));  		sb.AppendLine ();  		if (verb.Parameters.Any ()) {  			var longestParameter = verb.Parameters.Max (p => p.Names.StringJoin (" -").Length);  			var longestType = verb.Parameters.Max (p => p.Type.GetGenericTypeName ().Length);  			foreach (var p in verb.Parameters.OrderBy (p => p.Names.First ())) {  				sb_temp_parameter.Clear ();  				//sb_temp_parameter.Append(parametersLead);  				sb_temp_parameter.AppendFormat ("-{0} : "' p.Names.StringJoin (" -").ToLowerInvariant ().PadRight (longestParameter' ' '));  				if (!string.IsNullOrEmpty (p.Description)) {  					sb_temp_parameter.AppendFormat ("{0} "' p.Description);  				}  				var typeName = GetTypeName (p.Type);  				if (!string.IsNullOrEmpty (typeName)) {  					sb_temp_parameter.AppendFormat ("({0}) "' typeName);  				}  				if (p.Required) {  					sb_temp_parameter.Append ("(Requis) ");  				}  				if (p.Separator != null && p.Separator != SeparatorAttribute.DefaultSeparator) {  					sb_temp_parameter.AppendFormat ("(Separator = {0}) "' p.Separator);  				}  				if (p.Default != null) {  					sb_temp_parameter.AppendFormat ("(Defaut = {0}) "' p.Default);  				}  				if (p.Validations.Any ()) {  					sb_temp_parameter.AppendFormat ("({0}) "' p.Validations.StringJoin ("' "));  				}  				sb.Append (sb_temp_parameter.ToString ());  				sb.AppendLine ();  			}  			// foreach (var p in verb.Parameters  		}  		if (verb.Validations.Any ()) {  			sb.AppendLine ();  			sb.Append (parametersLead);  			sb.AppendLine ("Validation:");  			foreach (var v in verb.Validations) {  				sb.Append (validationsLead);  				sb.AppendLine (v);  			}  		}  	}  	// foreach (var verb in parser.Verbs  	if (parser.Globals.Any ()) {  		sb.AppendLine ();  		//sb.Append(verbsLead);  		sb.AppendLine ("Paramètres globaux:");  		var longestGlobal = parser.Globals.Max (p => p.Names.StringJoin ("|").Length);  		foreach (var g in parser.Globals.OrderBy (g => g.Names.First ())) {  			sb.Append (parametersLead);  			sb.AppendFormat ("/{0} : "' g.Names.StringJoin ("|").ToLowerInvariant ().PadRight (longestGlobal' ' '));  			if (!string.IsNullOrEmpty (g.Description)) {  				sb.AppendFormat ("{0} "' g.Description);  			}  			var typeName = GetTypeName (g.Type);  			if (!string.IsNullOrEmpty (typeName)) {  				sb.AppendFormat ("({0}) "' typeName);  			}  			if (g.Separator != null && g.Separator != SeparatorAttribute.DefaultSeparator) {  				sb.AppendFormat ("(Separator = {0}) "' g.Separator);  			}  			if (g.Validations != null && g.Validations.Any ()) {  				sb.AppendFormat ("({0}) "' g.Validations.StringJoin ("' "));  			}  			sb.AppendLine ();  		}  		// foreach (var g in parser.Globals  	}  	if (multi && i < count - 1) {  		sb.AppendLine ();  		sb.Append (verbsLead);  		sb.AppendLine (string.Empty.PadRight (80' '-'));  	}  }  
Magic Number,ChromeLauncher.CommandLineApplication,ChromeLauncher_HelpGenerator,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_HelpGenerator.cs,GetHelpString,The following statement contains a magic number: if (multi && i < count - 1) {  	sb.AppendLine ();  	sb.Append (verbsLead);  	sb.AppendLine (string.Empty.PadRight (80' '-'));  }  
Magic Number,ChromeLauncher.CommandLineApplication,ChromeLauncher_HelpGenerator,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\CommandLineApplication\ChromeLauncher_HelpGenerator.cs,GetHelpString,The following statement contains a magic number: sb.AppendLine (string.Empty.PadRight (80' '-'));  
Magic Number,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,launch_Process_chrome,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,set_window_placement_in_Preferences_Chrome_File,The following statement contains a magic number: try {  	dynamic Chrome_Preferences = JsonConvert.DeserializeObject (data_pathfile_Chrome_Preferences);  	// Set chrome into left monitor by default  	Chrome_Preferences ["browser"] ["window_placement"] ["bottom"] = 600;  	Chrome_Preferences ["browser"] ["window_placement"] ["left"] = 0;  	Chrome_Preferences ["browser"] ["window_placement"] ["maximized"] = false;  	Chrome_Preferences ["browser"] ["window_placement"] ["right"] = 800;  	Chrome_Preferences ["browser"] ["window_placement"] ["top"] = 0;  	// Serialize JSON directly into the pathfile_Chrome_Preferences  	using (StreamWriter file = File.CreateText (pathfile_Chrome_Preferences)) {  		JsonSerializer serializer = new JsonSerializer ();  		serializer.Serialize (file' Chrome_Preferences);  		if (this.Opt_debug_mode) {  			Console.WriteLine ("   | Sucess to (deserialize / change / serialize) chrome preferences");  		}  	}  }  catch (Exception e) {  	if (this.Opt_debug_mode) {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.WriteLine ("[ERREUR] Unable to change chrome Preferences cause of : " + e.Message);  		Console.ResetColor ();  	}  }  
Magic Number,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,set_window_placement_in_Preferences_Chrome_File,The following statement contains a magic number: try {  	dynamic Chrome_Preferences = JsonConvert.DeserializeObject (data_pathfile_Chrome_Preferences);  	// Set chrome into left monitor by default  	Chrome_Preferences ["browser"] ["window_placement"] ["bottom"] = 600;  	Chrome_Preferences ["browser"] ["window_placement"] ["left"] = 0;  	Chrome_Preferences ["browser"] ["window_placement"] ["maximized"] = false;  	Chrome_Preferences ["browser"] ["window_placement"] ["right"] = 800;  	Chrome_Preferences ["browser"] ["window_placement"] ["top"] = 0;  	// Serialize JSON directly into the pathfile_Chrome_Preferences  	using (StreamWriter file = File.CreateText (pathfile_Chrome_Preferences)) {  		JsonSerializer serializer = new JsonSerializer ();  		serializer.Serialize (file' Chrome_Preferences);  		if (this.Opt_debug_mode) {  			Console.WriteLine ("   | Sucess to (deserialize / change / serialize) chrome preferences");  		}  	}  }  catch (Exception e) {  	if (this.Opt_debug_mode) {  		Console.ForegroundColor = ConsoleColor.Red;  		Console.WriteLine ("[ERREUR] Unable to change chrome Preferences cause of : " + e.Message);  		Console.ResetColor ();  	}  }  
Magic Number,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,set_window_placement_in_Preferences_Chrome_File,The following statement contains a magic number: Chrome_Preferences ["browser"] ["window_placement"] ["bottom"] = 600;  
Magic Number,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,set_window_placement_in_Preferences_Chrome_File,The following statement contains a magic number: Chrome_Preferences ["browser"] ["window_placement"] ["right"] = 800;  
Magic Number,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,get_chrome_preferences_file,The following statement contains a magic number: if (File.Exists (temp_pathfile_Chrome_Preferences)) {  	pathfile_Chrome_Preferences = temp_pathfile_Chrome_Preferences;  }  else {  	// Try another method to get the Preference file  	const int LikeWin7 = 6;  	OperatingSystem osInfo = Environment.OSVersion;  	DirectoryInfo strDirectory;  	String path = null;  	String file = null;  	if (osInfo.Platform.Equals (System.PlatformID.Win32NT)) {  		if (osInfo.Version.Major == LikeWin7) {  			path = Environment.GetEnvironmentVariable ("LocalAppData") + @"\Google\Chrome\User Data\Default";  		}  	}  	if (path == null || path.Length == 0)  		throw new ArgumentNullException ("Fail. Bad OS");  	if (!(strDirectory = new DirectoryInfo (path)).Exists)  		throw new DirectoryNotFoundException ("Fail. The directory (" + path + ") was not found");  	if (!new FileInfo (file = Directory.GetFiles (strDirectory.FullName' "Preferences*") [0]).Exists)  		throw new FileNotFoundException ("Fail. The file Preferences in (" + path + ") was not found."' file);  	pathfile_Chrome_Preferences = file;  }  
Magic Number,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,launch_test,The following statement contains a magic number: if (number_test_to_launch > 0) {  	if (number_test_to_launch > 6) {  		if (opt_debug_mode)  			Console.WriteLine (" Too many tests on screen' 5 screens maximum");  	}  	else {  		String[] urls = new String[] {  			@"http://20100.lescigales.org/FF1/"'  			@"http://20100.lescigales.org/FF1/solution/intro.php"'  			@"http://google.fr"'  			@"http://www.impsandmonsters.com/"'  			@"http://www.yodablog.net/"  		};  		Engine chrome_engine;  		for (int i = 0; i < number_test_to_launch; i++) {  			if (opt_debug_mode) {  				Console.WriteLine (" > Test " + (i + 1));  				Console.WriteLine ("   ----------------------------------------------------");  				Console.WriteLine ("   | Lancer sur url = " + urls [i]);  				Console.WriteLine ("   | Options chrome = " + "--new-window --incognito");  			}  			if (opt_delay > 0) {  				Thread.Sleep (opt_delay);  			}  			chrome_engine = new Engine (urls [i]' "--new-window --incognito"' true' i' opt_debug_mode);  		}  	}  }  else {  	if (opt_debug_mode)  		Console.WriteLine (" Minimum is 1 screen...");  }  
Magic Number,ChromeLauncher.Model,Engine,C:\repos\AOT-DEP-PADI_ChromeLauncher\source\ChromeLauncher\Model\Engine.cs,launch_test,The following statement contains a magic number: if (number_test_to_launch > 6) {  	if (opt_debug_mode)  		Console.WriteLine (" Too many tests on screen' 5 screens maximum");  }  else {  	String[] urls = new String[] {  		@"http://20100.lescigales.org/FF1/"'  		@"http://20100.lescigales.org/FF1/solution/intro.php"'  		@"http://google.fr"'  		@"http://www.impsandmonsters.com/"'  		@"http://www.yodablog.net/"  	};  	Engine chrome_engine;  	for (int i = 0; i < number_test_to_launch; i++) {  		if (opt_debug_mode) {  			Console.WriteLine (" > Test " + (i + 1));  			Console.WriteLine ("   ----------------------------------------------------");  			Console.WriteLine ("   | Lancer sur url = " + urls [i]);  			Console.WriteLine ("   | Options chrome = " + "--new-window --incognito");  		}  		if (opt_delay > 0) {  			Thread.Sleep (opt_delay);  		}  		chrome_engine = new Engine (urls [i]' "--new-window --incognito"' true' i' opt_debug_mode);  	}  }  
