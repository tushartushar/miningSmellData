Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DownloadFileFromBlob,Cyclomatic complexity of the method is 21
Complex Method,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,RunDownloadLoop,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,UploadFileToBlob,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,RunUploadLoop,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,DoSequentialRead,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DownloadBlob,The method has 12 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DownloadFileFromBlob,The method has 12 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferBase,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferBase.cs,ApplyEncryptionTransform,The method has 5 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferBase,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferBase.cs,ApplyEncryptionTransform,The method has 5 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferBase,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferBase.cs,TaskCompletedCallback,The method has 5 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,UploadBlob,The method has 7 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,UploadBlob,The method has 9 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,DownloadBlob,The method has 7 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,DownloadBlob,The method has 10 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,UploadBlob,The method has 8 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,UploadBlob,The method has 10 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferCompleteEventArgs,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferCompleteEventArgs.cs,BlobTransferCompleteEventArgs,The method has 6 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferProgressChangedEventArgs,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferProgressChangedEventArgs.cs,BlobTransferProgressChangedEventArgs,The method has 8 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,UploadBlob,The method has 12 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,UploadFileToBlob,The method has 12 parameters.
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,GetCloudBlockBlob,The method has 6 parameters.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,BlobTransferClient,The length of the parameter forceSharedAccessSignatureRetry is 31.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DownloadBlob,The length of the statement  "	Task task = Task.Factory.StartNew (() => DownloadFileFromBlob (uri' localFile' fileEncryption' initializationVector' client' cancellationToken' retryPolicy' getSharedAccessSignature' start: start' length: length' parallelTransferThreadCount: parallelTransferThreadCount)); " is 272.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DownloadFileFromBlob,The length of the statement  "				throw new ArgumentException (string.Format (CultureInfo.CurrentCulture' "Size {0} is beyond the Length of Blob {1}"' length' blob.Properties.Length)); " is 150.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DownloadFileFromBlob,The length of the statement  "				throw new ArgumentException (string.Format (CultureInfo.CurrentCulture' "Size {0} plus offset {1} is beyond the Length of Blob {2}"' length' start' blob.Properties.Length)); " is 173.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DownloadFileFromBlob,The length of the statement  "			using (FileStream fileStream = new FileStream (transferContext.LocalFilePath' FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.Read)) { " is 141.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DownloadFileFromBlob,The length of the statement  "				blob.DownloadToStream (fileStream' accessCondition: accessCondition' options: blobRequestOptions' operationContext: operationContext); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DownloadFileFromBlob,The length of the statement  "			transferContext.BlocksToTransfer = PrepareUploadDownloadQueue (sizeToDownload' blockSize' ref numThreads' initialOffset); " is 121.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DownloadFileFromBlob,The length of the statement  "			using (FileStream stream = new FileStream (transferContext.LocalFilePath' FileMode.OpenOrCreate' FileAccess.Write' FileShare.Read)) { " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DownloadFileFromBlob,The length of the statement  "		TaskCompletedCallback (cancellationToken.IsCancellationRequested' transferContext.Exceptions != null && transferContext.Exceptions.Count > 0 ? new AggregateException (transferContext.Exceptions) : null' BlobTransferType.Download' localFile' uri); " is 246.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,RunDownloadLoop,The length of the statement  "	// a complete signal for this file download due to some error in the one of the other block downloads in the same transfer context. " is 131.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,RunDownloadLoop,The length of the statement  "	//If this is not cleaned' used buffers will hit the cap of 16 and future downloads will hang for lack of memory buffers. " is 120.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,RunDownloadLoop,The length of the statement  "	for (int currentBlock = transferContext.NextFileIOBlock; currentBlock <= transferContext.BlocksForFileIO.Count (); currentBlock++) { " is 132.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,BeginDownloadStream,The length of the statement  "	transferContext.Blob.BeginDownloadRangeToStream (memoryStream' startAndLength.Key' startAndLength.Value' AccessCondition.GenerateEmptyCondition ()' transferContext.BlobRequestOptions' operationContext' ar => { " is 209.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DoSequentialWrite,The length of the statement  "		long beginFilePosition = (long)transferContext.NextFileIOBlock * transferContext.BlockSize + transferContext.InitialOffset; " is 123.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DoSequentialWrite,The length of the statement  "		long nextBeginFilePosition = (transferContext.NextFileIOBlock + 1) * (long)transferContext.BlockSize + transferContext.InitialOffset; " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DoSequentialWrite,The length of the statement  "		ApplyEncryptionTransform (transferContext.FileEncryption' transferContext.InitializationVector' beginFilePosition' buffer' bytesToWrite); " is 137.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,DoSequentialWrite,The length of the statement  "			SuccessfulOrRetryableResult wasWriteSuccessful = IsActionSuccessfulOrRetryable (transferContext' () => stream.EndWrite (result3)); " is 130.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobDownloader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobDownloader.cs,TryDownloadingBlocks,The length of the statement  "	//This is where memory is allocated' any code after this should make sure releasebuffer happens on all positive/negative conditions " is 131.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferBase,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferBase.cs,InvokeProgressCallback,The length of the statement  "	BlobTransferProgressChangedEventArgs eArgs = new BlobTransferProgressChangedEventArgs (bytesProcessed' lastBlockSize' transferContext.Length' progress' speed' transferContext.Blob.Uri' transferContext.LocalFilePath' null); " is 222.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferBase,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferBase.cs,ApplyEncryptionTransform,The length of the statement  "				encryptor.TransformBlock (inputBuffer: buffer' inputOffset: 0' inputCount: bytesToWrite' outputBuffer: buffer' outputOffset: 0); " is 128.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferBase,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferBase.cs,ApplyEncryptionTransform,The length of the statement  "				encryptor.TransformBlock (inputBuffer: buffer' inputOffset: 0' inputCount: bytesToWrite' outputBuffer: buffer' outputOffset: 0); " is 128.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,UploadBlob,The length of the statement  "	return UploadBlob (url' localFile' fileEncryption' cancellationToken' null' retryPolicy' contentType' getSharedAccessSignature: getSharedAccessSignature); " is 154.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,UploadBlob,The length of the statement  "	return UploadBlob (url' localFile' fs' fileEncryption' cancellationToken' client' retryPolicy' contentType' subDirectory' getSharedAccessSignature).ContinueWith (t => fs.Dispose ()); " is 182.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,DownloadBlob,The length of the statement  "	return DownloadBlob (uri' localFile' fileEncryption' initializationVector' null' cancellationToken' retryPolicy' getSharedAccessSignature); " is 139.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,DownloadBlob,The length of the statement  "		throw new ArgumentException (string.Format (CultureInfo.CurrentCulture' "Initial offset {0} to download a file must not be negative"' start)); " is 142.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,DownloadBlob,The length of the statement  "		// The following sleep is for unit test purpose and we will force the shared access signature to expire and hit retry code path " is 127.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,DownloadBlob,The length of the statement  "	return blobDownloader.DownloadBlob (uri' localFile' fileEncryption' initializationVector' client' cancellationToken' retryPolicy' getSharedAccessSignature' start' length' parallelTransferThreadCount: ParallelTransferThreadCount' numberOfConcurrentTransfers: NumberOfConcurrentTransfers); " is 287.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,UploadBlob,The length of the statement  "	return UploadBlob (url' name' stream' fileEncryption' cancellationToken' null' retryPolicy' contentType' getSharedAccessSignature: getSharedAccessSignature); " is 157.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,UploadBlob,The length of the statement  "		// The following sleep is for unit test purpose and we will force the shared access signature to expire and hit retry code path " is 127.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferClient,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferClient.cs,UploadBlob,The length of the statement  "	return blobuploader.UploadBlob (url' name' stream' fileEncryption' cancellationToken' client' retryPolicy' contentType' subDirectory' getSharedAccessSignature: getSharedAccessSignature' parallelTransferThreadCount: ParallelTransferThreadCount' numberOfConcurrentTransfers: NumberOfConcurrentTransfers); " is 302.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferSpeedCalculator,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferSpeedCalculator.cs,UpdateCountersAndCalculateSpeed,The length of the statement  "			speed = (this._bytesUploadQueue.Max () - this._bytesUploadQueue.Min ()) / TimeSpan.FromTicks (this._timeUploadQueue.Max () - this._timeUploadQueue.Min ()).TotalSeconds; " is 168.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,UploadBlob,The length of the statement  "	return Task.Factory.StartNew (() => UploadFileToBlob (cancellationToken' url' name' stream' contentType' subDirectory' fileEncryption' client' retryPolicy' getSharedAccessSignature' parallelTransferThreadCount)' cancellationToken); " is 231.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,UploadFileToBlob,The length of the statement  "				ApplyEncryptionTransform (transferContext.FileEncryption' Path.GetFileName (transferContext.LocalFilePath)' 0' fileContent' Convert.ToInt32 (stream.Length)); " is 157.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,UploadFileToBlob,The length of the statement  "					blob.UploadFromStream (uploadMemoryStream' accessCondition: accessCondition' options: blobRequestOptions' operationContext: operationContext); " is 142.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,UploadFileToBlob,The length of the statement  "		TaskCompletedCallback (cancellationToken.IsCancellationRequested' transferContext.Exceptions != null && transferContext.Exceptions.Count > 0 ? new AggregateException (transferContext.Exceptions) : null' BlobTransferType.Upload' name' uri); " is 239.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,RunUploadLoop,The length of the statement  "	// a complete signal for this file upload due to some error in the one of the other block uploads in the same transfer context. " is 127.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,RunUploadLoop,The length of the statement  "	for (int currentBlock = transferContext.NextFileIOBlock; currentBlock <= transferContext.BlocksForFileIO.Count (); currentBlock++) { " is 132.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,BeginUploadStream,The length of the statement  "	string blockId = Convert.ToBase64String (Encoding.ASCII.GetBytes (string.Format (CultureInfo.InvariantCulture' "BlockId{0:d7}"' (startAndLength.Key / transferContext.BlockSize)))); " is 180.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,BeginUploadStream,The length of the statement  "	transferContext.Blob.BeginPutBlock (blockId' memoryStream' null' AccessCondition.GenerateEmptyCondition ()' transferContext.BlobRequestOptions' operationContext' ar => { " is 169.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,TryUploadingBlocks,The length of the statement  "		nextBeginFilePosition = nextBeginFilePosition > transferContext.Length ? transferContext.Length : nextBeginFilePosition; " is 120.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,TryUploadingBlocks,The length of the statement  "		BeginUploadStream (transferContext' new KeyValuePair<long' int> (beginFilePosition' bytesToRead)' memoryStream' streamBuffer); " is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,BeginPutBlockList,The length of the statement  "		blockids.Add (Convert.ToBase64String (Encoding.ASCII.GetBytes (string.Format (CultureInfo.InvariantCulture' "BlockId{0:d7}"' i)))); " is 131.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,BeginPutBlockList,The length of the statement  "	transferContext.Blob.BeginPutBlockList (blockids' AccessCondition.GenerateEmptyCondition ()' transferContext.BlobRequestOptions' operationContext' ar => { " is 154.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,DoSequentialRead,The length of the statement  "		nextBeginFilePosition = nextBeginFilePosition > transferContext.Length ? transferContext.Length : nextBeginFilePosition; " is 120.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,DoSequentialRead,The length of the statement  "			SuccessfulOrRetryableResult wasReadSuccessful = IsActionSuccessfulOrRetryable (transferContext' () => stream.EndRead (result3)' out bytesRead); " is 143.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,DoSequentialRead,The length of the statement  "				ApplyEncryptionTransform (transferContext.FileEncryption' Path.GetFileName (transferContext.LocalFilePath)' beginFilePosition' streamBuffer' bytesToRead); " is 154.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client,ServicePointModifier,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\ServicePointModifier.cs,SetConnectionPropertiesForSmallPayloads,The length of the statement  "	SetConnectionPropertiesForSmallPayloads (ServicePointManager.FindServicePoint (uri)' connectionLimit' connectionLeaseTimeout); " is 126.
Magic Number,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferSpeedCalculator,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferSpeedCalculator.cs,UpdateCountersAndCalculateSpeed,The following statement contains a magic number: lock (this._timeUploadQueue) {  	double speed = 0;  	if (this._timeUploadQueue.Count >= 80) {  		this._timeUploadQueue.Dequeue ();  		this._bytesUploadQueue.Dequeue ();  	}  	this._timeUploadQueue.Enqueue (DateTime.Now.Ticks);  	this._bytesUploadQueue.Enqueue (bytesSent);  	if (this._timeUploadQueue.Count > 2) {  		speed = (this._bytesUploadQueue.Max () - this._bytesUploadQueue.Min ()) / TimeSpan.FromTicks (this._timeUploadQueue.Max () - this._timeUploadQueue.Min ()).TotalSeconds;  	}  	return speed;  }  
Magic Number,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferSpeedCalculator,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferSpeedCalculator.cs,UpdateCountersAndCalculateSpeed,The following statement contains a magic number: lock (this._timeUploadQueue) {  	double speed = 0;  	if (this._timeUploadQueue.Count >= 80) {  		this._timeUploadQueue.Dequeue ();  		this._bytesUploadQueue.Dequeue ();  	}  	this._timeUploadQueue.Enqueue (DateTime.Now.Ticks);  	this._bytesUploadQueue.Enqueue (bytesSent);  	if (this._timeUploadQueue.Count > 2) {  		speed = (this._bytesUploadQueue.Max () - this._bytesUploadQueue.Min ()) / TimeSpan.FromTicks (this._timeUploadQueue.Max () - this._timeUploadQueue.Min ()).TotalSeconds;  	}  	return speed;  }  
Magic Number,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferSpeedCalculator,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferSpeedCalculator.cs,UpdateCountersAndCalculateSpeed,The following statement contains a magic number: if (this._timeUploadQueue.Count >= 80) {  	this._timeUploadQueue.Dequeue ();  	this._bytesUploadQueue.Dequeue ();  }  
Magic Number,Microsoft.WindowsAzure.MediaServices.Client,BlobTransferSpeedCalculator,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobTransferSpeedCalculator.cs,UpdateCountersAndCalculateSpeed,The following statement contains a magic number: if (this._timeUploadQueue.Count > 2) {  	speed = (this._bytesUploadQueue.Max () - this._bytesUploadQueue.Min ()) / TimeSpan.FromTicks (this._timeUploadQueue.Max () - this._timeUploadQueue.Min ()).TotalSeconds;  }  
Magic Number,Microsoft.WindowsAzure.MediaServices.Client,BlobUploader,F:\newReposMay17\Azure_azure-sdk-for-media-services\src\net\Client\Common\Common.BlobTransfer\BlobUploader.cs,UploadFileToBlob,The following statement contains a magic number: try {  	ManualResetEvent uploadCompletedSignal = new ManualResetEvent (false);  	BlobRequestOptions blobRequestOptions = new BlobRequestOptions {  		RetryPolicy = retryPolicy'  		ServerTimeout = TimeSpan.FromSeconds (90)  	};  	CloudBlockBlob blob = GetCloudBlockBlob (uri' client' subDirectory' name' contentType' getSharedAccessSignature);  	transferContext.Length = stream.Length;  	transferContext.LocalFilePath = name;  	transferContext.OnComplete = () => uploadCompletedSignal.Set ();  	transferContext.Blob = blob;  	transferContext.FileEncryption = fileEncryption;  	if (stream.Length == 0) {  		blob.UploadFromByteArray (new byte[1]' 0' 0' options: blobRequestOptions);  	} else if (stream.Length < cloudBlockBlobUploadDownloadSizeLimit) {  		AccessCondition accessCondition = AccessCondition.GenerateEmptyCondition ();  		OperationContext operationContext = new OperationContext ();  		operationContext.ClientRequestID = DateTime.UtcNow.ToString ("s"' CultureInfo.InvariantCulture);  		using (var memoryStream = new MemoryStream ()) {  			stream.CopyTo (memoryStream);  			byte[] fileContent = memoryStream.ToArray ();  			ApplyEncryptionTransform (transferContext.FileEncryption' Path.GetFileName (transferContext.LocalFilePath)' 0' fileContent' Convert.ToInt32 (stream.Length));  			using (var uploadMemoryStream = new MemoryStream (fileContent)) {  				blob.UploadFromStream (uploadMemoryStream' accessCondition: accessCondition' options: blobRequestOptions' operationContext: operationContext);  			}  		}  		InvokeProgressCallback (transferContext' stream.Length' stream.Length);  		transferContext.OnComplete ();  	} else {  		int numThreads = parallelTransferThreadCount;  		int blockSize = GetBlockSize (stream.Length);  		transferContext.BlocksToTransfer = PrepareUploadDownloadQueue (stream.Length' blockSize' ref numThreads);  		transferContext.BlocksForFileIO = new ConcurrentDictionary<int' byte[]> ();  		for (int i = 0; i < transferContext.BlocksToTransfer.Count (); i++) {  			transferContext.BlocksForFileIO [i] = null;  		}  		transferContext.BlockSize = blockSize;  		transferContext.CancellationToken = cancellationToken;  		transferContext.BlobRequestOptions = blobRequestOptions;  		transferContext.MemoryManager = MemoryManagerFactory.GetMemoryManager (blockSize);  		transferContext.Client = client;  		transferContext.RetryPolicy = retryPolicy;  		transferContext.GetSharedAccessSignature = getSharedAccessSignature;  		transferContext.ShouldDoFileIO = shouldDoFileIO;  		transferContext.BufferStreams = new ConcurrentDictionary<byte[]' MemoryStream> ();  		transferContext.ClientRequestId = DateTime.UtcNow.ToString ("s"' CultureInfo.InvariantCulture);  		transferContext.ContentType = contentType;  		transferContext.BlobSubFolder = subDirectory;  		transferContext.NextFileIOBlock = 0;  		transferContext.PartialFileIOState = new ConcurrentDictionary<long' int> ();  		RunUploadLoop (transferContext' stream' numThreads);  	}  } catch (Exception e) {  	//Add the exception to the exception list.  	transferContext.Exceptions.Add (e);  } finally {  	// We should to be able to releaseunusedbuffers if memorymanager was initialized by then   	if (transferContext.MemoryManager != null) {  		transferContext.MemoryManager.ReleaseUnusedBuffers ();  	}  	//TaskCompletedCallback should be called to populate exceptions if relevant and other eventargs for the user.  	TaskCompletedCallback (cancellationToken.IsCancellationRequested' transferContext.Exceptions != null && transferContext.Exceptions.Count > 0 ? new AggregateException (transferContext.Exceptions) : null' BlobTransferType.Upload' name' uri);  }  
