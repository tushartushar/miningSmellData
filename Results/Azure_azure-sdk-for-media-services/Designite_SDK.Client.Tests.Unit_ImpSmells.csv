Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,InitilizeStubData,The method has 107 lines of code.
Complex Method,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ValidateOutputProtectionLevelValueChecks,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,LoadProperty,Cyclomatic complexity of the method is 8
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,QueryErrorDetectionStrategyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\QueryErrorDetectionStrategyTest.cs,,The length of the parameter SupportedRetryableWebExceptions is 31.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,QueryErrorDetectionStrategyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\QueryErrorDetectionStrategyTest.cs,,The length of the parameter SupportedRetryableHttpStatusCodes is 33.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,SaveChangesErrorDetectionStrategyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\SaveChangesErrorDetectionStrategyTest.cs,,The length of the parameter SupportedRetryableWebExceptions is 31.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,SaveChangesErrorDetectionStrategyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\SaveChangesErrorDetectionStrategyTest.cs,,The length of the parameter SupportedRetryableHttpStatusCodes is 33.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,StorageTransientErrorDetectionStrategyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\StorageTransientErrorDetectionStrategyTests.cs,,The length of the parameter SupportedRetryableHttpStatusCodes is 33.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,StorageTransientErrorDetectionStrategyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\StorageTransientErrorDetectionStrategyTests.cs,,The length of the parameter SupportedRetryableStorageErrorStrings is 37.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MonitoringConfigurationTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Telemetry\MonitoringConfigurationTests.cs,TestMonitoringConfiguration,The length of the parameter monitoringConfigurationCollection is 33.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TestRetryAdapter,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestRetryAdapter.cs,,The length of the parameter FuncExecutedCountByExecuteAsync1 is 32.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TestRetryAdapter,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestRetryAdapter.cs,,The length of the parameter FuncExecutedCountByExecuteAction is 32.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,RSATokenVerificationKeyRoundTrip,The length of the parameter outputRsaParametersutParameters is 31.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestMediaServicesClassFactoryForCustomRetryPolicy,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestAzureMediaServicesClassFactoryForCustomRetryPolicy.cs,,The length of the parameter ConnectionSaveRetryMaxAttempts is 30.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestMediaServicesClassFactoryForCustomRetryPolicy,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestAzureMediaServicesClassFactoryForCustomRetryPolicy.cs,,The length of the parameter ConnectionQueryRetryMaxAttempts is 31.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestMediaServicesClassFactoryForCustomRetryPolicy,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestAzureMediaServicesClassFactoryForCustomRetryPolicy.cs,,The length of the parameter ConnectionRetryInitialInterval is 30.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetEncryptionStateUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetEncryptionStateUnitTests.cs,AddTestDeliveryPolicies,The length of the statement  "                IAssetDeliveryPolicy policy = _mediaContext.AssetDeliveryPolicies.Create("Test Asset Delivery Policy"' deliveryType' protocol' null); " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetEncryptionStateUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetEncryptionStateUnitTests.cs,RunAllGetEffectiveDeliveryPolicyTestCases,The length of the statement  "            string testCaseDataFilePath = WindowsAzureMediaServicesTestConfiguration.GetVideoSampleFilePath(TestContext' c_TestCaseDataFile); " is 129.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetEncryptionStateUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetEncryptionStateUnitTests.cs,RunAllGetEffectiveDeliveryPolicyTestCases,The length of the statement  "                AssetDeliveryProtocol assetDeliveryProtocol = (AssetDeliveryProtocol)Enum.Parse(typeof(AssetDeliveryProtocol)' parameters[2]); " is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetEncryptionStateUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetEncryptionStateUnitTests.cs,RunAllGetEffectiveDeliveryPolicyTestCases,The length of the statement  "                AssetDeliveryPolicyType assetDeliveryPolicyType = (AssetDeliveryPolicyType)Enum.Parse(typeof(AssetDeliveryPolicyType)' parameters[3]); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetEncryptionStateUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetEncryptionStateUnitTests.cs,RunAllGetEffectiveDeliveryPolicyTestCases,The length of the statement  "                AssetEncryptionState expectedEncryptionState = (AssetEncryptionState)Enum.Parse(typeof(AssetEncryptionState)' parameters[4]); " is 125.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetFilterTests.cs,AssetFilterCRUD,The length of the statement  "            IStreamingFilter filter = _mediaContext.Filters.Create("UniTest"' new PresentationTimeRange()' new List<FilterTrackSelectStatement>()); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetFilterTests.cs,ShouldFailForEmptyName,The length of the statement  "            IStreamingFilter filter = _mediaContext.Filters.Create(String.Empty' new PresentationTimeRange()' new List<FilterTrackSelectStatement>()); " is 138.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetFilterTests.cs,ShouldNotValidateNonEmptyName,The length of the statement  "            IStreamingFilter filter = _mediaContext.Filters.Create(bld.ToString()' new PresentationTimeRange()' new List<FilterTrackSelectStatement>()); " is 140.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetFilterTests.cs,ShouldNotValidateNonEmptyName,The length of the statement  "            filter = _mediaContext.Filters.Create(bld.ToString()' new PresentationTimeRange()' new List<FilterTrackSelectStatement>()); " is 123.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetFilterTests.cs,ShouldNotValidateNameand4CTracksOnClientSide,The length of the statement  "            IStreamingFilter filter = _mediaContext.Filters.Create(bld.ToString()' new PresentationTimeRange()' filterTrackSelectStatements); " is 129.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,CreateFileForStorageEncryptedAssetWithMissingStorageKey,The length of the statement  "            Task<IAsset> assetTask = _mediaContext.Assets.CreateAsync("Test"' AssetCreationOptions.StorageEncrypted' CancellationToken.None); " is 129.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,CreateFileForStorageEncryptedAssetWithMissingStorageKey,The length of the statement  "              Assert.AreEqual(ex.Flatten().InnerException.Message' String.Format(CultureInfo.InvariantCulture' StringTable.StorageEncryptionContentKeyIsMissing' asset.Id)); " is 158.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,AssetCreateAsyncStorageEncrypted,The length of the statement  "            Task<IAsset> assetTask = _mediaContext.Assets.CreateAsync("Test"' AssetCreationOptions.StorageEncrypted' CancellationToken.None); " is 129.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CacheTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CacheTest.cs,CacheBeforeExpiration,The length of the statement  "            var actual = target.GetOrAdd("k"' () => { throw new InvalidOperationException(); }' () => { throw new InvalidOperationException(); }); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyCommonEncryptionCRUD,The length of the statement  "            IContentKey key = _mediaContext.ContentKeys.Create(Guid.NewGuid()' ContentKeyBytes' Guid.NewGuid().ToString()' contentKeyType: ContentKeyType.CommonEncryption); " is 160.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyConfigurationEncryptionCRUD,The length of the statement  "            IContentKey key = _mediaContext.ContentKeys.Create(Guid.NewGuid()' ContentKeyBytes' Guid.NewGuid().ToString()' contentKeyType: ContentKeyType.ConfigurationEncryption); " is 167.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyEnvelopeEncryptionCRUD,The length of the statement  "            IContentKey key = _mediaContext.ContentKeys.Create(Guid.NewGuid()' ContentKeyBytes' Guid.NewGuid().ToString()' contentKeyType: ContentKeyType.EnvelopeEncryption); " is 162.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyTrackIdentifiersCRUD,The length of the statement  "            IContentKey key = _mediaContext.ContentKeys.Create(Guid.NewGuid()' ContentKeyBytes' Guid.NewGuid().ToString()' ContentKeyType.EnvelopeEncryption' tracks); " is 154.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyStorageEncryptionEncryptionCRUD,The length of the statement  "            IContentKey key = _mediaContext.ContentKeys.Create(Guid.NewGuid()' keyData' Guid.NewGuid().ToString()' contentKeyType: ContentKeyType.StorageEncryption); " is 153.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyUrlEncryptionCRUD,The length of the statement  "            IContentKey key = _mediaContext.ContentKeys.Create(Guid.NewGuid()' ContentKeyBytes' Guid.NewGuid().ToString()' contentKeyType: ContentKeyType.UrlEncryption); " is 157.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,CustomMediaRetryPolicyTestExceededMaxRetryAttempts,The length of the statement  "            MediaRetryPolicy target = new TestMediaServicesClassFactoryForCustomRetryPolicy(null).GetBlobStorageClientRetryPolicy(); " is 120.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,IngestManifestTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\IngestManifestTest.cs,CreateUpdateDeleteEmptyIngestManifest,The length of the statement  "              var manifest = _mediaContext.IngestManifests.Create(Guid.NewGuid().ToString()' _mediaContext.DefaultStorageAccount.Name); " is 121.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,IngestManifestTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\IngestManifestTest.cs,IngestManifestFileCRUD,The length of the statement  "             var manifest = _mediaContext.IngestManifests.Create(Guid.NewGuid().ToString()' _mediaContext.DefaultStorageAccount.Name); " is 121.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,IngestManifestTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\IngestManifestTest.cs,IngestManifestFileCRUD,The length of the statement  "                 var ingestManifestFile = ingestManifestAsset.IngestManifestFiles.CreateAsync(tempFileName' CancellationToken.None).Result; " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,IngestManifestTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\IngestManifestTest.cs,CreateEncryptUpdateDelete,The length of the statement  "             var manifest = _mediaContext.IngestManifests.Create(Guid.NewGuid().ToString()' _mediaContext.DefaultStorageAccount.Name); " is 121.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,LocatorTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\LocatorTest.cs,AccessPolicyCRUD,The length of the statement  "            IAccessPolicy policy = _mediaContext.AccessPolicies.Create("AccessPolicyCRUD"' TimeSpan.FromDays(1)' AccessPermissions.Read); " is 125.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteActionBackoff,The length of the statement  "                Assert.IsTrue(exceptionCount > 3 || delta.TotalMilliseconds > 1' "Iterations left:{0} interval increase too small from {1} to {2}"' exceptionCount' lastInterval' newInterval' delta);" is 182.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteAsyncBackoff,The length of the statement  "                Assert.IsTrue(exceptionCount > 3 || delta.TotalMilliseconds > 1' "Iterations left:{0} interval increase too small from {1} to {2}"' exceptionCount' lastInterval' newInterval' delta);" is 182.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTest,The length of the statement  "            PlayReadyLicenseResponseTemplate responseTemplate2 = MediaServicesLicenseTemplateSerializer.Deserialize(serializedTemplate); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTestWithRelativeBeginDateRelativeEndDate,The length of the statement  "            PlayReadyLicenseResponseTemplate responseTemplate2 = MediaServicesLicenseTemplateSerializer.Deserialize(serializedTemplate); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTestErrorWithRelativeExpirationDateExpirationDate,The length of the statement  "                Assert.IsTrue(ae.Message.Contains(ErrorMessages.ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError)); " is 120.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,DigitalVideoOnlyContentRestrictionAndAllowPassingVideoContentToUnknownOutputMutuallyExclusive,The length of the statement  "            licenseTemplate.PlayRight.AllowPassingVideoContentToUnknownOutput = UnknownOutputPassingOption.AllowedWithVideoConstriction; " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,KnownGoodInputTest,The length of the statement  "            string serializedTemplate = "<PlayReadyLicenseResponseTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1\"><LicenseTemplates><PlayReadyLicenseTemplate><AllowTestDevices>false</AllowTestDevices><BeginDate i:nil=\"true\" /><ContentKey i:type=\"ContentEncryptionKeyFromHeader\" /><ContentType>Unspecified</ContentType><ExpirationDate i:nil=\"true\" /><LicenseType>Nonpersistent</LicenseType><PlayRight><AgcAndColorStripeRestriction><ConfigurationData>1</ConfigurationData></AgcAndColorStripeRestriction><AllowPassingVideoContentToUnknownOutput>Allowed</AllowPassingVideoContentToUnknownOutput><AnalogVideoOpl>100</AnalogVideoOpl><CompressedDigitalAudioOpl>300</CompressedDigitalAudioOpl><CompressedDigitalVideoOpl>400</CompressedDigitalVideoOpl><DigitalVideoOnlyContentRestriction>false</DigitalVideoOnlyContentRestriction><ExplicitAnalogTelevisionOutputRestriction><BestEffort>true</BestEffort><ConfigurationData>0</ConfigurationData></ExplicitAnalogTelevisionOutputRestriction><ImageConstraintForAnalogComponentVideoRestriction>true</ImageConstraintForAnalogComponentVideoRestriction><ImageConstraintForAnalogComputerMonitorRestriction>true</ImageConstraintForAnalogComputerMonitorRestriction><ScmsRestriction><ConfigurationData>2</ConfigurationData></ScmsRestriction><UncompressedDigitalAudioOpl>250</UncompressedDigitalAudioOpl><UncompressedDigitalVideoOpl>270</UncompressedDigitalVideoOpl></PlayRight></PlayReadyLicenseTemplate></LicenseTemplates><ResponseCustomData>This is my response custom data</ResponseCustomData></PlayReadyLicenseResponseTemplate>"; " is 1660.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,KnownGoodInputTest,The length of the statement  "            PlayReadyLicenseResponseTemplate responseTemplate2 = MediaServicesLicenseTemplateSerializer.Deserialize(serializedTemplate); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,KnownGoodInputMinimalLicenseTest,The length of the statement  "            string serializedTemplate = "<PlayReadyLicenseResponseTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1\"><LicenseTemplates><PlayReadyLicenseTemplate><ContentKey i:type=\"ContentEncryptionKeyFromHeader\" /><PlayRight /></PlayReadyLicenseTemplate></LicenseTemplates></PlayReadyLicenseResponseTemplate>"; " is 405.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,KnownGoodInputMinimalLicenseTest,The length of the statement  "            PlayReadyLicenseResponseTemplate responseTemplate2 = MediaServicesLicenseTemplateSerializer.Deserialize(serializedTemplate); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,InputMissingContentKeyShouldThrowArgumentException,The length of the statement  "            string serializedTemplate = "<PlayReadyLicenseResponseTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1\"><LicenseTemplates><PlayReadyLicenseTemplate><PlayRight /></PlayReadyLicenseTemplate></LicenseTemplates></PlayReadyLicenseResponseTemplate>"; " is 349.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,InputMissingContentKeyShouldThrowArgumentException,The length of the statement  "                PlayReadyLicenseResponseTemplate responseTemplate2 = MediaServicesLicenseTemplateSerializer.Deserialize(serializedTemplate); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,InputMissingPlayRightShouldThrowArgumentException,The length of the statement  "            string serializedTemplate = "<PlayReadyLicenseResponseTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1\"><LicenseTemplates><PlayReadyLicenseTemplate><ContentKey i:type=\"ContentEncryptionKeyFromHeader\" /></PlayReadyLicenseTemplate></LicenseTemplates></PlayReadyLicenseResponseTemplate>"; " is 392.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,InputMissingPlayRightShouldThrowArgumentException,The length of the statement  "                PlayReadyLicenseResponseTemplate responseTemplate2 = MediaServicesLicenseTemplateSerializer.Deserialize(serializedTemplate); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,InputMissingLicenseTemplatesShouldThrowArgumentException,The length of the statement  "            string serializedTemplate = "<PlayReadyLicenseResponseTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1\"><LicenseTemplates></LicenseTemplates></PlayReadyLicenseResponseTemplate>"; " is 283.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,InputMissingLicenseTemplatesShouldThrowArgumentException,The length of the statement  "                PlayReadyLicenseResponseTemplate responseTemplate2 = MediaServicesLicenseTemplateSerializer.Deserialize(serializedTemplate); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,NotificationEndPointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\NotificationEndPointTest.cs,NotificationEndPointCRUD,The length of the statement  "            var endPoint = _mediaContext.NotificationEndPoints.Create(Guid.NewGuid().ToString()' NotificationEndPointType.AzureQueue' "http://Contoso.com"); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,NotificationEndPointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\NotificationEndPointTest.cs,NotificationEndPointCRUD,The length of the statement  "           endPoint = _mediaContext.NotificationEndPoints.CreateAsync(Guid.NewGuid().ToString()' NotificationEndPointType.AzureQueue' "http://Contoso.com").Result; " is 152.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,NotificationEndPointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\NotificationEndPointTest.cs,WebHookNotificationEndPointCRUD,The length of the statement  "            var endPoint = _mediaContext.NotificationEndPoints.Create(Guid.NewGuid().ToString()' NotificationEndPointType.WebHook' "http://Contoso.com"' bytes); " is 148.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,NotificationEndPointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\NotificationEndPointTest.cs,NotificationEndPointCreationFailureForAzureQueueWithCredential,The length of the statement  "                var endPoint = _mediaContext.NotificationEndPoints.Create(Guid.NewGuid().ToString()' NotificationEndPointType.AzureQueue' "http://Contoso.com"' bytes); " is 151.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,NotificationEndPointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\NotificationEndPointTest.cs,NotificationEndPointCreateValidateParameters,The length of the statement  "                var endPoint = _mediaContext.NotificationEndPoints.Create(null' NotificationEndPointType.AzureQueue' "http://Contoso.com"); " is 123.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,NotificationEndPointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\NotificationEndPointTest.cs,NotificationEndPointCreateValidateParameters,The length of the statement  "                var endPoint = _mediaContext.NotificationEndPoints.Create(String.Empty' NotificationEndPointType.AzureQueue' "http://Contoso.com"); " is 131.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,NotificationEndPointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\NotificationEndPointTest.cs,NotificationEndPointCreateValidateParameters,The length of the statement  "                var endPoint = _mediaContext.NotificationEndPoints.Create(Guid.NewGuid().ToString()' NotificationEndPointType.AzureQueue' null); " is 128.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,NotificationEndPointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\NotificationEndPointTest.cs,NotificationEndPointCreateValidateParameters,The length of the statement  "                var endPoint = _mediaContext.NotificationEndPoints.Create(Guid.NewGuid().ToString()' NotificationEndPointType.AzureQueue' String.Empty); " is 136.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,OpenIDConnectDiscoveryDocumentTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\OpenIDConnectDiscoveryDocumentTest.cs,FetchJWKKeyAsRSATokenVerificationKey,The length of the statement  "               ""n"": ""temCVy5oxWCEUwHUqGXxvHnySlaZtT_JmHm0zICxsanboYss-b3nOqIXN45L5TyTiNbOBgE6vge2TfIjo_NqXBiKjRNl_g7F4iwl07p2abn3KQ6mgYDlFMhJJOXG4-0dMORBgi3hQi8VajLHJ04FoorZsf__FDb1gvvnPObUQwM=""' " is 184.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,OpenIDConnectDiscoveryDocumentTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\OpenIDConnectDiscoveryDocumentTest.cs,FetchAsTokenVerificationKey,The length of the statement  "               ""n"": ""temCVy5oxWCEUwHUqGXxvHnySlaZtT_JmHm0zICxsanboYss-b3nOqIXN45L5TyTiNbOBgE6vge2TfIjo_NqXBiKjRNl_g7F4iwl07p2abn3KQ6mgYDlFMhJJOXG4-0dMORBgi3hQi8VajLHJ04FoorZsf__FDb1gvvnPObUQwM=""' " is 184.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,OpenIDConnectDiscoveryDocumentTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\OpenIDConnectDiscoveryDocumentTest.cs,FetchJWKKeyAsX509TokenVerificationKey,The length of the statement  "                    ""n"":""kSCWg6q9iYxvJE2NIhSyOiKvqoWCO2GFipgH0sTSAs5FalHQosk9ZNTztX0ywS/AHsBeQPqYygfYVJL6/EgzVuwRk5txr9e3n1uml94fLyq/AXbwo9yAduf4dCHTP8CWR1dnDR+Qnz/4PYlWVEuuHHONOw/blbfdMjhY+C/BYM2E3pRxbohBb3x//CfueV7ddz2LYiH3wjz0QS/7kjPiNCsXcNyKQEOTkbHFi3mu0u13SQwNddhcynd/GTgWN8A+6SN1r4hzpjFKFLbZnBt77ACSiYx+IHK4Mp+NaVEi5wQtSsjQtI++XsokxRDqYLwus1I1SihgbV/STTg5enufuw==""' " is 355.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,OpenIDConnectDiscoveryDocumentTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\OpenIDConnectDiscoveryDocumentTest.cs,FetchJWKKeyAsX509TokenVerificationKey,The length of the statement  "                    ""x5c"":[""MIIDPjCCAiqgAwIBAgIQsRiM0jheFZhKk49YD0SK1TAJBgUrDgMCHQUAMC0xKzApBgNVBAMTImFjY291bnRzLmFjY2Vzc2NvbnRyb2wud2luZG93cy5uZXQwHhcNMTQwMTAxMDcwMDAwWhcNMTYwMTAxMDcwMDAwWjAtMSswKQYDVQQDEyJhY2NvdW50cy5hY2Nlc3Njb250cm9sLndpbmRvd3MubmV0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkSCWg6q9iYxvJE2NIhSyOiKvqoWCO2GFipgH0sTSAs5FalHQosk9ZNTztX0ywS/AHsBeQPqYygfYVJL6/EgzVuwRk5txr9e3n1uml94fLyq/AXbwo9yAduf4dCHTP8CWR1dnDR+Qnz/4PYlWVEuuHHONOw/blbfdMjhY+C/BYM2E3pRxbohBb3x//CfueV7ddz2LYiH3wjz0QS/7kjPiNCsXcNyKQEOTkbHFi3mu0u13SQwNddhcynd/GTgWN8A+6SN1r4hzpjFKFLbZnBt77ACSiYx+IHK4Mp+NaVEi5wQtSsjQtI++XsokxRDqYLwus1I1SihgbV/STTg5enufuwIDAQABo2IwYDBeBgNVHQEEVzBVgBDLebM6bK3BjWGqIBrBNFeNoS8wLTErMCkGA1UEAxMiYWNjb3VudHMuYWNjZXNzY29udHJvbC53aW5kb3dzLm5ldIIQsRiM0jheFZhKk49YD0SK1TAJBgUrDgMCHQUAA4IBAQCJ4JApryF77EKC4zF5bUaBLQHQ1PNtA1uMDbdNVGKCmSf8M65b8h0NwlIjGGGy/unK8P6jWFdm5IlZ0YPTOgzcRZguXDPj7ajyvlVEQ2K2ICvTYiRQqrOhEhZMSSZsTKXFVwNfW6ADDkN3bvVOVbtpty+nBY5UqnI7xbcoHLZ4wYD251uj5+lo13YLnsVrmQ16NCBYq2nQFNPuNJw6t3XUbwBHXpF46aLT1/eGf/7Xx6iy8yPJX4DyrpFTutDz882RWofGEO5t4Cw+zZg70dJ/hH/ODYRMorfXEW+8uKmXMKmX2wyxMKvfiPbTy5LmAU8Jvjs2tLg4rOBcXWLAIarZ""] " is 1126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,OpenIDConnectDiscoveryDocumentTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\OpenIDConnectDiscoveryDocumentTest.cs,FetchJWKKeyAsX509TokenVerificationKey,The length of the statement  "            X509CertTokenVerificationKey tokenVerificationKey = jsonWebKey.AsTokenVerificationKey() as X509CertTokenVerificationKey; " is 120.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,QueryErrorDetectionStrategyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\QueryErrorDetectionStrategyTest.cs,GetMockedWebExceptionWithProtocolError,The length of the statement  "            return new WebException("Simulated WebException with ProtocolError"' null' WebExceptionStatus.ProtocolError' httpWebResponseMock.Object); " is 137.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,StorageTransientErrorDetectionStrategyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\StorageTransientErrorDetectionStrategyTests.cs,StorageTransientErrorDetectionStrategyWebExceptionTest,The length of the statement  "                    Assert.IsTrue(QueryErrorDetectionStrategyTest.SupportedRetryableWebExceptions.Contains(exception.Status)' exception.Status.ToString()); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,StorageTransientErrorDetectionStrategyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\StorageTransientErrorDetectionStrategyTests.cs,StorageTransientErrorDetectionStrategyWebExceptionTest,The length of the statement  "                    Assert.IsFalse(QueryErrorDetectionStrategyTest.SupportedRetryableWebExceptions.Contains(exception.Status)' exception.Status.ToString()); " is 136.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,StorageTransientErrorDetectionStrategyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\StorageTransientErrorDetectionStrategyTests.cs,GetSimulatedStorageTransientErrorDetectionStrategy,The length of the statement  "            string requestResultAsXml = String.Format("<RequestResult><HTTPStatusCode>500</HTTPStatusCode><HttpStatusMessage>fake status message</HttpStatusMessage><TargetLocation>Primary</TargetLocation><ServiceRequestID>fake requestId</ServiceRequestID><ContentMd5>fake md5</ContentMd5><Etag>fake etag</Etag><RequestDate>fake request date</RequestDate><StartTime>{1}</StartTime><EndTime>{1}</EndTime><ExtendedErrorInformation><Code>{0}</Code></ExtendedErrorInformation></RequestResult>"' errorString' DateTime.UtcNow); " is 508.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,KnownGoodInputForSwtOnlyScheme,The length of the statement  "            string tokenTemplate = "<TokenRestrictionTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1\"><AlternateVerificationKeys><TokenVerificationKey i:type=\"SymmetricVerificationKey\"><KeyValue>GG07fDPZ+HMD2vcoknMqYjEJMb7LSq8zUmdCYMvRCevnQK//ilbhODO/FydMrHiwZGmI6XywvOOU7SSzRPlI3Q==</KeyValue></TokenVerificationKey></AlternateVerificationKeys><Audience>http://sampleaudience/</Audience><Issuer>http://sampleissuerurl/</Issuer><PrimaryVerificationKey i:type=\"SymmetricVerificationKey\"><KeyValue>2OvxltHKwILn5PCRD8H+63sK98LBs1yF+ZdZbwzmToWYm29pLyqIMuCvMRGpLOv5DYh3NmpzWMAciu4ncW8VTg==</KeyValue></PrimaryVerificationKey><RequiredClaims><TokenClaim><ClaimType>urn:microsoft:azure:mediaservices:contentkeyidentifier</ClaimType><ClaimValue i:nil=\"true\" /></TokenClaim><TokenClaim><ClaimType>urn:myservice:claims:rental</ClaimType><ClaimValue>true</ClaimValue></TokenClaim></RequiredClaims></TokenRestrictionTemplate>";" is 1022.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,KnownGoodInputForJWT,The length of the statement  "          string tokenTemplate="<TokenRestrictionTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1\"><AlternateVerificationKeys /><Audience>http://sampleissuerurl/</Audience><Issuer>http://sampleaudience/</Issuer><PrimaryVerificationKey i:type=\"X509CertTokenVerificationKey\"><RawBody>MIIDAzCCAeugAwIBAgIQ2cl0q8oGkaFG+ZTZYsilhDANBgkqhkiG9w0BAQ0FADARMQ8wDQYDVQQDEwZDQVJvb3QwHhcNMTQxMjAxMTg0NzI5WhcNMzkxMjMxMjM1OTU5WjARMQ8wDQYDVQQDEwZDQVJvb3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDjgMbtZcLtKNdJXHSGQ7l6xJBtNCVhjF4+BLZq+D2RmubKTAnGXhNGY4FO2LrPjfkWumdnv5DOlFuwHy2qrsZu1TFZxxQzU9/Yp3VAD1Afk7ShUOxniPpIO9vfkUH+FEX1Taq4ncR/TkiwnIZLy+bBa0DlF2MsPGC62KbiN4xJqvSIuecxQvcN8MZ78NDejtj1/XHF7VBmVjWi5B79GpTvY9ap39BU8nM0Q8vWb9DwmpWLz8j7hm25f+8laHIE6U8CpeeD/OrZT8ncCD0hbhR3ZGGoFqJbyv2CLPVGeaIhIxBH41zgrBYR53NjkRLTB4IEUCgeTGvSzweqlb+4totdAgMBAAGjVzBVMA8GA1UdEwEB/wQFMAMBAf8wQgYDVR0BBDswOYAQSHiCUWtQlUe79thqsTDbbqETMBExDzANBgNVBAMTBkNBUm9vdIIQ2cl0q8oGkaFG+ZTZYsilhDANBgkqhkiG9w0BAQ0FAAOCAQEABa/2D+Rxo6tp63sDFRViikNkDa5GFZscQLn4Rm35NmUt35Wc/AugLaTJ7iP5zJTYIBUI9DDhHbgFqmYpW0p14NebJlBzrRFIaoHBOsHhy4VYrxIB8Q/OvSGPgbI2c39ni/odyTYKVtJacxPrIt+MqeiFMjJ19cJSOkKT2AFoPMa/L0++znMcEObSAHYMy1U51J1njpQvNJ+MQiR8y2gvmMbGEcMgicIJxbLB2imqJWCQkFUlsrxwuuzSvNaLkdd/HyhsR1JXc+kOREO8gWjhT6MAdgGKC9+neamR7sqwJHPNfcLYTDFOhi6cJH10z74mU1Xa5uLsX+aZp2YYHUFw4Q==</RawBody></PrimaryVerificationKey><RequiredClaims /><TokenType>JWT</TokenType></TokenRestrictionTemplate>"; " is 1530.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,KnownGoodInputForSWT,The length of the statement  "             string tokenTemplate = "<TokenRestrictionTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1\"><AlternateVerificationKeys /><Audience>http://sampleissuerurl/</Audience><Issuer>http://sampleaudience/</Issuer><PrimaryVerificationKey i:type=\"SymmetricVerificationKey\"><KeyValue>2OvxltHKwILn5PCRD8H+63sK98LBs1yF+ZdZbwzmToWYm29pLyqIMuCvMRGpLOv5DYh3NmpzWMAciu4ncW8VTg==</KeyValue></PrimaryVerificationKey><RequiredClaims><TokenClaim><ClaimType>urn:microsoft:azure:mediaservices:contentkeyidentifier</ClaimType><ClaimValue i:nil=\"true\" /></TokenClaim><TokenClaim><ClaimType>urn:myservice:claims:rental</ClaimType><ClaimValue>true</ClaimValue></TokenClaim></RequiredClaims><TokenType>SWT</TokenType></TokenRestrictionTemplate>"; " is 832.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,InputMissingIssuerShouldThrow,The length of the statement  "            string tokenTemplate = "<TokenRestrictionTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1\"><AlternateVerificationKeys><TokenVerificationKey i:type=\"SymmetricVerificationKey\"><KeyValue>GG07fDPZ+HMD2vcoknMqYjEJMb7LSq8zUmdCYMvRCevnQK//ilbhODO/FydMrHiwZGmI6XywvOOU7SSzRPlI3Q==</KeyValue></TokenVerificationKey></AlternateVerificationKeys><Audience>http://sampleaudience/</Audience><PrimaryVerificationKey i:type=\"SymmetricVerificationKey\"><KeyValue>2OvxltHKwILn5PCRD8H+63sK98LBs1yF+ZdZbwzmToWYm29pLyqIMuCvMRGpLOv5DYh3NmpzWMAciu4ncW8VTg==</KeyValue></PrimaryVerificationKey><RequiredClaims><TokenClaim><ClaimType>urn:microsoft:azure:mediaservices:contentkeyidentifier</ClaimType><ClaimValue i:nil=\"true\" /></TokenClaim><TokenClaim><ClaimType>urn:myservice:claims:rental</ClaimType><ClaimValue>true</ClaimValue></TokenClaim></RequiredClaims></TokenRestrictionTemplate>";" is 982.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,InputMissingAudienceShouldThrow,The length of the statement  "            string tokenTemplate = "<TokenRestrictionTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1\"><AlternateVerificationKeys><TokenVerificationKey i:type=\"SymmetricVerificationKey\"><KeyValue>GG07fDPZ+HMD2vcoknMqYjEJMb7LSq8zUmdCYMvRCevnQK//ilbhODO/FydMrHiwZGmI6XywvOOU7SSzRPlI3Q==</KeyValue></TokenVerificationKey></AlternateVerificationKeys><Issuer>http://sampleissuerurl/</Issuer><PrimaryVerificationKey i:type=\"SymmetricVerificationKey\"><KeyValue>2OvxltHKwILn5PCRD8H+63sK98LBs1yF+ZdZbwzmToWYm29pLyqIMuCvMRGpLOv5DYh3NmpzWMAciu4ncW8VTg==</KeyValue></PrimaryVerificationKey><RequiredClaims><TokenClaim><ClaimType>urn:microsoft:azure:mediaservices:contentkeyidentifier</ClaimType><ClaimValue i:nil=\"true\" /></TokenClaim><TokenClaim><ClaimType>urn:myservice:claims:rental</ClaimType><ClaimValue>true</ClaimValue></TokenClaim></RequiredClaims></TokenRestrictionTemplate>";" is 979.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,InputMissingPrimaryKeyShouldThrow,The length of the statement  "            string tokenTemplate = "<TokenRestrictionTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1\"><AlternateVerificationKeys><TokenVerificationKey i:type=\"SymmetricVerificationKey\"><KeyValue>GG07fDPZ+HMD2vcoknMqYjEJMb7LSq8zUmdCYMvRCevnQK//ilbhODO/FydMrHiwZGmI6XywvOOU7SSzRPlI3Q==</KeyValue></TokenVerificationKey></AlternateVerificationKeys><Audience>http://sampleaudience/</Audience><Issuer>http://sampleissuerurl/</Issuer><RequiredClaims><TokenClaim><ClaimType>urn:microsoft:azure:mediaservices:contentkeyidentifier</ClaimType><ClaimValue i:nil=\"true\" /></TokenClaim><TokenClaim><ClaimType>urn:myservice:claims:rental</ClaimType><ClaimValue>true</ClaimValue></TokenClaim></RequiredClaims></TokenRestrictionTemplate>";" is 828.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,InputMissingRequiredClaimsOkay,The length of the statement  "            string tokenTemplate = "<TokenRestrictionTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1\"><AlternateVerificationKeys><TokenVerificationKey i:type=\"SymmetricVerificationKey\"><KeyValue>GG07fDPZ+HMD2vcoknMqYjEJMb7LSq8zUmdCYMvRCevnQK//ilbhODO/FydMrHiwZGmI6XywvOOU7SSzRPlI3Q==</KeyValue></TokenVerificationKey></AlternateVerificationKeys><Audience>http://sampleaudience/</Audience><Issuer>http://sampleissuerurl/</Issuer><PrimaryVerificationKey i:type=\"SymmetricVerificationKey\"><KeyValue>2OvxltHKwILn5PCRD8H+63sK98LBs1yF+ZdZbwzmToWYm29pLyqIMuCvMRGpLOv5DYh3NmpzWMAciu4ncW8VTg==</KeyValue></PrimaryVerificationKey></TokenRestrictionTemplate>";" is 754.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,TokenRestrictionTemplateDeserializeNilOpenConnectIdDocumentNoPrimaryKey,The length of the statement  "                @"<TokenRestrictionTemplate xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1"" ><AlternateVerificationKeys /><Audience>http://sampleissuerurl/</Audience><Issuer>http://sampleaudience/</Issuer><OpenIdConnectDiscoveryDocument i:nil=""true""><OpenIdDiscoveryUri ></OpenIdDiscoveryUri></OpenIdConnectDiscoveryDocument></TokenRestrictionTemplate>"; " is 445.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,TokenRestrictionTemplateDeserializeNilOpenConnectIdDocumentUriNoPrimaryKey,The length of the statement  "                @"<TokenRestrictionTemplate xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1"" ><AlternateVerificationKeys /><Audience>http://sampleissuerurl/</Audience><Issuer>http://sampleaudience/</Issuer><OpenIdConnectDiscoveryDocument ><OpenIdDiscoveryUri i:nil=""true""></OpenIdDiscoveryUri></OpenIdConnectDiscoveryDocument></TokenRestrictionTemplate>"; " is 445.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,TokenRestrictionTemplateDeserializeNotAbsoluteDiscoveryUri,The length of the statement  "                @"<TokenRestrictionTemplate xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1"" ><AlternateVerificationKeys /><Audience>http://sampleissuerurl/</Audience><Issuer>http://sampleaudience/</Issuer><OpenIdConnectDiscoveryDocument ><OpenIdDiscoveryUri >RelativeUri</OpenIdDiscoveryUri></OpenIdConnectDiscoveryDocument></TokenRestrictionTemplate>"; " is 442.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,TokenRestrictionTemplateDeserializeNotAbsoluteDiscoveryUri,The length of the statement  "                Assert.AreEqual("String representation of OpenIdConnectDiscoveryDocument.OpenIdDiscoveryUri is not valid absolute Uri."' ex.Message); " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,InputMissingPrimaryKeyShouldNotThrow,The length of the statement  "            string tokenTemplate = "<TokenRestrictionTemplate xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/TokenRestrictionTemplate/v1\"><AlternateVerificationKeys><TokenVerificationKey i:type=\"SymmetricVerificationKey\"><KeyValue>GG07fDPZ+HMD2vcoknMqYjEJMb7LSq8zUmdCYMvRCevnQK//ilbhODO/FydMrHiwZGmI6XywvOOU7SSzRPlI3Q==</KeyValue></TokenVerificationKey></AlternateVerificationKeys><Audience>http://sampleaudience/</Audience><Issuer>http://sampleissuerurl/</Issuer><RequiredClaims><TokenClaim><ClaimType>urn:microsoft:azure:mediaservices:contentkeyidentifier</ClaimType><ClaimValue i:nil=\"true\" /></TokenClaim><TokenClaim><ClaimType>urn:myservice:claims:rental</ClaimType><ClaimValue>true</ClaimValue></TokenClaim></RequiredClaims></TokenRestrictionTemplate>"; " is 828.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,RSATokenVerificationKeyRoundTrip,The length of the statement  "            Assert.IsTrue(inputRsaParameters.Exponent.SequenceEqual(outputRsaParametersutParameters.Exponent)' "Exponent value mismatch"); " is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,TokenRestrictionTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TokenRestrictionTemplateSerializerTests.cs,RSATokenVerificationKeyRoundTrip,The length of the statement  "            Assert.IsTrue(inputRsaParameters.Modulus.SequenceEqual(outputRsaParametersutParameters.Modulus)' "Modulus value mismatch"); " is 123.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,WebRequestTransientErrorDetectionStrategyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\WebRequestTransientErrorDetectionStrategyTests.cs,WebRequestTransientErrorDetectionStrategyWebExceptionTest,The length of the statement  "                    Assert.IsTrue(QueryErrorDetectionStrategyTest.SupportedRetryableWebExceptions.Contains(exception.Status)' exception.Status.ToString()); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,WebRequestTransientErrorDetectionStrategyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\WebRequestTransientErrorDetectionStrategyTests.cs,WebRequestTransientErrorDetectionStrategyWebExceptionTest,The length of the statement  "                    Assert.IsFalse(QueryErrorDetectionStrategyTest.SupportedRetryableWebExceptions.Contains(exception.Status)' exception.Status.ToString()); " is 136.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ChannelDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelDataTest.cs,ChannelSettingsTest,The length of the statement  "            Assert.AreEqual(input.AccessControl.IPAllowList[0].SubnetPrefixLength' target.Input.AccessControl.IPAllowList[0].SubnetPrefixLength); " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ChannelDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelDataTest.cs,ChannelSettingsTest,The length of the statement  "            Assert.AreEqual(preview.AccessControl.IPAllowList[0].SubnetPrefixLength' target.Preview.AccessControl.IPAllowList[0].SubnetPrefixLength); " is 137.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,CreateQuery,The length of the statement  "            var result = new MediaQueryable<TIinterface' TData>(inner' new MediaRetryPolicy(new QueryErrorDetectionStrategy()' new ExponentialBackoff()));" is 142.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The length of the statement  "            byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};" is 177.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The length of the statement  "                System.Collections.Specialized.NameValueCollection parameters = System.Web.HttpUtility.ParseQueryString(requestUri.ToString().Replace("/RebindContentKey?"' String.Empty));" is 171.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The length of the statement  "                    var key = CreateQuery<ContentKeyData>(ContentKeyBaseCollection.ContentKeySet).Where(c => c.Id == s.Replace("'"' String.Empty)).FirstOrDefault();" is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,LoadProperty,The length of the statement  "                        assetData.Locators = new List<LocatorData>(CreateQuery<LocatorData>("Locators").Where(c=>c.AssetId ==c.AssetId ).ToList());" is 123.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,LoadProperty,The length of the statement  "                        data.AccessPolicy= CreateQuery<AccessPolicyData>(AccessPolicyBaseCollection.AccessPolicySet).Where(c => c.Id == data.AccessPolicyId).FirstOrDefault();" is 150.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,SaveChangesFunc,The length of the statement  "                            var addRamgeMethodInfo = _persistedChanges[pendingChange.Key].GetType().GetMethods().Where(m => m.Name == "AddRange").FirstOrDefault();" is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,SaveChangesFunc,The length of the statement  "                        state.GetType().InvokeMember("Id"' BindingFlags.Instance | BindingFlags.Public | BindingFlags.SetProperty' Type.DefaultBinder' state' new[] {"nb:kid:UUID:" + Guid.NewGuid()});" is 175.
Virtual Method Call from Constructor,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,TestRestEntity,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\TestRestEntity.cs,TestRestEntity,The constructor "TestRestEntity" calls a virtual method "SetMediaContext".
Empty Catch Block,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,AssetFileDownloadUploadThrowsExceptionForFragblob,The method has an empty catch block.
Empty Catch Block,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,AssetFileDownloadUploadThrowsExceptionForFragblob,The method has an empty catch block.
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetEncryptionStateUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetEncryptionStateUnitTests.cs,RunAllGetEffectiveDeliveryPolicyTestCases,The following statement contains a magic number: Assert.AreEqual(401' testCases.Length);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetEncryptionStateUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetEncryptionStateUnitTests.cs,RunAllGetEffectiveDeliveryPolicyTestCases,The following statement contains a magic number: AssetDeliveryProtocol assetDeliveryProtocol = (AssetDeliveryProtocol)Enum.Parse(typeof(AssetDeliveryProtocol)' parameters[2]);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetEncryptionStateUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetEncryptionStateUnitTests.cs,RunAllGetEffectiveDeliveryPolicyTestCases,The following statement contains a magic number: AssetDeliveryPolicyType assetDeliveryPolicyType = (AssetDeliveryPolicyType)Enum.Parse(typeof(AssetDeliveryPolicyType)' parameters[3]);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetEncryptionStateUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetEncryptionStateUnitTests.cs,RunAllGetEffectiveDeliveryPolicyTestCases,The following statement contains a magic number: AssetEncryptionState expectedEncryptionState = (AssetEncryptionState)Enum.Parse(typeof(AssetEncryptionState)' parameters[4]);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetEncryptionStateUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetEncryptionStateUnitTests.cs,RunAllGetEffectiveDeliveryPolicyTestCases,The following statement contains a magic number: bool expectedIsStreamable = bool.Parse(parameters[5]);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetEncryptionStateUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetEncryptionStateUnitTests.cs,RunAllGetEffectiveDeliveryPolicyTestCases,The following statement contains a magic number: AssetType expectedAssetType = (AssetType)Enum.Parse(typeof(AssetType)' parameters[6]);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetFilterTests.cs,ShouldNotValidateNonEmptyName,The following statement contains a magic number: i < 10
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetFilterTests.cs,ShouldNotValidateNameand4CTracksOnClientSide,The following statement contains a magic number: i < 10
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,AssetCRUDWithEmptyFile,The following statement contains a magic number: file.ContentFileSize = 100;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,CancelOnAssetFileCreate,The following statement contains a magic number: var mediaContext = Helper.GetMediaDataServiceContextForUnitTests(1000);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,ShouldCancelAllAssetFileCreateWhenParallelIsUsed,The following statement contains a magic number: var mediaContext = Helper.GetMediaDataServiceContextForUnitTests(1000);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,ShouldCancelAllAssetFileCreateWhenParallelIsUsed,The following statement contains a magic number: var result = Parallel.For(0'                      5'                      i =>                      {                          tasks.Add(asset.AssetFiles.CreateAsync(Guid.NewGuid().ToString()' token));                      });
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,ShouldCancelWithinATask,The following statement contains a magic number: var mediaContext = Helper.GetMediaDataServiceContextForUnitTests(1000);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,ShouldCancelWithinATask,The following statement contains a magic number: Task.Factory.StartNew(() => {                                              for (int i = 0; i < 5; i++)                                              {                                                  tasks.Add(asset.AssetFiles.CreateAsync(Guid.NewGuid().ToString()' token));                                              }                                                            });
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,TestAssetCreateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,TestAssetCreateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,TestAssetCreateFailedRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,TestAssetCreateFailedRetryMessageLengthLimitExceeded,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,TestAssetUpdateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,TestAssetUpdateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,TestAssetDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,TestAssetDeleteRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,TestAssetDeleteRetryWithKeepAzureContainerOption,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,TestAssetDeleteRetryWithKeepAzureContainerOption,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,TestAssetGetContentKeysRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateLoadPropertyMockConnectionClosed(2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetUnitTest.cs,TestAssetGetContentKeysRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.LoadProperty(data' "ContentKeys")' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CacheTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CacheTest.cs,CacheAfterExpiration,The following statement contains a magic number: target.GetOrAdd("k"' () => "v1"' () => DateTime.UtcNow.AddMilliseconds(100));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CacheTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CacheTest.cs,CacheAfterExpiration,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CacheTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CacheTest.cs,CacheAfterExpiration,The following statement contains a magic number: var actual = target.GetOrAdd("k"' () => "v2"' () => DateTime.UtcNow.AddMilliseconds(100));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: var iv = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: string configuration = FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration(                  cert'                  password'                  passwordId'                  askId'                  iv'                  RentalAndLeaseKeyType.PersistentUnlimited'                  123);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FairPlayTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FairPlayTests.cs,TestFairPlayConfigurationSerialization,The following statement contains a magic number: Assert.AreEqual(123U' result.RentalDuration);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FilterTests.cs,FirstQuality_ShouldVerifyParameter,The following statement contains a magic number: Assert.IsTrue(ExecutionWithException<ArgumentOutOfRangeException>(() => { new FirstQuality(-100); }));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FilterTests.cs,FirstQuality_ShouldVerifyParameter,The following statement contains a magic number: Assert.IsFalse(ExecutionWithException<ArgumentOutOfRangeException>(() => { new FirstQuality(12); }));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FilterTests.cs,FirstQuality_ShouldVerifyParameter,The following statement contains a magic number: Assert.IsFalse(ExecutionWithException<ArgumentOutOfRangeException>(() =>              {                  asset.AssetFilters.CreateAsync("filter1"' null' null' new FirstQuality(35));              }));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FilterTests.cs,Filter_FirstQuality_CRUD,The following statement contains a magic number: const int bitrate1 = 128000;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,FilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\FilterTests.cs,Filter_FirstQuality_CRUD,The following statement contains a magic number: const int bitrate2 = 360000;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyStorageEncryptionEncryptionCRUD,The following statement contains a magic number: byte[] keyData = Enumerable.Range(0' 32).Select(i => (byte)1).ToArray();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,LinkContentKeyToAsset,The following statement contains a magic number: Assert.AreEqual(2' keys.Count);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyBaseCollectionGetProtectionKeyIdForContentKeyRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyBaseCollectionGetProtectionKeyIdForContentKeyRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.Execute<string>(It.IsAny<Uri>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyGetEncryptedKeyValueRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyGetEncryptedKeyValueRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.Execute<string>(It.IsAny<Uri>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyGetClearKeyValueRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyGetClearKeyValueRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.Execute<string>(It.IsAny<Uri>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyUpdateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyUpdateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,ContentKeyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\ContentKeyTest.cs,ContentKeyDeleteRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,CustomMediaRetryPolicyTestExecuteActionTrivial,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,CustomMediaRetryPolicyTestExecuteActionRetry,The following statement contains a magic number: int exceptionCount = 3;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,CustomMediaRetryPolicyTestExecuteActionRetry,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,DefaultMediaRetryPolicyTestExecuteActionNonTransient,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,DefaultMediaRetryPolicyTestExecuteActionNonTransient,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,CustomMediaRetryPolicyTestExecuteAsyncTrivial,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,CustomMediaRetryPolicyTestExecuteAsyncRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,CustomMediaRetryPolicyTestExecuteAsyncRetry,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,CustomMediaRetryPolicyTestExecuteAsyncNonTransient,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,CustomMediaRetryPolicyTestExecuteAsyncNonTransient,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,CustomMediaRetryPolicyTestExceededMaxRetryAttempts,The following statement contains a magic number: int exceptionCount = 4;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,CustomMediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\CustomMediaRetryPolicyTests.cs,CustomMediaRetryPolicyTestExceededMaxRetryAttempts,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTemplateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTemplateTests.cs,JobTemplateQueryable,The following statement contains a magic number: var templates = _mediaContext.Jobs.Take(5);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTemplateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTemplateTests.cs,JobTemplateTestSaveAsyncRetry,The following statement contains a magic number: int saveChangesExceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTemplateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTemplateTests.cs,JobTemplateTestSaveAsyncRetry,The following statement contains a magic number: int loadPropertiesExceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTemplateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTemplateTests.cs,JobTemplateTestSaveAsyncRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.LoadProperty(data' "TaskTemplates")' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTemplateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTemplateTests.cs,JobTemplateTestDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTemplateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTemplateTests.cs,JobTemplateTestDeleteRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTests.cs,JobQueryable,The following statement contains a magic number: var jobs = _mediaContext.Jobs.Take(5);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTests.cs,GetExecutionProgressTask,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTests.cs,TestJobUpdateRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTests.cs,TestJobDeleteRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTests.cs,TestJobSubmitRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTests.cs,TestJobGetContentKeysRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateLoadPropertyMockConnectionClosed(2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\JobTests.cs,TestJobGetContentKeysRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.LoadProperty(data' "InputMediaAssets")' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,LocatorTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\LocatorTest.cs,LocatorCRUD,The following statement contains a magic number: locator.Update(DateTime.UtcNow.AddDays(5));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,LocatorTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\LocatorTest.cs,LocatorCRUD,The following statement contains a magic number: locator.Update(DateTime.UtcNow.AddDays(1)' DateTime.UtcNow.AddDays(5));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,LocatorTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\LocatorTest.cs,LocatorCRUD,The following statement contains a magic number: locator.UpdateAsync(DateTime.UtcNow.AddDays(5));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,LocatorTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\LocatorTest.cs,OnlyOriginLocatorCanBeUpdated,The following statement contains a magic number: locator.Update(DateTime.UtcNow.AddDays(5));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteActionTrivial,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteActionRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteActionRetry,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteActionNonTransient,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteActionNonTransient,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteActionBackoff,The following statement contains a magic number: int exceptionCount = 5;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteActionBackoff,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteActionBackoff,The following statement contains a magic number: Func<int> func = () =>             {                 TimeSpan newInterval = DateTime.UtcNow - lastInvoked;                 TimeSpan delta = newInterval - lastInterval;                 Assert.IsTrue(exceptionCount > 3 || delta.TotalMilliseconds > 1' "Iterations left:{0} interval increase too small from {1} to {2}"' exceptionCount' lastInterval' newInterval' delta);                 lastInvoked = DateTime.UtcNow;                 lastInterval = newInterval;                 if (--exceptionCount > 0) throw fakeException;                 return expected;             };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteAsyncTrivial,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteAsyncRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteAsyncRetry,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteAsyncNonTransient,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteAsyncNonTransient,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteAsyncBackoff,The following statement contains a magic number: int exceptionCount = 5;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteAsyncBackoff,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteAsyncBackoff,The following statement contains a magic number: Func<int> func = () =>             {                 TimeSpan newInterval = DateTime.UtcNow - lastInvoked;                 TimeSpan delta = newInterval - lastInterval;                 Assert.IsTrue(exceptionCount > 3 || delta.TotalMilliseconds > 1' "Iterations left:{0} interval increase too small from {1} to {2}"' exceptionCount' lastInterval' newInterval' delta);                 lastInvoked = DateTime.UtcNow;                 lastInterval = newInterval;                 if (--exceptionCount > 0) throw fakeException;                 return expected;             };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteActionAdapter,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteActionAdapter,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteActionAdapter,The following statement contains a magic number: Assert.AreEqual(2' adapter.FuncExecutedCountByExecuteAction);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteAsyncRetryHasBeenAdaptedOnce,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteAsyncRetryHasBeenAdaptedOnce,The following statement contains a magic number: int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaRetryPolicyTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaRetryPolicyTest.cs,MediaRetryPolicyTestExecuteAsyncRetryHasBeenAdaptedOnce,The following statement contains a magic number: Assert.AreEqual(2' adapter.FuncExecutedCountByExecuteAsync1);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTest,The following statement contains a magic number: licenseTemplate.ExpirationDate = DateTime.Now.AddDays(30).ToUniversalTime();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTest,The following statement contains a magic number: licenseTemplate.PlayRight.CompressedDigitalAudioOpl = 300;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTest,The following statement contains a magic number: licenseTemplate.PlayRight.CompressedDigitalVideoOpl = 400;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTest,The following statement contains a magic number: licenseTemplate.PlayRight.UncompressedDigitalAudioOpl = 250;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTest,The following statement contains a magic number: licenseTemplate.PlayRight.UncompressedDigitalVideoOpl = 270;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTest,The following statement contains a magic number: licenseTemplate.PlayRight.AnalogVideoOpl = 100;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTest,The following statement contains a magic number: licenseTemplate.PlayRight.ScmsRestriction = new ScmsRestriction(2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTestWithRelativeBeginDateRelativeEndDate,The following statement contains a magic number: licenseTemplate.RelativeExpirationDate = TimeSpan.FromHours(2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTestWithRelativeBeginDateRelativeEndDate,The following statement contains a magic number: licenseTemplate.PlayRight.CompressedDigitalAudioOpl = 300;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTestWithRelativeBeginDateRelativeEndDate,The following statement contains a magic number: licenseTemplate.PlayRight.CompressedDigitalVideoOpl = 400;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTestWithRelativeBeginDateRelativeEndDate,The following statement contains a magic number: licenseTemplate.PlayRight.UncompressedDigitalAudioOpl = 250;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTestWithRelativeBeginDateRelativeEndDate,The following statement contains a magic number: licenseTemplate.PlayRight.UncompressedDigitalVideoOpl = 270;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTestWithRelativeBeginDateRelativeEndDate,The following statement contains a magic number: licenseTemplate.PlayRight.AnalogVideoOpl = 100;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,RoundTripTestWithRelativeBeginDateRelativeEndDate,The following statement contains a magic number: licenseTemplate.PlayRight.ScmsRestriction = new ScmsRestriction(2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ScmsRestrictionConfigurationDataValidationTest,The following statement contains a magic number: byte[] validConfigurationValues = new byte[] { 0' 1' 2' 3 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ScmsRestrictionConfigurationDataValidationTest,The following statement contains a magic number: byte[] validConfigurationValues = new byte[] { 0' 1' 2' 3 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ScmsRestrictionConfigurationDataValidationTest,The following statement contains a magic number: byte[] invalidConfigurationValues = new byte[] {255' 128' 4' 5' 15};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ScmsRestrictionConfigurationDataValidationTest,The following statement contains a magic number: byte[] invalidConfigurationValues = new byte[] {255' 128' 4' 5' 15};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ScmsRestrictionConfigurationDataValidationTest,The following statement contains a magic number: byte[] invalidConfigurationValues = new byte[] {255' 128' 4' 5' 15};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ScmsRestrictionConfigurationDataValidationTest,The following statement contains a magic number: byte[] invalidConfigurationValues = new byte[] {255' 128' 4' 5' 15};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ScmsRestrictionConfigurationDataValidationTest,The following statement contains a magic number: byte[] invalidConfigurationValues = new byte[] {255' 128' 4' 5' 15};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ValidateOutputProtectionLevelValueChecks,The following statement contains a magic number: switch (i)                  {                       case 100:                          expectedResult = new bool[] {true' true' false' true' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "100 result didn't match expectations");                          break;                      case 150:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "150 result didn't match expectations");                          break;                      case 200:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "200 result didn't match expectations");                          break;                      case 250:                          expectedResult = new bool[] {true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "250 result didn't match expectations");                          break;                      case 270:                          expectedResult = new bool[] { false' false' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "270 result didn't match expectations");                          break;                      case 300:                          expectedResult = new bool[] { true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "300 result didn't match expectations");                          break;                      case 400:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "400 result didn't match expectations");                          break;                      case 500:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "500 result didn't match expectations");                          break;                      default:                          // These values should always return false for all types                          string message = string.Format("{0} result didn't match expectations"' i);                          Assert.IsFalse(currentResult.Any(c => c == true)' message);                          break;                  }
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ValidateOutputProtectionLevelValueChecks,The following statement contains a magic number: switch (i)                  {                       case 100:                          expectedResult = new bool[] {true' true' false' true' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "100 result didn't match expectations");                          break;                      case 150:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "150 result didn't match expectations");                          break;                      case 200:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "200 result didn't match expectations");                          break;                      case 250:                          expectedResult = new bool[] {true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "250 result didn't match expectations");                          break;                      case 270:                          expectedResult = new bool[] { false' false' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "270 result didn't match expectations");                          break;                      case 300:                          expectedResult = new bool[] { true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "300 result didn't match expectations");                          break;                      case 400:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "400 result didn't match expectations");                          break;                      case 500:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "500 result didn't match expectations");                          break;                      default:                          // These values should always return false for all types                          string message = string.Format("{0} result didn't match expectations"' i);                          Assert.IsFalse(currentResult.Any(c => c == true)' message);                          break;                  }
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ValidateOutputProtectionLevelValueChecks,The following statement contains a magic number: switch (i)                  {                       case 100:                          expectedResult = new bool[] {true' true' false' true' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "100 result didn't match expectations");                          break;                      case 150:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "150 result didn't match expectations");                          break;                      case 200:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "200 result didn't match expectations");                          break;                      case 250:                          expectedResult = new bool[] {true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "250 result didn't match expectations");                          break;                      case 270:                          expectedResult = new bool[] { false' false' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "270 result didn't match expectations");                          break;                      case 300:                          expectedResult = new bool[] { true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "300 result didn't match expectations");                          break;                      case 400:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "400 result didn't match expectations");                          break;                      case 500:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "500 result didn't match expectations");                          break;                      default:                          // These values should always return false for all types                          string message = string.Format("{0} result didn't match expectations"' i);                          Assert.IsFalse(currentResult.Any(c => c == true)' message);                          break;                  }
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ValidateOutputProtectionLevelValueChecks,The following statement contains a magic number: switch (i)                  {                       case 100:                          expectedResult = new bool[] {true' true' false' true' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "100 result didn't match expectations");                          break;                      case 150:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "150 result didn't match expectations");                          break;                      case 200:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "200 result didn't match expectations");                          break;                      case 250:                          expectedResult = new bool[] {true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "250 result didn't match expectations");                          break;                      case 270:                          expectedResult = new bool[] { false' false' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "270 result didn't match expectations");                          break;                      case 300:                          expectedResult = new bool[] { true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "300 result didn't match expectations");                          break;                      case 400:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "400 result didn't match expectations");                          break;                      case 500:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "500 result didn't match expectations");                          break;                      default:                          // These values should always return false for all types                          string message = string.Format("{0} result didn't match expectations"' i);                          Assert.IsFalse(currentResult.Any(c => c == true)' message);                          break;                  }
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ValidateOutputProtectionLevelValueChecks,The following statement contains a magic number: switch (i)                  {                       case 100:                          expectedResult = new bool[] {true' true' false' true' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "100 result didn't match expectations");                          break;                      case 150:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "150 result didn't match expectations");                          break;                      case 200:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "200 result didn't match expectations");                          break;                      case 250:                          expectedResult = new bool[] {true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "250 result didn't match expectations");                          break;                      case 270:                          expectedResult = new bool[] { false' false' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "270 result didn't match expectations");                          break;                      case 300:                          expectedResult = new bool[] { true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "300 result didn't match expectations");                          break;                      case 400:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "400 result didn't match expectations");                          break;                      case 500:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "500 result didn't match expectations");                          break;                      default:                          // These values should always return false for all types                          string message = string.Format("{0} result didn't match expectations"' i);                          Assert.IsFalse(currentResult.Any(c => c == true)' message);                          break;                  }
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ValidateOutputProtectionLevelValueChecks,The following statement contains a magic number: switch (i)                  {                       case 100:                          expectedResult = new bool[] {true' true' false' true' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "100 result didn't match expectations");                          break;                      case 150:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "150 result didn't match expectations");                          break;                      case 200:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "200 result didn't match expectations");                          break;                      case 250:                          expectedResult = new bool[] {true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "250 result didn't match expectations");                          break;                      case 270:                          expectedResult = new bool[] { false' false' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "270 result didn't match expectations");                          break;                      case 300:                          expectedResult = new bool[] { true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "300 result didn't match expectations");                          break;                      case 400:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "400 result didn't match expectations");                          break;                      case 500:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "500 result didn't match expectations");                          break;                      default:                          // These values should always return false for all types                          string message = string.Format("{0} result didn't match expectations"' i);                          Assert.IsFalse(currentResult.Any(c => c == true)' message);                          break;                  }
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ValidateOutputProtectionLevelValueChecks,The following statement contains a magic number: switch (i)                  {                       case 100:                          expectedResult = new bool[] {true' true' false' true' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "100 result didn't match expectations");                          break;                      case 150:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "150 result didn't match expectations");                          break;                      case 200:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "200 result didn't match expectations");                          break;                      case 250:                          expectedResult = new bool[] {true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "250 result didn't match expectations");                          break;                      case 270:                          expectedResult = new bool[] { false' false' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "270 result didn't match expectations");                          break;                      case 300:                          expectedResult = new bool[] { true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "300 result didn't match expectations");                          break;                      case 400:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "400 result didn't match expectations");                          break;                      case 500:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "500 result didn't match expectations");                          break;                      default:                          // These values should always return false for all types                          string message = string.Format("{0} result didn't match expectations"' i);                          Assert.IsFalse(currentResult.Any(c => c == true)' message);                          break;                  }
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ValidateOutputProtectionLevelValueChecks,The following statement contains a magic number: switch (i)                  {                       case 100:                          expectedResult = new bool[] {true' true' false' true' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "100 result didn't match expectations");                          break;                      case 150:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "150 result didn't match expectations");                          break;                      case 200:                          expectedResult = new bool[] {true' true' false' false' true };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "200 result didn't match expectations");                          break;                      case 250:                          expectedResult = new bool[] {true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "250 result didn't match expectations");                          break;                      case 270:                          expectedResult = new bool[] { false' false' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "270 result didn't match expectations");                          break;                      case 300:                          expectedResult = new bool[] { true' true' false' true' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "300 result didn't match expectations");                          break;                      case 400:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "400 result didn't match expectations");                          break;                      case 500:                          expectedResult = new bool[] { false' false' true' false' false };                          Assert.IsTrue(currentResult.SequenceEqual(expectedResult)' "500 result didn't match expectations");                          break;                      default:                          // These values should always return false for all types                          string message = string.Format("{0} result didn't match expectations"' i);                          Assert.IsFalse(currentResult.Any(c => c == true)' message);                          break;                  }
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,ValidateOutputProtectionLevelValueChecks,The following statement contains a magic number: i <= 550
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,SetOutputProtectionLevelValues,The following statement contains a magic number: bool[] returnValue = new bool[5];
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,SetOutputProtectionLevelValues,The following statement contains a magic number: returnValue[2] = true;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,SetOutputProtectionLevelValues,The following statement contains a magic number: returnValue[3] = true;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MediaServicesLicenseTemplateSerializerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\MediaServicesLicenseTemplateSerializerTests.cs,SetOutputProtectionLevelValues,The following statement contains a magic number: returnValue[4] = true;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,MonitoringConfigurationTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Telemetry\MonitoringConfigurationTests.cs,TestMonitoringConfiguration,The following statement contains a magic number: Assert.AreEqual(componentMonitoringSettings.Count' 2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ChannelDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelDataTest.cs,LiveEncodingUrlTest,The following statement contains a magic number: target.ShowSlateAsync(TimeSpan.FromMinutes(5)' Guid.NewGuid().ToString());
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ChannelDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelDataTest.cs,LiveEncodingUrlTest,The following statement contains a magic number: target.StartAdvertisementAsync(TimeSpan.FromMinutes(10)' 100' false);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ChannelDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelDataTest.cs,LiveEncodingUrlTest,The following statement contains a magic number: target.StartAdvertisementAsync(TimeSpan.FromMinutes(10)' 100' false);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ChannelDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelDataTest.cs,LiveEncodingUrlTest,The following statement contains a magic number: target.EndAdvertisementAsync(100);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ChannelDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelDataTest.cs,SettingsTestChannelSubProperties,The following statement contains a magic number: var input = new ChannelInput              {                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange> { new IPRange { Address = IPAddress.Parse("192.168.0.0")' SubnetPrefixLength = 24 } }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ChannelDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelDataTest.cs,MakeChannelInput,The following statement contains a magic number: return new ChannelInput              {                  KeyFrameInterval = TimeSpan.FromSeconds(2)'                  StreamingProtocol = StreamingProtocol.FragmentedMP4'                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ChannelDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelDataTest.cs,MakeChannelInput,The following statement contains a magic number: return new ChannelInput              {                  KeyFrameInterval = TimeSpan.FromSeconds(2)'                  StreamingProtocol = StreamingProtocol.FragmentedMP4'                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ChannelDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelDataTest.cs,MakeChannelPreview,The following statement contains a magic number: return new ChannelPreview              {                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName2"'                              Address = IPAddress.Parse("2.2.2.2")'                              SubnetPrefixLength = 16                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ChannelDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelDataTest.cs,MakeChannelEncoding,The following statement contains a magic number: return new ChannelEncoding              {                  SystemPreset = "Default720p"'                  AudioStreams = new List<AudioStream> { new AudioStream { Index = 103' Language = "zhn" } }.AsReadOnly()'                  VideoStreams = new List<VideoStream> { new VideoStream { Index = 104 } }.AsReadOnly()'                  IgnoreCea708ClosedCaptions = true'                  AdMarkerSource = AdMarkerSource.Api              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ChannelDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelDataTest.cs,MakeChannelEncoding,The following statement contains a magic number: return new ChannelEncoding              {                  SystemPreset = "Default720p"'                  AudioStreams = new List<AudioStream> { new AudioStream { Index = 103' Language = "zhn" } }.AsReadOnly()'                  VideoStreams = new List<VideoStream> { new VideoStream { Index = 104 } }.AsReadOnly()'                  IgnoreCea708ClosedCaptions = true'                  AdMarkerSource = AdMarkerSource.Api              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,OperationTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\OperationTests.cs,GetOperationTest,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,OperationTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\OperationTests.cs,GetOperationTest,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.Execute<OperationData>(It.IsAny<Uri>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ProgramTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ProgramTests.cs,TestProgramCreateRetryAsyn,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ProgramTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ProgramTests.cs,TestProgramCreateRetryAsyn,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,ProgramTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ProgramTests.cs,TestProgramCreateRetryAsyncAndFailed,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 100' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,RestEntityTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\RestEntityTests.cs,TestRestEntityUpdateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,RestEntityTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\RestEntityTests.cs,TestRestEntityUpdateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChanges()' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,RestEntityTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\RestEntityTests.cs,TestRestEntityDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,RestEntityTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\RestEntityTests.cs,TestRestEntityDeleteRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,RestEntityTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\RestEntityTests.cs,TestRestEntityExecuteActionAsync,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,RestEntityTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\RestEntityTests.cs,TestRestEntityExecuteActionAsync,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.Execute(It.IsAny<Uri>()' "POST")' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,RestEntityTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\RestEntityTests.cs,TestRestEntityRefresh,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,RestEntityTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\RestEntityTests.cs,TestRestEntityRefresh,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.Execute<StreamingEndpointData>(It.IsAny<Uri>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,RestEntityTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\RestEntityTests.cs,TestRestEntitySendOperation,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,RestEntityTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\RestEntityTests.cs,TestRestEntitySendOperation,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.Execute(It.IsAny<Uri>()' "POST")' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,TelemetryDataCacheTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\TelemetryDataCacheTest.cs,CachingTest,The following statement contains a magic number: Assert.AreEqual(2' uriRequestCount);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,TelemetryDataCacheTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\TelemetryDataCacheTest.cs,CachingTest,The following statement contains a magic number: Assert.AreEqual(3' uriRequestCount);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,TelemetryDataCacheTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\TelemetryDataCacheTest.cs,CachingTest,The following statement contains a magic number: Assert.AreEqual(3' uriRequestCount);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,TelemetryDataCacheTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\TelemetryDataCacheTest.cs,ExpiryTest,The following statement contains a magic number: Assert.AreEqual(2' uriRequestCount);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,TelemetryDataCacheTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\TelemetryDataCacheTest.cs,ExpiryTest,The following statement contains a magic number: Assert.AreEqual(3' uriRequestCount);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit.Live,TelemetryDataCacheTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\TelemetryDataCacheTest.cs,ExpiryTest,The following statement contains a magic number: Assert.AreEqual(3' uriRequestCount);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,TestChannelCreateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,TestChannelCreateRetry,The following statement contains a magic number: dataContextMock.Verify(ctxt => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,TestChannelCreateFailedRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,TestChannelUpdateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,TestChannelUpdateRetry,The following statement contains a magic number: dataContextMock.Verify(ctxt => ctxt.SaveChanges()' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,TestChannelDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,TestChannelDeleteRetry,The following statement contains a magic number: dataContextMock.Verify(ctxt => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,TestChannelSendDeleteOperationRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,TestChannelSendDeleteOperationRetry,The following statement contains a magic number: dataContextMock.Verify(ctxt => ctxt.SaveChanges()' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,TestChannelSendCreateOperation,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,TestChannelSendCreateOperation,The following statement contains a magic number: dataContextMock.Verify(ctxt => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,MakeChannelInput,The following statement contains a magic number: return new ChannelInput              {                  KeyFrameInterval = TimeSpan.FromSeconds(2)'                  StreamingProtocol = StreamingProtocol.FragmentedMP4'                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,MakeChannelInput,The following statement contains a magic number: return new ChannelInput              {                  KeyFrameInterval = TimeSpan.FromSeconds(2)'                  StreamingProtocol = StreamingProtocol.FragmentedMP4'                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,ChannelTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\ChannelTest.cs,MakeChannelPreview,The following statement contains a magic number: return new ChannelPreview              {                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,StreamingEndpointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\StreamingEndpointTest.cs,TestStreamingEndpointCreateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,StreamingEndpointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\StreamingEndpointTest.cs,TestStreamingEndpointCreateRetry,The following statement contains a magic number: dataContextMock.Verify(ctxt => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,StreamingEndpointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\StreamingEndpointTest.cs,TestStreamingEndpointCreateFailedRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,StreamingEndpointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\StreamingEndpointTest.cs,TestDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,StreamingEndpointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\StreamingEndpointTest.cs,TestDeleteRetry,The following statement contains a magic number: dataContextMock.Verify(ctxt => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,StreamingEndpointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\StreamingEndpointTest.cs,TestSendDeleteOperationRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,StreamingEndpointTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\StreamingEndpointTest.cs,TestSendDeleteOperationRetry,The following statement contains a magic number: dataContextMock.Verify(ctxt => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.UnitTests,StreamingEndpointDataTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\Live\StreamingEndpointDataTest.cs,SettingsTestSubProperties,The following statement contains a magic number: Assert.AreEqual(60' target.CacheControl.MaxAge.Value.TotalSeconds);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestMediaServicesClassFactoryForCustomRetryPolicy,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestAzureMediaServicesClassFactoryForCustomRetryPolicy.cs,GetSaveChangesRetryPolicy,The following statement contains a magic number: var retryPolicy = new MediaRetryPolicy(                  GetSaveChangesErrorDetectionStrategy()'                  retryCount: ConnectionSaveRetryMaxAttempts'                  initialInterval: TimeSpan.FromMilliseconds(ConnectionRetryInitialInterval)'                  increment: TimeSpan.FromMilliseconds(ConnectionRetrySleepQuantum * 16)                  );
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,InitilizeStubData,The following statement contains a magic number: AccessPolicyData accessPolicyData = new AccessPolicyData()             {                 Id = accessPolicyId'                 Name = "Mock AccessPolicy"'                 Created = DateTime.UtcNow.AddDays(-1)'                 DurationInMinutes = 10000'                 LastModified = DateTime.UtcNow'                 Permissions = (int) AccessPermissions.Read             };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.Common,TestCloudMediaDataContext,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\TestCloudMediaDataContext.cs,Execute,The following statement contains a magic number: byte[] _knownGoodContentKey = {243' 220' 162' 177' 198' 142' 141' 81' 105' 142' 159' 49' 81' 69' 132' 217' 120' 15' 170' 6' 60' 59' 211' 247' 161' 12' 210' 74' 65' 6' 142' 205};
Missing Default,Microsoft.WindowsAzure.MediaServices.Client.Tests.Unit,AssetEncryptionStateUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\unit\AssetEncryptionStateUnitTests.cs,AddTestAssetFiles,The following switch statement is missing a default case: switch (assetType)              {                  case AssetType.MP4:                      assetFile = asset.AssetFiles.Create("test.mp4");                      assetFile.IsPrimary = true;                      assetFile.Update();                        break;                  case AssetType.MediaServicesHLS:                      assetFile = asset.AssetFiles.Create("test-m3u8-aapl.ism");                        assetFile.IsPrimary = true;                      assetFile.Update();                        asset.AssetFiles.Create("test-m3u8-aapl.m3u8");                      asset.AssetFiles.Create("test-m3u8-aapl-952962.ts");                      asset.AssetFiles.Create("test-m3u8-aapl-952962.m3u8");                      asset.AssetFiles.Create("test-m3u8-aapl-952962.ismx");                      break;                  case AssetType.MultiBitrateMP4:                      assetFile = asset.AssetFiles.Create("test.ism");                      assetFile.IsPrimary = true;                      assetFile.Update();                        asset.AssetFiles.Create("test.mp4");                      break;                  case AssetType.SmoothStreaming:                      assetFile = asset.AssetFiles.Create("test.ism");                      assetFile.IsPrimary = true;                      assetFile.Update();                        asset.AssetFiles.Create("test.ismc");                      asset.AssetFiles.Create("test.ismv");                      break;                  case AssetType.Unknown:                      assetFile = asset.AssetFiles.Create("test.wmv");                      assetFile.IsPrimary = true;                      assetFile.Update();                        break;              }
