Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.AccountLoadBalancing,BlobStorageAccountMetricsExtension,F:\newReposMay17\Azure_azure-sdk-for-media-services\samples\Windows Azure Media Services .NET SDK Sample\C#\Selecting Storage Account Based On Capacity\AccountLoadBalancing\BlobStorageAccountMetricsExtension.cs,TryGetBlobUserDataCapacityMetric,The length of the statement  "	TableQuery<MetricsCapacityBlob> query = new TableQuery<MetricsCapacityBlob> ().Where (TableQuery.CombineFilters (TableQuery.GenerateFilterCondition ("PartitionKey"' QueryComparisons.GreaterThan' (fromDate.ToUniversalTime ()).ToString ("yyyyMMddTHH00"))' TableOperators.And' TableQuery.GenerateFilterCondition ("RowKey"' QueryComparisons.Equal' "data"))); " is 354.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.AccountLoadBalancing,LeastCapacityOrDefaultAccountStrategy,F:\newReposMay17\Azure_azure-sdk-for-media-services\samples\Windows Azure Media Services .NET SDK Sample\C#\Selecting Storage Account Based On Capacity\AccountLoadBalancing\LeastCapacityOrDefaultAccountStrategy.cs,SelectAccountWithLeastOccupiedSpace,The length of the statement  "		IEnumerable<Tuple<DateTime' long>> capacities = cloudStorageAccount.TryGetBlobUserDataCapacityMetric (DateTime.Now.AddDays (-2)' out enabledAnalytics); " is 151.
Long Statement,SDK.Client.Samples.LoadBalancing,StorageAccountTests,F:\newReposMay17\Azure_azure-sdk-for-media-services\samples\Windows Azure Media Services .NET SDK Sample\C#\Selecting Storage Account Based On Capacity\StorageAccountTests.cs,EnableAnalyticsForStorageAccountsAndCreateLoadBalancedAsset,The length of the statement  "	Dictionary<CloudStorageAccount' IStorageAccount> accountsMapping = StorageAccountConfigHelper.GetStorageAccountMappingFromConfig (_dataContext); " is 144.
Long Statement,SDK.Client.Samples.LoadBalancing,StorageAccountTests,F:\newReposMay17\Azure_azure-sdk-for-media-services\samples\Windows Azure Media Services .NET SDK Sample\C#\Selecting Storage Account Based On Capacity\StorageAccountTests.cs,EnableAnalyticsForStorageAccountsAndCreateLoadBalancedAsset,The length of the statement  "	//Also we confirmed with storage team that in some instances you have to create container or blob in order analytics data to start showing up " is 141.
Long Statement,SDK.Client.Samples.LoadBalancing,StorageAccountTests,F:\newReposMay17\Azure_azure-sdk-for-media-services\samples\Windows Azure Media Services .NET SDK Sample\C#\Selecting Storage Account Based On Capacity\StorageAccountTests.cs,EnableAnalyticsForStorageAccountsAndCreateLoadBalancedAsset,The length of the statement  "	mediaStorageAccount = inputStorageAccount != null ? accountsMapping [inputStorageAccount] : _dataContext.DefaultStorageAccount; " is 127.
Long Statement,SDK.Client.Samples.LoadBalancing,WindowsAzureMediaServicesTestConfiguration,F:\newReposMay17\Azure_azure-sdk-for-media-services\samples\Windows Azure Media Services .NET SDK Sample\C#\Selecting Storage Account Based On Capacity\WindowsAzureMediaServicesTestConfiguration.cs,CreateCloudMediaContext,The length of the statement  "	// It is recommended to use public CloudMediaContext(string accountName' string accountKey) in your code to avoid code changes if default values will be changed later " is 166.
Long Statement,SDK.Client.Samples.LoadBalancing,WindowsAzureMediaServicesTestConfiguration,F:\newReposMay17\Azure_azure-sdk-for-media-services\samples\Windows Azure Media Services .NET SDK Sample\C#\Selecting Storage Account Based On Capacity\WindowsAzureMediaServicesTestConfiguration.cs,CreateCloudMediaContext,The length of the statement  "	return new CloudMediaContext (new Uri (MediaServicesUri)' MediaServiceAccountName' MediaServiceAccountKey' MediaServicesAccessScope' MediaServicesAcsBaseAddress); " is 162.
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.AccountLoadBalancing,LeastCapacityOrDefaultAccountStrategy,F:\newReposMay17\Azure_azure-sdk-for-media-services\samples\Windows Azure Media Services .NET SDK Sample\C#\Selecting Storage Account Based On Capacity\AccountLoadBalancing\LeastCapacityOrDefaultAccountStrategy.cs,SelectAccountWithLeastOccupiedSpace,The following statement contains a magic number: foreach (CloudStorageAccount cloudStorageAccount in accounts) {  	bool enabledAnalytics = false;  	bool metricsTableExists = cloudStorageAccount.MetricsTableExists ();  	//Selecting available capacity metrics for last 2 days   	IEnumerable<Tuple<DateTime' long>> capacities = cloudStorageAccount.TryGetBlobUserDataCapacityMetric (DateTime.Now.AddDays (-2)' out enabledAnalytics);  	if (capacities != null) {  		var capacitiesList = capacities.ToList ();  		if (capacitiesList.Count > 0) {  			accountsWithMetrics.Add (cloudStorageAccount' capacitiesList.OrderBy (c => c.Item1).Last ().Item2);  		}  	} else {  		if (metricsTableExists) {  			_selectionResults.Add (cloudStorageAccount' AccountSelectionStrategyStatus.AnalyticsDataIsOutofDate);  		} else {  			_selectionResults.Add (cloudStorageAccount' AccountSelectionStrategyStatus.NoAnalyticsData);  		}  	}  }  
