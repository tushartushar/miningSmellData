Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,WaitForJob,Cyclomatic complexity of the method is 9
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,AddCombinations,The method has 5 parameters. Parameters: output' protocolsToCombineList' workingStack' offset' length
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,VerifyAndDownloadAssetFileNTimes,The method has 6 parameters. Parameters: assetFile' asset' count' expirationTime' cleanOutputDirectory' expectFailure
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,CreateOption,The method has 6 parameters. Parameters: dataContext' optionName' deliveryType' requirements' configuration' restrictionType
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelHeartbeatEntity,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,ChannelHeartbeatEntity,The method has 17 parameters. Parameters: partitionKey' rowKey' observedTime' customAttributes' trackType' trackName' bitrate' incomingBitrate' overlapCount' discontinuityCount' lastTimestamp' serviceId' nonincreasingCount' unalignedKeyFrames' unalignedPresentationTime' unexpectedBitrate' healthy
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndPointRequestLogEntity,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,StreamingEndPointRequestLogEntity,The method has 11 parameters. Parameters: partitionKey' rowKey' serviceId' observedTime' hostName' statusCode' resultCode' requestCount' bytesSent' serverLatency' endToEndLatency
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,CreateAndSubmitOneTaskJob,The method has 6 parameters. Parameters: context' name' mediaProcessor' preset' asset' options
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The method has 5 parameters. Parameters: asset' expectedFileCount' inputFile' inputFileValidation' performStorageSdkDownloadVerification
Long Parameter List,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The method has 5 parameters. Parameters: asset' expectedFileCount' inputStream' inputFileValidation' performStorageSdkDownloadVerification
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests,EncodingReservedUnitDataTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\EncodingReservedUnitDataTests.cs,UpdateAsyncBasicReservedEncodingUnitToOneRU,The length of the parameter initialEncodingReservedUnitType is 31.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReceiveNotificationsForCompeletedJob,The length of the parameter lastJobNotificationSubscription is 31.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The length of the parameter performStorageSdkDownloadVerification is 37.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The length of the parameter performStorageSdkDownloadVerification is 37.
Long Identifier,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The length of the parameter hashValueForStorageSdkDownload is 30.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.AadAuthentication,AadAuthenticationE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AadAuthentication\AadAuthenticationE2ETests.cs,TestServicePrincipalWithClientSymmetricKey,The length of the statement  "            var tokenCredentials = new AzureAdTokenCredentials(ConfigurationManager.AppSettings["UserTenant"]' new AzureAdClientSymmetricKey(clientId' clientSecret)' environment); " is 167.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.AadAuthentication,AadAuthenticationE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AadAuthentication\AadAuthenticationE2ETests.cs,TestServicePrincipalWithClientCertificate,The length of the statement  "            var tokenCredentials = new AzureAdTokenCredentials(ConfigurationManager.AppSettings["UserTenant"]' new AzureAdClientCertificate(clientId' clientCertificateThumbprint)' environment); " is 181.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,SetupTest,The length of the statement  "            _smallWmv = WindowsAzureMediaServicesTestConfiguration.GetVideoSampleFilePath(TestContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithDefaultPresentationTimeRangeAndEmptyFilterTrackSelectStatement,The length of the statement  "            IStreamingFilter filter = _mediaContext.Filters.Create(filterName' new PresentationTimeRange()' new List<FilterTrackSelectStatement>()); " is 136.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithAllSelectStatements,The length of the statement  "            filterTrackSelectStatement.PropertyConditions.Add(new FilterTrackNameCondition("Track Name"'FilterTrackCompareOperator.NotEqual)); " is 130.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithAllSelectStatements,The length of the statement  "            filterTrackSelectStatement.PropertyConditions.Add(new FilterTrackFourCCCondition("mp4a"' FilterTrackCompareOperator.NotEqual)); " is 127.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithAllSelectStatements,The length of the statement  "            filterTrackSelectStatement.PropertyConditions.Add(new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(0'1)' FilterTrackCompareOperator.NotEqual)); " is 159.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithAllSelectStatements,The length of the statement  "            filterTrackSelectStatement.PropertyConditions.Add(new FilterTrackLanguageCondition("ru"' FilterTrackCompareOperator.NotEqual)); " is 127.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithAllSelectStatements,The length of the statement  "            filterTrackSelectStatement.PropertyConditions.Add(new FilterTrackTypeCondition(FilterTrackType.Text' FilterTrackCompareOperator.NotEqual)); " is 139.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithAllSelectStatements,The length of the statement  "            IStreamingFilter filter = _mediaContext.Filters.Create(filterName' new PresentationTimeRange()' filterTrackSelectStatements); " is 125.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithAllSelectStatements,The length of the statement  "            Assert.AreEqual(5' _mediaContext.Filters.Where(c => c.Name == filter.Name).First().Tracks.First().PropertyConditions.Count); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithAllSelectStatements,The length of the statement  "            Assert.AreEqual(5' _mediaContext.Filters.Where(c => c.Name == filter.Name).First().Tracks.First().PropertyConditions.Count); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,InvalidFilterTrackLanguageConditionShouldThrow,The length of the statement  "            filterTrackSelectStatement.PropertyConditions.Add(new FilterTrackLanguageCondition("expecting language validation here"' FilterTrackCompareOperator.NotEqual)); " is 159.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,InvalidFilterTrackLanguageConditionShouldThrow,The length of the statement  "            IStreamingFilter filter = _mediaContext.Filters.Create(filterName' new PresentationTimeRange()' filterTrackSelectStatements); " is 125.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,InvalidFourCCConditionShouldThrow,The length of the statement  "            filterTrackSelectStatement.PropertyConditions.Add(new FilterTrackFourCCCondition("FourCCCondition validation here"' FilterTrackCompareOperator.NotEqual)); " is 154.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,InvalidFourCCConditionShouldThrow,The length of the statement  "            IStreamingFilter filter = _mediaContext.Filters.Create(filterName' new PresentationTimeRange()' filterTrackSelectStatements); " is 125.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CRUDAssetFilter,The length of the statement  "            IStreamingAssetFilter filter = asset.AssetFilters.Create(filterName' new PresentationTimeRange()' new List<FilterTrackSelectStatement>()); " is 138.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The length of the statement  "            IAsset inputAsset = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallMp41' AssetCreationOptions.None); " is 139.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The length of the statement  "            IMediaProcessor mediaProcessor = JobTests.GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpPackagerName); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The length of the statement  "            IJob job = JobTests.CreateAndSubmitOneTaskJob(_mediaContext' "ApplyDynamicManifestFilter" + Guid.NewGuid().ToString().Substring(0' 5)' mediaProcessor' configuration' inputAsset' TaskOptions.None); " is 196.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The length of the statement  "            IAccessPolicy policy = _mediaContext.AccessPolicies.Create("ApplyDynamicManifestFilter" + Guid.NewGuid().ToString().Substring(0' 5)' TimeSpan.FromDays(30)' AccessPermissions.Read); " is 180.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The length of the statement  "            ILocator originLocator = _mediaContext.Locators.CreateLocator(LocatorType.OnDemandOrigin' outputAsset' policy' DateTime.UtcNow.AddMinutes(-5)); " is 143.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The length of the statement  "            filterTrackSelectStatement.PropertyConditions.Add(new FilterTrackTypeCondition(FilterTrackType.Video' FilterTrackCompareOperator.NotEqual)); " is 140.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The length of the statement  "            IStreamingFilter filter = _mediaContext.Filters.Create(filterName' new PresentationTimeRange()' filterTrackSelectStatements); " is 125.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The length of the statement  "            var filterUrlForClientStreaming = originLocator.Path + assetFile.Name + String.Format("/manifest(filter={0})"'filterName); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,TestGetEncryptionState,The length of the statement  "            AssetDeliveryProtocol protocolsToSet = AssetDeliveryProtocol.HLS | AssetDeliveryProtocol.SmoothStreaming | AssetDeliveryProtocol.Dash; " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,TestGetEncryptionState,The length of the statement  "            Dictionary<AssetDeliveryPolicyConfigurationKey' string> configuration = new Dictionary<AssetDeliveryPolicyConfigurationKey' string>() " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,TestGetEncryptionState,The length of the statement  "                {AssetDeliveryPolicyConfigurationKey.EnvelopeEncryptionIVAsBase64' Convert.ToBase64String(ContentKeyTests.GetRandomBuffer(16))} " is 127.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,TestGetEncryptionState,The length of the statement  "            IAssetDeliveryPolicy policy = _mediaContext.AssetDeliveryPolicies.Create("Test Policy"' AssetDeliveryPolicyType.DynamicEnvelopeEncryption' protocolsToSet' configuration); " is 170.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,TestGetEncryptionState,The length of the statement  "            IContentKey key = _mediaContext.ContentKeys.Create(Guid.NewGuid()' ContentKeyTests.GetRandomBuffer(16)' "Test key"' ContentKeyType.EnvelopeEncryption); " is 151.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfMP4,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallMp41' AssetCreationOptions.None); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfStorageEncryptedMP4,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallMp41' AssetCreationOptions.StorageEncrypted); " is 146.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfWmv,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv' AssetCreationOptions.None); " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfStorageEncryptedWmv,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv' AssetCreationOptions.StorageEncrypted); " is 145.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfMultiBitRateMP4,The length of the statement  "            SetupEnvelopePolicy(asset' AssetDeliveryProtocol.HLS | AssetDeliveryProtocol.Dash | AssetDeliveryProtocol.SmoothStreaming); " is 123.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfStorageEncryptedMultiBitRateMP4,The length of the statement  "            List<TestCase> testCases = GetTestsCasesForProtocolCombination(protocolsToTest' AssetEncryptionState.StorageEncryptedWithNoDeliveryPolicy); " is 139.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfSmooth,The length of the statement  "            SetupCommonPolicy(asset' AssetDeliveryProtocol.HLS | AssetDeliveryProtocol.Dash | AssetDeliveryProtocol.SmoothStreaming); " is 121.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfPlayReadyProtectedSmooth,The length of the statement  "            ValidateAssetEncryptionState(playReadyProtectedSmoothAsset' protocolsToTest' AssetEncryptionState.StaticCommonEncryption); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfStorageEncryptedSmooth,The length of the statement  "            List<TestCase> testCases = GetTestsCasesForProtocolCombination(protocolsToTest' AssetEncryptionState.StorageEncryptedWithNoDeliveryPolicy); " is 139.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfPlayReadyProtectedHls,The length of the statement  "            IAsset playReadyProtectedHls = CreateHlsFromSmoothAsset(playReadyProtectedSmoothAsset' AssetCreationOptions.CommonEncryptionProtected); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfPlayReadyProtectedHls,The length of the statement  "            ValidateAssetEncryptionState(playReadyProtectedHls' AssetDeliveryProtocol.HLS' AssetEncryptionState.StaticCommonEncryption); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfStorageEncryptedHls,The length of the statement  "            List<TestCase> testCases = GetTestsCasesForProtocolCombination(protocolsToTest' AssetEncryptionState.StorageEncryptedWithNoDeliveryPolicy); " is 139.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfSimulatedLiveStream,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallIsm' AssetCreationOptions.None); " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfSimulatedLiveStream,The length of the statement  "            SetupCommonPolicy(asset' AssetDeliveryProtocol.HLS | AssetDeliveryProtocol.Dash | AssetDeliveryProtocol.SmoothStreaming); " is 121.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfStorageEncryptedSimulatedLiveStream,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallIsm' AssetCreationOptions.StorageEncrypted); " is 145.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,ValidateEffectiveEncryptionStatusOfStorageEncryptedSimulatedLiveStream,The length of the statement  "            List<TestCase> testCases = GetTestsCasesForProtocolCombination(protocolsToTest' AssetEncryptionState.StorageEncryptedWithNoDeliveryPolicy); " is 139.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,SetupClearPolicy,The length of the statement  "            IAssetDeliveryPolicy policy = _mediaContext.AssetDeliveryPolicies.Create("Clear Policy"' AssetDeliveryPolicyType.NoDynamicEncryption' protocol' null); " is 150.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,SetupEnvelopePolicy,The length of the statement  "            IContentKey key = _mediaContext.ContentKeys.Create(Guid.NewGuid()' ContentKeyTests.GetRandomBuffer(16)' "Envelope Encryption Key"' ContentKeyType.EnvelopeEncryption); " is 166.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,SetupEnvelopePolicy,The length of the statement  "            Dictionary<AssetDeliveryPolicyConfigurationKey' string> config = new Dictionary<AssetDeliveryPolicyConfigurationKey' string>() " is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,SetupEnvelopePolicy,The length of the statement  "                {AssetDeliveryPolicyConfigurationKey.EnvelopeEncryptionIVAsBase64' Convert.ToBase64String(Guid.NewGuid().ToByteArray())} // TODO: Remove this once no IV is supported " is 165.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,SetupEnvelopePolicy,The length of the statement  "            IAssetDeliveryPolicy policy = _mediaContext.AssetDeliveryPolicies.Create("Clear Policy"' AssetDeliveryPolicyType.DynamicEnvelopeEncryption' protocol' config); " is 158.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,SetupCommonPolicy,The length of the statement  "            IContentKey key = _mediaContext.ContentKeys.Create(Guid.NewGuid()' ContentKeyTests.GetRandomBuffer(16)' "Common Encryption Key"' ContentKeyType.CommonEncryption); " is 162.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,SetupCommonPolicy,The length of the statement  "            Dictionary<AssetDeliveryPolicyConfigurationKey' string> config = new Dictionary<AssetDeliveryPolicyConfigurationKey' string>() " is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,SetupCommonPolicy,The length of the statement  "            IAssetDeliveryPolicy policy = _mediaContext.AssetDeliveryPolicies.Create("Clear Policy"' AssetDeliveryPolicyType.DynamicCommonEncryption' protocol' config); " is 156.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,CreateMbrMp4Asset,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallMp41' AssetCreationOptions.None); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,CreatePlayReadyProtectedSmoothAsset,The length of the statement  "            string encryptionConfiguration = File.ReadAllText(WindowsAzureMediaServicesTestConfiguration.PlayReadyConfigWithContentKey); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,CreatePlayReadyProtectedSmoothAsset,The length of the statement  "            encryptionConfiguration = JobTests.UpdatePlayReadyConfigurationXML(keyId' keyValue' new Uri("http://www.fakeurl.com")' encryptionConfiguration); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,CreatePlayReadyProtectedSmoothAsset,The length of the statement  "            IMediaProcessor mediaProcessor = JobTests.GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncryptorName); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,CreatePlayReadyProtectedSmoothAsset,The length of the statement  "            ITask task = job.Tasks.AddNew("PlayReady Encryption Task"' mediaProcessor' encryptionConfiguration' TaskOptions.ProtectedConfiguration); " is 136.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,CreateHlsFromSmoothAsset,The length of the statement  "            IMediaProcessor mediaProcessor = JobTests.GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncryptorName); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,CreateHlsFromSmoothAsset,The length of the statement  "            ITask task = job.Tasks.AddNew("Smooth to Hls conversion task"' mediaProcessor' smoothToHlsConfiguration' TaskOptions.None); " is 123.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,GetAllCombinationsOfDeliveryProtocol,The length of the statement  "            //  Split the flags enumeration into single flag values.  Meaning if they pass in (AssetDeliveryProtocol.Dash | AssetDeliveryProtocol.HLS) " is 138.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,GetAllCombinationsOfDeliveryProtocol,The length of the statement  "            //  then return a list with two entries ([0] = AssetDeliveryProtocol.Dash' [1] = AssetDeliveryProtocol.HLS).  Used as input to create " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,UpdateTestCasesForAddedPolicy,The length of the statement  "                IAssetDeliveryPolicy policy = policies.Where(p => p.AssetDeliveryProtocol.HasFlag(testCase.ProtocolsToTest)).SingleOrDefault(); " is 127.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,ShouldCancelDownloadToFileAsyncTaskAfter50Milliseconds,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' Path.GetFullPath(fileUploaded)' AssetCreationOptions.StorageEncrypted); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,ShouldCancelDownloadToFileAsyncTaskAfter50Milliseconds,The length of the statement  "            IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("SdkDownload"' TimeSpan.FromHours(12)' AccessPermissions.Read); " is 128.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,CreateEnvelopePolicy,The length of the statement  "            Assert.AreEqual(acquisitionUrl' check.AssetDeliveryConfiguration[AssetDeliveryPolicyConfigurationKey.EnvelopeKeyAcquisitionUrl]); " is 129.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,CreatePlayReadyPolicy,The length of the statement  "            Assert.AreEqual(acquisitionUrl' check.AssetDeliveryConfiguration[AssetDeliveryPolicyConfigurationKey.PlayReadyLicenseAcquisitionUrl]); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,AssetDeliveryPolicyTestConfiguration,The length of the statement  "                Assert.AreEqual(check.AssetDeliveryConfiguration[AssetDeliveryPolicyConfigurationKey.PlayReadyLicenseAcquisitionUrl]' "http://keyDelivery.com"); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,AssetDeliveryPolicyTestConfiguration,The length of the statement  "                Assert.AreEqual(check.AssetDeliveryConfiguration[AssetDeliveryPolicyConfigurationKey.UnencryptedTracksByFourCC]' "mp4a"); " is 121.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,EnvelopeAssetDeliveryPolicyTestAttach,The length of the statement  "            var contentKey = _mediaContext.ContentKeys.Create(Guid.NewGuid()' GetRandomData(16)' "Content Key for EnvelopeAssetDeliveryPolicyTestAttach"' ContentKeyType.EnvelopeEncryption); " is 177.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,ProgressiveAssetDeliveryPolicyTestAttach,The length of the statement  "           IAssetDeliveryPolicy policy = _mediaContext.AssetDeliveryPolicies.Create(""' AssetDeliveryPolicyType.NoDynamicEncryption'AssetDeliveryProtocol.ProgressiveDownload'null); " is 169.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,PlayReadyAssetDeliveryPolicyTestAttach,The length of the statement  "            var contentKey = _mediaContext.ContentKeys.Create(Guid.NewGuid()' GetRandomData(16)' "Content Key for PlayReadyAssetDeliveryPolicyTestAttach"' ContentKeyType.CommonEncryption); " is 176.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,FailToAttachPolicyIfCommonContentKeyNotPresent,The length of the statement  "            var asset = _mediaContext.Assets.Create("Asset for FailToAttachPolicyIfCommonContentKeyNotPresent"' AssetCreationOptions.None); " is 127.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,FailToAttachPolicyIfCommonContentKeyNotPresent,The length of the statement  "                Assert.IsTrue(e.ToString().Contains("Cannot set an AssetDeliveryPolicy specifying AssetDeliveryPolicyType.DynamicCommonEncryption when no ContentKey with ContentKeyType.CommonEncryption is linked to it")); " is 205.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,FailToAttachPolicyIfRequiredEnvelopeKeyNotPresent,The length of the statement  "            var asset = _mediaContext.Assets.Create("Asset for FailToAttachPolicyIfRequiredEnvelopeKeyNotPresent"' AssetCreationOptions.None); " is 130.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,FailToAttachPolicyIfRequiredEnvelopeKeyNotPresent,The length of the statement  "                Assert.IsTrue(e.ToString().Contains("Cannot set an AssetDeliveryPolicy specifying AssetDeliveryPolicyType.DynamicEnvelopeEncryption when no ContentKey with ContentKeyType.EnvelopeEncryption is linked to it")); " is 209.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,TestAssetDeliveryPolicyCreateRetry,The length of the statement  "            var task = _mediaContext.AssetDeliveryPolicies.CreateAsync(expected.Name' AssetDeliveryPolicyType.None' AssetDeliveryProtocol.None' null); " is 138.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,TestAssetDeliveryPolicyCreateFailedRetry,The length of the statement  "                _mediaContext.AssetDeliveryPolicies.CreateAsync(expected.Name' AssetDeliveryPolicyType.None' AssetDeliveryProtocol.None' null).Wait(); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,TestAssetDeliveryPolicyCreateFailedRetryMessageLengthLimitExceeded,The length of the statement  "                _mediaContext.AssetDeliveryPolicies.CreateAsync(expected.Name' AssetDeliveryPolicyType.None' AssetDeliveryProtocol.None' null).Wait(); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,SetupTest,The length of the statement  "            tokenRestrictionTemplate.PrimaryVerificationKey = new SymmetricVerificationKey(); // the default constructor automatically generates a random key " is 145.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,SetupTest,The length of the statement  "            _testOption = CreateOption(_mediaContext' optionName' ContentKeyDeliveryType.PlayReadyLicense' requirements' configuration' restrictionType); " is 141.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,ContentKeyAuthorizationPolicyOptionTestEnumQuery,The length of the statement  "            IContentKeyAuthorizationPolicyOption option = CreateOption(_mediaContext' optionName' ContentKeyDeliveryType.PlayReadyLicense' requirements' configuration' restrictionType); " is 173.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,TestContentKeyAuthorizationPolicyOptionCreateRetry,The length of the statement  "            IContentKeyAuthorizationPolicyOption actual = _mediaContext.ContentKeyAuthorizationPolicyOptions.Create("Empty"' ContentKeyDeliveryType.None' null' null); " is 154.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,TestContentKeyAuthorizationPolicyOptionCreateFailedRetry,The length of the statement  "                IContentKeyAuthorizationPolicyOption actual = _mediaContext.ContentKeyAuthorizationPolicyOptions.Create("Empty"' ContentKeyDeliveryType.None' null' null); " is 154.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,TestContentKeyAuthorizationPolicyOptionCreateFailedRetryMessageLengthLimitExceeded,The length of the statement  "                IContentKeyAuthorizationPolicyOption actual = _mediaContext.ContentKeyAuthorizationPolicyOptions.Create("Empty"' ContentKeyDeliveryType.None' null' null); " is 154.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,FilterPolicyById,The length of the statement  "            IContentKeyAuthorizationPolicy policy = _mediaContext.ContentKeyAuthorizationPolicies.Where(p => p.Id == "nb:ckpid:UUID:" + Guid.NewGuid().ToString()).FirstOrDefault(); " is 168.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,FilterPolicyByName,The length of the statement  "            IContentKeyAuthorizationPolicy policy = _mediaContext.ContentKeyAuthorizationPolicies.Where(p => p.Name == testRun).FirstOrDefault(); " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,AddingOptionsToCreatedPolicy,The length of the statement  "            tokenRestrictionTemplate.PrimaryVerificationKey = new SymmetricVerificationKey(); // the default constructor automatically generates a random key " is 145.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,AddingOptionsToCreatedPolicy,The length of the statement  "            var option1 = ContentKeyAuthorizationPolicyOptionTests.CreateOption(_mediaContext' optionName' ContentKeyDeliveryType.PlayReadyLicense' requirements' configuration' restrictionType); " is 182.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,TestCreateFairPlayAuthorizationPolicy,The length of the statement  "            IContentKey pfxPasswordKey = _mediaContext.ContentKeys.Create(pfxPasswordId' pfxPasswordBytes' "pfxPasswordKey"' ContentKeyType.FairPlayPfxPassword); " is 149.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,TestCreateFairPlayAuthorizationPolicy,The length of the statement  "            var contentKeyAuthorizationPolicy = _mediaContext.ContentKeyAuthorizationPolicies.CreateAsync("Key no restrictions").Result; " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetPlayReadyLicenseDeliveryUrl,The length of the statement  "                policyOption = ContentKeyAuthorizationPolicyOptionTests.CreateOption(_mediaContext' String.Empty' ContentKeyDeliveryType.PlayReadyLicense' null' licenseTemplate' ContentKeyRestrictionType.Open); " is 194.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetPlayReadyLicenseDeliveryUrl,The length of the statement  "                Assert.IsTrue(0 == String.Compare(keyDeliveryServiceUri.AbsolutePath' "/PlayReady/"' StringComparison.OrdinalIgnoreCase)); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetHlsKeyDeliveryUrlAndFetchKey,The length of the statement  "                policyOption = ContentKeyAuthorizationPolicyOptionTests.CreateOption(_mediaContext' String.Empty' ContentKeyDeliveryType.BaselineHttp' null' null' ContentKeyRestrictionType.Open); " is 179.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetHlsKeyDeliveryUrlAndFetchKey,The length of the statement  "                byte[] key = keyClient.AcquireHlsKeyWithBearerHeader(keyDeliveryServiceUri' TokenServiceClient.GetAuthTokenForKey(rawkey)); " is 123.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetWidevineKeyDeliveryUrlAndFetchLicense,The length of the statement  "                policyOption = ContentKeyAuthorizationPolicyOptionTests.CreateOption(_mediaContext' String.Empty' ContentKeyDeliveryType.Widevine' null' "{}"' ContentKeyRestrictionType.Open); " is 175.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetWidevineKeyDeliveryUrlAndFetchLicense,The length of the statement  "                string payload = "CAEShAEKTAgAEkgAAAACAAAQWPXbhtb/q43f3SfuC2VP3q0jeAECW3emQkWn2wXCYVOnvlWPDNqh8VVIB4GmsNA8eVVFigXkQWIGN0GlgMKjpUESLAoqChQIARIQJMPCzl2bViyMQEtyK/gtmRABGhAyNWY3ODMzMTcyMmJjM2EyGAEgv5iQkAUaIC3ON1zVgeV0rP7w2VmVLGorqClcMQO4BdbHPyk3GsnY"; " is 248.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetWidevineKeyDeliveryUrlAndFetchLicenseWithPolicy,The length of the statement  "                string payload = "CAEShAEKTAgAEkgAAAACAAAQWPXbhtb/q43f3SfuC2VP3q0jeAECW3emQkWn2wXCYVOnvlWPDNqh8VVIB4GmsNA8eVVFigXkQWIGN0GlgMKjpUESLAoqChQIARIQJMPCzl2bViyMQEtyK/gtmRABGhAyNWY3ODMzMTcyMmJjM2EyGAEgv5iQkAUaIC3ON1zVgeV0rP7w2VmVLGorqClcMQO4BdbHPyk3GsnY"; " is 248.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetHlsKeyDeliveryUrlAndFetchKeyWithADJWTAuthUsingADOpenConnectDiscovery,The length of the statement  "                contentKey = CreateTestKey(_mediaContext' ContentKeyType.EnvelopeEncryption' out expectedKey' "GetHlsKeyDeliveryUrlAndFetchKeyWithADJWTAuthUsingADOpenConnectDiscovery"+Guid.NewGuid().ToString()); " is 195.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetHlsKeyDeliveryUrlAndFetchKeyWithADJWTAuthUsingADOpenConnectDiscovery,The length of the statement  "                tokenRestrictionTemplate.OpenIdConnectDiscoveryDocument = new OpenIdConnectDiscoveryDocument("https://login.windows.net/common/.well-known/openid-configuration"); " is 162.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetHlsKeyDeliveryUrlAndFetchKeyWithADJWTAuthUsingADOpenConnectDiscovery,The length of the statement  "                policyOption = ContentKeyAuthorizationPolicyOptionTests.CreateOption(_mediaContext' optionName' ContentKeyDeliveryType.BaselineHttp' requirements' null' ContentKeyRestrictionType.TokenRestricted); " is 196.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,EnsurePlayReadyLicenseDeliveryUrlForEnvelopeKeyFails,The length of the statement  "                policyOption = ContentKeyAuthorizationPolicyOptionTests.CreateOption(_mediaContext' String.Empty' ContentKeyDeliveryType.BaselineHttp' null' null' ContentKeyRestrictionType.Open); " is 179.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,EnsureEnvelopeKeyDeliveryUrlForCommonKeyFails,The length of the statement  "                policyOption = ContentKeyAuthorizationPolicyOptionTests.CreateOption(_mediaContext' String.Empty' ContentKeyDeliveryType.PlayReadyLicense' null' licenseTemplate' ContentKeyRestrictionType.Open); " is 194.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,EnsureNoneKeyDeliveryUrlFails,The length of the statement  "                policyOption = ContentKeyAuthorizationPolicyOptionTests.CreateOption(_mediaContext' String.Empty' ContentKeyDeliveryType.BaselineHttp' null' null' ContentKeyRestrictionType.Open); " is 179.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,CreateTestPolicy,The length of the statement  "            IContentKeyAuthorizationPolicy contentKeyAuthorizationPolicy = mediaContext.ContentKeyAuthorizationPolicies.CreateAsync(name).Result; " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,EncodingReservedUnitDataTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\EncodingReservedUnitDataTests.cs,ReservedUnitCollectionShouldNotBeNullOrEmpty,The length of the statement  "            Assert.IsTrue(encodingReservedUnits.FirstOrDefault().CurrentReservedUnits <= encodingReservedUnits.FirstOrDefault().MaxReservableUnits); " is 136.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,EncodingReservedUnitDataTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\EncodingReservedUnitDataTests.cs,UpdateBasicToStandardReservedUnitType,The length of the statement  "                encodingBasicReservedUnit = _dataContext.EncodingReservedUnits.Where(c => c.ReservedUnitType == ReservedUnitType.Basic).FirstOrDefault(); " is 137.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,EncodingReservedUnitDataTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\EncodingReservedUnitDataTests.cs,UpdateBasicToStandardReservedUnitType,The length of the statement  "                encodingBasicReservedUnit = _dataContext.EncodingReservedUnits.Where(c => c.ReservedUnitType == ReservedUnitType.Standard).FirstOrDefault(); " is 140.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,EncodingReservedUnitDataTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\EncodingReservedUnitDataTests.cs,UpdateBasicToStandardReservedUnitType,The length of the statement  "                encodingBasicReservedUnit = _dataContext.EncodingReservedUnits.Where(c => c.ReservedUnitType == initialReserveUnitType).FirstOrDefault(); " is 137.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,EncodingReservedUnitDataTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\EncodingReservedUnitDataTests.cs,UpdateAsyncBasicReservedEncodingUnitToOneRU,The length of the statement  "            encodingBasicReservedUnit = _dataContext.EncodingReservedUnits.Where(c => c.ReservedUnitType == ReservedUnitType.Basic).FirstOrDefault(); " is 137.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileWithEncryption,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' Path.GetFullPath(WindowsAzureMediaServicesTestConfiguration.SmallWmv)' AssetCreationOptions.StorageEncrypted); " is 163.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileWithEncryption,The length of the statement  "            Assert.IsTrue(asset.Options == AssetCreationOptions.StorageEncrypted' "AssetCreationOptions did not have the expected value"); " is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileArrayWithEncryption,The length of the statement  "            var filePaths = new[] { WindowsAzureMediaServicesTestConfiguration.SmallWmv' WindowsAzureMediaServicesTestConfiguration.SmallWmv2 }; " is 132.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileArrayWithEncryption,The length of the statement  "            Assert.IsTrue(asset.Options == AssetCreationOptions.StorageEncrypted' "AssetCreationOptions did not have the expected value"); " is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileWithPlayReadyEncryption,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' Path.GetFullPath(WindowsAzureMediaServicesTestConfiguration.SmallWmv)' AssetCreationOptions.CommonEncryptionProtected); " is 172.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileWithPlayReadyEncryption,The length of the statement  "            Assert.IsTrue(asset.Options == AssetCreationOptions.CommonEncryptionProtected' "AssetCreationOptions did not have the expected value"); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileArrayWithPlayReadyEncryption,The length of the statement  "            foreach (string filePath in new[] { WindowsAzureMediaServicesTestConfiguration.SmallWmv' WindowsAzureMediaServicesTestConfiguration.SmallWmv2 }) " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileArrayWithPlayReadyEncryption,The length of the statement  "            Assert.IsTrue(asset.Options == AssetCreationOptions.CommonEncryptionProtected' "AssetCreationOptions did not have the expected value"); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateStorageEncryptionKey,The length of the statement  "                key = _mediaContext.ContentKeys.Create(keyId' contentKeyBytes' "TestStorageEncryptionKey"' ContentKeyType.StorageEncryption); " is 125.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateTaskUsingStorageEncryptedAsset,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' Path.GetFullPath(WindowsAzureMediaServicesTestConfiguration.SmallWmv)' AssetCreationOptions.StorageEncrypted); " is 163.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldGetClearConfigurationFromTask,The length of the statement  "            var filePaths = new[] { WindowsAzureMediaServicesTestConfiguration.SmallIsm' WindowsAzureMediaServicesTestConfiguration.SmallIsmc' WindowsAzureMediaServicesTestConfiguration.SmallIsmv }; " is 186.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldGetClearConfigurationFromTask,The length of the statement  "            IMediaProcessor processor = JobTests.GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncryptorName); " is 130.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldGetClearConfigurationFromTask,The length of the statement  "            ITask task = job.Tasks.AddNew("SmoothProtectTask"' processor' originalConfiguration' TaskOptions.ProtectedConfiguration); " is 121.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldGetClearConfigurationFromTask,The length of the statement  "            // Verify that we can get the configuration back before we create a job template.  Note that is the point that things actually get encrypted " is 140.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldDeleteAssetWithCommonEncryptionContentKey,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' Path.GetFullPath(WindowsAzureMediaServicesTestConfiguration.SmallWmv)' AssetCreationOptions.CommonEncryptionProtected); " is 172.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldDeleteAssetWithStorageEncryptionContentKey,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' Path.GetFullPath(WindowsAzureMediaServicesTestConfiguration.SmallWmv)' AssetCreationOptions.StorageEncrypted); " is 163.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldDeleteAssetWithStorageEncryptionContentKey,The length of the statement  "                Assert.IsFalse(fileFromRest.Id == fileId' "Asset was deleted we should not be able to query its associated File by identifier."); " is 129.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldDeleteAssetWithStorageEncryptionContentKey,The length of the statement  "                Assert.IsFalse(keyFromRest.Id == keyId' "Asset was deleted we should not be able to query its associated storage encryption key by identifier."); " is 145.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,VerifyContentKeyExists,The length of the statement  "            Assert.IsTrue(keyFound' "The expected key identifier was not found in the IAsset.ContentKeys collection queried from the server."); " is 131.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,VerifyEncryptionSettingsMatch,The length of the statement  "            Assert.IsTrue(fileFound' "The expected file identifier was not found in the IAsset.Files collection queried from the server."); " is 127.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,VerifyFileAndContentKeyMetadataForStorageEncryption,The length of the statement  "                Assert.IsTrue(file.EncryptionScheme == FileEncryption.SchemeName' "EncryptionScheme does not match expected value" + fileInfo); " is 127.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,VerifyFileAndContentKeyMetadataForStorageEncryption,The length of the statement  "                Assert.IsTrue(file.EncryptionVersion == FileEncryption.SchemeVersion' "EncryptionVersion does not match expected" + fileInfo); " is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,EnsureBufferTransformed,The length of the statement  "                throw new ArgumentException("It is acceptable for some bytes to match in an encrypted data buffer but the percentage should be very small.  Further investigation needed."); " is 172.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,VerifyStorageEncryptionOnFiles,The length of the statement  "            Assert.IsTrue(asset.AssetFiles.Count() == originalFilePaths.Length' "The number of files on the asset does not match the expected number."); " is 140.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetChannelMetricsTest,The length of the statement  "                new StorageCredentials(WindowsAzureMediaServicesTestConfiguration.TelemetryStorageAccountName' WindowsAzureMediaServicesTestConfiguration.TelemetryStorageAccountKey)' " is 166.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,StreamingEndpointMetricsTest,The length of the statement  "                new StorageCredentials(WindowsAzureMediaServicesTestConfiguration.TelemetryStorageAccountName' WindowsAzureMediaServicesTestConfiguration.TelemetryStorageAccountKey)' " is 166.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,NotificationEndPointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\NotificationEndPointTests.cs,TestNotificationEndPointCreateRetry,The length of the statement  "            INotificationEndPoint actual = _mediaContext.NotificationEndPoints.Create("Empty"' NotificationEndPointType.AzureQueue' "127.0.0.1"); " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,ListAssetsAndFilesForNewlyCreatedManifests,The length of the statement  "            IIngestManifest sameIngestManifest = _mediaContext.IngestManifests.Where(c => c.Id == ingestManifest.Id).FirstOrDefault(); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,ListAssetsAndFilesForNewlyCreatedManifests,The length of the statement  "            Assert.AreEqual(1' sameIngestManifest.IngestManifestAssets.Count()' "Manifest asset count is not matching expecting value 1"); " is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,VerifyAssetIsNotExist,The length of the statement  "            Assert.AreEqual(0' context.IngestManifestAssets.Where(c => c.Id == asset.Id).Count()' "Manifest Asset exists.Expected result that asset is not returned by REST API"); " is 166.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,AddingAdditionalAssetInfoesToExistingManifest,The length of the statement  "            Task<IIngestManifestAsset> task1 = ingestManifest.IngestManifestAssets.CreateAsync(asset1' new string[1] { InterviewWmv }' CancellationToken.None); " is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,AddingAdditionalFilesToAssetInManifest,The length of the statement  "            var ingestManifestRefreshed = _mediaContext.IngestManifests.Where(c => c.Id == ingestManifestCreated.Id).FirstOrDefault(); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,ShouldThrowKeyNotFoundExceptionDuringEncryptIfKeyIsMissing,The length of the statement  "            IIngestManifestAsset ingestManifestAsset = ingestManifestCreated.IngestManifestAssets.CreateAsync(emptyAsset' files.ToArray()' CancellationToken.None).Result; " is 158.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,ShouldThrowAggregateExceptionWithMultipleKetNotFoundExceptionDuringEncryptIfKeyIsMissing,The length of the statement  "            IIngestManifestAsset ingestManifestAsset = ingestManifestCreated.IngestManifestAssets.CreateAsync(emptyAsset' files.ToArray()' CancellationToken.None).Result; " is 158.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,ShouldThrowAggregateExceptionWithMultipleKetNotFoundExceptionDuringEncryptIfKeyIsMissing,The length of the statement  "            ingestManifestAsset = ingestManifestCreated.IngestManifestAssets.CreateAsync(emptyAsset' files.ToArray()' CancellationToken.None).Result; " is 137.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,EncryptFilesDecryptAndCompare,The length of the statement  "            IIngestManifestAsset ingestManifestAsset = ingestManifestCreated.IngestManifestAssets.CreateAsync(emptyAsset' files.ToArray()' CancellationToken.None).Result; " is 158.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,EncryptFilesDecryptAndCompare,The length of the statement  "                    Assert.IsTrue(AssetTests.CompareFiles(decryptedPath' filePaths[assetFile.Name])' "Original file and Decrypted are not same"); " is 125.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,EncryptManifestFilesAndVerifyThemAfterDecryption,The length of the statement  "                IIngestManifestAsset ingestManifestAsset = ingestManifestCreated.IngestManifestAssets.ToList().Where(c => c.Asset.Options == AssetCreationOptions.StorageEncrypted).FirstOrDefault(); " is 181.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,EncryptManifestFilesAndVerifyThemAfterDecryption,The length of the statement  "                Assert.IsTrue(AssetTests.CompareFiles(decryptedPath' filePaths[mFile.Name])' "Original file and Decrypted are not same"); " is 121.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,DecryptedFile,The length of the statement  "            IIngestManifestAsset ingestManifestAsset = context.IngestManifestAssets.Where(a => a.Id == ingestManifestFile.ParentIngestManifestAssetId).FirstOrDefault(); " is 156.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,DecryptedFile,The length of the statement  "            IList<IContentKey> keys = ingestManifestAsset.Asset.ContentKeys.Where(c => c.ContentKeyType == ContentKeyType.StorageEncryption).ToList(); " is 138.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,DecryptedFile,The length of the statement  "                                    encryptor.TransformBlock(inputBuffer: buffer' inputOffset: 0' inputCount: buffer.Length' outputBuffer: buffer' outputOffset: 0); " is 128.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,CreateManifestEncryptFiles,The length of the statement  "            files = context.IngestManifestFiles.Where(c => c.ParentIngestManifestId == manifestid && c.IsEncrypted == true).ToList(); " is 121.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,VerifyAssetStateAndDelete,The length of the statement  "            IIngestManifest ingestManifest = WindowsAzureMediaServicesTestConfiguration.CreateCloudMediaContext().IngestManifests.Where(c => c.Id == id).FirstOrDefault(); " is 158.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,EncryptManifestTestDisableOverwriteExistingFile,The length of the statement  "            IIngestManifestAsset ingestManifestAsset = ingestManifestCreated.IngestManifestAssets.Create(emptyAsset' files.ToArray()); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,CreateManifestWithAssetsAndVerifyIt,The length of the statement  "            Assert.AreEqual(2' ingestManifestAssetInfo2.IngestManifestFiles.Count()' "Files collection size is not matching expectations"); " is 127.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,CreateEmptyManifestAndVerifyIt,The length of the statement  "            Assert.AreEqual(IngestManifestState.Inactive' ingestManifest.State' "Unexpected manifest state.Expected value is InActive"); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,CreateEmptyManifestAndVerifyIt,The length of the statement  "            Assert.AreEqual(0' _mediaContext.IngestManifestAssets.Where(c => c.ParentIngestManifestId == ingestManifest.Id).Count()' "Newly created asset should not contain any assets"); " is 174.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,PreapreDownloadQueue,The length of the statement  "                string blockIdString = Convert.ToBase64String(Encoding.ASCII.GetBytes(string.Format(CultureInfo.InvariantCulture' "BlockId{0}"' blockId.ToString("0000000"' CultureInfo.InvariantCulture)))); " is 189.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,SetupTest,The length of the statement  "            _smallWmv = WindowsAzureMediaServicesTestConfiguration.GetVideoSampleFilePath(TestContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv);" is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldCreateJobPreset,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldCreateJobPreset,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' name' mediaProcessor' GetWamePreset(mediaProcessor)' asset' TaskOptions.None);" is 130.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,CreateJobFromTemplate,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,CreateJobFromTemplate,The length of the statement  "            var jobfromTemplate = _mediaContext.Jobs.Create("JobFromTemplate" + Guid.NewGuid().ToString().Substring(0' 10)' template' new[]{asset});" is 136.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReportJobProgress,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReportJobProgress,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' name' mediaProcessor' GetWamePreset(mediaProcessor)' asset' TaskOptions.None);" is 130.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldQueryJobByStartTime,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldQueryJobByStartTime,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' name' mediaProcessor' GetWamePreset(mediaProcessor)' asset' TaskOptions.None);" is 130.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldGenerateMetadataFile,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldGenerateMetadataFile,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' name' mediaProcessor' "H264 Smooth Streaming 720p"' asset' TaskOptions.None);" is 129.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldGenerateMetadataFile,The length of the statement  "            bool ok = refreshedJob.Tasks.Single().OutputAssets.Single().AssetFiles.AsEnumerable().Select(f => f.Name).Contains("SmallWmv_manifest.xml");" is 140.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldFinishJobWithThumbnailPreset,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldContainTaskHistoryEventsOnceJobFinished,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithOneTaskEmptyConfiguration,The length of the statement  "            IMediaProcessor processor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpStorageDecryptorName);" is 128.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldFinishJobWithErrorWithInvalidPreset,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldFinishJobWithErrorWithInvalidPreset")' processor' "Some wrong Preset"' asset' TaskOptions.None);" is 168.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldCancelJobAfterSubmission,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldCancelJobAfterSubmission")' processor' GetWamePreset(processor)' asset' TaskOptions.None);" is 162.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldFinishJobCreatedFromThumbnailXml,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldFinishJobCreatedFromThumbnailXml")' processor' xmlPreset' asset' TaskOptions.None);" is 155.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldFinishJobWithZeroStepThumbnail,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldFinishJobWithZeroStepThumbnail")' processor' xmlPreset' asset' TaskOptions.None);" is 153.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldCreateJobWithMultipleAssetsAndValidateParentLinks,The length of the statement  "            IAsset asset2 = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv2' AssetCreationOptions.StorageEncrypted);" is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldCreateJobWithMultipleAssetsAndValidateParentLinks,The length of the statement  "            IAsset asset3 = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallMp41' AssetCreationOptions.StorageEncrypted);" is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldCreateJobWithMultipleAssetsAndValidateParentLinks,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMultipleAssetAndVerifyOrderOfInputAssets,The length of the statement  "            IAsset asset1 = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv2' AssetCreationOptions.StorageEncrypted);" is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMultipleAssetAndVerifyOrderOfInputAssets,The length of the statement  "            IAsset asset3 = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallMp41' AssetCreationOptions.StorageEncrypted);" is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMultipleAssetAndVerifyOrderOfInputAssets,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMultipleTasksAndSharedOutputAsset,The length of the statement  "            IAsset asset1 = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv2' AssetCreationOptions.StorageEncrypted); " is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMultipleTasksAndSharedOutputAsset,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMultipleTasksAndSharedOutputAsset,The length of the statement  "            IAsset output = task1.OutputAssets.AddNew("JobOutput"' options: AssetCreationOptions.None' formatOption: AssetFormatOption.None); " is 129.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMesAndMultipleTasksAndSharedOutputAsset,The length of the statement  "            IAsset asset1 = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv2' AssetCreationOptions.StorageEncrypted); " is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMesAndMultipleTasksAndSharedOutputAsset,The length of the statement  "            ITask task1 = job.Tasks.AddNew("Task1"' mediaProcessor' configuration1' TaskOptions.DoNotCancelOnJobFailure | TaskOptions.DoNotDeleteOutputAssetOnFailure); " is 155.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMesAndMultipleTasksAndSharedOutputAsset,The length of the statement  "            ITask task2 = job.Tasks.AddNew("Task2"' mediaProcessor' configuration2' TaskOptions.DoNotCancelOnJobFailure | TaskOptions.DoNotDeleteOutputAssetOnFailure); " is 155.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMesAndMultipleTasksAndSharedOutputAsset,The length of the statement  "            IAsset outputAsset = task2.OutputAssets.AddNew("JobOutput"' options: AssetCreationOptions.None' formatOption: AssetFormatOption.AdaptiveStreaming); " is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMesAndMultipleTasksAndSharedOutputAsset,The length of the statement  "            ITask task3 = job.Tasks.AddNew("Task3"' mediaProcessor' configuration3' TaskOptions.DoNotCancelOnJobFailure | TaskOptions.DoNotDeleteOutputAssetOnFailure); " is 155.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,TestJobWithTaskNotificationToBothAzureQueueAndWebHookEndPoint,The length of the statement  "            IAsset asset1 = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv2' AssetCreationOptions.StorageEncrypted); " is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,TestJobWithTaskNotificationToWebHookEndPointWithEncryption,The length of the statement  "            IAsset asset1 = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv2' AssetCreationOptions.None); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldFailJobWhenTryingAddOutputAssetFromDifferentJobToTask,The length of the statement  "            IAsset asset1 = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv2' AssetCreationOptions.StorageEncrypted); " is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldFailJobWhenTryingAddOutputAssetFromDifferentJobToTask,The length of the statement  "            IAsset outputAsset = task1.OutputAssets.AddNew("JobOutput"' options: AssetCreationOptions.None' formatOption: AssetFormatOption.None); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitJobWhenCreatingTaskWithNoCancelNoDeleteOption,The length of the statement  "            IAsset asset1 = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv2' AssetCreationOptions.StorageEncrypted); " is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitJobWhenCreatingTaskWithNoCancelNoDeleteOption,The length of the statement  "            IAsset outputAsset = task1.OutputAssets.AddNew("JobOutput"' options: AssetCreationOptions.None' formatOption: AssetFormatOption.None); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldFailJobWhenTryingAddInputAssetToOutputAssetOfTask,The length of the statement  "            IAsset asset1 = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv2' AssetCreationOptions.StorageEncrypted); " is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldFailJobWhenTryingAddInputAssetToOutputAssetOfTask,The length of the statement  "            IAsset outputAsset = task1.OutputAssets.AddNew("JobOutput"' options: AssetCreationOptions.None' formatOption: AssetFormatOption.None); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWhenTryingAddOutputAssetFromSameTask,The length of the statement  "            IAsset asset1 = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv2' AssetCreationOptions.StorageEncrypted); " is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWhenTryingAddOutputAssetFromSameTask,The length of the statement  "            IAsset outputAsset = task1.OutputAssets.AddNew("JobOutput"' options: AssetCreationOptions.None' formatOption: AssetFormatOption.None); " is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishChainedTasks,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishChainedTasksUsingParentOverload,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFihishMp4ToSmoothJob,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallMp41' AssetCreationOptions.StorageEncrypted);" is 146.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFihishMp4ToSmoothJob,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpPackagerName);" is 125.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFihishMp4ToSmoothJob,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldSubmitAndFihishMp4ToSmoothJob")' mediaProcessor' configuration' asset' TaskOptions.None);" is 161.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFihishMp4ToAudioJob,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallMp41' AssetCreationOptions.None);" is 134.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFihishMp4ToAudioJob,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFihishMp4ToAudioJob,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldSubmitAndFihishMp4ToAudioJob")' mediaProcessor' configuration' asset' TaskOptions.None);" is 160.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishPlayReadyProtectionJobWithSeed,The length of the statement  "            IMediaProcessor mediaEncryptor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncryptorName);" is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishPlayReadyProtectionJobWithSeed,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldSubmitAndFinishPlayReadyProtectionJob")' mediaEncryptor' configuration' asset' TaskOptions.None);" is 169.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishPlayReadyProtectionJobWithKey,The length of the statement  "            IMediaProcessor mediaEncryptor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncryptorName);" is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishPlayReadyProtectionJobWithKey,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldSubmitAndFinishPlayReadyProtectionJob")' mediaEncryptor' configuration' asset' TaskOptions.None);" is 169.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishSmoothToHlsJob,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpPackagerName);" is 125.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishSmoothToHlsJob,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldSubmitAndFinishSmoothToHlsJob")' mediaProcessor' configuration' asset' TaskOptions.None);" is 161.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishSmoothToHlsEncryptedJob,The length of the statement  "            IMediaProcessor mediaPackager = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpPackagerName);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishSmoothToHlsEncryptedJob,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldSubmitAndFinishSmoothToHlsEncryptedJob")' mediaPackager' configuration' asset' TaskOptions.ProtectedConfiguration);" is 187.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishPlayReadyProtectedHlsJob,The length of the statement  "            string encryptionConfiguration = File.ReadAllText(WindowsAzureMediaServicesTestConfiguration.PlayReadyConfigWithContentKey);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishPlayReadyProtectedHlsJob,The length of the statement  "            encryptionConfiguration = UpdatePlayReadyConfigurationXML(keyId' keyValue' new Uri("http://www.fakeurl.com")' encryptionConfiguration);" is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishPlayReadyProtectedHlsJob,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncryptorName);" is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishPlayReadyProtectedHlsJob,The length of the statement  "            ITask task = job.Tasks.AddNew("PlayReady Encryption Task"' mediaProcessor' encryptionConfiguration' TaskOptions.ProtectedConfiguration);" is 136.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishPlayReadyProtectedHlsJob,The length of the statement  "            ITask task2 = job.Tasks.AddNew("Smooth to Hls conversion task"' mediaProcessor' smoothToHlsConfiguration' TaskOptions.None);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishMp4ToSmoothJobWithStorageProtectedInputsAndOutputs,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallMp41' AssetCreationOptions.StorageEncrypted);" is 146.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishMp4ToSmoothJobWithStorageProtectedInputsAndOutputs,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpPackagerName);" is 125.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishPlayReadyProtectionJobWithStorageAndConfigurationEncryption,The length of the statement  "            IMediaProcessor mediaEncryptor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncryptorName);" is 126.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishPlayReadyProtectionJobWithStorageAndConfigurationEncryption,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldSubmitAndFinishPlayReadyProtectionJobWithStorageAndConfigurationEncryption")' mediaEncryptor' configuration' asset' TaskOptions.ProtectedConfiguration);" is 224.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishEETaskWithStorageProtectedInputAndClearOutput,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldSubmitAndFinishEETaskWithStorageProtectedInputAndClearOutput")' processor' xmlPreset' asset' TaskOptions.None);" is 183.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldThrowTryingToDeleteJobInProcessingState,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldThrowTryingToDeleteJobInProcessingState")' processor' GetWamePreset(processor)' asset' TaskOptions.None);" is 177.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldDeleteJobInFinishedState,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldDeleteJobInFinishedState")' processor' GetWamePreset(processor)' asset' TaskOptions.None);" is 162.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldDeleteJobInCancelledState,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldDeleteJobInCancelledState")' processor' GetWamePreset(processor)' asset' TaskOptions.None);" is 163.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReceiveNotificationsForCompeletedJob,The length of the statement  "            CloudQueueClient client = CloudStorageAccount.Parse(WindowsAzureMediaServicesTestConfiguration.ClientStorageConnectionString).CreateCloudQueueClient();" is 151.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReceiveNotificationsForCompeletedJob,The length of the statement  "            INotificationEndPoint notificationEndPoint = _mediaContext.NotificationEndPoints.Create(endPointName' NotificationEndPointType.AzureQueue' endPointAddress);" is 156.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReceiveNotificationsForCompeletedJob,The length of the statement  "            IAsset asset = AssetTests.CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallMp41' AssetCreationOptions.StorageEncrypted);" is 146.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReceiveNotificationsForCompeletedJob,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpPackagerName);" is 125.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReceiveNotificationsForCompeletedJob,The length of the statement  "            IJobNotificationSubscription lastJobNotificationSubscription = lastJob.JobNotificationSubscriptions.Where(n => n.NotificationEndPoint.Id == notificationEndPoint.Id).FirstOrDefault();" is 182.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldUpdateJobPriorityWhenJobIsQueued,The length of the statement  "            IJob tempJob = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("SubmitJobToCreateQueue")' processor' GetWamePreset(processor)' asset' TaskOptions.None);" is 158.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldUpdateJobPriorityWhenJobIsQueued,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldSubmitJobAndUpdatePriorityWhenJobIsQueued")' processor' GetWamePreset(processor)' asset' TaskOptions.None);" is 179.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldThrowTryingUpdateJobPriorityWhenJobIsProcessing,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldSubmitJobAndUpdatePriorityWhenJobIsQueued")' processor' GetWamePreset(processor)' asset' TaskOptions.None);" is 179.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldThrowTryingUpdateJobPriorityWhenJobIsFinished,The length of the statement  "            IJob job = CreateAndSubmitOneTaskJob(_mediaContext' GenerateName("ShouldSubmitJobAndUpdatePriorityWhenJobIsQueued")' processor' GetWamePreset(processor)' asset' TaskOptions.None);" is 179.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,CreateSmoothAsset,The length of the statement  "            var filePaths = new[] { WindowsAzureMediaServicesTestConfiguration.SmallIsm' WindowsAzureMediaServicesTestConfiguration.SmallIsmc' WindowsAzureMediaServicesTestConfiguration.SmallIsmv };" is 186.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,WaitForJob,The length of the statement  "                    str.AppendFormat("Job should not fail - Current State = {0} Expected State = {1} jobId = {2}"' job2.State' jobState' jobId);" is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,WaitForJob,The length of the statement  "                    throw new Exception("Job Timed out - Current State " + job2.State.ToString() + " Expected State " + jobState + " jobId = " + jobId);" is 132.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,GetMediaProcessor,The length of the statement  "            IMediaProcessor mp = context.MediaProcessors.Where(c => c.Name == mpName).ToList().OrderByDescending(c => new Version(c.Version)).FirstOrDefault();" is 147.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldThrowSubmittingJobWhenNonexistingStorageSpecifiedForOutPut,The length of the statement  "                IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitJobWhereOutPutInDefaultStorage,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitJobWhereOutPutInNoneDefaultStorage,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitJobWhereOutPutInNoneDefaultStorage,The length of the statement  "            Assert.AreEqual(nondefault.Name' refreshed.Tasks[0].OutputAssets[0].StorageAccountName' "Storage account name in output assset is not matching"); " is 145.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSaveJobAsTemplateAndCreateNewJobwithItWhereOutPutInNoneDefaultStorage,The length of the statement  "            IMediaProcessor mediaProcessor = GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName); " is 124.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSaveJobAsTemplateAndCreateNewJobwithItWhereOutPutInNoneDefaultStorage,The length of the statement  "            Assert.AreEqual(nondefault.Name' newJob.Tasks[0].OutputAssets[0].StorageAccountName' "Storage account name in output assset is not matching"); " is 142.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,SetupTest,The length of the statement  "            _smallWmv = WindowsAzureMediaServicesTestConfiguration.GetVideoSampleFilePath(TestContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldThrowUpdatingLocatorIfItsTypeIsNotOrigin,The length of the statement  "            var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromHours(2)' AccessPermissions.List | AccessPermissions.Read); " is 141.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWithNameSync,The length of the statement  "            var locator = _mediaContext.Locators.CreateLocator(LocatorType.OnDemandOrigin' asset' accessPolicy' DateTime.Now.AddDays(2)' "ShouldCreateLocatorWithoutNameAndUpdateName_" + Guid.NewGuid().ToString()); " is 201.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateSASLocatorWithNameSync,The length of the statement  "            var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateSASLocatorWithNameSync,The length of the statement  "            var locator = _mediaContext.Locators.CreateSasLocator(asset' accessPolicy' DateTime.Now.AddDays(2)' "ShouldCreateLocatorWithoutNameAndUpdateName_" + Guid.NewGuid().ToString()); " is 176.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWithNameASync,The length of the statement  "            var locator = _mediaContext.Locators.CreateLocatorAsync(LocatorType.OnDemandOrigin' asset' accessPolicy' DateTime.Now.AddDays(2)' "ShouldCreateLocatorWithoutNameAndUpdateName_" + Guid.NewGuid().ToString()).Result; " is 213.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateSASLocatorWithNameASync,The length of the statement  "            var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateSASLocatorWithNameASync,The length of the statement  "            var locator = _mediaContext.Locators.CreateSasLocatorAsync(asset' accessPolicy' DateTime.Now.AddDays(2)' "ShouldCreateLocatorWithoutNameAndUpdateName_" + Guid.NewGuid().ToString()).Result; " is 188.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldReturnLocatorWhenCreateSasLocatorCalled,The length of the statement  "            var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWhenCreateSasLocatorCalled,The length of the statement  "            var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ExpirationTimeOfCreatedLocatorShouldMatchLocatorStartTimePlusPolicyDuration,The length of the statement  "            var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ExpirationTimeOfCreatedLocatorShouldMatchLocatorStartTimePlusPolicyDuration,The length of the statement  "            var locatorTask = _mediaContext.Locators.CreateLocatorAsync(LocatorType.Sas' asset' accessPolicy' locatorStartTime.ToUniversalTime()' null); " is 140.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWhenCreateSasLocatorAsyncCalled,The length of the statement  "            var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldDeleteLocatorWhenDeleteLocatorCalled,The length of the statement  "            var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldDeleteLocatorWhenDeleteLocatorAsyncCalled,The length of the statement  "            var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldDeleteLocatorAfterSyncUpload,The length of the statement  "            Assert.AreEqual(0' _mediaContext.Locators.Where(c => c.AssetId == asset.Id).Count()' "No locators expected in context queryable after Upload"); " is 143.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldNotDeleteLocatorAfterASyncUpload,The length of the statement  "            Assert.AreEqual(1' _mediaContext.Locators.Where(c => c.AssetId == asset.Id).Count()' "1 locator expected in context queryable after Upload"); " is 141.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,TestLocatorDeleteRetry,The length of the statement  "            dataContextMock.Setup((ctxt) => ctxt.CreateQuery<IAsset' AssetData>("Assets")).Throws(new Exception(artificialExceptionMessage)); " is 129.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldThrowIfLocatorIdIsInvalidWithoutPrefixWhenCreateOriginLocator,The length of the statement  "            IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("Read"' TimeSpan.FromMinutes(5)' AccessPermissions.Read); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldThrowIfLocatorIdIsInvalidWithPrefixWhenCreateOriginLocator,The length of the statement  "            IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("Read"' TimeSpan.FromMinutes(5)' AccessPermissions.Read); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateOriginLocator,The length of the statement  "            IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("Read"' TimeSpan.FromMinutes(5)' AccessPermissions.Read); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldSetLocatorIdWithoutPrefixWhenCreateOriginLocator,The length of the statement  "            IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("Read"' TimeSpan.FromMinutes(5)' AccessPermissions.Read); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldSetLocatorIdWithoutPrefixWhenCreateOriginLocator,The length of the statement  "            ILocator locator = _mediaContext.Locators.CreateLocator(locatorIdWithoutPrefix' LocatorType.OnDemandOrigin' asset' accessPolicy' null); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldRecreateLocatorWithSameLocatorId,The length of the statement  "            IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("Read"' TimeSpan.FromMinutes(5)' AccessPermissions.Read); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldSetLocatorIdWithPrefixWhenCreateOriginLocator,The length of the statement  "            IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("Read"' TimeSpan.FromMinutes(5)' AccessPermissions.Read); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldSetLocatorIdWithPrefixWhenCreateOriginLocator,The length of the statement  "            ILocator locator = _mediaContext.Locators.CreateLocator(locatorIdWithPrefix' LocatorType.OnDemandOrigin' asset' accessPolicy' startTime: null); " is 143.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,SetupTest,The length of the statement  "            _smallWmv = WindowsAzureMediaServicesTestConfiguration.GetVideoSampleFilePath(TestContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFile,The length of the statement  "                Assert.AreEqual(BlobTransferType.Upload' args.TransferType' "file.UploadAsync Transfer completed expected BlobTransferType is Upload"); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFile,The length of the statement  "            Assert.IsTrue(string.Compare(Path.GetFileName(_smallWmv)' queriedAssetFile.Name' StringComparison.InvariantCultureIgnoreCase) == 0' "Main file is wrong"); " is 154.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFileFromEmptyStream,The length of the statement  "                Assert.AreEqual(BlobTransferType.Upload' args.TransferType' "file.UploadAsync Transfer completed expected BlobTransferType is Upload"); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFileFromEmptyStream,The length of the statement  "            Assert.IsTrue(string.Compare(name' queriedAssetFile.Name' StringComparison.InvariantCultureIgnoreCase) == 0' "Main file is wrong"); " is 131.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFileFromSmallStream,The length of the statement  "                    Assert.AreEqual(BlobTransferType.Upload' args.TransferType' "file.UploadAsync Transfer completed expected BlobTransferType is Upload"); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFileFromSmallStream,The length of the statement  "                Assert.IsTrue(string.Compare(name' queriedAssetFile.Name' StringComparison.InvariantCultureIgnoreCase) == 0' "Main file is wrong"); " is 131.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFileFromBigStream,The length of the statement  "                    Assert.AreEqual(BlobTransferType.Upload' args.TransferType' "file.UploadAsync Transfer completed expected BlobTransferType is Upload"); " is 135.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFileFromBigStream,The length of the statement  "                Assert.IsTrue(string.Compare(name' queriedAssetFile.Name' StringComparison.InvariantCultureIgnoreCase) == 0' "Main file is wrong"); " is 131.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFileFromNetworkStream,The length of the statement  "            var storageAccount = CloudStorageAccount.Parse(WindowsAzureMediaServicesTestConfiguration.ClientStorageConnectionString); " is 121.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFileFromNetworkStream,The length of the statement  "            Assert.IsTrue(string.Compare(name' queriedAssetFile.Name' StringComparison.InvariantCultureIgnoreCase) == 0' "Main file is wrong"); " is 131.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldThrowArgumentExceptionOnAssetUploadWhenLocalFileNameNotMatchingAssetFileName,The length of the statement  "                file.UploadAsync(_smallWmv' _mediaContext.MediaServicesClassFactory.GetBlobTransferClient()' locator' CancellationToken.None).Wait(); " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateSingleFileAssetFromStreamWithNoLocatorUsingOveloadSync,The length of the statement  "            Assert.IsTrue(string.Compare(name' queriedAssetFile.Name' StringComparison.InvariantCultureIgnoreCase) == 0' "Main file is wrong"); " is 131.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldThrowCreatingAssetFileWithMissingFile,The length of the statement  "                CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.BadSmallWmv' AssetCreationOptions.StorageEncrypted); " is 122.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetAndUploadAndDownload10FilesUsingAsyncCall,The length of the statement  "            IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("SdkDownload"' TimeSpan.FromHours(12)' AccessPermissions.Read); " is 128.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,CreateAssetWithUniqueAlternateIdAndFilterByIt,The length of the statement  "            IAsset createdAsset = CreateAsset(_mediaContext' WindowsAzureMediaServicesTestConfiguration.SmallWmv2' AssetCreationOptions.StorageEncrypted); " is 142.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldModifyAssetFile,The length of the statement  "                IAsset asset = WindowsAzureMediaServicesTestConfiguration.CreateCloudMediaContext().Assets.Where(c => c.Id == assetId).FirstOrDefault(); " is 136.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldNotThrowTryingToDeleteAssetWithActiveLocators,The length of the statement  "            IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("ReadOnly"' TimeSpan.FromMinutes(60)' AccessPermissions.Read); " is 127.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldDeleteAssetAndKeepAzureContainer,The length of the statement  "            CloudStorageAccount storageAccount = CloudStorageAccount.Parse(WindowsAzureMediaServicesTestConfiguration.ClientStorageConnectionString); " is 137.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The length of the statement  "            CloudStorageAccount storageAccount = CloudStorageAccount.Parse(WindowsAzureMediaServicesTestConfiguration.ClientStorageConnectionString); " is 137.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The length of the statement  "                        //Assert.AreEqual(hashValueForlocalSourceFile' blob.Properties.ContentMD5' "MD5 CheckSums between blob file and source file  are different"); " is 141.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The length of the statement  "                        Assert.AreEqual(hashValueForWAMSSDKDownload' blob.Properties.ContentMD5' "MD5 CheckSums between blob file and wams sdk download are different"); " is 144.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The length of the statement  "                        Assert.AreEqual(hashValueForWAMSSDKDownload' hashValueForStorageSdkDownload' "MD5 CheckSums for wams and storage downloads are different"); " is 139.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The length of the statement  "                            Assert.AreEqual(hashValueForStorageSdkDownload' blob.Properties.ContentMD5' "MD5 CheckSums between blob file and storage sdk download are different"); " is 150.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The length of the statement  "                        Assert.AreEqual(azuresdkDownloadInfo.Length' blob.Properties.Length' "Azure SDK download file length in bytes is not matching length of asset file in blob"); " is 157.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The length of the statement  "                    Assert.AreEqual(wamssdkDownloadInfo.Length' blob.Properties.Length' "WAMS SDK download file length in bytes is not matching length of asset file in blob"); " is 155.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,RunJobAndGetOutPutAsset,The length of the statement  "            IMediaProcessor mediaProcessor = JobTests.GetMediaProcessor(_mediaContext' WindowsAzureMediaServicesTestConfiguration.MpEncoderName); " is 133.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,RunJobAndGetOutPutAsset,The length of the statement  "            job = JobTests.CreateAndSubmitOneTaskJob(_mediaContext' jobName' mediaProcessor' JobTests.GetWamePreset(mediaProcessor)' asset' TaskOptions.None); " is 146.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests,AzureADTokenProvider,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AzureADTokenProviderTest.cs,GetToken,The length of the statement  "            string upn = string.Format("{0}@{1}"' ConfigurationManager.AppSettings["MediaServiceAccountName"]' ConfigurationManager.AppSettings["AadTenant"]); " is 146.
Long Statement,Microsoft.WindowsAzure.MediaServices.Client.Tests.DynamicEncryption,TokenServiceClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\TokenClient.cs,GetAuthTokenForKey,The length of the statement  "                signature = HttpUtility.UrlEncode(Convert.ToBase64String(signatureAlgorithm.ComputeHash(Encoding.ASCII.GetBytes(unsignedToken)))); " is 130.
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AccessPoliciesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AccessPoliciesTests.cs,TestAccessPolicyCreateRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AccessPoliciesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AccessPoliciesTests.cs,TestAccessPolicyDeleteRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithDefaultPresentationTimeRangeAndEmptyFilterTrackSelectStatement,The following statement contains a magic number: filter.PresentationTimeRange = new PresentationTimeRange(timescale:500);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithAllSelectStatements,The following statement contains a magic number: Assert.AreEqual(5' _mediaContext.Filters.Where(c => c.Name == filter.Name).First().Tracks.First().PropertyConditions.Count);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithAllSelectStatements,The following statement contains a magic number: filter.PresentationTimeRange = new PresentationTimeRange(timescale: 500);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CreateUpdateDeleteFilterWithAllSelectStatements,The following statement contains a magic number: Assert.AreEqual(5' _mediaContext.Filters.Where(c => c.Name == filter.Name).First().Tracks.First().PropertyConditions.Count);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CRUDAssetFilter,The following statement contains a magic number: filter.PresentationTimeRange = new PresentationTimeRange(timescale: 500);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,CRUDAssetFilter,The following statement contains a magic number: Assert.AreEqual((ulong)500' filterUpdated.PresentationTimeRange.Timescale);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The following statement contains a magic number: IJob job = JobTests.CreateAndSubmitOneTaskJob(_mediaContext' "ApplyDynamicManifestFilter" + Guid.NewGuid().ToString().Substring(0' 5)' mediaProcessor' configuration' inputAsset' TaskOptions.None);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("ApplyDynamicManifestFilter" + Guid.NewGuid().ToString().Substring(0' 5)' TimeSpan.FromDays(30)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("ApplyDynamicManifestFilter" + Guid.NewGuid().ToString().Substring(0' 5)' TimeSpan.FromDays(30)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The following statement contains a magic number: ILocator originLocator = _mediaContext.Locators.CreateLocator(LocatorType.OnDemandOrigin' outputAsset' policy' DateTime.UtcNow.AddMinutes(-5));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,ApplyDynamicManifestFilter,The following statement contains a magic number: string filterName = "ApplyDynamicManifestFilter_" + Guid.NewGuid().ToString().Substring(0'5);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,GlobalFilterFirstQualityTest,The following statement contains a magic number: const int firstQualityBitrate = 32000;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,GlobalFilterFirstQualityTest,The following statement contains a magic number: const int updatedFilterQualityBitrate = 128000;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,GlobalFilterFirstQualityTest,The following statement contains a magic number: var filter = _mediaContext.Filters.Create(                  filterName'                  new PresentationTimeRange(10000000' 20000000' 320000000' TimeSpan.FromMinutes(20))'                  new FilterTrackSelectStatement[]                  {                      new FilterTrackSelectStatement()                      {                          PropertyConditions = new IFilterTrackPropertyCondition[]                          {                              new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(64000' 256000))'                              new FilterTrackTypeCondition(FilterTrackType.Audio)'                          }                      }                  }'                  new FirstQuality(firstQualityBitrate));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,GlobalFilterFirstQualityTest,The following statement contains a magic number: var filter = _mediaContext.Filters.Create(                  filterName'                  new PresentationTimeRange(10000000' 20000000' 320000000' TimeSpan.FromMinutes(20))'                  new FilterTrackSelectStatement[]                  {                      new FilterTrackSelectStatement()                      {                          PropertyConditions = new IFilterTrackPropertyCondition[]                          {                              new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(64000' 256000))'                              new FilterTrackTypeCondition(FilterTrackType.Audio)'                          }                      }                  }'                  new FirstQuality(firstQualityBitrate));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,GlobalFilterFirstQualityTest,The following statement contains a magic number: var filter = _mediaContext.Filters.Create(                  filterName'                  new PresentationTimeRange(10000000' 20000000' 320000000' TimeSpan.FromMinutes(20))'                  new FilterTrackSelectStatement[]                  {                      new FilterTrackSelectStatement()                      {                          PropertyConditions = new IFilterTrackPropertyCondition[]                          {                              new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(64000' 256000))'                              new FilterTrackTypeCondition(FilterTrackType.Audio)'                          }                      }                  }'                  new FirstQuality(firstQualityBitrate));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,GlobalFilterFirstQualityTest,The following statement contains a magic number: var filter = _mediaContext.Filters.Create(                  filterName'                  new PresentationTimeRange(10000000' 20000000' 320000000' TimeSpan.FromMinutes(20))'                  new FilterTrackSelectStatement[]                  {                      new FilterTrackSelectStatement()                      {                          PropertyConditions = new IFilterTrackPropertyCondition[]                          {                              new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(64000' 256000))'                              new FilterTrackTypeCondition(FilterTrackType.Audio)'                          }                      }                  }'                  new FirstQuality(firstQualityBitrate));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,GlobalFilterFirstQualityTest,The following statement contains a magic number: var filter = _mediaContext.Filters.Create(                  filterName'                  new PresentationTimeRange(10000000' 20000000' 320000000' TimeSpan.FromMinutes(20))'                  new FilterTrackSelectStatement[]                  {                      new FilterTrackSelectStatement()                      {                          PropertyConditions = new IFilterTrackPropertyCondition[]                          {                              new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(64000' 256000))'                              new FilterTrackTypeCondition(FilterTrackType.Audio)'                          }                      }                  }'                  new FirstQuality(firstQualityBitrate));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,GlobalFilterFirstQualityTest,The following statement contains a magic number: var filter = _mediaContext.Filters.Create(                  filterName'                  new PresentationTimeRange(10000000' 20000000' 320000000' TimeSpan.FromMinutes(20))'                  new FilterTrackSelectStatement[]                  {                      new FilterTrackSelectStatement()                      {                          PropertyConditions = new IFilterTrackPropertyCondition[]                          {                              new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(64000' 256000))'                              new FilterTrackTypeCondition(FilterTrackType.Audio)'                          }                      }                  }'                  new FirstQuality(firstQualityBitrate));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,AssetFilterFirstQualityTest,The following statement contains a magic number: const int firstQualityBitrate = 32000;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,AssetFilterFirstQualityTest,The following statement contains a magic number: const int updatedFilterQualityBitrate = 128000;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,AssetFilterFirstQualityTest,The following statement contains a magic number: var filter = asset.AssetFilters.Create(                  filterName'                  new PresentationTimeRange(10000000' 20000000' 320000000' TimeSpan.FromMinutes(20))'                  new FilterTrackSelectStatement[]                  {                      new FilterTrackSelectStatement()                      {                          PropertyConditions = new IFilterTrackPropertyCondition[]                          {                              new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(64000' 256000))'                              new FilterTrackTypeCondition(FilterTrackType.Audio)'                          }                      }                  }'                  new FirstQuality(firstQualityBitrate));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,AssetFilterFirstQualityTest,The following statement contains a magic number: var filter = asset.AssetFilters.Create(                  filterName'                  new PresentationTimeRange(10000000' 20000000' 320000000' TimeSpan.FromMinutes(20))'                  new FilterTrackSelectStatement[]                  {                      new FilterTrackSelectStatement()                      {                          PropertyConditions = new IFilterTrackPropertyCondition[]                          {                              new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(64000' 256000))'                              new FilterTrackTypeCondition(FilterTrackType.Audio)'                          }                      }                  }'                  new FirstQuality(firstQualityBitrate));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,AssetFilterFirstQualityTest,The following statement contains a magic number: var filter = asset.AssetFilters.Create(                  filterName'                  new PresentationTimeRange(10000000' 20000000' 320000000' TimeSpan.FromMinutes(20))'                  new FilterTrackSelectStatement[]                  {                      new FilterTrackSelectStatement()                      {                          PropertyConditions = new IFilterTrackPropertyCondition[]                          {                              new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(64000' 256000))'                              new FilterTrackTypeCondition(FilterTrackType.Audio)'                          }                      }                  }'                  new FirstQuality(firstQualityBitrate));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,AssetFilterFirstQualityTest,The following statement contains a magic number: var filter = asset.AssetFilters.Create(                  filterName'                  new PresentationTimeRange(10000000' 20000000' 320000000' TimeSpan.FromMinutes(20))'                  new FilterTrackSelectStatement[]                  {                      new FilterTrackSelectStatement()                      {                          PropertyConditions = new IFilterTrackPropertyCondition[]                          {                              new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(64000' 256000))'                              new FilterTrackTypeCondition(FilterTrackType.Audio)'                          }                      }                  }'                  new FirstQuality(firstQualityBitrate));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,AssetFilterFirstQualityTest,The following statement contains a magic number: var filter = asset.AssetFilters.Create(                  filterName'                  new PresentationTimeRange(10000000' 20000000' 320000000' TimeSpan.FromMinutes(20))'                  new FilterTrackSelectStatement[]                  {                      new FilterTrackSelectStatement()                      {                          PropertyConditions = new IFilterTrackPropertyCondition[]                          {                              new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(64000' 256000))'                              new FilterTrackTypeCondition(FilterTrackType.Audio)'                          }                      }                  }'                  new FirstQuality(firstQualityBitrate));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilterTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilterTests.cs,AssetFilterFirstQualityTest,The following statement contains a magic number: var filter = asset.AssetFilters.Create(                  filterName'                  new PresentationTimeRange(10000000' 20000000' 320000000' TimeSpan.FromMinutes(20))'                  new FilterTrackSelectStatement[]                  {                      new FilterTrackSelectStatement()                      {                          PropertyConditions = new IFilterTrackPropertyCondition[]                          {                              new FilterTrackBitrateRangeCondition(new FilterTrackBitrateRange(64000' 256000))'                              new FilterTrackTypeCondition(FilterTrackType.Audio)'                          }                      }                  }'                  new FirstQuality(firstQualityBitrate));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,TestGetEncryptionState,The following statement contains a magic number: Dictionary<AssetDeliveryPolicyConfigurationKey' string> configuration = new Dictionary<AssetDeliveryPolicyConfigurationKey' string>()              {                  {AssetDeliveryPolicyConfigurationKey.EnvelopeBaseKeyAcquisitionUrl' "https://www.test.com/"}'                  {AssetDeliveryPolicyConfigurationKey.EnvelopeEncryptionIVAsBase64' Convert.ToBase64String(ContentKeyTests.GetRandomBuffer(16))}              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,TestGetEncryptionState,The following statement contains a magic number: IContentKey key = _mediaContext.ContentKeys.Create(Guid.NewGuid()' ContentKeyTests.GetRandomBuffer(16)' "Test key"' ContentKeyType.EnvelopeEncryption);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,SetupEnvelopePolicy,The following statement contains a magic number: IContentKey key = _mediaContext.ContentKeys.Create(Guid.NewGuid()' ContentKeyTests.GetRandomBuffer(16)' "Envelope Encryption Key"' ContentKeyType.EnvelopeEncryption);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,SetupCommonPolicy,The following statement contains a magic number: IContentKey key = _mediaContext.ContentKeys.Create(Guid.NewGuid()' ContentKeyTests.GetRandomBuffer(16)' "Common Encryption Key"' ContentKeyType.CommonEncryption);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetEncryptionStateTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetEncryptionStateTests.cs,CreatePlayReadyProtectedSmoothAsset,The following statement contains a magic number: byte[] keyValue = ContentKeyTests.GetRandomBuffer(16);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,ShouldThrowArgumentExceptionWhenUploadAsyncFileNameNotEqualToAssetFileName,The following statement contains a magic number: fileInfo.UploadAsync(fileUploaded'                      new BlobTransferClient                      {                          NumberOfConcurrentTransfers = 5'                          ParallelTransferThreadCount = 5                      }'                      locator'                      CancellationToken.None);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,ShouldThrowArgumentExceptionWhenUploadAsyncFileNameNotEqualToAssetFileName,The following statement contains a magic number: fileInfo.UploadAsync(fileUploaded'                      new BlobTransferClient                      {                          NumberOfConcurrentTransfers = 5'                          ParallelTransferThreadCount = 5                      }'                      locator'                      CancellationToken.None);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,When_Uploading_Multiple_Files_The_Progress_Event_Should_Only_Be_For_The_Bound_AssetFile,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("Write"' TimeSpan.FromMinutes(10)'                  AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,When_Uploading_Multiple_Files_The_Progress_Event_Should_Only_Be_For_The_Bound_AssetFile,The following statement contains a magic number: var btc = new BlobTransferClient              {                  NumberOfConcurrentTransfers = 5'                  ParallelTransferThreadCount = 5              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,When_Uploading_Multiple_Files_The_Progress_Event_Should_Only_Be_For_The_Bound_AssetFile,The following statement contains a magic number: var btc = new BlobTransferClient              {                  NumberOfConcurrentTransfers = 5'                  ParallelTransferThreadCount = 5              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,ShouldDownloadManyConcurrentSmallFiles,The following statement contains a magic number: VerifyAndDownloadAssetFileNTimes(assetFile' asset'100'0'true);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,ShouldDownloadManyConcurrentLargeFiles,The following statement contains a magic number: CreateFileWithRandomData(fileUploaded' 300);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,ShouldDownloadManyConcurrentLargeFiles,The following statement contains a magic number: VerifyAndDownloadAssetFileNTimes(assetFile' asset' 4'0'true);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,ShouldDownloadEmptyFile,The following statement contains a magic number: VerifyAndDownloadAssetFileNTimes(assetFile' asset' 10'0'true);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,ShouldCancelDownloadToFileAsyncTaskAfter50Milliseconds,The following statement contains a magic number: IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("SdkDownload"' TimeSpan.FromHours(12)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,ShouldCancelDownloadToFileAsyncTaskAfter50Milliseconds,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,ShouldCancelDownloadToFileAsyncTaskAfter50Milliseconds,The following statement contains a magic number: Assert.AreEqual(2' retreivedAsset.Locators.Count);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,TestAssetFileCreateRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,TestAssetFileUpdateRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,TestAssetFileDeleteRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,CreateFileWithRandomData,The following statement contains a magic number: byte[] data = new byte[8192];
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,CreateFileWithRandomData,The following statement contains a magic number: i < sizeInMb * 128
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,VerifyAndDownloadAssetFile,The following statement contains a magic number: Assert.AreEqual(100' _downloadProgress);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetFilesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetFilesTests.cs,VerifyAndDownloadAssetFileNTimes,The following statement contains a magic number: expirationTime = 1000;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,CreateEnvelopePolicy,The following statement contains a magic number: string envelopeEncryptionIV = Convert.ToBase64String(GetRandomData(16));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,EnvelopeAssetDeliveryPolicyTestAttach,The following statement contains a magic number: var contentKey = _mediaContext.ContentKeys.Create(Guid.NewGuid()' GetRandomData(16)' "Content Key for EnvelopeAssetDeliveryPolicyTestAttach"' ContentKeyType.EnvelopeEncryption);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,PlayReadyAssetDeliveryPolicyTestAttach,The following statement contains a magic number: var contentKey = _mediaContext.ContentKeys.Create(Guid.NewGuid()' GetRandomData(16)' "Content Key for PlayReadyAssetDeliveryPolicyTestAttach"' ContentKeyType.CommonEncryption);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,TestAssetDeliveryPolicyCreateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,TestAssetDeliveryPolicyCreateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,TestAssetDeliveryPolicyCreateFailedRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,TestAssetDeliveryPolicyCreateFailedRetryMessageLengthLimitExceeded,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,TestAssetDeliveryPolicyUpdateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,TestAssetDeliveryPolicyUpdateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,TestAssetDeliveryPolicyDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetDeliveryPolicyCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\AssetDeliveryPolicyCollectionTest.cs,TestAssetDeliveryPolicyDeleteRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,TestContentKeyAuthorizationPolicyOptionCreateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,TestContentKeyAuthorizationPolicyOptionCreateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,TestContentKeyAuthorizationPolicyOptionCreateFailedRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,TestContentKeyAuthorizationPolicyOptionCreateFailedRetryMessageLengthLimitExceeded,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,TestContentKeyAuthorizationPolicyOptionUpdateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,TestContentKeyAuthorizationPolicyOptionUpdateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,TestContentKeyAuthorizationPolicyOptionDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyOptionTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyOptionTests.cs,TestContentKeyAuthorizationPolicyOptionDeleteRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,ExecuteTopForAuthorizationPolicy,The following statement contains a magic number: List<IContentKeyAuthorizationPolicy> policies = _mediaContext.ContentKeyAuthorizationPolicies.Take(5).ToList();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,UpdateContentKeyAuthorizationPolicyId,The following statement contains a magic number: IContentKey contentKey = _mediaContext.ContentKeys.CreateAsync(Guid.NewGuid()' new byte[16]).Result;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,QueryContentKeyBYAuthorizationPolicyId,The following statement contains a magic number: IContentKey contentKey = _mediaContext.ContentKeys.CreateAsync(Guid.NewGuid()' new byte[16]).Result;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,TestContentKeyAuthorizationPolicyCreateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,TestContentKeyAuthorizationPolicyCreateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,TestContentKeyAuthorizationPolicyCreateFailedRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,TestContentKeyAuthorizationPolicyCreateFailedRetryMessageLengthLimitExceeded,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,TestContentKeyAuthorizationPolicyUpdateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,TestContentKeyAuthorizationPolicyUpdateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,TestContentKeyAuthorizationPolicyDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyAuthorizationPolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\ContentKeyAuthorizationPolicyTests.cs,TestContentKeyAuthorizationPolicyDeleteRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetWidevineKeyDeliveryUrlAndFetchLicense,The following statement contains a magic number: Assert.AreEqual("CAIS"' expectedString.Substring(0' 4));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetWidevineKeyDeliveryUrlAndFetchLicenseWithPolicy,The following statement contains a magic number: var template = new WidevineMessage                  {                      allowed_track_types = AllowedTrackTypes.SD_HD'                      content_key_specs = new[]                      {                          new ContentKeySpecs                           {                               key_id = contentKey.Id'                               required_output_protection = new RequiredOutputProtection { hdcp = Hdcp.HDCP_NONE}'                               security_level = 1'                               track_type = "SD"                          }                      }'                      policy_overrides = new                       {                          can_play = true'                          can_persist = true'                          can_renew = true'                          license_duration_seconds = 10'                          renewal_delay_seconds = 3'                      }                  };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetWidevineKeyDeliveryUrlAndFetchLicenseWithPolicy,The following statement contains a magic number: var template = new WidevineMessage                  {                      allowed_track_types = AllowedTrackTypes.SD_HD'                      content_key_specs = new[]                      {                          new ContentKeySpecs                           {                               key_id = contentKey.Id'                               required_output_protection = new RequiredOutputProtection { hdcp = Hdcp.HDCP_NONE}'                               security_level = 1'                               track_type = "SD"                          }                      }'                      policy_overrides = new                       {                          can_play = true'                          can_persist = true'                          can_renew = true'                          license_duration_seconds = 10'                          renewal_delay_seconds = 3'                      }                  };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,GetWidevineKeyDeliveryUrlAndFetchLicenseWithPolicy,The following statement contains a magic number: Assert.AreEqual("CAIS"' expectedString.Substring(0' 4));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,FetchKeyWithJWTAuth,The following statement contains a magic number: JwtSecurityToken token = new JwtSecurityToken(issuer: tokenRestrictionTemplate.Issuer'                      audience: tokenRestrictionTemplate.Audience' notBefore: DateTime.Now.AddMinutes(-5)'                      expires: DateTime.Now.AddMinutes(5)' signingCredentials: cred);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,FetchKeyWithJWTAuth,The following statement contains a magic number: JwtSecurityToken token = new JwtSecurityToken(issuer: tokenRestrictionTemplate.Issuer'                      audience: tokenRestrictionTemplate.Audience' notBefore: DateTime.Now.AddMinutes(-5)'                      expires: DateTime.Now.AddMinutes(5)' signingCredentials: cred);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,FetchKeyWithSWTToken,The following statement contains a magic number: string swtTokenString = TokenRestrictionTemplateSerializer.GenerateTestToken(tokenRestrictionTemplate'                      tokenRestrictionTemplate.PrimaryVerificationKey' contentKeyId' DateTime.Now.AddDays(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,GetKeyDeliveryUrlTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\GetKeyDeliveryUrlTests.cs,CreateTestKey,The following statement contains a magic number: key = ContentKeyTests.GetRandomBuffer(16);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestAssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestAssetTests.cs,TestIngestManifestAssetCreateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestAssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestAssetTests.cs,TestIngestManifestAssetCreateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestAssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestAssetTests.cs,TestIngestManifestFileDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestAssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestAssetTests.cs,TestIngestManifestFileDeleteRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LinkCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LinkCollectionTest.cs,LinkCollectionTestInsertRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LinkCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LinkCollectionTest.cs,LinkCollectionTestInsertRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChanges()' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LinkCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LinkCollectionTest.cs,LinkCollectionTestRemoveRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LinkCollectionTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LinkCollectionTest.cs,LinkCollectionTestRemoveRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChanges()' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileWithEncryption,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("Test"' TimeSpan.FromMinutes(10)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileArrayWithEncryption,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("Write"' TimeSpan.FromMinutes(5)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileArrayWithEncryption,The following statement contains a magic number: var blobclient = new BlobTransferClient                  {                      NumberOfConcurrentTransfers = 5'                      ParallelTransferThreadCount = 5                  };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileArrayWithEncryption,The following statement contains a magic number: var blobclient = new BlobTransferClient                  {                      NumberOfConcurrentTransfers = 5'                      ParallelTransferThreadCount = 5                  };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileArrayWithEncryption,The following statement contains a magic number: policy = _mediaContext.AccessPolicies.Create("Test"' TimeSpan.FromMinutes(10)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileWithPlayReadyEncryption,The following statement contains a magic number: byte[] contentKey = GetRandomBuffer(16);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,TestQueries,The following statement contains a magic number: var keys = _mediaContext                  .ContentKeys                  .Where(a => a.LastModified < DateTime.UtcNow)                  .OrderByDescending(c => c.Created)                  .Skip(1)                  .Take(5)                  .First();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,TestQueries,The following statement contains a magic number: keys = _mediaContext                  .ContentKeys                  .OrderBy(c => c.Created)                  .Where(a => a.LastModified < DateTime.UtcNow)                  .Skip(1)                  .Take(5)                  .First();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileArrayWithPlayReadyEncryption,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("Write"' TimeSpan.FromMinutes(5)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileArrayWithPlayReadyEncryption,The following statement contains a magic number: var blobclient = new BlobTransferClient                  {                      NumberOfConcurrentTransfers = 5'                      ParallelTransferThreadCount = 5                  };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileArrayWithPlayReadyEncryption,The following statement contains a magic number: var blobclient = new BlobTransferClient                  {                      NumberOfConcurrentTransfers = 5'                      ParallelTransferThreadCount = 5                  };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateAssetFileArrayWithPlayReadyEncryption,The following statement contains a magic number: byte[] contentKey = GetRandomBuffer(16);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateContentKeyWithTrackIdentifers,The following statement contains a magic number: byte[] contentKeyBytes = GetRandomBuffer(16);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldDeleteContentKey,The following statement contains a magic number: byte[] contentKeyBytes = GetRandomBuffer(16);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldCreateStorageEncryptionKey,The following statement contains a magic number: byte[] contentKeyBytes = GetRandomBuffer(32);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldDeleteContentKeyWithDifferentContexts,The following statement contains a magic number: byte[] contentKeyBytes = GetRandomBuffer(16);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,ShouldDeleteAssetWithCommonEncryptionContentKey,The following statement contains a magic number: byte[] contentKeyBytes = GetRandomBuffer(16);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,TestAssetFileDeleteRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,EnsureBufferTransformed,The following statement contains a magic number: bytesThatMatch > (bytesToCompare / 100)
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ContentKeyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\ContentKeyTests.cs,VerifyStorageEncryptionOnFiles,The following statement contains a magic number: var dataFromOriginalFile = new byte[1024];
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestFileTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestFileTests.cs,TestIngestManifestFileCreateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestFileTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestFileTests.cs,TestIngestManifestFileCreateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestFileTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestFileTests.cs,TestIngestManifestFileCreateFailedRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestFileTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestFileTests.cs,TestIngestManifestFileCreateFailedRetryMessageLengthLimitExceeded,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestFileTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestFileTests.cs,TestIngestManifestFileCreateFailedRetryMessageLengthLimitExceeded,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestFileTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestFileTests.cs,TestIngestManifestFileDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestFileTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestFileTests.cs,TestIngestManifestFileDeleteRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AsyncHelperTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\AsyncHelperTests.cs,WaitOperationCompletionTest,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AsyncHelperTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\AsyncHelperTests.cs,WaitOperationCompletionTest,The following statement contains a magic number: var actual = AsyncHelper.WaitOperationCompletion(_mediaContext' data.Id' TimeSpan.FromMilliseconds(10));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AsyncHelperTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\AsyncHelperTests.cs,WaitOperationCompletionTest,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.Execute<OperationData>(It.IsAny<Uri>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,ChannelTestReset,The following statement contains a magic number: var channelName = Guid.NewGuid().ToString().Substring(0' 30);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,ChannelTestCreateTrivial,The following statement contains a magic number: var channelName = Guid.NewGuid().ToString().Substring(0' 30);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,ChannelTestCreateInRunningStateWithVanityUrlFlag,The following statement contains a magic number: var channelName = Guid.NewGuid().ToString().Substring(0' 30);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,ChannelTestDataRefreshAfterStateChange,The following statement contains a magic number: var channelName = Guid.NewGuid().ToString().Substring(0' 30);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,ChannelTestDataRefreshAfterStateChange,The following statement contains a magic number: ReportProgressAndEnsureAsyncOpComplete(channelStartOperation' TimeSpan.FromMinutes(60)' "StartChannel");
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,ChannelTestDataRefreshAfterStateChange,The following statement contains a magic number: ReportProgressAndEnsureAsyncOpComplete(channelStopOperation' TimeSpan.FromMinutes(60)' "StopChannel");
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetChannelMetricsTest,The following statement contains a magic number: var channelName = Guid.NewGuid().ToString().Substring(0' 30);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetChannelMetricsTest,The following statement contains a magic number: op2.Insert(testData[2]);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetChannelMetricsTest,The following statement contains a magic number: op2.Insert(testData[3]);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,TestQuery1,The following statement contains a magic number: Assert.AreEqual(2' resArray.Length);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,TestQuery1,The following statement contains a magic number: VerifyResult(                  resArray.Take(2).ToArray()'                  testData.Take(2).ToArray()'                  channelId'                  accountId);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,TestQuery1,The following statement contains a magic number: VerifyResult(                  resArray.Take(2).ToArray()'                  testData.Take(2).ToArray()'                  channelId'                  accountId);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,TestQuery2,The following statement contains a magic number: Assert.AreEqual(4' resArray.Length);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,TestQuery2,The following statement contains a magic number: VerifyResult(                  resArray.Take(4).ToArray()'                  testData.Take(4).ToArray()'                  channelId'                  accountId);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,TestQuery2,The following statement contains a magic number: VerifyResult(                  resArray.Take(4).ToArray()'                  testData.Take(4).ToArray()'                  channelId'                  accountId);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,TestTableNotExists,The following statement contains a magic number: Assert.AreEqual(2' resArray.Length);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,TestTableNotExists,The following statement contains a magic number: VerifyResult(                  resArray.Take(2).ToArray()'                  testData.Take(2).ToArray()'                  channelId'                  accountId);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,TestTableNotExists,The following statement contains a magic number: VerifyResult(                  resArray.Take(2).ToArray()'                  testData.Take(2).ToArray()'                  channelId'                  accountId);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day1' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00000"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)'                  new ChannelHeartbeatEntity(partitionKey' "07581_00001"' day2' ""'                  "video"' "video"' 2000000' 123456' 0' 0' 131126004929427' serviceId' 10' false' false' false' true)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,MakeChannelInput,The following statement contains a magic number: return new ChannelInput              {                  KeyFrameInterval = TimeSpan.FromSeconds(2)'                  StreamingProtocol = StreamingProtocol.FragmentedMP4'                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,MakeChannelInput,The following statement contains a magic number: return new ChannelInput              {                  KeyFrameInterval = TimeSpan.FromSeconds(2)'                  StreamingProtocol = StreamingProtocol.FragmentedMP4'                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,ChannelTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\ChannelTests.cs,MakeChannelPreview,The following statement contains a magic number: return new ChannelPreview              {                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,StreamingEndpointCreate,The following statement contains a magic number: string testStreamingEndpointName = Guid.NewGuid().ToString().Substring(0' 23);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,StreamingEndpointCreateInRunningState,The following statement contains a magic number: string testStreamingEndpointName = Guid.NewGuid().ToString().Substring(0' 23);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,StreamingEndpointMetricsTest,The following statement contains a magic number: op2.Insert(testData[2]);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,StreamingEndpointMetricsTest,The following statement contains a magic number: op2.Insert(testData[3]);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      yesterday' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      yesterday' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      today' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      today' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      yesterday' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      yesterday' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      today' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      today' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      yesterday' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      yesterday' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      today' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      today' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      yesterday' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      yesterday' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      today' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      today' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      yesterday' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      yesterday' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      today' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      today' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      yesterday' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      yesterday' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      today' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      today' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      yesterday' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      yesterday' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      today' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      today' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      yesterday' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      yesterday' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      today' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      today' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      yesterday' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      yesterday' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      today' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      today' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      yesterday' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      yesterday' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      today' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      today' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      yesterday' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      yesterday' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      today' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      today' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,GetTestData,The following statement contains a magic number: return new[]              {                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      yesterday' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      yesterday' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00000"' serviceId'                      today' "hostname1"' 0' "S_OK"' 1' 2' 30' 30)'                  new StreamingEndPointRequestLogEntity(partitionKey' "07581_00001"' serviceId'                      today' "hostname2"' 0' "S_OK"' 1' 2' 30' 30)'              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,TestQuery1,The following statement contains a magic number: Assert.AreEqual(2' resArray.Length);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,TestQuery1,The following statement contains a magic number: VerifyResult(                  resArray.Take(2).ToArray()'                  testData.Take(2).ToArray()'                  streamingEndpointId);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,TestQuery1,The following statement contains a magic number: VerifyResult(                  resArray.Take(2).ToArray()'                  testData.Take(2).ToArray()'                  streamingEndpointId);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,TestQuery2,The following statement contains a magic number: Assert.AreEqual(4' resArray.Length);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,TestQuery2,The following statement contains a magic number: VerifyResult(                  resArray.Take(4).ToArray()'                  testData.Take(4).ToArray()'                  streamingEndpointId);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,TestQuery2,The following statement contains a magic number: VerifyResult(                  resArray.Take(4).ToArray()'                  testData.Take(4).ToArray()'                  streamingEndpointId);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,TestTableNotExists,The following statement contains a magic number: Assert.AreEqual(2' resArray.Length);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,TestTableNotExists,The following statement contains a magic number: VerifyResult(                  resArray.Take(2).ToArray()'                  testData.Take(2).ToArray()'                  streamingEndpointId);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,StreamingEndpointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\StreamingEndpointTests.cs,TestTableNotExists,The following statement contains a magic number: VerifyResult(                  resArray.Take(2).ToArray()'                  testData.Take(2).ToArray()'                  streamingEndpointId);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,NotificationEndPointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\NotificationEndPointTests.cs,TestNotificationEndPointCreateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,NotificationEndPointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\NotificationEndPointTests.cs,TestNotificationEndPointCreateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,NotificationEndPointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\NotificationEndPointTests.cs,TestNotificationEndPointCreateFailedRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,NotificationEndPointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\NotificationEndPointTests.cs,TestNotificationEndPointCreateFailedRetryMessageLengthLimitExceeded,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,NotificationEndPointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\NotificationEndPointTests.cs,TestNotificationEndPointUpdateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,NotificationEndPointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\NotificationEndPointTests.cs,TestNotificationEndPointUpdateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,NotificationEndPointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\NotificationEndPointTests.cs,TestNotificationEndPointDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,NotificationEndPointTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\NotificationEndPointTests.cs,TestNotificationEndPointDeleteRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,ShouldBeAbleToGetManifests,The following statement contains a magic number: _mediaContext.IngestManifests.Take(5).ToList();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,AddingAdditionalFilesToAssetInManifest,The following statement contains a magic number: Assert.AreEqual(2' ingestManifestRefreshed.Statistics.PendingFilesCount);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,AddingAdditionalFilesToAssetInManifest,The following statement contains a magic number: Assert.AreEqual(3' ingestManifestRefreshed.Statistics.PendingFilesCount);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,CreateManifestEncryptFiles,The following statement contains a magic number: Assert.AreEqual(2' files.Count);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,TestIngestManifestCreateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,TestIngestManifestCreateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(It.IsAny<object>())' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,TestIngestManifestCreateFailedRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,TestIngestManifestCreateFailedRetryMessageLengthLimitExceeded,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 10' expected);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,TestIngestManifestUpdateRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,TestIngestManifestUpdateRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,TestIngestManifestDeleteRetry,The following statement contains a magic number: var dataContextMock = TestMediaServicesClassFactory.CreateSaveChangesMock(fakeException' 2' data);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,TestIngestManifestDeleteRetry,The following statement contains a magic number: dataContextMock.Verify((ctxt) => ctxt.SaveChangesAsync(data)' Times.Exactly(2));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,CreateManifestWithAssetsAndVerifyIt,The following statement contains a magic number: var files2 = new string[2] { TestFile1' TestFile2 };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,CreateManifestWithAssetsAndVerifyIt,The following statement contains a magic number: Assert.AreEqual(2' ingestManifestAssetInfo2.IngestManifestFiles.Count()' "Files collection size is not matching expectations");
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,GetBlockSize,The following statement contains a magic number: const long kb = 1024;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,GetBlockSize,The following statement contains a magic number: const long mb = 1024 * kb;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,GetBlockSize,The following statement contains a magic number: const long maxBlocks = 50000;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,GetBlockSize,The following statement contains a magic number: const long maxBlockSize = 20 * mb;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,GetBlockSize,The following statement contains a magic number: long blocksize = 100 * kb;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,IngestManifestTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\IngestManifestTests.cs,GetBlockSize,The following statement contains a magic number: blocksize += 100 * kb;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,CreateJobFromTemplate,The following statement contains a magic number: IJobTemplate template = job.SaveAsTemplate("JobTemplate" + Guid.NewGuid().ToString().Substring(0' 10));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,CreateJobFromTemplate,The following statement contains a magic number: var jobfromTemplate = _mediaContext.Jobs.Create("JobFromTemplate" + Guid.NewGuid().ToString().Substring(0' 10)' template' new[]{asset});
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReportJobProgress,The following statement contains a magic number: var task = Task.Factory.StartNew(delegate              {                  while (!IsFinalJobState(job.State))                  {                      Thread.Sleep(100);                      double progress = job.Tasks[0].Progress;                      if (progress > 0 && progress <= 100)                      {                          progressChanged = true;                      }                      job.Refresh();                  }              });
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReportJobProgress,The following statement contains a magic number: var task = Task.Factory.StartNew(delegate              {                  while (!IsFinalJobState(job.State))                  {                      Thread.Sleep(100);                      double progress = job.Tasks[0].Progress;                      if (progress > 0 && progress <= 100)                      {                          progressChanged = true;                      }                      job.Refresh();                  }              });
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldCreateJobWithMultipleAssetsAndValidateParentLinks,The following statement contains a magic number: Assert.IsTrue(job.OutputMediaAssets[0].ParentAssets.Count == 3);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMultipleAssetAndVerifyOrderOfInputAssets,The following statement contains a magic number: Assert.IsTrue(job.InputMediaAssets.Count == 3);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMultipleAssetAndVerifyOrderOfInputAssets,The following statement contains a magic number: Assert.IsTrue(job.InputMediaAssets[2].Name == "SmallMP41");
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMesAndMultipleTasksAndSharedOutputAsset,The following statement contains a magic number: Assert.IsTrue(job.OutputMediaAssets.Count == 2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldSubmitAndFinishJobWithMesAndMultipleTasksAndSharedOutputAsset,The following statement contains a magic number: Assert.AreEqual(job.Tasks[1].OutputAssets[0].Id' job.Tasks[2].OutputAssets[0].Id' "Output assets are not the same");
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,TestJobWithTaskNotificationToWebHookEndPointWithEncryption,The following statement contains a magic number: byte[] bytes = new byte[64];
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReceiveNotificationsForCompeletedJob,The following statement contains a magic number: Thread.Sleep((int)TimeSpan.FromMinutes(5).TotalMilliseconds);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReceiveNotificationsForCompeletedJob,The following statement contains a magic number: IEnumerable<CloudQueueMessage> messages = queue.GetMessages(10);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldReceiveNotificationsForCompeletedJob,The following statement contains a magic number: Assert.AreEqual(4' messages.Count()' "Expecting to have 4 notifications messages");
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldUpdateJobPriorityWhenJobIsQueued,The following statement contains a magic number: const int newPriority = 3;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldThrowTryingUpdateJobPriorityWhenJobIsProcessing,The following statement contains a magic number: const int newPriority = 3;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,ShouldThrowTryingUpdateJobPriorityWhenJobIsFinished,The following statement contains a magic number: const int newPriority = 3;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,CreateSmoothAsset,The following statement contains a magic number: IAccessPolicy policy = mediaContext.AccessPolicies.Create("Write"' TimeSpan.FromMinutes(5)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,CreateSmoothAsset,The following statement contains a magic number: var blobclient = new BlobTransferClient             {                 NumberOfConcurrentTransfers = 5'                 ParallelTransferThreadCount = 5             };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,CreateSmoothAsset,The following statement contains a magic number: var blobclient = new BlobTransferClient             {                 NumberOfConcurrentTransfers = 5'                 ParallelTransferThreadCount = 5             };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,WaitForJob,The following statement contains a magic number: jobtask != null && jobtask.Progress > 0 && jobtask.Progress <= 100
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,JobTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\JobTests.cs,WaitForJob,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldReturnSameLocatorCollectionAfterAssetRequery,The following statement contains a magic number: var policy = _mediaContext.AccessPolicies.Create("Write"' TimeSpan.FromMinutes(5)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldReturnSameLocatorCollectionAfterAssetRequery2,The following statement contains a magic number: var policy = _mediaContext.AccessPolicies.Create("Write2"' TimeSpan.FromMinutes(5)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldThrowUpdatingLocatorIfItsTypeIsNotOrigin,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromHours(2)' AccessPermissions.List | AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldReturnLocatorWhenCreateOriginLocatorCalled,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldReturnLocatorWhenCreateOriginLocatorCalled,The following statement contains a magic number: Assert.IsTrue(actual.ExpirationDateTime < DateTime.UtcNow.AddMinutes(11));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWithNameSync,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWithNameSync,The following statement contains a magic number: var locator = _mediaContext.Locators.CreateLocator(LocatorType.OnDemandOrigin' asset' accessPolicy' DateTime.Now.AddDays(2)' "ShouldCreateLocatorWithoutNameAndUpdateName_" + Guid.NewGuid().ToString());
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateSASLocatorWithNameSync,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateSASLocatorWithNameSync,The following statement contains a magic number: var locator = _mediaContext.Locators.CreateSasLocator(asset' accessPolicy' DateTime.Now.AddDays(2)' "ShouldCreateLocatorWithoutNameAndUpdateName_" + Guid.NewGuid().ToString());
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWithNameASync,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWithNameASync,The following statement contains a magic number: var locator = _mediaContext.Locators.CreateLocatorAsync(LocatorType.OnDemandOrigin' asset' accessPolicy' DateTime.Now.AddDays(2)' "ShouldCreateLocatorWithoutNameAndUpdateName_" + Guid.NewGuid().ToString()).Result;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateSASLocatorWithNameASync,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateSASLocatorWithNameASync,The following statement contains a magic number: var locator = _mediaContext.Locators.CreateSasLocatorAsync(asset' accessPolicy' DateTime.Now.AddDays(2)' "ShouldCreateLocatorWithoutNameAndUpdateName_" + Guid.NewGuid().ToString()).Result;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWhenCreateOriginLocatorCalled,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWhenCreateOriginLocatorCalled,The following statement contains a magic number: Assert.IsTrue(actual.ExpirationDateTime < DateTime.UtcNow.AddMinutes(11));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWhenCreateOriginLocatorAsyncCalled,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWhenCreateOriginLocatorAsyncCalled,The following statement contains a magic number: Assert.IsTrue(actual.ExpirationDateTime < DateTime.UtcNow.AddMinutes(11));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,CreateOriginLocatorWithSpecificPermission,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' accessPermissions);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldReturnLocatorWhenCreateOriginLocatorWithStartDateCalled,The following statement contains a magic number: var accessPolicyDuration = TimeSpan.FromMinutes(10);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldReturnLocatorWhenCreateSasLocatorCalled,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldReturnLocatorWhenCreateSasLocatorCalled,The following statement contains a magic number: Assert.IsTrue(actual.ExpirationDateTime < DateTime.UtcNow.AddMinutes(11));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWhenCreateSasLocatorCalled,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWhenCreateSasLocatorCalled,The following statement contains a magic number: Assert.IsTrue(actual.ExpirationDateTime < DateTime.UtcNow.AddMinutes(11));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ExpirationTimeOfCreatedLocatorShouldMatchLocatorStartTimePlusPolicyDuration,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWhenCreateSasLocatorAsyncCalled,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateLocatorWhenCreateSasLocatorAsyncCalled,The following statement contains a magic number: Assert.IsTrue(actual.ExpirationDateTime < DateTime.UtcNow.AddMinutes(11));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldDeleteLocatorWhenDeleteLocatorCalled,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldDeleteLocatorWhenDeleteLocatorAsyncCalled,The following statement contains a magic number: var accessPolicy = _mediaContext.AccessPolicies.Create("TestPolicy"' TimeSpan.FromMinutes(10)' AccessPermissions.List | AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldUpdateExpiryTimeWhenUpdateLocatorCalledWithExpiryTime,The following statement contains a magic number: var accessPolicyDuration = TimeSpan.FromHours(2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldUpdateExpiryTimeWhenUpdateLocatorCalledWithExpiryTime,The following statement contains a magic number: var expectedExpiryTime = DateTime.UtcNow.Date.AddDays(2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldUpdateExpiryTimeWhenUpdateLocatorAsyncCalledWithExpiryTime,The following statement contains a magic number: var accessPolicyDuration = TimeSpan.FromHours(2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldUpdateExpiryTimeWhenUpdateLocatorCalledWithStartAndExpiryTime,The following statement contains a magic number: var accessPolicyDuration = TimeSpan.FromHours(2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldUpdateExpiryTimeWhenUpdateLocatorCalledWithStartAndExpiryTime,The following statement contains a magic number: var expectedExpiryTime = DateTime.UtcNow.Date.AddDays(2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldUpdateExpiryTimeWhenUpdateLocatorAsyncCalledWithStartAndExpiryTime,The following statement contains a magic number: var accessPolicyDuration = TimeSpan.FromHours(2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldUpdateExpiryTimeWhenUpdateLocatorAsyncCalledWithStartAndExpiryTime,The following statement contains a magic number: var expectedExpiryTime = DateTime.UtcNow.Date.AddDays(2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldNotDeleteLocatorAfterASyncUpload,The following statement contains a magic number: var policy = _mediaContext.AccessPolicies.Create("Write"' TimeSpan.FromMinutes(5)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,TestLocatorCreateRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,TestLocatorUpdateRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,TestLocatorDeleteRetry,The following statement contains a magic number: int exceptionCount = 2;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldThrowIfLocatorIdIsInvalidWithoutPrefixWhenCreateOriginLocator,The following statement contains a magic number: IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("Read"' TimeSpan.FromMinutes(5)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldThrowIfLocatorIdIsInvalidWithPrefixWhenCreateOriginLocator,The following statement contains a magic number: IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("Read"' TimeSpan.FromMinutes(5)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldCreateOriginLocator,The following statement contains a magic number: IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("Read"' TimeSpan.FromMinutes(5)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldSetLocatorIdWithoutPrefixWhenCreateOriginLocator,The following statement contains a magic number: IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("Read"' TimeSpan.FromMinutes(5)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldRecreateLocatorWithSameLocatorId,The following statement contains a magic number: IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("Read"' TimeSpan.FromMinutes(5)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,LocatorsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\LocatorsTests.cs,ShouldSetLocatorIdWithPrefixWhenCreateOriginLocator,The following statement contains a magic number: IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("Read"' TimeSpan.FromMinutes(5)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,TestQueries,The following statement contains a magic number: var asset1 = _mediaContext                  .Assets                  .OrderByDescending(c => c.Created)                  .Where(a => a.Name.Length > 1)                  .Skip(10)                  .Take(5)                  .First();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,TestQueries,The following statement contains a magic number: var asset1 = _mediaContext                  .Assets                  .OrderByDescending(c => c.Created)                  .Where(a => a.Name.Length > 1)                  .Skip(10)                  .Take(5)                  .First();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,TestQueries,The following statement contains a magic number: var asset2 = _mediaContext                  .Assets                  .Where(a => a.Name.Length > 1)                  .Skip(10)                  .Take(5)                  .First();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,TestQueries,The following statement contains a magic number: var asset2 = _mediaContext                  .Assets                  .Where(a => a.Name.Length > 1)                  .Skip(10)                  .Take(5)                  .First();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,TestQueries,The following statement contains a magic number: var asset3 = _mediaContext                  .Assets                  .Where(a => a.Name.Length > 1)                  .OrderByDescending(c => c.Created)                  .Skip(10)                  .Take(5)                  .First();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,TestQueries,The following statement contains a magic number: var asset3 = _mediaContext                  .Assets                  .Where(a => a.Name.Length > 1)                  .OrderByDescending(c => c.Created)                  .Skip(10)                  .Take(5)                  .First();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFile,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("temp"' TimeSpan.FromMinutes(10)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFileFromEmptyStream,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("temp"' TimeSpan.FromMinutes(10)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFileFromSmallStream,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("temp"' TimeSpan.FromMinutes(10)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFileFromBigStream,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("temp"' TimeSpan.FromMinutes(10)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetFileFromNetworkStream,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("temp"' TimeSpan.FromMinutes(10)'                  AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldThrowArgumentExceptionOnAssetUploadWhenLocalFileNameNotMatchingAssetFileName,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("temp"' TimeSpan.FromMinutes(10)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateEncryptedInitilizedAsset,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("temp"' TimeSpan.FromMinutes(10)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateEncryptedInitilizedAssetFromStream,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("temp"' TimeSpan.FromMinutes(10)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateEmptyNoneEncryptedAssetUploadFileAndDownloadIt,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("temp"' TimeSpan.FromMinutes(10)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateEmptyAssetUploadTwoFilesSetPrimaryAndDownloadFile,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("temp"' TimeSpan.FromMinutes(10)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateEmptyAssetUploadTwoFilesSetPrimaryAndDownloadFile,The following statement contains a magic number: Assert.AreEqual(2' asset.AssetFiles.Count());
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateEmptyAssetUploadTwoFilesSetPrimaryAndDownloadFile,The following statement contains a magic number: Assert.AreEqual(2' refreshedAsset.AssetFiles.Count()' "file count wrong");
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateEmptyAssetUploadTwoFilesSetPrimaryAndDownloadFile,The following statement contains a magic number: VerifyAndDownloadAsset(refreshedAsset' 2'_smallWmv'false);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,CreateAssetAndUpload4FilesUsingSyncCall,The following statement contains a magic number: const int expected = 4;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetAndUpload10FilesUsingSyncCall,The following statement contains a magic number: const int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetAndUpload4FilesUsingAsyncCall,The following statement contains a magic number: const int expected = 4;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetAndUpload10FilesUsingAsyncCall,The following statement contains a magic number: const int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetAndUploadAndDownload10FilesUsingAsyncCall,The following statement contains a magic number: const int expected = 10;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetAndUploadAndDownload10FilesUsingAsyncCall,The following statement contains a magic number: IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("SdkDownload"' TimeSpan.FromHours(12)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetAndCreate100FilesUsingAsyncCall,The following statement contains a magic number: i < 100
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetAndCreate100FilesUsingAsyncCall,The following statement contains a magic number: Assert.AreEqual(100' files.Where(c => c.IsCompleted).Count());
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldDownloadSameAssetFile2TimesIdenticallyAsStorageSDK,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("temp"' TimeSpan.FromMinutes(10)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldDownloadSameAssetFile2TimesIdenticallyAsStorageSDK,The following statement contains a magic number: Assert.AreEqual(2' refreshedAsset.AssetFiles.Count()' "file count wrong");
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldDownloadSameAssetFile2TimesIdenticallyAsStorageSDK,The following statement contains a magic number: VerifyAndDownloadAsset(refreshedAsset' 2'_smallWmv'false);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldDownloadSameAssetFile2TimesIdenticallyAsStorageSDK,The following statement contains a magic number: i < 2
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldNotThrowTryingToDeleteAssetWithActiveLocators,The following statement contains a magic number: IAccessPolicy accessPolicy = _mediaContext.AccessPolicies.Create("ReadOnly"' TimeSpan.FromMinutes(60)' AccessPermissions.Read);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldNotThrowTryingToDeleteAssetWithActiveLocators,The following statement contains a magic number: Assert.AreEqual(3' asset.Locators.Count);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldCreateAssetAsyncWithMultipleFiles,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("Write"' TimeSpan.FromMinutes(5)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldReportProgressForFile,The following statement contains a magic number: IAccessPolicy policy = _mediaContext.AccessPolicies.Create("Write"' TimeSpan.FromMinutes(5)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,ShouldSetContentFileSizeOnAssetFileWithoutUpload,The following statement contains a magic number: expected = 100;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,CreateAsset,The following statement contains a magic number: IAccessPolicy policy = datacontext.AccessPolicies.Create("Write"' TimeSpan.FromMinutes(5)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,CreateAsset,The following statement contains a magic number: blobTransferClient.NumberOfConcurrentTransfers = 5;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,CreateAsset,The following statement contains a magic number: blobTransferClient.ParallelTransferThreadCount = 5;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,VerifyAndDownloadAsset,The following statement contains a magic number: Assert.AreEqual(100' _downloadProgress);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,CompareStreams,The following statement contains a magic number: const int bufferSize = 1024;
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,AssetTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\AssetTests.cs,CreateAssetAndUploadNFilesUsingAsyncCall,The following statement contains a magic number: IAccessPolicy policy = mediaContext.AccessPolicies.Create("Write"' TimeSpan.FromMinutes(20)' AccessPermissions.Write);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests,MonitoringConfigurationE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Telemetry\MonitoringConfigurationE2ETests.cs,VerifyMonitoringSettings,The following statement contains a magic number: Assert.AreEqual(componentMonitoringSettings.Count' 2);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Tests.DynamicEncryption,TokenServiceClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\DynamicEncryption\TokenClient.cs,GetAuthTokenForKey,The following statement contains a magic number: unsignedToken = unsignedToken.Replace("EXPIRY"' GenerateTokenExpiry(DateTime.UtcNow.AddDays(10)));
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,CreateStreamingTest,The following statement contains a magic number: IStreamingEndpoint streamingEndpoint = _dataContext.StreamingEndpoints.Create(                  new StreamingEndpointCreationOptions(TestStreamingEndpointName' 2)                  {                      CrossSiteAccessPolicies = GetAccessPolicies()'                      AccessControl = GetAccessControl()'                      CacheControl = GetCacheControl()                  });
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,StreamingEndpointCustomDomain,The following statement contains a magic number: var domains = new[] { "a"' "b" }.Select(i =>                  string.Format("{0}{1}.testingcustomdomain.com"' i' new Random().Next(1000' 9999).ToString()))                  .ToList();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,StreamingEndpointCustomDomain,The following statement contains a magic number: var domains = new[] { "a"' "b" }.Select(i =>                  string.Format("{0}{1}.testingcustomdomain.com"' i' new Random().Next(1000' 9999).ToString()))                  .ToList();
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,ObtainTestStreamingEndpoint,The following statement contains a magic number: result = _dataContext.StreamingEndpoints.Create(                      new StreamingEndpointCreationOptions(TestStreamingEndpointName' 2)                      {                          CrossSiteAccessPolicies = GetAccessPolicies()'                          AccessControl = GetAccessControl()'                          CacheControl = GetCacheControl()                      });
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,GetCacheControl,The following statement contains a magic number: return new StreamingEndpointCacheControl              {                  MaxAge = TimeSpan.FromMinutes(30)              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,GetAccessControl,The following statement contains a magic number: return new StreamingEndpointAccessControl              {                  IPAllowList = new List<IPRange>                  {                      new IPRange                      {                          Name = "IP List 1"'                          Address = IPAddress.Parse("131.107.0.0")'                          SubnetPrefixLength = 16                      }'                      new IPRange                      {                          Name = "IP List 2"'                          Address = IPAddress.Parse("131.107.192.0")'                          SubnetPrefixLength = 24                      }                  }'                    AkamaiSignatureHeaderAuthenticationKeyList = new List<AkamaiSignatureHeaderAuthenticationKey>                  {                      new AkamaiSignatureHeaderAuthenticationKey                      {                          Identifier = "a1"'                          Expiration = DateTime.UtcNow + TimeSpan.FromDays(365)'                          Base64Key = Convert.ToBase64String(GenerateRandomBytes(16))                      }'                      new AkamaiSignatureHeaderAuthenticationKey                      {                          Identifier = "a2"'                          Expiration = DateTime.UtcNow + TimeSpan.FromDays(365)'                          Base64Key = Convert.ToBase64String(GenerateRandomBytes(16))                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,GetAccessControl,The following statement contains a magic number: return new StreamingEndpointAccessControl              {                  IPAllowList = new List<IPRange>                  {                      new IPRange                      {                          Name = "IP List 1"'                          Address = IPAddress.Parse("131.107.0.0")'                          SubnetPrefixLength = 16                      }'                      new IPRange                      {                          Name = "IP List 2"'                          Address = IPAddress.Parse("131.107.192.0")'                          SubnetPrefixLength = 24                      }                  }'                    AkamaiSignatureHeaderAuthenticationKeyList = new List<AkamaiSignatureHeaderAuthenticationKey>                  {                      new AkamaiSignatureHeaderAuthenticationKey                      {                          Identifier = "a1"'                          Expiration = DateTime.UtcNow + TimeSpan.FromDays(365)'                          Base64Key = Convert.ToBase64String(GenerateRandomBytes(16))                      }'                      new AkamaiSignatureHeaderAuthenticationKey                      {                          Identifier = "a2"'                          Expiration = DateTime.UtcNow + TimeSpan.FromDays(365)'                          Base64Key = Convert.ToBase64String(GenerateRandomBytes(16))                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,GetAccessControl,The following statement contains a magic number: return new StreamingEndpointAccessControl              {                  IPAllowList = new List<IPRange>                  {                      new IPRange                      {                          Name = "IP List 1"'                          Address = IPAddress.Parse("131.107.0.0")'                          SubnetPrefixLength = 16                      }'                      new IPRange                      {                          Name = "IP List 2"'                          Address = IPAddress.Parse("131.107.192.0")'                          SubnetPrefixLength = 24                      }                  }'                    AkamaiSignatureHeaderAuthenticationKeyList = new List<AkamaiSignatureHeaderAuthenticationKey>                  {                      new AkamaiSignatureHeaderAuthenticationKey                      {                          Identifier = "a1"'                          Expiration = DateTime.UtcNow + TimeSpan.FromDays(365)'                          Base64Key = Convert.ToBase64String(GenerateRandomBytes(16))                      }'                      new AkamaiSignatureHeaderAuthenticationKey                      {                          Identifier = "a2"'                          Expiration = DateTime.UtcNow + TimeSpan.FromDays(365)'                          Base64Key = Convert.ToBase64String(GenerateRandomBytes(16))                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,GetAccessControl,The following statement contains a magic number: return new StreamingEndpointAccessControl              {                  IPAllowList = new List<IPRange>                  {                      new IPRange                      {                          Name = "IP List 1"'                          Address = IPAddress.Parse("131.107.0.0")'                          SubnetPrefixLength = 16                      }'                      new IPRange                      {                          Name = "IP List 2"'                          Address = IPAddress.Parse("131.107.192.0")'                          SubnetPrefixLength = 24                      }                  }'                    AkamaiSignatureHeaderAuthenticationKeyList = new List<AkamaiSignatureHeaderAuthenticationKey>                  {                      new AkamaiSignatureHeaderAuthenticationKey                      {                          Identifier = "a1"'                          Expiration = DateTime.UtcNow + TimeSpan.FromDays(365)'                          Base64Key = Convert.ToBase64String(GenerateRandomBytes(16))                      }'                      new AkamaiSignatureHeaderAuthenticationKey                      {                          Identifier = "a2"'                          Expiration = DateTime.UtcNow + TimeSpan.FromDays(365)'                          Base64Key = Convert.ToBase64String(GenerateRandomBytes(16))                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,GetAccessControl,The following statement contains a magic number: return new StreamingEndpointAccessControl              {                  IPAllowList = new List<IPRange>                  {                      new IPRange                      {                          Name = "IP List 1"'                          Address = IPAddress.Parse("131.107.0.0")'                          SubnetPrefixLength = 16                      }'                      new IPRange                      {                          Name = "IP List 2"'                          Address = IPAddress.Parse("131.107.192.0")'                          SubnetPrefixLength = 24                      }                  }'                    AkamaiSignatureHeaderAuthenticationKeyList = new List<AkamaiSignatureHeaderAuthenticationKey>                  {                      new AkamaiSignatureHeaderAuthenticationKey                      {                          Identifier = "a1"'                          Expiration = DateTime.UtcNow + TimeSpan.FromDays(365)'                          Base64Key = Convert.ToBase64String(GenerateRandomBytes(16))                      }'                      new AkamaiSignatureHeaderAuthenticationKey                      {                          Identifier = "a2"'                          Expiration = DateTime.UtcNow + TimeSpan.FromDays(365)'                          Base64Key = Convert.ToBase64String(GenerateRandomBytes(16))                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,GetAccessControl,The following statement contains a magic number: return new StreamingEndpointAccessControl              {                  IPAllowList = new List<IPRange>                  {                      new IPRange                      {                          Name = "IP List 1"'                          Address = IPAddress.Parse("131.107.0.0")'                          SubnetPrefixLength = 16                      }'                      new IPRange                      {                          Name = "IP List 2"'                          Address = IPAddress.Parse("131.107.192.0")'                          SubnetPrefixLength = 24                      }                  }'                    AkamaiSignatureHeaderAuthenticationKeyList = new List<AkamaiSignatureHeaderAuthenticationKey>                  {                      new AkamaiSignatureHeaderAuthenticationKey                      {                          Identifier = "a1"'                          Expiration = DateTime.UtcNow + TimeSpan.FromDays(365)'                          Base64Key = Convert.ToBase64String(GenerateRandomBytes(16))                      }'                      new AkamaiSignatureHeaderAuthenticationKey                      {                          Identifier = "a2"'                          Expiration = DateTime.UtcNow + TimeSpan.FromDays(365)'                          Base64Key = Convert.ToBase64String(GenerateRandomBytes(16))                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,MakeChannelInput,The following statement contains a magic number: return new ChannelInput              {                  KeyFrameInterval = TimeSpan.FromSeconds(2)'                  StreamingProtocol = StreamingProtocol.FragmentedMP4'                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,MakeChannelInput,The following statement contains a magic number: return new ChannelInput              {                  KeyFrameInterval = TimeSpan.FromSeconds(2)'                  StreamingProtocol = StreamingProtocol.FragmentedMP4'                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveE2ETests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveE2ETests.cs,MakeChannelPreview,The following statement contains a magic number: return new ChannelPreview              {                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,LiveEncodingChannelShowSlateTest,The following statement contains a magic number: IChannel channel = _mediaContext.Channels.Create(                  new ChannelCreationOptions                  {                      Name = Guid.NewGuid().ToString().Substring(0' 30)'                      Input = MakeChannelInput()'                      Preview = MakeChannelPreview()'                      Output = MakeChannelOutput()'                      EncodingType = ChannelEncodingType.Standard'                      Encoding = MakeChannelEncoding(ChannelEncodingType.Standard)                  });
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,LiveEncodingChannelShowSlateTest,The following statement contains a magic number: channel.ShowSlate(TimeSpan.FromMinutes(5)' null);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,LiveEncodingChannelShowSlateTest,The following statement contains a magic number: channel.StartAdvertisement(TimeSpan.FromMinutes(10)' 1000);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,LiveEncodingChannelShowSlateTest,The following statement contains a magic number: channel.StartAdvertisement(TimeSpan.FromMinutes(10)' 1000);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,LiveEncodingChannelShowSlateTest,The following statement contains a magic number: channel.EndAdvertisement(1000);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,LiveEncodingChannelShowSlateTest,The following statement contains a magic number: channel.StartAdvertisement(TimeSpan.FromMinutes(10)' 1001' false);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,LiveEncodingChannelShowSlateTest,The following statement contains a magic number: channel.StartAdvertisement(TimeSpan.FromMinutes(10)' 1001' false);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,LiveEncodingChannelShowSlateTest,The following statement contains a magic number: channel.EndAdvertisement(1001);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,TestStreamSelectionPersistence,The following statement contains a magic number: var channelOptions = new ChannelCreationOptions              {                  Name = Guid.NewGuid().ToString().Substring(0' 30)'                  Input = MakeChannelInput()'                  Preview = MakeChannelPreview()'                  Output = MakeChannelOutput()'                  EncodingType = ChannelEncodingType.Standard'                  Encoding = new ChannelEncoding                  {                      SystemPreset = "Default720p"'                      VideoStreams = new List<VideoStream>                      {                          new VideoStream { Index = 0 }                      }.AsReadOnly()'                      AudioStreams = new List<AudioStream>                      {                          new AudioStream { Index = 1' Language = "eng" }'                          new AudioStream { Index = 2' Language = "fra" }'                          new AudioStream { Index = 3' Language = "spa" }                      }.AsReadOnly()                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,TestStreamSelectionPersistence,The following statement contains a magic number: var channelOptions = new ChannelCreationOptions              {                  Name = Guid.NewGuid().ToString().Substring(0' 30)'                  Input = MakeChannelInput()'                  Preview = MakeChannelPreview()'                  Output = MakeChannelOutput()'                  EncodingType = ChannelEncodingType.Standard'                  Encoding = new ChannelEncoding                  {                      SystemPreset = "Default720p"'                      VideoStreams = new List<VideoStream>                      {                          new VideoStream { Index = 0 }                      }.AsReadOnly()'                      AudioStreams = new List<AudioStream>                      {                          new AudioStream { Index = 1' Language = "eng" }'                          new AudioStream { Index = 2' Language = "fra" }'                          new AudioStream { Index = 3' Language = "spa" }                      }.AsReadOnly()                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,TestStreamSelectionPersistence,The following statement contains a magic number: var channelOptions = new ChannelCreationOptions              {                  Name = Guid.NewGuid().ToString().Substring(0' 30)'                  Input = MakeChannelInput()'                  Preview = MakeChannelPreview()'                  Output = MakeChannelOutput()'                  EncodingType = ChannelEncodingType.Standard'                  Encoding = new ChannelEncoding                  {                      SystemPreset = "Default720p"'                      VideoStreams = new List<VideoStream>                      {                          new VideoStream { Index = 0 }                      }.AsReadOnly()'                      AudioStreams = new List<AudioStream>                      {                          new AudioStream { Index = 1' Language = "eng" }'                          new AudioStream { Index = 2' Language = "fra" }'                          new AudioStream { Index = 3' Language = "spa" }                      }.AsReadOnly()                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,LivePremiumEncodingChannelTest,The following statement contains a magic number: IChannel channel = _mediaContext.Channels.Create(                  new ChannelCreationOptions                  {                      Name = Guid.NewGuid().ToString().Substring(0' 30)'                      Input = MakeChannelInput()'                      Preview = MakeChannelPreview()'                      Output = MakeChannelOutput()'                      EncodingType = ChannelEncodingType.Premium'                      Encoding = MakeChannelEncoding(ChannelEncodingType.Premium)                  });
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,LivePremiumEncodingChannelTest,The following statement contains a magic number: Thread.Sleep(1000 * 10);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,LivePremiumEncodingChannelTest,The following statement contains a magic number: Thread.Sleep(1000 * 10);
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,MakeChannelInput,The following statement contains a magic number: return new ChannelInput              {                  KeyFrameInterval = TimeSpan.FromSeconds(2)'                  StreamingProtocol = StreamingProtocol.RTPMPEG2TS'                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,MakeChannelInput,The following statement contains a magic number: return new ChannelInput              {                  KeyFrameInterval = TimeSpan.FromSeconds(2)'                  StreamingProtocol = StreamingProtocol.RTPMPEG2TS'                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,MakeChannelPreview,The following statement contains a magic number: return new ChannelPreview              {                  AccessControl = new ChannelAccessControl                  {                      IPAllowList = new List<IPRange>                      {                          new IPRange                          {                              Name = "testName1"'                              Address = IPAddress.Parse("1.1.1.1")'                              SubnetPrefixLength = 24                          }                      }                  }              };
Magic Number,Microsoft.WindowsAzure.MediaServices.Client.Live.Tests,LiveEncodingTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-media-services\test\net\Scenario\Live\LiveTranscodingTest.cs,MakeChannelEncoding,The following statement contains a magic number: return new ChannelEncoding              {                  SystemPreset = encodingType == ChannelEncodingType.Standard ? "Default720p" : "Default1080p"'                  IgnoreCea708ClosedCaptions = false'                  AdMarkerSource = AdMarkerSource.Api'                  AudioStreams = new List<AudioStream> {new AudioStream {Index = 103' Language = "eng"}}.AsReadOnly()              };
