Implementation smell,Namespace,Class,File,Method,Description
Long Method,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The method has 169 lines of code.
Long Method,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The method has 103 lines of code.
Complex Method,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,Cyclomatic complexity of the method is 11
Long Parameter List,SharpMTProto,MTProtoClientBuilder,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.PCL\MTProtoClientBuilder.cs,MTProtoClientBuilder,The method has 8 parameters. Parameters: clientTransportFactory' tlRig' messageIdGenerator' messageCodec' hashServices' encryptionServices' nonceGenerator' keyChain
Long Parameter List,SharpMTProto,MTProtoClientConnection,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\MTProtoClientConnection.cs,MTProtoClientConnection,The method has 5 parameters. Parameters: clientTransportConfig' clientTransportFactory' tlRig' messageIdGenerator' messageCodec
Long Parameter List,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,AuthKeyNegotiator,The method has 7 parameters. Parameters: clientTransportConfig' mtProtoBuilder' tlRig' nonceGenerator' hashServices' encryptionServices' keyChain
Long Parameter List,SharpMTProto.Messaging,IMessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,EncodeEncryptedMessage,The method has 5 parameters. Parameters: message' authKey' salt' sessionId' sender
Long Parameter List,SharpMTProto.Messaging,IMessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,DecodeEncryptedMessage,The method has 5 parameters. Parameters: messageBytes' authKey' sender' salt' sessionId
Long Parameter List,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,EncodeEncryptedMessage,The method has 5 parameters. Parameters: message' authKey' salt' sessionId' sender
Long Parameter List,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,DecodeEncryptedMessage,The method has 5 parameters. Parameters: messageBytes' authKey' sender' salt' sessionId
Long Parameter List,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The method has 5 parameters. Parameters: authKey' msgKey' aesKey' aesIV' sender
Long Identifier,SharpMTProto,MTProtoClientConnection,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\MTProtoClientConnection.cs,RequestAsync,The length of the parameter timeoutCancellationTokenSource is 30.
Long Identifier,SharpMTProto,MTProtoClientConnection,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\MTProtoClientConnection.cs,SendAsync,The length of the parameter timeoutCancellationTokenSource is 30.
Long Statement,SharpMTProto,MTProtoClientBuilder,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.PCL\MTProtoClientBuilder.cs,BuildConnection,The length of the statement  "            return new MTProtoClientConnection(clientTransportConfig' _clientTransportFactory' _tlRig' _messageIdGenerator' _messageCodec); " is 127.
Long Statement,SharpMTProto,MTProtoClientConnection,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\MTProtoClientConnection.cs,SendAsync,The length of the statement  "            byte[] messageBytes = EncodeMessage(CreateMessage(requestBody' flags.HasFlag(MessageSendingFlags.ContentRelated))' flags.HasFlag(MessageSendingFlags.Encrypted)); " is 161.
Long Statement,SharpMTProto,MTProtoClientConnection,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\MTProtoClientConnection.cs,ProcessIncomingMessageBytes,The length of the statement  "                        throw new InvalidMessageException(string.Format("Invalid session ID {0}. Expected {1}."' sessionId' _config.SessionId)); " is 120.
Long Statement,SharpMTProto,MTProtoClientConnection,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\MTProtoClientConnection.cs,ThrowIfEncryptionIsNotSupported,The length of the statement  "                throw new InvalidOperationException("Encryption is not supported. Setup encryption first by calling Configure() method."); " is 122.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                    resPQ.ServerPublicKeyFingerprints.Aggregate("public keys fingerprints:"' (text' fingerprint) => text + " " + fingerprint.ToString("X8")))); " is 139.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                    throw new InvalidResponseException("The new nonce hash received from the server does NOT match with hash of the sent new nonce hash."); " is 135.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                /**************************************************************************************************************************************** " is 137.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                 * and that 2^2047 < p < 2^2048)' and that g generates a cyclic subgroup of prime order (p-1)/2' i.e. is a quadratic residue mod p. " is 130.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                 * no extra condition for g = 4; p mod 5 = 1 or 4 for g = 5; p mod 24 = 19 or 23 for g = 6; and p mod 7 = 3' 5 or 6 for g = 7. " is 125.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                 * After g and p have been checked by the client' it makes sense to cache the result' so as not to repeat lengthy computations in future. " is 136.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                 * Server changes these values rarely' thus one usually has to put the current value of server's dh_prime into such a table. " is 123.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                 * C71CAEB9C6B1C9048E6C522F70F13F73980D40238E3E21C14934D037563D930F48198A0AA7C14058229493D22530F4DBFA336F6E0AC925139543AED44CCE7C3720FD51 " is 136.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                 * F69458705AC68CD4FE6B6B13ABDC9746512969328454F18FAF8C595F642477FE96BB2A941D5BCD1D4AC8CC49880708FA9B378E3C4F3A9060BEE67CF9A4A4A695811051 " is 136.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                 * 907E162753B56B0F6B410DBA74D8A84B2A14B3144E0EF1284754FD17ED950D5965B4B9DD46582DB1178D169C6BC465B0D6FF9CA3928FEF5B9AE4E418FC15E83EBEA0F8 " is 136.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                 ****************************************************************************************************************************************/ " is 137.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                    Log.Debug(string.Format("DH data: B={0}' G={1}' GB={2}' P={3}' S={4}."' b.ToHexString()' g.ToHexString()' dhOutParams.GB.ToHexString()' " is 135.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The length of the statement  "                    var setClientDHParamsArgs = new SetClientDHParamsArgs {Nonce = nonce' ServerNonce = serverNonce' EncryptedData = encryptedData}; " is 128.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CheckNonce,The length of the statement  "                throw new InvalidResponseException(string.Format("Expected nonce {0:X16} differs from the actual nonce {1:X16}."' expectedNonce' actualNonce)); " is 143.
Long Statement,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,ComputeTmpAesKeyAndIV,The length of the statement  "            // tmp_aes_iv := substr (SHA1(server_nonce + new_nonce)' 12' 8) + SHA1(new_nonce + new_nonce) + substr (new_nonce' 0' 4); " is 121.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "             * 16: msg_id too low (most likely' client time is wrong; it would be worthwhile to synchronize it using msg_id notifications " is 124.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "             *     and re-send the original message with the “correct” msg_id or wrap it in a container with a new msg_id if the original " is 124.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "             * 17: msg_id too high (similar to the previous case' the client time has to be synchronized' and the message re-sent with the correct msg_id) " is 141.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "             * 32: msg_seqno too low (the server has already received a message with a lower msg_id but with either a higher or an equal and odd seqno) " is 138.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "             * 33: msg_seqno too high (similarly' there is a message with a higher msg_id but with either a lower or an equal and odd seqno) " is 127.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "             * 48: incorrect server salt (in this case' the bad_server_salt response is received with the correct salt' and the message is to be re-sent with it) " is 148.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "             * The intention is that error_code values are grouped (error_code >> 4): for example' the codes 0x40 - 0x4f correspond to errors in container decomposition. " is 156.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "             * Important: if server_salt has changed on the server or if client time is incorrect' any query will result in a notification in the above format. " is 146.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "             * The client must check that it has' in fact' recently sent a message with the specified msg_id' and if that is the case' " is 121.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "             * update its time correction value (the difference between the client’s and the server’s clocks) and the server salt based on msg_id " is 132.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "             * In the meantime' the original message (the one that caused the error message to be returned) must also be re-sent with a better msg_id and/or server_salt. " is 156.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "            Log.Warning(string.Format("Bad message notification received with error code: {0} ({1})."' response.ErrorCode' errorCode)); " is 123.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "                        "Bad message (MsgId: 0x{0:X}) was found' but message sequence number is not the same ({1}) as server expected ({2}). Ignored."' " is 127.
Long Statement,SharpMTProto.Messaging.Handlers,BadMsgNotificationHandler,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\BadMsgNotificationHandler.cs,HandleInternalAsync,The length of the statement  "                    Log.Warning(string.Format("Error code must be '{0}' for a BadServerSalt notification' but found '{1}'."' ErrorCode.IncorrectServerSalt' errorCode)); " is 148.
Long Statement,SharpMTProto.Messaging.Handlers,ResponseDispatcher,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\ResponseDispatcher.cs,DispatchAsync,The length of the statement  "            IResponseHandler handler = _handlers.Where(pair => pair.Key.IsAssignableFromEx(responseType)).Select(pair => pair.Value).FirstOrDefault(); " is 138.
Long Statement,SharpMTProto.Messaging.Handlers,ResponseDispatcher,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\ResponseDispatcher.cs,DispatchAsync,The length of the statement  "                        string.Format("No handler found for response of type '{0}' and there is no fallback handler. Message was ignored."' responseType.Name)); " is 136.
Long Statement,SharpMTProto.Messaging.Handlers,ResponseDispatcher,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\ResponseDispatcher.cs,AddHandler,The length of the statement  "                    Log.Warning(string.Format("Prevented addition of another handler '{0}' for response of type '{1}'."' handler.GetType()' handler.ResponseType.Name)); " is 148.
Long Statement,SharpMTProto.Messaging.Handlers,ResponseHandler<TResponse>,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Handlers\ResponseHandler.cs,HandleAsync,The length of the statement  "                throw new MTProtoException(string.Format("Expected response type to be '{0}'' but found '{1}'."' ResponseTypeInternal' responseMessage.Body.GetType())); " is 152.
Long Statement,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,DecodeEncryptedMessage,The length of the statement  "                    throw new InvalidAuthKey(string.Format("Message encrypted with auth key with id={0}' but auth key provided for decryption with id={1}."' authKeyId' " is 147.
Long Statement,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,DecodeEncryptedMessage,The length of the statement  "                throw new InvalidMessageException(string.Format("Expected message key to be {0}' but actual is {1}."' expectedMsgKey' msgKey)); " is 127.
Long Statement,SharpMTProto.Messaging,MessageSerializer,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageSerializer.cs,ReadTypedBody,The length of the statement  "                throw new TLSerializationException(String.Format("Body length ({0}) is greated than available to read bytes till end ({1})."' bodyLength' " is 137.
Long Statement,SharpMTProto.Messaging,Request<TResponse>,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\Request.cs,SetResponse,The length of the statement  "                throw new MTProtoException(string.Format("Wrong response type {0}. Expected: {1}."' response.GetType()' typeof (TResponse).Name)); " is 130.
Long Statement,SharpMTProto.Messaging,RequestsManager,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\RequestsManager.cs,GetFirstOrDefault,The length of the statement  "            return _requests.Values.FirstOrDefault(r => r.CanSetResponse(response) && (!r.Flags.HasFlag(MessageSendingFlags.RPC) || includeRpc)); " is 133.
Long Statement,SharpMTProto.Transport,TcpTransportPacket,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Transport\TcpTransportPacket.cs,InitAndCheckConsistency,The length of the statement  "                    throw new TransportException(string.Format("Invalid packet length. Expected: {0}' actual: {1}."' expectedLength' length)); " is 122.
Magic Number,SharpMTProto,MTProtoClientConnection,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\MTProtoClientConnection.cs,ProcessIncomingMessageBytes,The following statement contains a magic number: messageBytes.Length == 4
Magic Number,SharpMTProto,MTProtoClientConnection,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\MTProtoClientConnection.cs,ProcessIncomingMessageBytes,The following statement contains a magic number: messageBytes.Length < 20
Magic Number,SharpMTProto,MTProtoClientConnection,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\MTProtoClientConnection.cs,GetNextMsgSeqno,The following statement contains a magic number: uint result = _messageSeqNumber*2 + x;
Magic Number,SharpMTProto,MTProtoClientConnection,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\MTProtoClientConnection.cs,GetNextSessionId,The following statement contains a magic number: return ((ulong) Rnd.Next() << 32) + (ulong) Rnd.Next();
Magic Number,SharpMTProto,MTProtoClientConnection,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\MTProtoClientConnection.cs,Dispose,The following statement contains a magic number: Disconnect().Wait(5000);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The following statement contains a magic number: Int128 nonce = _nonceGenerator.GetNonce(16).ToInt128();
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The following statement contains a magic number: byte[] b = _nonceGenerator.GetNonce(256);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The following statement contains a magic number: authKeyAuxHash = ComputeSHA1(authKey).Take(8).ToArray();
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The following statement contains a magic number: byte[] dataWithHash = PrependHashAndAlign(data' 16);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The following statement contains a magic number: Int128 newNonceHash2 = ComputeNewNonceHash(newNonce' 2' authKeyAuxHash);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateAuthKey,The following statement contains a magic number: Int128 newNonceHash3 = ComputeNewNonceHash(newNonce' 3' authKeyAuxHash);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,ComputeNewNonceHash,The following statement contains a magic number: var arr = new byte[33 + authKeyAuxHash.Length];
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,ComputeNewNonceHash,The following statement contains a magic number: Int128 result = hash.ToInt128(HashLength - 16);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,DecryptServerDHInnerData,The following statement contains a magic number: (answerWithHash.Length%16) != 0
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,ComputeTmpAesKeyAndIV,The following statement contains a magic number: tmpAesKey = new byte[32];
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,ComputeTmpAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(spnHash' 0' tmpAesKey' HashLength' 12);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,ComputeTmpAesKeyAndIV,The following statement contains a magic number: tmpAesIV = new byte[32];
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,ComputeTmpAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(spnHash' 12' tmpAesIV' 0' 8);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,ComputeTmpAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(spnHash' 12' tmpAesIV' 0' 8);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,ComputeTmpAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(npnHash' 0' tmpAesIV' 8' HashLength);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,ComputeTmpAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(newNonceBytes' 0' tmpAesIV' 28' 4);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,ComputeTmpAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(newNonceBytes' 0' tmpAesIV' 28' 4);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateReqDhParamsArgs,The following statement contains a magic number: Int256 newNonce = _nonceGenerator.GetNonce(32).ToInt256();
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateReqDhParamsArgs,The following statement contains a magic number: Debug.Assert((dataHash.Length + data.Length) <= 255);
Magic Number,SharpMTProto.Authentication,AuthKeyNegotiator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\AuthKeyNegotiator.cs,CreateReqDhParamsArgs,The following statement contains a magic number: var dataWithHash = new byte[255];
Magic Number,SharpMTProto.Authentication,KeyChain,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Authentication\KeyChain.cs,ComputeFingerprint,The following statement contains a magic number: return hash.ToUInt64(hash.Length - 8);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAuthKeyId,The following statement contains a magic number: return authKeySHA1.ToUInt64(authKeySHA1.Length - 8' true);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeMsgKey,The following statement contains a magic number: return innerDataSHA1.ToInt128(innerDataSHA1.Length - 16' true);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: switch (sender)              {                  case Sender.Client:                      x = 0;                      break;                  case Sender.Server:                      x = 8;                      break;                  default:                      throw new ArgumentOutOfRangeException("sender");              }
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: byte[] buffer = _aesKeyAndIVComputationBuffer ?? (_aesKeyAndIVComputationBuffer = new byte[32 + MsgKeyLength]);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(authKey' x' buffer' MsgKeyLength' 32);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(authKey' 32 + x' buffer' 0' 16);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(authKey' 32 + x' buffer' 0' 16);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(msgKeyBytes' 0' buffer' 16' MsgKeyLength);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(authKey' 48 + x' buffer' 16 + MsgKeyLength' 16);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(authKey' 48 + x' buffer' 16 + MsgKeyLength' 16);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(authKey' 48 + x' buffer' 16 + MsgKeyLength' 16);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(authKey' 64 + x' buffer' 0' 32);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(authKey' 64 + x' buffer' 0' 32);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(msgKeyBytes' 0' buffer' 32' MsgKeyLength);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(authKey' 96 + x' buffer' MsgKeyLength' 32);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(authKey' 96 + x' buffer' MsgKeyLength' 32);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: aesKey = new byte[32];
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1A' 0' aesKey' 0' 8);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1B' 8' aesKey' 8' 12);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1B' 8' aesKey' 8' 12);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1B' 8' aesKey' 8' 12);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1C' 4' aesKey' 20' 12);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1C' 4' aesKey' 20' 12);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1C' 4' aesKey' 20' 12);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: aesIV = new byte[32];
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1A' 8' aesIV' 0' 12);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1A' 8' aesIV' 0' 12);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1B' 0' aesIV' 12' 8);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1B' 0' aesIV' 12' 8);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1C' 16' aesIV' 20' 4);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1C' 16' aesIV' 20' 4);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1C' 16' aesIV' 20' 4);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1D' 0' aesIV' 24' 8);
Magic Number,SharpMTProto.Messaging,MessageCodec,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageCodec.cs,ComputeAesKeyAndIV,The following statement contains a magic number: Buffer.BlockCopy(sha1D' 0' aesIV' 24' 8);
Magic Number,SharpMTProto.Messaging,MessageSerializer,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageSerializer.cs,WriteTypedBody,The following statement contains a magic number: streamer.Position += 4;
Magic Number,SharpMTProto.Messaging,MessageSerializer,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Messaging\MessageSerializer.cs,WriteTypedBody,The following statement contains a magic number: streamer.Position = bodyStartPosition - 4;
Magic Number,SharpMTProto.Schema,Message,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Schema\SharpMTProto.Schema.Ex.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (int) Seqno;
Magic Number,SharpMTProto.Schema,Message,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Schema\SharpMTProto.Schema.Ex.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (Body != null ? Body.GetHashCode() : 0);
Magic Number,SharpMTProto.Services,EncryptionServices,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\EncryptionServices.cs,Aes256IgeEncrypt,The following statement contains a magic number: var iv1 = new byte[iv.Length/2];
Magic Number,SharpMTProto.Services,EncryptionServices,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\EncryptionServices.cs,Aes256IgeEncrypt,The following statement contains a magic number: var iv2 = new byte[iv.Length/2];
Magic Number,SharpMTProto.Services,EncryptionServices,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\EncryptionServices.cs,Aes256IgeEncrypt,The following statement contains a magic number: Array.Copy(iv' iv.Length/2' iv2' 0' iv2.Length);
Magic Number,SharpMTProto.Services,EncryptionServices,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\EncryptionServices.cs,Aes256IgeEncrypt,The following statement contains a magic number: const int blockSize = 16;
Magic Number,SharpMTProto.Services,EncryptionServices,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\EncryptionServices.cs,Aes256IgeDecrypt,The following statement contains a magic number: var iv1 = new byte[iv.Length/2];
Magic Number,SharpMTProto.Services,EncryptionServices,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\EncryptionServices.cs,Aes256IgeDecrypt,The following statement contains a magic number: var iv2 = new byte[iv.Length/2];
Magic Number,SharpMTProto.Services,EncryptionServices,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\EncryptionServices.cs,Aes256IgeDecrypt,The following statement contains a magic number: Array.Copy(iv' iv.Length/2' iv2' 0' iv2.Length);
Magic Number,SharpMTProto.Services,EncryptionServices,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\EncryptionServices.cs,Aes256IgeDecrypt,The following statement contains a magic number: const int blockSize = 16;
Magic Number,SharpMTProto.Services,HashServices,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\HashServices.cs,ComputeSHA1,The following statement contains a magic number: var output = new byte[20];
Magic Number,SharpMTProto.Services,HashServices,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\HashServices.cs,ComputeSHA1,The following statement contains a magic number: var buffer = new byte[256];
Magic Number,SharpMTProto.Services,HashServices,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\HashServices.cs,ComputeSHA1,The following statement contains a magic number: (read = stream.Read(buffer' 0' 256)) > 0
Magic Number,SharpMTProto.Services,HashServices,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\HashServices.cs,ComputeSHA1,The following statement contains a magic number: var output = new byte[20];
Magic Number,SharpMTProto.Services,MessageIdGenerator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\MessageIdGenerator.cs,GetNextMessageId,The following statement contains a magic number: messageId = (messageId*4294967 + (messageId*296/1000)) & X4Mask;
Magic Number,SharpMTProto.Services,MessageIdGenerator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\MessageIdGenerator.cs,GetNextMessageId,The following statement contains a magic number: messageId = (messageId*4294967 + (messageId*296/1000)) & X4Mask;
Magic Number,SharpMTProto.Services,MessageIdGenerator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\MessageIdGenerator.cs,GetNextMessageId,The following statement contains a magic number: messageId = (messageId*4294967 + (messageId*296/1000)) & X4Mask;
Magic Number,SharpMTProto.Services,MessageIdGenerator,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Services\MessageIdGenerator.cs,GetNextMessageId,The following statement contains a magic number: messageId = _lastMessageId + 4;
Magic Number,SharpMTProto.Transport,TcpClientTransportConfig,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Transport\TcpClientTransportConfig.cs,TcpClientTransportConfig,The following statement contains a magic number: ConnectTimeout = TimeSpan.FromMilliseconds(5000);
Magic Number,SharpMTProto.Transport,TcpClientTransportConfig,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Transport\TcpClientTransportConfig.cs,TcpClientTransportConfig,The following statement contains a magic number: MaxBufferSize = 2048;
Magic Number,SharpMTProto.Transport,TcpTransportPacket,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Transport\TcpTransportPacket.cs,ComputeCrc32,The following statement contains a magic number: return BigMath.Utils.Crc32.Compute(_data' 0' _data.Length - 4);
Magic Number,SharpMTProto.Transport,TcpTransportPacket,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Transport\TcpTransportPacket.cs,InitAndCheckConsistency,The following statement contains a magic number: streamer.Seek(-4' SeekOrigin.End);
Magic Number,SharpMTProto.Transport,TcpTransportPacket,D:\research\architectureSmells\repos1\Taggersoft_SharpMTProto\src\SharpMTProto.Shared\Transport\TcpTransportPacket.cs,GetPayloadCopy,The following statement contains a magic number: Buffer.BlockCopy(_data' 8' buffer' offset' PayloadLength);
