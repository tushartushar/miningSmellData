Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Samples.POCO,PocoSample,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\POCO\POCOSample.cs,CreateKeyspace,The length of the statement  "            const string createKeyspace = "CREATE KEYSPACE videos WITH replication = {'class': 'SimpleStrategy'' 'replication_factor' : 1}"; " is 128.
Long Statement,Samples.POCO,PocoSample,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\POCO\POCOSample.cs,InternalRun,The length of the statement  "            var taskSelectStartMovies = cmd.Execute<NerdMovie>(selectNerdMovies).AsFuture().ContinueWith(res => DisplayMovies(res.Result)); " is 127.
Long Statement,Samples.PreparedStatement,BatchSample,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\PreparedStatement\BatchSample.cs,CreateKeyspace,The length of the statement  "            const string createKeyspaceFoo = "CREATE KEYSPACE Foo WITH replication = {'class': 'SimpleStrategy'' 'replication_factor' : 1}";" is 128.
Long Statement,Samples.Stress,ResilienceTest,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,RecoveryTest,The length of the statement  "                const string createFoo = "CREATE KEYSPACE data WITH replication = {'class': 'SimpleStrategy'' 'replication_factor' : 1}"; " is 121.
Empty Catch Block,Samples,Sample,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Sample.cs,Run,The method has an empty catch block.
Empty Catch Block,Samples.Stress,DisconnectingProxy,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,Killer,The method has an empty catch block.
Empty Catch Block,Samples.Stress,DisconnectingProxy,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,Transmit,The method has an empty catch block.
Empty Catch Block,Samples.Stress,ResilienceTest,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,RecoveryTest,The method has an empty catch block.
Magic Number,Samples.Async,AsyncSample,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Async\AsyncSample.cs,InternalRun,The following statement contains a magic number: i < 100
Magic Number,Samples.Future,FutureSample,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Future\FutureSample.cs,InternalRun,The following statement contains a magic number: i < 100
Magic Number,Samples.PreparedStatement,BatchSample,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\PreparedStatement\BatchSample.cs,InternalRun,The following statement contains a magic number: const int times = 10;
Magic Number,Samples.PreparedStatement,BatchSample,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\PreparedStatement\BatchSample.cs,InternalRun,The following statement contains a magic number: var data = new byte[30000];
Magic Number,Samples.PreparedStatement,BatchSample,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\PreparedStatement\BatchSample.cs,InternalRun,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Samples.Stress,DisconnectingProxy,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,Start,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,Samples.Stress,DisconnectingProxy,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,Worker,The following statement contains a magic number: listenSocket.Listen(10);
Magic Number,Samples.Stress,DisconnectingProxy,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,Worker,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,Samples.Stress,DisconnectingProxy,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,Killer,The following statement contains a magic number: Thread.Sleep(rnd.Next(500));
Magic Number,Samples.Stress,DisconnectingProxy,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,Killer,The following statement contains a magic number: int proba = rnd.Next(1000);
Magic Number,Samples.Stress,DisconnectingProxy,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,Killer,The following statement contains a magic number: _enableKiller && 900 < proba
Magic Number,Samples.Stress,DisconnectingProxy,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,Transmit,The following statement contains a magic number: byte[] buffer = new byte[1024];
Magic Number,Samples.Stress,ResilienceTest,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,RecoveryTest,The following statement contains a magic number: CassandraSharpConfig cassandraSharpConfig = new CassandraSharpConfig              {                  Logger = new LoggerConfig { Type = typeof(ResilienceLogger).AssemblyQualifiedName }'                  Recovery = new RecoveryConfig { Interval = 2 }              };
Magic Number,Samples.Stress,ResilienceTest,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,RecoveryTest,The following statement contains a magic number: ClusterConfig clusterConfig = new ClusterConfig              {                  Endpoints = new EndpointsConfig                  {                      Servers = new[] { "cassandra1" }'                  }'                  Transport = new TransportConfig                  {                      Port = 666'                      ReceiveTimeout = 10 * 1000'                  }              };
Magic Number,Samples.Stress,ResilienceTest,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,RecoveryTest,The following statement contains a magic number: ClusterConfig clusterConfig = new ClusterConfig              {                  Endpoints = new EndpointsConfig                  {                      Servers = new[] { "cassandra1" }'                  }'                  Transport = new TransportConfig                  {                      Port = 666'                      ReceiveTimeout = 10 * 1000'                  }              };
Magic Number,Samples.Stress,ResilienceTest,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,RecoveryTest,The following statement contains a magic number: ClusterConfig clusterConfig = new ClusterConfig              {                  Endpoints = new EndpointsConfig                  {                      Servers = new[] { "cassandra1" }'                  }'                  Transport = new TransportConfig                  {                      Port = 666'                      ReceiveTimeout = 10 * 1000'                  }              };
Magic Number,Samples.Stress,ResilienceTest,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,RecoveryTest,The following statement contains a magic number: DisconnectingProxy proxy = new DisconnectingProxy(666' 9042);
Magic Number,Samples.Stress,ResilienceTest,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,RecoveryTest,The following statement contains a magic number: DisconnectingProxy proxy = new DisconnectingProxy(666' 9042);
Magic Number,Samples.Stress,ResilienceTest,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\Stress\StressTest.cs,RecoveryTest,The following statement contains a magic number: i < 100000
Magic Number,Samples.TimeOut,TimeOutSample,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\TimeOut\TimeOutSample.cs,InternalRun,The following statement contains a magic number: CancellationTokenSource cts = new CancellationTokenSource(10);
Magic Number,Samples.TimeOut,TimeOutSample,C:\research\architectureSmells\repos\pchalamet_cassandra-sharp\Samples\TimeOut\TimeOutSample.cs,InternalRun,The following statement contains a magic number: i < 10
