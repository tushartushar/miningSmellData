Implementation smell,Namespace,Class,File,Method,Description
Complex Method,HBoard.Chess.Units,QueenUnit,C:\repos\Hyftar_HBoard\HBoard\Chess\Units\QueenUnit.cs,GetMovementPaths,Cyclomatic complexity of the method is 11
Long Parameter List,HBoard.Chess.Generation,GenerationHelper,C:\repos\Hyftar_HBoard\HBoard\Chess\Generation\GenerationHelper.cs,AddUnit,The method has 5 parameters.
Long Parameter List,HBoard.Chess.Units,AxisHelper,C:\repos\Hyftar_HBoard\HBoard\Chess\Units\AxisHelper.cs,AdvancePosition,The method has 6 parameters.
Long Statement,HBoard.Chess.Units,AxisHelper,C:\repos\Hyftar_HBoard\HBoard\Chess\Units\AxisHelper.cs,GetPath,The length of the statement  "	return new MovementPath (location: position' vectors: new SpecializedMovementVector (direction: direction' metric: metric' movement: movement)); " is 144.
Long Statement,HBoard.Chess.Units,BishopUnit,C:\repos\Hyftar_HBoard\HBoard\Chess\Units\BishopUnit.cs,GetMovementPaths,The length of the statement  "		bool isOnPrimeAxis = primeAdjustment + currentPosition.X == currentPosition.Y' isOnLastAxis = lastAdjustment - currentPosition.X == currentPosition.Y; " is 150.
Long Statement,HBoard.Chess.Units,QueenUnit,C:\repos\Hyftar_HBoard\HBoard\Chess\Units\QueenUnit.cs,GetMovementPaths,The length of the statement  "		bool isOnVerticalAxis = currentPosition.Y == position.Y' isOnHorizontalAxis = currentPosition.X == position.X' isOnPrimeAxis = primeAdjustment + currentPosition.X == currentPosition.Y' isOnLastAxis = lastAdjustment - currentPosition.X == currentPosition.Y; " is 256.
Magic Number,HBoard.Chess.Generation,ClassicBoard,C:\repos\Hyftar_HBoard\HBoard\Chess\Generation\ClassicBoard.cs,GenerateClassicBoard,The following statement contains a magic number: if (context.Players.Length != 2)  	throw new BoardGenerationException ("A classic board may only be generated with two players.");  
Magic Number,HBoard.Chess.Generation,ClassicBoard,C:\repos\Hyftar_HBoard\HBoard\Chess\Generation\ClassicBoard.cs,GenerateClassicBoard,The following statement contains a magic number: for (int i = 0; i < board.Height; i++) {  	board [1' i].Content = new PawnUnit (white);  	board [board.Width - 2' i].Content = new PawnUnit (black);  }  
Magic Number,HBoard.Chess.Generation,ClassicBoard,C:\repos\Hyftar_HBoard\HBoard\Chess\Generation\ClassicBoard.cs,GenerateClassicBoard,The following statement contains a magic number: board [board.Width - 2' i].Content = new PawnUnit (black);  
Magic Number,HBoard.Core,GameOptions,C:\repos\Hyftar_HBoard\HBoard\Core\GameOptions.cs,GameOptions,The following statement contains a magic number: this.BoardSize = new Size (8' 8);  
Magic Number,HBoard.Core,GameOptions,C:\repos\Hyftar_HBoard\HBoard\Core\GameOptions.cs,GameOptions,The following statement contains a magic number: this.BoardSize = new Size (8' 8);  
