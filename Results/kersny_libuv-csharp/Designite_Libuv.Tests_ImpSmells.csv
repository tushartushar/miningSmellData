Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Libuv.Tests,webserver,D:\research\architectureSmells\repos\kersny_libuv-csharp\src\Libuv.Tests\webserver.cs,Main,The following statement contains a magic number: var endpoint = new IPEndPoint(new IPAddress(new byte[] { 127' 0' 0' 1})' 8081);
Magic Number,Libuv.Tests,webserver,D:\research\architectureSmells\repos\kersny_libuv-csharp\src\Libuv.Tests\webserver.cs,Main,The following statement contains a magic number: var endpoint = new IPEndPoint(new IPAddress(new byte[] { 127' 0' 0' 1})' 8081);
Magic Number,Libuv.Tests,webserver,D:\research\architectureSmells\repos\kersny_libuv-csharp\src\Libuv.Tests\webserver.cs,Main,The following statement contains a magic number: var server = new TcpServer((socket) => {  				clientcount++;  				socket.Stream.Write(System.Text.Encoding.ASCII.GetBytes(clientcount.ToString())' 1);  				if (clientcount > 5) {  					socket.Close();  				}  				Console.WriteLine("Client Connected");  				socket.Stream.OnRead += (data) => {  					Console.WriteLine("Data Recieved: {0}"' System.Text.Encoding.ASCII.GetString(data' 0' data.Length));  					socket.Stream.Write(data' data.Length);  				};  				//socket.OnClose += () => {  				//	Console.WriteLine("Client Disconnected");  				//};  			});
Magic Number,Libuv.Tests,webserver,D:\research\architectureSmells\repos\kersny_libuv-csharp\src\Libuv.Tests\webserver.cs,Main,The following statement contains a magic number: var pipeserver = new PipeServer((socket) => {  				clientcount++;  				socket.Stream.Write(System.Text.Encoding.ASCII.GetBytes(clientcount.ToString())' 1);  				if (clientcount > 5) {  					socket.Close();  				}  				Console.WriteLine("Pipe Client Connected");  				socket.Stream.OnRead += (data) => {  					Console.WriteLine("Pipe Data Recieved: {0}"' System.Text.Encoding.ASCII.GetString(data' 0' data.Length));  					socket.Stream.Write(data' data.Length);  				};  				//socket.OnClose += () => {  				//	Console.WriteLine("Client Disconnected");  				//};  			});
Magic Number,Libuv.Tests,webserver,D:\research\architectureSmells\repos\kersny_libuv-csharp\src\Libuv.Tests\webserver.cs,Main,The following statement contains a magic number: var after = new TimerWatcher(new TimeSpan(0'0'5)' new TimeSpan(1'0'0)' () => {  				//Console.WriteLine("After 5 Seconds");  			});
Magic Number,Libuv.Tests,webserver,D:\research\architectureSmells\repos\kersny_libuv-csharp\src\Libuv.Tests\webserver.cs,Main,The following statement contains a magic number: var every = new TimerWatcher(new TimeSpan(0'0'5)' () => {  				//Console.WriteLine("Every 5 Seconds");  			//	after.Stop();  			});
