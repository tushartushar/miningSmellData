Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,plotMeasrdAndTyp,Cyclomatic complexity of the method is 11
Long Parameter List,PlotGen,dbConnection,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\dbConnection.cs,getDVCstm,The method has 8 parameters.
Long Parameter List,PlotGen,dbConnection,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\dbConnection.cs,getDVCstmAvg,The method has 6 parameters.
Long Parameter List,PlotGen,DataValue,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\ODMModel.Designer.cs,CreateDataValue,The method has 11 parameters.
Long Parameter List,PlotGen,Site,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\ODMModel.Designer.cs,CreateSite,The method has 6 parameters.
Long Parameter List,PlotGen,Variable,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\ODMModel.Designer.cs,CreateVariable,The method has 13 parameters.
Long Parameter List,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,plotMeasrdAndTyp,The method has 8 parameters.
Long Parameter List,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getData,The method has 7 parameters.
Long Parameter List,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getDataTyp,The method has 5 parameters.
Long Statement,PlotGen,dbConnection,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\dbConnection.cs,getDV,The length of the statement  "	where DV.SiteID == site && DV.VariableID == var && DV.CensorCode == "nc" && DV.LocalDateTime >= startdate && DV.LocalDateTime <= enddate " is 136.
Long Statement,PlotGen,dbConnection,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\dbConnection.cs,getDVCstm,The length of the statement  "	where DV.Site.SiteCode == site_code && DV.Variable.VariableCode == var_code && DV.CensorCode == "nc" && DV.LocalDateTime >= startdate && DV.LocalDateTime <= enddate && DV.DataValue1 != NoDV && DV.DataValue1 > min && DV.DataValue1 < max " is 235.
Long Statement,PlotGen,dbConnection,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\dbConnection.cs,getDVCstmAvg,The length of the statement  "	where DV.Site.SiteCode == site_code && DV.Variable.VariableCode == var_code && DV.CensorCode == "nc" && DV.DataValue1 != NoDV && DV.DataValue1 > min && DV.DataValue1 < max " is 171.
Long Statement,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,plotMeasrdAndTyp,The length of the statement  "	LineItem upperSite_M = new LineItem (site_code == "LR_WaterLab_AA" ? "Logan River Upper Site" : "Little Bear River Upper Site"' MeasUpper' Color.Black' SymbolType.None' graphWidth); " is 181.
Long Statement,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,plotMeasrdAndTyp,The length of the statement  "	LineItem lowerSite_M = new LineItem (site_code == "LR_WaterLab_AA" ? "Logan River Lower Site" : "Little Bear River Lower Site"' MeasLower' Color.Blue' SymbolType.None' graphWidth); " is 180.
Long Statement,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,plotMeasrdAndTyp,The length of the statement  "	LineItem upperSite_T = new LineItem (site_code == "LR_WaterLab_AA" ? "Logan River Upper Site" : "Little Bear River Upper Site"' TypAvgUpper' Color.Black' SymbolType.None' graphWidth); " is 183.
Long Statement,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,plotMeasrdAndTyp,The length of the statement  "	LineItem lowerSite_T = new LineItem (site_code == "LR_WaterLab_AA" ? "Logan River Lower Site" : "Little Bear River Lower Site"' TypAvgLower' Color.Blue' SymbolType.None' graphWidth); " is 182.
Long Statement,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,plotMeasrdAndTyp,The length of the statement  "	graphPaneMeas.GetImage ().Save (Properties.Settings.Default.imagePath + "\\" + @"measured_" + site_code + "_" + second_site + "_" + var_code + ".png"' ImageFormat.Png); " is 168.
Long Statement,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,plotMeasrdAndTyp,The length of the statement  "	graphPaneTyp.GetImage ().Save (Properties.Settings.Default.imagePath + "\\" + @"typical_" + site_code + "_" + second_site + "_" + var_code + ".png"' ImageFormat.Png); " is 166.
Long Statement,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getData,The length of the statement  "			if (!(Convert.ToDouble (row ["DataValue1"]) == NoDV || Convert.ToDouble (row ["DataValue1"]) < lBnd || Convert.ToDouble (row ["DataValue1"]) > upBnd)) { " is 152.
Long Statement,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getData,The length of the statement  "				graphPoints.Add ((double)new XDate (dateShowing.Year' dateShowing.Month' dateShowing.Day' dateShowing.Hour' dateShowing.Minute' dateShowing.Second)' Convert.ToDouble (row ["DataValue1"])); " is 188.
Long Statement,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getData,The length of the statement  "				graphPoints.Add ((double)new XDate (dateShowing.Year' dateShowing.Month' dateShowing.Day' dateShowing.Hour' dateShowing.Minute' dateShowing.Second)' double.NaN); " is 161.
Long Statement,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getDataTyp,The length of the statement  "			double curDate = (double)new XDate (dateShowing.Year' dateShowing.Month' dateShowing.Day' dateShowing.Hour' dateShowing.Minute' dateShowing.Second); " is 148.
Empty Catch Block,PlotGen,clsRemoveDataGaps,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\clsRemoveDataGaps.cs,calcGaps,The method has an empty catch block.
Empty Catch Block,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getDataTyp,The method has an empty catch block.
Magic Number,PlotGen,clsRemoveDataGaps,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\clsRemoveDataGaps.cs,missingValues,The following statement contains a magic number: for (int i = 1; i < list.Count; i++) {  	double curDate = list [i].X;  	double prevDate = list [i - 1].X;  	//if currdate - prevdate is greater than 1 day   	double diff = curDate - prevDate;  	if (diff > 3) {  		//insert two values between the two points with NaN as the value  		list.Insert (i' prevDate + 1' double.NaN);  		list.Insert (i + 1' curDate - 1' double.NaN);  		i = i + 2;  	}  }  
Magic Number,PlotGen,clsRemoveDataGaps,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\clsRemoveDataGaps.cs,missingValues,The following statement contains a magic number: for (int i = 1; i < list.Count; i++) {  	double curDate = list [i].X;  	double prevDate = list [i - 1].X;  	//if currdate - prevdate is greater than 1 day   	double diff = curDate - prevDate;  	if (diff > 3) {  		//insert two values between the two points with NaN as the value  		list.Insert (i' prevDate + 1' double.NaN);  		list.Insert (i + 1' curDate - 1' double.NaN);  		i = i + 2;  	}  }  
Magic Number,PlotGen,clsRemoveDataGaps,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\clsRemoveDataGaps.cs,missingValues,The following statement contains a magic number: if (diff > 3) {  	//insert two values between the two points with NaN as the value  	list.Insert (i' prevDate + 1' double.NaN);  	list.Insert (i + 1' curDate - 1' double.NaN);  	i = i + 2;  }  
Magic Number,PlotGen,clsRemoveDataGaps,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\clsRemoveDataGaps.cs,missingValues,The following statement contains a magic number: if (diff > 3) {  	//insert two values between the two points with NaN as the value  	list.Insert (i' prevDate + 1' double.NaN);  	list.Insert (i + 1' curDate - 1' double.NaN);  	i = i + 2;  }  
Magic Number,PlotGen,clsRemoveDataGaps,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\clsRemoveDataGaps.cs,missingValues,The following statement contains a magic number: i = i + 2;  
Magic Number,PlotGen,plotGen,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\plotGen.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (284' 262);  
Magic Number,PlotGen,plotGen,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\plotGen.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (284' 262);  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [2] = VAR_NAME + "' " + VAR_UNIT;  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [3] = "-5";  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [4] = "40";  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [2] = VAR_NAME + "' " + VAR_UNIT;  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [3] = "2";  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [4] = "20";  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [2] = VAR_NAME + "' " + VAR_UNIT;  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [3] = "-5";  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [4] = "1650";  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [2] = VAR_NAME + "' " + VAR_UNIT;  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [3] = "-5";  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [4] = "40";  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [2] = VAR_NAME + "' " + VAR_UNIT;  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [3] = "2";  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,Main,The following statement contains a magic number: meta [4] = "20";  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,plotMeasrdAndTyp,The following statement contains a magic number: miny = 99999;  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,plotMeasrdAndTyp,The following statement contains a magic number: maxy = -99999;  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getDataTyp,The following statement contains a magic number: foreach (DataRow row in values1yr.Rows) {  	DateTime dateShowing;  	try {  		dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' (int)row ["Day"]);  	}  	catch (Exception ex) {  		System.Console.WriteLine ("Leap Year");  		dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' ((int)row ["Day"]) - 1' 23' 59' 59);  	}  	try {  		double? curValue = (double)row ["DataValue1"];  		double curDate = (double)new XDate (dateShowing.Year' dateShowing.Month' dateShowing.Day' dateShowing.Hour' dateShowing.Minute' dateShowing.Second);  		graphPoints.Add (curDate' curValue.Value);  	}  	catch (Exception ex) {  	}  }  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getDataTyp,The following statement contains a magic number: foreach (DataRow row in values1yr.Rows) {  	DateTime dateShowing;  	try {  		dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' (int)row ["Day"]);  	}  	catch (Exception ex) {  		System.Console.WriteLine ("Leap Year");  		dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' ((int)row ["Day"]) - 1' 23' 59' 59);  	}  	try {  		double? curValue = (double)row ["DataValue1"];  		double curDate = (double)new XDate (dateShowing.Year' dateShowing.Month' dateShowing.Day' dateShowing.Hour' dateShowing.Minute' dateShowing.Second);  		graphPoints.Add (curDate' curValue.Value);  	}  	catch (Exception ex) {  	}  }  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getDataTyp,The following statement contains a magic number: foreach (DataRow row in values1yr.Rows) {  	DateTime dateShowing;  	try {  		dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' (int)row ["Day"]);  	}  	catch (Exception ex) {  		System.Console.WriteLine ("Leap Year");  		dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' ((int)row ["Day"]) - 1' 23' 59' 59);  	}  	try {  		double? curValue = (double)row ["DataValue1"];  		double curDate = (double)new XDate (dateShowing.Year' dateShowing.Month' dateShowing.Day' dateShowing.Hour' dateShowing.Minute' dateShowing.Second);  		graphPoints.Add (curDate' curValue.Value);  	}  	catch (Exception ex) {  	}  }  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getDataTyp,The following statement contains a magic number: try {  	dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' (int)row ["Day"]);  }  catch (Exception ex) {  	System.Console.WriteLine ("Leap Year");  	dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' ((int)row ["Day"]) - 1' 23' 59' 59);  }  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getDataTyp,The following statement contains a magic number: try {  	dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' (int)row ["Day"]);  }  catch (Exception ex) {  	System.Console.WriteLine ("Leap Year");  	dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' ((int)row ["Day"]) - 1' 23' 59' 59);  }  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getDataTyp,The following statement contains a magic number: try {  	dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' (int)row ["Day"]);  }  catch (Exception ex) {  	System.Console.WriteLine ("Leap Year");  	dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' ((int)row ["Day"]) - 1' 23' 59' 59);  }  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getDataTyp,The following statement contains a magic number: dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' ((int)row ["Day"]) - 1' 23' 59' 59);  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getDataTyp,The following statement contains a magic number: dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' ((int)row ["Day"]) - 1' 23' 59' 59);  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,getDataTyp,The following statement contains a magic number: dateShowing = new DateTime (DateTime.Now.Year' (int)row ["Month"]' ((int)row ["Day"]) - 1' 23' 59' 59);  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,formatXaxis,The following statement contains a magic number: gPane.XAxis.Scale.Min = minX.ToOADate () - (.025 * rangeX);  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,formatXaxis,The following statement contains a magic number: gPane.XAxis.Scale.Max = maxX.ToOADate () + (.025 * rangeX);  
Magic Number,PlotGen,Program,C:\repos\UCHIC_InteractivePlots\src\LoganLittleBear\PlotGen\Program.cs,formatYaxis,The following statement contains a magic number: gPane.YAxis.Scale.Max = maxY + (.1 * rangeY);  
