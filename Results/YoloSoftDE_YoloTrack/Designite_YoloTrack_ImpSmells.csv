Implementation smell,Namespace,Class,File,Method,Description
Complex Method,YoloTrack.MVC.Model.RuntimeDatabase,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\RuntimeDatabase\Model.cs,Refresh,Cyclomatic complexity of the method is 10
Complex Method,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,Run,Cyclomatic complexity of the method is 8
Complex Method,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,Cyclomatic complexity of the method is 46
Long Parameter List,YoloTrack.MVC.Controller,Controller,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Controller\Controller.cs,Controller,The method has 8 parameters.
Long Parameter List,YoloTrack.MVC.Model.Configuration,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Configuration\Model.cs,GetPrivateProfileString,The method has 6 parameters.
Long Statement,YoloTrack.MVC.Controller,Controller,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Controller\Controller.cs,m_app_view_FormClosed,The length of the statement  "	/* Shutdown Cognitec API *//* Nothing to do here *//* Shutdown Database *//* > Store Database as file */m_database.SaveTo (m_configuration.Options.Database.FileName); " is 166.
Long Statement,YoloTrack.MVC.Model.Configuration,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Configuration\Model.cs,LoadFrom,The length of the statement  "	idd.IdentifyThreshold = float.Parse (GetString (FileName' "Identification"' "IdentifyThreshold"' "0.4")' CultureInfo.InvariantCulture); " is 135.
Long Statement,YoloTrack.MVC.Model.Configuration,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Configuration\Model.cs,LoadFrom,The length of the statement  "	idd.LearnThreshold = float.Parse (GetString (FileName' "Identification"' "LearnThreshold"' "0.2")' CultureInfo.InvariantCulture); " is 129.
Long Statement,YoloTrack.MVC.Model.Configuration,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Configuration\Model.cs,SaveTo,The length of the statement  "	WriteString (FileName' "Identification"' "IdentifyThreshold"' this.Options.IdentificationData.IdentifyThreshold.ToString (CultureInfo.InvariantCulture)); " is 153.
Long Statement,YoloTrack.MVC.Model.Configuration,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Configuration\Model.cs,SaveTo,The length of the statement  "	WriteString (FileName' "Identification"' "LearnThreshold"' this.Options.IdentificationData.LearnThreshold.ToString (CultureInfo.InvariantCulture)); " is 147.
Long Statement,YoloTrack.MVC.Model.Configuration,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Configuration\Model.cs,SaveTo,The length of the statement  "	WriteString (FileName' "Identification"' "IdentificationTimeout"' this.Options.IdentificationData.IdentificationTimeout.ToString ()); " is 133.
Long Statement,YoloTrack.MVC.Model.Database,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Database\Model.cs,_unserialize_from,The length of the statement  "		IdentificationRecord ir = new IdentificationRecord (m_identification_api.IdentificationRecordBuilder.build (fir_stream)); " is 121.
Long Statement,YoloTrack.MVC.Model.Database,Serializer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Database\Serializer.cs,Serialize,The length of the statement  "	var data_ptr = Bitmap.LockBits (new System.Drawing.Rectangle (0' 0' Bitmap.Width' Bitmap.Height)' System.Drawing.Imaging.ImageLockMode.ReadWrite' System.Drawing.Imaging.PixelFormat.Format32bppRgb); " is 197.
Long Statement,YoloTrack.MVC.Model.Database,Serializer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Database\Serializer.cs,UnserializeImage,The length of the statement  "	var data_ptr = bitmap.LockBits (new System.Drawing.Rectangle (0' 0' bitmap.Width' bitmap.Height)' System.Drawing.Imaging.ImageLockMode.ReadWrite' System.Drawing.Imaging.PixelFormat.Format32bppRgb); " is 197.
Long Statement,YoloTrack.MVC.Model.RuntimeDatabase,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\RuntimeDatabase\Model.cs,SelectLeastIdentifyAttempts,The length of the statement  "		if (entry.Value.State == RuntimeDatabase.RecordState.Unidentified || entry.Value.State == RuntimeDatabase.RecordState.Unknown) { " is 128.
Long Statement,YoloTrack.MVC.Model.Sensor,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Sensor\Model.cs,Initialize,The length of the statement  "		throw new SensorException ("Initialization of Kinect Sensor failed. Please check the connection to the power supply (" + Status.ToString () + ")"); " is 147.
Long Statement,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,Run,The length of the statement  "		if ((DateTime.Now - start_time).TotalMilliseconds >= m_configuration.Options.IdentificationData.IdentificationTimeout) { " is 120.
Long Statement,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The length of the statement  "			Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4); " is 162.
Long Statement,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,WriteBitmap,The length of the statement  "	System.Drawing.Imaging.BitmapData bmp_data = bmp.LockBits (new Rectangle (0' 0' rect.Width' rect.Height)' System.Drawing.Imaging.ImageLockMode.ReadWrite' System.Drawing.Imaging.PixelFormat.Format32bppRgb); " is 205.
Long Statement,YoloTrack.MVC.Model.StateMachine.Impl.Util,CompatibleImage,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\Util\CompatibleImage.cs,FromBitmap,The length of the statement  "	ci.data_ptr_color = ci.color.LockBits (new Rectangle (0' 0' ci.color.Width' ci.color.Height)' System.Drawing.Imaging.ImageLockMode.ReadWrite' System.Drawing.Imaging.PixelFormat.Format32bppRgb).Scan0; " is 199.
Long Statement,YoloTrack.MVC.View.Application,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Application\View.cs,Observe,The length of the statement  "	RuntimeDatabase.RecordAdded += new EventHandler<Model.RuntimeDatabase.RecordAddedEventArgs> (RuntimeDatabase_RecordAdded); " is 122.
Long Statement,YoloTrack.MVC.View.Application,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Application\View.cs,Observe,The length of the statement  "	RuntimeDatabase.RecordRemoved += new EventHandler<Model.RuntimeDatabase.RecordRemovedEventArgs> (RuntimeDatabase_RecordRemoved); " is 128.
Long Statement,YoloTrack.MVC.View.Application,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Application\View.cs,_show_liveview_frame,The length of the statement  "	System.Drawing.Imaging.BitmapData data = bmp.LockBits (new Rectangle (new Point (0' 0)' bmp.Size)' System.Drawing.Imaging.ImageLockMode.ReadWrite' bmp.PixelFormat); " is 164.
Long Statement,YoloTrack.MVC.View.Application,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Application\View.cs,_show_liveview_frame,The length of the statement  "	foreach (KeyValuePair<int' Model.RuntimeDatabase.Record> p in (Dictionary<int' Model.RuntimeDatabase.Record>)m_runtime_database.ContainerCopy) { " is 144.
Long Statement,YoloTrack.MVC.View.Application,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Application\View.cs,_show_liveview_frame,The length of the statement  "			begin = m_sensor.CoordinateMapper.MapSkeletonPointToColorPoint (p.Value.KinectResource.Skeleton.Joints [JointType.Head].Position); " is 130.
Long Statement,YoloTrack.MVC.View.Application,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Application\View.cs,_show_liveview_frame,The length of the statement  "			end = m_sensor.CoordinateMapper.MapSkeletonPointToColorPoint (p.Value.KinectResource.Skeleton.Joints [JointType.ShoulderCenter].Position); " is 138.
Long Statement,YoloTrack.MVC.View.Application,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Application\View.cs,_show_liveview_frame,The length of the statement  "			g.DrawString ("Id=" + p.Value.KinectResource.Skeleton.TrackingId.ToString () + " Attempts=" + p.Value.IdentifyAttempts.ToString ()' SystemFonts.DefaultFont' Brushes.Black' (float)begin.X' (float)begin.Y); " is 204.
Long Statement,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The length of the statement  "	e.Graphics.DrawImage (this.Image' /* Image instance */xpos' /* Target X */ypos' /* Target Y */nwidth' /* Target Width */nheight/* Target Height */); " is 148.
Long Statement,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,m_timer_Tick,The length of the statement  "	/* Cast to int because Math.Round() is for faggets */this.label_time.Text = ((int)(this.TimeoutValue - (DateTime.Now - this.m_start).TotalSeconds)).ToString (); " is 160.
Long Statement,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,VisualTimer_Paint,The length of the statement  "	/* Declare paths for the arc */System.Drawing.Drawing2D.GraphicsPath path = new System.Drawing.Drawing2D.GraphicsPath (); " is 121.
Long Statement,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,VisualTimer_Paint,The length of the statement  "	/* Draw the inner and the outer border using arc */path.AddArc (new Rectangle (1' 1' Width - 2' Height - 2)' -90' _calc_angle (Step)); " is 134.
Long Statement,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,VisualTimer_Paint,The length of the statement  "	path_back.AddArc (new Rectangle (1 + ArcWidth' 1 + ArcWidth' Width - 2 - ArcWidth * 2' Height - 2 - ArcWidth * 2)' -90' _calc_angle (Step)); " is 140.
Long Statement,YoloTrack.MVC.View.Debug,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Debug\View.cs,_log,The length of the statement  "	_log ("State machine"' String.Format ("{0} -> {1}"' e.PreviousState.GetType ().Name' e.NextState.GetType ().Name)' DebugLevel.Notice); " is 134.
Long Statement,YoloTrack.MVC.View.Debug,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Debug\View.cs,_log,The length of the statement  "	_log ("Runtime database"' String.Format ("Added record with TrackingId {0}' State is {1}"' e.Record.KinectResource.Skeleton.TrackingId' e.Record.State)' DebugLevel.Info); " is 170.
Long Statement,YoloTrack.MVC.View.Debug,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Debug\View.cs,_log,The length of the statement  "		_log ("Runtime database"' String.Format ("Record with TrackingId {0} changed' State is {1}"' record.KinectResource.Skeleton.TrackingId' record.State)' DebugLevel.Info); " is 168.
Long Statement,YoloTrack.MVC.View.Debug,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Debug\View.cs,_log,The length of the statement  "	_log ("Runtime database"' String.Format ("Removed record with TrackingId {0}"' e.Record.KinectResource.Skeleton.TrackingId' e.Record.State)' DebugLevel.Info); " is 158.
Long Statement,YoloTrack.MVC.View.Debug,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Debug\View.cs,_log,The length of the statement  "	_log ("Database"' String.Format ("Record with Id {0} changed' Name = {1}' {2}"' record.Id' record.LastName' record.FirstName)' DebugLevel.Info); " is 144.
Long Statement,YoloTrack.MVC.View.Debug,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Debug\View.cs,_log,The length of the statement  "	_log ("Database"' String.Format ("Removed record with Id {0}' Name = {1}' {2}"' e.Record.Id' e.Record.LastName' e.Record.FirstName)' DebugLevel.Info); " is 150.
Empty Catch Block,YoloTrack.MVC.View.Components,CrashSafePictureBox,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\CrashSafePictureBox.cs,OnPaint,The method has an empty catch block.
Magic Number,YoloTrack.MVC.Controller,Dependent,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Controller\DependencyManager.cs,_fix_list,The following statement contains a magic number: for (int i = 0; i < DependencyActions.Count; i++) {  	DependencyAction actual_dependency = DependencyActions [i];  	if (!actual_dependency.Satisfied) {  		actual_dependency.Method.Invoke (this' new object[2] {  			Dependent'  			Dependency  		});  		actual_dependency.Satisfied = true;  		DependencyActions [i] = actual_dependency;  	}  }  
Magic Number,YoloTrack.MVC.Controller,Dependent,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Controller\DependencyManager.cs,_fix_list,The following statement contains a magic number: if (!actual_dependency.Satisfied) {  	actual_dependency.Method.Invoke (this' new object[2] {  		Dependent'  		Dependency  	});  	actual_dependency.Satisfied = true;  	DependencyActions [i] = actual_dependency;  }  
Magic Number,YoloTrack.MVC.Controller,Dependent,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Controller\DependencyManager.cs,_fix_list,The following statement contains a magic number: actual_dependency.Method.Invoke (this' new object[2] {  	Dependent'  	Dependency  });  
Magic Number,YoloTrack.MVC.Controller,DependencyManager,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Controller\DependencyManager.cs,FixAll,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	foreach (Dependent dependent in m_dependents) {  		dependent.Fix ();  		if (dependent.Completed ()) {  			dependent.RunFinalizers ();  		}  		else {  			completed = false;  		}  	}  	if (completed) {  		break;  	}  }  
Magic Number,YoloTrack.MVC.Controller,DependencyManager,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Controller\DependencyManager.cs,_fix_list,The following statement contains a magic number: for (int i = 0; i < DependencyActions.Count; i++) {  	DependencyAction actual_dependency = DependencyActions [i];  	if (!actual_dependency.Satisfied) {  		actual_dependency.Method.Invoke (this' new object[2] {  			Dependent'  			Dependency  		});  		actual_dependency.Satisfied = true;  	}  }  
Magic Number,YoloTrack.MVC.Controller,DependencyManager,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Controller\DependencyManager.cs,_fix_list,The following statement contains a magic number: if (!actual_dependency.Satisfied) {  	actual_dependency.Method.Invoke (this' new object[2] {  		Dependent'  		Dependency  	});  	actual_dependency.Satisfied = true;  }  
Magic Number,YoloTrack.MVC.Controller,DependencyManager,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Controller\DependencyManager.cs,_fix_list,The following statement contains a magic number: actual_dependency.Method.Invoke (this' new object[2] {  	Dependent'  	Dependency  });  
Magic Number,YoloTrack.MVC.Model.Database,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Database\Model.cs,Model,The following statement contains a magic number: m_sem_save_limit = new Semaphore (4' 4);  
Magic Number,YoloTrack.MVC.Model.Database,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Database\Model.cs,Model,The following statement contains a magic number: m_sem_save_limit = new Semaphore (4' 4);  
Magic Number,YoloTrack.MVC.Model.Database,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Database\Model.cs,SaveTo,The following statement contains a magic number: if (!m_sem_save_limit.WaitOne (20)) {  	return;  }  
Magic Number,YoloTrack.MVC.Model.IdentificationData,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\IdentificationData\Model.cs,Merge,The following statement contains a magic number: if (IdentificationRecordList.Length < 2) {  	throw new ArgumentException ("You cannot merge less than two FIRs");  }  
Magic Number,YoloTrack.MVC.Model.IdentificationData,Model,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\IdentificationData\Model.cs,Merge,The following statement contains a magic number: for (int i = 2; i < IdentificationRecordList.Length; i++) {  	result = m_enrollment_processor.merge (result' IdentificationRecordList [i]);  }  
Magic Number,YoloTrack.MVC.Model.Sensor,SkeletonStream,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\Sensor\SkeletonStream.cs,SkeletonStream,The following statement contains a magic number: Skeletons = new Skeleton[6];  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,TrackingImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\TrackingImpl.cs,Run,The following statement contains a magic number: while (true) {  	// Update runtime database  	m_runtime_database.Refresh ();  	// Lost skeleton?  	if (m_runtime_database.ContainsKey (arg.TrackingId) == false) {  		Result = new Arg.WaitForBodyArg ();  		break;  	}  	// Changed target?  	if (m_runtime_database [arg.TrackingId].DatabaseRecord.IsTarget == false) {  		Result = new Arg.SwitchTargetArg ();  		break;  	}  	// Slight delay to prevent high cpu utilization  	Thread.Sleep (100);  }  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,TrackingImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\TrackingImpl.cs,Run,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitForBodyImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitForBodyImpl.cs,Run,The following statement contains a magic number: while (true) {  	m_sensor.SkeletonStream.Track ();  	m_runtime_database.Refresh ();  	// Search for those RuntimeInfos that need clarification (maybe identification?)  	RuntimeDatabase.Record record = m_runtime_database.SelectLeastIdentifyAttempts ();  	if (record != null) {  		// Enable tracking for joint-orientations  		m_sensor.SkeletonStream.Track (record.KinectResource.Skeleton.TrackingId);  		Result = new Arg.WaitTakePictureArg () {  			TrackingId = record.KinectResource.Skeleton.TrackingId  		};  		return;  	}  	// Iterate again and search for identified targets  	if (m_database.HasTarget) {  		foreach (KeyValuePair<int' RuntimeDatabase.Record> entry in m_runtime_database) {  			if (entry.Value.State == RuntimeDatabase.RecordState.Identified && entry.Value.DatabaseRecord.IsTarget) {  				m_sensor.SkeletonStream.Track (entry.Value.KinectResource.Skeleton.TrackingId);  				Result = new Arg.TrackingArg () {  					TrackingId = entry.Value.KinectResource.Skeleton.TrackingId  				};  				return;  			}  		}  	}  	Thread.Sleep (50);  }  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitForBodyImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitForBodyImpl.cs,Run,The following statement contains a magic number: Thread.Sleep (50);  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The following statement contains a magic number: fixed (byte* dest_ptr = &dest [0]) {  	for (int y = 0; y < rectangle.Height; y++) {  		Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4);  	}  }  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The following statement contains a magic number: fixed (byte* dest_ptr = &dest [0]) {  	for (int y = 0; y < rectangle.Height; y++) {  		Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4);  	}  }  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The following statement contains a magic number: fixed (byte* dest_ptr = &dest [0]) {  	for (int y = 0; y < rectangle.Height; y++) {  		Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4);  	}  }  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The following statement contains a magic number: fixed (byte* dest_ptr = &dest [0]) {  	for (int y = 0; y < rectangle.Height; y++) {  		Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4);  	}  }  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The following statement contains a magic number: for (int y = 0; y < rectangle.Height; y++) {  	Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4);  }  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The following statement contains a magic number: for (int y = 0; y < rectangle.Height; y++) {  	Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4);  }  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The following statement contains a magic number: for (int y = 0; y < rectangle.Height; y++) {  	Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4);  }  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The following statement contains a magic number: for (int y = 0; y < rectangle.Height; y++) {  	Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4);  }  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The following statement contains a magic number: Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4);  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The following statement contains a magic number: Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4);  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The following statement contains a magic number: Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4);  
Magic Number,YoloTrack.MVC.Model.StateMachine.Impl,WaitTakePictureImpl,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\Model\StateMachine\Impl\WaitTakePictureImpl.cs,GetHeadPicture,The following statement contains a magic number: Marshal.Copy (source' m_sensor.ColorStream.Width * 4 * (y + rectangle.Y) + rectangle.X * 4' new IntPtr (dest_ptr + y * rectangle.Width * 4)' rectangle.Width * 4);  
Magic Number,YoloTrack.MVC.View.Application,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Application\View.cs,DisplayFailure,The following statement contains a magic number: m_visual_timer.Start (30);  
Magic Number,YoloTrack.MVC.View.Components,DatabaseView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\DatabaseView.cs,OnItemAdded,The following statement contains a magic number: e.Item.Width = Width - 24;  
Magic Number,YoloTrack.MVC.View.Components,DatabaseView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\DatabaseView.cs,DatabaseView_Resize,The following statement contains a magic number: foreach (DatabaseViewItem item in Items) {  	item.Width = Width - 24;  }  
Magic Number,YoloTrack.MVC.View.Components,DatabaseView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\DatabaseView.cs,DatabaseView_Resize,The following statement contains a magic number: item.Width = Width - 24;  
Magic Number,YoloTrack.MVC.View.Components,DatabaseView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\DatabaseView.cs,databaseViewHeader1_MergeClick,The following statement contains a magic number: if (Items.FindAll (item => item.Selected == true).Count >= 2) {  	MergeEventArgs args = new MergeEventArgs () {  		Items = Items.FindAll (item => item.Selected == true).ToArray ()  	};  	foreach (DatabaseViewItem item in Items) {  		if (item.Selected) {  			item.Selected = false;  		}  	}  	if (MergeRequest != null) {  		MergeRequest (this' args);  	}  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: switch (this.ImageAlign) {  #region Alignment Top  case ContentAlignment.TopLeft:  	break;  case ContentAlignment.TopRight:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	break;  case ContentAlignment.TopCenter:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	break;  #endregion  #region Alignment Middle  case ContentAlignment.MiddleLeft:  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  case ContentAlignment.MiddleCenter:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  case ContentAlignment.MiddleRight:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  #endregion  #region Alignment Bottom  case ContentAlignment.BottomLeft:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	break;  case ContentAlignment.BottomCenter:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	break;  case ContentAlignment.BottomRight:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	break;  #endregion  default:  	/* This error should NEVER appear */throw new NotImplementedException ("Invalid ImageAlign Mode");  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: switch (this.ImageAlign) {  #region Alignment Top  case ContentAlignment.TopLeft:  	break;  case ContentAlignment.TopRight:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	break;  case ContentAlignment.TopCenter:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	break;  #endregion  #region Alignment Middle  case ContentAlignment.MiddleLeft:  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  case ContentAlignment.MiddleCenter:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  case ContentAlignment.MiddleRight:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  #endregion  #region Alignment Bottom  case ContentAlignment.BottomLeft:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	break;  case ContentAlignment.BottomCenter:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	break;  case ContentAlignment.BottomRight:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	break;  #endregion  default:  	/* This error should NEVER appear */throw new NotImplementedException ("Invalid ImageAlign Mode");  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: switch (this.ImageAlign) {  #region Alignment Top  case ContentAlignment.TopLeft:  	break;  case ContentAlignment.TopRight:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	break;  case ContentAlignment.TopCenter:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	break;  #endregion  #region Alignment Middle  case ContentAlignment.MiddleLeft:  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  case ContentAlignment.MiddleCenter:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  case ContentAlignment.MiddleRight:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  #endregion  #region Alignment Bottom  case ContentAlignment.BottomLeft:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	break;  case ContentAlignment.BottomCenter:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	break;  case ContentAlignment.BottomRight:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	break;  #endregion  default:  	/* This error should NEVER appear */throw new NotImplementedException ("Invalid ImageAlign Mode");  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: switch (this.ImageAlign) {  #region Alignment Top  case ContentAlignment.TopLeft:  	break;  case ContentAlignment.TopRight:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	break;  case ContentAlignment.TopCenter:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	break;  #endregion  #region Alignment Middle  case ContentAlignment.MiddleLeft:  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  case ContentAlignment.MiddleCenter:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  case ContentAlignment.MiddleRight:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  #endregion  #region Alignment Bottom  case ContentAlignment.BottomLeft:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	break;  case ContentAlignment.BottomCenter:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	break;  case ContentAlignment.BottomRight:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	break;  #endregion  default:  	/* This error should NEVER appear */throw new NotImplementedException ("Invalid ImageAlign Mode");  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: switch (this.ImageAlign) {  #region Alignment Top  case ContentAlignment.TopLeft:  	break;  case ContentAlignment.TopRight:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	break;  case ContentAlignment.TopCenter:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	break;  #endregion  #region Alignment Middle  case ContentAlignment.MiddleLeft:  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  case ContentAlignment.MiddleCenter:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  case ContentAlignment.MiddleRight:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  #endregion  #region Alignment Bottom  case ContentAlignment.BottomLeft:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	break;  case ContentAlignment.BottomCenter:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	break;  case ContentAlignment.BottomRight:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	break;  #endregion  default:  	/* This error should NEVER appear */throw new NotImplementedException ("Invalid ImageAlign Mode");  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: switch (this.ImageAlign) {  #region Alignment Top  case ContentAlignment.TopLeft:  	break;  case ContentAlignment.TopRight:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	break;  case ContentAlignment.TopCenter:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	break;  #endregion  #region Alignment Middle  case ContentAlignment.MiddleLeft:  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  case ContentAlignment.MiddleCenter:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  case ContentAlignment.MiddleRight:  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	if (nheight < this.ClientRectangle.Height) {  		ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  	}  	break;  #endregion  #region Alignment Bottom  case ContentAlignment.BottomLeft:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	break;  case ContentAlignment.BottomCenter:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	if (nwidth < this.ClientRectangle.Width) {  		xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  	}  	break;  case ContentAlignment.BottomRight:  	if (nheight < this.ClientRectangle.Height) {  		ypos = this.ClientRectangle.Height - (int)nheight;  	}  	if (nwidth < this.ClientRectangle.Width) {  		xpos = this.ClientRectangle.Width - (int)nwidth;  	}  	break;  #endregion  default:  	/* This error should NEVER appear */throw new NotImplementedException ("Invalid ImageAlign Mode");  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: if (nwidth < this.ClientRectangle.Width) {  	xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: if (nheight < this.ClientRectangle.Height) {  	ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: if (nwidth < this.ClientRectangle.Width) {  	xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: if (nheight < this.ClientRectangle.Height) {  	ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: if (nheight < this.ClientRectangle.Height) {  	ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: ypos = (int)((float)(this.ClientRectangle.Height - (int)nheight) / 2);  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: if (nwidth < this.ClientRectangle.Width) {  	xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  }  
Magic Number,YoloTrack.MVC.View.Components,LiveView,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\LiveView.cs,OnPaint,The following statement contains a magic number: xpos = (int)((float)(this.ClientRectangle.Width - (int)nwidth) / 2);  
Magic Number,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,VisualTimer_Paint,The following statement contains a magic number: path.AddArc (new Rectangle (1' 1' Width - 2' Height - 2)' -90' _calc_angle (Step));  
Magic Number,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,VisualTimer_Paint,The following statement contains a magic number: path.AddArc (new Rectangle (1' 1' Width - 2' Height - 2)' -90' _calc_angle (Step));  
Magic Number,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,VisualTimer_Paint,The following statement contains a magic number: path.AddArc (new Rectangle (1' 1' Width - 2' Height - 2)' -90' _calc_angle (Step));  
Magic Number,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,VisualTimer_Paint,The following statement contains a magic number: path_back.AddArc (new Rectangle (1 + ArcWidth' 1 + ArcWidth' Width - 2 - ArcWidth * 2' Height - 2 - ArcWidth * 2)' -90' _calc_angle (Step));  
Magic Number,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,VisualTimer_Paint,The following statement contains a magic number: path_back.AddArc (new Rectangle (1 + ArcWidth' 1 + ArcWidth' Width - 2 - ArcWidth * 2' Height - 2 - ArcWidth * 2)' -90' _calc_angle (Step));  
Magic Number,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,VisualTimer_Paint,The following statement contains a magic number: path_back.AddArc (new Rectangle (1 + ArcWidth' 1 + ArcWidth' Width - 2 - ArcWidth * 2' Height - 2 - ArcWidth * 2)' -90' _calc_angle (Step));  
Magic Number,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,VisualTimer_Paint,The following statement contains a magic number: path_back.AddArc (new Rectangle (1 + ArcWidth' 1 + ArcWidth' Width - 2 - ArcWidth * 2' Height - 2 - ArcWidth * 2)' -90' _calc_angle (Step));  
Magic Number,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,VisualTimer_Paint,The following statement contains a magic number: path_back.AddArc (new Rectangle (1 + ArcWidth' 1 + ArcWidth' Width - 2 - ArcWidth * 2' Height - 2 - ArcWidth * 2)' -90' _calc_angle (Step));  
Magic Number,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,_calc_angle,The following statement contains a magic number: return (float)(Step / (TimeoutValue * 1000) * 360);  
Magic Number,YoloTrack.Source.MVC.View.Components,VisualTimer,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Components\VisualTimer.cs,_calc_angle,The following statement contains a magic number: return (float)(Step / (TimeoutValue * 1000) * 360);  
Missing Default,YoloTrack.MVC.View.Application,View,C:\repos\YoloSoftDE_YoloTrack\Source\MVC\View\Application\View.cs,DisplayFailure,The following switch statement is missing a default case: switch (Type) {  case FailureType.Sensor:  	m_failure_header.Text = "Sensor Failure";  	break;  case FailureType.IdentificationAPI:  	m_failure_header.Text = "Identification API Failure";  	break;  }  
