Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,Cyclomatic complexity of the method is 15
Complex Method,WinFormsGraphicsDevice,GraphicsDeviceControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\GraphicsDeviceControl.cs,HandleDeviceReset,Cyclomatic complexity of the method is 10
Complex Method,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,Cyclomatic complexity of the method is 27
Complex Method,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,Cyclomatic complexity of the method is 11
Complex Method,WinFormsGraphicsDevice,MapEditControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MapEditControl.cs,update,Cyclomatic complexity of the method is 8
Long Statement,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,cHRAsTileSetToolStripMenuItem_Click,The length of the statement  "		if (MessageBox.Show ("Importing new tileset will erase all metatile groups.\n Do you really want to do this?"' "Caution"' MessageBoxButtons.OKCancel) == System.Windows.Forms.DialogResult.OK) { " is 192.
Long Statement,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,FixedSize,The length of the statement  "	grPhoto.DrawImage (imgPhoto' new Rectangle (destX' destY' destWidth' destHeight)' new Rectangle (sourceX' sourceY' sourceWidth' sourceHeight)' GraphicsUnit.Pixel); " is 163.
Long Statement,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The length of the statement  "		spriteBatch.Begin (SpriteSortMode.Deferred' BlendState.NonPremultiplied' SamplerState.PointClamp' DepthStencilState.Default' RasterizerState.CullNone); " is 151.
Long Statement,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The length of the statement  "			spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1); " is 192.
Long Statement,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The length of the statement  "			spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1); " is 192.
Long Statement,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The length of the statement  "	spriteBatch.Begin (SpriteSortMode.Deferred' BlendState.NonPremultiplied' SamplerState.PointClamp' DepthStencilState.Default' RasterizerState.CullNone); " is 151.
Long Statement,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The length of the statement  "		Rectangle gridRec = new Rectangle ((int)pos.X' (int)pos.Y' (int)grids [i].Bounds.Width * 2' (int)grids [i].Bounds.Height * 2); " is 126.
Long Statement,WinFormsGraphicsDevice,MapEditControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MapEditControl.cs,Draw,The length of the statement  "			spriteBatch.Draw (cell' pos + panel_position' null' Color.White * map_bgCol [i' j]' 0f' Vector2.Zero' new Vector2 (scale' scale)' SpriteEffects.None' 0f); " is 154.
Empty Catch Block,WinFormsGraphicsDevice,GraphicsDeviceControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\GraphicsDeviceControl.cs,EndDraw,The method has an empty catch block.
Magic Number,WinFormsGraphicsDevice,ColorControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\ColorControl.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' "SELECTED COLOR:"' new Vector2 (0' 80)' Color.Black);  
Magic Number,WinFormsGraphicsDevice,ColorControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\ColorControl.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' "SELECTED COLOR:"' new Vector2 (1' 81)' Color.White);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Initialize,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	col_rt.Add (new RenderTarget2D (GraphicsDevice' size' size));  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: if (selectedIdx % 4 == 0) {  	bgPal [0' selectedIdx % 4] = col;  	bgPal [1' selectedIdx % 4] = col;  	bgPal [2' selectedIdx % 4] = col;  	bgPal [3' selectedIdx % 4] = col;  }  else  	bgPal [(int)selectedIdx / 4' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: if (selectedIdx % 4 == 0) {  	bgPal [0' selectedIdx % 4] = col;  	bgPal [1' selectedIdx % 4] = col;  	bgPal [2' selectedIdx % 4] = col;  	bgPal [3' selectedIdx % 4] = col;  }  else  	bgPal [(int)selectedIdx / 4' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: if (selectedIdx % 4 == 0) {  	bgPal [0' selectedIdx % 4] = col;  	bgPal [1' selectedIdx % 4] = col;  	bgPal [2' selectedIdx % 4] = col;  	bgPal [3' selectedIdx % 4] = col;  }  else  	bgPal [(int)selectedIdx / 4' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: if (selectedIdx % 4 == 0) {  	bgPal [0' selectedIdx % 4] = col;  	bgPal [1' selectedIdx % 4] = col;  	bgPal [2' selectedIdx % 4] = col;  	bgPal [3' selectedIdx % 4] = col;  }  else  	bgPal [(int)selectedIdx / 4' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: if (selectedIdx % 4 == 0) {  	bgPal [0' selectedIdx % 4] = col;  	bgPal [1' selectedIdx % 4] = col;  	bgPal [2' selectedIdx % 4] = col;  	bgPal [3' selectedIdx % 4] = col;  }  else  	bgPal [(int)selectedIdx / 4' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: if (selectedIdx % 4 == 0) {  	bgPal [0' selectedIdx % 4] = col;  	bgPal [1' selectedIdx % 4] = col;  	bgPal [2' selectedIdx % 4] = col;  	bgPal [3' selectedIdx % 4] = col;  }  else  	bgPal [(int)selectedIdx / 4' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: if (selectedIdx % 4 == 0) {  	bgPal [0' selectedIdx % 4] = col;  	bgPal [1' selectedIdx % 4] = col;  	bgPal [2' selectedIdx % 4] = col;  	bgPal [3' selectedIdx % 4] = col;  }  else  	bgPal [(int)selectedIdx / 4' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: if (selectedIdx % 4 == 0) {  	bgPal [0' selectedIdx % 4] = col;  	bgPal [1' selectedIdx % 4] = col;  	bgPal [2' selectedIdx % 4] = col;  	bgPal [3' selectedIdx % 4] = col;  }  else  	bgPal [(int)selectedIdx / 4' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: if (selectedIdx % 4 == 0) {  	bgPal [0' selectedIdx % 4] = col;  	bgPal [1' selectedIdx % 4] = col;  	bgPal [2' selectedIdx % 4] = col;  	bgPal [3' selectedIdx % 4] = col;  }  else  	bgPal [(int)selectedIdx / 4' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: bgPal [0' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: bgPal [1' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: bgPal [2' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: bgPal [2' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: bgPal [3' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: bgPal [3' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: bgPal [(int)selectedIdx / 4' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,updatePalette,The following statement contains a magic number: bgPal [(int)selectedIdx / 4' selectedIdx % 4] = col;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		GraphicsDevice.SetRenderTarget (col_rt [i * 4 + j]);  		GraphicsDevice.Clear (ColorControl.palette [bgPal [i' j]]);  		GraphicsDevice.SetRenderTarget (null);  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		GraphicsDevice.SetRenderTarget (col_rt [i * 4 + j]);  		GraphicsDevice.Clear (ColorControl.palette [bgPal [i' j]]);  		GraphicsDevice.SetRenderTarget (null);  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		GraphicsDevice.SetRenderTarget (col_rt [i * 4 + j]);  		GraphicsDevice.Clear (ColorControl.palette [bgPal [i' j]]);  		GraphicsDevice.SetRenderTarget (null);  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	GraphicsDevice.SetRenderTarget (col_rt [i * 4 + j]);  	GraphicsDevice.Clear (ColorControl.palette [bgPal [i' j]]);  	GraphicsDevice.SetRenderTarget (null);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	GraphicsDevice.SetRenderTarget (col_rt [i * 4 + j]);  	GraphicsDevice.Clear (ColorControl.palette [bgPal [i' j]]);  	GraphicsDevice.SetRenderTarget (null);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: GraphicsDevice.SetRenderTarget (col_rt [i * 4 + j]);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' "PALETTE:"' new Vector2 (6' 6)' Color.Black);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' "PALETTE:"' new Vector2 (6' 6)' Color.Black);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' "PALETTE:"' new Vector2 (4' 4)' Color.White);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' "PALETTE:"' new Vector2 (4' 4)' Color.White);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	for (int j = 0; j < 4; j++) {  		int idx = i * 4 + j;  		Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  		if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  			sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  			selectedIdx = idx;  			if (idx >= 0 && idx < 4) {  				sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  			}  			if (idx >= 4 && idx < 8) {  				sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  			}  			if (idx >= 8 && idx < 12) {  				sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  			}  			if (idx >= 12 && idx < 16) {  				sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  			}  		}  		for (int k = 0; k < 4; k++) {  			selected_pal [k] = bgPal [selectedIdx / 4' k];  		}  		spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  		if (idx % 8 == 7)  			line++;  	}  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	int idx = i * 4 + j;  	Rectangle rec = new Rectangle (idx % 8 * size' line * size + 32' size' size);  	if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  		sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  		selectedIdx = idx;  		if (idx >= 0 && idx < 4) {  			sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  		}  		if (idx >= 4 && idx < 8) {  			sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  		}  		if (idx >= 8 && idx < 12) {  			sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  		}  		if (idx >= 12 && idx < 16) {  			sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  		}  	}  	for (int k = 0; k < 4; k++) {  		selected_pal [k] = bgPal [selectedIdx / 4' k];  	}  	spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  	if (idx % 8 == 7)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (rec.Contains (GetMousePosition ()) && Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  	selectedIdx = idx;  	if (idx >= 0 && idx < 4) {  		sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  	}  	if (idx >= 4 && idx < 8) {  		sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  	}  	if (idx >= 8 && idx < 12) {  		sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  	}  	if (idx >= 12 && idx < 16) {  		sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  	}  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_pos = new Vector2 (idx % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 0 && idx < 4) {  	sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 0 && idx < 4) {  	sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 0 && idx < 4) {  	sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_col_pos = new Vector2 (0 % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 4 && idx < 8) {  	sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 4 && idx < 8) {  	sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 4 && idx < 8) {  	sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 4 && idx < 8) {  	sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 4 && idx < 8) {  	sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_col_pos = new Vector2 (4 % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 8 && idx < 12) {  	sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 8 && idx < 12) {  	sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 8 && idx < 12) {  	sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 8 && idx < 12) {  	sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 8 && idx < 12) {  	sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_col_pos = new Vector2 (8 % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 12 && idx < 16) {  	sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 12 && idx < 16) {  	sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 12 && idx < 16) {  	sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 12 && idx < 16) {  	sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx >= 12 && idx < 16) {  	sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: sel_col_pos = new Vector2 (12 % 8 * size' line * size + 32);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int k = 0; k < 4; k++) {  	selected_pal [k] = bgPal [selectedIdx / 4' k];  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: for (int k = 0; k < 4; k++) {  	selected_pal [k] = bgPal [selectedIdx / 4' k];  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: selected_pal [k] = bgPal [selectedIdx / 4' k];  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (col_rt [idx]' new Vector2 (idx % 8 * size' line * size + 32)' Color.White);  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx % 8 == 7)  	line++;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (idx % 8 == 7)  	line++;  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (frameCount % 200 == 199) {  	chr_view.updatePalette (selected_pal);  }  
Magic Number,WinFormsGraphicsDevice,PaletteControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\PaletteControl.cs,Draw,The following statement contains a magic number: if (frameCount % 200 == 199) {  	chr_view.updatePalette (selected_pal);  }  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,FixedSize,The following statement contains a magic number: if (nPercentH < nPercentW) {  	nPercent = nPercentH;  	destX = System.Convert.ToInt16 ((Width - (sourceWidth * nPercent)) / 2);  }  else {  	nPercent = nPercentW;  	destY = System.Convert.ToInt16 ((Height - (sourceHeight * nPercent)) / 2);  }  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,FixedSize,The following statement contains a magic number: if (nPercentH < nPercentW) {  	nPercent = nPercentH;  	destX = System.Convert.ToInt16 ((Width - (sourceWidth * nPercent)) / 2);  }  else {  	nPercent = nPercentW;  	destY = System.Convert.ToInt16 ((Height - (sourceHeight * nPercent)) / 2);  }  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,FixedSize,The following statement contains a magic number: destX = System.Convert.ToInt16 ((Width - (sourceWidth * nPercent)) / 2);  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,FixedSize,The following statement contains a magic number: destY = System.Convert.ToInt16 ((Height - (sourceHeight * nPercent)) / 2);  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,GrayScale,The following statement contains a magic number: for (int y = 0; y < Bmp.Height; y++)  	for (int x = 0; x < Bmp.Width; x++) {  		c = Bmp.GetPixel (x' y);  		rgb = (int)((c.R + c.G + c.B) / 3);  		Bmp.SetPixel (x' y' Color.FromArgb (rgb' rgb' rgb));  	}  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,GrayScale,The following statement contains a magic number: for (int x = 0; x < Bmp.Width; x++) {  	c = Bmp.GetPixel (x' y);  	rgb = (int)((c.R + c.G + c.B) / 3);  	Bmp.SetPixel (x' y' Color.FromArgb (rgb' rgb' rgb));  }  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,GrayScale,The following statement contains a magic number: rgb = (int)((c.R + c.G + c.B) / 3);  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,button1_Click,The following statement contains a magic number: imageList1.Images.Add (FixedSize (filteredPictureBox1.Image' 32' 32));  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,button1_Click,The following statement contains a magic number: imageList1.Images.Add (FixedSize (filteredPictureBox1.Image' 32' 32));  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: if (file_path != null) {  	byte['] pal = new byte[4' 4];  	byte[] buf = ConvertFileToByteArray (file_path);  	for (int i = 0; i < 16; i++) {  		pal [(int)i / 4' i % 4] = buf [i];  	}  	paletteControl1.bgPal = pal;  }  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: if (file_path != null) {  	byte['] pal = new byte[4' 4];  	byte[] buf = ConvertFileToByteArray (file_path);  	for (int i = 0; i < 16; i++) {  		pal [(int)i / 4' i % 4] = buf [i];  	}  	paletteControl1.bgPal = pal;  }  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: if (file_path != null) {  	byte['] pal = new byte[4' 4];  	byte[] buf = ConvertFileToByteArray (file_path);  	for (int i = 0; i < 16; i++) {  		pal [(int)i / 4' i % 4] = buf [i];  	}  	paletteControl1.bgPal = pal;  }  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: if (file_path != null) {  	byte['] pal = new byte[4' 4];  	byte[] buf = ConvertFileToByteArray (file_path);  	for (int i = 0; i < 16; i++) {  		pal [(int)i / 4' i % 4] = buf [i];  	}  	paletteControl1.bgPal = pal;  }  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: if (file_path != null) {  	byte['] pal = new byte[4' 4];  	byte[] buf = ConvertFileToByteArray (file_path);  	for (int i = 0; i < 16; i++) {  		pal [(int)i / 4' i % 4] = buf [i];  	}  	paletteControl1.bgPal = pal;  }  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	pal [(int)i / 4' i % 4] = buf [i];  }  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	pal [(int)i / 4' i % 4] = buf [i];  }  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	pal [(int)i / 4' i % 4] = buf [i];  }  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: pal [(int)i / 4' i % 4] = buf [i];  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,paletteToolStripMenuItem_Click,The following statement contains a magic number: pal [(int)i / 4' i % 4] = buf [i];  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,setMapSizeToolStripMenuItem_Click,The following statement contains a magic number: m.Location = new Point (this.Location.X + 10' this.Location.Y + 10);  
Magic Number,WinFormsGraphicsDevice,MainForm,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MainForm.cs,setMapSizeToolStripMenuItem_Click,The following statement contains a magic number: m.Location = new Point (this.Location.X + 10' this.Location.Y + 10);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,updatePalette,The following statement contains a magic number: for (int i = 0; i < 4; i++)  	paletteCol [i] = ColorControl.palette [pal [i]];  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: chr_map = new Texture2D (GraphicsDevice' 128' 128);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: chr_map = new Texture2D (GraphicsDevice' 128' 128);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	for (int j = 0; j < 8; j++) {  		int idx = (i * 16) + j;  		byte[] fullbyte = new byte[2];  		fullbyte [0] = b [idx];  		fullbyte [1] = b [idx + 8];  		BitArray pat_bit = new BitArray (fullbyte);  		for (int k = 0; k < pat_bit.Length / 2; k++) {  			string bitstr = "";  			if (pat_bit [k])  				bitstr += "1";  			else  				bitstr += "0";  			if (pat_bit [k + 8])  				bitstr += "1";  			else  				bitstr += "0";  			Color col = new Color ();  			Color col_mono = new Color ();  			switch (bitstr) {  			case "00":  				col = paletteCol [0];  				col_mono = Color.Black;  				break;  			case "01":  				col = paletteCol [1];  				col_mono = new Color (80' 80' 80);  				break;  			case "10":  				col = paletteCol [2];  				col_mono = new Color (150' 150' 150);  				break;  			case "11":  				col = paletteCol [3];  				col_mono = new Color (255' 255' 255);  				break;  			default:  				break;  			}  			if (cube_row == 8) {  				cube_row = 0;  				cube_line++;  			}  			if (cube_line == 8) {  				cube_line = 0;  				colum++;  			}  			if (colum == 16) {  				colum = 0;  				if (line < 15)  					line++;  			}  			int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  			imageData [caonvertidx] = col;  			imageDataMono [caonvertidx] = col_mono;  			cube_row++;  			_index++;  		}  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int j = 0; j < 8; j++) {  	int idx = (i * 16) + j;  	byte[] fullbyte = new byte[2];  	fullbyte [0] = b [idx];  	fullbyte [1] = b [idx + 8];  	BitArray pat_bit = new BitArray (fullbyte);  	for (int k = 0; k < pat_bit.Length / 2; k++) {  		string bitstr = "";  		if (pat_bit [k])  			bitstr += "1";  		else  			bitstr += "0";  		if (pat_bit [k + 8])  			bitstr += "1";  		else  			bitstr += "0";  		Color col = new Color ();  		Color col_mono = new Color ();  		switch (bitstr) {  		case "00":  			col = paletteCol [0];  			col_mono = Color.Black;  			break;  		case "01":  			col = paletteCol [1];  			col_mono = new Color (80' 80' 80);  			break;  		case "10":  			col = paletteCol [2];  			col_mono = new Color (150' 150' 150);  			break;  		case "11":  			col = paletteCol [3];  			col_mono = new Color (255' 255' 255);  			break;  		default:  			break;  		}  		if (cube_row == 8) {  			cube_row = 0;  			cube_line++;  		}  		if (cube_line == 8) {  			cube_line = 0;  			colum++;  		}  		if (colum == 16) {  			colum = 0;  			if (line < 15)  				line++;  		}  		int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  		imageData [caonvertidx] = col;  		imageDataMono [caonvertidx] = col_mono;  		cube_row++;  		_index++;  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: fullbyte [1] = b [idx + 8];  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: for (int k = 0; k < pat_bit.Length / 2; k++) {  	string bitstr = "";  	if (pat_bit [k])  		bitstr += "1";  	else  		bitstr += "0";  	if (pat_bit [k + 8])  		bitstr += "1";  	else  		bitstr += "0";  	Color col = new Color ();  	Color col_mono = new Color ();  	switch (bitstr) {  	case "00":  		col = paletteCol [0];  		col_mono = Color.Black;  		break;  	case "01":  		col = paletteCol [1];  		col_mono = new Color (80' 80' 80);  		break;  	case "10":  		col = paletteCol [2];  		col_mono = new Color (150' 150' 150);  		break;  	case "11":  		col = paletteCol [3];  		col_mono = new Color (255' 255' 255);  		break;  	default:  		break;  	}  	if (cube_row == 8) {  		cube_row = 0;  		cube_line++;  	}  	if (cube_line == 8) {  		cube_line = 0;  		colum++;  	}  	if (colum == 16) {  		colum = 0;  		if (line < 15)  			line++;  	}  	int caonvertidx = (7 - cube_row) + 128 * (cube_line) + 8 * colum + 1024 * line;  	imageData [caonvertidx] = col;  	imageDataMono [caonvertidx] = col_mono;  	cube_row++;  	_index++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: if (pat_bit [k + 8])  	bitstr += "1";  else  	bitstr += "0";  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: switch (bitstr) {  case "00":  	col = paletteCol [0];  	col_mono = Color.Black;  	break;  case "01":  	col = paletteCol [1];  	col_mono = new Color (80' 80' 80);  	break;  case "10":  	col = paletteCol [2];  	col_mono = new Color (150' 150' 150);  	break;  case "11":  	col = paletteCol [3];  	col_mono = new Color (255' 255' 255);  	break;  default:  	break;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: switch (bitstr) {  case "00":  	col = paletteCol [0];  	col_mono = Color.Black;  	break;  case "01":  	col = paletteCol [1];  	col_mono = new Color (80' 80' 80);  	break;  case "10":  	col = paletteCol [2];  	col_mono = new Color (150' 150' 150);  	break;  case "11":  	col = paletteCol [3];  	col_mono = new Color (255' 255' 255);  	break;  default:  	break;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: switch (bitstr) {  case "00":  	col = paletteCol [0];  	col_mono = Color.Black;  	break;  case "01":  	col = paletteCol [1];  	col_mono = new Color (80' 80' 80);  	break;  case "10":  	col = paletteCol [2];  	col_mono = new Color (150' 150' 150);  	break;  case "11":  	col = paletteCol [3];  	col_mono = new Color (255' 255' 255);  	break;  default:  	break;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: switch (bitstr) {  case "00":  	col = paletteCol [0];  	col_mono = Color.Black;  	break;  case "01":  	col = paletteCol [1];  	col_mono = new Color (80' 80' 80);  	break;  case "10":  	col = paletteCol [2];  	col_mono = new Color (150' 150' 150);  	break;  case "11":  	col = paletteCol [3];  	col_mono = new Color (255' 255' 255);  	break;  default:  	break;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: switch (bitstr) {  case "00":  	col = paletteCol [0];  	col_mono = Color.Black;  	break;  case "01":  	col = paletteCol [1];  	col_mono = new Color (80' 80' 80);  	break;  case "10":  	col = paletteCol [2];  	col_mono = new Color (150' 150' 150);  	break;  case "11":  	col = paletteCol [3];  	col_mono = new Color (255' 255' 255);  	break;  default:  	break;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: switch (bitstr) {  case "00":  	col = paletteCol [0];  	col_mono = Color.Black;  	break;  case "01":  	col = paletteCol [1];  	col_mono = new Color (80' 80' 80);  	break;  case "10":  	col = paletteCol [2];  	col_mono = new Color (150' 150' 150);  	break;  case "11":  	col = paletteCol [3];  	col_mono = new Color (255' 255' 255);  	break;  default:  	break;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: switch (bitstr) {  case "00":  	col = paletteCol [0];  	col_mono = Color.Black;  	break;  case "01":  	col = paletteCol [1];  	col_mono = new Color (80' 80' 80);  	break;  case "10":  	col = paletteCol [2];  	col_mono = new Color (150' 150' 150);  	break;  case "11":  	col = paletteCol [3];  	col_mono = new Color (255' 255' 255);  	break;  default:  	break;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: switch (bitstr) {  case "00":  	col = paletteCol [0];  	col_mono = Color.Black;  	break;  case "01":  	col = paletteCol [1];  	col_mono = new Color (80' 80' 80);  	break;  case "10":  	col = paletteCol [2];  	col_mono = new Color (150' 150' 150);  	break;  case "11":  	col = paletteCol [3];  	col_mono = new Color (255' 255' 255);  	break;  default:  	break;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: switch (bitstr) {  case "00":  	col = paletteCol [0];  	col_mono = Color.Black;  	break;  case "01":  	col = paletteCol [1];  	col_mono = new Color (80' 80' 80);  	break;  case "10":  	col = paletteCol [2];  	col_mono = new Color (150' 150' 150);  	break;  case "11":  	col = paletteCol [3];  	col_mono = new Color (255' 255' 255);  	break;  default:  	break;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: switch (bitstr) {  case "00":  	col = paletteCol [0];  	col_mono = Color.Black;  	break;  case "01":  	col = paletteCol [1];  	col_mono = new Color (80' 80' 80);  	break;  case "10":  	col = paletteCol [2];  	col_mono = new Color (150' 150' 150);  	break;  case "11":  	col = paletteCol [3];  	col_mono = new Color (255' 255' 255);  	break;  default:  	break;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: switch (bitstr) {  case "00":  	col = paletteCol [0];  	col_mono = Color.Black;  	break;  case "01":  	col = paletteCol [1];  	col_mono = new Color (80' 80' 80);  	break;  case "10":  	col = paletteCol [2];  	col_mono = new Color (150' 150' 150);  	break;  case "11":  	col = paletteCol [3];  	col_mono = new Color (255' 255' 255);  	break;  default:  	break;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: col_mono = new Color (80' 80' 80);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: col_mono = new Color (80' 80' 80);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: col_mono = new Color (80' 80' 80);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: col = paletteCol [2];  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: col_mono = new Color (150' 150' 150);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: col_mono = new Color (150' 150' 150);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: col_mono = new Color (150' 150' 150);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: col = paletteCol [3];  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: col_mono = new Color (255' 255' 255);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: col_mono = new Color (255' 255' 255);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: col_mono = new Color (255' 255' 255);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: if (cube_row == 8) {  	cube_row = 0;  	cube_line++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: if (cube_line == 8) {  	cube_line = 0;  	colum++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: if (colum == 16) {  	colum = 0;  	if (line < 15)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: if (colum == 16) {  	colum = 0;  	if (line < 15)  		line++;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,bytetotex,The following statement contains a magic number: if (line < 15)  	line++;  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Initialize,The following statement contains a magic number: monotex = new RenderTarget2D (GraphicsDevice' 128' 128);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Initialize,The following statement contains a magic number: monotex = new RenderTarget2D (GraphicsDevice' 128' 128);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Initialize,The following statement contains a magic number: for (int i = 0; i < grids.Capacity; i++) {  	Texture2D temp = new Texture2D (GraphicsDevice' 8' 8);  	grids.Add (temp);  	temp.SetData<Color> (imageData);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Initialize,The following statement contains a magic number: for (int i = 0; i < grids.Capacity; i++) {  	Texture2D temp = new Texture2D (GraphicsDevice' 8' 8);  	grids.Add (temp);  	temp.SetData<Color> (imageData);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,update,The following statement contains a magic number: if (Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	if (startPoint.X == -999) {  		selectedRect = Rectangle.Empty;  		startPoint.X = GetMousePosition ().X;  		startPoint.Y = GetMousePosition ().Y;  		selectedRect.Location = startPoint;  	}  	int wid = (GetMousePosition ().X - startPoint.X);  	int hei = (GetMousePosition ().Y - startPoint.Y);  	if (wid >= 0)  		selectedRect.X = startPoint.X;  	else  		selectedRect.X = GetMousePosition ().X;  	if (hei >= 0)  		selectedRect.Y = startPoint.Y;  	else  		selectedRect.Y = GetMousePosition ().Y;  	selectedRect.Width = Math.Abs (GetMousePosition ().X - startPoint.X);  	selectedRect.Height = Math.Abs (GetMousePosition ().Y - startPoint.Y);  }  else {  	startPoint.X = -999;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,update,The following statement contains a magic number: if (Mouse.GetState ().LeftButton == ButtonState.Pressed) {  	if (startPoint.X == -999) {  		selectedRect = Rectangle.Empty;  		startPoint.X = GetMousePosition ().X;  		startPoint.Y = GetMousePosition ().Y;  		selectedRect.Location = startPoint;  	}  	int wid = (GetMousePosition ().X - startPoint.X);  	int hei = (GetMousePosition ().Y - startPoint.Y);  	if (wid >= 0)  		selectedRect.X = startPoint.X;  	else  		selectedRect.X = GetMousePosition ().X;  	if (hei >= 0)  		selectedRect.Y = startPoint.Y;  	else  		selectedRect.Y = GetMousePosition ().Y;  	selectedRect.Width = Math.Abs (GetMousePosition ().X - startPoint.X);  	selectedRect.Height = Math.Abs (GetMousePosition ().Y - startPoint.Y);  }  else {  	startPoint.X = -999;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,update,The following statement contains a magic number: if (startPoint.X == -999) {  	selectedRect = Rectangle.Empty;  	startPoint.X = GetMousePosition ().X;  	startPoint.Y = GetMousePosition ().Y;  	selectedRect.Location = startPoint;  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,update,The following statement contains a magic number: startPoint.X = -999;  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (formatted != Rectangle.Empty) {  	clippedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	ColoredClipedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	GraphicsDevice.SetRenderTarget (clippedTex);  	GraphicsDevice.Clear (Color.Black);  	// spriteBatch.Begin();  	spriteBatch.Begin (SpriteSortMode.Deferred' BlendState.NonPremultiplied' SamplerState.PointClamp' DepthStencilState.Default' RasterizerState.CullNone);  	if (monotex != null)  		spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  	GraphicsDevice.SetRenderTarget (ColoredClipedTex);  	GraphicsDevice.Clear (Color.Black);  	spriteBatch.Begin ();  	if (chr_map != null)  		spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (formatted != Rectangle.Empty) {  	clippedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	ColoredClipedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	GraphicsDevice.SetRenderTarget (clippedTex);  	GraphicsDevice.Clear (Color.Black);  	// spriteBatch.Begin();  	spriteBatch.Begin (SpriteSortMode.Deferred' BlendState.NonPremultiplied' SamplerState.PointClamp' DepthStencilState.Default' RasterizerState.CullNone);  	if (monotex != null)  		spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  	GraphicsDevice.SetRenderTarget (ColoredClipedTex);  	GraphicsDevice.Clear (Color.Black);  	spriteBatch.Begin ();  	if (chr_map != null)  		spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (formatted != Rectangle.Empty) {  	clippedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	ColoredClipedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	GraphicsDevice.SetRenderTarget (clippedTex);  	GraphicsDevice.Clear (Color.Black);  	// spriteBatch.Begin();  	spriteBatch.Begin (SpriteSortMode.Deferred' BlendState.NonPremultiplied' SamplerState.PointClamp' DepthStencilState.Default' RasterizerState.CullNone);  	if (monotex != null)  		spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  	GraphicsDevice.SetRenderTarget (ColoredClipedTex);  	GraphicsDevice.Clear (Color.Black);  	spriteBatch.Begin ();  	if (chr_map != null)  		spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (formatted != Rectangle.Empty) {  	clippedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	ColoredClipedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	GraphicsDevice.SetRenderTarget (clippedTex);  	GraphicsDevice.Clear (Color.Black);  	// spriteBatch.Begin();  	spriteBatch.Begin (SpriteSortMode.Deferred' BlendState.NonPremultiplied' SamplerState.PointClamp' DepthStencilState.Default' RasterizerState.CullNone);  	if (monotex != null)  		spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  	GraphicsDevice.SetRenderTarget (ColoredClipedTex);  	GraphicsDevice.Clear (Color.Black);  	spriteBatch.Begin ();  	if (chr_map != null)  		spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (formatted != Rectangle.Empty) {  	clippedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	ColoredClipedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	GraphicsDevice.SetRenderTarget (clippedTex);  	GraphicsDevice.Clear (Color.Black);  	// spriteBatch.Begin();  	spriteBatch.Begin (SpriteSortMode.Deferred' BlendState.NonPremultiplied' SamplerState.PointClamp' DepthStencilState.Default' RasterizerState.CullNone);  	if (monotex != null)  		spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  	GraphicsDevice.SetRenderTarget (ColoredClipedTex);  	GraphicsDevice.Clear (Color.Black);  	spriteBatch.Begin ();  	if (chr_map != null)  		spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (formatted != Rectangle.Empty) {  	clippedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	ColoredClipedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	GraphicsDevice.SetRenderTarget (clippedTex);  	GraphicsDevice.Clear (Color.Black);  	// spriteBatch.Begin();  	spriteBatch.Begin (SpriteSortMode.Deferred' BlendState.NonPremultiplied' SamplerState.PointClamp' DepthStencilState.Default' RasterizerState.CullNone);  	if (monotex != null)  		spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  	GraphicsDevice.SetRenderTarget (ColoredClipedTex);  	GraphicsDevice.Clear (Color.Black);  	spriteBatch.Begin ();  	if (chr_map != null)  		spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (formatted != Rectangle.Empty) {  	clippedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	ColoredClipedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	GraphicsDevice.SetRenderTarget (clippedTex);  	GraphicsDevice.Clear (Color.Black);  	// spriteBatch.Begin();  	spriteBatch.Begin (SpriteSortMode.Deferred' BlendState.NonPremultiplied' SamplerState.PointClamp' DepthStencilState.Default' RasterizerState.CullNone);  	if (monotex != null)  		spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  	GraphicsDevice.SetRenderTarget (ColoredClipedTex);  	GraphicsDevice.Clear (Color.Black);  	spriteBatch.Begin ();  	if (chr_map != null)  		spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (formatted != Rectangle.Empty) {  	clippedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	ColoredClipedTex = new RenderTarget2D (GraphicsDevice' formatted.Width' formatted.Height);  	GraphicsDevice.SetRenderTarget (clippedTex);  	GraphicsDevice.Clear (Color.Black);  	// spriteBatch.Begin();  	spriteBatch.Begin (SpriteSortMode.Deferred' BlendState.NonPremultiplied' SamplerState.PointClamp' DepthStencilState.Default' RasterizerState.CullNone);  	if (monotex != null)  		spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  	GraphicsDevice.SetRenderTarget (ColoredClipedTex);  	GraphicsDevice.Clear (Color.Black);  	spriteBatch.Begin ();  	if (chr_map != null)  		spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	spriteBatch.End ();  	GraphicsDevice.SetRenderTarget (null);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (monotex != null)  	spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (monotex != null)  	spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (monotex != null)  	spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (monotex != null)  	spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (monotex' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (chr_map != null)  	spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (chr_map != null)  	spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (chr_map != null)  	spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (chr_map != null)  	spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (chr_map' Vector2.Zero' new Rectangle (formatted.X / 2' formatted.Y / 2' formatted.Width / 2' formatted.Height / 2)' Color.White' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < grids.Count; i++) {  	Vector2 pos = new Vector2 (i % 16 * 16' grid_line * 16);  	Rectangle gridRec = new Rectangle ((int)pos.X' (int)pos.Y' (int)grids [i].Bounds.Width * 2' (int)grids [i].Bounds.Height * 2);  	if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  		if (minPos.X == -1)  			minPos = gridRec.Location;  		maxPos = gridRec.Location;  		spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  		selected_metatile.Add ((byte)i);  	}  	if (i % 16 == 15)  		grid_line++;  	// if (i == 19)  	//      spriteBatch.DrawString(font' "gridRec:" + gridRec.ToString()' new Vector2(1' 23)' Color.White);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < grids.Count; i++) {  	Vector2 pos = new Vector2 (i % 16 * 16' grid_line * 16);  	Rectangle gridRec = new Rectangle ((int)pos.X' (int)pos.Y' (int)grids [i].Bounds.Width * 2' (int)grids [i].Bounds.Height * 2);  	if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  		if (minPos.X == -1)  			minPos = gridRec.Location;  		maxPos = gridRec.Location;  		spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  		selected_metatile.Add ((byte)i);  	}  	if (i % 16 == 15)  		grid_line++;  	// if (i == 19)  	//      spriteBatch.DrawString(font' "gridRec:" + gridRec.ToString()' new Vector2(1' 23)' Color.White);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < grids.Count; i++) {  	Vector2 pos = new Vector2 (i % 16 * 16' grid_line * 16);  	Rectangle gridRec = new Rectangle ((int)pos.X' (int)pos.Y' (int)grids [i].Bounds.Width * 2' (int)grids [i].Bounds.Height * 2);  	if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  		if (minPos.X == -1)  			minPos = gridRec.Location;  		maxPos = gridRec.Location;  		spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  		selected_metatile.Add ((byte)i);  	}  	if (i % 16 == 15)  		grid_line++;  	// if (i == 19)  	//      spriteBatch.DrawString(font' "gridRec:" + gridRec.ToString()' new Vector2(1' 23)' Color.White);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < grids.Count; i++) {  	Vector2 pos = new Vector2 (i % 16 * 16' grid_line * 16);  	Rectangle gridRec = new Rectangle ((int)pos.X' (int)pos.Y' (int)grids [i].Bounds.Width * 2' (int)grids [i].Bounds.Height * 2);  	if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  		if (minPos.X == -1)  			minPos = gridRec.Location;  		maxPos = gridRec.Location;  		spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  		selected_metatile.Add ((byte)i);  	}  	if (i % 16 == 15)  		grid_line++;  	// if (i == 19)  	//      spriteBatch.DrawString(font' "gridRec:" + gridRec.ToString()' new Vector2(1' 23)' Color.White);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < grids.Count; i++) {  	Vector2 pos = new Vector2 (i % 16 * 16' grid_line * 16);  	Rectangle gridRec = new Rectangle ((int)pos.X' (int)pos.Y' (int)grids [i].Bounds.Width * 2' (int)grids [i].Bounds.Height * 2);  	if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  		if (minPos.X == -1)  			minPos = gridRec.Location;  		maxPos = gridRec.Location;  		spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  		selected_metatile.Add ((byte)i);  	}  	if (i % 16 == 15)  		grid_line++;  	// if (i == 19)  	//      spriteBatch.DrawString(font' "gridRec:" + gridRec.ToString()' new Vector2(1' 23)' Color.White);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < grids.Count; i++) {  	Vector2 pos = new Vector2 (i % 16 * 16' grid_line * 16);  	Rectangle gridRec = new Rectangle ((int)pos.X' (int)pos.Y' (int)grids [i].Bounds.Width * 2' (int)grids [i].Bounds.Height * 2);  	if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  		if (minPos.X == -1)  			minPos = gridRec.Location;  		maxPos = gridRec.Location;  		spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  		selected_metatile.Add ((byte)i);  	}  	if (i % 16 == 15)  		grid_line++;  	// if (i == 19)  	//      spriteBatch.DrawString(font' "gridRec:" + gridRec.ToString()' new Vector2(1' 23)' Color.White);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < grids.Count; i++) {  	Vector2 pos = new Vector2 (i % 16 * 16' grid_line * 16);  	Rectangle gridRec = new Rectangle ((int)pos.X' (int)pos.Y' (int)grids [i].Bounds.Width * 2' (int)grids [i].Bounds.Height * 2);  	if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  		if (minPos.X == -1)  			minPos = gridRec.Location;  		maxPos = gridRec.Location;  		spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  		selected_metatile.Add ((byte)i);  	}  	if (i % 16 == 15)  		grid_line++;  	// if (i == 19)  	//      spriteBatch.DrawString(font' "gridRec:" + gridRec.ToString()' new Vector2(1' 23)' Color.White);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < grids.Count; i++) {  	Vector2 pos = new Vector2 (i % 16 * 16' grid_line * 16);  	Rectangle gridRec = new Rectangle ((int)pos.X' (int)pos.Y' (int)grids [i].Bounds.Width * 2' (int)grids [i].Bounds.Height * 2);  	if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  		if (minPos.X == -1)  			minPos = gridRec.Location;  		maxPos = gridRec.Location;  		spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  		selected_metatile.Add ((byte)i);  	}  	if (i % 16 == 15)  		grid_line++;  	// if (i == 19)  	//      spriteBatch.DrawString(font' "gridRec:" + gridRec.ToString()' new Vector2(1' 23)' Color.White);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < grids.Count; i++) {  	Vector2 pos = new Vector2 (i % 16 * 16' grid_line * 16);  	Rectangle gridRec = new Rectangle ((int)pos.X' (int)pos.Y' (int)grids [i].Bounds.Width * 2' (int)grids [i].Bounds.Height * 2);  	if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  		if (minPos.X == -1)  			minPos = gridRec.Location;  		maxPos = gridRec.Location;  		spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  		selected_metatile.Add ((byte)i);  	}  	if (i % 16 == 15)  		grid_line++;  	// if (i == 19)  	//      spriteBatch.DrawString(font' "gridRec:" + gridRec.ToString()' new Vector2(1' 23)' Color.White);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < grids.Count; i++) {  	Vector2 pos = new Vector2 (i % 16 * 16' grid_line * 16);  	Rectangle gridRec = new Rectangle ((int)pos.X' (int)pos.Y' (int)grids [i].Bounds.Width * 2' (int)grids [i].Bounds.Height * 2);  	if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  		if (minPos.X == -1)  			minPos = gridRec.Location;  		maxPos = gridRec.Location;  		spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  		selected_metatile.Add ((byte)i);  	}  	if (i % 16 == 15)  		grid_line++;  	// if (i == 19)  	//      spriteBatch.DrawString(font' "gridRec:" + gridRec.ToString()' new Vector2(1' 23)' Color.White);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < grids.Count; i++) {  	Vector2 pos = new Vector2 (i % 16 * 16' grid_line * 16);  	Rectangle gridRec = new Rectangle ((int)pos.X' (int)pos.Y' (int)grids [i].Bounds.Width * 2' (int)grids [i].Bounds.Height * 2);  	if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  		if (minPos.X == -1)  			minPos = gridRec.Location;  		maxPos = gridRec.Location;  		spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  		selected_metatile.Add ((byte)i);  	}  	if (i % 16 == 15)  		grid_line++;  	// if (i == 19)  	//      spriteBatch.DrawString(font' "gridRec:" + gridRec.ToString()' new Vector2(1' 23)' Color.White);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  	if (minPos.X == -1)  		minPos = gridRec.Location;  	maxPos = gridRec.Location;  	spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	selected_metatile.Add ((byte)i);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  	if (minPos.X == -1)  		minPos = gridRec.Location;  	maxPos = gridRec.Location;  	spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	selected_metatile.Add ((byte)i);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  	if (minPos.X == -1)  		minPos = gridRec.Location;  	maxPos = gridRec.Location;  	spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	selected_metatile.Add ((byte)i);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (selectedRect.Intersects (gridRec) || selectedRect.Contains (gridRec)) {  	if (minPos.X == -1)  		minPos = gridRec.Location;  	maxPos = gridRec.Location;  	spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  	selected_metatile.Add ((byte)i);  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: spriteBatch.Draw (grids [i]' pos' null' new Color (255' 255' 255' 100)' 0f' Vector2.Zero' 2f' SpriteEffects.None' 1);  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (i % 16 == 15)  	grid_line++;  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (i % 16 == 15)  	grid_line++;  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: formatted.Width = maxPos.X - minPos.X + 16;  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: formatted.Height = maxPos.Y - minPos.Y + 16;  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (frameCount % 30 == 29) {  	if (clippedTex != null) {  		_pb.Image = TextureExtensions.TextureToPng (clippedTex' clippedTex.Width' clippedTex.Height);  	}  }  
Magic Number,WinFormsGraphicsDevice,CHRViewControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\CHRViewControl.cs,Draw,The following statement contains a magic number: if (frameCount % 30 == 29) {  	if (clippedTex != null) {  		_pb.Image = TextureExtensions.TextureToPng (clippedTex' clippedTex.Width' clippedTex.Height);  	}  }  
Magic Number,WinFormsGraphicsDevice,MapEditControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MapEditControl.cs,update,The following statement contains a magic number: if (!MainForm.isStopped && MainForm.lastMouseScroll > 2) {  	MainForm.isStopped = true;  }  
Magic Number,WinFormsGraphicsDevice,MapEditControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MapEditControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < MapSize.map_size [0]; i++)  	for (int j = 0; j < MapSize.map_size [1]; j++) {  		pos.X = i * 16 * scale;  		pos.Y = j * 16 * scale;  		int sizee = (int)Math.Round (size * scale);  		Rectangle rec = new Rectangle ((int)pos.X + (int)panel_position.X' (int)pos.Y + (int)panel_position.Y' sizee' sizee);  		if (rec.Contains (GetMousePosition ())) {  			map_bgCol [i' j] += 0.1f;  			if (map_bgCol [i' j] >= 1f)  				map_bgCol [i' j] = 1f;  		}  		map_bgCol [i' j] -= 0.01f;  		if (map_bgCol [i' j] <= 0.1f)  			map_bgCol [i' j] = 0.1f;  		spriteBatch.Draw (cell' pos + panel_position' null' Color.White * map_bgCol [i' j]' 0f' Vector2.Zero' new Vector2 (scale' scale)' SpriteEffects.None' 0f);  	}  
Magic Number,WinFormsGraphicsDevice,MapEditControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MapEditControl.cs,Draw,The following statement contains a magic number: for (int i = 0; i < MapSize.map_size [0]; i++)  	for (int j = 0; j < MapSize.map_size [1]; j++) {  		pos.X = i * 16 * scale;  		pos.Y = j * 16 * scale;  		int sizee = (int)Math.Round (size * scale);  		Rectangle rec = new Rectangle ((int)pos.X + (int)panel_position.X' (int)pos.Y + (int)panel_position.Y' sizee' sizee);  		if (rec.Contains (GetMousePosition ())) {  			map_bgCol [i' j] += 0.1f;  			if (map_bgCol [i' j] >= 1f)  				map_bgCol [i' j] = 1f;  		}  		map_bgCol [i' j] -= 0.01f;  		if (map_bgCol [i' j] <= 0.1f)  			map_bgCol [i' j] = 0.1f;  		spriteBatch.Draw (cell' pos + panel_position' null' Color.White * map_bgCol [i' j]' 0f' Vector2.Zero' new Vector2 (scale' scale)' SpriteEffects.None' 0f);  	}  
Magic Number,WinFormsGraphicsDevice,MapEditControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MapEditControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < MapSize.map_size [1]; j++) {  	pos.X = i * 16 * scale;  	pos.Y = j * 16 * scale;  	int sizee = (int)Math.Round (size * scale);  	Rectangle rec = new Rectangle ((int)pos.X + (int)panel_position.X' (int)pos.Y + (int)panel_position.Y' sizee' sizee);  	if (rec.Contains (GetMousePosition ())) {  		map_bgCol [i' j] += 0.1f;  		if (map_bgCol [i' j] >= 1f)  			map_bgCol [i' j] = 1f;  	}  	map_bgCol [i' j] -= 0.01f;  	if (map_bgCol [i' j] <= 0.1f)  		map_bgCol [i' j] = 0.1f;  	spriteBatch.Draw (cell' pos + panel_position' null' Color.White * map_bgCol [i' j]' 0f' Vector2.Zero' new Vector2 (scale' scale)' SpriteEffects.None' 0f);  }  
Magic Number,WinFormsGraphicsDevice,MapEditControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MapEditControl.cs,Draw,The following statement contains a magic number: for (int j = 0; j < MapSize.map_size [1]; j++) {  	pos.X = i * 16 * scale;  	pos.Y = j * 16 * scale;  	int sizee = (int)Math.Round (size * scale);  	Rectangle rec = new Rectangle ((int)pos.X + (int)panel_position.X' (int)pos.Y + (int)panel_position.Y' sizee' sizee);  	if (rec.Contains (GetMousePosition ())) {  		map_bgCol [i' j] += 0.1f;  		if (map_bgCol [i' j] >= 1f)  			map_bgCol [i' j] = 1f;  	}  	map_bgCol [i' j] -= 0.01f;  	if (map_bgCol [i' j] <= 0.1f)  		map_bgCol [i' j] = 0.1f;  	spriteBatch.Draw (cell' pos + panel_position' null' Color.White * map_bgCol [i' j]' 0f' Vector2.Zero' new Vector2 (scale' scale)' SpriteEffects.None' 0f);  }  
Magic Number,WinFormsGraphicsDevice,MapEditControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MapEditControl.cs,Draw,The following statement contains a magic number: pos.X = i * 16 * scale;  
Magic Number,WinFormsGraphicsDevice,MapEditControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MapEditControl.cs,Draw,The following statement contains a magic number: pos.Y = j * 16 * scale;  
Magic Number,WinFormsGraphicsDevice,MapEditControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MapEditControl.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' "DEBUG size : " + size' new Vector2 (10' this.Size.Height - 10)' Color.White);  
Magic Number,WinFormsGraphicsDevice,MapEditControl,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\MapEditControl.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' "DEBUG size : " + size' new Vector2 (10' this.Size.Height - 10)' Color.White);  
Magic Number,WinFormsGraphicsDevice,TextureExtensions,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\TextureExtensions.cs,TextureToPng,The following statement contains a magic number: for (int i = 0; i < textureData.Length; i += 4) {  	blue = textureData [i];  	textureData [i] = textureData [i + 2];  	textureData [i + 2] = blue;  }  
Magic Number,WinFormsGraphicsDevice,TextureExtensions,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\TextureExtensions.cs,TextureToPng,The following statement contains a magic number: for (int i = 0; i < textureData.Length; i += 4) {  	blue = textureData [i];  	textureData [i] = textureData [i + 2];  	textureData [i + 2] = blue;  }  
Magic Number,WinFormsGraphicsDevice,TextureExtensions,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\TextureExtensions.cs,TextureToPng,The following statement contains a magic number: for (int i = 0; i < textureData.Length; i += 4) {  	blue = textureData [i];  	textureData [i] = textureData [i + 2];  	textureData [i + 2] = blue;  }  
Magic Number,WinFormsGraphicsDevice,TextureExtensions,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\TextureExtensions.cs,TextureToPng,The following statement contains a magic number: i += 4
Magic Number,WinFormsGraphicsDevice,TextureExtensions,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\TextureExtensions.cs,TextureToPng,The following statement contains a magic number: textureData [i] = textureData [i + 2];  
Magic Number,WinFormsGraphicsDevice,TextureExtensions,C:\repos\NexusEast_Console-Tile-Editor\WinFormsGraphicsDevice\TextureExtensions.cs,TextureToPng,The following statement contains a magic number: textureData [i + 2] = blue;  
