Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,WampSharp.RawSocket,RawSocketClientConnection<TMessage>,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketClientConnection.cs,RawSocketClientConnection,The method has 5 parameters. Parameters: clientBuilder' connector' parser' autoPingInterval' sslConfiguration
Long Parameter List,WampSharp.RawSocket,TcpClientConnection<TMessage>,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\TcpClientConnection.cs,TcpClientConnection,The method has 7 parameters. Parameters: client' stream' maxAllowedMessageSize' handshake' binding' byteArrayPool' autoPingInterval
Long Statement,WampSharp.V2.Fluent,RawSocketActivator,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\WAMP2\V2\Fluent\RawSocketActivator.cs,Activate,The length of the statement  "            return new RawSocketClientConnection<TMessage>(ClientBuilder' Connector' (dynamic) binding' AutoPingInterval' SslConfiguration); " is 128.
Magic Number,WampSharp.RawSocket,Handshake,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\Handshake.cs,Handshake,The following statement contains a magic number: maxLength >= 16
Magic Number,WampSharp.RawSocket,Handshake,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\Handshake.cs,Handshake,The following statement contains a magic number: SecondOctet = (byte) ((maxLength << 4) + (byte)serializerType);
Magic Number,WampSharp.RawSocket,Handshake,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\Handshake.cs,Handshake,The following statement contains a magic number: SecondOctet = (byte)(((byte)errorCode) << 4);
Magic Number,WampSharp.RawSocket,Handshake,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\Handshake.cs,Handshake,The following statement contains a magic number: message.Array == null || message.Count != 4
Magic Number,WampSharp.RawSocket,Handshake,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\Handshake.cs,Handshake,The following statement contains a magic number: ReservedOctets = BitConverter.ToInt16(message.Array' message.Offset + 2);
Magic Number,WampSharp.RawSocket,Handshake,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\Handshake.cs,TryParse,The following statement contains a magic number: message.Array == null || message.Count != 4
Magic Number,WampSharp.RawSocket,Handshaker,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\Handshaker.cs,GetHandshakeMessage,The following statement contains a magic number: byte[] bytes = new byte[4];
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,InnerParse,The following statement contains a magic number: messageLength = headerBytes.ElementAt(3) + (headerBytes.ElementAt(2) << 8) + (headerBytes.ElementAt(1) << 16);
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,InnerParse,The following statement contains a magic number: messageLength = headerBytes.ElementAt(3) + (headerBytes.ElementAt(2) << 8) + (headerBytes.ElementAt(1) << 16);
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,InnerParse,The following statement contains a magic number: messageLength = headerBytes.ElementAt(3) + (headerBytes.ElementAt(2) << 8) + (headerBytes.ElementAt(1) << 16);
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,InnerParse,The following statement contains a magic number: messageLength = headerBytes.ElementAt(3) + (headerBytes.ElementAt(2) << 8) + (headerBytes.ElementAt(1) << 16);
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,ValidateMessageType,The following statement contains a magic number: messageTypeInBytes > 2
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,WriteHeader,The following statement contains a magic number: length = length >> 8;
Magic Number,WampSharp.RawSocket,RawSocketTransport,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketTransport.cs,RawSocketTransport,The following statement contains a magic number: maxSize >= 16
Missing Default,WampSharp.RawSocket,RawSocketClientConnection<TMessage>,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketClientConnection.cs,GetSerializerType,The following switch statement is missing a default case: switch (binding.Name)              {                  case WampSubProtocols.JsonSubProtocol:                      return SerializerType.Json;                  case WampSubProtocols.MsgPackSubProtocol:                      return SerializerType.MsgPack;              }
Missing Default,WampSharp.RawSocket,SerializerTypeExtensions,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\SerializerTypeExtensions.cs,GetSubProtocol,The following switch statement is missing a default case: switch (serializerType)              {                  case SerializerType.Json:                      return WampSubProtocols.JsonSubProtocol;                  case SerializerType.MsgPack:                      return WampSubProtocols.MsgPackSubProtocol;              }
Missing Default,WampSharp.RawSocket,TcpClientConnection<TMessage>,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.RawSocket\RawSocket\TcpClientConnection.cs,HandleFrame,The following switch statement is missing a default case: switch (frameType)              {                  case FrameType.WampMessage:                      await HandleWampMessage(messageLength).ConfigureAwait(false);                      break;                  case FrameType.Ping:                      await HandlePing(messageLength).ConfigureAwait(false);                      break;                  case FrameType.Pong:                      await HandlePong(messageLength).ConfigureAwait(false);                      break;              }
