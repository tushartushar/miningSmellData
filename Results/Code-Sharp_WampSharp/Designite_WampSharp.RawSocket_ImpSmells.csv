Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WampSharp.RawSocket,TcpClientConnection,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\TcpClientConnection.cs,HandleFrame,Cyclomatic complexity of the method is 9
Long Parameter List,WampSharp.RawSocket,TcpClientConnection,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\TcpClientConnection.cs,TcpClientConnection,The method has 6 parameters.
Long Statement,WampSharp.RawSocket,RawSocketClientConnection,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketClientConnection.cs,InnerConnect,The length of the statement  "			OnConnectionError (new WampConnectionErrorEventArgs (new RawSocketProtocolException (handshakeResponse.HandshakeError.Value))); " is 127.
Long Statement,WampSharp.RawSocket,RawSocketClientConnection,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketClientConnection.cs,CreateInnerConnection,The length of the statement  "	TcpClientConnection<TMessage> connection = new TcpClientConnection<TMessage> (mClient' handshakeRequest.MaxMessageSizeInBytes' handshakeResponse' mParser' mByteArrayPool' mAutoPingInterval); " is 190.
Long Statement,WampSharp.RawSocket,TcpClientConnection,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\TcpClientConnection.cs,HandleTcpClientAsync,The length of the statement  "			if (mFrameHeaderParser.TryParse (frameHeaderBytes' out frameType' out messageLength) && (messageLength <= mMaxAllowedMessageSize)) { " is 132.
Long Statement,WampSharp.RawSocket,RawSocketTransport,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketTransport.cs,CreateConnection,The length of the statement  "	return new TcpClientConnection<TMessage> (connection.Client' connection.HandshakeResponse.MaxMessageSizeInBytes' connection.HandshakeRequest' binding' mByteArrayPool' mAutoPingInterval); " is 186.
Magic Number,WampSharp.RawSocket,Handshake,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\Handshake.cs,Handshake,The following statement contains a magic number: if (maxLength >= 16) {  	throw new ArgumentOutOfRangeException ("maxLength"' "Expected a value between 0 to 15");  }  
Magic Number,WampSharp.RawSocket,Handshake,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\Handshake.cs,Handshake,The following statement contains a magic number: SecondOctect = (byte)((maxLength << 4) + (byte)serializerType);  
Magic Number,WampSharp.RawSocket,Handshake,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\Handshake.cs,Handshake,The following statement contains a magic number: SecondOctect = (byte)(((byte)errorCode) << 4);  
Magic Number,WampSharp.RawSocket,Handshake,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\Handshake.cs,Handshake,The following statement contains a magic number: if (message == null || message.Length != 4) {  	throw new ArgumentException ("Expected a 4 length byte array."' "message");  }  
Magic Number,WampSharp.RawSocket,Handshake,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\Handshake.cs,Handshake,The following statement contains a magic number: ReservedOctects = BitConverter.ToInt16 (message' 2);  
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,InnerParse,The following statement contains a magic number: messageLength = headerBytes [3] + (headerBytes [2] << 8) + (headerBytes [1] << 16);  
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,InnerParse,The following statement contains a magic number: messageLength = headerBytes [3] + (headerBytes [2] << 8) + (headerBytes [1] << 16);  
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,InnerParse,The following statement contains a magic number: messageLength = headerBytes [3] + (headerBytes [2] << 8) + (headerBytes [1] << 16);  
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,InnerParse,The following statement contains a magic number: messageLength = headerBytes [3] + (headerBytes [2] << 8) + (headerBytes [1] << 16);  
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,ValidateHeaderArray,The following statement contains a magic number: if (headerBytes == null || headerBytes.Length != 4) {  	if (throwExceptions) {  		throw new ArgumentException ("Expected a 4 length byte[]"' "headerBytes");  	} else {  		return false;  	}  }  
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,ValidateMessageType,The following statement contains a magic number: if (messageTypeInBytes > 2) {  	if (throwExceptions) {  		throw new ArgumentException ("First octect value is expected between 0 to 2"' "headerBytes");  	} else {  		return false;  	}  }  
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,WriteHeader,The following statement contains a magic number: for (int i = 3; i > 0; i--) {  	array [i] = (byte)length;  	length = length >> 8;  }  
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,WriteHeader,The following statement contains a magic number: for (int i = 3; i > 0; i--) {  	array [i] = (byte)length;  	length = length >> 8;  }  
Magic Number,WampSharp.RawSocket,RawSocketFrameHeaderParser,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketFrameHeaderParser.cs,WriteHeader,The following statement contains a magic number: length = length >> 8;  
Magic Number,WampSharp.RawSocket,RawSocketTransport,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketTransport.cs,RawSocketTransport,The following statement contains a magic number: if (maxSize >= 16) {  	throw new ArgumentException ("Expected a number between 0 to 15"' "maxSize");  }  
Missing Default,WampSharp.RawSocket,RawSocketClientConnection,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketClientConnection.cs,GetSerializerType,The following switch statement is missing a default case: switch (binding.Name) {  case WampSubProtocols.JsonSubProtocol:  	return SerializerType.Json;  case WampSubProtocols.MsgPackSubProtocol:  	return SerializerType.MsgPack;  }  
Missing Default,WampSharp.RawSocket,TcpClientConnection,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\TcpClientConnection.cs,HandleFrame,The following switch statement is missing a default case: switch (frameType) {  case FrameType.WampMessage:  	await HandleWampMessage (messageLength);  	break;  case FrameType.Ping:  	await HandlePing (messageLength);  	break;  case FrameType.Pong:  	await HandlePong (messageLength);  	break;  }  
Missing Default,WampSharp.RawSocket,RawSocketTransport,F:\newReposMay17\Code-Sharp_WampSharp\src\mono\Extensions\WampSharp.RawSocket\..\..\..\net45\Extensions\WampSharp.RawSocket\RawSocket\RawSocketTransport.cs,GetSubProtocol,The following switch statement is missing a default case: switch (serializerType) {  case SerializerType.Json:  	return WampSubProtocols.JsonSubProtocol;  case SerializerType.MsgPack:  	return WampSubProtocols.MsgPackSubProtocol;  }  
