Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,WampSharp.V2.Fluent,IWebSocketTransportSyntax,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.WebSockets\WAMP2\V2\Fluent\IWebSocketTransportSyntax.cs,SetClientWebSocketOptions,The length of the parameter configureClientWebSocketOptions is 31.
Long Identifier,WampSharp.V2.Fluent,WebSocketTransportSyntax,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.WebSockets\WAMP2\V2\Fluent\WebSocketTransportSyntax.cs,SetClientWebSocketOptions,The length of the parameter configureClientWebSocketOptions is 31.
Magic Number,WampSharp.WebSockets,WebSocketWrapperConnection<TMessage;TRaw>,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.WebSockets\WebSockets\WebSocketWrapperConnection.cs,RunAsync,The following statement contains a magic number: const int maxMessageSize = 2048;
Missing Default,WampSharp.V2.Fluent,WebSocketActivator,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Extensions\WampSharp.WebSockets\WAMP2\V2\Fluent\WebSocketActivator.cs,GetConnectionFactory,The following switch statement is missing a default case: switch (binding)              {                  case IWampTextBinding<TMessage> textBinding:                      return CreateTextConnection(textBinding);                  case IWampBinaryBinding<TMessage> binaryBinding:                      return CreateBinaryConnection(binaryBinding);              }
