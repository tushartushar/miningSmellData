Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,WampSharp.Fleck,FleckAuthenticatedWebSocketTransport,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Default\WampSharp.Fleck\Fleck\FleckAuthenticatedWebSocketTransport.cs,FleckAuthenticatedWebSocketTransport,The method has 5 parameters. Parameters: location' cookieAuthenticatorFactory' certificate' getEnabledSslProtocols' supportDualStack
Long Parameter List,WampSharp.Fleck,FleckWebSocketTransport,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Default\WampSharp.Fleck\Fleck\FleckWebSocketTransport.cs,FleckWebSocketTransport,The method has 5 parameters. Parameters: location' cookieAuthenticatorFactory' certificate' getEnabledSslProtocols' supportDualStack
Magic Number,WampSharp.Fleck,FleckWampConnection<TMessage>,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Default\WampSharp.Fleck\Fleck\FleckWampConnection.cs,FleckWampConnection,The following statement contains a magic number: mPingPongHandler =                  new PingPongHandler(mLogger'                                      new FleckPinger(webSocketConnection)'                                      autoSendPingInterval ?? TimeSpan.FromSeconds(45));
Missing Default,WampSharp.Fleck,FleckWebSocketTransport,D:\research\architectureSmells\repos\Code-Sharp_WampSharp\src\net45\Default\WampSharp.Fleck\Fleck\FleckWebSocketTransport.cs,ConvertLog,The following switch statement is missing a default case: switch (logLevel)              {                  case LogLevel.Debug:                  {                      mLogger.DebugException(message' exception);                      break;                  }                  case LogLevel.Info:                  {                      mLogger.InfoException(message' exception);                      break;                  }                  case LogLevel.Warn:                  {                      mLogger.WarnException(message' exception);                      break;                  }                  case LogLevel.Error:                  {                      mLogger.ErrorException(message' exception);                      break;                  }              }
