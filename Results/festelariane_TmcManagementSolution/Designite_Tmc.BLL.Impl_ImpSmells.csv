Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,EncryptString,Cyclomatic complexity of the method is 8
Complex Method,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,DecryptString,Cyclomatic complexity of the method is 8
Long Parameter List,Tmc.BLL.Impl.Customers,CustomerBiz,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Customers\CustomerBiz.cs,GetAllCustomers,The method has 7 parameters.
Long Parameter List,Tmc.BLL.Impl.Customers,CustomerBiz,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Customers\CustomerBiz.cs,AssignUserToRoles,The method has 5 parameters.
Long Parameter List,Tmc.BLL.Impl.Transactions,TransactionBiz,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Transactions\TransactionBiz.cs,GetAllDepositTransactions,The method has 15 parameters.
Long Parameter List,Tmc.BLL.Impl.Transactions,TransactionBiz,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Transactions\TransactionBiz.cs,GetAllWithdrawTransactions,The method has 15 parameters.
Long Statement,Tmc.BLL.Impl.Authentication,FormAuthenticationBiz,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Authentication\FormAuthenticationBiz.cs,SignIn,The length of the statement  "	var ticket = new FormsAuthenticationTicket (1' customer.UserName' now' now.Add (_expirationTimeSpan)' createPersistentCookie' customer.UserName' FormsAuthentication.FormsCookiePath); " is 182.
Long Statement,Tmc.BLL.Impl.Authentication,FormAuthenticationBiz,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Authentication\FormAuthenticationBiz.cs,GetAuthenticatedCustomer,The length of the statement  "	if (_httpContext == null || _httpContext.Request == null || !_httpContext.Request.IsAuthenticated || !(_httpContext.User.Identity is FormsIdentity)) { " is 150.
Long Statement,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportCustomersToXlsx,The length of the statement  "			worksheet.Cells [row' col].Value = customer.LastLoginDateUtc == null ? string.Empty : GetDateString (customer.LastLoginDateUtc.Value); " is 134.
Long Statement,Tmc.BLL.Impl.ScheduleJobs,TestAllJobs,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ScheduleJobs\TestAllJobs.cs,Start,The length of the statement  "	ITrigger trigger = TriggerBuilder.Create ().WithIdentity ("1JobTrigger").WithSimpleSchedule (x => x.RepeatForever ().WithInterval (new TimeSpan (0' 0' 1' 0' 0))).StartNow ().Build (); " is 183.
Long Statement,Tmc.BLL.Impl.Transactions,TransactionBiz,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Transactions\TransactionBiz.cs,GetAllDepositTransactions,The length of the statement  "			query = query.Join (_customerRepository.Table.Where (c => c.UserName.Contains (CustomerUserName))' dt => dt.CustomerId' c => c.Id' (dt' c) => dt); " is 146.
Long Statement,Tmc.BLL.Impl.Transactions,TransactionBiz,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Transactions\TransactionBiz.cs,GetAllWithdrawTransactions,The length of the statement  "			query = query.Join (_customerRepository.Table.Where (c => c.UserName.Contains (CustomerUserName))' dt => dt.CustomerId' c => c.Id' (dt' c) => dt); " is 146.
Complex Conditional,Tmc.BLL.Impl.Authentication,FormAuthenticationBiz,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Authentication\FormAuthenticationBiz.cs,GetAuthenticatedCustomer,The conditional expression  "_httpContext == null || _httpContext.Request == null || !_httpContext.Request.IsAuthenticated || !(_httpContext.User.Identity is FormsIdentity)"  is complex.
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportCustomersToXlsx,The following statement contains a magic number: using (var xlPackage = new ExcelPackage (stream)) {  	var worksheet = xlPackage.Workbook.Worksheets.Add ("Customers");  	//Create Headers and format them  	var properties = new string[] {  		"CustomerId"'  		"FullName"'  		"Username"'  		"Points"'  		"CardType"'  		"CreatedOnUtc"'  		"UpdatedOnUtc"'  		"LastActivityDateUtc"'  		"LastLoginDateUtc"  	};  	for (int i = 0; i < properties.Length; i++) {  		worksheet.Cells [1' i + 1].Value = properties [i];  		worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  		worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  		worksheet.Cells [1' i + 1].Style.Font.Bold = true;  	}  	int row = 2;  	foreach (var customer in customers) {  		int col = 1;  		worksheet.Cells [row' col].Value = customer.Id;  		col++;  		worksheet.Cells [row' col].Value = customer.FullName;  		col++;  		worksheet.Cells [row' col].Value = customer.UserName;  		col++;  		worksheet.Cells [row' col].Value = customer.Points;  		col++;  		worksheet.Cells [row' col].Value = customer.CardType != null ? customer.CardType.Name : "";  		col++;  		worksheet.Cells [row' col].Value = GetDateString (customer.CreatedOnUtc);  		col++;  		worksheet.Cells [row' col].Value = GetDateString (customer.UpdatedOnUtc);  		col++;  		worksheet.Cells [row' col].Value = GetDateString (customer.LastActivityDateUtc);  		col++;  		worksheet.Cells [row' col].Value = customer.LastLoginDateUtc == null ? string.Empty : GetDateString (customer.LastLoginDateUtc.Value);  		row++;  	}  	// save the new spreadsheet  	xlPackage.Save ();  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportCustomersToXlsx,The following statement contains a magic number: using (var xlPackage = new ExcelPackage (stream)) {  	var worksheet = xlPackage.Workbook.Worksheets.Add ("Customers");  	//Create Headers and format them  	var properties = new string[] {  		"CustomerId"'  		"FullName"'  		"Username"'  		"Points"'  		"CardType"'  		"CreatedOnUtc"'  		"UpdatedOnUtc"'  		"LastActivityDateUtc"'  		"LastLoginDateUtc"  	};  	for (int i = 0; i < properties.Length; i++) {  		worksheet.Cells [1' i + 1].Value = properties [i];  		worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  		worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  		worksheet.Cells [1' i + 1].Style.Font.Bold = true;  	}  	int row = 2;  	foreach (var customer in customers) {  		int col = 1;  		worksheet.Cells [row' col].Value = customer.Id;  		col++;  		worksheet.Cells [row' col].Value = customer.FullName;  		col++;  		worksheet.Cells [row' col].Value = customer.UserName;  		col++;  		worksheet.Cells [row' col].Value = customer.Points;  		col++;  		worksheet.Cells [row' col].Value = customer.CardType != null ? customer.CardType.Name : "";  		col++;  		worksheet.Cells [row' col].Value = GetDateString (customer.CreatedOnUtc);  		col++;  		worksheet.Cells [row' col].Value = GetDateString (customer.UpdatedOnUtc);  		col++;  		worksheet.Cells [row' col].Value = GetDateString (customer.LastActivityDateUtc);  		col++;  		worksheet.Cells [row' col].Value = customer.LastLoginDateUtc == null ? string.Empty : GetDateString (customer.LastLoginDateUtc.Value);  		row++;  	}  	// save the new spreadsheet  	xlPackage.Save ();  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportCustomersToXlsx,The following statement contains a magic number: using (var xlPackage = new ExcelPackage (stream)) {  	var worksheet = xlPackage.Workbook.Worksheets.Add ("Customers");  	//Create Headers and format them  	var properties = new string[] {  		"CustomerId"'  		"FullName"'  		"Username"'  		"Points"'  		"CardType"'  		"CreatedOnUtc"'  		"UpdatedOnUtc"'  		"LastActivityDateUtc"'  		"LastLoginDateUtc"  	};  	for (int i = 0; i < properties.Length; i++) {  		worksheet.Cells [1' i + 1].Value = properties [i];  		worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  		worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  		worksheet.Cells [1' i + 1].Style.Font.Bold = true;  	}  	int row = 2;  	foreach (var customer in customers) {  		int col = 1;  		worksheet.Cells [row' col].Value = customer.Id;  		col++;  		worksheet.Cells [row' col].Value = customer.FullName;  		col++;  		worksheet.Cells [row' col].Value = customer.UserName;  		col++;  		worksheet.Cells [row' col].Value = customer.Points;  		col++;  		worksheet.Cells [row' col].Value = customer.CardType != null ? customer.CardType.Name : "";  		col++;  		worksheet.Cells [row' col].Value = GetDateString (customer.CreatedOnUtc);  		col++;  		worksheet.Cells [row' col].Value = GetDateString (customer.UpdatedOnUtc);  		col++;  		worksheet.Cells [row' col].Value = GetDateString (customer.LastActivityDateUtc);  		col++;  		worksheet.Cells [row' col].Value = customer.LastLoginDateUtc == null ? string.Empty : GetDateString (customer.LastLoginDateUtc.Value);  		row++;  	}  	// save the new spreadsheet  	xlPackage.Save ();  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportCustomersToXlsx,The following statement contains a magic number: using (var xlPackage = new ExcelPackage (stream)) {  	var worksheet = xlPackage.Workbook.Worksheets.Add ("Customers");  	//Create Headers and format them  	var properties = new string[] {  		"CustomerId"'  		"FullName"'  		"Username"'  		"Points"'  		"CardType"'  		"CreatedOnUtc"'  		"UpdatedOnUtc"'  		"LastActivityDateUtc"'  		"LastLoginDateUtc"  	};  	for (int i = 0; i < properties.Length; i++) {  		worksheet.Cells [1' i + 1].Value = properties [i];  		worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  		worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  		worksheet.Cells [1' i + 1].Style.Font.Bold = true;  	}  	int row = 2;  	foreach (var customer in customers) {  		int col = 1;  		worksheet.Cells [row' col].Value = customer.Id;  		col++;  		worksheet.Cells [row' col].Value = customer.FullName;  		col++;  		worksheet.Cells [row' col].Value = customer.UserName;  		col++;  		worksheet.Cells [row' col].Value = customer.Points;  		col++;  		worksheet.Cells [row' col].Value = customer.CardType != null ? customer.CardType.Name : "";  		col++;  		worksheet.Cells [row' col].Value = GetDateString (customer.CreatedOnUtc);  		col++;  		worksheet.Cells [row' col].Value = GetDateString (customer.UpdatedOnUtc);  		col++;  		worksheet.Cells [row' col].Value = GetDateString (customer.LastActivityDateUtc);  		col++;  		worksheet.Cells [row' col].Value = customer.LastLoginDateUtc == null ? string.Empty : GetDateString (customer.LastLoginDateUtc.Value);  		row++;  	}  	// save the new spreadsheet  	xlPackage.Save ();  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportCustomersToXlsx,The following statement contains a magic number: for (int i = 0; i < properties.Length; i++) {  	worksheet.Cells [1' i + 1].Value = properties [i];  	worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  	worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  	worksheet.Cells [1' i + 1].Style.Font.Bold = true;  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportCustomersToXlsx,The following statement contains a magic number: for (int i = 0; i < properties.Length; i++) {  	worksheet.Cells [1' i + 1].Value = properties [i];  	worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  	worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  	worksheet.Cells [1' i + 1].Style.Font.Bold = true;  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportCustomersToXlsx,The following statement contains a magic number: for (int i = 0; i < properties.Length; i++) {  	worksheet.Cells [1' i + 1].Value = properties [i];  	worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  	worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  	worksheet.Cells [1' i + 1].Style.Font.Bold = true;  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportCustomersToXlsx,The following statement contains a magic number: worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportCustomersToXlsx,The following statement contains a magic number: worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportCustomersToXlsx,The following statement contains a magic number: worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportDepositTransactionsToXlsx,The following statement contains a magic number: using (var xlPackage = new ExcelPackage (stream)) {  	var worksheet = xlPackage.Workbook.Worksheets.Add ("Transactions");  	//Create Headers and format them  	var properties = new string[] {  		"Customer Name"'  		"Deposit Amount"'  		"Points"'  		"Exchange Rate"'  		"Created On"  	};  	for (int i = 0; i < properties.Length; i++) {  		worksheet.Cells [1' i + 1].Value = properties [i];  		worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  		worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  		worksheet.Cells [1' i + 1].Style.Font.Bold = true;  	}  	int row = 2;  	foreach (var transaction in transactions) {  		int col = 1;  		worksheet.Cells [row' col].Value = transaction.Customer != null ? transaction.Customer.UserName : "";  		col++;  		worksheet.Cells [row' col].Value = transaction.Amount;  		col++;  		worksheet.Cells [row' col].Value = transaction.Points;  		col++;  		worksheet.Cells [row' col].Value = transaction.ExchangeRate;  		col++;  		worksheet.Cells [row' col].Value = GetDateString (transaction.CreatedOnUtc);  		row++;  	}  	// save the new spreadsheet  	xlPackage.Save ();  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportDepositTransactionsToXlsx,The following statement contains a magic number: using (var xlPackage = new ExcelPackage (stream)) {  	var worksheet = xlPackage.Workbook.Worksheets.Add ("Transactions");  	//Create Headers and format them  	var properties = new string[] {  		"Customer Name"'  		"Deposit Amount"'  		"Points"'  		"Exchange Rate"'  		"Created On"  	};  	for (int i = 0; i < properties.Length; i++) {  		worksheet.Cells [1' i + 1].Value = properties [i];  		worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  		worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  		worksheet.Cells [1' i + 1].Style.Font.Bold = true;  	}  	int row = 2;  	foreach (var transaction in transactions) {  		int col = 1;  		worksheet.Cells [row' col].Value = transaction.Customer != null ? transaction.Customer.UserName : "";  		col++;  		worksheet.Cells [row' col].Value = transaction.Amount;  		col++;  		worksheet.Cells [row' col].Value = transaction.Points;  		col++;  		worksheet.Cells [row' col].Value = transaction.ExchangeRate;  		col++;  		worksheet.Cells [row' col].Value = GetDateString (transaction.CreatedOnUtc);  		row++;  	}  	// save the new spreadsheet  	xlPackage.Save ();  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportDepositTransactionsToXlsx,The following statement contains a magic number: using (var xlPackage = new ExcelPackage (stream)) {  	var worksheet = xlPackage.Workbook.Worksheets.Add ("Transactions");  	//Create Headers and format them  	var properties = new string[] {  		"Customer Name"'  		"Deposit Amount"'  		"Points"'  		"Exchange Rate"'  		"Created On"  	};  	for (int i = 0; i < properties.Length; i++) {  		worksheet.Cells [1' i + 1].Value = properties [i];  		worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  		worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  		worksheet.Cells [1' i + 1].Style.Font.Bold = true;  	}  	int row = 2;  	foreach (var transaction in transactions) {  		int col = 1;  		worksheet.Cells [row' col].Value = transaction.Customer != null ? transaction.Customer.UserName : "";  		col++;  		worksheet.Cells [row' col].Value = transaction.Amount;  		col++;  		worksheet.Cells [row' col].Value = transaction.Points;  		col++;  		worksheet.Cells [row' col].Value = transaction.ExchangeRate;  		col++;  		worksheet.Cells [row' col].Value = GetDateString (transaction.CreatedOnUtc);  		row++;  	}  	// save the new spreadsheet  	xlPackage.Save ();  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportDepositTransactionsToXlsx,The following statement contains a magic number: using (var xlPackage = new ExcelPackage (stream)) {  	var worksheet = xlPackage.Workbook.Worksheets.Add ("Transactions");  	//Create Headers and format them  	var properties = new string[] {  		"Customer Name"'  		"Deposit Amount"'  		"Points"'  		"Exchange Rate"'  		"Created On"  	};  	for (int i = 0; i < properties.Length; i++) {  		worksheet.Cells [1' i + 1].Value = properties [i];  		worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  		worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  		worksheet.Cells [1' i + 1].Style.Font.Bold = true;  	}  	int row = 2;  	foreach (var transaction in transactions) {  		int col = 1;  		worksheet.Cells [row' col].Value = transaction.Customer != null ? transaction.Customer.UserName : "";  		col++;  		worksheet.Cells [row' col].Value = transaction.Amount;  		col++;  		worksheet.Cells [row' col].Value = transaction.Points;  		col++;  		worksheet.Cells [row' col].Value = transaction.ExchangeRate;  		col++;  		worksheet.Cells [row' col].Value = GetDateString (transaction.CreatedOnUtc);  		row++;  	}  	// save the new spreadsheet  	xlPackage.Save ();  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportDepositTransactionsToXlsx,The following statement contains a magic number: for (int i = 0; i < properties.Length; i++) {  	worksheet.Cells [1' i + 1].Value = properties [i];  	worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  	worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  	worksheet.Cells [1' i + 1].Style.Font.Bold = true;  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportDepositTransactionsToXlsx,The following statement contains a magic number: for (int i = 0; i < properties.Length; i++) {  	worksheet.Cells [1' i + 1].Value = properties [i];  	worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  	worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  	worksheet.Cells [1' i + 1].Style.Font.Bold = true;  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportDepositTransactionsToXlsx,The following statement contains a magic number: for (int i = 0; i < properties.Length; i++) {  	worksheet.Cells [1' i + 1].Value = properties [i];  	worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  	worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  	worksheet.Cells [1' i + 1].Style.Font.Bold = true;  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportDepositTransactionsToXlsx,The following statement contains a magic number: worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportDepositTransactionsToXlsx,The following statement contains a magic number: worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportDepositTransactionsToXlsx,The following statement contains a magic number: worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportWithdrawTransactionsToXlsx,The following statement contains a magic number: using (var xlPackage = new ExcelPackage (stream)) {  	var worksheet = xlPackage.Workbook.Worksheets.Add ("WithdrawTransactions");  	//Create Headers and format them  	var properties = new string[] {  		"Customer Name"'  		"Points"'  		"Reason"'  		"Created On"  	};  	for (int i = 0; i < properties.Length; i++) {  		worksheet.Cells [1' i + 1].Value = properties [i];  		worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  		worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  		worksheet.Cells [1' i + 1].Style.Font.Bold = true;  	}  	int row = 2;  	foreach (var transaction in transactions) {  		int col = 1;  		worksheet.Cells [row' col].Value = transaction.Customer != null ? transaction.Customer.UserName : "";  		col++;  		worksheet.Cells [row' col].Value = transaction.Points;  		col++;  		worksheet.Cells [row' col].Value = transaction.Reason;  		col++;  		worksheet.Cells [row' col].Value = GetDateString (transaction.CreatedOnUtc);  		row++;  	}  	// save the new spreadsheet  	xlPackage.Save ();  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportWithdrawTransactionsToXlsx,The following statement contains a magic number: using (var xlPackage = new ExcelPackage (stream)) {  	var worksheet = xlPackage.Workbook.Worksheets.Add ("WithdrawTransactions");  	//Create Headers and format them  	var properties = new string[] {  		"Customer Name"'  		"Points"'  		"Reason"'  		"Created On"  	};  	for (int i = 0; i < properties.Length; i++) {  		worksheet.Cells [1' i + 1].Value = properties [i];  		worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  		worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  		worksheet.Cells [1' i + 1].Style.Font.Bold = true;  	}  	int row = 2;  	foreach (var transaction in transactions) {  		int col = 1;  		worksheet.Cells [row' col].Value = transaction.Customer != null ? transaction.Customer.UserName : "";  		col++;  		worksheet.Cells [row' col].Value = transaction.Points;  		col++;  		worksheet.Cells [row' col].Value = transaction.Reason;  		col++;  		worksheet.Cells [row' col].Value = GetDateString (transaction.CreatedOnUtc);  		row++;  	}  	// save the new spreadsheet  	xlPackage.Save ();  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportWithdrawTransactionsToXlsx,The following statement contains a magic number: using (var xlPackage = new ExcelPackage (stream)) {  	var worksheet = xlPackage.Workbook.Worksheets.Add ("WithdrawTransactions");  	//Create Headers and format them  	var properties = new string[] {  		"Customer Name"'  		"Points"'  		"Reason"'  		"Created On"  	};  	for (int i = 0; i < properties.Length; i++) {  		worksheet.Cells [1' i + 1].Value = properties [i];  		worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  		worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  		worksheet.Cells [1' i + 1].Style.Font.Bold = true;  	}  	int row = 2;  	foreach (var transaction in transactions) {  		int col = 1;  		worksheet.Cells [row' col].Value = transaction.Customer != null ? transaction.Customer.UserName : "";  		col++;  		worksheet.Cells [row' col].Value = transaction.Points;  		col++;  		worksheet.Cells [row' col].Value = transaction.Reason;  		col++;  		worksheet.Cells [row' col].Value = GetDateString (transaction.CreatedOnUtc);  		row++;  	}  	// save the new spreadsheet  	xlPackage.Save ();  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportWithdrawTransactionsToXlsx,The following statement contains a magic number: using (var xlPackage = new ExcelPackage (stream)) {  	var worksheet = xlPackage.Workbook.Worksheets.Add ("WithdrawTransactions");  	//Create Headers and format them  	var properties = new string[] {  		"Customer Name"'  		"Points"'  		"Reason"'  		"Created On"  	};  	for (int i = 0; i < properties.Length; i++) {  		worksheet.Cells [1' i + 1].Value = properties [i];  		worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  		worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  		worksheet.Cells [1' i + 1].Style.Font.Bold = true;  	}  	int row = 2;  	foreach (var transaction in transactions) {  		int col = 1;  		worksheet.Cells [row' col].Value = transaction.Customer != null ? transaction.Customer.UserName : "";  		col++;  		worksheet.Cells [row' col].Value = transaction.Points;  		col++;  		worksheet.Cells [row' col].Value = transaction.Reason;  		col++;  		worksheet.Cells [row' col].Value = GetDateString (transaction.CreatedOnUtc);  		row++;  	}  	// save the new spreadsheet  	xlPackage.Save ();  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportWithdrawTransactionsToXlsx,The following statement contains a magic number: for (int i = 0; i < properties.Length; i++) {  	worksheet.Cells [1' i + 1].Value = properties [i];  	worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  	worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  	worksheet.Cells [1' i + 1].Style.Font.Bold = true;  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportWithdrawTransactionsToXlsx,The following statement contains a magic number: for (int i = 0; i < properties.Length; i++) {  	worksheet.Cells [1' i + 1].Value = properties [i];  	worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  	worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  	worksheet.Cells [1' i + 1].Style.Font.Bold = true;  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportWithdrawTransactionsToXlsx,The following statement contains a magic number: for (int i = 0; i < properties.Length; i++) {  	worksheet.Cells [1' i + 1].Value = properties [i];  	worksheet.Cells [1' i + 1].Style.Fill.PatternType = ExcelFillStyle.Solid;  	worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  	worksheet.Cells [1' i + 1].Style.Font.Bold = true;  }  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportWithdrawTransactionsToXlsx,The following statement contains a magic number: worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportWithdrawTransactionsToXlsx,The following statement contains a magic number: worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  
Magic Number,Tmc.BLL.Impl.ImportExport,ExportService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\ImportExport\ExportService.cs,ExportWithdrawTransactionsToXlsx,The following statement contains a magic number: worksheet.Cells [1' i + 1].Style.Fill.BackgroundColor.SetColor (Color.FromArgb (184' 204' 228));  
Magic Number,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,EncryptString,The following statement contains a magic number: using (var encryptionProvider = new TripleDESCryptoServiceProvider ()) {  	encryptionProvider.Key = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (0' 16));  	encryptionProvider.IV = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (8' 8));  	var encryptor = encryptionProvider.CreateEncryptor ();  	using (var ms = new MemoryStream ()) {  		using (var cs = new CryptoStream (ms' encryptor' CryptoStreamMode.Write)) {  			byte[] data = new UnicodeEncoding ().GetBytes (plainText);  			cs.Write (data' 0' data.Length);  			cs.FlushFinalBlock ();  		}  		encryptedData = ms.ToArray ();  	}  }  
Magic Number,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,EncryptString,The following statement contains a magic number: using (var encryptionProvider = new TripleDESCryptoServiceProvider ()) {  	encryptionProvider.Key = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (0' 16));  	encryptionProvider.IV = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (8' 8));  	var encryptor = encryptionProvider.CreateEncryptor ();  	using (var ms = new MemoryStream ()) {  		using (var cs = new CryptoStream (ms' encryptor' CryptoStreamMode.Write)) {  			byte[] data = new UnicodeEncoding ().GetBytes (plainText);  			cs.Write (data' 0' data.Length);  			cs.FlushFinalBlock ();  		}  		encryptedData = ms.ToArray ();  	}  }  
Magic Number,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,EncryptString,The following statement contains a magic number: using (var encryptionProvider = new TripleDESCryptoServiceProvider ()) {  	encryptionProvider.Key = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (0' 16));  	encryptionProvider.IV = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (8' 8));  	var encryptor = encryptionProvider.CreateEncryptor ();  	using (var ms = new MemoryStream ()) {  		using (var cs = new CryptoStream (ms' encryptor' CryptoStreamMode.Write)) {  			byte[] data = new UnicodeEncoding ().GetBytes (plainText);  			cs.Write (data' 0' data.Length);  			cs.FlushFinalBlock ();  		}  		encryptedData = ms.ToArray ();  	}  }  
Magic Number,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,EncryptString,The following statement contains a magic number: encryptionProvider.Key = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (0' 16));  
Magic Number,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,EncryptString,The following statement contains a magic number: encryptionProvider.IV = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (8' 8));  
Magic Number,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,EncryptString,The following statement contains a magic number: encryptionProvider.IV = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (8' 8));  
Magic Number,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,DecryptString,The following statement contains a magic number: using (var encryptionProvider = new TripleDESCryptoServiceProvider ()) {  	encryptionProvider.Key = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (0' 16));  	encryptionProvider.IV = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (8' 8));  	var decryptor = encryptionProvider.CreateDecryptor ();  	using (var ms = new MemoryStream ()) {  		using (var cs = new CryptoStream (ms' decryptor' CryptoStreamMode.Read)) {  			var sr = new StreamReader (cs' new UnicodeEncoding ());  			return sr.ReadLine ();  		}  	}  }  
Magic Number,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,DecryptString,The following statement contains a magic number: using (var encryptionProvider = new TripleDESCryptoServiceProvider ()) {  	encryptionProvider.Key = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (0' 16));  	encryptionProvider.IV = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (8' 8));  	var decryptor = encryptionProvider.CreateDecryptor ();  	using (var ms = new MemoryStream ()) {  		using (var cs = new CryptoStream (ms' decryptor' CryptoStreamMode.Read)) {  			var sr = new StreamReader (cs' new UnicodeEncoding ());  			return sr.ReadLine ();  		}  	}  }  
Magic Number,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,DecryptString,The following statement contains a magic number: using (var encryptionProvider = new TripleDESCryptoServiceProvider ()) {  	encryptionProvider.Key = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (0' 16));  	encryptionProvider.IV = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (8' 8));  	var decryptor = encryptionProvider.CreateDecryptor ();  	using (var ms = new MemoryStream ()) {  		using (var cs = new CryptoStream (ms' decryptor' CryptoStreamMode.Read)) {  			var sr = new StreamReader (cs' new UnicodeEncoding ());  			return sr.ReadLine ();  		}  	}  }  
Magic Number,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,DecryptString,The following statement contains a magic number: encryptionProvider.Key = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (0' 16));  
Magic Number,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,DecryptString,The following statement contains a magic number: encryptionProvider.IV = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (8' 8));  
Magic Number,Tmc.BLL.Impl.Security,EncryptionService,C:\repos\festelariane_TmcManagementSolution\Tmc.BLL.Impl\Security\EncryptionService.cs,DecryptString,The following statement contains a magic number: encryptionProvider.IV = new ASCIIEncoding ().GetBytes (encryptionPrivateKey.Substring (8' 8));  
