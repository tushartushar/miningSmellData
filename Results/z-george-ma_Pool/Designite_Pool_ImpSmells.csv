Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Pool,Pool,C:\repos\z-george-ma_Pool\Pool\Pool.cs,GetFromWaitingList,The following statement contains a magic number: lock (getFromWaitingListLock) {  	T result;  	if (pool.TryTake (out result))  		return result;  	getWaitCancellationTokenSource = new CancellationTokenSource ();  	var tasks = taskList.GetAllTasks ();  	int idx = Task.WaitAny (new[] {  		Task.Factory.StartNew (() =>  {  			autoResetEvent.WaitOne (1000);  		})  	}.Concat (tasks).ToArray ()' getWaitCancellationTokenSource.Token);  	while (idx == 0) {  		if (pool.TryTake (out result))  			return result;  		idx = Task.WaitAny (new[] {  			Task.Factory.StartNew (() =>  {  				autoResetEvent.WaitOne (1000);  			})  		}.Concat (tasks).ToArray ()' getWaitCancellationTokenSource.Token);  	}  	var task = tasks [--idx] as Task<T>;  	taskList.RemoveTaskAt (idx);  	if (task.IsCompleted) {  		if (task.Exception != null)  			throw task.Exception;  		result = task.Result;  		return result;  	}  	throw new TaskCanceledException ();  }  
Magic Number,Pool,Pool,C:\repos\z-george-ma_Pool\Pool\Pool.cs,GetFromWaitingList,The following statement contains a magic number: lock (getFromWaitingListLock) {  	T result;  	if (pool.TryTake (out result))  		return result;  	getWaitCancellationTokenSource = new CancellationTokenSource ();  	var tasks = taskList.GetAllTasks ();  	int idx = Task.WaitAny (new[] {  		Task.Factory.StartNew (() =>  {  			autoResetEvent.WaitOne (1000);  		})  	}.Concat (tasks).ToArray ()' getWaitCancellationTokenSource.Token);  	while (idx == 0) {  		if (pool.TryTake (out result))  			return result;  		idx = Task.WaitAny (new[] {  			Task.Factory.StartNew (() =>  {  				autoResetEvent.WaitOne (1000);  			})  		}.Concat (tasks).ToArray ()' getWaitCancellationTokenSource.Token);  	}  	var task = tasks [--idx] as Task<T>;  	taskList.RemoveTaskAt (idx);  	if (task.IsCompleted) {  		if (task.Exception != null)  			throw task.Exception;  		result = task.Result;  		return result;  	}  	throw new TaskCanceledException ();  }  
Magic Number,Pool,Pool,C:\repos\z-george-ma_Pool\Pool\Pool.cs,GetFromWaitingList,The following statement contains a magic number: autoResetEvent.WaitOne (1000);  
Magic Number,Pool,Pool,C:\repos\z-george-ma_Pool\Pool\Pool.cs,GetFromWaitingList,The following statement contains a magic number: while (idx == 0) {  	if (pool.TryTake (out result))  		return result;  	idx = Task.WaitAny (new[] {  		Task.Factory.StartNew (() =>  {  			autoResetEvent.WaitOne (1000);  		})  	}.Concat (tasks).ToArray ()' getWaitCancellationTokenSource.Token);  }  
Magic Number,Pool,Pool,C:\repos\z-george-ma_Pool\Pool\Pool.cs,GetFromWaitingList,The following statement contains a magic number: idx = Task.WaitAny (new[] {  	Task.Factory.StartNew (() =>  {  		autoResetEvent.WaitOne (1000);  	})  }.Concat (tasks).ToArray ()' getWaitCancellationTokenSource.Token);  
Magic Number,Pool,Pool,C:\repos\z-george-ma_Pool\Pool\Pool.cs,GetFromWaitingList,The following statement contains a magic number: autoResetEvent.WaitOne (1000);  
