Implementation smell,Namespace,Class,File,Method,Description
Long Method,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The method has 131 lines of code.
Complex Method,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,reconnectNetworkCallback,Cyclomatic complexity of the method is 23
Complex Method,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminatePendingWebRequest,Cyclomatic complexity of the method is 8
Complex Method,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,decodeDecryptLoop,Cyclomatic complexity of the method is 8
Complex Method,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,responseToConnectCallback,Cyclomatic complexity of the method is 11
Complex Method,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,urlRequestCommonExceptionHandler,Cyclomatic complexity of the method is 8
Complex Method,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,responseToUserCallback,Cyclomatic complexity of the method is 39
Complex Method,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,WrapResultBasedOnResponseType,Cyclomatic complexity of the method is 34
Complex Method,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,Cyclomatic complexity of the method is 20
Long Parameter List,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,init,The method has 5 parameters.
Long Parameter List,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,reconnectNetworkCallback,The method has 5 parameters.
Long Parameter List,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Pubnub,The method has 5 parameters.
Long Parameter List,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,detailedHistory,The method has 6 parameters.
Long Parameter List,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,detailedHistory,The method has 6 parameters.
Long Parameter List,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,resetInternetCheckSettings,The method has 5 parameters.
Long Parameter List,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_subscribe,The method has 7 parameters.
Long Parameter List,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_presence,The method has 6 parameters.
Long Parameter List,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The method has 17 parameters.
Long Parameter List,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,buildDetailedHistoryRequest,The method has 5 parameters.
Long Parameter List,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,WrapResultBasedOnResponseType,The method has 8 parameters.
Long Parameter List,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,FF,The method has 7 parameters.
Long Parameter List,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,GG,The method has 7 parameters.
Long Parameter List,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HH,The method has 7 parameters.
Long Parameter List,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,II,The method has 7 parameters.
Long Parameter List,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The method has 5 parameters.
Long Parameter List,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The method has 5 parameters.
Long Parameter List,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TransformBlock,The method has 5 parameters.
Long Statement,EducationPathways.Achievements,Program,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Program.cs,Main,The length of the statement  "	var settings = InfrastructureSettings.Read (Path.Combine (Path.GetDirectoryName (Assembly.GetExecutingAssembly ().CodeBase)' "Settings.xml")); " is 142.
Long Statement,EducationPathways.Achievements,Program,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Program.cs,Main,The length of the statement  "	var eventProcessor = new EventProcessor (new SubscriptionReceiver (settings.ServiceBus' "AssesmentTopic"' "AssesmentSubscription"' false)' new JsonTextSerializer ()); " is 166.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,reconnectNetwork,The length of the statement  "	System.Threading.Timer timer = new Timer (new TimerCallback (reconnectNetworkCallback<T>)' netState' 0' PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000); " is 153.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,reconnectNetworkCallback,The length of the statement  "			if (_channelInternetStatus.ContainsKey (netState.channel) && (netState.type == ResponseType.Subscribe || netState.type == ResponseType.Presence)) { " is 147.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,reconnectNetworkCallback,The length of the statement  "					LoggingMethod.WriteToLog (string.Format ("DateTime {0}' {1} {2} reconnectNetworkCallback. Retry {3} of {4}"' DateTime.Now.ToString ()' netState.channel' netState.type' _channelInternetRetry [netState.channel]' PUBNUB_NETWORK_CHECK_RETRIES)' LoggingMethod.LevelInfo); " is 266.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,reconnectNetworkCallback,The length of the statement  "				LoggingMethod.WriteToLog (string.Format ("DateTime {0}' {1} {2} reconnectNetworkCallback. Internet Available : {3}"' DateTime.Now.ToString ()' netState.channel' netState.type' _channelInternetStatus [netState.channel])' LoggingMethod.LevelInfo); " is 245.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,reconnectNetworkCallback,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Unknown request state in reconnectNetworkCallback"' DateTime.Now.ToString ())' LoggingMethod.LevelError); " is 161.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,reconnectNetworkCallback,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0} method:reconnectNetworkCallback \n Exception Details={1}"' DateTime.Now.ToString ()' ex.ToString ())' LoggingMethod.LevelError); " is 183.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,initiatePowerModeCheck,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Initiated System Event - PowerModeChanged."' DateTime.Now.ToString ())' LoggingMethod.LevelInfo); " is 153.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,initiatePowerModeCheck,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0} No support for System Event - PowerModeChanged."' DateTime.Now.ToString ())' LoggingMethod.LevelError); " is 158.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,initiatePowerModeCheck,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0} {1}"' DateTime.Now.ToString ()' ex.ToString ())' LoggingMethod.LevelError); " is 130.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' System entered into Suspend Mode."' DateTime.Now.ToString ())' LoggingMethod.LevelInfo); " is 144.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Disabled Timer for heartbeat "' DateTime.Now.ToString ())' LoggingMethod.LevelInfo); " is 140.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The length of the statement  "			heartBeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000); " is 233.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' System entered into Resume/Awake Mode."' DateTime.Now.ToString ())' LoggingMethod.LevelInfo); " is 149.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Enabled Timer for heartbeat "' DateTime.Now.ToString ())' LoggingMethod.LevelInfo); " is 139.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminatePendingWebRequest,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminatePendingWebRequest {1}"' DateTime.Now.ToString ()' state.request.RequestUri.ToString ())' LoggingMethod.LevelInfo); " is 178.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminatePendingWebRequest,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0} Unable to remove web request from dictionary in TerminatePendingWebRequest for channel= {1}"' DateTime.Now.ToString ()' state.channel)' LoggingMethod.LevelError); " is 217.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminatePendingWebRequest,The length of the statement  "					LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminatePendingWebRequest {1}"' DateTime.Now.ToString ()' currReq.request.RequestUri.ToString ())' LoggingMethod.LevelInfo); " is 180.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminatePendingWebRequest,The length of the statement  "					LoggingMethod.WriteToLog (string.Format ("DateTime {0} Unable to remove web request from dictionary in TerminatePendingWebRequest for channel= {1}"' DateTime.Now.ToString ()' key)' LoggingMethod.LevelError); " is 207.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,publish,The length of the statement  "	if (string.IsNullOrEmpty (this.PUBLISH_KEY) || string.IsNullOrEmpty (this.PUBLISH_KEY.Trim ()) || this.PUBLISH_KEY.Length <= 0) { " is 129.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,decodeMsg,The length of the statement  "	if (type == ResponseType.Presence || type == ResponseType.Publish || type == ResponseType.Time || type == ResponseType.Here_Now || type == ResponseType.Leave) { " is 160.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,decodeDecryptLoop,The length of the statement  "				object decodeMsg = (decryptMsg == "**DECRYPT ERROR**") ? decryptMsg : JsonConvert.DeserializeObject<object> (decryptMsg); " is 121.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,subscribeInit,The length of the statement  "	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' requested subscribe for channel={1}"' DateTime.Now.ToString ()' channel)' LoggingMethod.LevelInfo); " is 155.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,subscribeInit,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON subscribe response={1}"' DateTime.Now.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 150.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,OnPubnubWebRequestTimeout,The length of the statement  "				LoggingMethod.WriteToLog (string.Format ("DateTime: {0}' OnPubnubWebRequestTimeout: client request timeout reached.Request aborted for channel = {1}"' DateTime.Now.ToString ()' currentState.channel)' LoggingMethod.LevelInfo); " is 225.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,OnPubnubWebRequestTimeout,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime: {0}' OnPubnubWebRequestTimeout: client request timeout reached. However state is unknown"' DateTime.Now.ToString ())' LoggingMethod.LevelError); " is 196.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,OnPubnubHeartBeatTimeoutCallback,The length of the statement  "	LoggingMethod.WriteToLog (string.Format ("DateTime: {0}' **OnPubnubHeartBeatTimeoutCallback**"' DateTime.Now.ToString ())' LoggingMethod.LevelVerbose); " is 151.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,OnPubnubHeartBeatTimeoutCallback,The length of the statement  "		if (_channelInternetStatus.ContainsKey (currentState.channel) && (currentState.type == ResponseType.Subscribe || currentState.type == ResponseType.Presence) && OVERRIDE_TCP_KEEP_ALIVE) { " is 186.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,OnPubnubHeartBeatTimeoutCallback,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime: {0}' OnPubnubHeartBeatTimeoutCallback - Internet connection = {1}"' DateTime.Now.ToString ()' networkConnection)' LoggingMethod.LevelVerbose); " is 194.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,subscribeInternalCallback,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Lost Channel Name for resubscribe"' DateTime.Now.ToString ())' LoggingMethod.LevelError); " is 145.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,subscribeInternalCallback,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Due to Unsubscribe' further re-subscription was stopped for channel {1}"' DateTime.Now.ToString ()' channelName.ToString ())' LoggingMethod.LevelInfo); " is 207.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presenceInternalCallback,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Lost Channel Name for re-presence"' DateTime.Now.ToString ())' LoggingMethod.LevelError); " is 145.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,unsubscribe,The length of the statement  "	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' requested unsubscribe for channel={1}"' DateTime.Now.ToString ()' channel)' LoggingMethod.LevelInfo); " is 157.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,unsubscribe,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON unsubscribe response={1}"' DateTime.Now.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 152.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,unsubscribe,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON unsubscribe response={1}"' DateTime.Now.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 152.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_subscribe,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Due to Unsubscribe' further subscription was stopped for channel {1}"' DateTime.Now.ToString ()' channel.ToString ())' LoggingMethod.LevelInfo); " is 200.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_subscribe,The length of the statement  "	_channelSubscription.AddOrUpdate (channel' Convert.ToInt64 (timetoken.ToString ())' (key' oldValue) => Convert.ToInt64 (timetoken.ToString ())); " is 144.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_subscribe,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Subscribe channel={1} - No internet connection. MAXed retries for internet "' DateTime.Now.ToString ()' channel)' LoggingMethod.LevelInfo); " is 195.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_subscribe,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Subscribe - No internet connection for {1}"' DateTime.Now.ToString ()' channel)' LoggingMethod.LevelInfo); " is 162.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_subscribe,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0} method:_subscribe \n channel={1} \n timetoken={2} \n Exception Details={3}"' DateTime.Now.ToString ()' channel' timetoken.ToString ()' ex.ToString ())' LoggingMethod.LevelError); " is 233.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presence,The length of the statement  "	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' requested presence for channel={1}"' DateTime.Now.ToString ()' channel)' LoggingMethod.LevelInfo); " is 154.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presence,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON presence response={1}"' DateTime.Now.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 149.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_presence,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Due to Presence-unsubscribe' further presence was stopped for channel {1}"' DateTime.Now.ToString ()' channel.ToString ())' LoggingMethod.LevelInfo); " is 205.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_presence,The length of the statement  "	_channelPresence.AddOrUpdate (channel' Convert.ToInt64 (timetoken.ToString ())' (key' oldValue) => Convert.ToInt64 (timetoken.ToString ())); " is 140.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_presence,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Presence channel={1} - No internet connection. MAXed retries for internet "' DateTime.Now.ToString ()' channel)' LoggingMethod.LevelInfo); " is 194.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_presence,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Presence - No internet connection for {1}"' DateTime.Now.ToString ()' channel)' LoggingMethod.LevelInfo); " is 161.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_presence,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("method:_presence \n channel={0} \n timetoken={1} \n Exception Details={2}"' channel' timetoken.ToString ()' ex.ToString ())' LoggingMethod.LevelError); " is 193.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presence_unsubscribe,The length of the statement  "	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' requested presence-unsubscribe for channel={1}"' DateTime.Now.ToString ()' channel)' LoggingMethod.LevelInfo); " is 166.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presence_unsubscribe,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON presence-unsubscribe response={1}"' DateTime.Now.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 161.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presence_unsubscribe,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON presence-unsubscribe response={1}"' DateTime.Now.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 161.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "		if ((!_channelSubscription.ContainsKey (channelName) && type == ResponseType.Subscribe) || (!_channelPresence.ContainsKey (channelName) && type == ResponseType.Presence)) { " is 172.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Due to Unsubscribe' request aborted for channel={1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo); " is 175.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "			heartBeatTimer = new System.Threading.Timer (new TimerCallback (OnPubnubHeartBeatTimeoutCallback)' pubnubRequestState' 0' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? Timeout.Infinite : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000); " is 241.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Request={1}"' DateTime.Now.ToString ()' requestUri.ToString ())' LoggingMethod.LevelInfo); " is 146.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "							LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON for channel={1} ({2}) ={3}"' DateTime.Now.ToString ()' channelName' type.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 185.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "					LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Request aborted for channel={1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo); " is 155.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "				LoggingMethod.WriteToLog (string.Format ("DateTime {0}' WebException: {1} for URL: {2}"' DateTime.Now.ToString ()' webEx.ToString ()' requestUri.ToString ())' LoggingMethod.LevelError); " is 185.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "					LoggingMethod.WriteToLog (string.Format ("DateTime {0}' _urlRequest - Internet connection problem"' DateTime.Now.ToString ())' LoggingMethod.LevelError); " is 153.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "					if (_channelInternetStatus.ContainsKey (channelName) && (type == ResponseType.Subscribe || type == ResponseType.Presence)) { " is 124.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "							LoggingMethod.WriteToLog (string.Format ("DateTime {0} {1} channel = {2} _urlRequest - Internet connection retry {3} of {4}"' DateTime.Now.ToString ()' type' channelName' _channelInternetRetry [channelName]' PUBNUB_NETWORK_CHECK_RETRIES)' LoggingMethod.LevelInfo); " is 264.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "				LoggingMethod.WriteToLog (string.Format ("DateTime {0} Exception= {1} for URL: {2}"' DateTime.Now.ToString ()' ex.ToString ()' requestUri.ToString ())' LoggingMethod.LevelError); " is 178.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "		                Timer webRequestTimer = new Timer(OnPubnubWebRequestTimeout' pubnubRequestState' PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000' Timeout.Infinite);" is 150.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "		#                ThreadPool.RegisterWaitForSingleObject(asyncResult.AsyncWaitHandle' new WaitOrTimerCallback(OnPubnubWebRequestTimeout)' pubnubRequestState' PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000' true);" is 214.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0} Exception={1}"' DateTime.Now.ToString ()' ex.ToString ())' LoggingMethod.LevelError); " is 140.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateHeartbeatTimer,The length of the statement  "			requestHeatbeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000); " is 239.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateHeartbeatTimer,The length of the statement  "				LoggingMethod.WriteToLog (string.Format ("DateTime {0} Unable to remove heartbeat reference from collection for {1}"' DateTime.Now.ToString ()' requestUri.ToString ())' LoggingMethod.LevelInfo); " is 194.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateHeartbeatTimer,The length of the statement  "				LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminateHeartbeatTimer(null) - Unable to remove heartbeat reference from collection for {1}"' DateTime.Now.ToString ()' key.ToString ())' LoggingMethod.LevelInfo); " is 219.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateReconnectTimer,The length of the statement  "			channelReconnectTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000); " is 240.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateReconnectTimer,The length of the statement  "				LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminateReconnectTimer - Unable to remove reconnect timer reference from collection for {1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo); " is 215.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateReconnectTimer,The length of the statement  "				LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminateReconnectTimer(null) - Unable to remove reconnect timer reference from collection for {1}"' DateTime.Now.ToString ()' key.ToString ())' LoggingMethod.LevelInfo); " is 225.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,responseToConnectCallback,The length of the statement  "	if (connectCallback != null && _channelSubscription.ContainsKey (channelName) && _channelSubscription [channelName].Equals (0)) { " is 129.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,buildPublishRequest,The length of the statement  "		string_to_sign.Append (this.PUBLISH_KEY).Append ('/').Append (this.SUBSCRIBE_KEY).Append ('/').Append (this.SECRET_KEY).Append ('/').Append (channel).Append ('/').Append (msg); " is 176.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,OnPubnubWebRequestTimeout,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime: {0}' **WP7 OnPubnubWebRequestTimeout**"' DateTime.Now.ToString ())' LoggingMethod.LevelError); " is 146.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,removeChannelRequest,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0} Unable to remove request from dictionary for channel ={1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelError); " is 181.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,subscribeExceptionHandler,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' MAX retries reached. Exiting the subscribe for channel = {1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo); " is 184.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,subscribeExceptionHandler,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Subscribe JSON network error response={1}"' DateTime.Now.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 164.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presenceExceptionHandler,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' MAX retries reached. Exiting the presence for channel = {1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo); " is 183.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presenceExceptionHandler,The length of the statement  "		string jsonString = string.Format ("[0' \"Presence-unsubscribed after {0} failed retries\"]"' PUBNUB_NETWORK_CHECK_RETRIES); " is 124.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presenceExceptionHandler,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Presence JSON network error response={1}"' DateTime.Now.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 163.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,publishExceptionHandler,The length of the statement  "	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON publish response={1}"' DateTime.Now.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 148.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,hereNowExceptionHandler,The length of the statement  "	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON here_now response={1}"' DateTime.Now.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 149.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,detailedHistoryExceptionHandler,The length of the statement  "	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON detailedHistoryExceptionHandler response={1}"' DateTime.Now.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 172.
Long Statement,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,timeExceptionHandler,The length of the statement  "	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON timeExceptionHandler response={1}"' DateTime.Now.ToString ()' jsonString)' LoggingMethod.LevelInfo); " is 161.
Long Statement,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The length of the statement  "		output [i] = ((uint)input [j]) | (((uint)input [j + 1]) << 8) | (((uint)input [j + 2]) << 16) | (((uint)input [j + 3]) << 24); " is 126.
Long Statement,PubNub_Messaging,PubnubCrypto,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,EncryptOrDecrypt,The length of the statement  "			string strDecrypted = System.Text.Encoding.ASCII.GetString (decrypto.TransformFinalBlock (decryptedBytes' 0' decryptedBytes.Length)); " is 133.
Long Statement,PubNub_Messaging,PubnubCrypto,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,EncryptOrDecrypt,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0} Decrypt Error. {1}"' DateTime.Now.ToString ()' ex.ToString ())' LoggingMethod.LevelVerbose); " is 147.
Long Statement,PubNub_Messaging,ClientNetworkStatus,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,checkInternetStatus,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0} checkInternetStatus Error. {1}"' DateTime.Now.ToString ()' ex.ToString ())' LoggingMethod.LevelError); " is 157.
Long Statement,PubNub_Messaging,ClientNetworkStatus,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,checkSocketConnect,The length of the statement  "			LoggingMethod.WriteToLog (string.Format ("DateTime {0} checkInternetStatus LocalIP: {1}"' DateTime.Now.ToString ()' localAddr.ToString ())' LoggingMethod.LevelVerbose); " is 168.
Long Statement,PubNub_Messaging,ClientNetworkStatus,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,checkSocketConnect,The length of the statement  "		LoggingMethod.WriteToLog (string.Format ("DateTime {0} checkInternetStatus Error. {1}"' DateTime.Now.ToString ()' ex.ToString ())' LoggingMethod.LevelError); " is 157.
Complex Conditional,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,decodeMsg,The conditional expression  "type == ResponseType.Presence || type == ResponseType.Publish || type == ResponseType.Time || type == ResponseType.Here_Now || type == ResponseType.Leave"  is complex.
Complex Conditional,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,OnPubnubHeartBeatTimeoutCallback,The conditional expression  "_channelInternetStatus.ContainsKey (currentState.channel) && (currentState.type == ResponseType.Subscribe || currentState.type == ResponseType.Presence) && OVERRIDE_TCP_KEEP_ALIVE"  is complex.
Complex Conditional,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The conditional expression  "(!_channelSubscription.ContainsKey (channelName) && type == ResponseType.Subscribe) || (!_channelPresence.ContainsKey (channelName) && type == ResponseType.Presence)"  is complex.
Complex Conditional,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The conditional expression  "(webEx.Status == WebExceptionStatus.NameResolutionFailure //No network  || webEx.Status == WebExceptionStatus.ConnectFailure //Sending Keep-alive packet failed (No network)/Server is down.  || webEx.Status == WebExceptionStatus.ServerProtocolViolation //Problem with proxy or ISP  || webEx.Status == WebExceptionStatus.ProtocolError) && (!OVERRIDE_TCP_KEEP_ALIVE)"  is complex.
Virtual Method Call from Constructor,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,MD5,The constructor "MD5" calls a virtual method "Initialize".
Magic Number,EducationPathways.Achievements.AchievementHandlers,LinearAlgebra,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\AchievementHandlers\LinearAlgebra.cs,LinearAlgebra,The following statement contains a magic number: previousAnsweredTopics.Add (1002' null);  
Magic Number,EducationPathways.Achievements.AchievementHandlers,LinearAlgebra,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\AchievementHandlers\LinearAlgebra.cs,Handle,The following statement contains a magic number: if (@event.SubjectId == 1002) {  	if (!previousAnsweredTopics.ContainsKey (@event.TopicId)) {  		previousAnsweredTopics.Add (@event.TopicId' @event);  	}  	INode syllabus = new SampleData.SampleDataGenerator ().Generate ();  	INode linearAlgebraSubject = FindSubject (syllabus);  	var enumerable = Traverse (linearAlgebraSubject' node => node.NextNodes).ToList ();  	if (enumerable.Any (childTopics => !previousAnsweredTopics.ContainsKey (childTopics.Id))) {  		return;  	}  	Pubnub.publish<string> ("Achievements"' new Achievement {  		DateEarnt = DateTime.Now'  		Name = "Algebra Nerd"'  		Description = "Well Done' you have mastered Algebra!"  	}' result => Trace.WriteLine (result));  }  
Magic Number,EducationPathways.Achievements.AchievementHandlers,LinearAlgebra,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\AchievementHandlers\LinearAlgebra.cs,FindSubject,The following statement contains a magic number: return parentNode.NextNodes.Select (node => node.Id == 1002 ? node : FindSubject (node)).FirstOrDefault ();  
Magic Number,EducationPathways.Achievements.AchievementHandlers,Quickdraw,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\AchievementHandlers\Quickdraw.cs,Handle,The following statement contains a magic number: if (@event.CompletedDate.Subtract (@event.CompletedDate).TotalMilliseconds < 5000) {  	Pubnub.publish<string> ("Achievements"' new Achievement {  		DateEarnt = DateTime.Now'  		Name = "Quickdraw McGraw"'  		Description = "Well Done' you have erant the Quickdraw achievement by answering in under 5 seconds!!"  	}' result => Trace.WriteLine (result));  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The following statement contains a magic number: if (e.Mode == PowerModes.Suspend) {  	_pubnetSystemActive = false;  	TerminatePendingWebRequest ();  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		heartBeatTimer.Change (Timeout.Infinite' Timeout.Infinite);  	}  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' System entered into Suspend Mode."' DateTime.Now.ToString ())' LoggingMethod.LevelInfo);  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Disabled Timer for heartbeat "' DateTime.Now.ToString ())' LoggingMethod.LevelInfo);  	}  }  else if (e.Mode == PowerModes.Resume) {  	_pubnetSystemActive = true;  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		heartBeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  	}  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' System entered into Resume/Awake Mode."' DateTime.Now.ToString ())' LoggingMethod.LevelInfo);  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Enabled Timer for heartbeat "' DateTime.Now.ToString ())' LoggingMethod.LevelInfo);  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The following statement contains a magic number: if (e.Mode == PowerModes.Suspend) {  	_pubnetSystemActive = false;  	TerminatePendingWebRequest ();  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		heartBeatTimer.Change (Timeout.Infinite' Timeout.Infinite);  	}  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' System entered into Suspend Mode."' DateTime.Now.ToString ())' LoggingMethod.LevelInfo);  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Disabled Timer for heartbeat "' DateTime.Now.ToString ())' LoggingMethod.LevelInfo);  	}  }  else if (e.Mode == PowerModes.Resume) {  	_pubnetSystemActive = true;  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		heartBeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  	}  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' System entered into Resume/Awake Mode."' DateTime.Now.ToString ())' LoggingMethod.LevelInfo);  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Enabled Timer for heartbeat "' DateTime.Now.ToString ())' LoggingMethod.LevelInfo);  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The following statement contains a magic number: if (e.Mode == PowerModes.Resume) {  	_pubnetSystemActive = true;  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		heartBeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  	}  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' System entered into Resume/Awake Mode."' DateTime.Now.ToString ())' LoggingMethod.LevelInfo);  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Enabled Timer for heartbeat "' DateTime.Now.ToString ())' LoggingMethod.LevelInfo);  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The following statement contains a magic number: if (e.Mode == PowerModes.Resume) {  	_pubnetSystemActive = true;  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		heartBeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  	}  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' System entered into Resume/Awake Mode."' DateTime.Now.ToString ())' LoggingMethod.LevelInfo);  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Enabled Timer for heartbeat "' DateTime.Now.ToString ())' LoggingMethod.LevelInfo);  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The following statement contains a magic number: if (OVERRIDE_TCP_KEEP_ALIVE) {  	heartBeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The following statement contains a magic number: if (OVERRIDE_TCP_KEEP_ALIVE) {  	heartBeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The following statement contains a magic number: heartBeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,SystemEvents_PowerModeChanged,The following statement contains a magic number: heartBeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,subscribeInternalCallback,The following statement contains a magic number: if (message != null && message.Count >= 3) {  	channelName = message [2].ToString ();  }  else {  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Lost Channel Name for resubscribe"' DateTime.Now.ToString ())' LoggingMethod.LevelError);  	return;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,subscribeInternalCallback,The following statement contains a magic number: if (message != null && message.Count >= 3) {  	channelName = message [2].ToString ();  }  else {  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Lost Channel Name for resubscribe"' DateTime.Now.ToString ())' LoggingMethod.LevelError);  	return;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,subscribeInternalCallback,The following statement contains a magic number: channelName = message [2].ToString ();  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,subscribeInternalCallback,The following statement contains a magic number: if (message != null && message.Count >= 3) {  	_subscribe<T> (channelName' (object)message [1]' usercallback' connectCallback' false);  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presenceInternalCallback,The following statement contains a magic number: if (message != null && message.Count >= 3) {  	channelName = message [2].ToString ();  }  else {  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Lost Channel Name for re-presence"' DateTime.Now.ToString ())' LoggingMethod.LevelError);  	return;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presenceInternalCallback,The following statement contains a magic number: if (message != null && message.Count >= 3) {  	channelName = message [2].ToString ();  }  else {  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Lost Channel Name for re-presence"' DateTime.Now.ToString ())' LoggingMethod.LevelError);  	return;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presenceInternalCallback,The following statement contains a magic number: channelName = message [2].ToString ();  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,presenceInternalCallback,The following statement contains a magic number: if (message != null && message.Count >= 3) {  	_presence<T> (channelName' (object)message [1]' usercallback' false);  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The following statement contains a magic number: try {  	// Create Request  	PubnubWebRequestCreator requestCreator = new PubnubWebRequestCreator (_pubnubUnitTest);  	PubnubWebRequest request = (PubnubWebRequest)requestCreator.Create (requestUri);  	#if (!SILVERLIGHT && !WINDOWS_PHONE)  	request.Timeout = PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000;  	#endif  	if ((!_channelSubscription.ContainsKey (channelName) && type == ResponseType.Subscribe) || (!_channelPresence.ContainsKey (channelName) && type == ResponseType.Presence)) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Due to Unsubscribe' request aborted for channel={1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  		request.Abort ();  	}  	RequestState pubnubRequestState = new RequestState ();  	pubnubRequestState.request = request;  	pubnubRequestState.channel = channelName;  	pubnubRequestState.type = type;  	if (type == ResponseType.Subscribe || type == ResponseType.Presence) {  		_channelRequest.AddOrUpdate (channelName' pubnubRequestState' (key' oldState) => pubnubRequestState);  	}  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		//Eventhough heart-beat is disabled' run one time to check internet connection by setting dueTime=0  		heartBeatTimer = new System.Threading.Timer (new TimerCallback (OnPubnubHeartBeatTimeoutCallback)' pubnubRequestState' 0' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? Timeout.Infinite : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  		_channelHeartbeatTimer.AddOrUpdate (requestUri' heartBeatTimer' (key' oldState) => heartBeatTimer);  	}  	else {  		#if ((!__MonoCS__) && (!SILVERLIGHT) && !WINDOWS_PHONE)  		                    request.ServicePoint.SetTcpKeepAlive(true' PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' 1000); #endif  	}  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Request={1}"' DateTime.Now.ToString ()' requestUri.ToString ())' LoggingMethod.LevelInfo);  	// Make request with the following inline Asynchronous callback  	IAsyncResult asyncResult = request.BeginGetResponse (new AsyncCallback (asynchronousResult =>  {  		try {  			RequestState asynchRequestState = (RequestState)asynchronousResult.AsyncState;  			PubnubWebRequest aRequest = (PubnubWebRequest)asynchRequestState.request;  			if (aRequest != null) {  				using (PubnubWebResponse aResponse = (PubnubWebResponse)aRequest.EndGetResponse (asynchronousResult)) {  					pubnubRequestState.response = aResponse;  					using (StreamReader streamReader = new StreamReader (aResponse.GetResponseStream ())) {  						if (type == ResponseType.Subscribe || type == ResponseType.Presence) {  							_channelInternetStatus.AddOrUpdate (channelName' true' (key' oldValue) => true);  						}  						// Deserialize the result  						string jsonString = streamReader.ReadToEnd ();  						streamReader.Close ();  						if (OVERRIDE_TCP_KEEP_ALIVE) {  							TerminateHeartbeatTimer (requestUri);  						}  						LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON for channel={1} ({2}) ={3}"' DateTime.Now.ToString ()' channelName' type.ToString ()' jsonString)' LoggingMethod.LevelInfo);  						result = WrapResultBasedOnResponseType (type' jsonString' channelName' reconnect);  					}  					aResponse.Close ();  				}  			}  			else {  				LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Request aborted for channel={1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  			}  			if (result != null && result.Count >= 1 && usercallback != null) {  				responseToConnectCallback<T> (result' type' channelName' connectCallback);  				responseToUserCallback<T> (result' type' channelName' usercallback);  			}  			switch (type) {  			case ResponseType.Subscribe:  				subscribeInternalCallback<T> (result' usercallback' connectCallback);  				break;  			case ResponseType.Presence:  				presenceInternalCallback<T> (result' usercallback);  				break;  			default:  				break;  			}  		}  		catch (WebException webEx) {  			LoggingMethod.WriteToLog (string.Format ("DateTime {0}' WebException: {1} for URL: {2}"' DateTime.Now.ToString ()' webEx.ToString ()' requestUri.ToString ())' LoggingMethod.LevelError);  			if (OVERRIDE_TCP_KEEP_ALIVE) {  				TerminateHeartbeatTimer (requestUri);  			}  			RequestState state = (RequestState)asynchronousResult.AsyncState;  			if (state.response != null) {  				state.response.Close ();  				state.request.Abort ();  			}  			#if (!SILVERLIGHT)  			if ((webEx.Status == WebExceptionStatus.NameResolutionFailure //No network  			|| webEx.Status == WebExceptionStatus.ConnectFailure //Sending Keep-alive packet failed (No network)/Server is down.  			|| webEx.Status == WebExceptionStatus.ServerProtocolViolation //Problem with proxy or ISP  			|| webEx.Status == WebExceptionStatus.ProtocolError) && (!OVERRIDE_TCP_KEEP_ALIVE)) {  				//internet connection problem.  				LoggingMethod.WriteToLog (string.Format ("DateTime {0}' _urlRequest - Internet connection problem"' DateTime.Now.ToString ())' LoggingMethod.LevelError);  				if (_channelInternetStatus.ContainsKey (channelName) && (type == ResponseType.Subscribe || type == ResponseType.Presence)) {  					if (_channelInternetStatus [channelName]) {  						//Reset Retry if previous state is true  						_channelInternetRetry.AddOrUpdate (channelName' 0' (key' oldValue) => 0);  					}  					else {  						_channelInternetRetry.AddOrUpdate (channelName' 1' (key' oldValue) => oldValue + 1);  						LoggingMethod.WriteToLog (string.Format ("DateTime {0} {1} channel = {2} _urlRequest - Internet connection retry {3} of {4}"' DateTime.Now.ToString ()' type' channelName' _channelInternetRetry [channelName]' PUBNUB_NETWORK_CHECK_RETRIES)' LoggingMethod.LevelInfo);  					}  					_channelInternetStatus [channelName] = false;  					Thread.Sleep (PUBNUB_WEBREQUEST_RETRY_INTERVAL_IN_SEC * 1000);  				}  			}  			#endif  			urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  		}  		catch (Exception ex) {  			RequestState state = (RequestState)asynchronousResult.AsyncState;  			if (state.response != null)  				state.response.Close ();  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} Exception= {1} for URL: {2}"' DateTime.Now.ToString ()' ex.ToString ()' requestUri.ToString ())' LoggingMethod.LevelError);  			urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  		}  	})' pubnubRequestState);  	#if (__MonoCS__)  	if (!asyncResult.AsyncWaitHandle.WaitOne (PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000)) {  		OnPubnubWebRequestTimeout (pubnubRequestState' true);  	}  	#elif (SILVERLIGHT || WINDOWS_PHONE)  	                Timer webRequestTimer = new Timer(OnPubnubWebRequestTimeout' pubnubRequestState' PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000' Timeout.Infinite); #else  	#                ThreadPool.RegisterWaitForSingleObject(asyncResult.AsyncWaitHandle' new WaitOrTimerCallback(OnPubnubWebRequestTimeout)' pubnubRequestState' PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000' true); #endif  	return true;  }  catch (System.Exception ex) {  	LoggingMethod.WriteToLog (string.Format ("DateTime {0} Exception={1}"' DateTime.Now.ToString ()' ex.ToString ())' LoggingMethod.LevelError);  	urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  	return false;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The following statement contains a magic number: try {  	// Create Request  	PubnubWebRequestCreator requestCreator = new PubnubWebRequestCreator (_pubnubUnitTest);  	PubnubWebRequest request = (PubnubWebRequest)requestCreator.Create (requestUri);  	#if (!SILVERLIGHT && !WINDOWS_PHONE)  	request.Timeout = PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000;  	#endif  	if ((!_channelSubscription.ContainsKey (channelName) && type == ResponseType.Subscribe) || (!_channelPresence.ContainsKey (channelName) && type == ResponseType.Presence)) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Due to Unsubscribe' request aborted for channel={1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  		request.Abort ();  	}  	RequestState pubnubRequestState = new RequestState ();  	pubnubRequestState.request = request;  	pubnubRequestState.channel = channelName;  	pubnubRequestState.type = type;  	if (type == ResponseType.Subscribe || type == ResponseType.Presence) {  		_channelRequest.AddOrUpdate (channelName' pubnubRequestState' (key' oldState) => pubnubRequestState);  	}  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		//Eventhough heart-beat is disabled' run one time to check internet connection by setting dueTime=0  		heartBeatTimer = new System.Threading.Timer (new TimerCallback (OnPubnubHeartBeatTimeoutCallback)' pubnubRequestState' 0' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? Timeout.Infinite : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  		_channelHeartbeatTimer.AddOrUpdate (requestUri' heartBeatTimer' (key' oldState) => heartBeatTimer);  	}  	else {  		#if ((!__MonoCS__) && (!SILVERLIGHT) && !WINDOWS_PHONE)  		                    request.ServicePoint.SetTcpKeepAlive(true' PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' 1000); #endif  	}  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Request={1}"' DateTime.Now.ToString ()' requestUri.ToString ())' LoggingMethod.LevelInfo);  	// Make request with the following inline Asynchronous callback  	IAsyncResult asyncResult = request.BeginGetResponse (new AsyncCallback (asynchronousResult =>  {  		try {  			RequestState asynchRequestState = (RequestState)asynchronousResult.AsyncState;  			PubnubWebRequest aRequest = (PubnubWebRequest)asynchRequestState.request;  			if (aRequest != null) {  				using (PubnubWebResponse aResponse = (PubnubWebResponse)aRequest.EndGetResponse (asynchronousResult)) {  					pubnubRequestState.response = aResponse;  					using (StreamReader streamReader = new StreamReader (aResponse.GetResponseStream ())) {  						if (type == ResponseType.Subscribe || type == ResponseType.Presence) {  							_channelInternetStatus.AddOrUpdate (channelName' true' (key' oldValue) => true);  						}  						// Deserialize the result  						string jsonString = streamReader.ReadToEnd ();  						streamReader.Close ();  						if (OVERRIDE_TCP_KEEP_ALIVE) {  							TerminateHeartbeatTimer (requestUri);  						}  						LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON for channel={1} ({2}) ={3}"' DateTime.Now.ToString ()' channelName' type.ToString ()' jsonString)' LoggingMethod.LevelInfo);  						result = WrapResultBasedOnResponseType (type' jsonString' channelName' reconnect);  					}  					aResponse.Close ();  				}  			}  			else {  				LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Request aborted for channel={1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  			}  			if (result != null && result.Count >= 1 && usercallback != null) {  				responseToConnectCallback<T> (result' type' channelName' connectCallback);  				responseToUserCallback<T> (result' type' channelName' usercallback);  			}  			switch (type) {  			case ResponseType.Subscribe:  				subscribeInternalCallback<T> (result' usercallback' connectCallback);  				break;  			case ResponseType.Presence:  				presenceInternalCallback<T> (result' usercallback);  				break;  			default:  				break;  			}  		}  		catch (WebException webEx) {  			LoggingMethod.WriteToLog (string.Format ("DateTime {0}' WebException: {1} for URL: {2}"' DateTime.Now.ToString ()' webEx.ToString ()' requestUri.ToString ())' LoggingMethod.LevelError);  			if (OVERRIDE_TCP_KEEP_ALIVE) {  				TerminateHeartbeatTimer (requestUri);  			}  			RequestState state = (RequestState)asynchronousResult.AsyncState;  			if (state.response != null) {  				state.response.Close ();  				state.request.Abort ();  			}  			#if (!SILVERLIGHT)  			if ((webEx.Status == WebExceptionStatus.NameResolutionFailure //No network  			|| webEx.Status == WebExceptionStatus.ConnectFailure //Sending Keep-alive packet failed (No network)/Server is down.  			|| webEx.Status == WebExceptionStatus.ServerProtocolViolation //Problem with proxy or ISP  			|| webEx.Status == WebExceptionStatus.ProtocolError) && (!OVERRIDE_TCP_KEEP_ALIVE)) {  				//internet connection problem.  				LoggingMethod.WriteToLog (string.Format ("DateTime {0}' _urlRequest - Internet connection problem"' DateTime.Now.ToString ())' LoggingMethod.LevelError);  				if (_channelInternetStatus.ContainsKey (channelName) && (type == ResponseType.Subscribe || type == ResponseType.Presence)) {  					if (_channelInternetStatus [channelName]) {  						//Reset Retry if previous state is true  						_channelInternetRetry.AddOrUpdate (channelName' 0' (key' oldValue) => 0);  					}  					else {  						_channelInternetRetry.AddOrUpdate (channelName' 1' (key' oldValue) => oldValue + 1);  						LoggingMethod.WriteToLog (string.Format ("DateTime {0} {1} channel = {2} _urlRequest - Internet connection retry {3} of {4}"' DateTime.Now.ToString ()' type' channelName' _channelInternetRetry [channelName]' PUBNUB_NETWORK_CHECK_RETRIES)' LoggingMethod.LevelInfo);  					}  					_channelInternetStatus [channelName] = false;  					Thread.Sleep (PUBNUB_WEBREQUEST_RETRY_INTERVAL_IN_SEC * 1000);  				}  			}  			#endif  			urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  		}  		catch (Exception ex) {  			RequestState state = (RequestState)asynchronousResult.AsyncState;  			if (state.response != null)  				state.response.Close ();  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} Exception= {1} for URL: {2}"' DateTime.Now.ToString ()' ex.ToString ()' requestUri.ToString ())' LoggingMethod.LevelError);  			urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  		}  	})' pubnubRequestState);  	#if (__MonoCS__)  	if (!asyncResult.AsyncWaitHandle.WaitOne (PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000)) {  		OnPubnubWebRequestTimeout (pubnubRequestState' true);  	}  	#elif (SILVERLIGHT || WINDOWS_PHONE)  	                Timer webRequestTimer = new Timer(OnPubnubWebRequestTimeout' pubnubRequestState' PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000' Timeout.Infinite); #else  	#                ThreadPool.RegisterWaitForSingleObject(asyncResult.AsyncWaitHandle' new WaitOrTimerCallback(OnPubnubWebRequestTimeout)' pubnubRequestState' PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000' true); #endif  	return true;  }  catch (System.Exception ex) {  	LoggingMethod.WriteToLog (string.Format ("DateTime {0} Exception={1}"' DateTime.Now.ToString ()' ex.ToString ())' LoggingMethod.LevelError);  	urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  	return false;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The following statement contains a magic number: try {  	// Create Request  	PubnubWebRequestCreator requestCreator = new PubnubWebRequestCreator (_pubnubUnitTest);  	PubnubWebRequest request = (PubnubWebRequest)requestCreator.Create (requestUri);  	#if (!SILVERLIGHT && !WINDOWS_PHONE)  	request.Timeout = PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000;  	#endif  	if ((!_channelSubscription.ContainsKey (channelName) && type == ResponseType.Subscribe) || (!_channelPresence.ContainsKey (channelName) && type == ResponseType.Presence)) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Due to Unsubscribe' request aborted for channel={1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  		request.Abort ();  	}  	RequestState pubnubRequestState = new RequestState ();  	pubnubRequestState.request = request;  	pubnubRequestState.channel = channelName;  	pubnubRequestState.type = type;  	if (type == ResponseType.Subscribe || type == ResponseType.Presence) {  		_channelRequest.AddOrUpdate (channelName' pubnubRequestState' (key' oldState) => pubnubRequestState);  	}  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		//Eventhough heart-beat is disabled' run one time to check internet connection by setting dueTime=0  		heartBeatTimer = new System.Threading.Timer (new TimerCallback (OnPubnubHeartBeatTimeoutCallback)' pubnubRequestState' 0' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? Timeout.Infinite : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  		_channelHeartbeatTimer.AddOrUpdate (requestUri' heartBeatTimer' (key' oldState) => heartBeatTimer);  	}  	else {  		#if ((!__MonoCS__) && (!SILVERLIGHT) && !WINDOWS_PHONE)  		                    request.ServicePoint.SetTcpKeepAlive(true' PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' 1000); #endif  	}  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Request={1}"' DateTime.Now.ToString ()' requestUri.ToString ())' LoggingMethod.LevelInfo);  	// Make request with the following inline Asynchronous callback  	IAsyncResult asyncResult = request.BeginGetResponse (new AsyncCallback (asynchronousResult =>  {  		try {  			RequestState asynchRequestState = (RequestState)asynchronousResult.AsyncState;  			PubnubWebRequest aRequest = (PubnubWebRequest)asynchRequestState.request;  			if (aRequest != null) {  				using (PubnubWebResponse aResponse = (PubnubWebResponse)aRequest.EndGetResponse (asynchronousResult)) {  					pubnubRequestState.response = aResponse;  					using (StreamReader streamReader = new StreamReader (aResponse.GetResponseStream ())) {  						if (type == ResponseType.Subscribe || type == ResponseType.Presence) {  							_channelInternetStatus.AddOrUpdate (channelName' true' (key' oldValue) => true);  						}  						// Deserialize the result  						string jsonString = streamReader.ReadToEnd ();  						streamReader.Close ();  						if (OVERRIDE_TCP_KEEP_ALIVE) {  							TerminateHeartbeatTimer (requestUri);  						}  						LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON for channel={1} ({2}) ={3}"' DateTime.Now.ToString ()' channelName' type.ToString ()' jsonString)' LoggingMethod.LevelInfo);  						result = WrapResultBasedOnResponseType (type' jsonString' channelName' reconnect);  					}  					aResponse.Close ();  				}  			}  			else {  				LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Request aborted for channel={1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  			}  			if (result != null && result.Count >= 1 && usercallback != null) {  				responseToConnectCallback<T> (result' type' channelName' connectCallback);  				responseToUserCallback<T> (result' type' channelName' usercallback);  			}  			switch (type) {  			case ResponseType.Subscribe:  				subscribeInternalCallback<T> (result' usercallback' connectCallback);  				break;  			case ResponseType.Presence:  				presenceInternalCallback<T> (result' usercallback);  				break;  			default:  				break;  			}  		}  		catch (WebException webEx) {  			LoggingMethod.WriteToLog (string.Format ("DateTime {0}' WebException: {1} for URL: {2}"' DateTime.Now.ToString ()' webEx.ToString ()' requestUri.ToString ())' LoggingMethod.LevelError);  			if (OVERRIDE_TCP_KEEP_ALIVE) {  				TerminateHeartbeatTimer (requestUri);  			}  			RequestState state = (RequestState)asynchronousResult.AsyncState;  			if (state.response != null) {  				state.response.Close ();  				state.request.Abort ();  			}  			#if (!SILVERLIGHT)  			if ((webEx.Status == WebExceptionStatus.NameResolutionFailure //No network  			|| webEx.Status == WebExceptionStatus.ConnectFailure //Sending Keep-alive packet failed (No network)/Server is down.  			|| webEx.Status == WebExceptionStatus.ServerProtocolViolation //Problem with proxy or ISP  			|| webEx.Status == WebExceptionStatus.ProtocolError) && (!OVERRIDE_TCP_KEEP_ALIVE)) {  				//internet connection problem.  				LoggingMethod.WriteToLog (string.Format ("DateTime {0}' _urlRequest - Internet connection problem"' DateTime.Now.ToString ())' LoggingMethod.LevelError);  				if (_channelInternetStatus.ContainsKey (channelName) && (type == ResponseType.Subscribe || type == ResponseType.Presence)) {  					if (_channelInternetStatus [channelName]) {  						//Reset Retry if previous state is true  						_channelInternetRetry.AddOrUpdate (channelName' 0' (key' oldValue) => 0);  					}  					else {  						_channelInternetRetry.AddOrUpdate (channelName' 1' (key' oldValue) => oldValue + 1);  						LoggingMethod.WriteToLog (string.Format ("DateTime {0} {1} channel = {2} _urlRequest - Internet connection retry {3} of {4}"' DateTime.Now.ToString ()' type' channelName' _channelInternetRetry [channelName]' PUBNUB_NETWORK_CHECK_RETRIES)' LoggingMethod.LevelInfo);  					}  					_channelInternetStatus [channelName] = false;  					Thread.Sleep (PUBNUB_WEBREQUEST_RETRY_INTERVAL_IN_SEC * 1000);  				}  			}  			#endif  			urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  		}  		catch (Exception ex) {  			RequestState state = (RequestState)asynchronousResult.AsyncState;  			if (state.response != null)  				state.response.Close ();  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} Exception= {1} for URL: {2}"' DateTime.Now.ToString ()' ex.ToString ()' requestUri.ToString ())' LoggingMethod.LevelError);  			urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  		}  	})' pubnubRequestState);  	#if (__MonoCS__)  	if (!asyncResult.AsyncWaitHandle.WaitOne (PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000)) {  		OnPubnubWebRequestTimeout (pubnubRequestState' true);  	}  	#elif (SILVERLIGHT || WINDOWS_PHONE)  	                Timer webRequestTimer = new Timer(OnPubnubWebRequestTimeout' pubnubRequestState' PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000' Timeout.Infinite); #else  	#                ThreadPool.RegisterWaitForSingleObject(asyncResult.AsyncWaitHandle' new WaitOrTimerCallback(OnPubnubWebRequestTimeout)' pubnubRequestState' PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000' true); #endif  	return true;  }  catch (System.Exception ex) {  	LoggingMethod.WriteToLog (string.Format ("DateTime {0} Exception={1}"' DateTime.Now.ToString ()' ex.ToString ())' LoggingMethod.LevelError);  	urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  	return false;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The following statement contains a magic number: try {  	// Create Request  	PubnubWebRequestCreator requestCreator = new PubnubWebRequestCreator (_pubnubUnitTest);  	PubnubWebRequest request = (PubnubWebRequest)requestCreator.Create (requestUri);  	#if (!SILVERLIGHT && !WINDOWS_PHONE)  	request.Timeout = PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000;  	#endif  	if ((!_channelSubscription.ContainsKey (channelName) && type == ResponseType.Subscribe) || (!_channelPresence.ContainsKey (channelName) && type == ResponseType.Presence)) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Due to Unsubscribe' request aborted for channel={1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  		request.Abort ();  	}  	RequestState pubnubRequestState = new RequestState ();  	pubnubRequestState.request = request;  	pubnubRequestState.channel = channelName;  	pubnubRequestState.type = type;  	if (type == ResponseType.Subscribe || type == ResponseType.Presence) {  		_channelRequest.AddOrUpdate (channelName' pubnubRequestState' (key' oldState) => pubnubRequestState);  	}  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		//Eventhough heart-beat is disabled' run one time to check internet connection by setting dueTime=0  		heartBeatTimer = new System.Threading.Timer (new TimerCallback (OnPubnubHeartBeatTimeoutCallback)' pubnubRequestState' 0' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? Timeout.Infinite : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  		_channelHeartbeatTimer.AddOrUpdate (requestUri' heartBeatTimer' (key' oldState) => heartBeatTimer);  	}  	else {  		#if ((!__MonoCS__) && (!SILVERLIGHT) && !WINDOWS_PHONE)  		                    request.ServicePoint.SetTcpKeepAlive(true' PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' 1000); #endif  	}  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Request={1}"' DateTime.Now.ToString ()' requestUri.ToString ())' LoggingMethod.LevelInfo);  	// Make request with the following inline Asynchronous callback  	IAsyncResult asyncResult = request.BeginGetResponse (new AsyncCallback (asynchronousResult =>  {  		try {  			RequestState asynchRequestState = (RequestState)asynchronousResult.AsyncState;  			PubnubWebRequest aRequest = (PubnubWebRequest)asynchRequestState.request;  			if (aRequest != null) {  				using (PubnubWebResponse aResponse = (PubnubWebResponse)aRequest.EndGetResponse (asynchronousResult)) {  					pubnubRequestState.response = aResponse;  					using (StreamReader streamReader = new StreamReader (aResponse.GetResponseStream ())) {  						if (type == ResponseType.Subscribe || type == ResponseType.Presence) {  							_channelInternetStatus.AddOrUpdate (channelName' true' (key' oldValue) => true);  						}  						// Deserialize the result  						string jsonString = streamReader.ReadToEnd ();  						streamReader.Close ();  						if (OVERRIDE_TCP_KEEP_ALIVE) {  							TerminateHeartbeatTimer (requestUri);  						}  						LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON for channel={1} ({2}) ={3}"' DateTime.Now.ToString ()' channelName' type.ToString ()' jsonString)' LoggingMethod.LevelInfo);  						result = WrapResultBasedOnResponseType (type' jsonString' channelName' reconnect);  					}  					aResponse.Close ();  				}  			}  			else {  				LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Request aborted for channel={1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  			}  			if (result != null && result.Count >= 1 && usercallback != null) {  				responseToConnectCallback<T> (result' type' channelName' connectCallback);  				responseToUserCallback<T> (result' type' channelName' usercallback);  			}  			switch (type) {  			case ResponseType.Subscribe:  				subscribeInternalCallback<T> (result' usercallback' connectCallback);  				break;  			case ResponseType.Presence:  				presenceInternalCallback<T> (result' usercallback);  				break;  			default:  				break;  			}  		}  		catch (WebException webEx) {  			LoggingMethod.WriteToLog (string.Format ("DateTime {0}' WebException: {1} for URL: {2}"' DateTime.Now.ToString ()' webEx.ToString ()' requestUri.ToString ())' LoggingMethod.LevelError);  			if (OVERRIDE_TCP_KEEP_ALIVE) {  				TerminateHeartbeatTimer (requestUri);  			}  			RequestState state = (RequestState)asynchronousResult.AsyncState;  			if (state.response != null) {  				state.response.Close ();  				state.request.Abort ();  			}  			#if (!SILVERLIGHT)  			if ((webEx.Status == WebExceptionStatus.NameResolutionFailure //No network  			|| webEx.Status == WebExceptionStatus.ConnectFailure //Sending Keep-alive packet failed (No network)/Server is down.  			|| webEx.Status == WebExceptionStatus.ServerProtocolViolation //Problem with proxy or ISP  			|| webEx.Status == WebExceptionStatus.ProtocolError) && (!OVERRIDE_TCP_KEEP_ALIVE)) {  				//internet connection problem.  				LoggingMethod.WriteToLog (string.Format ("DateTime {0}' _urlRequest - Internet connection problem"' DateTime.Now.ToString ())' LoggingMethod.LevelError);  				if (_channelInternetStatus.ContainsKey (channelName) && (type == ResponseType.Subscribe || type == ResponseType.Presence)) {  					if (_channelInternetStatus [channelName]) {  						//Reset Retry if previous state is true  						_channelInternetRetry.AddOrUpdate (channelName' 0' (key' oldValue) => 0);  					}  					else {  						_channelInternetRetry.AddOrUpdate (channelName' 1' (key' oldValue) => oldValue + 1);  						LoggingMethod.WriteToLog (string.Format ("DateTime {0} {1} channel = {2} _urlRequest - Internet connection retry {3} of {4}"' DateTime.Now.ToString ()' type' channelName' _channelInternetRetry [channelName]' PUBNUB_NETWORK_CHECK_RETRIES)' LoggingMethod.LevelInfo);  					}  					_channelInternetStatus [channelName] = false;  					Thread.Sleep (PUBNUB_WEBREQUEST_RETRY_INTERVAL_IN_SEC * 1000);  				}  			}  			#endif  			urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  		}  		catch (Exception ex) {  			RequestState state = (RequestState)asynchronousResult.AsyncState;  			if (state.response != null)  				state.response.Close ();  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} Exception= {1} for URL: {2}"' DateTime.Now.ToString ()' ex.ToString ()' requestUri.ToString ())' LoggingMethod.LevelError);  			urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  		}  	})' pubnubRequestState);  	#if (__MonoCS__)  	if (!asyncResult.AsyncWaitHandle.WaitOne (PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000)) {  		OnPubnubWebRequestTimeout (pubnubRequestState' true);  	}  	#elif (SILVERLIGHT || WINDOWS_PHONE)  	                Timer webRequestTimer = new Timer(OnPubnubWebRequestTimeout' pubnubRequestState' PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000' Timeout.Infinite); #else  	#                ThreadPool.RegisterWaitForSingleObject(asyncResult.AsyncWaitHandle' new WaitOrTimerCallback(OnPubnubWebRequestTimeout)' pubnubRequestState' PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000' true); #endif  	return true;  }  catch (System.Exception ex) {  	LoggingMethod.WriteToLog (string.Format ("DateTime {0} Exception={1}"' DateTime.Now.ToString ()' ex.ToString ())' LoggingMethod.LevelError);  	urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  	return false;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The following statement contains a magic number: request.Timeout = PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000;  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The following statement contains a magic number: if (OVERRIDE_TCP_KEEP_ALIVE) {  	//Eventhough heart-beat is disabled' run one time to check internet connection by setting dueTime=0  	heartBeatTimer = new System.Threading.Timer (new TimerCallback (OnPubnubHeartBeatTimeoutCallback)' pubnubRequestState' 0' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? Timeout.Infinite : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  	_channelHeartbeatTimer.AddOrUpdate (requestUri' heartBeatTimer' (key' oldState) => heartBeatTimer);  }  else {  	#if ((!__MonoCS__) && (!SILVERLIGHT) && !WINDOWS_PHONE)  	                    request.ServicePoint.SetTcpKeepAlive(true' PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' 1000); #endif  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The following statement contains a magic number: heartBeatTimer = new System.Threading.Timer (new TimerCallback (OnPubnubHeartBeatTimeoutCallback)' pubnubRequestState' 0' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? Timeout.Infinite : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The following statement contains a magic number: try {  	RequestState asynchRequestState = (RequestState)asynchronousResult.AsyncState;  	PubnubWebRequest aRequest = (PubnubWebRequest)asynchRequestState.request;  	if (aRequest != null) {  		using (PubnubWebResponse aResponse = (PubnubWebResponse)aRequest.EndGetResponse (asynchronousResult)) {  			pubnubRequestState.response = aResponse;  			using (StreamReader streamReader = new StreamReader (aResponse.GetResponseStream ())) {  				if (type == ResponseType.Subscribe || type == ResponseType.Presence) {  					_channelInternetStatus.AddOrUpdate (channelName' true' (key' oldValue) => true);  				}  				// Deserialize the result  				string jsonString = streamReader.ReadToEnd ();  				streamReader.Close ();  				if (OVERRIDE_TCP_KEEP_ALIVE) {  					TerminateHeartbeatTimer (requestUri);  				}  				LoggingMethod.WriteToLog (string.Format ("DateTime {0}' JSON for channel={1} ({2}) ={3}"' DateTime.Now.ToString ()' channelName' type.ToString ()' jsonString)' LoggingMethod.LevelInfo);  				result = WrapResultBasedOnResponseType (type' jsonString' channelName' reconnect);  			}  			aResponse.Close ();  		}  	}  	else {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' Request aborted for channel={1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  	}  	if (result != null && result.Count >= 1 && usercallback != null) {  		responseToConnectCallback<T> (result' type' channelName' connectCallback);  		responseToUserCallback<T> (result' type' channelName' usercallback);  	}  	switch (type) {  	case ResponseType.Subscribe:  		subscribeInternalCallback<T> (result' usercallback' connectCallback);  		break;  	case ResponseType.Presence:  		presenceInternalCallback<T> (result' usercallback);  		break;  	default:  		break;  	}  }  catch (WebException webEx) {  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' WebException: {1} for URL: {2}"' DateTime.Now.ToString ()' webEx.ToString ()' requestUri.ToString ())' LoggingMethod.LevelError);  	if (OVERRIDE_TCP_KEEP_ALIVE) {  		TerminateHeartbeatTimer (requestUri);  	}  	RequestState state = (RequestState)asynchronousResult.AsyncState;  	if (state.response != null) {  		state.response.Close ();  		state.request.Abort ();  	}  	#if (!SILVERLIGHT)  	if ((webEx.Status == WebExceptionStatus.NameResolutionFailure //No network  	|| webEx.Status == WebExceptionStatus.ConnectFailure //Sending Keep-alive packet failed (No network)/Server is down.  	|| webEx.Status == WebExceptionStatus.ServerProtocolViolation //Problem with proxy or ISP  	|| webEx.Status == WebExceptionStatus.ProtocolError) && (!OVERRIDE_TCP_KEEP_ALIVE)) {  		//internet connection problem.  		LoggingMethod.WriteToLog (string.Format ("DateTime {0}' _urlRequest - Internet connection problem"' DateTime.Now.ToString ())' LoggingMethod.LevelError);  		if (_channelInternetStatus.ContainsKey (channelName) && (type == ResponseType.Subscribe || type == ResponseType.Presence)) {  			if (_channelInternetStatus [channelName]) {  				//Reset Retry if previous state is true  				_channelInternetRetry.AddOrUpdate (channelName' 0' (key' oldValue) => 0);  			}  			else {  				_channelInternetRetry.AddOrUpdate (channelName' 1' (key' oldValue) => oldValue + 1);  				LoggingMethod.WriteToLog (string.Format ("DateTime {0} {1} channel = {2} _urlRequest - Internet connection retry {3} of {4}"' DateTime.Now.ToString ()' type' channelName' _channelInternetRetry [channelName]' PUBNUB_NETWORK_CHECK_RETRIES)' LoggingMethod.LevelInfo);  			}  			_channelInternetStatus [channelName] = false;  			Thread.Sleep (PUBNUB_WEBREQUEST_RETRY_INTERVAL_IN_SEC * 1000);  		}  	}  	#endif  	urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  }  catch (Exception ex) {  	RequestState state = (RequestState)asynchronousResult.AsyncState;  	if (state.response != null)  		state.response.Close ();  	LoggingMethod.WriteToLog (string.Format ("DateTime {0} Exception= {1} for URL: {2}"' DateTime.Now.ToString ()' ex.ToString ()' requestUri.ToString ())' LoggingMethod.LevelError);  	urlRequestCommonExceptionHandler<T> (type' channelName' usercallback' connectCallback);  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The following statement contains a magic number: if ((webEx.Status == WebExceptionStatus.NameResolutionFailure //No network  || webEx.Status == WebExceptionStatus.ConnectFailure //Sending Keep-alive packet failed (No network)/Server is down.  || webEx.Status == WebExceptionStatus.ServerProtocolViolation //Problem with proxy or ISP  || webEx.Status == WebExceptionStatus.ProtocolError) && (!OVERRIDE_TCP_KEEP_ALIVE)) {  	//internet connection problem.  	LoggingMethod.WriteToLog (string.Format ("DateTime {0}' _urlRequest - Internet connection problem"' DateTime.Now.ToString ())' LoggingMethod.LevelError);  	if (_channelInternetStatus.ContainsKey (channelName) && (type == ResponseType.Subscribe || type == ResponseType.Presence)) {  		if (_channelInternetStatus [channelName]) {  			//Reset Retry if previous state is true  			_channelInternetRetry.AddOrUpdate (channelName' 0' (key' oldValue) => 0);  		}  		else {  			_channelInternetRetry.AddOrUpdate (channelName' 1' (key' oldValue) => oldValue + 1);  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} {1} channel = {2} _urlRequest - Internet connection retry {3} of {4}"' DateTime.Now.ToString ()' type' channelName' _channelInternetRetry [channelName]' PUBNUB_NETWORK_CHECK_RETRIES)' LoggingMethod.LevelInfo);  		}  		_channelInternetStatus [channelName] = false;  		Thread.Sleep (PUBNUB_WEBREQUEST_RETRY_INTERVAL_IN_SEC * 1000);  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The following statement contains a magic number: if (_channelInternetStatus.ContainsKey (channelName) && (type == ResponseType.Subscribe || type == ResponseType.Presence)) {  	if (_channelInternetStatus [channelName]) {  		//Reset Retry if previous state is true  		_channelInternetRetry.AddOrUpdate (channelName' 0' (key' oldValue) => 0);  	}  	else {  		_channelInternetRetry.AddOrUpdate (channelName' 1' (key' oldValue) => oldValue + 1);  		LoggingMethod.WriteToLog (string.Format ("DateTime {0} {1} channel = {2} _urlRequest - Internet connection retry {3} of {4}"' DateTime.Now.ToString ()' type' channelName' _channelInternetRetry [channelName]' PUBNUB_NETWORK_CHECK_RETRIES)' LoggingMethod.LevelInfo);  	}  	_channelInternetStatus [channelName] = false;  	Thread.Sleep (PUBNUB_WEBREQUEST_RETRY_INTERVAL_IN_SEC * 1000);  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The following statement contains a magic number: Thread.Sleep (PUBNUB_WEBREQUEST_RETRY_INTERVAL_IN_SEC * 1000);  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_urlRequest,The following statement contains a magic number: if (!asyncResult.AsyncWaitHandle.WaitOne (PUBNUB_WEBREQUEST_CALLBACK_INTERVAL_IN_SEC * 1000)) {  	OnPubnubWebRequestTimeout (pubnubRequestState' true);  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateHeartbeatTimer,The following statement contains a magic number: if (requestUri != null) {  	if (_channelHeartbeatTimer.ContainsKey (requestUri)) {  		Timer requestHeatbeatTimer = _channelHeartbeatTimer [requestUri];  		requestHeatbeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  		requestHeatbeatTimer.Dispose ();  		Timer removedTimer = null;  		bool removed = _channelHeartbeatTimer.TryRemove (requestUri' out removedTimer);  		if (!removed) {  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} Unable to remove heartbeat reference from collection for {1}"' DateTime.Now.ToString ()' requestUri.ToString ())' LoggingMethod.LevelInfo);  		}  	}  }  else {  	ConcurrentDictionary<Uri' Timer> timerCollection = _channelHeartbeatTimer;  	ICollection<Uri> keyCol = timerCollection.Keys;  	foreach (Uri key in keyCol) {  		Timer currTimer = _channelHeartbeatTimer [key];  		currTimer.Dispose ();  		Timer removedTimer = null;  		bool removed = _channelHeartbeatTimer.TryRemove (key' out removedTimer);  		if (!removed) {  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminateHeartbeatTimer(null) - Unable to remove heartbeat reference from collection for {1}"' DateTime.Now.ToString ()' key.ToString ())' LoggingMethod.LevelInfo);  		}  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateHeartbeatTimer,The following statement contains a magic number: if (requestUri != null) {  	if (_channelHeartbeatTimer.ContainsKey (requestUri)) {  		Timer requestHeatbeatTimer = _channelHeartbeatTimer [requestUri];  		requestHeatbeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  		requestHeatbeatTimer.Dispose ();  		Timer removedTimer = null;  		bool removed = _channelHeartbeatTimer.TryRemove (requestUri' out removedTimer);  		if (!removed) {  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} Unable to remove heartbeat reference from collection for {1}"' DateTime.Now.ToString ()' requestUri.ToString ())' LoggingMethod.LevelInfo);  		}  	}  }  else {  	ConcurrentDictionary<Uri' Timer> timerCollection = _channelHeartbeatTimer;  	ICollection<Uri> keyCol = timerCollection.Keys;  	foreach (Uri key in keyCol) {  		Timer currTimer = _channelHeartbeatTimer [key];  		currTimer.Dispose ();  		Timer removedTimer = null;  		bool removed = _channelHeartbeatTimer.TryRemove (key' out removedTimer);  		if (!removed) {  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminateHeartbeatTimer(null) - Unable to remove heartbeat reference from collection for {1}"' DateTime.Now.ToString ()' key.ToString ())' LoggingMethod.LevelInfo);  		}  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateHeartbeatTimer,The following statement contains a magic number: if (_channelHeartbeatTimer.ContainsKey (requestUri)) {  	Timer requestHeatbeatTimer = _channelHeartbeatTimer [requestUri];  	requestHeatbeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  	requestHeatbeatTimer.Dispose ();  	Timer removedTimer = null;  	bool removed = _channelHeartbeatTimer.TryRemove (requestUri' out removedTimer);  	if (!removed) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0} Unable to remove heartbeat reference from collection for {1}"' DateTime.Now.ToString ()' requestUri.ToString ())' LoggingMethod.LevelInfo);  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateHeartbeatTimer,The following statement contains a magic number: if (_channelHeartbeatTimer.ContainsKey (requestUri)) {  	Timer requestHeatbeatTimer = _channelHeartbeatTimer [requestUri];  	requestHeatbeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  	requestHeatbeatTimer.Dispose ();  	Timer removedTimer = null;  	bool removed = _channelHeartbeatTimer.TryRemove (requestUri' out removedTimer);  	if (!removed) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0} Unable to remove heartbeat reference from collection for {1}"' DateTime.Now.ToString ()' requestUri.ToString ())' LoggingMethod.LevelInfo);  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateHeartbeatTimer,The following statement contains a magic number: requestHeatbeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateHeartbeatTimer,The following statement contains a magic number: requestHeatbeatTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateReconnectTimer,The following statement contains a magic number: if (channelName != null) {  	if (_channelReconnectTimer.ContainsKey (channelName)) {  		Timer channelReconnectTimer = _channelReconnectTimer [channelName];  		channelReconnectTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  		channelReconnectTimer.Dispose ();  		Timer removedTimer = null;  		bool removed = _channelReconnectTimer.TryRemove (channelName' out removedTimer);  		if (!removed) {  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminateReconnectTimer - Unable to remove reconnect timer reference from collection for {1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  		}  	}  }  else {  	ConcurrentDictionary<string' Timer> reconnectCollection = _channelReconnectTimer;  	ICollection<string> keyCol = reconnectCollection.Keys;  	foreach (string key in keyCol) {  		Timer currTimer = _channelReconnectTimer [key];  		currTimer.Dispose ();  		Timer removedTimer = null;  		bool removed = _channelReconnectTimer.TryRemove (key' out removedTimer);  		if (!removed) {  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminateReconnectTimer(null) - Unable to remove reconnect timer reference from collection for {1}"' DateTime.Now.ToString ()' key.ToString ())' LoggingMethod.LevelInfo);  		}  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateReconnectTimer,The following statement contains a magic number: if (channelName != null) {  	if (_channelReconnectTimer.ContainsKey (channelName)) {  		Timer channelReconnectTimer = _channelReconnectTimer [channelName];  		channelReconnectTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  		channelReconnectTimer.Dispose ();  		Timer removedTimer = null;  		bool removed = _channelReconnectTimer.TryRemove (channelName' out removedTimer);  		if (!removed) {  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminateReconnectTimer - Unable to remove reconnect timer reference from collection for {1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  		}  	}  }  else {  	ConcurrentDictionary<string' Timer> reconnectCollection = _channelReconnectTimer;  	ICollection<string> keyCol = reconnectCollection.Keys;  	foreach (string key in keyCol) {  		Timer currTimer = _channelReconnectTimer [key];  		currTimer.Dispose ();  		Timer removedTimer = null;  		bool removed = _channelReconnectTimer.TryRemove (key' out removedTimer);  		if (!removed) {  			LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminateReconnectTimer(null) - Unable to remove reconnect timer reference from collection for {1}"' DateTime.Now.ToString ()' key.ToString ())' LoggingMethod.LevelInfo);  		}  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateReconnectTimer,The following statement contains a magic number: if (_channelReconnectTimer.ContainsKey (channelName)) {  	Timer channelReconnectTimer = _channelReconnectTimer [channelName];  	channelReconnectTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  	channelReconnectTimer.Dispose ();  	Timer removedTimer = null;  	bool removed = _channelReconnectTimer.TryRemove (channelName' out removedTimer);  	if (!removed) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminateReconnectTimer - Unable to remove reconnect timer reference from collection for {1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateReconnectTimer,The following statement contains a magic number: if (_channelReconnectTimer.ContainsKey (channelName)) {  	Timer channelReconnectTimer = _channelReconnectTimer [channelName];  	channelReconnectTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  	channelReconnectTimer.Dispose ();  	Timer removedTimer = null;  	bool removed = _channelReconnectTimer.TryRemove (channelName' out removedTimer);  	if (!removed) {  		LoggingMethod.WriteToLog (string.Format ("DateTime {0} TerminateReconnectTimer - Unable to remove reconnect timer reference from collection for {1}"' DateTime.Now.ToString ()' channelName)' LoggingMethod.LevelInfo);  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateReconnectTimer,The following statement contains a magic number: channelReconnectTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,TerminateReconnectTimer,The following statement contains a magic number: channelReconnectTimer.Change ((-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000' (-1 == PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC) ? -1 : PUBNUB_NETWORK_TCP_CHECK_INTERVAL_IN_SEC * 1000);  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,buildDetailedHistoryRequest,The following statement contains a magic number: if (count <= -1)  	count = 100;  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,buildDetailedHistoryRequest,The following statement contains a magic number: count = 100;  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,responseToUserCallback,The following statement contains a magic number: switch (type) {  case ResponseType.Subscribe:  	var msgs = (from item in result  	select item as object).ToArray ();  	if (msgs != null && msgs.Length > 0) {  		List<object> msgList = msgs [0] as List<object>;  		if (msgList != null && msgList.Count > 0) {  			foreach (object item in msgList) {  				List<object> itemMsg = new List<object> ();  				itemMsg.Add (item);  				for (int index = 1; index < msgs.Length; index++) {  					itemMsg.Add (msgs [index]);  				}  				goToCallback<T> (itemMsg' usercallback);  			}  		}  	}  	removeChannelRequest (channelName);  	break;  case ResponseType.Presence:  	var msgp = (from item in result  	select item as object).ToArray ();  	if (msgp != null && msgp.Length > 0) {  		JArray msgArr = msgp [0] as JArray;  		if (msgArr != null && msgArr.Count > 0) {  			foreach (object item in msgArr) {  				List<object> itemMsg = new List<object> ();  				itemMsg.Add (item);  				for (int index = 1; index < msgp.Length; index++) {  					if (index == 2) {  						msgp [index] = ((string)msgp [index]).Replace ("-pnpres"' "");  					}  					itemMsg.Add (msgp [index]);  				}  				goToCallback<T> (itemMsg' usercallback);  			}  		}  	}  	removeChannelRequest (channelName);  	break;  case ResponseType.Publish:  	if (result != null && result.Count > 0) {  		goToCallback<T> (result' usercallback);  	}  	break;  case ResponseType.DetailedHistory:  	if (result != null && result.Count > 0) {  		goToCallback<T> (result' usercallback);  	}  	break;  case ResponseType.Here_Now:  	if (result != null && result.Count > 0) {  		goToCallback<T> (result' usercallback);  	}  	break;  case ResponseType.Time:  	if (result != null && result.Count > 0) {  		goToCallback<T> (result' usercallback);  	}  	break;  case ResponseType.Leave:  	//No response to callback  	break;  default:  	break;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,responseToUserCallback,The following statement contains a magic number: if (msgp != null && msgp.Length > 0) {  	JArray msgArr = msgp [0] as JArray;  	if (msgArr != null && msgArr.Count > 0) {  		foreach (object item in msgArr) {  			List<object> itemMsg = new List<object> ();  			itemMsg.Add (item);  			for (int index = 1; index < msgp.Length; index++) {  				if (index == 2) {  					msgp [index] = ((string)msgp [index]).Replace ("-pnpres"' "");  				}  				itemMsg.Add (msgp [index]);  			}  			goToCallback<T> (itemMsg' usercallback);  		}  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,responseToUserCallback,The following statement contains a magic number: if (msgArr != null && msgArr.Count > 0) {  	foreach (object item in msgArr) {  		List<object> itemMsg = new List<object> ();  		itemMsg.Add (item);  		for (int index = 1; index < msgp.Length; index++) {  			if (index == 2) {  				msgp [index] = ((string)msgp [index]).Replace ("-pnpres"' "");  			}  			itemMsg.Add (msgp [index]);  		}  		goToCallback<T> (itemMsg' usercallback);  	}  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,responseToUserCallback,The following statement contains a magic number: foreach (object item in msgArr) {  	List<object> itemMsg = new List<object> ();  	itemMsg.Add (item);  	for (int index = 1; index < msgp.Length; index++) {  		if (index == 2) {  			msgp [index] = ((string)msgp [index]).Replace ("-pnpres"' "");  		}  		itemMsg.Add (msgp [index]);  	}  	goToCallback<T> (itemMsg' usercallback);  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,responseToUserCallback,The following statement contains a magic number: for (int index = 1; index < msgp.Length; index++) {  	if (index == 2) {  		msgp [index] = ((string)msgp [index]).Replace ("-pnpres"' "");  	}  	itemMsg.Add (msgp [index]);  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,responseToUserCallback,The following statement contains a magic number: if (index == 2) {  	msgp [index] = ((string)msgp [index]).Replace ("-pnpres"' "");  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,The following statement contains a magic number: switch (type) {  case ResponseType.Subscribe:  	channelName = url_components [2];  	break;  case ResponseType.Publish:  	channelName = url_components [4];  	break;  case ResponseType.Presence:  	channelName = url_components [2];  	break;  case ResponseType.DetailedHistory:  	channelName = url_components [5];  	break;  case ResponseType.Here_Now:  	channelName = url_components [5];  	break;  case ResponseType.Leave:  	channelName = url_components [5];  	break;  default:  	break;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,The following statement contains a magic number: switch (type) {  case ResponseType.Subscribe:  	channelName = url_components [2];  	break;  case ResponseType.Publish:  	channelName = url_components [4];  	break;  case ResponseType.Presence:  	channelName = url_components [2];  	break;  case ResponseType.DetailedHistory:  	channelName = url_components [5];  	break;  case ResponseType.Here_Now:  	channelName = url_components [5];  	break;  case ResponseType.Leave:  	channelName = url_components [5];  	break;  default:  	break;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,The following statement contains a magic number: switch (type) {  case ResponseType.Subscribe:  	channelName = url_components [2];  	break;  case ResponseType.Publish:  	channelName = url_components [4];  	break;  case ResponseType.Presence:  	channelName = url_components [2];  	break;  case ResponseType.DetailedHistory:  	channelName = url_components [5];  	break;  case ResponseType.Here_Now:  	channelName = url_components [5];  	break;  case ResponseType.Leave:  	channelName = url_components [5];  	break;  default:  	break;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,The following statement contains a magic number: switch (type) {  case ResponseType.Subscribe:  	channelName = url_components [2];  	break;  case ResponseType.Publish:  	channelName = url_components [4];  	break;  case ResponseType.Presence:  	channelName = url_components [2];  	break;  case ResponseType.DetailedHistory:  	channelName = url_components [5];  	break;  case ResponseType.Here_Now:  	channelName = url_components [5];  	break;  case ResponseType.Leave:  	channelName = url_components [5];  	break;  default:  	break;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,The following statement contains a magic number: switch (type) {  case ResponseType.Subscribe:  	channelName = url_components [2];  	break;  case ResponseType.Publish:  	channelName = url_components [4];  	break;  case ResponseType.Presence:  	channelName = url_components [2];  	break;  case ResponseType.DetailedHistory:  	channelName = url_components [5];  	break;  case ResponseType.Here_Now:  	channelName = url_components [5];  	break;  case ResponseType.Leave:  	channelName = url_components [5];  	break;  default:  	break;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,The following statement contains a magic number: switch (type) {  case ResponseType.Subscribe:  	channelName = url_components [2];  	break;  case ResponseType.Publish:  	channelName = url_components [4];  	break;  case ResponseType.Presence:  	channelName = url_components [2];  	break;  case ResponseType.DetailedHistory:  	channelName = url_components [5];  	break;  case ResponseType.Here_Now:  	channelName = url_components [5];  	break;  case ResponseType.Leave:  	channelName = url_components [5];  	break;  default:  	break;  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,The following statement contains a magic number: channelName = url_components [2];  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,The following statement contains a magic number: channelName = url_components [4];  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,The following statement contains a magic number: channelName = url_components [2];  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,The following statement contains a magic number: channelName = url_components [5];  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,The following statement contains a magic number: channelName = url_components [5];  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,getChannelName,The following statement contains a magic number: channelName = url_components [5];  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_encodeURIcomponent,The following statement contains a magic number: foreach (char ch in s.ToCharArray ()) {  	if (isUnsafe (ch)) {  		o.Append ('%');  		o.Append (toHex (ch / 16));  		o.Append (toHex (ch % 16));  	}  	else  		o.Append (ch);  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_encodeURIcomponent,The following statement contains a magic number: foreach (char ch in s.ToCharArray ()) {  	if (isUnsafe (ch)) {  		o.Append ('%');  		o.Append (toHex (ch / 16));  		o.Append (toHex (ch % 16));  	}  	else  		o.Append (ch);  }  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_encodeURIcomponent,The following statement contains a magic number: if (isUnsafe (ch)) {  	o.Append ('%');  	o.Append (toHex (ch / 16));  	o.Append (toHex (ch % 16));  }  else  	o.Append (ch);  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_encodeURIcomponent,The following statement contains a magic number: if (isUnsafe (ch)) {  	o.Append ('%');  	o.Append (toHex (ch / 16));  	o.Append (toHex (ch % 16));  }  else  	o.Append (ch);  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_encodeURIcomponent,The following statement contains a magic number: o.Append (toHex (ch / 16));  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,_encodeURIcomponent,The following statement contains a magic number: o.Append (toHex (ch % 16));  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,toHex,The following statement contains a magic number: return (char)(ch < 10 ? '0' + ch : 'A' + ch - 10);  
Magic Number,PubNub_Messaging,Pubnub,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,toHex,The following statement contains a magic number: return (char)(ch < 10 ? '0' + ch : 'A' + ch - 10);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,ROTATE_LEFT,The following statement contains a magic number: return (((x) << (n)) | ((x) >> (32 - (n))));  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Initialize,The following statement contains a magic number: state [2] = 0x98badcfe;  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Initialize,The following statement contains a magic number: state [3] = 0x10325476;  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashCore,The following statement contains a magic number: index = (int)((this.count [0] >> 3) & 0x3F);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashCore,The following statement contains a magic number: if ((this.count [0] += (uint)((uint)count << 3)) < ((uint)count << 3))  	this.count [1]++;  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashCore,The following statement contains a magic number: if ((this.count [0] += (uint)((uint)count << 3)) < ((uint)count << 3))  	this.count [1]++;  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashCore,The following statement contains a magic number: this.count [1] += ((uint)count >> 29);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashCore,The following statement contains a magic number: partLen = 64 - index;  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashCore,The following statement contains a magic number: if (count >= partLen) {  	Buffer.BlockCopy (input' offset' this.buffer' index' partLen);  	Transform (this.buffer' 0);  	for (i = partLen; i + 63 < count; i += 64)  		Transform (input' offset + i);  	index = 0;  }  else  	i = 0;  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashCore,The following statement contains a magic number: if (count >= partLen) {  	Buffer.BlockCopy (input' offset' this.buffer' index' partLen);  	Transform (this.buffer' 0);  	for (i = partLen; i + 63 < count; i += 64)  		Transform (input' offset + i);  	index = 0;  }  else  	i = 0;  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashCore,The following statement contains a magic number: for (i = partLen; i + 63 < count; i += 64)  	Transform (input' offset + i);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashCore,The following statement contains a magic number: for (i = partLen; i + 63 < count; i += 64)  	Transform (input' offset + i);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashCore,The following statement contains a magic number: i += 64
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashFinal,The following statement contains a magic number: Encode (bits' 0' this.count' 0' 8);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashFinal,The following statement contains a magic number: index = (int)((uint)(this.count [0] >> 3) & 0x3f);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashFinal,The following statement contains a magic number: padLen = (index < 56) ? (56 - index) : (120 - index);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashFinal,The following statement contains a magic number: padLen = (index < 56) ? (56 - index) : (120 - index);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashFinal,The following statement contains a magic number: padLen = (index < 56) ? (56 - index) : (120 - index);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashFinal,The following statement contains a magic number: HashCore (bits' 0' 8);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashFinal,The following statement contains a magic number: Encode (digest' 0' state' 0' 16);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashFinal,The following statement contains a magic number: state [2] = 0;  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,HashFinal,The following statement contains a magic number: state [3] = 0;  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: Decode (x' 0' block' offset' 64);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref c' d' a' b' x [2]' S13' 0x242070db);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref b' c' d' a' x [3]' S14' 0xc1bdceee);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref a' b' c' d' x [4]' S11' 0xf57c0faf);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref d' a' b' c' x [5]' S12' 0x4787c62a);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref c' d' a' b' x [6]' S13' 0xa8304613);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref b' c' d' a' x [7]' S14' 0xfd469501);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref a' b' c' d' x [8]' S11' 0x698098d8);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref d' a' b' c' x [9]' S12' 0x8b44f7af);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref c' d' a' b' x [10]' S13' 0xffff5bb1);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref b' c' d' a' x [11]' S14' 0x895cd7be);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref a' b' c' d' x [12]' S11' 0x6b901122);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref d' a' b' c' x [13]' S12' 0xfd987193);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref c' d' a' b' x [14]' S13' 0xa679438e);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: FF (ref b' c' d' a' x [15]' S14' 0x49b40821);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref d' a' b' c' x [6]' S22' 0xc040b340);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref c' d' a' b' x [11]' S23' 0x265e5a51);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref a' b' c' d' x [5]' S21' 0xd62f105d);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref d' a' b' c' x [10]' S22' 0x2441453);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref c' d' a' b' x [15]' S23' 0xd8a1e681);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref b' c' d' a' x [4]' S24' 0xe7d3fbc8);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref a' b' c' d' x [9]' S21' 0x21e1cde6);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref d' a' b' c' x [14]' S22' 0xc33707d6);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref c' d' a' b' x [3]' S23' 0xf4d50d87);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref b' c' d' a' x [8]' S24' 0x455a14ed);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref a' b' c' d' x [13]' S21' 0xa9e3e905);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref d' a' b' c' x [2]' S22' 0xfcefa3f8);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref c' d' a' b' x [7]' S23' 0x676f02d9);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: GG (ref b' c' d' a' x [12]' S24' 0x8d2a4c8a);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref a' b' c' d' x [5]' S31' 0xfffa3942);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref d' a' b' c' x [8]' S32' 0x8771f681);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref c' d' a' b' x [11]' S33' 0x6d9d6122);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref b' c' d' a' x [14]' S34' 0xfde5380c);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref d' a' b' c' x [4]' S32' 0x4bdecfa9);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref c' d' a' b' x [7]' S33' 0xf6bb4b60);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref b' c' d' a' x [10]' S34' 0xbebfbc70);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref a' b' c' d' x [13]' S31' 0x289b7ec6);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref c' d' a' b' x [3]' S33' 0xd4ef3085);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref b' c' d' a' x [6]' S34' 0x4881d05);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref a' b' c' d' x [9]' S31' 0xd9d4d039);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref d' a' b' c' x [12]' S32' 0xe6db99e5);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref c' d' a' b' x [15]' S33' 0x1fa27cf8);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: HH (ref b' c' d' a' x [2]' S34' 0xc4ac5665);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref d' a' b' c' x [7]' S42' 0x432aff97);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref c' d' a' b' x [14]' S43' 0xab9423a7);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref b' c' d' a' x [5]' S44' 0xfc93a039);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref a' b' c' d' x [12]' S41' 0x655b59c3);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref d' a' b' c' x [3]' S42' 0x8f0ccc92);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref c' d' a' b' x [10]' S43' 0xffeff47d);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref a' b' c' d' x [8]' S41' 0x6fa87e4f);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref d' a' b' c' x [15]' S42' 0xfe2ce6e0);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref c' d' a' b' x [6]' S43' 0xa3014314);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref b' c' d' a' x [13]' S44' 0x4e0811a1);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref a' b' c' d' x [4]' S41' 0xf7537e82);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref d' a' b' c' x [11]' S42' 0xbd3af235);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref c' d' a' b' x [2]' S43' 0x2ad7d2bb);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: II (ref b' c' d' a' x [9]' S44' 0xeb86d391);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: state [2] += c;  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Transform,The following statement contains a magic number: state [3] += d;  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The following statement contains a magic number: for (i = inputOffset' j = outputOffset; j < end; i++' j += 4) {  	output [j] = (byte)(input [i] & 0xff);  	output [j + 1] = (byte)((input [i] >> 8) & 0xff);  	output [j + 2] = (byte)((input [i] >> 16) & 0xff);  	output [j + 3] = (byte)((input [i] >> 24) & 0xff);  }  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The following statement contains a magic number: for (i = inputOffset' j = outputOffset; j < end; i++' j += 4) {  	output [j] = (byte)(input [i] & 0xff);  	output [j + 1] = (byte)((input [i] >> 8) & 0xff);  	output [j + 2] = (byte)((input [i] >> 16) & 0xff);  	output [j + 3] = (byte)((input [i] >> 24) & 0xff);  }  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The following statement contains a magic number: for (i = inputOffset' j = outputOffset; j < end; i++' j += 4) {  	output [j] = (byte)(input [i] & 0xff);  	output [j + 1] = (byte)((input [i] >> 8) & 0xff);  	output [j + 2] = (byte)((input [i] >> 16) & 0xff);  	output [j + 3] = (byte)((input [i] >> 24) & 0xff);  }  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The following statement contains a magic number: for (i = inputOffset' j = outputOffset; j < end; i++' j += 4) {  	output [j] = (byte)(input [i] & 0xff);  	output [j + 1] = (byte)((input [i] >> 8) & 0xff);  	output [j + 2] = (byte)((input [i] >> 16) & 0xff);  	output [j + 3] = (byte)((input [i] >> 24) & 0xff);  }  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The following statement contains a magic number: for (i = inputOffset' j = outputOffset; j < end; i++' j += 4) {  	output [j] = (byte)(input [i] & 0xff);  	output [j + 1] = (byte)((input [i] >> 8) & 0xff);  	output [j + 2] = (byte)((input [i] >> 16) & 0xff);  	output [j + 3] = (byte)((input [i] >> 24) & 0xff);  }  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The following statement contains a magic number: for (i = inputOffset' j = outputOffset; j < end; i++' j += 4) {  	output [j] = (byte)(input [i] & 0xff);  	output [j + 1] = (byte)((input [i] >> 8) & 0xff);  	output [j + 2] = (byte)((input [i] >> 16) & 0xff);  	output [j + 3] = (byte)((input [i] >> 24) & 0xff);  }  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The following statement contains a magic number: j += 4
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The following statement contains a magic number: output [j + 1] = (byte)((input [i] >> 8) & 0xff);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The following statement contains a magic number: output [j + 2] = (byte)((input [i] >> 16) & 0xff);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The following statement contains a magic number: output [j + 2] = (byte)((input [i] >> 16) & 0xff);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The following statement contains a magic number: output [j + 3] = (byte)((input [i] >> 24) & 0xff);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Encode,The following statement contains a magic number: output [j + 3] = (byte)((input [i] >> 24) & 0xff);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The following statement contains a magic number: for (i = outputOffset' j = inputOffset; j < end; i++' j += 4)  	output [i] = ((uint)input [j]) | (((uint)input [j + 1]) << 8) | (((uint)input [j + 2]) << 16) | (((uint)input [j + 3]) << 24);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The following statement contains a magic number: for (i = outputOffset' j = inputOffset; j < end; i++' j += 4)  	output [i] = ((uint)input [j]) | (((uint)input [j + 1]) << 8) | (((uint)input [j + 2]) << 16) | (((uint)input [j + 3]) << 24);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The following statement contains a magic number: for (i = outputOffset' j = inputOffset; j < end; i++' j += 4)  	output [i] = ((uint)input [j]) | (((uint)input [j + 1]) << 8) | (((uint)input [j + 2]) << 16) | (((uint)input [j + 3]) << 24);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The following statement contains a magic number: for (i = outputOffset' j = inputOffset; j < end; i++' j += 4)  	output [i] = ((uint)input [j]) | (((uint)input [j + 1]) << 8) | (((uint)input [j + 2]) << 16) | (((uint)input [j + 3]) << 24);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The following statement contains a magic number: for (i = outputOffset' j = inputOffset; j < end; i++' j += 4)  	output [i] = ((uint)input [j]) | (((uint)input [j + 1]) << 8) | (((uint)input [j + 2]) << 16) | (((uint)input [j + 3]) << 24);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The following statement contains a magic number: for (i = outputOffset' j = inputOffset; j < end; i++' j += 4)  	output [i] = ((uint)input [j]) | (((uint)input [j + 1]) << 8) | (((uint)input [j + 2]) << 16) | (((uint)input [j + 3]) << 24);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The following statement contains a magic number: j += 4
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The following statement contains a magic number: output [i] = ((uint)input [j]) | (((uint)input [j + 1]) << 8) | (((uint)input [j + 2]) << 16) | (((uint)input [j + 3]) << 24);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The following statement contains a magic number: output [i] = ((uint)input [j]) | (((uint)input [j + 1]) << 8) | (((uint)input [j + 2]) << 16) | (((uint)input [j + 3]) << 24);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The following statement contains a magic number: output [i] = ((uint)input [j]) | (((uint)input [j + 1]) << 8) | (((uint)input [j + 2]) << 16) | (((uint)input [j + 3]) << 24);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The following statement contains a magic number: output [i] = ((uint)input [j]) | (((uint)input [j + 1]) << 8) | (((uint)input [j + 2]) << 16) | (((uint)input [j + 3]) << 24);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,Decode,The following statement contains a magic number: output [i] = ((uint)input [j]) | (((uint)input [j + 1]) << 8) | (((uint)input [j + 2]) << 16) | (((uint)input [j + 3]) << 24);  
Magic Number,PubNub_Messaging,MD5,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,ComputeHash,The following statement contains a magic number: while (0 < (count = inputStream.Read (buffer' 0' 4096))) {  	HashCore (buffer' 0' count);  }  
Magic Number,PubNub_Messaging,PubnubCrypto,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,EncryptOrDecrypt,The following statement contains a magic number: aesEncryption.KeySize = 256;  
Magic Number,PubNub_Messaging,PubnubCrypto,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,EncryptOrDecrypt,The following statement contains a magic number: aesEncryption.BlockSize = 128;  
Magic Number,PubNub_Messaging,PubnubCrypto,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,EncodeNonAsciiCharacters,The following statement contains a magic number: foreach (char c in value) {  	if (c > 127) {  		// This character is too big for ASCII  		string encodedValue = "\\u" + ((int)c).ToString ("x4");  		sb.Append (encodedValue);  	}  	else {  		sb.Append (c);  	}  }  
Magic Number,PubNub_Messaging,PubnubCrypto,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,EncodeNonAsciiCharacters,The following statement contains a magic number: if (c > 127) {  	// This character is too big for ASCII  	string encodedValue = "\\u" + ((int)c).ToString ("x4");  	sb.Append (encodedValue);  }  else {  	sb.Append (c);  }  
Magic Number,PubNub_Messaging,ClientNetworkStatus,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,checkSocketConnect,The following statement contains a magic number: try {  	#if (SILVERLIGHT || WINDOWS_PHONE)  	                using (Socket socket = new Socket(AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp))                 {                     SocketAsyncEventArgs sae = new SocketAsyncEventArgs();                     sae.UserToken = state;                     sae.RemoteEndPoint = new DnsEndPoint("pubsub.pubnub.com"' 80);                     sae.Completed += new EventHandler<SocketAsyncEventArgs>(socketAsync_Completed);                     bool test = socket.ConnectAsync(sae);                      mreSocketAsync.WaitOne(1000);                     sae.Completed -= new EventHandler<SocketAsyncEventArgs>(socketAsync_Completed);                     socket.Close();                 } #else  	using (UdpClient udp = new UdpClient ("pubsub.pubnub.com"' 80)) {  		IPAddress localAddr = ((IPEndPoint)udp.Client.LocalEndPoint).Address;  		udp.Close ();  		LoggingMethod.WriteToLog (string.Format ("DateTime {0} checkInternetStatus LocalIP: {1}"' DateTime.Now.ToString ()' localAddr.ToString ())' LoggingMethod.LevelVerbose);  		callback (true);  	}  	#endif  }  catch (Exception ex) {  	LoggingMethod.WriteToLog (string.Format ("DateTime {0} checkInternetStatus Error. {1}"' DateTime.Now.ToString ()' ex.ToString ())' LoggingMethod.LevelError);  	callback (false);  }  
Magic Number,PubNub_Messaging,ClientNetworkStatus,C:\repos\pebblecode_EducationPathways\EducationPathways.Achievements\Pubnub.cs,checkSocketConnect,The following statement contains a magic number: using (UdpClient udp = new UdpClient ("pubsub.pubnub.com"' 80)) {  	IPAddress localAddr = ((IPEndPoint)udp.Client.LocalEndPoint).Address;  	udp.Close ();  	LoggingMethod.WriteToLog (string.Format ("DateTime {0} checkInternetStatus LocalIP: {1}"' DateTime.Now.ToString ()' localAddr.ToString ())' LoggingMethod.LevelVerbose);  	callback (true);  }  
