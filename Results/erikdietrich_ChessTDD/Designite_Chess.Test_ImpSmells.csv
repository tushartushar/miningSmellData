Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Chess.Test,ExtendedAssert,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\ExtendedAssert.cs,AssertExceptionMatch,The length of the statement  "            Assert.IsTrue(ex.GetType() == typeof(TException)' String.Format("Expected exception of type {0} but got {1}"' typeof(TException)' ex.GetType())); " is 145.
Magic Number,Chess.Test.AsciiBoardBuilderTests,AsciiBoardBuilder_GenerateBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\AsciiBoardBuilderTests\AsciiBoardBuilder_GenerateBoard_Should.cs,Generate_Board_With_Two_Pieces_When_Two_Pawns_Are_Added,The following statement contains a magic number: Target.AddPiece(BoardCoordinate.For(1' 2)' "WP");
Magic Number,Chess.Test.AsciiBoardBuilderTests,AsciiBoardBuilder_GenerateBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\AsciiBoardBuilderTests\AsciiBoardBuilder_GenerateBoard_Should.cs,Generate_Board_With_Two_Pieces_When_Two_Pawns_Are_Added,The following statement contains a magic number: Assert.AreEqual<int>(2' GeneratedBoard.PieceCount);
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_2_2_For_1_1,The following statement contains a magic number: Assert.IsTrue(Target.GetMovesFrom(new BoardCoordinate(1' 1)).Any(bc => bc.X == 2 && bc.Y == 2));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_2_2_For_1_1,The following statement contains a magic number: Assert.IsTrue(Target.GetMovesFrom(new BoardCoordinate(1' 1)).Any(bc => bc.X == 2 && bc.Y == 2));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_1_1_For_2_2,The following statement contains a magic number: Assert.IsTrue(Target.GetMovesFrom(new BoardCoordinate(2' 2)).Any(bc => bc.X == 1 && bc.Y == 1));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_1_1_For_2_2,The following statement contains a magic number: Assert.IsTrue(Target.GetMovesFrom(new BoardCoordinate(2' 2)).Any(bc => bc.X == 1 && bc.Y == 1));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_2_1_For_1_2,The following statement contains a magic number: Assert.IsTrue(Target.GetMovesFrom(new BoardCoordinate(1' 2)).Any(bc => bc.X == 2 && bc.Y == 1));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_2_1_For_1_2,The following statement contains a magic number: Assert.IsTrue(Target.GetMovesFrom(new BoardCoordinate(1' 2)).Any(bc => bc.X == 2 && bc.Y == 1));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Does_Not_Return_Negative_Values_For_BoardCoordinates,The following statement contains a magic number: Assert.IsFalse(Target.GetMovesFrom(new BoardCoordinate(1' 2)).Any(bc => bc.Y < 0 || bc.X < 0));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_8_8_For_1_1,The following statement contains a magic number: Assert.IsTrue(Target.GetMovesFrom(new BoardCoordinate(1' 1)).Any(bc => bc.Y == 8 && bc.X == 8));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_8_8_For_1_1,The following statement contains a magic number: Assert.IsTrue(Target.GetMovesFrom(new BoardCoordinate(1' 1)).Any(bc => bc.Y == 8 && bc.X == 8));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_8_1_For_1_8,The following statement contains a magic number: Assert.IsTrue(Target.GetMovesFrom(new BoardCoordinate(1' 8)).Any(bc => bc.Y == 1 && bc.X == 8));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_8_1_For_1_8,The following statement contains a magic number: Assert.IsTrue(Target.GetMovesFrom(new BoardCoordinate(1' 8)).Any(bc => bc.Y == 1 && bc.X == 8));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_3_2_For_1_1,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 3 && bc.Y == 2));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_3_2_For_1_1,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 3 && bc.Y == 2));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_2_3_For_1_1,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 2 && bc.Y == 3));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_2_3_For_1_1,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 2 && bc.Y == 3));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_4_3_For_2_2,The following statement contains a magic number: var moves = GetMoves(2' 2);
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_4_3_For_2_2,The following statement contains a magic number: var moves = GetMoves(2' 2);
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_4_3_For_2_2,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 4 && bc.Y == 3));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_4_3_For_2_2,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 4 && bc.Y == 3));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_3_4_For_2_2,The following statement contains a magic number: var moves = GetMoves(2' 2);
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_3_4_For_2_2,The following statement contains a magic number: var moves = GetMoves(2' 2);
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_3_4_For_2_2,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 3 && bc.Y == 4));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_3_4_For_2_2,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 3 && bc.Y == 4));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_4_1_For_2_2,The following statement contains a magic number: var moves = GetMoves(2' 2);
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_4_1_For_2_2,The following statement contains a magic number: var moves = GetMoves(2' 2);
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_4_1_For_2_2,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 4 && bc.Y == 1));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_1_2_For_3_3,The following statement contains a magic number: Assert.IsTrue(MovesFrom33.Any(bc => bc.X == 1 && bc.Y == 2));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_1_4_For_3_3,The following statement contains a magic number: Assert.IsTrue(MovesFrom33.Any(bc => bc.X == 1 && bc.Y == 4));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_2_1_For_3_3,The following statement contains a magic number: Assert.IsTrue(MovesFrom33.Any(bc => bc.X == 2 && bc.Y == 1));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_2_5_For_3_3,The following statement contains a magic number: Assert.IsTrue(MovesFrom33.Any(bc => bc.X == 2 && bc.Y == 5));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_2_5_For_3_3,The following statement contains a magic number: Assert.IsTrue(MovesFrom33.Any(bc => bc.X == 2 && bc.Y == 5));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_4_1_For_3_3,The following statement contains a magic number: Assert.IsTrue(MovesFrom33.Any(bc => bc.X == 4 && bc.Y == 1));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_1_2_For_1_1,The following statement contains a magic number: Assert.IsTrue(MovesFrom11.Any(bc => bc.X == 1 && bc.Y == 2));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_2_2_For_1_1,The following statement contains a magic number: Assert.IsTrue(MovesFrom11.Any(bc => bc.X == 2 && bc.Y == 2));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_2_2_For_1_1,The following statement contains a magic number: Assert.IsTrue(MovesFrom11.Any(bc => bc.X == 2 && bc.Y == 2));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_3_3_For_1_1,The following statement contains a magic number: Assert.IsTrue(MovesFrom11.Any(bc => bc.X == 3 && bc.Y == 3));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_3_3_For_1_1,The following statement contains a magic number: Assert.IsTrue(MovesFrom11.Any(bc => bc.X == 3 && bc.Y == 3));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_7_Vertical_Moves_With_Board_Size_8,The following statement contains a magic number: Assert.AreEqual<int>(7' MovesFrom11.Where(bc => bc.X == 1).ToList().Count());
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_7_Horizontal_Moves_With_Board_Size_8,The following statement contains a magic number: Assert.AreEqual<int>(7' MovesFrom11.Where(bc => bc.Y == 1).Count());
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_7_4_From_7_1,The following statement contains a magic number: var moves = Target.GetMovesFrom(new BoardCoordinate(7' 1));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_7_4_From_7_1,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 7 && bc.Y == 4));
Magic Number,Chess.Test,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BishopTest.cs,Returns_7_4_From_7_1,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 7 && bc.Y == 4));
Magic Number,Chess.Test,PathMaker_GetPathToDestination_Given_TwoCoordinates_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PathMaker_GetPathToDestination_Given_TwoCoordinates_Should.cs,Return_7_Spaces,The following statement contains a magic number: var target = new PathMaker(BoardCoordinate.For(1' 1)' BoardCoordinate.For(8' 1));
Magic Number,Chess.Test,PathMaker_GetPathToDestination_Given_TwoCoordinates_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PathMaker_GetPathToDestination_Given_TwoCoordinates_Should.cs,Return_7_Spaces,The following statement contains a magic number: Assert.AreEqual<int>(7' target.GetPathToDestination().Count());
Magic Number,Chess.Test,PathMaker_GetPathToDestination_Given_TwoCoordinates_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PathMaker_GetPathToDestination_Given_TwoCoordinates_Should.cs,Return_Empty_Collection_For_11_And_23,The following statement contains a magic number: var destination = BoardCoordinate.For(2' 3);
Magic Number,Chess.Test,PathMaker_GetPathToDestination_Given_TwoCoordinates_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PathMaker_GetPathToDestination_Given_TwoCoordinates_Should.cs,Return_Empty_Collection_For_11_And_23,The following statement contains a magic number: var destination = BoardCoordinate.For(2' 3);
Magic Number,Chess.Test,PathMaker_GetPathToDestination_Given_TwoCoordinates_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PathMaker_GetPathToDestination_Given_TwoCoordinates_Should.cs,Return_Single_Point_For_Single_Move,The following statement contains a magic number: var origin = BoardCoordinate.For(4' 8);
Magic Number,Chess.Test,PathMaker_GetPathToDestination_Given_TwoCoordinates_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PathMaker_GetPathToDestination_Given_TwoCoordinates_Should.cs,Return_Single_Point_For_Single_Move,The following statement contains a magic number: var origin = BoardCoordinate.For(4' 8);
Magic Number,Chess.Test,PathMaker_GetPathToDestination_Given_TwoCoordinates_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PathMaker_GetPathToDestination_Given_TwoCoordinates_Should.cs,Return_Single_Point_For_Single_Move,The following statement contains a magic number: var destination = BoardCoordinate.For(4' 7);
Magic Number,Chess.Test,PathMaker_GetPathToDestination_Given_TwoCoordinates_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PathMaker_GetPathToDestination_Given_TwoCoordinates_Should.cs,Return_Single_Point_For_Single_Move,The following statement contains a magic number: var destination = BoardCoordinate.For(4' 7);
Magic Number,Chess.Test,PathMaker_GetPathToDestination_Given_TwoCoordinates_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PathMaker_GetPathToDestination_Given_TwoCoordinates_Should.cs,Return_Single_Point_For_Single_Move,The following statement contains a magic number: Assert.IsTrue(path.First().Matches(4' 7));
Magic Number,Chess.Test,PathMaker_GetPathToDestination_Given_TwoCoordinates_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PathMaker_GetPathToDestination_Given_TwoCoordinates_Should.cs,Return_Single_Point_For_Single_Move,The following statement contains a magic number: Assert.IsTrue(path.First().Matches(4' 7));
Magic Number,Chess.Test,PiecePositioner_Given_NormalSizedBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PiecePositioner_Given_NormalSizedBoard_Should.cs,Set_The_Pawns_At_Position_7_To_Be_Player2,The following statement contains a magic number: var firstPawnOnTheLeft = TheBoard.GetPiece(BoardCoordinate.For(1' 7));
Magic Number,Chess.Test,PiecePositioner_Given_NormalSizedBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PiecePositioner_Given_NormalSizedBoard_Should.cs,Throw_Argument_Exception_For_OutOfBounds_Row_To_SetupStandardPawns,The following statement contains a magic number: ExtendedAssert.Throws<ArgumentException>(() => Target.SetupStandardPawns(9)' "row");
Magic Number,Chess.Test,IsCoordinateValidForBoardSize,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardCoordinateTest.cs,Returns_False_For_X_Less_Than_Zero,The following statement contains a magic number: var coordinate = new BoardCoordinate(-12' 2);
Magic Number,Chess.Test,IsCoordinateValidForBoardSize,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardCoordinateTest.cs,Returns_False_For_X_Less_Than_Zero,The following statement contains a magic number: var coordinate = new BoardCoordinate(-12' 2);
Magic Number,Chess.Test,IsCoordinateValidForBoardSize,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardCoordinateTest.cs,Returns_False_For_X_Less_Than_Zero,The following statement contains a magic number: Assert.IsFalse(coordinate.IsCoordinateValidForBoardSize(5));
Magic Number,Chess.Test,IsCoordinateValidForBoardSize,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardCoordinateTest.cs,Returns_False_For_Y_Less_Than_Zero,The following statement contains a magic number: var coordinate = new BoardCoordinate(1' -23);
Magic Number,Chess.Test,IsCoordinateValidForBoardSize,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardCoordinateTest.cs,Returns_False_For_Y_Less_Than_Zero,The following statement contains a magic number: Assert.IsFalse(coordinate.IsCoordinateValidForBoardSize(8));
Magic Number,Chess.Test.BoardTests,Board_AddPiece_Given_EmptyBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_AddPiece_Given_EmptyBoard_Should.cs,Not_Throw_Exception_When_Adding_A_Piece_To_An_Unoccupied_Square,The following statement contains a magic number: Target.AddPiece(new Pawn()' new BoardCoordinate(2' 1));
Magic Number,Chess.Test.BoardTests,Board_AddPiece_Given_EmptyBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_AddPiece_Given_EmptyBoard_Should.cs,Throw_Exception_When_BoardCoordinate_Has_Larger_X_Value_Than_Board_Size,The following statement contains a magic number: var coordinate = new BoardCoordinate(9' 1);
Magic Number,Chess.Test.BoardTests,Board_AddPiece_Given_EmptyBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_AddPiece_Given_EmptyBoard_Should.cs,Throw_Exception_When_BoardCoordinate_Has_Larger_Y_Value_Than_Board_Size,The following statement contains a magic number: var coordinate = new BoardCoordinate(1' 9);
Magic Number,Chess.Test.BoardTests,Board_AddPiece_Given_EmptyBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_AddPiece_Given_EmptyBoard_Should.cs,Throw_Exception_When_BoardCoordinate_Has_Zero_X_Value,The following statement contains a magic number: var coordinate = new BoardCoordinate(0' 3);
Magic Number,Chess.Test.BoardTests,Board_AddPiece_Given_EmptyBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_AddPiece_Given_EmptyBoard_Should.cs,Accept_Rook_As_Argument_For_Piece,The following statement contains a magic number: var coordinate = new BoardCoordinate(1' 2);
Magic Number,Chess.Test.BoardTests,Board_AddPiece_Given_EmptyBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_AddPiece_Given_EmptyBoard_Should.cs,Throw_Exception_On_Null_Arguments,The following statement contains a magic number: ExtendedAssert.Throws<ArgumentNullException>(() => Target.AddPiece(null' BoardCoordinate.For(2' 3)));
Magic Number,Chess.Test.BoardTests,Board_AddPiece_Given_EmptyBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_AddPiece_Given_EmptyBoard_Should.cs,Throw_Exception_On_Null_Arguments,The following statement contains a magic number: ExtendedAssert.Throws<ArgumentNullException>(() => Target.AddPiece(null' BoardCoordinate.For(2' 3)));
Magic Number,Chess.Test.BoardTests,Board_AddPiece_Given_EmptyBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_AddPiece_Given_EmptyBoard_Should.cs,Result_In_Valid_Piece_At_9_9_When_BoardSize_Is_9,The following statement contains a magic number: Target = new Board(9);
Magic Number,Chess.Test.BoardTests,Board_AddPiece_Given_EmptyBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_AddPiece_Given_EmptyBoard_Should.cs,Result_In_Valid_Piece_At_9_9_When_BoardSize_Is_9,The following statement contains a magic number: Target.AddPiece(new Rook()' BoardCoordinate.For(9' 9));
Magic Number,Chess.Test.BoardTests,Board_AddPiece_Given_EmptyBoard_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_AddPiece_Given_EmptyBoard_Should.cs,Result_In_Valid_Piece_At_9_9_When_BoardSize_Is_9,The following statement contains a magic number: Target.AddPiece(new Rook()' BoardCoordinate.For(9' 9));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,BeforeEachTest,The following statement contains a magic number: positioner.SetupStandardPieces(8' false);
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Should_Return_Rook_Moves_Containing_1_2,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.Matches(1' 2)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Should_Return_Rook_Moves_Not_Containing_2_1,The following statement contains a magic number: Assert.IsFalse(moves.Any(bc => bc.Matches(2' 1)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Should_Return_King_Moves_Containing_5_2,The following statement contains a magic number: var moves = Target.GetMovesFrom(BoardCoordinate.For(5' 1));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Should_Return_King_Moves_Containing_5_2,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.Matches(5' 2)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Should_Return_King_Moves_Containing_5_2,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.Matches(5' 2)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Empty_For_Bishop_After_Blocking_Pawns_Are_Added,The following statement contains a magic number: Target.AddPiece(new Pawn()' BoardCoordinate.For(2' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Empty_For_Bishop_After_Blocking_Pawns_Are_Added,The following statement contains a magic number: Target.AddPiece(new Pawn()' BoardCoordinate.For(2' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Empty_For_Bishop_After_Blocking_Pawns_Are_Added,The following statement contains a magic number: Target.AddPiece(new Pawn()' BoardCoordinate.For(4' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Empty_For_Bishop_After_Blocking_Pawns_Are_Added,The following statement contains a magic number: Target.AddPiece(new Pawn()' BoardCoordinate.For(4' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Empty_For_Bishop_After_Blocking_Pawns_Are_Added,The following statement contains a magic number: var moves = Target.GetMovesFrom(BoardCoordinate.For(3' 1));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Moves_For_Bishop_That_Is_Not_Blocked,The following statement contains a magic number: Target.AddPiece(new Pawn()' BoardCoordinate.For(2' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Moves_For_Bishop_That_Is_Not_Blocked,The following statement contains a magic number: Target.AddPiece(new Pawn()' BoardCoordinate.For(2' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Moves_For_Bishop_That_Is_Not_Blocked,The following statement contains a magic number: var moves = Target.GetMovesFrom(BoardCoordinate.For(3' 1));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_NonEmpty_For_Bishop_At_3_8,The following statement contains a magic number: var moves = Target.GetMovesFrom(BoardCoordinate.For(3' 8));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_NonEmpty_For_Bishop_At_3_8,The following statement contains a magic number: var moves = Target.GetMovesFrom(BoardCoordinate.For(3' 8));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Empty_For_Bishop_at_3_8_When_Blocked,The following statement contains a magic number: Target.AddPiece(new Pawn(false)' BoardCoordinate.For(2' 7));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Empty_For_Bishop_at_3_8_When_Blocked,The following statement contains a magic number: Target.AddPiece(new Pawn(false)' BoardCoordinate.For(2' 7));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Empty_For_Bishop_at_3_8_When_Blocked,The following statement contains a magic number: Target.AddPiece(new Pawn(false)' BoardCoordinate.For(4' 7));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Empty_For_Bishop_at_3_8_When_Blocked,The following statement contains a magic number: Target.AddPiece(new Pawn(false)' BoardCoordinate.For(4' 7));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Empty_For_Bishop_at_3_8_When_Blocked,The following statement contains a magic number: var moves = Target.GetMovesFrom(BoardCoordinate.For(3' 8));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Return_Empty_For_Bishop_at_3_8_When_Blocked,The following statement contains a magic number: var moves = Target.GetMovesFrom(BoardCoordinate.For(3' 8));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Allow_Rook_At_11_To_Move_To_Capture_Rook_At_18,The following statement contains a magic number: Assert.IsTrue(moves.Any(m => m.Matches(1' 8)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Not_Allow_Rook_At_11_To_Capture_Rook_At_18_When_A_Pawn_Is_In_Front_Of_It,The following statement contains a magic number: Target.AddPiece(new Pawn(false)' BoardCoordinate.For(1' 7));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_ChessboardSetupWithoutPawns_Should.cs,Not_Allow_Rook_At_11_To_Capture_Rook_At_18_When_A_Pawn_Is_In_Front_Of_It,The following statement contains a magic number: Assert.IsFalse(moves.Any(m => m.Matches(1' 8)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_NormalChessboardSetup_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_NormalChessboardSetup_Should.cs,Return_A_Set_Of_Moves_For_A_Pawn_Containing_The_Space_One_Ahead,The following statement contains a magic number: var moves = Target.GetMovesFrom(new BoardCoordinate(1' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_NormalChessboardSetup_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_NormalChessboardSetup_Should.cs,Return_A_Set_Of_Moves_For_A_Pawn_Containing_The_Space_One_Ahead,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.Matches(1' 3)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_NormalChessboardSetup_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_NormalChessboardSetup_Should.cs,Return_A_Set_Of_Moves_For_A_Pawn_Containing_Space_Two_Ahead,The following statement contains a magic number: var moves = Target.GetMovesFrom(new BoardCoordinate(1' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_NormalChessboardSetup_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_NormalChessboardSetup_Should.cs,Return_A_Set_Of_Moves_For_A_Pawn_Containing_Space_Two_Ahead,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.Matches(1' 4)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_NormalChessboardSetup_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_NormalChessboardSetup_Should.cs,Return_Empty_Set_For_Rook_At_8_1,The following statement contains a magic number: var moves = Target.GetMovesFrom(BoardCoordinate.For(8' 1));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_NormalChessboardSetup_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_NormalChessboardSetup_Should.cs,Return_Empty_Set_For_Rook_At_8_8,The following statement contains a magic number: Assert.IsFalse(Target.GetMovesFrom(BoardCoordinate.For(8' 8)).Any());
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_NormalChessboardSetup_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_NormalChessboardSetup_Should.cs,Return_Empty_Set_For_Rook_At_8_8,The following statement contains a magic number: Assert.IsFalse(Target.GetMovesFrom(BoardCoordinate.For(8' 8)).Any());
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_NormalChessboardSetup_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_NormalChessboardSetup_Should.cs,Return_Set_With_33_For_Knight_At_21,The following statement contains a magic number: Assert.IsTrue(MovesForLeftWhiteKnight.Any(bc => bc.Matches(3' 3)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_NormalChessboardSetup_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_NormalChessboardSetup_Should.cs,Return_Set_With_33_For_Knight_At_21,The following statement contains a magic number: Assert.IsTrue(MovesForLeftWhiteKnight.Any(bc => bc.Matches(3' 3)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_NormalChessboardSetup_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_NormalChessboardSetup_Should.cs,Return_Set_With_13_For_Knight_At_21,The following statement contains a magic number: Assert.IsTrue(MovesForLeftWhiteKnight.Any(bc => bc.Matches(1' 3)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_NormalChessboardSetup_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_NormalChessboardSetup_Should.cs,Not_Return_42_For_Knight_At_21,The following statement contains a magic number: Assert.IsFalse(MovesForLeftWhiteKnight.Any(bc => bc.Matches(4' 2)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_NormalChessboardSetup_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_NormalChessboardSetup_Should.cs,Not_Return_42_For_Knight_At_21,The following statement contains a magic number: Assert.IsFalse(MovesForLeftWhiteKnight.Any(bc => bc.Matches(4' 2)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_Pawn_Advanced_To_End_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_Pawn_Advanced_To_End_Should.cs,BeforeEachTest,The following statement contains a magic number: var startingPosition = BoardCoordinate.For(1' 7);
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_Pawn_Advanced_To_End_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_Pawn_Advanced_To_End_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.MovePiece(startingPosition' BoardCoordinate.For(1' 8));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_Pawn_Advanced_To_End_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_Pawn_Advanced_To_End_Should.cs,Not_Bomb,The following statement contains a magic number: Assert.AreEqual<int>(0' Target.GetMovesFrom(BoardCoordinate.For(1' 8)).Count());
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.AddPiece(new Rook(false)' BoardCoordinate.For(3' 1));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.AddPiece(new Rook(false)' BoardCoordinate.For(5' 1));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.AddPiece(new Bishop(false)' BoardCoordinate.For(3' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.AddPiece(new Bishop(false)' BoardCoordinate.For(3' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.AddPiece(new Bishop(false)' BoardCoordinate.For(4' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.AddPiece(new Bishop(false)' BoardCoordinate.For(4' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.AddPiece(new Pawn(false)' BoardCoordinate.For(5' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.AddPiece(new Pawn(false)' BoardCoordinate.For(5' 2));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.AddPiece(new Queen()' BoardCoordinate.For(4' 1));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,Not_Return_Move_At_1_1,The following statement contains a magic number: var moves = Target.GetMovesFrom(BoardCoordinate.For(4' 1));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,Not_Return_Move_At_2_3,The following statement contains a magic number: var moves = Target.GetMovesFrom(BoardCoordinate.For(4' 1));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,Not_Return_Move_At_2_3,The following statement contains a magic number: Assert.IsFalse(moves.Any(bc => bc.Matches(2' 3)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_SurroundedQueen_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_SurroundedQueen_Should.cs,Not_Return_Move_At_2_3,The following statement contains a magic number: Assert.IsFalse(moves.Any(bc => bc.Matches(2' 3)));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_GivenChessBoardWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_GivenChessBoardWithoutPawns_Should.cs,BeforeEachTest,The following statement contains a magic number: DestinationCoordinate = BoardCoordinate.For(1' 2);
Magic Number,Chess.Test.BoardTests,Board_MovePiece_GivenChessBoardWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_GivenChessBoardWithoutPawns_Should.cs,Throw_Exception_For_Out_Of_Bounds_Origin_Argument,The following statement contains a magic number: ExtendedAssert.Throws<ArgumentException>(() => Target.MovePiece(BoardCoordinate.For(1' 9)' BoardCoordinate.For(2' 2)));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_GivenChessBoardWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_GivenChessBoardWithoutPawns_Should.cs,Throw_Exception_For_Out_Of_Bounds_Origin_Argument,The following statement contains a magic number: ExtendedAssert.Throws<ArgumentException>(() => Target.MovePiece(BoardCoordinate.For(1' 9)' BoardCoordinate.For(2' 2)));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_GivenChessBoardWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_GivenChessBoardWithoutPawns_Should.cs,Throw_Exception_For_Out_Of_Bounds_Origin_Argument,The following statement contains a magic number: ExtendedAssert.Throws<ArgumentException>(() => Target.MovePiece(BoardCoordinate.For(1' 9)' BoardCoordinate.For(2' 2)));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_GivenChessBoardWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_GivenChessBoardWithoutPawns_Should.cs,Throw_Exception_For_OutOfBounds_Destination_Argument,The following statement contains a magic number: ExtendedAssert.Throws<ArgumentException>(() => Target.MovePiece(OriginCoordinate' BoardCoordinate.For(10' 10)));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_GivenChessBoardWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_GivenChessBoardWithoutPawns_Should.cs,Throw_Exception_For_OutOfBounds_Destination_Argument,The following statement contains a magic number: ExtendedAssert.Throws<ArgumentException>(() => Target.MovePiece(OriginCoordinate' BoardCoordinate.For(10' 10)));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.MovePiece(BoardCoordinate.For(2' 7)' BoardCoordinate.For(2' 5));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.MovePiece(BoardCoordinate.For(2' 7)' BoardCoordinate.For(2' 5));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.MovePiece(BoardCoordinate.For(2' 7)' BoardCoordinate.For(2' 5));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.MovePiece(BoardCoordinate.For(2' 7)' BoardCoordinate.For(2' 5));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.MovePiece(BoardCoordinate.For(2' 5)' BoardCoordinate.For(2' 4));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.MovePiece(BoardCoordinate.For(2' 5)' BoardCoordinate.For(2' 4));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.MovePiece(BoardCoordinate.For(2' 5)' BoardCoordinate.For(2' 4));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,BeforeEachTest,The following statement contains a magic number: Target.MovePiece(BoardCoordinate.For(2' 5)' BoardCoordinate.For(2' 4));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,Set_BlackPawns_CanPerformEnPassant_For_WhitePiece_At_14,The following statement contains a magic number: Target.MovePiece(BoardCoordinate.For(1' 2)' BoardCoordinate.For(1' 4));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,Set_BlackPawns_CanPerformEnPassant_For_WhitePiece_At_14,The following statement contains a magic number: Target.MovePiece(BoardCoordinate.For(1' 2)' BoardCoordinate.For(1' 4));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,Set_BlackPawns_CanPerformEnPassant_For_WhitePiece_At_14,The following statement contains a magic number: var piece = Target.GetPiece(BoardCoordinate.For(2' 4)) as Pawn;
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,Set_BlackPawns_CanPerformEnPassant_For_WhitePiece_At_14,The following statement contains a magic number: var piece = Target.GetPiece(BoardCoordinate.For(2' 4)) as Pawn;
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,Set_BlackPawns_CanPerformEnPassant_For_WhitePiece_At_14,The following statement contains a magic number: Assert.IsTrue(piece.CanPerformEnPassantOn(BoardCoordinate.For(1' 4)));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,Not_Set_BlackPawns_CanPerformEnPassantOn_For_Square_At_34,The following statement contains a magic number: Target.MovePiece(BoardCoordinate.For(1' 2)' BoardCoordinate.For(1' 4));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,Not_Set_BlackPawns_CanPerformEnPassantOn_For_Square_At_34,The following statement contains a magic number: Target.MovePiece(BoardCoordinate.For(1' 2)' BoardCoordinate.For(1' 4));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,Not_Set_BlackPawns_CanPerformEnPassantOn_For_Square_At_34,The following statement contains a magic number: var piece = Target.GetPiece(BoardCoordinate.For(2' 4)) as Pawn;
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,Not_Set_BlackPawns_CanPerformEnPassantOn_For_Square_At_34,The following statement contains a magic number: var piece = Target.GetPiece(BoardCoordinate.For(2' 4)) as Pawn;
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,Not_Set_BlackPawns_CanPerformEnPassantOn_For_Square_At_34,The following statement contains a magic number: Assert.IsFalse(piece.CanPerformEnPassantOn(BoardCoordinate.For(3' 4)));
Magic Number,Chess.Test.BoardTests,Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_MovePiece_Given_Chessboard_With_EnPassantScenarios_Should.cs,Not_Set_BlackPawns_CanPerformEnPassantOn_For_Square_At_34,The following statement contains a magic number: Assert.IsFalse(piece.CanPerformEnPassantOn(BoardCoordinate.For(3' 4)));
Magic Number,Chess.Test.BoardTests,Board_RemovePiece_GivenChessBoardWithoutPawns_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_RemovePiece_GivenChessBoardWithoutPawns_Should.cs,Throw_Exception_When_Called_With_1_2,The following statement contains a magic number: ExtendedAssert.Throws<ArgumentException>(() => Target.RemovePiece(BoardCoordinate.For(1' 2)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_WhiteKing_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_WhiteKing_Should.cs,Not_Return_Castling_Option_When_King_Has_Moved,The following statement contains a magic number: Assert.IsFalse(kingMoves.Any(bc => bc.Matches(7' 1)));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_WhiteKing_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_WhiteKing_Should.cs,Not_Allow_King_To_Move_Into_Check,The following statement contains a magic number: Target.AddPiece(new Queen(false)' BoardCoordinate.For(4' 8));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_WhiteKing_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_WhiteKing_Should.cs,Not_Allow_King_To_Move_Into_Check,The following statement contains a magic number: Target.AddPiece(new Queen(false)' BoardCoordinate.For(4' 8));
Magic Number,Chess.Test.BoardTests,Board_GetMovesFrom_Given_WhiteKing_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\BoardTests\Board_GetMovesFrom_Given_WhiteKing_Should.cs,Not_Allow_King_To_Move_Into_Check,The following statement contains a magic number: Assert.IsFalse(kingMoves.Any(bc => bc.X == 4));
Magic Number,Chess.Test.CastlingStatusCheckerTests,When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\CastlingStatusCheckerTests\When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should.cs,Return_Only_WhiteCastleMoveKingSide_When_Black_Queen_Threatens_4_1,The following statement contains a magic number: Board.AddPiece(new Queen(false)' BoardCoordinate.For(4' 8));
Magic Number,Chess.Test.CastlingStatusCheckerTests,When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\CastlingStatusCheckerTests\When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should.cs,Return_Only_WhiteCastleMoveKingSide_When_Black_Queen_Threatens_4_1,The following statement contains a magic number: Board.AddPiece(new Queen(false)' BoardCoordinate.For(4' 8));
Magic Number,Chess.Test.CastlingStatusCheckerTests,When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\CastlingStatusCheckerTests\When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should.cs,Return_Two_CastlingMoves_For_Black_King_StartSquare_When_Nothing_Has_Moved,The following statement contains a magic number: Assert.AreEqual<int>(2' movesForBlackKing.Count());
Magic Number,Chess.Test.CastlingStatusCheckerTests,When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\CastlingStatusCheckerTests\When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should.cs,Return_Two_CastlingMoves_For_KingStartSquare_When_Nothing_Has_Moved,The following statement contains a magic number: Assert.AreEqual<int>(2' movesForWhiteKing.Count());
Magic Number,Chess.Test.CastlingStatusCheckerTests,When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\CastlingStatusCheckerTests\When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should.cs,Return_EmptyEnumeration_For_Unoccupied_Square,The following statement contains a magic number: var movesForUnoccupied = Target.GetCastlingMovesFor(BoardCoordinate.For(3' 3));
Magic Number,Chess.Test.CastlingStatusCheckerTests,When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\CastlingStatusCheckerTests\When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should.cs,Return_EmptyEnumeration_For_Unoccupied_Square,The following statement contains a magic number: var movesForUnoccupied = Target.GetCastlingMovesFor(BoardCoordinate.For(3' 3));
Magic Number,Chess.Test.CastlingStatusCheckerTests,When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\CastlingStatusCheckerTests\When_Determining_Castling_Status_On_KingAndRookOnly_Board_CastlingStatusChecker_Should.cs,Return_WhiteCastleMoveKingsSide_Only_When_QueensRook_Is_Blocked,The following statement contains a magic number: Board.AddPiece(new Knight()' BoardCoordinate.For(2' 1));
Magic Number,Chess.Test.PawnTests,Pawn_GetMovesFrom_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_GetMovesFrom_For_BlackPawn_Should.cs,BeforeEachTest,The following statement contains a magic number: MovesFrom27 = Target.GetMovesFrom(BoardCoordinate.For(2' 7));
Magic Number,Chess.Test.PawnTests,Pawn_GetMovesFrom_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_GetMovesFrom_For_BlackPawn_Should.cs,BeforeEachTest,The following statement contains a magic number: MovesFrom27 = Target.GetMovesFrom(BoardCoordinate.For(2' 7));
Magic Number,Chess.Test.PawnTests,Pawn_GetMovesFrom_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_GetMovesFrom_For_BlackPawn_Should.cs,Return_Collection_Containing_26,The following statement contains a magic number: Assert.IsTrue(MovesFrom27.Any(bc => bc.Matches(2' 6)));
Magic Number,Chess.Test.PawnTests,Pawn_GetMovesFrom_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_GetMovesFrom_For_BlackPawn_Should.cs,Return_Collection_Containing_26,The following statement contains a magic number: Assert.IsTrue(MovesFrom27.Any(bc => bc.Matches(2' 6)));
Magic Number,Chess.Test.PawnTests,Pawn_IsCaptureAllowed_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_IsCaptureAllowed_For_BlackPawn_Should.cs,Return_True_For_16_From_27,The following statement contains a magic number: Assert.IsTrue(IsCaptureAllowedFrom27(1' 6));
Magic Number,Chess.Test.PawnTests,Pawn_IsCaptureAllowed_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_IsCaptureAllowed_For_BlackPawn_Should.cs,Return_False_For_18_From_27,The following statement contains a magic number: Assert.IsFalse(IsCaptureAllowedFrom27(1' 8));
Magic Number,Chess.Test.PawnTests,Pawn_IsCaptureAllowed_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_IsCaptureAllowed_For_BlackPawn_Should.cs,IsCaptureAllowedFrom27,The following statement contains a magic number: return Target.IsCaptureAllowed(BoardCoordinate.For(2' 7)' BoardCoordinate.For(xCoordinate' yCoordinate));
Magic Number,Chess.Test.PawnTests,Pawn_IsCaptureAllowed_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_IsCaptureAllowed_For_BlackPawn_Should.cs,IsCaptureAllowedFrom27,The following statement contains a magic number: return Target.IsCaptureAllowed(BoardCoordinate.For(2' 7)' BoardCoordinate.For(xCoordinate' yCoordinate));
Magic Number,Chess.Test.PawnTests,Pawn_IsNonCaptureAllowed_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_IsNonCaptureAllowed_For_BlackPawn_Should.cs,Return_True_For_26_From_27,The following statement contains a magic number: Assert.IsTrue(IsNonCaptureAllowedFor27(2' 6));
Magic Number,Chess.Test.PawnTests,Pawn_IsNonCaptureAllowed_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_IsNonCaptureAllowed_For_BlackPawn_Should.cs,Return_True_For_26_From_27,The following statement contains a magic number: Assert.IsTrue(IsNonCaptureAllowedFor27(2' 6));
Magic Number,Chess.Test.PawnTests,Pawn_IsNonCaptureAllowed_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_IsNonCaptureAllowed_For_BlackPawn_Should.cs,Return_True_For_25_From_27,The following statement contains a magic number: Assert.IsTrue(IsNonCaptureAllowedFor27(2' 5));
Magic Number,Chess.Test.PawnTests,Pawn_IsNonCaptureAllowed_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_IsNonCaptureAllowed_For_BlackPawn_Should.cs,Return_True_For_25_From_27,The following statement contains a magic number: Assert.IsTrue(IsNonCaptureAllowedFor27(2' 5));
Magic Number,Chess.Test.PawnTests,Pawn_IsNonCaptureAllowed_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_IsNonCaptureAllowed_For_BlackPawn_Should.cs,Return_False_For_27_If_HasMoved_IsTrue,The following statement contains a magic number: Assert.IsFalse(IsNonCaptureAllowedFor27(2' 5));
Magic Number,Chess.Test.PawnTests,Pawn_IsNonCaptureAllowed_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_IsNonCaptureAllowed_For_BlackPawn_Should.cs,Return_False_For_27_If_HasMoved_IsTrue,The following statement contains a magic number: Assert.IsFalse(IsNonCaptureAllowedFor27(2' 5));
Magic Number,Chess.Test.PawnTests,Pawn_IsNonCaptureAllowed_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_IsNonCaptureAllowed_For_BlackPawn_Should.cs,IsNonCaptureAllowedFor27,The following statement contains a magic number: return Target.IsNonCaptureAllowed(BoardCoordinate.For(2' 7)' BoardCoordinate.For(xCoordinate' yCoordinate));
Magic Number,Chess.Test.PawnTests,Pawn_IsNonCaptureAllowed_For_BlackPawn_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\Pawn_IsNonCaptureAllowed_For_BlackPawn_Should.cs,IsNonCaptureAllowedFor27,The following statement contains a magic number: return Target.IsNonCaptureAllowed(BoardCoordinate.For(2' 7)' BoardCoordinate.For(xCoordinate' yCoordinate));
Magic Number,Chess.Test.PawnTests,PawnTest,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,BeforeEachTest,The following statement contains a magic number: MovesFrom22 = Target.GetMovesFrom(new BoardCoordinate(2' 2));
Magic Number,Chess.Test.PawnTests,PawnTest,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,BeforeEachTest,The following statement contains a magic number: MovesFrom22 = Target.GetMovesFrom(new BoardCoordinate(2' 2));
Magic Number,Chess.Test.PawnTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_2_3_As_One_Result_When_Passed_2_2,The following statement contains a magic number: Assert.IsTrue(MovesFrom22.Any(bc => bc.X == 2 && bc.Y == 3));
Magic Number,Chess.Test.PawnTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_2_3_As_One_Result_When_Passed_2_2,The following statement contains a magic number: Assert.IsTrue(MovesFrom22.Any(bc => bc.X == 2 && bc.Y == 3));
Magic Number,Chess.Test.PawnTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_2_4__As_One_Result_When_Passed_2_2_When_Piece_Has_Not_Moved,The following statement contains a magic number: Assert.IsTrue(MovesFrom22.Any(bc => bc.X == 2 && bc.Y == 4));
Magic Number,Chess.Test.PawnTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_2_4__As_One_Result_When_Passed_2_2_When_Piece_Has_Not_Moved,The following statement contains a magic number: Assert.IsTrue(MovesFrom22.Any(bc => bc.X == 2 && bc.Y == 4));
Magic Number,Chess.Test.PawnTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Does_Not_Return_2_4_When_Passed_2_2_If_Piece_Has_Already_Moved,The following statement contains a magic number: Assert.IsFalse(MovesFrom22.Any(bc => bc.X == 2 && bc.Y == 4));
Magic Number,Chess.Test.PawnTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Does_Not_Return_2_4_When_Passed_2_2_If_Piece_Has_Already_Moved,The following statement contains a magic number: Assert.IsFalse(MovesFrom22.Any(bc => bc.X == 2 && bc.Y == 4));
Magic Number,Chess.Test.PawnTests,IsCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_Square_In_Front_Of_Pawn,The following statement contains a magic number: Assert.IsFalse(CanCaptureFrom22(2' 3));
Magic Number,Chess.Test.PawnTests,IsCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_Square_In_Front_Of_Pawn,The following statement contains a magic number: Assert.IsFalse(CanCaptureFrom22(2' 3));
Magic Number,Chess.Test.PawnTests,IsCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_True_For_LeftOne_Up_One,The following statement contains a magic number: Assert.IsTrue(CanCaptureFrom22(1' 3));
Magic Number,Chess.Test.PawnTests,IsCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_Some_Oblique_Square,The following statement contains a magic number: Assert.IsFalse(CanCaptureFrom22(6' 3));
Magic Number,Chess.Test.PawnTests,IsCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_Some_Oblique_Square,The following statement contains a magic number: Assert.IsFalse(CanCaptureFrom22(6' 3));
Magic Number,Chess.Test.PawnTests,IsCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_True_For_RightOne_UpOne,The following statement contains a magic number: Assert.IsTrue(CanCaptureFrom22(3' 3));
Magic Number,Chess.Test.PawnTests,IsCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_True_For_RightOne_UpOne,The following statement contains a magic number: Assert.IsTrue(CanCaptureFrom22(3' 3));
Magic Number,Chess.Test.PawnTests,IsCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_RightOne_UpTwo,The following statement contains a magic number: Assert.IsFalse(CanCaptureFrom22(3' 4));
Magic Number,Chess.Test.PawnTests,IsCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_RightOne_UpTwo,The following statement contains a magic number: Assert.IsFalse(CanCaptureFrom22(3' 4));
Magic Number,Chess.Test.PawnTests,IsCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,CanCaptureFrom22,The following statement contains a magic number: return Target.IsCaptureAllowed(BoardCoordinate.For(2' 2)' BoardCoordinate.For(xCoordinate' yCoordinate));
Magic Number,Chess.Test.PawnTests,IsCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,CanCaptureFrom22,The following statement contains a magic number: return Target.IsCaptureAllowed(BoardCoordinate.For(2' 2)' BoardCoordinate.For(xCoordinate' yCoordinate));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_RightOne_UpOne,The following statement contains a magic number: Assert.IsFalse(CanMakeNonCaptureMoveFrom22(3' 3));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_RightOne_UpOne,The following statement contains a magic number: Assert.IsFalse(CanMakeNonCaptureMoveFrom22(3' 3));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_RightOne_UpTwo,The following statement contains a magic number: Assert.IsFalse(CanMakeNonCaptureMoveFrom22(3' 4));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_RightOne_UpTwo,The following statement contains a magic number: Assert.IsFalse(CanMakeNonCaptureMoveFrom22(3' 4));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_True_For_UpOne,The following statement contains a magic number: Assert.IsTrue(CanMakeNonCaptureMoveFrom22(2' 3));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_True_For_UpOne,The following statement contains a magic number: Assert.IsTrue(CanMakeNonCaptureMoveFrom22(2' 3));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_True_For_UpTwo,The following statement contains a magic number: Assert.IsTrue(CanMakeNonCaptureMoveFrom22(2' 4));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_True_For_UpTwo,The following statement contains a magic number: Assert.IsTrue(CanMakeNonCaptureMoveFrom22(2' 4));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_UpTwo_After_Pawn_HasMoved,The following statement contains a magic number: Assert.IsFalse(CanMakeNonCaptureMoveFrom22(2' 4));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_UpTwo_After_Pawn_HasMoved,The following statement contains a magic number: Assert.IsFalse(CanMakeNonCaptureMoveFrom22(2' 4));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_UpThree,The following statement contains a magic number: Assert.IsFalse(CanMakeNonCaptureMoveFrom22(2' 5));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,Returns_False_For_UpThree,The following statement contains a magic number: Assert.IsFalse(CanMakeNonCaptureMoveFrom22(2' 5));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,CanMakeNonCaptureMoveFrom22,The following statement contains a magic number: return Target.IsNonCaptureAllowed(BoardCoordinate.For(2' 2)' BoardCoordinate.For(xCoordinate' yCoordinate));
Magic Number,Chess.Test.PawnTests,IsNonCaptureAllowed,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\PawnTests\PawnTest.cs,CanMakeNonCaptureMoveFrom22,The following statement contains a magic number: return Target.IsNonCaptureAllowed(BoardCoordinate.For(2' 2)' BoardCoordinate.For(xCoordinate' yCoordinate));
Magic Number,Chess.Test.KingTests,KingTest,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,BeforeEachTest,The following statement contains a magic number: MovesFrom3_3 = Target.GetMovesFrom(new BoardCoordinate(3' 3));
Magic Number,Chess.Test.KingTests,KingTest,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,BeforeEachTest,The following statement contains a magic number: MovesFrom3_3 = Target.GetMovesFrom(new BoardCoordinate(3' 3));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Returns_1_2_For_1_1,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 1 && bc.Y == 2));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Returns_2_2_For_1_1,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 2 && bc.Y == 2));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Returns_2_2_For_1_1,The following statement contains a magic number: Assert.IsTrue(moves.Any(bc => bc.X == 2 && bc.Y == 2));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Returns_3_4_For_3_3,The following statement contains a magic number: Assert.IsTrue(MovesFrom3_3.Any(bc => bc.X == 3 && bc.Y == 4));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Returns_3_4_For_3_3,The following statement contains a magic number: Assert.IsTrue(MovesFrom3_3.Any(bc => bc.X == 3 && bc.Y == 4));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Returns_3_2_For_3_3,The following statement contains a magic number: Assert.IsTrue(MovesFrom3_3.Any(bc => bc.X == 3 && bc.Y == 2));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Returns_3_2_For_3_3,The following statement contains a magic number: Assert.IsTrue(MovesFrom3_3.Any(bc => bc.X == 3 && bc.Y == 2));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Returns_2_3_For_3_3,The following statement contains a magic number: Assert.IsTrue(MovesFrom3_3.Any(bc => bc.X == 2 && bc.Y == 3));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Returns_2_3_For_3_3,The following statement contains a magic number: Assert.IsTrue(MovesFrom3_3.Any(bc => bc.X == 2 && bc.Y == 3));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Does_Not_Return_3_5_For_3_3,The following statement contains a magic number: Assert.IsFalse(MovesFrom3_3.Any(bc => bc.X == 3 && bc.Y == 5));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Does_Not_Return_3_5_For_3_3,The following statement contains a magic number: Assert.IsFalse(MovesFrom3_3.Any(bc => bc.X == 3 && bc.Y == 5));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Has_Five_Moves_When_Starting_At_Back_End_Of_Board,The following statement contains a magic number: var moves = Target.GetMovesFrom(BoardCoordinate.For(4' 8));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Has_Five_Moves_When_Starting_At_Back_End_Of_Board,The following statement contains a magic number: var moves = Target.GetMovesFrom(BoardCoordinate.For(4' 8));
Magic Number,Chess.Test.KingTests,GetMovesFrom,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\KingTests\KingTest.cs,Has_Five_Moves_When_Starting_At_Back_End_Of_Board,The following statement contains a magic number: Assert.AreEqual<int>(5' moves.Count());
Magic Number,Chess.Test.ThreatEvaluatorTests,When_Evaluating_Threatened_Squares_Threat_Evaluator_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\ThreatEvaluatorTests\When_Evaluating_Threatened_Squares_Threat_Evaluator_Should.cs,Return_True_For_Square_Adjacent_To_Opposing_Rook,The following statement contains a magic number: Board.AddPiece(new Rook(true)' BoardCoordinate.For(1' 2));
Magic Number,Chess.Test.ThreatEvaluatorTests,When_Evaluating_Threatened_Squares_Threat_Evaluator_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\ThreatEvaluatorTests\When_Evaluating_Threatened_Squares_Threat_Evaluator_Should.cs,Return_False_For_Square_KiddyCorner_To_Rook,The following statement contains a magic number: var isSquareThreatened = Target.IsThreatened(BoardCoordinate.For(2' 2)' false);
Magic Number,Chess.Test.ThreatEvaluatorTests,When_Evaluating_Threatened_Squares_Threat_Evaluator_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\ThreatEvaluatorTests\When_Evaluating_Threatened_Squares_Threat_Evaluator_Should.cs,Return_False_For_Square_KiddyCorner_To_Rook,The following statement contains a magic number: var isSquareThreatened = Target.IsThreatened(BoardCoordinate.For(2' 2)' false);
Magic Number,Chess.Test.ThreatEvaluatorTests,When_Evaluating_Threatened_Squares_Threat_Evaluator_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\ThreatEvaluatorTests\When_Evaluating_Threatened_Squares_Threat_Evaluator_Should.cs,Return_True_For_Square_KiddyCorner_To_King,The following statement contains a magic number: Board.AddPiece(new King(true)' BoardCoordinate.For(5' 1));
Magic Number,Chess.Test.ThreatEvaluatorTests,When_Evaluating_Threatened_Squares_Threat_Evaluator_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\ThreatEvaluatorTests\When_Evaluating_Threatened_Squares_Threat_Evaluator_Should.cs,Return_True_For_Square_KiddyCorner_To_King,The following statement contains a magic number: var isSquareThreatened = Target.IsThreatened(BoardCoordinate.For(4' 2)' false);
Magic Number,Chess.Test.ThreatEvaluatorTests,When_Evaluating_Threatened_Squares_Threat_Evaluator_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\ThreatEvaluatorTests\When_Evaluating_Threatened_Squares_Threat_Evaluator_Should.cs,Return_True_For_Square_KiddyCorner_To_King,The following statement contains a magic number: var isSquareThreatened = Target.IsThreatened(BoardCoordinate.For(4' 2)' false);
Magic Number,Chess.Test.ThreatEvaluatorTests,When_Evaluating_Threatened_Squares_Threat_Evaluator_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\ThreatEvaluatorTests\When_Evaluating_Threatened_Squares_Threat_Evaluator_Should.cs,Return_False_For_Square_Directly_In_Front_Of_Pawn,The following statement contains a magic number: Board.AddPiece(new Pawn(true)' BoardCoordinate.For(1' 2));
Magic Number,Chess.Test.ThreatEvaluatorTests,When_Evaluating_Threatened_Squares_Threat_Evaluator_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\ThreatEvaluatorTests\When_Evaluating_Threatened_Squares_Threat_Evaluator_Should.cs,Return_False_For_Square_Directly_In_Front_Of_Pawn,The following statement contains a magic number: var isSquareThreatened = Target.IsThreatened(BoardCoordinate.For(1' 3)' false);
Magic Number,Chess.Test.ThreatEvaluatorTests,When_Evaluating_Threatened_Squares_Threat_Evaluator_Should,D:\research\architectureSmells\repos\erikdietrich_ChessTDD\Chess.Test\ThreatEvaluatorTests\When_Evaluating_Threatened_Squares_Threat_Evaluator_Should.cs,Return_False_For_Pieces_Of_Same_Color,The following statement contains a magic number: Board.AddPiece(new Rook(true)' BoardCoordinate.For(1' 2));
