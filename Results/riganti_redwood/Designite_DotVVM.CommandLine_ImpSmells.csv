Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DotVVM.CommandLine.Commands.Logic,ApiClientManager,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\ApiClientManager.cs,AddApiClient,The method has 5 parameters. Parameters: swaggerFile' namespace' csharpOutput' typescriptOutput' project
Long Parameter List,DotVVM.CommandLine.Commands.Logic,DotvvmCSharpParameterModel,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\CSharp\DotvvmCSharpParameterModel.cs,DotvvmCSharpParameterModel,The method has 8 parameters. Parameters: parameterName' variableName' typeName' parameter' allParameters' settings' generator' operation
Long Parameter List,DotVVM.CommandLine.Commands.Logic,DotvvmTypeScriptParameterModel,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\TypeScript\DotvvmTypeScriptParameterModel.cs,DotvvmTypeScriptParameterModel,The method has 8 parameters. Parameters: parameterName' variableName' typeName' parameter' allParameters' settings' generator' operation
Long Parameter List,DotVVM.CommandLine,NamingHelpers,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\NamingHelpers.cs,GetPathFromNamespace,The method has 5 parameters. Parameters: namespaceName' className' rootNamespace' fileExtension' projectDirectory
Long Statement,DotVVM.CommandLine.Commands.Implementation,AddControlCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddControlCommand.cs,CreateControl,The length of the statement  "            var codeBehindClassNamespace = NamingHelpers.GetNamespaceFromPath(viewPath' dotvvmProjectMetadata.ProjectDirectory' dotvvmProjectMetadata.RootNamespace); " is 153.
Long Statement,DotVVM.CommandLine.Commands.Implementation,AddMasterPageCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddMasterPageCommand.cs,Handle,The length of the statement  "            if (PathHelpers.IsCurrentDirectory(dotvvmProjectMetadata.ProjectDirectory) && !name.Contains("/") && !name.Contains("\\")) " is 122.
Long Statement,DotVVM.CommandLine.Commands.Implementation,AddMasterPageCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddMasterPageCommand.cs,Handle,The length of the statement  "                if (PathHelpers.IsCurrentDirectory(dotvvmProjectMetadata.ProjectDirectory) && !masterPage.Contains("/") && !masterPage.Contains("\\")) " is 134.
Long Statement,DotVVM.CommandLine.Commands.Implementation,AddMasterPageCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddMasterPageCommand.cs,CreatePage,The length of the statement  "            var viewModelNamespace = NamingHelpers.GetNamespaceFromPath(viewModelPath' dotvvmProjectMetadata.ProjectDirectory' dotvvmProjectMetadata.RootNamespace); " is 152.
Long Statement,DotVVM.CommandLine.Commands.Implementation,AddNswagCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddNswagCommand.cs,TryConsumeArgs,The length of the statement  "                // ahhh' yes' you are not drunk' this function that should only detect if it can be handled has side effects on the args parameter... " is 133.
Long Statement,DotVVM.CommandLine.Commands.Implementation,AddPageCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddPageCommand.cs,Handle,The length of the statement  "            if (PathHelpers.IsCurrentDirectory(dotvvmProjectMetadata.ProjectDirectory) && !name.Contains("/") && !name.Contains("\\")) " is 122.
Long Statement,DotVVM.CommandLine.Commands.Implementation,AddPageCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddPageCommand.cs,Handle,The length of the statement  "                if (PathHelpers.IsCurrentDirectory(dotvvmProjectMetadata.ProjectDirectory) && !masterPage.Contains("/") && !masterPage.Contains("\\")) " is 134.
Long Statement,DotVVM.CommandLine.Commands.Implementation,AddPageCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddPageCommand.cs,CreatePage,The length of the statement  "            var viewModelNamespace = NamingHelpers.GetNamespaceFromPath(viewModelPath' dotvvmProjectMetadata.ProjectDirectory' dotvvmProjectMetadata.RootNamespace); " is 152.
Long Statement,DotVVM.CommandLine.Commands.Implementation,AddViewModelCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddViewModelCommand.cs,Handle,The length of the statement  "            if (PathHelpers.IsCurrentDirectory(dotvvmProjectMetadata.ProjectDirectory) && !name.Contains("/") && !name.Contains("\\")) " is 122.
Long Statement,DotVVM.CommandLine.Commands.Implementation,AddViewModelCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddViewModelCommand.cs,CreateViewModel,The length of the statement  "            var viewModelNamespace = NamingHelpers.GetNamespaceFromPath(viewModelPath' dotvvmProjectMetadata.ProjectDirectory' dotvvmProjectMetadata.RootNamespace); " is 152.
Long Statement,DotVVM.CommandLine.Commands.Implementation,GenerateUiTestStubCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\GenerateUiTestStubCommand.cs,Handle,The length of the statement  "                dotvvmProjectMetadata.UITestProjectPath = ConsoleHelpers.AskForValue($"Enter the path to the test project\n(relative to DotVVM project directory' e.g. '..\\{dotvvmProjectMetadata.ProjectName}.Tests'): "); " is 204.
Long Statement,DotVVM.CommandLine.Commands.Implementation,GenerateUiTestStubCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\GenerateUiTestStubCommand.cs,Handle,The length of the statement  "                    dotvvmProjectMetadata.UITestProjectRootNamespace = ConsoleHelpers.AskForValue("Enter the test project root namespace: "); " is 121.
Long Statement,DotVVM.CommandLine.Commands.Implementation,GenerateUiTestStubCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\GenerateUiTestStubCommand.cs,Handle,The length of the statement  "                var fullTypeName = dotvvmProjectMetadata.UITestProjectRootNamespace + "." + PathHelpers.CreateTypeNameFromPath(relativeTypeName); " is 129.
Long Statement,DotVVM.CommandLine.Commands.Implementation,RegenNswagCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\RegenNswagCommand.cs,Handle,The length of the statement  "                    dotvvmProjectMetadata.ApiClients.FirstOrDefault(a => a.CSharpClient == swaggerFile || a.TypescriptClient == swaggerFile); " is 121.
Long Statement,DotVVM.CommandLine.Commands.Logic,ApiClientManager,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\ApiClientManager.cs,RegenApiClient,The length of the statement  "                              + $"(typeof({definition.Namespace}.{(definition.GenerateWrapperClass || isSingleClient ? typeName : " ... your client wrapper class ...")})' " " is 142.
Long Statement,DotVVM.CommandLine.Commands.Logic,ApiClientManager,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\ApiClientManager.cs,RegenApiClient,The length of the statement  "                              + $"\"{(definition.CompileTypescript ? Path.ChangeExtension(definition.TypescriptClient' "js") : "... path to your compiled javascript")}\"' " " is 142.
Long Statement,DotVVM.CommandLine.Commands.Logic,ApiClientManager,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\ApiClientManager.cs,GenerateCSharp,The length of the statement  "            settings.CSharpGeneratorSettings.TemplateFactory = new DotvvmClientTemplateFactory(settings.CodeGeneratorSettings' new[] { " is 122.
Long Statement,DotVVM.CommandLine.Commands.Logic,ApiClientManager,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\ApiClientManager.cs,GenerateTS,The length of the statement  "            settings.TypeScriptGeneratorSettings.TemplateFactory = new DotvvmClientTemplateFactory(settings.CodeGeneratorSettings' new[] { " is 126.
Long Statement,DotVVM.CommandLine.Commands.Logic,ApiClientUtils,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\ApiClientUtils.cs,WrapInNamespace,The length of the statement  "            return "namespace " + definition.Namespace + " {\n    " + ConversionUtilities.Tab(baseClass' 1).TrimEnd('\n') + "\n    " + ConversionUtilities.Tab(typescript' 1).TrimEnd('\n') + "\n}\n"; " is 186.
Long Statement,DotVVM.CommandLine.Commands.Logic,ApiClientUtils,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\ApiClientUtils.cs,PopulateOperationIds,The length of the statement  "                            a => a.Operation.Responses.Any(r => HttpUtilities.IsSuccessStatusCode(r.Key) && r.Value.ActualResponseSchema != null && r.Value.ActualResponseSchema.Type == JsonObjectType.Array)).ToArray(); " is 190.
Long Statement,DotVVM.CommandLine.Commands.Logic,ApiClientUtils,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\ApiClientUtils.cs,GetOperationNameFromPath,The length of the statement  "            return path + operation.Method.ToString()[0].ToString().ToUpper() + operation.Method.ToString().Substring(1).ToLower() + ConversionUtilities.ConvertToUpperCamelCase(lastPathSegment.Replace('_'' '-')' false); " is 207.
Long Statement,DotVVM.CommandLine.Commands.Logic,DotvvmSwaggerToCSharpClientGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\CSharp\DotvvmSwaggerToCSharpClientGenerator.cs,CreateOperationModel,The length of the statement  "            model.AutoRefreshKey = string.Join("/"' document.Operations.Single(o => o.Operation.OperationId == operation.OperationId).Operation.Tags); " is 138.
Long Statement,DotVVM.CommandLine.Commands.Logic,DotvvmSwaggerToCSharpClientGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\CSharp\DotvvmSwaggerToCSharpClientGenerator.cs,HandleAsObjectParameters,The length of the statement  "            var parameters = model.QueryParameters.Where(p => p.Name.Contains('.') && p.Schema.ExtensionData.ContainsKey(ApiConstants.DotvvmWrapperTypeKey)); " is 145.
Long Statement,DotVVM.CommandLine.Commands.Logic,DotvvmSwaggerToCSharpClientGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\CSharp\DotvvmSwaggerToCSharpClientGenerator.cs,HandleAsObjectParameters,The length of the statement  "                var newParameter = new DotvvmCSharpParameterModel(group.Key' group.Key' typeName' swaggerParameter' operation.Parameters' settings.CodeGeneratorSettings' this' model) " is 166.
Long Statement,DotVVM.CommandLine.Commands.Logic,DotvvmSwaggerToTypeScriptClientGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\TypeScript\DotvvmSwaggerToTypeScriptClientGenerator.cs,HandleAsObjectParameters,The length of the statement  "            var parameters = model.QueryParameters.Where(p => p.Name.Contains('.') && p.Schema.ExtensionData.ContainsKey(ApiConstants.DotvvmWrapperTypeKey)); " is 145.
Long Statement,DotVVM.CommandLine.Commands.Logic,DotvvmSwaggerToTypeScriptClientGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\TypeScript\DotvvmSwaggerToTypeScriptClientGenerator.cs,HandleAsObjectParameters,The length of the statement  "                var newParameter = new DotvvmTypeScriptParameterModel(group.Key' group.Key' "any"' swaggerParameter' operation.Parameters' settings' this' model) " is 145.
Long Statement,DotVVM.CommandLine.Commands.Logic,DotvvmSwaggerToTypeScriptClientGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\TypeScript\DotvvmSwaggerToTypeScriptClientGenerator.cs,HandleAsObjectParameters,The length of the statement  "                    ((DotvvmTypeScriptParameterModel)p).CustomInitializer = $"let {p.VariableName} = ({group.Key} !== null && typeof {group.Key} === 'object') ? {p.Name} : null;"; " is 159.
Long Statement,DotVVM.CommandLine.Commands.Templates,ControlCodeBehindTemplateBase,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Templates\ControlCodeBehindTemplate.cs,Write,The length of the statement  "            textToAppend = textToAppend.Replace(global::System.Environment.NewLine' (global::System.Environment.NewLine + this.currentIndentField)); " is 136.
Long Statement,DotVVM.CommandLine.Commands.Templates,ControlTemplateBase,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Templates\ControlTemplate.cs,Write,The length of the statement  "            textToAppend = textToAppend.Replace(global::System.Environment.NewLine' (global::System.Environment.NewLine + this.currentIndentField)); " is 136.
Long Statement,DotVVM.CommandLine.Commands.Templates,PageTemplateBase,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Templates\PageTemplate.cs,Write,The length of the statement  "            textToAppend = textToAppend.Replace(global::System.Environment.NewLine' (global::System.Environment.NewLine + this.currentIndentField)); " is 136.
Long Statement,DotVVM.CommandLine.Commands.Templates,ViewModelTemplateBase,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Templates\ViewModelTemplate.cs,Write,The length of the statement  "            textToAppend = textToAppend.Replace(global::System.Environment.NewLine' (global::System.Environment.NewLine + this.currentIndentField)); " is 136.
Complex Conditional,DotVVM.CommandLine.Commands.Logic,CustomPropertyNameGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\CustomPropertyNameGenerator.cs,Generate,The conditional expression  "!property.Name.All(c => char.IsLetterOrDigit(c) || c == '.' || c == '-' || c == '_' || c == '+')"  is complex.
Magic Number,DotVVM.CommandLine.Commands.Implementation,AddControlCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddControlCommand.cs,TryConsumeArgs,The following statement contains a magic number: args.Consume(2);
Magic Number,DotVVM.CommandLine.Commands.Implementation,AddMasterPageCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddMasterPageCommand.cs,TryConsumeArgs,The following statement contains a magic number: args.Consume(2);
Magic Number,DotVVM.CommandLine.Commands.Implementation,AddNswagCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddNswagCommand.cs,TryConsumeArgs,The following statement contains a magic number: args.Consume(2);
Magic Number,DotVVM.CommandLine.Commands.Implementation,AddNswagCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddNswagCommand.cs,Handle,The following statement contains a magic number: var csharpFile = args[2] ??                  throw new InvalidCommandUsageException("You have to specify the C# output file.");
Magic Number,DotVVM.CommandLine.Commands.Implementation,AddNswagCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddNswagCommand.cs,Handle,The following statement contains a magic number: var typescriptFile = args[3] ??                  throw new InvalidCommandUsageException("You have to specify the TypeScript output file.");
Magic Number,DotVVM.CommandLine.Commands.Implementation,AddPageCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddPageCommand.cs,TryConsumeArgs,The following statement contains a magic number: args.Consume(2);
Magic Number,DotVVM.CommandLine.Commands.Implementation,AddViewModelCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\AddViewModelCommand.cs,TryConsumeArgs,The following statement contains a magic number: args.Consume(2);
Magic Number,DotVVM.CommandLine.Commands.Implementation,GenerateUiTestStubCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\GenerateUiTestStubCommand.cs,TryConsumeArgs,The following statement contains a magic number: args.Consume(2);
Magic Number,DotVVM.CommandLine.Commands.Implementation,RegenNswagCommand,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Implementation\RegenNswagCommand.cs,TryConsumeArgs,The following statement contains a magic number: args.Consume(2);
Magic Number,DotVVM.CommandLine.Commands.Logic,ApiClientUtils,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\ApiClientUtils.cs,PopulateOperationIds,The following statement contains a magic number: var i = 2;
Magic Number,DotVVM.CommandLine.Commands.Logic,CustomOperationNameGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\CustomOperationNameGenerator.cs,GetOperationName,The following statement contains a magic number: return "GetAll" + operationName.Substring(3);
Magic Number,DotVVM.CommandLine.Commands.Logic,CustomOperationNameGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\CustomOperationNameGenerator.cs,GetClientName,The following statement contains a magic number: return segments.Length >= 2 ? segments[0] : string.Empty;
Magic Number,DotVVM.CommandLine.Commands.Logic,CustomOperationNameGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.CommandLine\Commands\Logic\CustomOperationNameGenerator.cs,GetOperationName,The following statement contains a magic number: segments.Length >= 2
