Implementation smell,Namespace,Class,File,Method,Description
Magic Number,DotVVM.Samples.BasicSamples.Api.Common.DataStore,Database,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Samples.BasicSamples.Api.Common\DataStore\Database.cs,SeedData,The following statement contains a magic number: Companies2 = new Faker<Company<bool>>()                .RuleFor(c => c.Id' f => companyId++)                .RuleFor(c => c.Name' f => f.Company.CompanyName())                .RuleFor(c => c.Owner' f => f.Name.FullName())                .RuleFor(c => c.Department' f => f.PickRandom(true' false))                .Generate(10)                .ToList();
Magic Number,DotVVM.Samples.BasicSamples.Api.Common.DataStore,Database,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Samples.BasicSamples.Api.Common\DataStore\Database.cs,SeedData,The following statement contains a magic number: var orderItemsFaker = new Faker<OrderItem>()                  .RuleFor(i => i.Id' f => orderItemId++)                  .RuleFor(i => i.Amount' f => f.Random.Decimal(0' 1000))                  .RuleFor(i => i.Discount' f => f.Random.Decimal(0' 50))                  .RuleFor(i => i.IsOnStock' f => f.Random.Bool())                  .RuleFor(i => i.Text' f => f.Lorem.Lines(1));
Magic Number,DotVVM.Samples.BasicSamples.Api.Common.DataStore,Database,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Samples.BasicSamples.Api.Common\DataStore\Database.cs,SeedData,The following statement contains a magic number: var orderItemsFaker = new Faker<OrderItem>()                  .RuleFor(i => i.Id' f => orderItemId++)                  .RuleFor(i => i.Amount' f => f.Random.Decimal(0' 1000))                  .RuleFor(i => i.Discount' f => f.Random.Decimal(0' 50))                  .RuleFor(i => i.IsOnStock' f => f.Random.Bool())                  .RuleFor(i => i.Text' f => f.Lorem.Lines(1));
Magic Number,DotVVM.Samples.BasicSamples.Api.Common.DataStore,Database,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Samples.BasicSamples.Api.Common\DataStore\Database.cs,SeedData,The following statement contains a magic number: var ordersFaker = new Faker<Order>()                  .RuleFor(o => o.Id' f => orderId++)                  .RuleFor(o => o.CompanyId' f => f.PickRandom(Companies.Select(c => c.Id)))                  .RuleFor(o => o.Date' f => f.Date.Between(new DateTime(2010' 1' 1)' new DateTime(2012' 1' 1)))                  .RuleFor(o => o.Number' f => f.Random.AlphaNumeric(8))                  .RuleFor(o => o.OrderItems' f => orderItemsFaker.Generate(f.Random.Number(1' 10)));
Magic Number,DotVVM.Samples.BasicSamples.Api.Common.DataStore,Database,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Samples.BasicSamples.Api.Common\DataStore\Database.cs,SeedData,The following statement contains a magic number: var ordersFaker = new Faker<Order>()                  .RuleFor(o => o.Id' f => orderId++)                  .RuleFor(o => o.CompanyId' f => f.PickRandom(Companies.Select(c => c.Id)))                  .RuleFor(o => o.Date' f => f.Date.Between(new DateTime(2010' 1' 1)' new DateTime(2012' 1' 1)))                  .RuleFor(o => o.Number' f => f.Random.AlphaNumeric(8))                  .RuleFor(o => o.OrderItems' f => orderItemsFaker.Generate(f.Random.Number(1' 10)));
Magic Number,DotVVM.Samples.BasicSamples.Api.Common.DataStore,Database,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Samples.BasicSamples.Api.Common\DataStore\Database.cs,SeedData,The following statement contains a magic number: var ordersFaker = new Faker<Order>()                  .RuleFor(o => o.Id' f => orderId++)                  .RuleFor(o => o.CompanyId' f => f.PickRandom(Companies.Select(c => c.Id)))                  .RuleFor(o => o.Date' f => f.Date.Between(new DateTime(2010' 1' 1)' new DateTime(2012' 1' 1)))                  .RuleFor(o => o.Number' f => f.Random.AlphaNumeric(8))                  .RuleFor(o => o.OrderItems' f => orderItemsFaker.Generate(f.Random.Number(1' 10)));
Magic Number,DotVVM.Samples.BasicSamples.Api.Common.DataStore,Database,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Samples.BasicSamples.Api.Common\DataStore\Database.cs,SeedData,The following statement contains a magic number: var ordersFaker = new Faker<Order>()                  .RuleFor(o => o.Id' f => orderId++)                  .RuleFor(o => o.CompanyId' f => f.PickRandom(Companies.Select(c => c.Id)))                  .RuleFor(o => o.Date' f => f.Date.Between(new DateTime(2010' 1' 1)' new DateTime(2012' 1' 1)))                  .RuleFor(o => o.Number' f => f.Random.AlphaNumeric(8))                  .RuleFor(o => o.OrderItems' f => orderItemsFaker.Generate(f.Random.Number(1' 10)));
Magic Number,DotVVM.Samples.BasicSamples.Api.Common.DataStore,Database,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Samples.BasicSamples.Api.Common\DataStore\Database.cs,SeedData,The following statement contains a magic number: Companies = companiesFaker.Generate(35).ToList();
Magic Number,DotVVM.Samples.BasicSamples.Api.Common.DataStore,Database,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Samples.BasicSamples.Api.Common\DataStore\Database.cs,SeedData,The following statement contains a magic number: Orders = ordersFaker.Generate(300).ToList();
Magic Number,DotVVM.Samples.BasicSamples.Api.Common.DataStore,DataGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Samples.BasicSamples.Api.Common\DataStore\DataGenerator.cs,GetHalfToMaxRandom,The following statement contains a magic number: return r.Next(maximum / 2' maximum + 1);
Magic Number,DotVVM.Samples.BasicSamples.Api.Common.DataStore,DataGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Samples.BasicSamples.Api.Common\DataStore\DataGenerator.cs,GetChar,The following statement contains a magic number: return chars[r.Next(chars.Length / 2)];
Magic Number,DotVVM.Samples.BasicSamples.Api.Common.DataStore,DataGenerator,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Samples.BasicSamples.Api.Common\DataStore\DataGenerator.cs,GetBoolean,The following statement contains a magic number: return r.NextDouble() >= 0.5;
