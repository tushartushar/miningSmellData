Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DotVVM.Framework.PerfTests,Program,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Framework.PerfTests\Program.cs,TestForever,The length of the statement  "            Console.WriteLine($"testing {testMethod.Method.DeclaringType.Name}.{testMethod.Method.Name}' {repeat} times per measurement"); " is 126.
Magic Number,DotVVM.Framework.PerfTests,Program,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Framework.PerfTests\Program.cs,Main,The following statement contains a magic number: Console.WriteLine($"VM size: {t.LastViewModel.Length/1024.0/1024.0}MB");
Magic Number,DotVVM.Framework.PerfTests,Program,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Framework.PerfTests\Program.cs,Main,The following statement contains a magic number: Console.WriteLine($"VM size: {t.LastViewModel.Length/1024.0/1024.0}MB");
Magic Number,DotVVM.Framework.PerfTests,SerializerTests,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Framework.PerfTests\SerializerTests.cs,CreateViewModel,The following statement contains a magic number: var random = new Random(42);
Magic Number,DotVVM.Framework.PerfTests,SerializerTests,C:\research\architectureSmells\repos\riganti_redwood\src\DotVVM.Framework.PerfTests\SerializerTests.cs,CreateViewModel,The following statement contains a magic number: return new ViewModel              {                  Nested = level > 0 ? CreateViewModel(level - 1) : null'                  Nested2 = level > 0 ? CreateViewModel(level - 1) : null'                  Array = Enumerable.Range(0' 10).Select(i =>                      new ViewModel2                      {                          MyProperty = Guid.NewGuid().ToString()'                          MyProperty2 = Guid.NewGuid().ToString()'                          MyProperty3 = Guid.NewGuid().ToString()'                          MyProperty4 = Guid.NewGuid().ToString()'                          MyProperty5 = Guid.NewGuid().ToString()'                          MyProperty6 = Guid.NewGuid().ToString()'                          MyProperty7 = Guid.NewGuid().ToString()'                          MyProperty8 = Guid.NewGuid().ToString()'                          MyProperty9 = Guid.NewGuid().ToString()'                          MyProperty10 = Guid.NewGuid().ToString()'                          MyProperty11 = random.Next()'                          MyProperty12 = random.Next()'                          MyProperty13 = random.Next()'                          MyProperty14 = random.Next()'                          MyProperty15 = random.NextDouble()'                          MyProperty16 = random.Next()'                          MyProperty17 = random.Next()'                          MyProperty18 = DateTime.Today.AddSeconds(random.Next())'                          MyProperty19 = DateTime.Today.AddMinutes(random.Next())'                      }).ToArray()              };
