Implementation smell,Namespace,Class,File,Method,Description
Long Statement,swag.ViewModels,GeneratorViewModel,C:\repos\riganti_redwood\src\WebApiResearch\swag\ViewModels\GeneratorViewModel.cs,GenerateCSharp,The length of the statement  "            settings.CSharpGeneratorSettings.PropertyNameGenerator = new MyPropertyNameGenerator(c => ConversionUtilities.ConvertToUpperCamelCase(c' true)); " is 144.
Long Statement,swag.ViewModels,GeneratorViewModel,C:\repos\riganti_redwood\src\WebApiResearch\swag\ViewModels\GeneratorViewModel.cs,GenerateTS,The length of the statement  "            settings.TypeScriptGeneratorSettings.PropertyNameGenerator = new MyPropertyNameGenerator(c => ConversionUtilities.ConvertToLowerCamelCase(c' true)); " is 148.
Long Statement,swag.ViewModels,GeneratorViewModel,C:\repos\riganti_redwood\src\WebApiResearch\swag\ViewModels\GeneratorViewModel.cs,PopulateOperationIds,The length of the statement  "                            a => a.Operation.Responses.Any(r => HttpUtilities.IsSuccessStatusCode(r.Key) && r.Value.ActualResponseSchema != null && r.Value.ActualResponseSchema.Type == JsonObjectType.Array)).ToArray(); " is 190.
Long Statement,swag.ViewModels,GeneratorViewModel,C:\repos\riganti_redwood\src\WebApiResearch\swag\ViewModels\GeneratorViewModel.cs,GetOperationNameFromPath,The length of the statement  "            return path + operation.Method.ToString()[0].ToString().ToUpper() + operation.Method.ToString().Substring(1).ToLower() + ConversionUtilities.ConvertToUpperCamelCase(lastPathSegment.Replace('_'' '-')' false); " is 207.
Complex Conditional,swag.ViewModels,MyPropertyNameGenerator,C:\repos\riganti_redwood\src\WebApiResearch\swag\ViewModels\GeneratorViewModel.cs,Generate,The conditional expression  "!property.Name.All(c => char.IsLetterOrDigit(c) || c == '.' || c == '-' || c == '_' || c == '+')"  is complex.
Magic Number,swag.DataStore,DataGenerator,C:\repos\riganti_redwood\src\WebApiResearch\swag\DataStore\DataGenerator.cs,GetHalfToMaxRandom,The following statement contains a magic number: return r.Next(maximum / 2' maximum + 1);
Magic Number,swag.DataStore,DataGenerator,C:\repos\riganti_redwood\src\WebApiResearch\swag\DataStore\DataGenerator.cs,GetChar,The following statement contains a magic number: if ((index == 0 && casing == Casing.FirstUpper) || (casing == Casing.AllUpper))              {                  return chars[r.Next(chars.Length / 2)];              }              else if (casing == Casing.FirstUpper || casing == Casing.AllLower)              {                  return chars[chars.Length / 2 + r.Next(chars.Length / 2)];              }              else              {                  return chars[r.Next(chars.Length)];              }
Magic Number,swag.DataStore,DataGenerator,C:\repos\riganti_redwood\src\WebApiResearch\swag\DataStore\DataGenerator.cs,GetChar,The following statement contains a magic number: if ((index == 0 && casing == Casing.FirstUpper) || (casing == Casing.AllUpper))              {                  return chars[r.Next(chars.Length / 2)];              }              else if (casing == Casing.FirstUpper || casing == Casing.AllLower)              {                  return chars[chars.Length / 2 + r.Next(chars.Length / 2)];              }              else              {                  return chars[r.Next(chars.Length)];              }
Magic Number,swag.DataStore,DataGenerator,C:\repos\riganti_redwood\src\WebApiResearch\swag\DataStore\DataGenerator.cs,GetChar,The following statement contains a magic number: if ((index == 0 && casing == Casing.FirstUpper) || (casing == Casing.AllUpper))              {                  return chars[r.Next(chars.Length / 2)];              }              else if (casing == Casing.FirstUpper || casing == Casing.AllLower)              {                  return chars[chars.Length / 2 + r.Next(chars.Length / 2)];              }              else              {                  return chars[r.Next(chars.Length)];              }
Magic Number,swag.DataStore,DataGenerator,C:\repos\riganti_redwood\src\WebApiResearch\swag\DataStore\DataGenerator.cs,GetBoolean,The following statement contains a magic number: return r.NextDouble() >= 0.5;
Magic Number,swag,Startup,C:\repos\riganti_redwood\src\WebApiResearch\swag\Startup.cs,SeedDatabase,The following statement contains a magic number: database.Companies = generator.GetCollection(7' i => new Company()                  {                      Id = i'                      Name = Faker.Company.Name()'                      Owner = Faker.Name.FullName(Faker.NameFormats.WithPrefix)                  })                  .ToList();
Magic Number,swag,Startup,C:\repos\riganti_redwood\src\WebApiResearch\swag\Startup.cs,SeedDatabase,The following statement contains a magic number: database.Orders = generator.GetCollection(300' i => new Order()                  {                      Id = i'                      CompanyId = generator.GetCollectionItem(database.Companies).Id'                      Date = generator.GetDate(TimeSpan.FromDays(500)' TimeSpan.FromDays(0))'                      Number = generator.GetString(8' Casing.AllUpper)'                      OrderItems = generator.GetCollection(10' c => new OrderItem()                      {                          Id = c'                          Amount = generator.GetDecimal(0' 1000)'                          Discount = generator.GetBoolean() ? generator.GetDecimal(0' 50) : (decimal?) null'                          IsOnStock = generator.GetBoolean()'                          Text = generator.GetWords(10' 8' Casing.AllLower)                      })                  })                  .ToList();
Magic Number,swag,Startup,C:\repos\riganti_redwood\src\WebApiResearch\swag\Startup.cs,SeedDatabase,The following statement contains a magic number: database.Orders = generator.GetCollection(300' i => new Order()                  {                      Id = i'                      CompanyId = generator.GetCollectionItem(database.Companies).Id'                      Date = generator.GetDate(TimeSpan.FromDays(500)' TimeSpan.FromDays(0))'                      Number = generator.GetString(8' Casing.AllUpper)'                      OrderItems = generator.GetCollection(10' c => new OrderItem()                      {                          Id = c'                          Amount = generator.GetDecimal(0' 1000)'                          Discount = generator.GetBoolean() ? generator.GetDecimal(0' 50) : (decimal?) null'                          IsOnStock = generator.GetBoolean()'                          Text = generator.GetWords(10' 8' Casing.AllLower)                      })                  })                  .ToList();
Magic Number,swag,Startup,C:\repos\riganti_redwood\src\WebApiResearch\swag\Startup.cs,SeedDatabase,The following statement contains a magic number: database.Orders = generator.GetCollection(300' i => new Order()                  {                      Id = i'                      CompanyId = generator.GetCollectionItem(database.Companies).Id'                      Date = generator.GetDate(TimeSpan.FromDays(500)' TimeSpan.FromDays(0))'                      Number = generator.GetString(8' Casing.AllUpper)'                      OrderItems = generator.GetCollection(10' c => new OrderItem()                      {                          Id = c'                          Amount = generator.GetDecimal(0' 1000)'                          Discount = generator.GetBoolean() ? generator.GetDecimal(0' 50) : (decimal?) null'                          IsOnStock = generator.GetBoolean()'                          Text = generator.GetWords(10' 8' Casing.AllLower)                      })                  })                  .ToList();
Magic Number,swag,Startup,C:\repos\riganti_redwood\src\WebApiResearch\swag\Startup.cs,SeedDatabase,The following statement contains a magic number: database.Orders = generator.GetCollection(300' i => new Order()                  {                      Id = i'                      CompanyId = generator.GetCollectionItem(database.Companies).Id'                      Date = generator.GetDate(TimeSpan.FromDays(500)' TimeSpan.FromDays(0))'                      Number = generator.GetString(8' Casing.AllUpper)'                      OrderItems = generator.GetCollection(10' c => new OrderItem()                      {                          Id = c'                          Amount = generator.GetDecimal(0' 1000)'                          Discount = generator.GetBoolean() ? generator.GetDecimal(0' 50) : (decimal?) null'                          IsOnStock = generator.GetBoolean()'                          Text = generator.GetWords(10' 8' Casing.AllLower)                      })                  })                  .ToList();
Magic Number,swag,Startup,C:\repos\riganti_redwood\src\WebApiResearch\swag\Startup.cs,SeedDatabase,The following statement contains a magic number: database.Orders = generator.GetCollection(300' i => new Order()                  {                      Id = i'                      CompanyId = generator.GetCollectionItem(database.Companies).Id'                      Date = generator.GetDate(TimeSpan.FromDays(500)' TimeSpan.FromDays(0))'                      Number = generator.GetString(8' Casing.AllUpper)'                      OrderItems = generator.GetCollection(10' c => new OrderItem()                      {                          Id = c'                          Amount = generator.GetDecimal(0' 1000)'                          Discount = generator.GetBoolean() ? generator.GetDecimal(0' 50) : (decimal?) null'                          IsOnStock = generator.GetBoolean()'                          Text = generator.GetWords(10' 8' Casing.AllLower)                      })                  })                  .ToList();
Magic Number,swag,Startup,C:\repos\riganti_redwood\src\WebApiResearch\swag\Startup.cs,SeedDatabase,The following statement contains a magic number: database.Orders = generator.GetCollection(300' i => new Order()                  {                      Id = i'                      CompanyId = generator.GetCollectionItem(database.Companies).Id'                      Date = generator.GetDate(TimeSpan.FromDays(500)' TimeSpan.FromDays(0))'                      Number = generator.GetString(8' Casing.AllUpper)'                      OrderItems = generator.GetCollection(10' c => new OrderItem()                      {                          Id = c'                          Amount = generator.GetDecimal(0' 1000)'                          Discount = generator.GetBoolean() ? generator.GetDecimal(0' 50) : (decimal?) null'                          IsOnStock = generator.GetBoolean()'                          Text = generator.GetWords(10' 8' Casing.AllLower)                      })                  })                  .ToList();
Magic Number,swag,Startup,C:\repos\riganti_redwood\src\WebApiResearch\swag\Startup.cs,SeedDatabase,The following statement contains a magic number: database.Orders = generator.GetCollection(300' i => new Order()                  {                      Id = i'                      CompanyId = generator.GetCollectionItem(database.Companies).Id'                      Date = generator.GetDate(TimeSpan.FromDays(500)' TimeSpan.FromDays(0))'                      Number = generator.GetString(8' Casing.AllUpper)'                      OrderItems = generator.GetCollection(10' c => new OrderItem()                      {                          Id = c'                          Amount = generator.GetDecimal(0' 1000)'                          Discount = generator.GetBoolean() ? generator.GetDecimal(0' 50) : (decimal?) null'                          IsOnStock = generator.GetBoolean()'                          Text = generator.GetWords(10' 8' Casing.AllLower)                      })                  })                  .ToList();
Magic Number,swag,Startup,C:\repos\riganti_redwood\src\WebApiResearch\swag\Startup.cs,SeedDatabase,The following statement contains a magic number: database.Orders = generator.GetCollection(300' i => new Order()                  {                      Id = i'                      CompanyId = generator.GetCollectionItem(database.Companies).Id'                      Date = generator.GetDate(TimeSpan.FromDays(500)' TimeSpan.FromDays(0))'                      Number = generator.GetString(8' Casing.AllUpper)'                      OrderItems = generator.GetCollection(10' c => new OrderItem()                      {                          Id = c'                          Amount = generator.GetDecimal(0' 1000)'                          Discount = generator.GetBoolean() ? generator.GetDecimal(0' 50) : (decimal?) null'                          IsOnStock = generator.GetBoolean()'                          Text = generator.GetWords(10' 8' Casing.AllLower)                      })                  })                  .ToList();
Magic Number,swag.ViewModels,GeneratorViewModel,C:\repos\riganti_redwood\src\WebApiResearch\swag\ViewModels\GeneratorViewModel.cs,PopulateOperationIds,The following statement contains a magic number: void consolidateGroup(string name' SwaggerOperationDescription[] operations)              {                  if (operations.Count() == 1) return;                    // Append "All" if possible                  if (!name.EndsWith("All") && !d.Operations.Any(n => n.Operation.OperationId == name + "All"))                  {                      var arrayResponseOperations = operations.Where(                              a => a.Operation.Responses.Any(r => HttpUtilities.IsSuccessStatusCode(r.Key) && r.Value.ActualResponseSchema != null && r.Value.ActualResponseSchema.Type == JsonObjectType.Array)).ToArray();                        foreach (var op in arrayResponseOperations)                      {                          op.Operation.OperationId = name + "All";                      }                      if (arrayResponseOperations.Length > 0)                      {                          consolidateGroup(name + "All"' arrayResponseOperations);                          consolidateGroup(name' operations.Except(arrayResponseOperations).ToArray());                          return;                      }                  }                    // Add numbers                  var i = 2;                  foreach (var operation in operations.Skip(1))                  {                      while (d.Operations.Any(o => o.Operation.OperationId == name + i)) i++;                      operation.Operation.OperationId = name + i++;                  }              }
Magic Number,swag.ViewModels,CustomNameGenerator,C:\repos\riganti_redwood\src\WebApiResearch\swag\ViewModels\GeneratorViewModel.cs,GetOperationName,The following statement contains a magic number: if (hasOperationWithSameName)              {                  if (operationName.ToLowerInvariant().StartsWith("get"))                  {                      var isArrayResponse = operation.Responses.ContainsKey("200") &&                                            operation.Responses["200"].ActualResponseSchema != null &&                                            operation.Responses["200"].ActualResponseSchema.Type.HasFlag(JsonObjectType.Array);                        if (isArrayResponse)                          return "GetAll" + operationName.Substring(3);                  }              }
Magic Number,swag.ViewModels,CustomNameGenerator,C:\repos\riganti_redwood\src\WebApiResearch\swag\ViewModels\GeneratorViewModel.cs,GetClientName,The following statement contains a magic number: return segments.Length >= 2 ? segments[0] : string.Empty;
Magic Number,swag.ViewModels,CustomNameGenerator,C:\repos\riganti_redwood\src\WebApiResearch\swag\ViewModels\GeneratorViewModel.cs,GetOperationName,The following statement contains a magic number: if (segments.Length >= 2) segments = segments.Skip(1).ToArray();
