Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Psydpt.Business.Entities,TaggedPara,C:\repos\teswar_PsyDPT\Code\Psydpt.Business\Entities\TaggedSentence.cs,RemoveTags,The method has 6 parameters.
Long Parameter List,Psydpt.Business.Services,PredictionService,C:\repos\teswar_PsyDPT\Code\Psydpt.Business\Services\PredictionService.cs,Predict,The method has 6 parameters.
Long Statement,Psydpt.Business.Services,PredictionService,C:\repos\teswar_PsyDPT\Code\Psydpt.Business\Services\PredictionService.cs,Predict,The length of the statement  "	var predicationMatchs = _dataCatalog.DisordersRepo.Get ().Select (m => PerdictionMatch.Evaluate (taggedPgh' m)).Where (m => m.Matches != null && m.Matches.Count > 0).OrderByDescending (m => m.Matches.Count).ToList (); " is 217.
Long Statement,Psydpt.Business.Utility,Tagger,C:\repos\teswar_PsyDPT\Code\Psydpt.Business\Utility\Tagger.cs,TagParaghraph,The length of the statement  "			lastWordIndex = content.LastIndexOf (sentence.get (0).ToString ()' lastWordIndex) + sentence.get (0).ToString ().Length; " is 120.
Magic Number,Psydpt.Business.Entities,TaggedSentence,C:\repos\teswar_PsyDPT\Code\Psydpt.Business\Entities\TaggedSentence.cs,TaggedSentence,The following statement contains a magic number: foreach (string taggedWord in taggedSentence.Split (TAGGED_WORD_PAIR_SPLITTER.ToCharArray ())) {  	var items = taggedWord.Split (WORD_TAG_SPLITTER.ToCharArray ());  	if (items == null || items.Length < 2) {  		continue;  	}  	var tempTag = new Entities.Tag ();  	tempTag.Phrase = items [0];  	tempTag.Puntuation = items [1];  	tempTag.Index = Sentence.IndexOf (tempTag.Phrase' lastWordIndex);  	if (tempTag.Index >= 0) {  		lastWordIndex += tempTag.Phrase.Length;  	}  	List<Entities.Tag> tags = null;  	if (!Tags.ContainsKey (tempTag.Puntuation)) {  		Tags.Add (tempTag.Puntuation' new List<Entities.Tag> ());  	}  	tags = Tags [tempTag.Puntuation];  	tags.Add (tempTag);  }  
Magic Number,Psydpt.Business.Entities,TaggedSentence,C:\repos\teswar_PsyDPT\Code\Psydpt.Business\Entities\TaggedSentence.cs,TaggedSentence,The following statement contains a magic number: if (items == null || items.Length < 2) {  	continue;  }  
