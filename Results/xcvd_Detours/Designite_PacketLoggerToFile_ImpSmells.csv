Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,PacketLoggerToFile.Util,FunctionInfo,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\FunctionInfo.cs,FunctionInfo,The method has 6 parameters.
Long Statement,PacketLoggerToFile.Util,Hooks,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Hooks.cs,FindFunctions,The length of the statement  "		function.SetTarget (Marshal.GetDelegateForFunctionPointer (Scanner.FindPattern (function.Pattern' function.Offset)' function.TargetType)); " is 138.
Magic Number,PacketLoggerToFile.Util,Scanner,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Scanner.cs,FindPattern,The following statement contains a magic number: try {  	pattern = pattern.Replace ("-"' string.Empty);  	pattern = pattern.Replace (" "' string.Empty);  	if (buffer == null || buffer.Length == 0) {  		buffer = new byte[Size];  		Marshal.Copy (handle' buffer' 0' Size);  	}  	if (pattern.Length % 2 != 0) {  		return (IntPtr)(-1);  	}  	for (var i = 0; i < buffer.Length - (pattern.Length / 2); i++) {  		if (MaskCheck (i' pattern)) {  			return new IntPtr (handle.ToInt32 () + (i - offset));  		}  	}  	return (IntPtr)(-2);  }  catch {  	return (IntPtr)(-3);  }  
Magic Number,PacketLoggerToFile.Util,Scanner,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Scanner.cs,FindPattern,The following statement contains a magic number: try {  	pattern = pattern.Replace ("-"' string.Empty);  	pattern = pattern.Replace (" "' string.Empty);  	if (buffer == null || buffer.Length == 0) {  		buffer = new byte[Size];  		Marshal.Copy (handle' buffer' 0' Size);  	}  	if (pattern.Length % 2 != 0) {  		return (IntPtr)(-1);  	}  	for (var i = 0; i < buffer.Length - (pattern.Length / 2); i++) {  		if (MaskCheck (i' pattern)) {  			return new IntPtr (handle.ToInt32 () + (i - offset));  		}  	}  	return (IntPtr)(-2);  }  catch {  	return (IntPtr)(-3);  }  
Magic Number,PacketLoggerToFile.Util,Scanner,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Scanner.cs,FindPattern,The following statement contains a magic number: try {  	pattern = pattern.Replace ("-"' string.Empty);  	pattern = pattern.Replace (" "' string.Empty);  	if (buffer == null || buffer.Length == 0) {  		buffer = new byte[Size];  		Marshal.Copy (handle' buffer' 0' Size);  	}  	if (pattern.Length % 2 != 0) {  		return (IntPtr)(-1);  	}  	for (var i = 0; i < buffer.Length - (pattern.Length / 2); i++) {  		if (MaskCheck (i' pattern)) {  			return new IntPtr (handle.ToInt32 () + (i - offset));  		}  	}  	return (IntPtr)(-2);  }  catch {  	return (IntPtr)(-3);  }  
Magic Number,PacketLoggerToFile.Util,Scanner,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Scanner.cs,FindPattern,The following statement contains a magic number: try {  	pattern = pattern.Replace ("-"' string.Empty);  	pattern = pattern.Replace (" "' string.Empty);  	if (buffer == null || buffer.Length == 0) {  		buffer = new byte[Size];  		Marshal.Copy (handle' buffer' 0' Size);  	}  	if (pattern.Length % 2 != 0) {  		return (IntPtr)(-1);  	}  	for (var i = 0; i < buffer.Length - (pattern.Length / 2); i++) {  		if (MaskCheck (i' pattern)) {  			return new IntPtr (handle.ToInt32 () + (i - offset));  		}  	}  	return (IntPtr)(-2);  }  catch {  	return (IntPtr)(-3);  }  
Magic Number,PacketLoggerToFile.Util,Scanner,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Scanner.cs,FindPattern,The following statement contains a magic number: if (pattern.Length % 2 != 0) {  	return (IntPtr)(-1);  }  
Magic Number,PacketLoggerToFile.Util,Scanner,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Scanner.cs,FindPattern,The following statement contains a magic number: for (var i = 0; i < buffer.Length - (pattern.Length / 2); i++) {  	if (MaskCheck (i' pattern)) {  		return new IntPtr (handle.ToInt32 () + (i - offset));  	}  }  
Magic Number,PacketLoggerToFile.Util,Scanner,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Scanner.cs,FindPattern,The following statement contains a magic number: return (IntPtr)(-2);  
Magic Number,PacketLoggerToFile.Util,Scanner,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Scanner.cs,FindPattern,The following statement contains a magic number: return (IntPtr)(-3);  
Magic Number,PacketLoggerToFile.Util,Scanner,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Scanner.cs,MaskCheck,The following statement contains a magic number: for (var i = 0; i < pattern.Length / 2; i++) {  	var val = pattern.Substring (i * 2' 2);  	if (val == "??") {  		continue;  	}  	var value = Convert.ToInt32 (val' 16);  	if (value != buffer [offset + i]) {  		return false;  	}  }  
Magic Number,PacketLoggerToFile.Util,Scanner,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Scanner.cs,MaskCheck,The following statement contains a magic number: for (var i = 0; i < pattern.Length / 2; i++) {  	var val = pattern.Substring (i * 2' 2);  	if (val == "??") {  		continue;  	}  	var value = Convert.ToInt32 (val' 16);  	if (value != buffer [offset + i]) {  		return false;  	}  }  
Magic Number,PacketLoggerToFile.Util,Scanner,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Scanner.cs,MaskCheck,The following statement contains a magic number: for (var i = 0; i < pattern.Length / 2; i++) {  	var val = pattern.Substring (i * 2' 2);  	if (val == "??") {  		continue;  	}  	var value = Convert.ToInt32 (val' 16);  	if (value != buffer [offset + i]) {  		return false;  	}  }  
Magic Number,PacketLoggerToFile.Util,Scanner,C:\repos\xcvd_Detours\PacketLoggerToFile\PacketLoggerToFile\Util\Scanner.cs,MaskCheck,The following statement contains a magic number: for (var i = 0; i < pattern.Length / 2; i++) {  	var val = pattern.Substring (i * 2' 2);  	if (val == "??") {  		continue;  	}  	var value = Convert.ToInt32 (val' 16);  	if (value != buffer [offset + i]) {  		return false;  	}  }  
