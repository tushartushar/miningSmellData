Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SoundCloud.NET,SoundCloudApi,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\SoundCloudApi.cs,ApiAction,Cyclomatic complexity of the method is 12
Complex Method,SoundCloud.NET,Track,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\Track.cs,Search,Cyclomatic complexity of the method is 13
Long Parameter List,SoundCloud.NET,Track,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\Track.cs,Search,The method has 16 parameters.
Long Statement,SoundCloud.NET,SoundCloudClient,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\SoundCloudClient.cs,Authenticate,The length of the statement  "	SoundCloudAccessToken token = SoundCloudApi.ApiAction<SoundCloudAccessToken> (ApiCommand.UserCredentialsFlow' HttpMethod.Post' Credentials.ClientID' Credentials.ClientSecret' Credentials.UserName' Credentials.Password); " is 219.
Long Statement,SoundCloud.NET,SoundCloudApi,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\SoundCloudApi.cs,ApiAction,The length of the statement  "				throw new SoundCloudException ("Please authenticate using the SoundCloudClient class contructor before making an API call"); " is 124.
Long Statement,SoundCloud.NET,SoundCloudApi,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\SoundCloudApi.cs,ApiAction,The length of the statement  "				if (response.Headers [HttpResponseHeader.ContentEncoding].Equals ("gzip") || response.Headers [HttpResponseHeader.ContentEncoding].Equals ("deflate")) { " is 152.
Complex Conditional,SoundCloud.NET,Track,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\Track.cs,Add,The conditional expression  "Uri != null && Title != null && Description != null && Sharing != null"  is complex.
Empty Catch Block,SoundCloud.NET,SoundCloudApi,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\SoundCloudApi.cs,ApiAction,The method has an empty catch block.
Magic Number,SoundCloud.NET,Track,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\Track.cs,Search,The following statement contains a magic number: if (offset > 0) {  	filters.Add ("offset"' offset > 8000 ? 8000 : offset);  }  
Magic Number,SoundCloud.NET,Track,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\Track.cs,Search,The following statement contains a magic number: if (offset > 0) {  	filters.Add ("offset"' offset > 8000 ? 8000 : offset);  }  
Magic Number,SoundCloud.NET,Track,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\Track.cs,Search,The following statement contains a magic number: filters.Add ("offset"' offset > 8000 ? 8000 : offset);  
Magic Number,SoundCloud.NET,Track,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\Track.cs,Search,The following statement contains a magic number: filters.Add ("offset"' offset > 8000 ? 8000 : offset);  
Magic Number,SoundCloud.NET,Track,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\Track.cs,Search,The following statement contains a magic number: if (limit > 0) {  	filters.Add ("limit"' limit > 200 ? 200 : limit);  }  
Magic Number,SoundCloud.NET,Track,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\Track.cs,Search,The following statement contains a magic number: if (limit > 0) {  	filters.Add ("limit"' limit > 200 ? 200 : limit);  }  
Magic Number,SoundCloud.NET,Track,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\Track.cs,Search,The following statement contains a magic number: filters.Add ("limit"' limit > 200 ? 200 : limit);  
Magic Number,SoundCloud.NET,Track,F:\newReposMay17\Haythem_SoundCloud.NET\SoundCloud.NET\Track.cs,Search,The following statement contains a magic number: filters.Add ("limit"' limit > 200 ? 200 : limit);  
