Implementation smell,Namespace,Class,File,Method,Description
Long Method,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,ReplaceMultiplePropertiesInOneClassInMultipleDocumentsFixAllTest,The method has 108 lines of code.
Long Identifier,CodeCracker.Test.CSharp.Design,InconsistentAccessibilityTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\InconsistentAccessibilityTests.MethodIndexerParameter.cs,ShouldChangeAccessibilityWhenErrorInInterface,The length of the parameter interfaceAccessibilityModifier is 30.
Long Identifier,CodeCracker.Test.CSharp.Design,MakeMethodStaticTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\MakeMethodStaticTests.cs,NoDiagnosticOnNUnitTestMethods,The length of the parameter nunitNonTestFixtureWithAttributesSource is 39.
Long Identifier,CodeCracker.Test.CSharp.Design,MakeMethodStaticTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\MakeMethodStaticTests.cs,NoDiagnosticOnNUnitTestMethods,The length of the parameter nunitTestFixtureWithoutAttributesSource is 39.
Long Identifier,CodeCracker.Test.CSharp.Design,MakeMethodStaticTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\MakeMethodStaticTests.cs,NoDiagnosticOnNUnitTestMethods,The length of the parameter nunitWithoutTestFixtureWithTestAttributeAndOtherNonAttributedMethodsSource is 74.
Long Identifier,CodeCracker.Test.CSharp.Design,MakeMethodStaticTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\MakeMethodStaticTests.cs,NoDiagnosticOnNUnitTestMethods,The length of the parameter nunitWithoutTestFixtureWithTestCaseAttributeAndOtherNonAttributedMethodsSource is 78.
Long Identifier,CodeCracker.Test.CSharp.Design,MakeMethodStaticTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\MakeMethodStaticTests.cs,NoDiagnosticOnNUnitTestMethods,The length of the parameter nunitWithoutTestFixtureWithTestCaseSourceAttributeAndOtherNonAttributedMethodsSource is 84.
Long Statement,CodeCracker.Test.CSharp,GeneratedCodeAnalysisExtensionsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\GeneratedCodeAnalysisExtensionsTests.cs,GetSyntaxNodeAnalysisContext,The length of the statement  "            var context = new SyntaxNodeAnalysisContext(node' semanticModel' analyzerOptions' diag => { }' diag => true' default(CancellationToken)); " is 137.
Long Statement,CodeCracker.Test.CSharp,GeneratedCodeAnalysisExtensionsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\GeneratedCodeAnalysisExtensionsTests.cs,GetSymbolAnalysisContext,The length of the statement  "            var context = new SymbolAnalysisContext(symbol' compilation' analyzerOptions' diag => { }' diag => true' default(CancellationToken)); " is 133.
Long Statement,CodeCracker.Test.CSharp,GeneratedCodeAnalysisExtensionsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\GeneratedCodeAnalysisExtensionsTests.cs,GetSyntaxTreeAnalysisContext,The length of the statement  "            var context = new SyntaxTreeAnalysisContext(tree' analyzerOptions' diag => { }' diag => true' default(CancellationToken)); " is 122.
Long Statement,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInMethodInvocationThenFixUpdatesAsExpected,The length of the statement  "            await VerifyCSharpFixAllAsync(source.Replace("<REPLACE>"' $@"""{stringLiteral}""")' source.Replace("<REPLACE>"' $@"nameof({stringLiteral})")); " is 142.
Long Statement,CodeCracker.Test.CSharp.Design,EmptyCatchBlockTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\EmptyCatchBlockTests.cs,WhenRemoveTryCatchStatementAndPutComment,The length of the statement  "            //TODO: Consider reading MSDN Documentation about how to use Try...Catch => http://msdn.microsoft.com/en-us/library/0yd65esw.aspx " is 129.
Long Statement,CodeCracker.Test.CSharp.Design,StaticConstructorExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\StaticConstructorExceptionTests.cs,WarningIfExceptionIsThrowInsideStaticConstructor,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.StaticConstructorException.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsFiredDirectly,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyFiredDirectlyAndNotInitialized,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInIfInConstructor,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInForeachInConstructor,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInForInConstructor,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInWhileInConstructor,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedAfterReturnInConstructor,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedToNullRegularAssignmentOnFieldDeclaration,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedToNullInConstructor,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedToNullAfterRegularAssignmentInConstructor,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInAllSwitchCasesButNoDefaultInConstructor,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInASwitchCaseButNotAllInConstructor,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,AcceptExpressionBodiedMethods,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfCustomEventIsFiredDirectly,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfCustomEventWithCustomDelegateIsFiredDirectly,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,RaiseDiagnosticEvenWhenVerifiedForNullAndNotReturnedOrThrown,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,RaiseDiagnosticEvenWhenVerifiedForNullAndNotReturnedOrThrownWithBlocklessIf,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,RaiseDiagnosticIfNullCheckIsAfterInvocation,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,IgnoreIfAlreadyVerifiedForNullCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,ReportOnParametersWhenReturnTypeIsAReferenceType,The length of the statement  "public static TReturn Method<T' TReturn>(System.Func<T' TReturn> getter) where T : System.Attribute where TReturn : class " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,ReportOnParametersWhenReturnTypeIsAReferenceType,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,FixWithInvokeWithNonReferenceType,The length of the statement  "                public static TReturn Method<T' TReturn>(System.Func<T' TReturn> getter) where T : System.Attribute where TReturn : struct " is 122.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,FixWithInvokeWithNonReferenceType,The length of the statement  "                public static TReturn Method<T' TReturn>(System.Func<T' TReturn> getter) where T : System.Attribute where TReturn : struct " is 122.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,FixWithCheckForNullWithNonReferenceType,The length of the statement  "                public static TReturn Method<T' TReturn>(System.Func<T' TReturn> getter) where T : System.Attribute where TReturn : struct " is 122.
Long Statement,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,FixWithCheckForNullWithNonReferenceType,The length of the statement  "                public static TReturn Method<T' TReturn>(System.Func<T' TReturn> getter) where T : System.Attribute where TReturn : struct " is 122.
Long Statement,CodeCracker.Test.CSharp.Performance,UseStaticRegexIsMatchTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\UseStaticRegexIsMatchTests.cs,WhenMakeMethodCallStatic,The length of the statement  "            await VerifyCSharpFixAsync(test' fixtest' 0' allowNewCompilerDiagnostics: true); //todo: should not need to allow new compiler diagnostic' fix test infrastructure to understand the Regex type " is 191.
Long Statement,CodeCracker.Test.CSharp.Performance,UseStaticRegexIsMatchTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\UseStaticRegexIsMatchTests.cs,WhenMakeRegexCompiled,The length of the statement  "            await VerifyCSharpFixAsync(test' fixtest' 2' allowNewCompilerDiagnostics: true); //todo: should not need to allow new compiler diagnostic' fix test infrastructure to understand the Regex type " is 191.
Long Statement,CodeCracker.Test.CSharp.Performance,UseStaticRegexIsMatchTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\UseStaticRegexIsMatchTests.cs,WhenMakeRegexCompiledAndStatic,The length of the statement  "            await VerifyCSharpFixAsync(test' fixtest' 1' allowNewCompilerDiagnostics: true); //todo: should not need to allow new compiler diagnostic' fix test infrastructure to understand the Regex type " is 191.
Long Statement,CodeCracker.Test.CSharp.Performance,MakeLocalVariablesConstWhenItIsPossibleTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\MakeLocalVariablesConstWhenItIsPossibleTests.cs,CreateDiagnosticsWhenAssigningAPotentialConstant,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.MakeLocalVariableConstWhenItIsPossible.ToDiagnosticId()' DiagnosticSeverity.Info) " is 130.
Long Statement,CodeCracker.Test.CSharp.Performance,MakeLocalVariablesConstWhenItIsPossibleTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\MakeLocalVariablesConstWhenItIsPossibleTests.cs,CreateDiagnosticsWhenAssigningAPotentialConstantInAVarDeclaration,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.MakeLocalVariableConstWhenItIsPossible.ToDiagnosticId()' DiagnosticSeverity.Info) " is 130.
Long Statement,CodeCracker.Test.CSharp.Performance,MakeLocalVariablesConstWhenItIsPossibleTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\MakeLocalVariablesConstWhenItIsPossibleTests.cs,CreateDiagnosticsWhenAssigningNullToAReferenceType,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.MakeLocalVariableConstWhenItIsPossible.ToDiagnosticId()' DiagnosticSeverity.Info) " is 130.
Long Statement,CodeCracker.Test.CSharp.Performance,RemoveWhereWhenItIsPossibleTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\RemoveWhereWhenItIsPossibleTests.cs,CreateDiagnosticWhenUsingWhereWith,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.RemoveWhereWhenItIsPossible.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 122.
Long Statement,CodeCracker.Test.CSharp.Refactoring,AddBracesToSwitchSectionsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\AddBracesToSwitchSectionsTests.cs,CreateDiagnosticWhenSingleSwitchSectionHasNoBraces,The length of the statement  "            var diagnostic = new DiagnosticResult(DiagnosticId.AddBracesToSwitchSections.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 121.
Long Statement,CodeCracker.Test.CSharp.Refactoring,AddBracesToSwitchSectionsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\AddBracesToSwitchSectionsTests.cs,CreateDiagnosticWhenNotAllSwitchSectionsHaveBraces,The length of the statement  "            var diagnostic = new DiagnosticResult(DiagnosticId.AddBracesToSwitchSections.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 121.
Long Statement,CodeCracker.Test.CSharp.Refactoring,AddBracesToSwitchSectionsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\AddBracesToSwitchSectionsTests.cs,CreateDiagnosticWhenDefaultSectionsHasNoBraces,The length of the statement  "            var diagnostic = new DiagnosticResult(DiagnosticId.AddBracesToSwitchSections.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 121.
Long Statement,CodeCracker.Test.CSharp.Refactoring,ChangeAnyToAllTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ChangeAnyToAllTests.cs,AnyAndAllWithLinqCreatesDiagnostic,The length of the statement  "                .WithMessage(diagnosticId == DiagnosticId.ChangeAnyToAll ? ChangeAnyToAllAnalyzer.MessageAny : ChangeAnyToAllAnalyzer.MessageAll); " is 130.
Long Statement,CodeCracker.Test.CSharp.Refactoring,ChangeAnyToAllTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ChangeAnyToAllTests.cs,WithElvisOperatorCreatesDiagnostic,The length of the statement  "                .WithMessage(diagnosticId == DiagnosticId.ChangeAnyToAll ? ChangeAnyToAllAnalyzer.MessageAny : ChangeAnyToAllAnalyzer.MessageAll); " is 130.
Long Statement,CodeCracker.Test.CSharp.Refactoring,ChangeAnyToAllTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ChangeAnyToAllTests.cs,ExpressionBodiedMemberCreatesDiagnostic,The length of the statement  "                .WithMessage(diagnosticId == DiagnosticId.ChangeAnyToAll ? ChangeAnyToAllAnalyzer.MessageAny : ChangeAnyToAllAnalyzer.MessageAll); " is 130.
Long Statement,CodeCracker.Test.CSharp.Refactoring,ChangeAnyToAllTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ChangeAnyToAllTests.cs,NegationWithCoalesceExpressionCreatesDiagnostic,The length of the statement  "                .WithMessage(diagnosticId == DiagnosticId.ChangeAnyToAll ? ChangeAnyToAllAnalyzer.MessageAny : ChangeAnyToAllAnalyzer.MessageAll); " is 130.
Long Statement,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,SimplePropertyGetsTransformed,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 127.
Long Statement,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,FieldInitializerIsPreserved,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 127.
Long Statement,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,MultiplePropertiesPerClassGetTranformed,The length of the statement  "            var expected1 = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 128.
Long Statement,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,MultiplePropertiesPerClassGetTranformed,The length of the statement  "            var expected2 = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 128.
Long Statement,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,MultiplePropertiesPerClassWithFieldInitilizerAndUnusedFieldsGetTranformed,The length of the statement  "            var expected1 = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 128.
Long Statement,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,MultiplePropertiesPerClassWithFieldInitilizerAndUnusedFieldsGetTranformed,The length of the statement  "            var expected2 = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 128.
Long Statement,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,TypeOfPropertyMustFitTypeOfBackingField,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 127.
Long Statement,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,FieldReferencesInPartialClassesInDifferentDocumentsGetNotRenamedAndCauseCompilerErrorCS0103,The length of the statement  "            await VerifyCSharpFixAllAsync(oldSources: new string[] { testPart1' testPart2 }' newSources: new string[] { fixtestPart1' fixtestPart2 }' allowNewCompilerDiagnostics: true); " is 173.
Long Statement,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,PropertyChangedUnnecessaryAllocationDiagnostic,The length of the statement  "            return new DiagnosticResult(DiagnosticId.PropertyChangedEventArgsUnnecessaryAllocation.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 131.
Long Statement,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,ChangesPropertyChangedEventArgsInstanceToUseStaticField,The length of the statement  "    private static readonly PropertyChangedEventArgs PropertyChangedEventArgsFor{fieldSuffix} = new PropertyChangedEventArgs({ctorArg}); " is 132.
Long Statement,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesFixWhenEventArgsUsedInMethodInvocation,The length of the statement  "    private static readonly PropertyChangedEventArgs PropertyChangedEventArgsFor{fieldSuffix} = new PropertyChangedEventArgs({ctorArg}); " is 132.
Long Statement,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,HandlesMultipleClassDeclarations,The length of the statement  "    private static readonly PropertyChangedEventArgs PropertyChangedEventArgsFor{fieldSuffix} = new PropertyChangedEventArgs({ctorArg}); " is 132.
Long Statement,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesFixWhenQualifiedNameUsed,The length of the statement  "    private static readonly System.ComponentModel.PropertyChangedEventArgs PropertyChangedEventArgsFor{fieldSuffix} = new System.ComponentModel.PropertyChangedEventArgs({ctorArg}); " is 176.
Long Statement,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesFixWhenEventArgsCreatedInField,The length of the statement  "    private static readonly PropertyChangedEventArgs PropertyChangedEventArgsFor{fieldSuffix} = new PropertyChangedEventArgs({ctorArg}); " is 132.
Long Statement,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesFixWhenEventArgsCreatedInObjectInitializer,The length of the statement  "    private static readonly PropertyChangedEventArgs PropertyChangedEventArgsFor{fieldSuffix} = new PropertyChangedEventArgs({ctorArg}); " is 132.
Long Statement,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,HandlesNestedClass,The length of the statement  "        private static readonly PropertyChangedEventArgs PropertyChangedEventArgsFor{fieldSuffix} = new PropertyChangedEventArgs({ctorArg}); " is 132.
Long Statement,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesFixLambdaExpression,The length of the statement  "    private static readonly PropertyChangedEventArgs PropertyChangedEventArgsFor{fieldSuffix} = new PropertyChangedEventArgs({ctorArg}); " is 132.
Long Statement,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesFixWhenFieldNameIsAlreadyUsed,The length of the statement  "    private static readonly PropertyChangedEventArgs PropertyChangedEventArgsFor{fieldSuffix}1 = new PropertyChangedEventArgs({ctorArg}); " is 133.
Long Statement,CodeCracker.Test.CSharp.Refactoring,StringRepresentationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\StringRepresentationTests.cs,RegularStringProduceDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.StringRepresentation_RegularString.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 128.
Long Statement,CodeCracker.Test.CSharp.Refactoring,StringRepresentationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\StringRepresentationTests.cs,VerbatimStringProduceDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.StringRepresentation_VerbatimString.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 129.
Long Statement,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,CreateUnnecessaryToStringInStringConcatenationDiagnosticResult,The length of the statement  "            return new DiagnosticResult(DiagnosticId.UnnecessaryToStringInStringConcatenation.ToDiagnosticId()' DiagnosticSeverity.Info) " is 124.
Long Statement,CodeCracker.Test.CSharp.Style,AlwaysUseVarTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\AlwaysUseVarTests.cs,FixPreservesTriviaSensibly,The length of the statement  "                /*variables for use*/ string /*desc of b*/b = /* why not*/ ""12""' /*Formatter does this My next variable*/ c /* is quite nice and it */ = ""23""; " is 146.
Long Statement,CodeCracker.Test.CSharp.Style,ConvertLambdaExpressionToMethodGroupTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertLambdaExpressionToMethodGroupTests.cs,CreateDiagnosticForSimpleLambdaExpression,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ConvertLambdaExpressionToMethodGroup.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 130.
Long Statement,CodeCracker.Test.CSharp.Style,ConvertLambdaExpressionToMethodGroupTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertLambdaExpressionToMethodGroupTests.cs,CreateDiagnosticForSimpleLambdaExpressionWithBlockInBody,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ConvertLambdaExpressionToMethodGroup.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 130.
Long Statement,CodeCracker.Test.CSharp.Style,ConvertLambdaExpressionToMethodGroupTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertLambdaExpressionToMethodGroupTests.cs,CreateDiagnosticForParenthesizedLambdaExpressionWithBlockInBody,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ConvertLambdaExpressionToMethodGroup.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 130.
Long Statement,CodeCracker.Test.CSharp.Style,ObjectInitializerWithLocalDeclarationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ObjectInitializerTests.cs,WhenDeclaringAndCreatingObjectAndAssigningPropertiesThenAnalyzerCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ObjectInitializer_LocalDeclaration.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 129.
Long Statement,CodeCracker.Test.CSharp.Style,ObjectInitializerWithLocalDeclarationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ObjectInitializerTests.cs,WhenInitializerWouldReferenceAnotherVariableCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ObjectInitializer_LocalDeclaration.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 129.
Long Statement,CodeCracker.Test.CSharp.Style,ObjectInitializerWithAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ObjectInitializerTests.cs,WhenCreatingObjectAndAssigningPropertiesThenAnalyzerCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ObjectInitializer_Assignment.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 123.
Long Statement,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenMethodCouldBeAnExpressionBodiedMember,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 125.
Long Statement,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenOperatorCouldBeAnExpressionBodiedMember,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 125.
Long Statement,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenUserDefinedConversionCouldBeAnExpressionBodiedMember,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 125.
Long Statement,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenIndexerCouldBeAnExpressionBodiedMember,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 125.
Long Statement,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenPropertyCouldBeAnExpressionBodiedMember,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden) " is 125.
Long Statement,CodeCracker.Test.CSharp.Style,TernaryOperatorWithAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TernaryOperatorTests.cs,WhenUsingIfAndElseWithAssignmentChangeToTernaryFixAll,The length of the statement  "            await VerifyCSharpFixAllAsync(new string[] { source' source.Replace("TypeName"' "TypeName1") }' new string[] { fixtest' fixtest.Replace("TypeName"' "TypeName1") }); " is 164.
Long Statement,CodeCracker.Test.CSharp.Style,TernaryOperatorWithAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TernaryOperatorTests.cs,WhenUsingIfAndElseWithComplexAssignmentChangeToTernaryFixAll,The length of the statement  "            await VerifyCSharpFixAllAsync(new string[] { source' source.Replace("TypeName"' "TypeName1") }' new string[] { fixtest' fixtest.Replace("TypeName"' "TypeName1") }); " is 164.
Long Statement,CodeCracker.Test.CSharp.Style,TernaryOperatorWithReturnTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TernaryOperatorTests.cs,WhenUsingIfAndElseWithDirectReturnChangeToTernaryFixAll,The length of the statement  "            await VerifyCSharpFixAllAsync(new string[] { source' source.Replace("TypeName"' "TypeName1") }' new string[] { fixtest' fixtest.Replace("TypeName"' "TypeName1") }); " is 164.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,XmlDocumentationWithNonexistentParameterOfMethodAnalyzerCreateDiagnostic,The length of the statement  "            protected async static Task<Diagnostic[]> GetSortedDiagnosticsFromDocumentsAsync(DiagnosticAnalyzer analyzer' Document[] documents) " is 131.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,XmlDocumentationWithNonexistentParameterOfMethodAnalyzerCreateDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.XmlDocumentation_MissingInCSharp.ToDiagnosticId()' DiagnosticSeverity.Info) " is 124.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,XmlDocumentationWithMissingParametersFromMethodAnalyzerCreateDiagnostic,The length of the statement  "            public static Project CreateProject(string[] sources' out AdhocWorkspace workspace' string language = LanguageNames.CSharp) " is 123.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,XmlDocumentationWithMissingParametersFromMethodAnalyzerCreateDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.XmlDocumentation_MissingInXml.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 124.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationRemoveUnexistentParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixRemoveParameterDoc,The length of the statement  "            protected async static Task<Diagnostic[]> GetSortedDiagnosticsFromDocumentsAsync(DiagnosticAnalyzer analyzer' Document[] documents) " is 131.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationRemoveUnexistentParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixRemoveParameterDoc,The length of the statement  "            protected async static Task<Diagnostic[]> GetSortedDiagnosticsFromDocumentsAsync(DiagnosticAnalyzer analyzer' Document[] documents) " is 131.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationRemoveUnexistentParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixRemoveManyParameterDoc,The length of the statement  "            protected async static Task<Diagnostic[]> GetSortedDiagnosticsFromDocumentsAsync(DiagnosticAnalyzer analyzer' Document[] documents) " is 131.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationRemoveUnexistentParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixRemoveManyParameterDoc,The length of the statement  "            protected async static Task<Diagnostic[]> GetSortedDiagnosticsFromDocumentsAsync(DiagnosticAnalyzer analyzer' Document[] documents) " is 131.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationCreateMissingParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixCreateOneParameterDoc,The length of the statement  "            public static Project CreateProject(string[] sources' out AdhocWorkspace workspace' string language = LanguageNames.CSharp) " is 123.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationCreateMissingParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixCreateOneParameterDoc,The length of the statement  "            public static Project CreateProject(string[] sources' out AdhocWorkspace workspace' string language = LanguageNames.CSharp) " is 123.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationCreateMissingParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixCreateManyParameterDoc,The length of the statement  "            public static Project CreateProject(string[] sources' out AdhocWorkspace workspace' string language = LanguageNames.CSharp) " is 123.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationCreateMissingParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixCreateManyParameterDoc,The length of the statement  "            public static Project CreateProject(string[] sources' out AdhocWorkspace workspace' string language = LanguageNames.CSharp) " is 123.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationCreateMissingParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixCreateManyParameterDocWhenHaveFullDocSyntax,The length of the statement  "            public static Project CreateProject(string[] sources' out AdhocWorkspace workspace' string language = LanguageNames.CSharp) " is 123.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationCreateMissingParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixCreateManyParameterDocWhenHaveFullDocSyntax,The length of the statement  "            public static Project CreateProject(string[] sources' out AdhocWorkspace workspace' string language = LanguageNames.CSharp) " is 123.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationCreateMissingParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixCreateManyParameterDocWhenHaveOnlySummary,The length of the statement  "            public static Project CreateProject(string[] sources' out AdhocWorkspace workspace' string language = LanguageNames.CSharp) " is 123.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationCreateMissingParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixCreateManyParameterDocWhenHaveOnlySummary,The length of the statement  "            public static Project CreateProject(string[] sources' out AdhocWorkspace workspace' string language = LanguageNames.CSharp) " is 123.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationCreateMissingParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixCreateManyParameterDocWhenHaveOnlyReturns,The length of the statement  "            public static Project CreateProject(string[] sources' out AdhocWorkspace workspace' string language = LanguageNames.CSharp) " is 123.
Long Statement,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationCreateMissingParametersCodeFixTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,FixCreateManyParameterDocWhenHaveOnlyReturns,The length of the statement  "            public static Project CreateProject(string[] sources' out AdhocWorkspace workspace' string language = LanguageNames.CSharp) " is 123.
Long Statement,CodeCracker.Test.CSharp.Usage,AbstractClassShouldNotHavePublicCtorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\AbstractClassShouldNotHavePublicCtorTests.cs,CreateDiagnosticWhenAnAbstractClassHavePublicConstructor,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.AbstractClassShouldNotHavePublicCtors.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 132.
Long Statement,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodAsStaticMethodTriggerAFix,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info) " is 122.
Long Statement,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodAsStaticMethodTriggerAFixWithCSharp5,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info) " is 122.
Long Statement,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,CreatesDiagnosticWhenExtensionClassInSameTree,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info) " is 122.
Long Statement,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodWithFullNamespaceAsStaticMenthodTriggerAFix,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info) " is 122.
Long Statement,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodAsStaticMethodInsideForDoesNotThrowAndCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info) " is 122.
Long Statement,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodWithoutInvocationStatement,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info) " is 122.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 124.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableDeclaredWithAnotherVariableCreatesOnlyOneDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 124.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,WhenPassedIntoParenthesizedLambdaExpressionWithoutBlockCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 124.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,WhenPassedIntoParenthesizedLambdaExpressionCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 124.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,WhenPassedIntoSimpleLambdaExpressionCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 124.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,WhenPassedIntoAnonymousDelegateCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 124.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariablePassedAsParamCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 124.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableCallsIncorrectDisposeCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 124.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableCallsIncorrectDisposeSymbolCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 124.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableCallsOtherDisposableDisposeDirectlyCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 124.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposablesShouldCallSuppressFinalizeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposablesShouldCallSuppressFinalizeTests.cs,WarningIfClassImplmentsIDisposableWithNoSuppressFinalizeCall,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposablesShouldCallSuppressFinalize.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 132.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposablesShouldCallSuppressFinalizeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposablesShouldCallSuppressFinalizeTests.cs,WarningIfSealedClassHaveUserDefinedFinalizerImplmentsIDisposableWithNoSuppressFinalizeCall,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposablesShouldCallSuppressFinalize.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 132.
Long Statement,CodeCracker.Test.CSharp.Usage,RemovePrivateMethodNeverUsedAnalyzerTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemovePrivateMethodNeverUsedAnalyzerTest.cs,PrivateGenericStaticWithConstraintDoesNotCreateDiagnostic,The length of the statement  "    private static SymbolAnalysisContext GetSymbolAnalysisContext<T>(string code' string fileName = ""a.cs"") where T : SyntaxNode " is 126.
Long Statement,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,ReadFieldFieldFromOtherTypeCreatesDiagnostic,The length of the statement  "            await VerifyCSharpDiagnosticAsync(new[] { source1' source2 }' new[] { CreateExpectedDiagnosticResult(line: 6' column: 17) }); " is 125.
Long Statement,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,NoParametersCreatesError,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error) " is 121.
Long Statement,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,LessParametersCreatesError,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error) " is 121.
Long Statement,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,MoreArgumentsCreatesWarning,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_ExtraArgs.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,MethodWithStringInterpolationDoesNotCreateDiagnostic,The length of the statement  "            var source = @"var result = string.Format($""one {{0}} two {{1}} {""whatever""}""' ""a""' ""b""' ""c"");".WrapInCSharpMethod(); " is 127.
Long Statement,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,TwoParametersReferencingSamePlaceholderCreatesWarning,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_ExtraArgs.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,VerbatimStringWithMissingArgCreatesError,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error) " is 121.
Long Statement,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,InvalidArgumentReferenceCreatesError,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error) " is 121.
Long Statement,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,NonIntegerPlaceholderCreatesError,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error) " is 121.
Long Statement,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,UnusedArgsCreatesWarning,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_ExtraArgs.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,UsedParameterDoesNotCreateDiagnostic2,The length of the statement  "            typeof(CultureInfo).InvokeMember(""s_userDefaultCulture""' BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.SetField' null' null' new object[] { currentCulture }' CultureInfo.InvariantCulture); " is 204.
Long Statement,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,UsedParameterDoesNotCreateDiagnostic2,The length of the statement  "            typeof(CultureInfo).InvokeMember(""s_userDefaultUICulture""' BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.SetField' null' null' new object[] { currentUICulture }' CultureInfo.InvariantCulture); " is 208.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsAssignedThroughAMethodCallCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info) " is 127.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldDeclarationHas2VariableItCreates2Diagnostic,The length of the statement  "            var expected1 = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Created.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 130.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldDeclarationHas2VariableItCreates2Diagnostic,The length of the statement  "            var expected2 = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info) " is 128.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsDispoedOnATypeThatIsNotDisposableCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info) " is 127.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsNotDisposedCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info) " is 127.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WithStructCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Created.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 129.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WithPartialClassCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Created.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 129.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsCallingIncorrectDisposeCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info) " is 127.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsBeingDisposedNotOnCorrectDisposeCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info) " is 127.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsAssignedThroughAnObjectConstructionCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Created.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 129.
Long Statement,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAnIDisposableFieldIsAssignedThroughAMethodCallCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info) " is 127.
Long Statement,CodeCracker.Test.CSharp.Usage,SimplifyRedundantBooleanComparisonsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\SimplifyRedundantBooleanComparisonsTests.cs,WhenComparingWithBoolAnalyzerCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.SimplifyRedundantBooleanComparisons.ToDiagnosticId()' DiagnosticSeverity.Info) " is 127.
Long Statement,CodeCracker.Test.CSharp.Usage,UriAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UriAnalyzerTests.cs,IfUriConstructorWithUriKindFoundAndUriIsIncorrectCreatesDiagnostic,The length of the statement  "            await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(9' 31' () => new Uri("http://wrong"' UriKind.Relative))); " is 120.
Long Statement,CodeCracker.Test.CSharp.Usage,VirtualMethodOnConstructorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\VirtualMethodOnConstructorTests.cs,IfVirtualMethodFoundInConstructorCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.VirtualMethodOnConstructor.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Usage,VirtualMethodOnConstructorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\VirtualMethodOnConstructorTests.cs,IfVirtualMethodWithThisFoundInConstructorCreatesDiagnostic,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.VirtualMethodOnConstructor.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Usage,VirtualMethodOnConstructorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\VirtualMethodOnConstructorTests.cs,IfManyVirtualMethodFoundInConstructorCreatesDiagnostics,The length of the statement  "            var expected = new DiagnosticResult(DiagnosticId.VirtualMethodOnConstructor.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 121.
Long Statement,CodeCracker.Test.CSharp.Usage,VirtualMethodOnConstructorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\VirtualMethodOnConstructorTests.cs,IfManyVirtualMethodFoundInConstructorCreatesDiagnostics,The length of the statement  "            var expected2 = new DiagnosticResult(DiagnosticId.VirtualMethodOnConstructor.ToDiagnosticId()' DiagnosticSeverity.Warning) " is 122.
Magic Number,CodeCracker.Test.CSharp,ChangeCultureTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\ChangeCultureTests.cs,ChangesCulture,The following statement contains a magic number: 2.5.ToString().Should().Be("2.5");
Magic Number,CodeCracker.Test.CSharp,ChangeCultureTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\ChangeCultureTests.cs,ChangesCulture,The following statement contains a magic number: 2.5.ToString().Should().Be("2'5");
Magic Number,CodeCracker.Test.CSharp,ChangeCultureTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\ChangeCultureTests.cs,ChangesCulture,The following statement contains a magic number: 2.5.ToString().Should().Be("2.5");
Magic Number,CodeCracker.Test.CSharp.Design,MakeMethodStaticTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\MakeMethodStaticTests.cs,WithDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MakeMethodStatic.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 14)                  .WithMessage(string.Format(MakeMethodStaticAnalyzer.MessageFormat' "Foo"));
Magic Number,CodeCracker.Test.CSharp.Design,MakeMethodStaticTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\MakeMethodStaticTests.cs,WithDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MakeMethodStatic.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 14)                  .WithMessage(string.Format(MakeMethodStaticAnalyzer.MessageFormat' "Foo"));
Magic Number,CodeCracker.Test.CSharp.Design,MakeMethodStaticTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\MakeMethodStaticTests.cs,ReportInStructs,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MakeMethodStatic.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 17)                  .WithMessage(string.Format(MakeMethodStaticAnalyzer.MessageFormat' "M"));
Magic Number,CodeCracker.Test.CSharp.Design,MakeMethodStaticTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\MakeMethodStaticTests.cs,ReportInStructs,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MakeMethodStatic.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 17)                  .WithMessage(string.Format(MakeMethodStaticAnalyzer.MessageFormat' "M"));
Magic Number,CodeCracker.Test.CSharp.Design,MakeMethodStaticTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\MakeMethodStaticTests.cs,ReportForGetEnumeratorNotReturningIEnumerator,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MakeMethodStatic.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 17)                  .WithMessage(string.Format(MakeMethodStaticAnalyzer.MessageFormat' "GetEnumerator"));
Magic Number,CodeCracker.Test.CSharp.Design,MakeMethodStaticTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\MakeMethodStaticTests.cs,ReportForGetEnumeratorNotReturningIEnumerator,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MakeMethodStatic.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 17)                  .WithMessage(string.Format(MakeMethodStaticAnalyzer.MessageFormat' "GetEnumerator"));
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenStringLiteralInMethodShouldReportDiagnostic,The following statement contains a magic number: var expected = CreateNameofDiagnosticResult(nameofArgument' 6' 24);
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenStringLiteralInMethodShouldReportDiagnostic,The following statement contains a magic number: var expected = CreateNameofDiagnosticResult(nameofArgument' 6' 24);
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenReferencingExternalSymbolShouldReportDiagnostic,The following statement contains a magic number: var expected = CreateNameofDiagnosticResult("DateTime"' 7' 17' DiagnosticId.NameOf_External);
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenReferencingExternalSymbolShouldReportDiagnostic,The following statement contains a magic number: var expected = CreateNameofDiagnosticResult("DateTime"' 7' 17' DiagnosticId.NameOf_External);
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementStringInVariableAssignment,The following statement contains a magic number: var expectedForFirstAssignment = CreateNameofDiagnosticResult("NestedClass"' 11' 31);
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementStringInVariableAssignment,The following statement contains a magic number: var expectedForFirstAssignment = CreateNameofDiagnosticResult("NestedClass"' 11' 31);
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementStringInVariableAssignment,The following statement contains a magic number: var expectedForSecondAssignment = CreateNameofDiagnosticResult("readonlyField"' 13' 24);
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementStringInVariableAssignment,The following statement contains a magic number: var expectedForSecondAssignment = CreateNameofDiagnosticResult("readonlyField"' 13' 24);
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameStringInAttributeShouldReportDiagnostic,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("N2"' 11' 19)'                  CreateNameofDiagnosticResult("SomeDelegate"' 12' 19)'                  CreateNameofDiagnosticResult("readonlyField"' 13' 19)'                  CreateNameofDiagnosticResult("ParticularEvent"' 14' 19)'                  CreateNameofDiagnosticResult("Property"' 15' 19)'                  CreateNameofDiagnosticResult("TypeName"' 16' 19)'                  CreateNameofDiagnosticResult("Foo"' 17' 19)'                  CreateNameofDiagnosticResult("N1"' 18' 19)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInObjectInitializer,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateNameofDiagnosticResult("OtherTypeName"' 19' 29));
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInObjectInitializer,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateNameofDiagnosticResult("OtherTypeName"' 19' 29));
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameInArrayInitializer,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("readonlyField"' 9' 27)'                  CreateNameofDiagnosticResult("IInterface"' 9' 51)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameInArrayInitializer,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("readonlyField"' 9' 27)'                  CreateNameofDiagnosticResult("IInterface"' 9' 51)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameInArrayInitializer,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("readonlyField"' 9' 27)'                  CreateNameofDiagnosticResult("IInterface"' 9' 51)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingProgramElementNameInArrayInitializer,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("readonlyField"' 9' 27)'                  CreateNameofDiagnosticResult("IInterface"' 9' 51)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenCreatingNewObjectWithStringLiterals,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("TypeName"' 8' 39)'                  CreateNameofDiagnosticResult("a"' 8' 51)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenCreatingNewObjectWithStringLiterals,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("TypeName"' 8' 39)'                  CreateNameofDiagnosticResult("a"' 8' 51)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenCreatingNewObjectWithStringLiterals,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("TypeName"' 8' 39)'                  CreateNameofDiagnosticResult("a"' 8' 51)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenCreatingNewObjectWithStringLiterals,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("TypeName"' 8' 39)'                  CreateNameofDiagnosticResult("a"' 8' 51)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,NameOfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\NameOfTests.cs,WhenUsingStringLiteralInVariousPlaces,The following statement contains a magic number: var expected = new[]              {                  CreateNameofDiagnosticResult("@class"' 20' 39)'                  CreateNameofDiagnosticResult("@using"' 23' 43)'                  CreateNameofDiagnosticResult("N2"' 24' 44)'                  CreateNameofDiagnosticResult("readonlyField"' 27' 49)'                  CreateNameofDiagnosticResult("SomeDelegate"' 29' 36)'                  CreateNameofDiagnosticResult("readonlyField"' 35' 28)'                  CreateNameofDiagnosticResult("ParticularEvent"' 36' 30)'                  CreateNameofDiagnosticResult("Foo3"' 37' 28)              };
Magic Number,CodeCracker.Test.CSharp.Design,EmptyCatchBlockTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\EmptyCatchBlockTests.cs,WhenPutExceptionClassInCatchBlock,The following statement contains a magic number: await new Verify.Test              {                  TestCode = test'                  FixedCode = fixtest'                  CodeFixIndex = 2'              }.RunAsync();
Magic Number,CodeCracker.Test.CSharp.Design,StaticConstructorExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\StaticConstructorExceptionTests.cs,WarningIfExceptionIsThrowInsideStaticConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StaticConstructorException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 25)                  .WithMessage("Don't throw exceptions inside static constructors.");
Magic Number,CodeCracker.Test.CSharp.Design,StaticConstructorExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\StaticConstructorExceptionTests.cs,WarningIfExceptionIsThrowInsideStaticConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StaticConstructorException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 25)                  .WithMessage("Don't throw exceptions inside static constructors.");
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsFiredDirectly,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsFiredDirectly,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyFiredDirectlyAndNotInitialized,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyFiredDirectlyAndNotInitialized,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInIfInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(16' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInIfInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(16' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInForeachInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(16' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInForeachInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(16' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInForInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(16' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInForInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(16' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInWhileInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(17' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInWhileInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(17' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedAfterReturnInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(17' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedAfterReturnInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(17' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedToNullRegularAssignmentOnFieldDeclaration,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedToNullRegularAssignmentOnFieldDeclaration,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedToNullInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(13' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedToNullInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(13' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedToNullAfterRegularAssignmentInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(14' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedToNullAfterRegularAssignmentInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(14' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInAllSwitchCasesButNoDefaultInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(17' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInAllSwitchCasesButNoDefaultInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(17' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInASwitchCaseButNotAllInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(17' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfEventIsReadOnlyAndAssignedInASwitchCaseButNotAllInConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(17' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,AcceptExpressionBodiedMethods,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,AcceptExpressionBodiedMethods,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfCustomEventIsFiredDirectly,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(13' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfCustomEventIsFiredDirectly,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(13' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfCustomEventWithCustomDelegateIsFiredDirectly,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(15' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,WarningIfCustomEventWithCustomDelegateIsFiredDirectly,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(15' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "MyEvent"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,RaiseDiagnosticEvenWhenVerifiedForNullAndNotReturnedOrThrown,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "action"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,RaiseDiagnosticEvenWhenVerifiedForNullAndNotReturnedOrThrown,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "action"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,RaiseDiagnosticEvenWhenVerifiedForNullAndNotReturnedOrThrownWithBlocklessIf,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "action"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,RaiseDiagnosticEvenWhenVerifiedForNullAndNotReturnedOrThrownWithBlocklessIf,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "action"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,RaiseDiagnosticIfNullCheckIsAfterInvocation,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "action"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,RaiseDiagnosticIfNullCheckIsAfterInvocation,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 25)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "action"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,IgnoreIfAlreadyVerifiedForNullCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(12' 9)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "action"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,IgnoreIfAlreadyVerifiedForNullCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(12' 9)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "action"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,ReportOnParametersWhenReturnTypeIsAReferenceType,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 12)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "getter"));
Magic Number,CodeCracker.Test.CSharp.Design,UseInvokeMethodToFireEventTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Design\UseInvokeMethodToFireEventTests.cs,ReportOnParametersWhenReturnTypeIsAReferenceType,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseInvokeMethodToFireEvent.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 12)                  .WithMessage(string.Format(UseInvokeMethodToFireEventAnalyzer.MessageFormat' "getter"));
Magic Number,CodeCracker.Test.CSharp.Performance,UseStaticRegexIsMatchTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\UseStaticRegexIsMatchTests.cs,CreatesDiagnosticsWhenDeclaringALocalRegexAndUsingIsMatch,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseStaticRegexIsMatch.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(12' 17)                  .WithMessage(UseStaticRegexIsMatchAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Performance,UseStaticRegexIsMatchTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\UseStaticRegexIsMatchTests.cs,CreatesDiagnosticsWhenDeclaringALocalRegexAndUsingIsMatch,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseStaticRegexIsMatch.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(12' 17)                  .WithMessage(UseStaticRegexIsMatchAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Performance,UseStaticRegexIsMatchTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\UseStaticRegexIsMatchTests.cs,WhenMakeRegexCompiled,The following statement contains a magic number: await VerifyCSharpFixAsync(test' fixtest' 2' allowNewCompilerDiagnostics: true);
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatOnLocalVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(14' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatOnLocalVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(14' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatOnFieldVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatOnFieldVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatOnPropertyVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "MyString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatOnPropertyVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "MyString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatWithSeveralConcatsOnDifferentVarsCreatesSeveralDiagnostics,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(15' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString1"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatWithSeveralConcatsOnDifferentVarsCreatesSeveralDiagnostics,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(15' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString1"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatWithSeveralConcatsOnDifferentVarsCreatesSeveralDiagnostics,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(16' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString2"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatWithSeveralConcatsOnDifferentVarsCreatesSeveralDiagnostics,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(16' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString2"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatWithSimpleAssignmentCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(14' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatWithSimpleAssignmentCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(14' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,ForWithStringConcatOnLocalVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(14' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,ForWithStringConcatOnLocalVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(14' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,ForeachWithtStringConcatOnLocalVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(14' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,ForeachWithtStringConcatOnLocalVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(14' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,DoWithtStringConcatOnLocalVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(14' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,DoWithtStringConcatOnLocalVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(14' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "myString"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatOnFieldWithAccessCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(16' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "someObject.A"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatOnFieldWithAccessCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(16' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "someObject.A"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatOnFieldWithAccessOnArrayCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(16' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "someObject.A[DateTime.Now.Second]"));
Magic Number,CodeCracker.Test.CSharp.Performance,StringBuilderInLoopTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\StringBuilderInLoopTests.cs,WhileWithStringConcatOnFieldWithAccessOnArrayCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringBuilderInLoop.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(16' 21)                  .WithMessage(string.Format(StringBuilderInLoopAnalyzer.MessageFormat' "someObject.A[DateTime.Now.Second]"));
Magic Number,CodeCracker.Test.CSharp.Performance,EmptyFinalizerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\EmptyFinalizerTests.cs,RemoveEmptyFinalizerWhenIsEmpty,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.EmptyFinalizer.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 21)                  .WithMessage("Remove Empty Finalizers");
Magic Number,CodeCracker.Test.CSharp.Performance,EmptyFinalizerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\EmptyFinalizerTests.cs,RemoveEmptyFinalizerWhenIsEmpty,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.EmptyFinalizer.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 21)                  .WithMessage("Remove Empty Finalizers");
Magic Number,CodeCracker.Test.CSharp.Performance,EmptyFinalizerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\EmptyFinalizerTests.cs,RemoveEmptyFinalizerWithSingleLineComment,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.EmptyFinalizer.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 21)                  .WithMessage("Remove Empty Finalizers");
Magic Number,CodeCracker.Test.CSharp.Performance,EmptyFinalizerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\EmptyFinalizerTests.cs,RemoveEmptyFinalizerWithSingleLineComment,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.EmptyFinalizer.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 21)                  .WithMessage("Remove Empty Finalizers");
Magic Number,CodeCracker.Test.CSharp.Performance,EmptyFinalizerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\EmptyFinalizerTests.cs,RemoveEmptyFinalizerWithMultiLineComment,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.EmptyFinalizer.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 21)                  .WithMessage("Remove Empty Finalizers");
Magic Number,CodeCracker.Test.CSharp.Performance,EmptyFinalizerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\EmptyFinalizerTests.cs,RemoveEmptyFinalizerWithMultiLineComment,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.EmptyFinalizer.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 21)                  .WithMessage("Remove Empty Finalizers");
Magic Number,CodeCracker.Test.CSharp.Performance,MakeLocalVariablesConstWhenItIsPossibleTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\MakeLocalVariablesConstWhenItIsPossibleTests.cs,CreateDiagnosticsWhenAssigningAPotentialConstant,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MakeLocalVariableConstWhenItIsPossible.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 13)                  .WithMessage("This variable can be made const.");
Magic Number,CodeCracker.Test.CSharp.Performance,MakeLocalVariablesConstWhenItIsPossibleTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\MakeLocalVariablesConstWhenItIsPossibleTests.cs,CreateDiagnosticsWhenAssigningAPotentialConstant,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MakeLocalVariableConstWhenItIsPossible.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 13)                  .WithMessage("This variable can be made const.");
Magic Number,CodeCracker.Test.CSharp.Performance,MakeLocalVariablesConstWhenItIsPossibleTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\MakeLocalVariablesConstWhenItIsPossibleTests.cs,CreateDiagnosticsWhenAssigningAPotentialConstantInAVarDeclaration,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MakeLocalVariableConstWhenItIsPossible.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 13)                  .WithMessage("This variable can be made const.");
Magic Number,CodeCracker.Test.CSharp.Performance,MakeLocalVariablesConstWhenItIsPossibleTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\MakeLocalVariablesConstWhenItIsPossibleTests.cs,CreateDiagnosticsWhenAssigningAPotentialConstantInAVarDeclaration,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MakeLocalVariableConstWhenItIsPossible.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 13)                  .WithMessage("This variable can be made const.");
Magic Number,CodeCracker.Test.CSharp.Performance,MakeLocalVariablesConstWhenItIsPossibleTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\MakeLocalVariablesConstWhenItIsPossibleTests.cs,CreateDiagnosticsWhenAssigningNullToAReferenceType,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MakeLocalVariableConstWhenItIsPossible.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 13)                  .WithMessage("This variable can be made const.");
Magic Number,CodeCracker.Test.CSharp.Performance,MakeLocalVariablesConstWhenItIsPossibleTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\MakeLocalVariablesConstWhenItIsPossibleTests.cs,CreateDiagnosticsWhenAssigningNullToAReferenceType,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MakeLocalVariableConstWhenItIsPossible.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 13)                  .WithMessage("This variable can be made const.");
Magic Number,CodeCracker.Test.CSharp.Performance,RemoveWhereWhenItIsPossibleTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\RemoveWhereWhenItIsPossibleTests.cs,CreateDiagnosticWhenUsingWhereWith,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RemoveWhereWhenItIsPossible.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 23)                  .WithMessage("You can remove 'Where' moving the predicate to '" + method + "'.");
Magic Number,CodeCracker.Test.CSharp.Performance,RemoveWhereWhenItIsPossibleTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\RemoveWhereWhenItIsPossibleTests.cs,CreateDiagnosticWhenUsingWhereWith,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RemoveWhereWhenItIsPossible.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 23)                  .WithMessage("You can remove 'Where' moving the predicate to '" + method + "'.");
Magic Number,CodeCracker.Test.CSharp.Performance,SealedAttributeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\SealedAttributeTests.cs,ApplySealedWhenClassInheritsFromSystemAttributeClass,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.SealedAttribute.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(2' 30)                  .WithMessage("Mark 'MyAttribute' as sealed.");
Magic Number,CodeCracker.Test.CSharp.Performance,SealedAttributeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\SealedAttributeTests.cs,ApplySealedWhenClassInheritsFromSystemAttributeClass,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.SealedAttribute.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(2' 30)                  .WithMessage("Mark 'MyAttribute' as sealed.");
Magic Number,CodeCracker.Test.CSharp.Performance,SealedAttributeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\SealedAttributeTests.cs,ApplySealedWhenClassInheritsIndirectlyFromSystemAttributeClass,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.SealedAttribute.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 30)                  .WithMessage("Mark 'OtherAttribute' as sealed.");
Magic Number,CodeCracker.Test.CSharp.Performance,SealedAttributeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Performance\SealedAttributeTests.cs,ApplySealedWhenClassInheritsIndirectlyFromSystemAttributeClass,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.SealedAttribute.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 30)                  .WithMessage("Mark 'OtherAttribute' as sealed.");
Magic Number,CodeCracker.Test.CSharp.Refactoring,AddBracesToSwitchSectionsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\AddBracesToSwitchSectionsTests.cs,CreateDiagnosticWhenSingleSwitchSectionHasNoBraces,The following statement contains a magic number: var diagnostic = new DiagnosticResult(DiagnosticId.AddBracesToSwitchSections.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 13)                  .WithMessage("Add braces for each section in this switch");
Magic Number,CodeCracker.Test.CSharp.Refactoring,AddBracesToSwitchSectionsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\AddBracesToSwitchSectionsTests.cs,CreateDiagnosticWhenSingleSwitchSectionHasNoBraces,The following statement contains a magic number: var diagnostic = new DiagnosticResult(DiagnosticId.AddBracesToSwitchSections.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 13)                  .WithMessage("Add braces for each section in this switch");
Magic Number,CodeCracker.Test.CSharp.Refactoring,AddBracesToSwitchSectionsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\AddBracesToSwitchSectionsTests.cs,CreateDiagnosticWhenNotAllSwitchSectionsHaveBraces,The following statement contains a magic number: var diagnostic = new DiagnosticResult(DiagnosticId.AddBracesToSwitchSections.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 13)                  .WithMessage("Add braces for each section in this switch");
Magic Number,CodeCracker.Test.CSharp.Refactoring,AddBracesToSwitchSectionsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\AddBracesToSwitchSectionsTests.cs,CreateDiagnosticWhenNotAllSwitchSectionsHaveBraces,The following statement contains a magic number: var diagnostic = new DiagnosticResult(DiagnosticId.AddBracesToSwitchSections.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 13)                  .WithMessage("Add braces for each section in this switch");
Magic Number,CodeCracker.Test.CSharp.Refactoring,AddBracesToSwitchSectionsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\AddBracesToSwitchSectionsTests.cs,CreateDiagnosticWhenDefaultSectionsHasNoBraces,The following statement contains a magic number: var diagnostic = new DiagnosticResult(DiagnosticId.AddBracesToSwitchSections.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 13)                  .WithMessage("Add braces for each section in this switch");
Magic Number,CodeCracker.Test.CSharp.Refactoring,AddBracesToSwitchSectionsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\AddBracesToSwitchSectionsTests.cs,CreateDiagnosticWhenDefaultSectionsHasNoBraces,The following statement contains a magic number: var diagnostic = new DiagnosticResult(DiagnosticId.AddBracesToSwitchSections.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 13)                  .WithMessage("Add braces for each section in this switch");
Magic Number,CodeCracker.Test.CSharp.Refactoring,AllowMembersOrderingAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\AllowMembersOrderingAnalyzerTests.cs,AllowMembersOrderingForMoreThanOneMemberShouldTriggerDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.AllowMembersOrdering.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(2' 14 + typeDeclaration.Length)                  .WithMessage(AllowMembersOrderingAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Refactoring,AllowMembersOrderingAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\AllowMembersOrderingAnalyzerTests.cs,AllowMembersOrderingForMoreThanOneMemberShouldTriggerDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.AllowMembersOrdering.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(2' 14 + typeDeclaration.Length)                  .WithMessage(AllowMembersOrderingAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Refactoring,ChangeAnyToAllTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ChangeAnyToAllTests.cs,AnyAndAllWithLinqCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(diagnosticId.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(13' column)                  .WithMessage(diagnosticId == DiagnosticId.ChangeAnyToAll ? ChangeAnyToAllAnalyzer.MessageAny : ChangeAnyToAllAnalyzer.MessageAll);
Magic Number,CodeCracker.Test.CSharp.Refactoring,ChangeAnyToAllTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ChangeAnyToAllTests.cs,WithElvisOperatorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(diagnosticId.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(13' 43)                  .WithMessage(diagnosticId == DiagnosticId.ChangeAnyToAll ? ChangeAnyToAllAnalyzer.MessageAny : ChangeAnyToAllAnalyzer.MessageAll);
Magic Number,CodeCracker.Test.CSharp.Refactoring,ChangeAnyToAllTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ChangeAnyToAllTests.cs,WithElvisOperatorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(diagnosticId.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(13' 43)                  .WithMessage(diagnosticId == DiagnosticId.ChangeAnyToAll ? ChangeAnyToAllAnalyzer.MessageAny : ChangeAnyToAllAnalyzer.MessageAll);
Magic Number,CodeCracker.Test.CSharp.Refactoring,ChangeAnyToAllTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ChangeAnyToAllTests.cs,ExpressionBodiedMemberCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(diagnosticId.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(7' 22)                  .WithMessage(diagnosticId == DiagnosticId.ChangeAnyToAll ? ChangeAnyToAllAnalyzer.MessageAny : ChangeAnyToAllAnalyzer.MessageAll);
Magic Number,CodeCracker.Test.CSharp.Refactoring,ChangeAnyToAllTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ChangeAnyToAllTests.cs,ExpressionBodiedMemberCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(diagnosticId.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(7' 22)                  .WithMessage(diagnosticId == DiagnosticId.ChangeAnyToAll ? ChangeAnyToAllAnalyzer.MessageAny : ChangeAnyToAllAnalyzer.MessageAll);
Magic Number,CodeCracker.Test.CSharp.Refactoring,ChangeAnyToAllTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ChangeAnyToAllTests.cs,NegationWithCoalesceExpressionCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(diagnosticId.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(13' 20)                  .WithMessage(diagnosticId == DiagnosticId.ChangeAnyToAll ? ChangeAnyToAllAnalyzer.MessageAny : ChangeAnyToAllAnalyzer.MessageAll);
Magic Number,CodeCracker.Test.CSharp.Refactoring,ChangeAnyToAllTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ChangeAnyToAllTests.cs,NegationWithCoalesceExpressionCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(diagnosticId.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(13' 20)                  .WithMessage(diagnosticId == DiagnosticId.ChangeAnyToAll ? ChangeAnyToAllAnalyzer.MessageAny : ChangeAnyToAllAnalyzer.MessageAll);
Magic Number,CodeCracker.Test.CSharp.Refactoring,MergeNestedIfTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\MergeNestedIfTest.cs,NestedIfCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MergeNestedIf.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(11' 17)                  .WithMessage(MergeNestedIfAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Refactoring,MergeNestedIfTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\MergeNestedIfTest.cs,NestedIfCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.MergeNestedIf.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(11' 17)                  .WithMessage(MergeNestedIfAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Refactoring,ComputeExpressionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ComputeExpressionTests.cs,BinaryExpressionWithLiteralOnLeftAndRightCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ComputeExpression.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 13 + columnOffset)                  .WithMessage(string.Format(ComputeExpressionAnalyzer.Message' expression));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ComputeExpressionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ComputeExpressionTests.cs,BinaryExpressionWithLiteralOnLeftAndRightCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ComputeExpression.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 13 + columnOffset)                  .WithMessage(string.Format(ComputeExpressionAnalyzer.Message' expression));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,SimplePropertyGetsTransformed,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(16' 27)                  .WithMessage(GetDiagnosticMessage("Value"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,SimplePropertyGetsTransformed,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(16' 27)                  .WithMessage(GetDiagnosticMessage("Value"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,FieldInitializerIsPreserved,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(16' 27)                  .WithMessage(GetDiagnosticMessage("Value"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,FieldInitializerIsPreserved,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(16' 27)                  .WithMessage(GetDiagnosticMessage("Value"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,MultiplePropertiesPerClassGetTranformed,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(17' 27)                  .WithMessage(GetDiagnosticMessage("Value"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,MultiplePropertiesPerClassGetTranformed,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(17' 27)                  .WithMessage(GetDiagnosticMessage("Value"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,MultiplePropertiesPerClassGetTranformed,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(18' 27)                  .WithMessage(GetDiagnosticMessage("Value2"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,MultiplePropertiesPerClassGetTranformed,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(18' 27)                  .WithMessage(GetDiagnosticMessage("Value2"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,MultiplePropertiesPerClassWithFieldInitilizerAndUnusedFieldsGetTranformed,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(17' 27)                  .WithMessage(GetDiagnosticMessage("Value"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,MultiplePropertiesPerClassWithFieldInitilizerAndUnusedFieldsGetTranformed,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(17' 27)                  .WithMessage(GetDiagnosticMessage("Value"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,MultiplePropertiesPerClassWithFieldInitilizerAndUnusedFieldsGetTranformed,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(18' 27)                  .WithMessage(GetDiagnosticMessage("Value2"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,MultiplePropertiesPerClassWithFieldInitilizerAndUnusedFieldsGetTranformed,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(18' 27)                  .WithMessage(GetDiagnosticMessage("Value2"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,TypeOfPropertyMustFitTypeOfBackingField,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(18' 34)                  .WithMessage(GetDiagnosticMessage("Value2"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,ReplaceWithGetterOnlyAutoPropertyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\ReplaceWithGetterOnlyAutoPropertyTests.cs,TypeOfPropertyMustFitTypeOfBackingField,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReplaceWithGetterOnlyAutoProperty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(18' 34)                  .WithMessage(GetDiagnosticMessage("Value2"));
Magic Number,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesTriggerDiagnosticAtPropertyChangedEventArgsInstanceCreation,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' PropertyChangedUnnecessaryAllocationDiagnostic(1' 12));
Magic Number,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesTriggerDiagnosticAtPropertyChangedEventArgsInstanceCreationInMethodInvocation,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' PropertyChangedUnnecessaryAllocationDiagnostic(6' 25));
Magic Number,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesTriggerDiagnosticAtPropertyChangedEventArgsInstanceCreationInMethodInvocation,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' PropertyChangedUnnecessaryAllocationDiagnostic(6' 25));
Magic Number,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesTriggerDiagnosticAtPropertyChangedEventArgsInstanceCreationInObjectInitializer,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' PropertyChangedUnnecessaryAllocationDiagnostic(1' 28));
Magic Number,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesTriggerDiagnosticAtObjectInstanceCreationUsingQualifiedName,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' PropertyChangedUnnecessaryAllocationDiagnostic(4' 28));
Magic Number,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesTriggerDiagnosticAtObjectInstanceCreationUsingQualifiedName,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' PropertyChangedUnnecessaryAllocationDiagnostic(4' 28));
Magic Number,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesTriggerDiagnosticInLambdaExpression,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' PropertyChangedUnnecessaryAllocationDiagnostic(10' 39));
Magic Number,CodeCracker.Test.CSharp.Refactoring,PropertyChangedEventArgsUnnecessaryAllocationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\PropertyChangedEventArgsUnnecessaryAllocationTests.cs,DoesTriggerDiagnosticInLambdaExpression,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' PropertyChangedUnnecessaryAllocationDiagnostic(10' 39));
Magic Number,CodeCracker.Test.CSharp.Refactoring,SplitIntoNestedIfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\SplitIntoNestedIfTests.cs,IfWithAndCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.SplitIntoNestedIf.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 17)                  .WithMessage(string.Format(SplitIntoNestedIfAnalyzer.Message));
Magic Number,CodeCracker.Test.CSharp.Refactoring,SplitIntoNestedIfTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\SplitIntoNestedIfTests.cs,IfWithAndCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.SplitIntoNestedIf.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 17)                  .WithMessage(string.Format(SplitIntoNestedIfAnalyzer.Message));
Magic Number,CodeCracker.Test.CSharp.Refactoring,InvertForTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\InvertForTests.cs,CreateDiagnosticsWithForLoopsFrom0ToN,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.InvertFor.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 17)                  .WithMessage("Make it a for loop that decrement the counter.");
Magic Number,CodeCracker.Test.CSharp.Refactoring,InvertForTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\InvertForTests.cs,CreateDiagnosticsWithForLoopsFrom0ToN,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.InvertFor.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 17)                  .WithMessage("Make it a for loop that decrement the counter.");
Magic Number,CodeCracker.Test.CSharp.Refactoring,InvertForTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\InvertForTests.cs,CreateDiagnosticsWithForLoopsTheUsesAnDeclaredVariableAsCounter,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.InvertFor.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 28)                  .WithMessage("Make it a for loop that decrement the counter.");
Magic Number,CodeCracker.Test.CSharp.Refactoring,InvertForTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\InvertForTests.cs,CreateDiagnosticsWithForLoopsTheUsesAnDeclaredVariableAsCounter,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.InvertFor.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 28)                  .WithMessage("Make it a for loop that decrement the counter.");
Magic Number,CodeCracker.Test.CSharp.Refactoring,InvertForTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\InvertForTests.cs,CreateDiagnosticsWithForLoopsFromNTo0,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.InvertFor.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 17)                  .WithMessage("Make it a for loop that increment the counter.");
Magic Number,CodeCracker.Test.CSharp.Refactoring,InvertForTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\InvertForTests.cs,CreateDiagnosticsWithForLoopsFromNTo0,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.InvertFor.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 17)                  .WithMessage("Make it a for loop that increment the counter.");
Magic Number,CodeCracker.Test.CSharp.Refactoring,StringRepresentationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\StringRepresentationTests.cs,RegularStringProduceDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringRepresentation_RegularString.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(6' 17)                  .WithMessage("Change to regular string");
Magic Number,CodeCracker.Test.CSharp.Refactoring,StringRepresentationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\StringRepresentationTests.cs,RegularStringProduceDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringRepresentation_RegularString.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(6' 17)                  .WithMessage("Change to regular string");
Magic Number,CodeCracker.Test.CSharp.Refactoring,StringRepresentationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\StringRepresentationTests.cs,VerbatimStringProduceDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringRepresentation_VerbatimString.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(6' 17)                  .WithMessage("Change to verbatim string");
Magic Number,CodeCracker.Test.CSharp.Refactoring,StringRepresentationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Refactoring\StringRepresentationTests.cs,VerbatimStringProduceDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringRepresentation_VerbatimString.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(6' 17)                  .WithMessage("Change to verbatim string");
Magic Number,CodeCracker.Test.CSharp.Reliability,UseConfigureAwaitFalseTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Reliability\UseConfigureAwaitFalseTests.cs,WhenAwaitingTaskAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseConfigureAwaitFalse.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' column)                  .WithMessage("Consider using ConfigureAwait(false) on the awaited task.");
Magic Number,CodeCracker.Test.CSharp.Style,ConsoleWriteLineTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConsoleWriteLineTests.cs,ConsoleWriteLineWithMoreThan2ArgsProducesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConsoleWriteLine.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 17)                  .WithMessage(ConsoleWriteLineAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,ConsoleWriteLineTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConsoleWriteLineTests.cs,ConsoleWriteLineWithMoreThan2ArgsProducesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConsoleWriteLine.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 17)                  .WithMessage(ConsoleWriteLineAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,ConsoleWriteLineTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConsoleWriteLineTests.cs,ConsoleWriteLineWithFullStringNameProducesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConsoleWriteLine.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 17)                  .WithMessage(ConsoleWriteLineAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,ConsoleWriteLineTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConsoleWriteLineTests.cs,ConsoleWriteLineWithFullStringNameProducesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConsoleWriteLine.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 17)                  .WithMessage(ConsoleWriteLineAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,ConsoleWriteLineTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConsoleWriteLineTests.cs,VerbatimStringWithConsoleWriteLineCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConsoleWriteLine.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 17)                  .WithMessage(ConsoleWriteLineAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,ConsoleWriteLineTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConsoleWriteLineTests.cs,VerbatimStringWithConsoleWriteLineCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConsoleWriteLine.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 17)                  .WithMessage(ConsoleWriteLineAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,InstantiatingAnObjectAndCallToStringInsideAStringConcatenationShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected = CreateUnnecessaryToStringInStringConcatenationDiagnosticResult(1' 29);
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,InstantiatingAnStringBuilderAndCallToStringInsideAStringConcatenationShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected = CreateUnnecessaryToStringInStringConcatenationDiagnosticResult(10' 60);
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,InstantiatingAnStringBuilderAndCallToStringInsideAStringConcatenationShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected = CreateUnnecessaryToStringInStringConcatenationDiagnosticResult(10' 60);
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,CallToStringForAnInstantiatedObjectInsideAStringConcatenationShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected1 = CreateUnnecessaryToStringInStringConcatenationDiagnosticResult(20' 47);
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,CallToStringForAnInstantiatedObjectInsideAStringConcatenationShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected1 = CreateUnnecessaryToStringInStringConcatenationDiagnosticResult(20' 47);
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,CallToStringForAnInstantiatedObjectInsideAStringConcatenationShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected2 = CreateUnnecessaryToStringInStringConcatenationDiagnosticResult(21' 41);
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,CallToStringForAnInstantiatedObjectInsideAStringConcatenationShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected2 = CreateUnnecessaryToStringInStringConcatenationDiagnosticResult(21' 41);
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,CallToStringForAnInstantiatedObjectInsideAStringConcatenationShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected3 = CreateUnnecessaryToStringInStringConcatenationDiagnosticResult(22' 47);
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,CallToStringForAnInstantiatedObjectInsideAStringConcatenationShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected3 = CreateUnnecessaryToStringInStringConcatenationDiagnosticResult(22' 47);
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,CallToStringForAnInstantiatedObjectInsideAStringConcatenationShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected4 = CreateUnnecessaryToStringInStringConcatenationDiagnosticResult(22' 69);
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,CallToStringForAnInstantiatedObjectInsideAStringConcatenationShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected4 = CreateUnnecessaryToStringInStringConcatenationDiagnosticResult(22' 69);
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryToStringInStringConcatenationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryToStringInStringConcatenationTests.cs,CallToStringOnStringExpressionsShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected = CreateUnnecessaryToStringInStringConcatenationDiagnosticResult(1' 43);
Magic Number,CodeCracker.Test.CSharp.Style,UseEmptyStringTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseEmptyStringTest.cs,UsingStringDotEmptyShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected = CreateEmptyStringDiagnosticResult(10' 25);
Magic Number,CodeCracker.Test.CSharp.Style,UseEmptyStringTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseEmptyStringTest.cs,UsingStringDotEmptyShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected = CreateEmptyStringDiagnosticResult(10' 25);
Magic Number,CodeCracker.Test.CSharp.Style,UseEmptyStringTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseEmptyStringTest.cs,UsingStringDotEmptyCamelCaseShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected = CreateEmptyStringDiagnosticResult(10' 25);
Magic Number,CodeCracker.Test.CSharp.Style,UseEmptyStringTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseEmptyStringTest.cs,UsingStringDotEmptyCamelCaseShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected = CreateEmptyStringDiagnosticResult(10' 25);
Magic Number,CodeCracker.Test.CSharp.Style,UseEmptyStringTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseEmptyStringTest.cs,UsingStringDotEmptyAsMethodArgumentShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected = CreateEmptyStringDiagnosticResult(12' 21);
Magic Number,CodeCracker.Test.CSharp.Style,UseEmptyStringTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseEmptyStringTest.cs,UsingStringDotEmptyAsMethodArgumentShouldGenerateDiagnosticResult,The following statement contains a magic number: var expected = CreateEmptyStringDiagnosticResult(12' 21);
Magic Number,CodeCracker.Test.CSharp.Style,UseEmptyStringTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseEmptyStringTest.cs,TwoEmptyStringsGenerateTwoDiagnostics,The following statement contains a magic number: var expected1 = CreateEmptyStringDiagnosticResult(10' 21);
Magic Number,CodeCracker.Test.CSharp.Style,UseEmptyStringTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseEmptyStringTest.cs,TwoEmptyStringsGenerateTwoDiagnostics,The following statement contains a magic number: var expected1 = CreateEmptyStringDiagnosticResult(10' 21);
Magic Number,CodeCracker.Test.CSharp.Style,UseEmptyStringTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseEmptyStringTest.cs,TwoEmptyStringsGenerateTwoDiagnostics,The following statement contains a magic number: var expected2 = CreateEmptyStringDiagnosticResult(10' 36);
Magic Number,CodeCracker.Test.CSharp.Style,UseEmptyStringTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseEmptyStringTest.cs,TwoEmptyStringsGenerateTwoDiagnostics,The following statement contains a magic number: var expected2 = CreateEmptyStringDiagnosticResult(10' 36);
Magic Number,CodeCracker.Test.CSharp.Style,UseStringEmptyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseStringEmptyTests.cs,NotUsingStringEmpty,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseStringEmpty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 25)                  .WithMessage("Use 'String.Empty' instead of \"\"");
Magic Number,CodeCracker.Test.CSharp.Style,UseStringEmptyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseStringEmptyTests.cs,NotUsingStringEmpty,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseStringEmpty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 25)                  .WithMessage("Use 'String.Empty' instead of \"\"");
Magic Number,CodeCracker.Test.CSharp.Style,UseStringEmptyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseStringEmptyTests.cs,MethodNotUsingStringEmpty,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseStringEmpty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(12' 21)                  .WithMessage("Use 'String.Empty' instead of \"\"");
Magic Number,CodeCracker.Test.CSharp.Style,UseStringEmptyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseStringEmptyTests.cs,MethodNotUsingStringEmpty,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UseStringEmpty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(12' 21)                  .WithMessage("Use 'String.Empty' instead of \"\"");
Magic Number,CodeCracker.Test.CSharp.Style,UseStringEmptyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseStringEmptyTests.cs,TwoEmptyStringsGenerateTwoDiagnostics,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.UseStringEmpty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 21)                  .WithMessage("Use 'String.Empty' instead of \"\"");
Magic Number,CodeCracker.Test.CSharp.Style,UseStringEmptyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseStringEmptyTests.cs,TwoEmptyStringsGenerateTwoDiagnostics,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.UseStringEmpty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 21)                  .WithMessage("Use 'String.Empty' instead of \"\"");
Magic Number,CodeCracker.Test.CSharp.Style,UseStringEmptyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseStringEmptyTests.cs,TwoEmptyStringsGenerateTwoDiagnostics,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.UseStringEmpty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 26)                  .WithMessage("Use 'String.Empty' instead of \"\"");
Magic Number,CodeCracker.Test.CSharp.Style,UseStringEmptyTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UseStringEmptyTests.cs,TwoEmptyStringsGenerateTwoDiagnostics,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.UseStringEmpty.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(10' 26)                  .WithMessage("Use 'String.Empty' instead of \"\"");
Magic Number,CodeCracker.Test.CSharp.Style,PropertyPrivateSetTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\PropertyPrivateSetTests.cs,WarningOnPublicPropertyDeclaration,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.PropertyPrivateSet.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(8' 13)                  .WithMessage(PropertyPrivateSetAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,PropertyPrivateSetTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\PropertyPrivateSetTests.cs,WarningOnPublicPropertyDeclaration,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.PropertyPrivateSet.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(8' 13)                  .WithMessage(PropertyPrivateSetAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,RemoveTrailingWhitespaceTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\RemoveTrailingWhitespaceTests.cs,SingleStatementWithTrailingSpaceCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnostic(1' 13));
Magic Number,CodeCracker.Test.CSharp.Style,RemoveTrailingWhitespaceTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\RemoveTrailingWhitespaceTests.cs,SingleStatementWithTrailingSpaceAndNewLineCreatesOnlyOneDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnostic(1' 13));
Magic Number,CodeCracker.Test.CSharp.Style,RemoveTrailingWhitespaceTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\RemoveTrailingWhitespaceTests.cs,TwoStatementsWithTrailingWhiteSpaceCreatesTwoDiagnostics,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnostic(1' 13)' CreateDiagnostic(2' 14));
Magic Number,CodeCracker.Test.CSharp.Style,RemoveTrailingWhitespaceTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\RemoveTrailingWhitespaceTests.cs,TwoStatementsWithTrailingWhiteSpaceCreatesTwoDiagnostics,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnostic(1' 13)' CreateDiagnostic(2' 14));
Magic Number,CodeCracker.Test.CSharp.Style,RemoveTrailingWhitespaceTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\RemoveTrailingWhitespaceTests.cs,TwoStatementsWithTrailingWhiteSpaceCreatesTwoDiagnostics,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnostic(1' 13)' CreateDiagnostic(2' 14));
Magic Number,CodeCracker.Test.CSharp.Style,RemoveTrailingWhitespaceTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\RemoveTrailingWhitespaceTests.cs,SingleStatementWithCommentAndTrailingSpaceCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnostic(1' 16));
Magic Number,CodeCracker.Test.CSharp.Style,SwitchToAutoPropTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\SwitchToAutoPropTests.cs,SimplePropertyCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.SwitchToAutoProp.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 9)                  .WithMessage(string.Format(SwitchToAutoPropAnalyzer.MessageFormat.ToString()' "Id"));
Magic Number,CodeCracker.Test.CSharp.Style,SwitchToAutoPropTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\SwitchToAutoPropTests.cs,SimplePropertyCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.SwitchToAutoProp.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 9)                  .WithMessage(string.Format(SwitchToAutoPropAnalyzer.MessageFormat.ToString()' "Id"));
Magic Number,CodeCracker.Test.CSharp.Style,StringFormatTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\StringFormatTests.cs,StringFormatWithMoreThan2ArgsProducesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormat.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 25)                  .WithMessage(StringFormatAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,StringFormatTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\StringFormatTests.cs,StringFormatWithMoreThan2ArgsProducesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormat.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 25)                  .WithMessage(StringFormatAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,StringFormatTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\StringFormatTests.cs,StringFormatWithFullStringNameProducesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormat.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 25)                  .WithMessage(StringFormatAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,StringFormatTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\StringFormatTests.cs,StringFormatWithFullStringNameProducesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormat.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 25)                  .WithMessage(StringFormatAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,StringFormatTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\StringFormatTests.cs,VerbatimStringWithStringFormatCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormat.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 25)                  .WithMessage(StringFormatAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,StringFormatTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\StringFormatTests.cs,VerbatimStringWithStringFormatCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormat.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 25)                  .WithMessage(StringFormatAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,StringFormatTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\StringFormatTests.cs,NestedStringFormatCreatesDiagnostic,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.StringFormat.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 23)                  .WithMessage(StringFormatAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,StringFormatTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\StringFormatTests.cs,NestedStringFormatCreatesDiagnostic,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.StringFormat.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 23)                  .WithMessage(StringFormatAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,StringFormatTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\StringFormatTests.cs,NestedStringFormatCreatesDiagnostic,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.StringFormat.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 44)                  .WithMessage(StringFormatAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,StringFormatTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\StringFormatTests.cs,NestedStringFormatCreatesDiagnostic,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.StringFormat.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 44)                  .WithMessage(StringFormatAnalyzer.MessageFormat.ToString());
Magic Number,CodeCracker.Test.CSharp.Style,AlwaysUseVarTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\AlwaysUseVarTests.cs,DeclarationsWithDynamicVaribleNameWithInitializerAlsoDynamicCreatesDiagnosic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.AlwaysUseVar.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(9' 17)                  .WithMessage("Use 'var' instead of specifying the type name.");
Magic Number,CodeCracker.Test.CSharp.Style,AlwaysUseVarTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\AlwaysUseVarTests.cs,DeclarationsWithDynamicVaribleNameWithInitializerAlsoDynamicCreatesDiagnosic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.AlwaysUseVar.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(9' 17)                  .WithMessage("Use 'var' instead of specifying the type name.");
Magic Number,CodeCracker.Test.CSharp.Style,AlwaysUseVarTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\AlwaysUseVarTests.cs,CreateDiagnosticsWhenAssigningValueWithSameDeclaringTypePrimitive,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.AlwaysUseVarOnPrimitives.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 17)                  .WithMessage("Use 'var' instead of specifying the type name.");
Magic Number,CodeCracker.Test.CSharp.Style,AlwaysUseVarTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\AlwaysUseVarTests.cs,CreateDiagnosticsWhenAssigningValueWithSameDeclaringTypePrimitive,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.AlwaysUseVarOnPrimitives.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 17)                  .WithMessage("Use 'var' instead of specifying the type name.");
Magic Number,CodeCracker.Test.CSharp.Style,AlwaysUseVarTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\AlwaysUseVarTests.cs,CreateDiagnosticsWhenAssigningValueWithSameDeclaringTypeNonPrimitive,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.AlwaysUseVar.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 17)                  .WithMessage("Use 'var' instead of specifying the type name.");
Magic Number,CodeCracker.Test.CSharp.Style,AlwaysUseVarTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\AlwaysUseVarTests.cs,CreateDiagnosticsWhenAssigningValueWithSameDeclaringTypeNonPrimitive,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.AlwaysUseVar.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 17)                  .WithMessage("Use 'var' instead of specifying the type name.");
Magic Number,CodeCracker.Test.CSharp.Style,ConvertLambdaExpressionToMethodGroupTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertLambdaExpressionToMethodGroupTests.cs,CreateDiagnosticForSimpleLambdaExpression,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertLambdaExpressionToMethodGroup.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(1' 17)                  .WithMessage("You should remove the lambda expression and pass just 'filter' instead.");
Magic Number,CodeCracker.Test.CSharp.Style,ConvertLambdaExpressionToMethodGroupTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertLambdaExpressionToMethodGroupTests.cs,CreateDiagnosticForSimpleLambdaExpressionWithBlockInBody,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertLambdaExpressionToMethodGroup.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(1' 17)                  .WithMessage("You should remove the lambda expression and pass just 'filter' instead.");
Magic Number,CodeCracker.Test.CSharp.Style,ConvertLambdaExpressionToMethodGroupTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertLambdaExpressionToMethodGroupTests.cs,CreateDiagnosticForParenthesizedLambdaExpressionWithBlockInBody,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertLambdaExpressionToMethodGroup.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(1' 15)                  .WithMessage("You should remove the lambda expression and pass just 'filter' instead.");
Magic Number,CodeCracker.Test.CSharp.Style,RemoveCommentedCodeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\RemoveCommentedCodeTests.cs,CreateDiagnosticForSingleLineCommentedCode,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RemoveCommentedCode.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 13)                  .WithMessage(RemoveCommentedCodeAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,RemoveCommentedCodeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\RemoveCommentedCodeTests.cs,CreateDiagnosticForSingleLineCommentedCode,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RemoveCommentedCode.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 13)                  .WithMessage(RemoveCommentedCodeAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,RemoveCommentedCodeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\RemoveCommentedCodeTests.cs,CreateDiagnosticForMultipleLinesCommentedCode,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RemoveCommentedCode.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 13)                  .WithMessage(RemoveCommentedCodeAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,RemoveCommentedCodeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\RemoveCommentedCodeTests.cs,CreateDiagnosticForMultipleLinesCommentedCode,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RemoveCommentedCode.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 13)                  .WithMessage(RemoveCommentedCodeAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,TaskNameAsyncTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TaskNameASyncTests.cs,TaskNameAsyncMethodEqualsNameMethodInterface,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TaskNameAsync.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(8' 26)                  .WithMessage(string.Format(TaskNameAsyncAnalyzer.MessageFormat' "FooAsync"));
Magic Number,CodeCracker.Test.CSharp.Style,TaskNameAsyncTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TaskNameASyncTests.cs,TaskNameAsyncMethodEqualsNameMethodInterface,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TaskNameAsync.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(8' 26)                  .WithMessage(string.Format(TaskNameAsyncAnalyzer.MessageFormat' "FooAsync"));
Magic Number,CodeCracker.Test.CSharp.Style,TaskNameAsyncTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TaskNameASyncTests.cs,TaskNameAsyncMethodWhithoutAsyncName,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TaskNameAsync.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(8' 18)                  .WithMessage(string.Format(TaskNameAsyncAnalyzer.MessageFormat' "TestAsync"));
Magic Number,CodeCracker.Test.CSharp.Style,TaskNameAsyncTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TaskNameASyncTests.cs,TaskNameAsyncMethodWhithoutAsyncName,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TaskNameAsync.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(8' 18)                  .WithMessage(string.Format(TaskNameAsyncAnalyzer.MessageFormat' "TestAsync"));
Magic Number,CodeCracker.Test.CSharp.Style,TaskNameAsyncTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TaskNameASyncTests.cs,IgnoreMethodFromImplicitlyImplementedInterface,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TaskNameAsync.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(5' 10)                  .WithMessage(string.Format(TaskNameAsyncAnalyzer.MessageFormat' "FooAsync"));
Magic Number,CodeCracker.Test.CSharp.Style,TaskNameAsyncTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TaskNameASyncTests.cs,IgnoreMethodFromImplicitlyImplementedInterface,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TaskNameAsync.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(5' 10)                  .WithMessage(string.Format(TaskNameAsyncAnalyzer.MessageFormat' "FooAsync"));
Magic Number,CodeCracker.Test.CSharp.Style,TaskNameAsyncTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TaskNameASyncTests.cs,IgnoreMethodFromExplicitlyImplementedInterface,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TaskNameAsync.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(5' 10)                  .WithMessage(string.Format(TaskNameAsyncAnalyzer.MessageFormat' "FooAsync"));
Magic Number,CodeCracker.Test.CSharp.Style,TaskNameAsyncTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TaskNameASyncTests.cs,IgnoreMethodFromExplicitlyImplementedInterface,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TaskNameAsync.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(5' 10)                  .WithMessage(string.Format(TaskNameAsyncAnalyzer.MessageFormat' "FooAsync"));
Magic Number,CodeCracker.Test.CSharp.Style,RemoveAsyncFromMethodTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\RemoveAsyncFromMethodTests.cs,MethodNotAsyncWithAsyncTermination,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RemoveAsyncFromMethod.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 18)                  .WithMessage(string.Format(RemoveAsyncFromMethodAnalyzer.MessageFormat' "TestAsync"));
Magic Number,CodeCracker.Test.CSharp.Style,RemoveAsyncFromMethodTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\RemoveAsyncFromMethodTests.cs,MethodNotAsyncWithAsyncTermination,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RemoveAsyncFromMethod.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 18)                  .WithMessage(string.Format(RemoveAsyncFromMethodAnalyzer.MessageFormat' "TestAsync"));
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToSwitchTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToSwitchTests.cs,CreateDiagnosticsWhenYouHaveThreeNestedIfsAndElse,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToSwitch.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 17)                  .WithMessage("You could use 'switch' instead of 'if'.");
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToSwitchTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToSwitchTests.cs,CreateDiagnosticsWhenYouHaveThreeNestedIfsAndElse,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToSwitch.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 17)                  .WithMessage("You could use 'switch' instead of 'if'.");
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToSwitchTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToSwitchTests.cs,CreateDiagnosticsWhenYouHaveThreeNestedIfs,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToSwitch.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 17)                  .WithMessage("You could use 'switch' instead of 'if'.");
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToSwitchTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToSwitchTests.cs,CreateDiagnosticsWhenYouHaveThreeNestedIfs,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToSwitch.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 17)                  .WithMessage("You could use 'switch' instead of 'if'.");
Magic Number,CodeCracker.Test.CSharp.Style,ExistenceOperatorWithReturnTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ExistenceOperatorTests.cs,WhenUsingIfReturnExpressionAndElseReturnNullCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ExistenceOperator.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(9' 17)                  .WithMessage("You can use the existence operator.");
Magic Number,CodeCracker.Test.CSharp.Style,ExistenceOperatorWithReturnTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ExistenceOperatorTests.cs,WhenUsingIfReturnExpressionAndElseReturnNullCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ExistenceOperator.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(9' 17)                  .WithMessage("You can use the existence operator.");
Magic Number,CodeCracker.Test.CSharp.Style,ExistenceOperatorTestsWithAssignment,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ExistenceOperatorTests.cs,WhenUsingIfAssignmentExpressionAndElseAssignNullCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ExistenceOperator.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 17)                  .WithMessage("You can use the existence operator.");
Magic Number,CodeCracker.Test.CSharp.Style,ExistenceOperatorTestsWithAssignment,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ExistenceOperatorTests.cs,WhenUsingIfAssignmentExpressionAndElseAssignNullCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ExistenceOperator.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 17)                  .WithMessage("You can use the existence operator.");
Magic Number,CodeCracker.Test.CSharp.Style,InterfaceNameTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\InterfaceNameTests.cs,InterfaceNameNotStartsWithLetterI,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.InterfaceName.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 9)                  .WithMessage(InterfaceNameAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,InterfaceNameTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\InterfaceNameTests.cs,InterfaceNameNotStartsWithLetterI,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.InterfaceName.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 9)                  .WithMessage(InterfaceNameAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,EmptyObjectInitializerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\EmptyObjectInitializerTests.cs,EmptyObjectInitializerTriggersFix,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.EmptyObjectInitializer.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(1' 15)                  .WithMessage("Remove the empty object initializer.");
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,ForInArrayAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(9' 17)                  .WithMessage("You can use foreach instead of for.");
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,ForInArrayAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(9' 17)                  .WithMessage("You can use foreach instead of for.");
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,ForInArrayAnalyzerWhereArrayIsInitializedOutsideTheScopeCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(13' 17)                  .WithMessage("You can use foreach instead of for.");
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,ForInArrayAnalyzerWhereArrayIsInitializedOutsideTheScopeCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(13' 17)                  .WithMessage("You can use foreach instead of for.");
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,ForInArrayAnalyzerWhenHasMultipleElementAccessCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 17)                  .WithMessage("You can use foreach instead of for.");
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,ForInArrayAnalyzerWhenHasMultipleElementAccessCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 17)                  .WithMessage("You can use foreach instead of for.");
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,IfHasMethodGetEnumeratorReturningIEnumeratorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 9)                  .WithMessage(ForInArrayAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,IfHasMethodGetEnumeratorReturningIEnumeratorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 9)                  .WithMessage(ForInArrayAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,IfHasMethodGetEnumeratorReturningClassThatImplementsIEnumeratorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 9)                  .WithMessage(ForInArrayAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,IfHasMethodGetEnumeratorReturningClassThatImplementsIEnumeratorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 9)                  .WithMessage(ForInArrayAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,WithFieldCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(12' 5)                  .WithMessage("You can use foreach instead of for.");
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,WithFieldCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(12' 5)                  .WithMessage("You can use foreach instead of for.");
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,WithPropertyCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(13' 9)                  .WithMessage("You can use foreach instead of for.");
Magic Number,CodeCracker.Test.CSharp.Style,ForInArrayTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ForInArrayTests.cs,WithPropertyCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ForInArray.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(13' 9)                  .WithMessage("You can use foreach instead of for.");
Magic Number,CodeCracker.Test.CSharp.Style,ObjectInitializerWithLocalDeclarationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ObjectInitializerTests.cs,WhenDeclaringAndCreatingObjectAndAssigningPropertiesThenAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ObjectInitializer_LocalDeclaration.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 17)                  .WithMessage("You can use initializers in here.");
Magic Number,CodeCracker.Test.CSharp.Style,ObjectInitializerWithLocalDeclarationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ObjectInitializerTests.cs,WhenDeclaringAndCreatingObjectAndAssigningPropertiesThenAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ObjectInitializer_LocalDeclaration.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 17)                  .WithMessage("You can use initializers in here.");
Magic Number,CodeCracker.Test.CSharp.Style,ObjectInitializerWithLocalDeclarationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ObjectInitializerTests.cs,WhenInitializerWouldReferenceAnotherVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ObjectInitializer_LocalDeclaration.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(15' 17)                  .WithMessage("You can use initializers in here.");
Magic Number,CodeCracker.Test.CSharp.Style,ObjectInitializerWithLocalDeclarationTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ObjectInitializerTests.cs,WhenInitializerWouldReferenceAnotherVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ObjectInitializer_LocalDeclaration.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(15' 17)                  .WithMessage("You can use initializers in here.");
Magic Number,CodeCracker.Test.CSharp.Style,ObjectInitializerWithAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ObjectInitializerTests.cs,WhenCreatingObjectAndAssigningPropertiesThenAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ObjectInitializer_Assignment.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(9' 17)                  .WithMessage("You can use initializers in here.");
Magic Number,CodeCracker.Test.CSharp.Style,ObjectInitializerWithAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ObjectInitializerTests.cs,WhenCreatingObjectAndAssigningPropertiesThenAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ObjectInitializer_Assignment.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(9' 17)                  .WithMessage("You can use initializers in here.");
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenMethodCouldBeAnExpressionBodiedMember,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(8' 13)                  .WithMessage(ConvertToExpressionBodiedMemberAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenMethodCouldBeAnExpressionBodiedMember,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(8' 13)                  .WithMessage(ConvertToExpressionBodiedMemberAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenOperatorCouldBeAnExpressionBodiedMember,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(8' 13)                  .WithMessage(ConvertToExpressionBodiedMemberAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenOperatorCouldBeAnExpressionBodiedMember,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(8' 13)                  .WithMessage(ConvertToExpressionBodiedMemberAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenUserDefinedConversionCouldBeAnExpressionBodiedMember,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(8' 13)                  .WithMessage(ConvertToExpressionBodiedMemberAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenUserDefinedConversionCouldBeAnExpressionBodiedMember,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(8' 13)                  .WithMessage(ConvertToExpressionBodiedMemberAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenIndexerCouldBeAnExpressionBodiedMember,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(8' 13)                  .WithMessage(ConvertToExpressionBodiedMemberAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenIndexerCouldBeAnExpressionBodiedMember,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(8' 13)                  .WithMessage(ConvertToExpressionBodiedMemberAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenPropertyCouldBeAnExpressionBodiedMember,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(8' 13)                  .WithMessage(ConvertToExpressionBodiedMemberAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,ConvertToExpressionBodiedMemberTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\ConvertToExpressionBodiedMemberTests.cs,CreateDiagnosticsWhenPropertyCouldBeAnExpressionBodiedMember,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ConvertToExpressionBodiedMember.ToDiagnosticId()' DiagnosticSeverity.Hidden)                  .WithLocation(8' 13)                  .WithMessage(ConvertToExpressionBodiedMemberAnalyzer.MessageFormat);
Magic Number,CodeCracker.Test.CSharp.Style,TernaryOperatorWithAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TernaryOperatorTests.cs,WhenUsingIfAndElseWithAssignmentAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TernaryOperator_Assignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 17)                  .WithMessage("You can use a ternary operator.");
Magic Number,CodeCracker.Test.CSharp.Style,TernaryOperatorWithAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TernaryOperatorTests.cs,WhenUsingIfAndElseWithAssignmentAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TernaryOperator_Assignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 17)                  .WithMessage("You can use a ternary operator.");
Magic Number,CodeCracker.Test.CSharp.Style,TernaryOperatorWithReturnTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TernaryOperatorTests.cs,WhenUsingIfAndElseWithDirectReturnAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TernaryOperator_Return.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(9' 17)                  .WithMessage("You can use a ternary operator.");
Magic Number,CodeCracker.Test.CSharp.Style,TernaryOperatorWithReturnTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TernaryOperatorTests.cs,WhenUsingIfAndElseWithDirectReturnAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TernaryOperator_Return.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(9' 17)                  .WithMessage("You can use a ternary operator.");
Magic Number,CodeCracker.Test.CSharp.Style,TernaryOperatorWithReturnTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TernaryOperatorTests.cs,WhenReturnStatementContainsMethodCallAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TernaryOperator_Return.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(13' 17)                  .WithMessage("You can use a ternary operator.");
Magic Number,CodeCracker.Test.CSharp.Style,TernaryOperatorWithReturnTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\TernaryOperatorTests.cs,WhenReturnStatementContainsMethodCallAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.TernaryOperator_Return.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(13' 17)                  .WithMessage("You can use a ternary operator.");
Magic Number,CodeCracker.Test.CSharp.Style,UnnecessaryParenthesisTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Style\UnnecessaryParenthesisTests.cs,ConstructorWithEmptyParenthesisWithInitializerTriggersFix,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.UnnecessaryParenthesis.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(1' 14)                  .WithMessage("Remove unnecessary parenthesis.");
Magic Number,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,XmlDocumentationWithNonexistentParameterOfMethodAnalyzerCreateDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.XmlDocumentation_MissingInCSharp.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 16)                  .WithMessage("You have missing/unexistent parameters in Xml Docs");
Magic Number,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,XmlDocumentationWithNonexistentParameterOfMethodAnalyzerCreateDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.XmlDocumentation_MissingInCSharp.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 16)                  .WithMessage("You have missing/unexistent parameters in Xml Docs");
Magic Number,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,XmlDocumentationWithMissingParametersFromMethodAnalyzerCreateDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.XmlDocumentation_MissingInXml.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 16)                  .WithMessage("You have missing/unexistent parameters in Xml Docs");
Magic Number,CodeCracker.Test.CSharp.Maintainability,XmlDocumentationAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Maintainability\XmlDocumentationTests.cs,XmlDocumentationWithMissingParametersFromMethodAnalyzerCreateDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.XmlDocumentation_MissingInXml.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 16)                  .WithMessage("You have missing/unexistent parameters in Xml Docs");
Magic Number,CodeCracker.Test.CSharp.Usage,AbstractClassShouldNotHavePublicCtorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\AbstractClassShouldNotHavePublicCtorTests.cs,CreateDiagnosticWhenAnAbstractClassHavePublicConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.AbstractClassShouldNotHavePublicCtors.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 17)                  .WithMessage("Constructor should not be public.");
Magic Number,CodeCracker.Test.CSharp.Usage,AbstractClassShouldNotHavePublicCtorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\AbstractClassShouldNotHavePublicCtorTests.cs,CreateDiagnosticWhenAnAbstractClassHavePublicConstructor,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.AbstractClassShouldNotHavePublicCtors.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 17)                  .WithMessage("Constructor should not be public.");
Magic Number,CodeCracker.Test.CSharp.Usage,ArgumentExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ArgumentExceptionTests.cs,WhenThrowingArgumentExceptionWithInvalidArgumentAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ArgumentException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 56)                  .WithMessage("Type argument 'c' is not in the argument list.");
Magic Number,CodeCracker.Test.CSharp.Usage,ArgumentExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ArgumentExceptionTests.cs,WhenThrowingArgumentExceptionWithInvalidArgumentAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ArgumentException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 56)                  .WithMessage("Type argument 'c' is not in the argument list.");
Magic Number,CodeCracker.Test.CSharp.Usage,ArgumentExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ArgumentExceptionTests.cs,WhenThrowingArgumentExceptionInCtorWithInvalidArgumentAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ArgumentException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 56)                  .WithMessage("Type argument 'c' is not in the argument list.");
Magic Number,CodeCracker.Test.CSharp.Usage,ArgumentExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ArgumentExceptionTests.cs,WhenThrowingArgumentExceptionInCtorWithInvalidArgumentAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ArgumentException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 56)                  .WithMessage("Type argument 'c' is not in the argument list.");
Magic Number,CodeCracker.Test.CSharp.Usage,ArgumentExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ArgumentExceptionTests.cs,WhenThrowingArgumentExceptionInSetPropertyArgumentNameShouldBeValue,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ArgumentException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(12' 62)                  .WithMessage("Type argument 'c' is not in the argument list.");
Magic Number,CodeCracker.Test.CSharp.Usage,ArgumentExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ArgumentExceptionTests.cs,WhenThrowingArgumentExceptionInSetPropertyArgumentNameShouldBeValue,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ArgumentException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(12' 62)                  .WithMessage("Type argument 'c' is not in the argument list.");
Magic Number,CodeCracker.Test.CSharp.Usage,ArgumentExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ArgumentExceptionTests.cs,WhenThrowingArgumentExceptionInGetPropertyWithIndexersArgumentNameShouldBeInParameterList,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ArgumentException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 62)                  .WithMessage("Type argument 'c' is not in the argument list.");
Magic Number,CodeCracker.Test.CSharp.Usage,ArgumentExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ArgumentExceptionTests.cs,WhenThrowingArgumentExceptionInGetPropertyWithIndexersArgumentNameShouldBeInParameterList,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ArgumentException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(11' 62)                  .WithMessage("Type argument 'c' is not in the argument list.");
Magic Number,CodeCracker.Test.CSharp.Usage,ArgumentExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ArgumentExceptionTests.cs,WhenThrowingArgumentExceptionInLambdaArgumentNameShouldBeInParameterList,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ArgumentException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(9' 82)                  .WithMessage("Type argument 'paramName' is not in the argument list.");
Magic Number,CodeCracker.Test.CSharp.Usage,ArgumentExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ArgumentExceptionTests.cs,WhenThrowingArgumentExceptionInLambdaArgumentNameShouldBeInParameterList,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ArgumentException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(9' 82)                  .WithMessage("Type argument 'paramName' is not in the argument list.");
Magic Number,CodeCracker.Test.CSharp.Usage,ArgumentExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ArgumentExceptionTests.cs,WhenThrowingArgumentExceptionWithInvalidArgumentInIndexerSetAccessorAndApplyingThirdFixUsesValue,The following statement contains a magic number: await VerifyCSharpFixAsync(test' fixtest' 2);
Magic Number,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodAsStaticMethodTriggerAFix,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 33)                  .WithMessage("Do not call 'Any' method of class 'Enumerable' as a static method");
Magic Number,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodAsStaticMethodTriggerAFix,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 33)                  .WithMessage("Do not call 'Any' method of class 'Enumerable' as a static method");
Magic Number,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodAsStaticMethodTriggerAFixWithCSharp5,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 33)                  .WithMessage("Do not call 'Any' method of class 'Enumerable' as a static method");
Magic Number,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodAsStaticMethodTriggerAFixWithCSharp5,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 33)                  .WithMessage("Do not call 'Any' method of class 'Enumerable' as a static method");
Magic Number,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,CreatesDiagnosticWhenExtensionClassInSameTree,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 9)                  .WithMessage("Do not call 'M' method of class 'C' as a static method");
Magic Number,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,CreatesDiagnosticWhenExtensionClassInSameTree,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 9)                  .WithMessage("Do not call 'M' method of class 'C' as a static method");
Magic Number,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodWithFullNamespaceAsStaticMenthodTriggerAFix,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(9' 33)                  .WithMessage("Do not call 'Any' method of class 'Enumerable' as a static method");
Magic Number,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodWithFullNamespaceAsStaticMenthodTriggerAFix,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(9' 33)                  .WithMessage("Do not call 'Any' method of class 'Enumerable' as a static method");
Magic Number,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodAsStaticMethodInsideForDoesNotThrowAndCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 37)                  .WithMessage("Do not call 'Any' method of class 'Enumerable' as a static method");
Magic Number,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodAsStaticMethodInsideForDoesNotThrowAndCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 37)                  .WithMessage("Do not call 'Any' method of class 'Enumerable' as a static method");
Magic Number,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodWithoutInvocationStatement,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(8' 51)                  .WithMessage("Do not call 'Any' method of class 'Enumerable' as a static method");
Magic Number,CodeCracker.Test.CSharp.Usage,CallExtensionMethodAsExtensionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\CallExtensionMethodAsExtensionTests.cs,WhenCallExtensionMethodWithoutInvocationStatement,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.CallExtensionMethodAsExtension.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(8' 51)                  .WithMessage("Do not call 'Any' method of class 'Enumerable' as a static method");
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 13)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 13)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableDeclaredWithAnotherVariableCreatesOnlyOneDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 43)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableDeclaredWithAnotherVariableCreatesOnlyOneDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 43)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,WhenPassedIntoParenthesizedLambdaExpressionWithoutBlockCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 34)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,WhenPassedIntoParenthesizedLambdaExpressionWithoutBlockCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 34)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,WhenPassedIntoParenthesizedLambdaExpressionCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 32)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,WhenPassedIntoParenthesizedLambdaExpressionCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 32)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,WhenPassedIntoSimpleLambdaExpressionCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 32)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,WhenPassedIntoSimpleLambdaExpressionCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 32)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,WhenPassedIntoAnonymousDelegateCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 32)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,WhenPassedIntoAnonymousDelegateCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 32)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariablePassedAsParamCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 31)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariablePassedAsParamCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 31)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableCallsIncorrectDisposeCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 21)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableCallsIncorrectDisposeCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 21)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "MemoryStream"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableCallsIncorrectDisposeSymbolCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 33)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "Disposable"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableCallsIncorrectDisposeSymbolCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 33)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "Disposable"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableCallsOtherDisposableDisposeDirectlyCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 33)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "Disposable"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableVariableNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableVariableNotDisposedTests.cs,DisposableVariableCallsOtherDisposableDisposeDirectlyCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableVariableNotDisposed.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 33)                  .WithMessage(string.Format(DisposableVariableNotDisposedAnalyzer.MessageFormat' "Disposable"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposablesShouldCallSuppressFinalizeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposablesShouldCallSuppressFinalizeTests.cs,WarningIfClassImplmentsIDisposableWithNoSuppressFinalizeCall,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposablesShouldCallSuppressFinalize.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 33)                  .WithMessage("'MyType' should call GC.SuppressFinalize inside the Dispose method.");
Magic Number,CodeCracker.Test.CSharp.Usage,DisposablesShouldCallSuppressFinalizeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposablesShouldCallSuppressFinalizeTests.cs,WarningIfClassImplmentsIDisposableWithNoSuppressFinalizeCall,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposablesShouldCallSuppressFinalize.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 33)                  .WithMessage("'MyType' should call GC.SuppressFinalize inside the Dispose method.");
Magic Number,CodeCracker.Test.CSharp.Usage,DisposablesShouldCallSuppressFinalizeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposablesShouldCallSuppressFinalizeTests.cs,WarningIfSealedClassHaveUserDefinedFinalizerImplmentsIDisposableWithNoSuppressFinalizeCall,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposablesShouldCallSuppressFinalize.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 33)                  .WithMessage("'MyType' should call GC.SuppressFinalize inside the Dispose method.");
Magic Number,CodeCracker.Test.CSharp.Usage,DisposablesShouldCallSuppressFinalizeTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposablesShouldCallSuppressFinalizeTests.cs,WarningIfSealedClassHaveUserDefinedFinalizerImplmentsIDisposableWithNoSuppressFinalizeCall,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposablesShouldCallSuppressFinalize.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(4' 33)                  .WithMessage("'MyType' should call GC.SuppressFinalize inside the Dispose method.");
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,IntFieldWithAssignmentToZeroOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 17)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' 0));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,IntFieldWithAssignmentToZeroOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 17)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' 0));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,IntFieldWithAssignmentToDefaultCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 17)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' "default(int)"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,IntFieldWithAssignmentToDefaultCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 17)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' "default(int)"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,StringFieldWithAssignmentToNullCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 20)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "s"' "null"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,StringFieldWithAssignmentToNullCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 20)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "s"' "null"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,LongFieldWithAssignmentTo0LCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 18)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' "0L"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,LongFieldWithAssignmentTo0LCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 18)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' "0L"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,LongFieldWithAssignmentToZeroCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 18)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' "0"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,LongFieldWithAssignmentToZeroCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 18)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' "0"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,IntPtrWithAssignmentToSystemIntPtrZeroCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 27)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' "System.IntPtr.Zero"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,IntPtrWithAssignmentToSystemIntPtrZeroCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 27)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' "System.IntPtr.Zero"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,IntPtrWithAssignmentToIntPtrZeroCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(5' 20)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' "IntPtr.Zero"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,IntPtrWithAssignmentToIntPtrZeroCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(5' 20)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' "IntPtr.Zero"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,UIntPtrWithAssignmentToSystemUIntPtrZeroCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 28)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' "System.UIntPtr.Zero"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,UIntPtrWithAssignmentToSystemUIntPtrZeroCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 28)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "i"' "System.UIntPtr.Zero"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,DateTimeWithAssignmentToDateTimeMinValueCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 29)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "d"' "System.DateTime.MinValue"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,DateTimeWithAssignmentToDateTimeMinValueCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 29)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "d"' "System.DateTime.MinValue"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,EnumWithAssignmentToZeroCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(5' 15)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "e"' "0"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,EnumWithAssignmentToZeroCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(5' 15)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "e"' "0"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,EnumWithAssignmentToZeroDoubleCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(5' 15)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "e"' "0.0"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,EnumWithAssignmentToZeroDoubleCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(5' 15)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "e"' "0.0"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,BoolWithAssignmentToFalseCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 18)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "b"' "false"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,BoolWithAssignmentToFalseCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 18)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "b"' "false"));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,IntFieldWithAssignmentToZeroWithMultipleVariableDeclarationsOnTheSameFieldOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 23)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "k"' 0));
Magic Number,CodeCracker.Test.CSharp.Usage,RedundantFieldAssignmentTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RedundantFieldAssignmentTests.cs,IntFieldWithAssignmentToZeroWithMultipleVariableDeclarationsOnTheSameFieldOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RedundantFieldAssignment.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(4' 23)                  .WithMessage(string.Format(RedundantFieldAssignmentAnalyzer.MessageFormat' "k"' 0));
Magic Number,CodeCracker.Test.CSharp.Usage,RemoveRedundantElseClauseTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemoveRedundantElseClauseTests.cs,IgnoreElseIf,The following statement contains a magic number: var a = 2;
Magic Number,CodeCracker.Test.CSharp.Usage,RemoveRedundantElseClauseTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemoveRedundantElseClauseTests.cs,IgnoreElseIf,The following statement contains a magic number: System.DateTime.Now.Second > 5
Magic Number,CodeCracker.Test.CSharp.Usage,RemoveRedundantElseClauseTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemoveRedundantElseClauseTests.cs,CreateDiagnosticsWhenEmptyElse,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RemoveRedundantElseClause.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 37)                  .WithMessage("Remove redundant else");
Magic Number,CodeCracker.Test.CSharp.Usage,RemoveRedundantElseClauseTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemoveRedundantElseClauseTests.cs,CreateDiagnosticsWhenEmptyElse,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RemoveRedundantElseClause.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 37)                  .WithMessage("Remove redundant else");
Magic Number,CodeCracker.Test.CSharp.Usage,RemoveRedundantElseClauseTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemoveRedundantElseClauseTests.cs,CreateDiagnosticsWhenEmptyElseWithoutBlockOnIf,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RemoveRedundantElseClause.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 34)                  .WithMessage("Remove redundant else");
Magic Number,CodeCracker.Test.CSharp.Usage,RemoveRedundantElseClauseTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemoveRedundantElseClauseTests.cs,CreateDiagnosticsWhenEmptyElseWithoutBlockOnIf,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RemoveRedundantElseClause.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' 34)                  .WithMessage("Remove redundant else");
Magic Number,CodeCracker.Test.CSharp.Usage,RemovePrivateMethodNeverUsedAnalyzerTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemovePrivateMethodNeverUsedAnalyzerTest.cs,WinFormsPropertyDefaultValueDefinitionMethodsMustHaveCorrectSignature,The following statement contains a magic number: var result1 = CreateDiagnosticResult(13' 1);
Magic Number,CodeCracker.Test.CSharp.Usage,RemovePrivateMethodNeverUsedAnalyzerTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemovePrivateMethodNeverUsedAnalyzerTest.cs,WinFormsPropertyDefaultValueDefinitionMethodsMustHaveCorrectSignature,The following statement contains a magic number: var result2 = CreateDiagnosticResult(14' 1);
Magic Number,CodeCracker.Test.CSharp.Usage,RemovePrivateMethodNeverUsedAnalyzerTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemovePrivateMethodNeverUsedAnalyzerTest.cs,WinFormsPropertyDefaultValueDefinitionMethodsMustHaveCorrectSignature,The following statement contains a magic number: var result3 = CreateDiagnosticResult(15' 1);
Magic Number,CodeCracker.Test.CSharp.Usage,RemovePrivateMethodNeverUsedAnalyzerTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemovePrivateMethodNeverUsedAnalyzerTest.cs,WinFormsPropertyDefaultValueDefinitionMethodsMustHaveCorrectSignature,The following statement contains a magic number: var result4 = CreateDiagnosticResult(17' 1);
Magic Number,CodeCracker.Test.CSharp.Usage,RemovePrivateMethodNeverUsedAnalyzerTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemovePrivateMethodNeverUsedAnalyzerTest.cs,WinFormsPropertyDefaultValueDefinitionMethodsMustHaveCorrectSignature,The following statement contains a magic number: var result5 = CreateDiagnosticResult(18' 1);
Magic Number,CodeCracker.Test.CSharp.Usage,RemovePrivateMethodNeverUsedAnalyzerTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemovePrivateMethodNeverUsedAnalyzerTest.cs,WinFormsPropertyDefaultValueDefinitionMethodsMustHaveCorrespondingProperty,The following statement contains a magic number: var result1 = CreateDiagnosticResult(9' 1);
Magic Number,CodeCracker.Test.CSharp.Usage,RemovePrivateMethodNeverUsedAnalyzerTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemovePrivateMethodNeverUsedAnalyzerTest.cs,WinFormsPropertyDefaultValueDefinitionMethodsMustHaveCorrespondingProperty,The following statement contains a magic number: var result2 = CreateDiagnosticResult(11' 1);
Magic Number,CodeCracker.Test.CSharp.Usage,RemovePrivateMethodNeverUsedAnalyzerTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemovePrivateMethodNeverUsedAnalyzerTest.cs,WinFormsPropertyDefaultValueDefinitionMethodsMustHaveASuffix,The following statement contains a magic number: var result1 = CreateDiagnosticResult(9' 1);
Magic Number,CodeCracker.Test.CSharp.Usage,RemovePrivateMethodNeverUsedAnalyzerTest,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RemovePrivateMethodNeverUsedAnalyzerTest.cs,WinFormsPropertyDefaultValueDefinitionMethodsMustHaveASuffix,The following statement contains a magic number: var result2 = CreateDiagnosticResult(11' 1);
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,NoPrivateFieldWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateExpectedDiagnosticResult(line: 4' column: 19));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,NoPrivateFieldWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateExpectedDiagnosticResult(line: 4' column: 19));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,NoPrivateFieldsInAStructCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(                  source'                  CreateExpectedDiagnosticResult(line: 4' column: 16)'                  CreateExpectedDiagnosticResult(line: 5' column: 18' fieldName: "j"));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,NoPrivateFieldsInAStructCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(                  source'                  CreateExpectedDiagnosticResult(line: 4' column: 16)'                  CreateExpectedDiagnosticResult(line: 5' column: 18' fieldName: "j"));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,NoPrivateFieldsInAStructCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(                  source'                  CreateExpectedDiagnosticResult(line: 4' column: 16)'                  CreateExpectedDiagnosticResult(line: 5' column: 18' fieldName: "j"));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,NoPrivateFieldsInAStructCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(                  source'                  CreateExpectedDiagnosticResult(line: 4' column: 16)'                  CreateExpectedDiagnosticResult(line: 5' column: 18' fieldName: "j"));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,StaticFieldCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateExpectedDiagnosticResult(line: 4' column: 26));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,StaticFieldCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateExpectedDiagnosticResult(line: 4' column: 26));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,StaticFieldAssignmentOnStaticConstructorCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateExpectedDiagnosticResult(line: 4' column: 26));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,StaticFieldAssignmentOnStaticConstructorCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateExpectedDiagnosticResult(line: 4' column: 26));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,FieldWithAssignmentOnConstructorCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateExpectedDiagnosticResult(line: 6' column: 20));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,FieldWithAssignmentOnConstructorCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateExpectedDiagnosticResult(line: 6' column: 20));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,FieldWithPostfixUnaryAssignmentOnConstructorCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateExpectedDiagnosticResult(line: 4' column: 19));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,FieldWithPostfixUnaryAssignmentOnConstructorCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateExpectedDiagnosticResult(line: 4' column: 19));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,FieldWithPrefixUnaryAssignmentOnConstructorCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateExpectedDiagnosticResult(line: 4' column: 19));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,FieldWithPrefixUnaryAssignmentOnConstructorCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateExpectedDiagnosticResult(line: 4' column: 19));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,TwoClassesWithNoPrivateFieldsCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' new[] {                  CreateExpectedDiagnosticResult(line: 6' column: 17' fieldName: "i")'                  CreateExpectedDiagnosticResult(line: 7' column: 17' fieldName: "j")'                  CreateExpectedDiagnosticResult(line: 11' column: 19' fieldName: "k")'                  CreateExpectedDiagnosticResult(line: 12' column: 19' fieldName: "l")              });
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,TwoClassesWithNoPrivateFieldsCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' new[] {                  CreateExpectedDiagnosticResult(line: 6' column: 17' fieldName: "i")'                  CreateExpectedDiagnosticResult(line: 7' column: 17' fieldName: "j")'                  CreateExpectedDiagnosticResult(line: 11' column: 19' fieldName: "k")'                  CreateExpectedDiagnosticResult(line: 12' column: 19' fieldName: "l")              });
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,TwoClassesWithNoPrivateFieldsCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' new[] {                  CreateExpectedDiagnosticResult(line: 6' column: 17' fieldName: "i")'                  CreateExpectedDiagnosticResult(line: 7' column: 17' fieldName: "j")'                  CreateExpectedDiagnosticResult(line: 11' column: 19' fieldName: "k")'                  CreateExpectedDiagnosticResult(line: 12' column: 19' fieldName: "l")              });
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,TwoClassesWithNoPrivateFieldsCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' new[] {                  CreateExpectedDiagnosticResult(line: 6' column: 17' fieldName: "i")'                  CreateExpectedDiagnosticResult(line: 7' column: 17' fieldName: "j")'                  CreateExpectedDiagnosticResult(line: 11' column: 19' fieldName: "k")'                  CreateExpectedDiagnosticResult(line: 12' column: 19' fieldName: "l")              });
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,TwoClassesWithNoPrivateFieldsCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' new[] {                  CreateExpectedDiagnosticResult(line: 6' column: 17' fieldName: "i")'                  CreateExpectedDiagnosticResult(line: 7' column: 17' fieldName: "j")'                  CreateExpectedDiagnosticResult(line: 11' column: 19' fieldName: "k")'                  CreateExpectedDiagnosticResult(line: 12' column: 19' fieldName: "l")              });
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,TwoClassesWithNoPrivateFieldsCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' new[] {                  CreateExpectedDiagnosticResult(line: 6' column: 17' fieldName: "i")'                  CreateExpectedDiagnosticResult(line: 7' column: 17' fieldName: "j")'                  CreateExpectedDiagnosticResult(line: 11' column: 19' fieldName: "k")'                  CreateExpectedDiagnosticResult(line: 12' column: 19' fieldName: "l")              });
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,TwoClassesWithNoPrivateFieldsCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' new[] {                  CreateExpectedDiagnosticResult(line: 6' column: 17' fieldName: "i")'                  CreateExpectedDiagnosticResult(line: 7' column: 17' fieldName: "j")'                  CreateExpectedDiagnosticResult(line: 11' column: 19' fieldName: "k")'                  CreateExpectedDiagnosticResult(line: 12' column: 19' fieldName: "l")              });
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,TwoClassesWithNoPrivateFieldsCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' new[] {                  CreateExpectedDiagnosticResult(line: 6' column: 17' fieldName: "i")'                  CreateExpectedDiagnosticResult(line: 7' column: 17' fieldName: "j")'                  CreateExpectedDiagnosticResult(line: 11' column: 19' fieldName: "k")'                  CreateExpectedDiagnosticResult(line: 12' column: 19' fieldName: "l")              });
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,ReadFieldFieldFromOtherTypeCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(new[] { source1' source2 }' new[] { CreateExpectedDiagnosticResult(line: 6' column: 17) });
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,ReadFieldFieldFromOtherTypeCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(new[] { source1' source2 }' new[] { CreateExpectedDiagnosticResult(line: 6' column: 17) });
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,ReadFieldFieldFromNestedTypeCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateExpectedDiagnosticResult(line: 04' column: 19' fieldName: "j")'                  CreateExpectedDiagnosticResult(line: 12' column: 19' fieldName: "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,ReadFieldFieldFromNestedTypeCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateExpectedDiagnosticResult(line: 04' column: 19' fieldName: "j")'                  CreateExpectedDiagnosticResult(line: 12' column: 19' fieldName: "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,ReadFieldFieldFromNestedTypeCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateExpectedDiagnosticResult(line: 04' column: 19' fieldName: "j")'                  CreateExpectedDiagnosticResult(line: 12' column: 19' fieldName: "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,ReadFieldFieldFromNestedTypeCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateExpectedDiagnosticResult(line: 04' column: 19' fieldName: "j")'                  CreateExpectedDiagnosticResult(line: 12' column: 19' fieldName: "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,FieldWithAssignmentOnConstructorByRefOrOutParameterCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateExpectedDiagnosticResult(line: 4' column: 16' fieldName: "i")'                  CreateExpectedDiagnosticResult(line: 5' column: 16' fieldName: "k"));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,FieldWithAssignmentOnConstructorByRefOrOutParameterCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateExpectedDiagnosticResult(line: 4' column: 16' fieldName: "i")'                  CreateExpectedDiagnosticResult(line: 5' column: 16' fieldName: "k"));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,FieldWithAssignmentOnConstructorByRefOrOutParameterCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateExpectedDiagnosticResult(line: 4' column: 16' fieldName: "i")'                  CreateExpectedDiagnosticResult(line: 5' column: 16' fieldName: "k"));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,FieldWithAssignmentOnConstructorByRefOrOutParameterCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateExpectedDiagnosticResult(line: 4' column: 16' fieldName: "i")'                  CreateExpectedDiagnosticResult(line: 5' column: 16' fieldName: "k"));
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,FieldInPartialClassWithAssignmentOnConstructorInOtherTreeCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(                  sources: new[] { source1' source2 }'                  expected: new[] { CreateExpectedDiagnosticResult(line: 4' column: 16) });
Magic Number,CodeCracker.Test.CSharp.Usage,NoPrivateReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\NoPrivateReadonlyFieldTest.cs,FieldInPartialClassWithAssignmentOnConstructorInOtherTreeCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(                  sources: new[] { source1' source2 }'                  expected: new[] { CreateExpectedDiagnosticResult(line: 4' column: 16) });
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,NoParametersCreatesError,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(10' 26)                  .WithMessage(StringFormatArgsAnalyzer.InvalidArgsReferenceMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,NoParametersCreatesError,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(10' 26)                  .WithMessage(StringFormatArgsAnalyzer.InvalidArgsReferenceMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,LessParametersCreatesError,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(10' 26)                  .WithMessage(StringFormatArgsAnalyzer.InvalidArgsReferenceMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,LessParametersCreatesError,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(10' 26)                  .WithMessage(StringFormatArgsAnalyzer.InvalidArgsReferenceMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,MoreArgumentsCreatesWarning,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_ExtraArgs.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 26)                  .WithMessage(StringFormatArgsAnalyzer.IncorrectNumberOfArgsMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,MoreArgumentsCreatesWarning,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_ExtraArgs.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 26)                  .WithMessage(StringFormatArgsAnalyzer.IncorrectNumberOfArgsMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,TwoParametersReferencingSamePlaceholderCreatesWarning,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_ExtraArgs.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 26)                  .WithMessage(StringFormatArgsAnalyzer.IncorrectNumberOfArgsMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,TwoParametersReferencingSamePlaceholderCreatesWarning,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_ExtraArgs.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 26)                  .WithMessage(StringFormatArgsAnalyzer.IncorrectNumberOfArgsMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,VerbatimStringWithMissingArgCreatesError,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(12' 25)                  .WithMessage(StringFormatArgsAnalyzer.InvalidArgsReferenceMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,VerbatimStringWithMissingArgCreatesError,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(12' 25)                  .WithMessage(StringFormatArgsAnalyzer.InvalidArgsReferenceMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,InvalidArgumentReferenceCreatesError,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(10' 26)                  .WithMessage(StringFormatArgsAnalyzer.InvalidArgsReferenceMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,InvalidArgumentReferenceCreatesError,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(10' 26)                  .WithMessage(StringFormatArgsAnalyzer.InvalidArgsReferenceMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,NonIntegerPlaceholderCreatesError,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(10' 26)                  .WithMessage(StringFormatArgsAnalyzer.InvalidArgsReferenceMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,NonIntegerPlaceholderCreatesError,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_InvalidArgs.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(10' 26)                  .WithMessage(StringFormatArgsAnalyzer.InvalidArgsReferenceMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,UnusedArgsCreatesWarning,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_ExtraArgs.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 13)                  .WithMessage(StringFormatArgsAnalyzer.IncorrectNumberOfArgsMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,StringFormatArgsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\StringFormatArgsTests.cs,UnusedArgsCreatesWarning,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.StringFormatArgs_ExtraArgs.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(10' 13)                  .WithMessage(StringFormatArgsAnalyzer.IncorrectNumberOfArgsMessage);
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,MethodWithoutStatementsCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnosticResult("a"' 4' 25));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,MethodWithoutStatementsCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnosticResult("a"' 4' 25));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,With2ParametersCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnosticResult("b"' 4' 31));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,With2ParametersCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnosticResult("b"' 4' 31));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,DoNotIgnoreMethodsThatMatchEventHandlerPatternButDoesNotReturnVoid,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateDiagnosticResult("sender"' 5' 24)' CreateDiagnosticResult("args"' 5' 39));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,DoNotIgnoreMethodsThatMatchEventHandlerPatternButDoesNotReturnVoid,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateDiagnosticResult("sender"' 5' 24)' CreateDiagnosticResult("args"' 5' 39));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,DoNotIgnoreMethodsThatMatchEventHandlerPatternButDoesNotReturnVoid,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateDiagnosticResult("sender"' 5' 24)' CreateDiagnosticResult("args"' 5' 39));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,DoNotIgnoreMethodsThatMatchEventHandlerPatternButDoesNotReturnVoid,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateDiagnosticResult("sender"' 5' 24)' CreateDiagnosticResult("args"' 5' 39));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,ConstructorWithoutStatementsCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnosticResult("a"' 4' 25));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,ConstructorWithoutStatementsCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnosticResult("a"' 4' 25));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,DoNotIgnoreSerializableConstructorIfTypeDoesNotImplementISerializable,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateDiagnosticResult("info"' 7' 28)' CreateDiagnosticResult("context"' 7' 52));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,DoNotIgnoreSerializableConstructorIfTypeDoesNotImplementISerializable,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateDiagnosticResult("info"' 7' 28)' CreateDiagnosticResult("context"' 7' 52));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,DoNotIgnoreSerializableConstructorIfTypeDoesNotImplementISerializable,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateDiagnosticResult("info"' 7' 28)' CreateDiagnosticResult("context"' 7' 52));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,DoNotIgnoreSerializableConstructorIfTypeDoesNotImplementISerializable,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateDiagnosticResult("info"' 7' 28)' CreateDiagnosticResult("context"' 7' 52));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,DoNotIgnoreSerializableConstructorIfTypeDoesNotHaveSerializableAttribute,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateDiagnosticResult("info"' 5' 28)' CreateDiagnosticResult("context"' 5' 52));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,DoNotIgnoreSerializableConstructorIfTypeDoesNotHaveSerializableAttribute,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateDiagnosticResult("info"' 5' 28)' CreateDiagnosticResult("context"' 5' 52));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,DoNotIgnoreSerializableConstructorIfTypeDoesNotHaveSerializableAttribute,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateDiagnosticResult("info"' 5' 28)' CreateDiagnosticResult("context"' 5' 52));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,DoNotIgnoreSerializableConstructorIfTypeDoesNotHaveSerializableAttribute,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'                  CreateDiagnosticResult("info"' 5' 28)' CreateDiagnosticResult("context"' 5' 52));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,CallWithUnusedRefPeremeterCreateDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnosticResult("out2"' 4' 49));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,CallWithUnusedRefPeremeterCreateDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnosticResult("out2"' 4' 49));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,CallWithUnusedOutPeremeterCreateDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnosticResult("out2"' 4' 49));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,CallWithUnusedOutPeremeterCreateDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnosticResult("out2"' 4' 49));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,CallWithUnusedParameterExtensionMethodCreateDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'CreateDiagnosticResult("i"' 8' 44));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,CallWithUnusedParameterExtensionMethodCreateDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source'CreateDiagnosticResult("i"' 8' 44));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,ExpressionBodiedMethodCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnosticResult("i"' 4' 20));
Magic Number,CodeCracker.Test.CSharp.Usage,UnusedParametersTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UnusedParametersTests.cs,ExpressionBodiedMethodCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(source' CreateDiagnosticResult("i"' 4' 20));
Magic Number,CodeCracker.Test.CSharp.Usage,IPAddressAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\IPAddressAnalyzerTests.cs,IfParseIdentifierFoundAndIPAddressTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(10' 40' () => IPAddress.Parse("foo")));
Magic Number,CodeCracker.Test.CSharp.Usage,IPAddressAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\IPAddressAnalyzerTests.cs,IfParseIdentifierFoundAndIPAddressTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(10' 40' () => IPAddress.Parse("foo")));
Magic Number,CodeCracker.Test.CSharp.Usage,IPAddressAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\IPAddressAnalyzerTests.cs,IfAbbreviatedParseIdentifierFoundAndIPAddressTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(10' 29' () => IPAddress.Parse("foo")));
Magic Number,CodeCracker.Test.CSharp.Usage,IPAddressAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\IPAddressAnalyzerTests.cs,IfAbbreviatedParseIdentifierFoundAndIPAddressTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(10' 29' () => IPAddress.Parse("foo")));
Magic Number,CodeCracker.Test.CSharp.Usage,JsonNetAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\JsonNetAnalyzerTests.cs,IfDeserializeObjectIdentifierFoundAndJsonTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(11' 67));
Magic Number,CodeCracker.Test.CSharp.Usage,JsonNetAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\JsonNetAnalyzerTests.cs,IfDeserializeObjectIdentifierFoundAndJsonTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(11' 67));
Magic Number,CodeCracker.Test.CSharp.Usage,JsonNetAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\JsonNetAnalyzerTests.cs,IfAbbreviatedDeserializeObjectIdentifierFoundAndJsonTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(11'51));
Magic Number,CodeCracker.Test.CSharp.Usage,JsonNetAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\JsonNetAnalyzerTests.cs,IfAbbreviatedDeserializeObjectIdentifierFoundAndJsonTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(11'51));
Magic Number,CodeCracker.Test.CSharp.Usage,JsonNetAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\JsonNetAnalyzerTests.cs,IfJObjectParseIdentifierFoundAndJsonTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(11' 48));
Magic Number,CodeCracker.Test.CSharp.Usage,JsonNetAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\JsonNetAnalyzerTests.cs,IfJObjectParseIdentifierFoundAndJsonTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(11' 48));
Magic Number,CodeCracker.Test.CSharp.Usage,JsonNetAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\JsonNetAnalyzerTests.cs,IfAbbreviatedJObjectParseIdentifierFoundAndJsonTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(11' 27));
Magic Number,CodeCracker.Test.CSharp.Usage,JsonNetAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\JsonNetAnalyzerTests.cs,IfAbbreviatedJObjectParseIdentifierFoundAndJsonTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(11' 27));
Magic Number,CodeCracker.Test.CSharp.Usage,JsonNetAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\JsonNetAnalyzerTests.cs,IfJArrayParseIdentifierFoundAndJsonTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(11' 47));
Magic Number,CodeCracker.Test.CSharp.Usage,JsonNetAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\JsonNetAnalyzerTests.cs,IfJArrayParseIdentifierFoundAndJsonTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(11' 47));
Magic Number,CodeCracker.Test.CSharp.Usage,JsonNetAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\JsonNetAnalyzerTests.cs,IfAbbreviatedJArrayParseIdentifierFoundAndJsonTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(11' 26));
Magic Number,CodeCracker.Test.CSharp.Usage,JsonNetAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\JsonNetAnalyzerTests.cs,IfAbbreviatedJArrayParseIdentifierFoundAndJsonTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(11' 26));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldWithoutModifierWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 17)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldWithoutModifierWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 17)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldsWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldsWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldsWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "j"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldsWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "j"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,TwoClassesWithFieldsWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,TwoClassesWithFieldsWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,TwoClassesWithFieldsWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "j"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,TwoClassesWithFieldsWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "j"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,TwoClassesWithFieldsWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected3 = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "k"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,TwoClassesWithFieldsWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected3 = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(11' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "k"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,TwoClassesWithFieldsWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected4 = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(12' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "l"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,TwoClassesWithFieldsWithAssignmentOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected4 = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(12' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "l"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldWithAssignmentOnDeclarationAndNestedNamespaceCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(8' 29)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldWithAssignmentOnDeclarationAndNestedNamespaceCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(8' 29)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldWithtAssignmentOnDeclarationInAStructCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldWithtAssignmentOnDeclarationInAStructCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldWithAssignmentOnConstructorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldWithAssignmentOnConstructorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldWithAssignmentOnConstructorAndOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldWithAssignmentOnConstructorAndOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 25)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldsWithAssignmentOnDeclarationWithSingleDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 28)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "j"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,FieldsWithAssignmentOnDeclarationWithSingleDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 28)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "j"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,StaticFieldInitializedOnStaticConstructorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 32)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,StaticFieldInitializedOnStaticConstructorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 32)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,StaticFieldInitializedOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 32)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,StaticFieldInitializedOnDeclarationCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 32)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "i"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,EnumerationFieldInitializedOnDeclarationCreatesADiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 33)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "car"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,EnumerationFieldInitializedOnDeclarationCreatesADiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 33)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "car"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,ReferenceTypeFieldInitializedInConstructorCreatesADiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 28)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "name"));
Magic Number,CodeCracker.Test.CSharp.Usage,ReadonlyFieldTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\ReadonlyFieldTests.cs,ReferenceTypeFieldInitializedInConstructorCreatesADiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.ReadonlyField.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(6' 28)                  .WithMessage(string.Format(ReadonlyFieldAnalyzer.Message' "name"));
Magic Number,CodeCracker.Test.CSharp.Usage,RegexTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RegexTests.cs,IfRegexIdentifierFoundAndRegexTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.Regex.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(11' 64)                  .WithMessage(message);
Magic Number,CodeCracker.Test.CSharp.Usage,RegexTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RegexTests.cs,IfRegexIdentifierFoundAndRegexTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.Regex.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(11' 64)                  .WithMessage(message);
Magic Number,CodeCracker.Test.CSharp.Usage,RegexTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RegexTests.cs,IfRegexIdentifierFoundAndAbbreviatedAndRegexTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.Regex.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(11' 33)                  .WithMessage(message);
Magic Number,CodeCracker.Test.CSharp.Usage,RegexTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RegexTests.cs,IfRegexIdentifierFoundAndAbbreviatedAndRegexTextIsIncorrectCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.Regex.ToDiagnosticId()' DiagnosticSeverity.Error)                  .WithLocation(11' 33)                  .WithMessage(message);
Magic Number,CodeCracker.Test.CSharp.Usage,IfReturnTrueTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\IfReturnTrueTests.cs,WhenUsingIfReturnTrueAndElseReturnFalseCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.IfReturnTrue.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(9' 17)                  .WithMessage("You should return the boolean directly.");
Magic Number,CodeCracker.Test.CSharp.Usage,IfReturnTrueTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\IfReturnTrueTests.cs,WhenUsingIfReturnTrueAndElseReturnFalseCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.IfReturnTrue.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(9' 17)                  .WithMessage("You should return the boolean directly.");
Magic Number,CodeCracker.Test.CSharp.Usage,IfReturnTrueTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\IfReturnTrueTests.cs,WhenUsingIfReturnFalseAndElseReturnTrueCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.IfReturnTrue.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(9' 17)                  .WithMessage("You should return the boolean directly.");
Magic Number,CodeCracker.Test.CSharp.Usage,IfReturnTrueTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\IfReturnTrueTests.cs,WhenUsingIfReturnFalseAndElseReturnTrueCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.IfReturnTrue.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(9' 17)                  .WithMessage("You should return the boolean directly.");
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsAssignedThroughAMethodCallCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsAssignedThroughAMethodCallCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldDeclarationHas2VariableItCreates2Diagnostic,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Created.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field1"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldDeclarationHas2VariableItCreates2Diagnostic,The following statement contains a magic number: var expected1 = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Created.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field1"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldDeclarationHas2VariableItCreates2Diagnostic,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 41)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field2"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldDeclarationHas2VariableItCreates2Diagnostic,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 41)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field2"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsDispoedOnATypeThatIsNotDisposableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsDispoedOnATypeThatIsNotDisposableCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsNotDisposedCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsNotDisposedCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WithStructCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Created.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WithStructCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Created.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WithPartialClassCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Created.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WithPartialClassCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Created.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(8' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsCallingIncorrectDisposeCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsCallingIncorrectDisposeCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsBeingDisposedNotOnCorrectDisposeCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsBeingDisposedNotOnCorrectDisposeCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsAssignedThroughAnObjectConstructionCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Created.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAFieldThatImplementsIDisposableIsAssignedThroughAnObjectConstructionCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Created.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 23)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAnIDisposableFieldIsAssignedThroughAMethodCallCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 33)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,DisposableFieldNotDisposedTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\DisposableFieldNotDisposedTests.cs,WhenAnIDisposableFieldIsAssignedThroughAMethodCallCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.DisposableFieldNotDisposed_Returned.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(7' 33)                  .WithMessage(string.Format(DisposableFieldNotDisposedAnalyzer.MessageFormat' "field"));
Magic Number,CodeCracker.Test.CSharp.Usage,SimplifyRedundantBooleanComparisonsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\SimplifyRedundantBooleanComparisonsTests.cs,WhenComparingWithBoolAnalyzerCreatesDiagnostic,The following statement contains a magic number: column += 10;
Magic Number,CodeCracker.Test.CSharp.Usage,SimplifyRedundantBooleanComparisonsTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\SimplifyRedundantBooleanComparisonsTests.cs,WhenComparingWithBoolAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.SimplifyRedundantBooleanComparisons.ToDiagnosticId()' DiagnosticSeverity.Info)                  .WithLocation(10' column)                  .WithMessage("You can remove this comparison.");
Magic Number,CodeCracker.Test.CSharp.Usage,UriAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UriAnalyzerTests.cs,IfAbbreviatedUriConstructorFoundAndUriIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(9' 31' () => new Uri("foo")));
Magic Number,CodeCracker.Test.CSharp.Usage,UriAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UriAnalyzerTests.cs,IfAbbreviatedUriConstructorFoundAndUriIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(9' 31' () => new Uri("foo")));
Magic Number,CodeCracker.Test.CSharp.Usage,UriAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UriAnalyzerTests.cs,IfUriConstructorFoundAndUriIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(9' 38' () => new Uri("foo")));
Magic Number,CodeCracker.Test.CSharp.Usage,UriAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UriAnalyzerTests.cs,IfUriConstructorFoundAndUriIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(9' 38' () => new Uri("foo")));
Magic Number,CodeCracker.Test.CSharp.Usage,UriAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UriAnalyzerTests.cs,IfUriConstructorWithUriKindFoundAndUriIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(9' 31' () => new Uri("http://wrong"' UriKind.Relative)));
Magic Number,CodeCracker.Test.CSharp.Usage,UriAnalyzerTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\UriAnalyzerTests.cs,IfUriConstructorWithUriKindFoundAndUriIsIncorrectCreatesDiagnostic,The following statement contains a magic number: await VerifyCSharpDiagnosticAsync(test' CreateDiagnosticResult(9' 31' () => new Uri("http://wrong"' UriKind.Relative)));
Magic Number,CodeCracker.Test.CSharp.Usage,RethrowExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RethrowExceptionTests.cs,WhenThrowingOriginalExceptionAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RethrowException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(12' 21)                  .WithMessage("Throwing the same exception that was caught will lose the original stack trace.");
Magic Number,CodeCracker.Test.CSharp.Usage,RethrowExceptionTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\RethrowExceptionTests.cs,WhenThrowingOriginalExceptionAnalyzerCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.RethrowException.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(12' 21)                  .WithMessage("Throwing the same exception that was caught will lose the original stack trace.");
Magic Number,CodeCracker.Test.CSharp.Usage,VirtualMethodOnConstructorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\VirtualMethodOnConstructorTests.cs,IfVirtualMethodFoundInConstructorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.VirtualMethodOnConstructor.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 3)                  .WithMessage(VirtualMethodOnConstructorAnalyzer.Message);
Magic Number,CodeCracker.Test.CSharp.Usage,VirtualMethodOnConstructorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\VirtualMethodOnConstructorTests.cs,IfVirtualMethodFoundInConstructorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.VirtualMethodOnConstructor.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 3)                  .WithMessage(VirtualMethodOnConstructorAnalyzer.Message);
Magic Number,CodeCracker.Test.CSharp.Usage,VirtualMethodOnConstructorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\VirtualMethodOnConstructorTests.cs,IfVirtualMethodWithThisFoundInConstructorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.VirtualMethodOnConstructor.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 3)                  .WithMessage(VirtualMethodOnConstructorAnalyzer.Message);
Magic Number,CodeCracker.Test.CSharp.Usage,VirtualMethodOnConstructorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\VirtualMethodOnConstructorTests.cs,IfVirtualMethodWithThisFoundInConstructorCreatesDiagnostic,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.VirtualMethodOnConstructor.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 3)                  .WithMessage(VirtualMethodOnConstructorAnalyzer.Message);
Magic Number,CodeCracker.Test.CSharp.Usage,VirtualMethodOnConstructorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\VirtualMethodOnConstructorTests.cs,IfManyVirtualMethodFoundInConstructorCreatesDiagnostics,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.VirtualMethodOnConstructor.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 3)                  .WithMessage(VirtualMethodOnConstructorAnalyzer.Message);
Magic Number,CodeCracker.Test.CSharp.Usage,VirtualMethodOnConstructorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\VirtualMethodOnConstructorTests.cs,IfManyVirtualMethodFoundInConstructorCreatesDiagnostics,The following statement contains a magic number: var expected = new DiagnosticResult(DiagnosticId.VirtualMethodOnConstructor.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(6' 3)                  .WithMessage(VirtualMethodOnConstructorAnalyzer.Message);
Magic Number,CodeCracker.Test.CSharp.Usage,VirtualMethodOnConstructorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\VirtualMethodOnConstructorTests.cs,IfManyVirtualMethodFoundInConstructorCreatesDiagnostics,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.VirtualMethodOnConstructor.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 3)                  .WithMessage(VirtualMethodOnConstructorAnalyzer.Message);
Magic Number,CodeCracker.Test.CSharp.Usage,VirtualMethodOnConstructorTests,D:\research\architectureSmells\repos\code-cracker_code-cracker\test\CSharp\CodeCracker.Test\Usage\VirtualMethodOnConstructorTests.cs,IfManyVirtualMethodFoundInConstructorCreatesDiagnostics,The following statement contains a magic number: var expected2 = new DiagnosticResult(DiagnosticId.VirtualMethodOnConstructor.ToDiagnosticId()' DiagnosticSeverity.Warning)                  .WithLocation(7' 3)                  .WithMessage(VirtualMethodOnConstructorAnalyzer.Message);
