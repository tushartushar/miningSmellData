Implementation smell,Namespace,Class,File,Method,Description
Magic Number,RotateAroundCustomAction,GameLayer,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\GameLayer.cs,AddedToScene,The following statement contains a magic number: originNode.DrawDot(origin' 10' new CCColor4F(CCColor4B.Magenta));
Magic Number,RotateAroundCustomAction,GameLayer,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\GameLayer.cs,PositionMonkey,The following statement contains a magic number: var startingAngle = CCRandom.GetRandomInt(-360' 360);
Magic Number,RotateAroundCustomAction,GameLayer,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\GameLayer.cs,PositionMonkey,The following statement contains a magic number: var startingAngle = CCRandom.GetRandomInt(-360' 360);
Magic Number,RotateAroundCustomAction,GameLayer,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\GameLayer.cs,PositionMonkey,The following statement contains a magic number: monkey.Position = CCPoint.RotateByAngle(origin + new CCPoint(230' 0)' origin' CCMathHelper.ToRadians(startingAngle));
Magic Number,RotateAroundCustomAction,CCRotateAroundToState,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\RotateAroundActions.cs,CCRotateAroundToState,The following statement contains a magic number: StartAngle = (StartAngle + 360) % 360;
Magic Number,RotateAroundCustomAction,CCRotateAroundToState,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\RotateAroundActions.cs,CCRotateAroundToState,The following statement contains a magic number: StartAngle = (StartAngle + 360) % 360;
Magic Number,RotateAroundCustomAction,CCRotateAroundToState,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\RotateAroundActions.cs,CCRotateAroundToState,The following statement contains a magic number: DiffAngle = (DiffAngle + 360 * RotationDirection) % 360;
Magic Number,RotateAroundCustomAction,CCRotateAroundToState,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\RotateAroundActions.cs,CCRotateAroundToState,The following statement contains a magic number: DiffAngle = (DiffAngle + 360 * RotationDirection) % 360;
Magic Number,RotateAroundCustomAction,GameLayer2,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\GameLayer2.cs,AddedToScene,The following statement contains a magic number: originNode.DrawDot(origin' 10' new CCColor4F(CCColor4B.Magenta));
Magic Number,RotateAroundCustomAction,GameLayer2,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\GameLayer2.cs,AddedToScene,The following statement contains a magic number: rotateAround = new CCRotateAroundTo(2.0f' origin' 45' -1);
Magic Number,RotateAroundCustomAction,GameLayer2,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\GameLayer2.cs,PositionMonkey,The following statement contains a magic number: var startingAngle = CCRandom.GetRandomInt(-360' 360);
Magic Number,RotateAroundCustomAction,GameLayer2,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\GameLayer2.cs,PositionMonkey,The following statement contains a magic number: var startingAngle = CCRandom.GetRandomInt(-360' 360);
Magic Number,RotateAroundCustomAction,GameLayer2,C:\repos\mono_cocos-sharp-samples\RotateAroundCustomAction\RotateAroundCustomAction\RotateAroundCustomAction.Common\GameLayer2.cs,PositionMonkey,The following statement contains a magic number: monkey.Position = CCPoint.RotateByAngle(origin + new CCPoint(230' 0)' origin' CCMathHelper.ToRadians(startingAngle));
