Implementation smell,Namespace,Class,File,Method,Description
Long Method,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddButtons,The method has 114 lines of code.
Long Method,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The method has 244 lines of code.
Complex Method,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,NeedsLayout,Cyclomatic complexity of the method is 15
Complex Method,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,UpdateWithSprite,Cyclomatic complexity of the method is 10
Complex Method,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,Cyclomatic complexity of the method is 15
Complex Method,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,ApplyBlendFunc,Cyclomatic complexity of the method is 11
Complex Method,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,UpdatePositions,Cyclomatic complexity of the method is 11
Long Parameter List,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,CCControlSwitch,The method has 6 parameters. Parameters: maskSprite' onSprite' offSprite' thumbSprite' onLabel' offLabel
Long Parameter List,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,CCControlSwitchSprite,The method has 6 parameters. Parameters: maskSprite' onSprite' offSprite' thumbSprite' onLabel' offLabel
Long Parameter List,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,UpdateWithSprite,The method has 6 parameters. Parameters: sprite' textureRect' rotated' offset' originalSize' capInsets
Long Identifier,CocosSharp,CCControlStepper,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlStepper.cs,,The length of the parameter AutorepeatIncreaseTimeIncrement is 31.
Long Identifier,CocosSharp,CCControlStepper,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlStepper.cs,,The length of the parameter ControlStepperLabelColorDisabled is 32.
Long Identifier,CocosSharp,CCControlStepper,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlStepper.cs,,The length of the parameter ControlStepperLabelColorEnabled is 31.
Long Identifier,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The length of the parameter rotatedRightBottomBoundsOriginal is 32.
Long Statement,AudioSample,AudioSlider,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,SetValue,The length of the statement  "                    lblMaxValue = new CCLabel(valueText' "arial"' 10' CCLabelFormat.SystemFont) { AnchorPoint = CCPoint.AnchorMiddleRight }; " is 120.
Long Statement,CocosSharp,CCControlSlider,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSlider.cs,ValueForLocation,The length of the statement  "			return Math.Max(Math.Min(minimumValue + percent * (MaximumValue - MinimumValue)' MaximumAllowedValue)' MinimumAllowedValue); " is 124.
Long Statement,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,NeedsLayout,The length of the statement  "			OffSprite.Position = new CCPoint(OnSprite.ContentSize.Width + OffSprite.ContentSize.Width / 2 + sliderXPosition' OffSprite.ContentSize.Height / 2); " is 147.
Long Statement,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,NeedsLayout,The length of the statement  "				OnLabel.Position = new CCPoint(OnSprite.Position.X - ThumbSprite.ContentSize.Width / 6' OnSprite.ContentSize.Height / 2); " is 121.
Long Statement,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,NeedsLayout,The length of the statement  "				OffLabel.Position = new CCPoint(OffSprite.Position.X + ThumbSprite.ContentSize.Width / 6' OffSprite.ContentSize.Height / 2); " is 124.
Long Statement,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,intersectRect,The length of the statement  "            float bottomRealPoint = (float)System.Math.Min(first.Origin.Y + first.Size.Height' second.Origin.Y + second.Size.Height); " is 121.
Complex Conditional,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,UpdateCapInset,The conditional expression  "insetLeft == 0 && insetTop == 0 && insetRight == 0 && insetBottom == 0"  is complex.
Virtual Method Call from Constructor,CocosSharp,CCControlColourPicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlColourPicker.cs,CCControlColourPicker,The constructor "CCControlColourPicker" calls a virtual method "AddTargetWithActionForControlEvents".
Virtual Method Call from Constructor,CocosSharp,CCControlColourPicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlColourPicker.cs,CCControlColourPicker,The constructor "CCControlColourPicker" calls a virtual method "AddTargetWithActionForControlEvents".
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,GameLayer,The following statement contains a magic number: Opacity = 255;
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,GameLayer,The following statement contains a magic number: Schedule( (dt) =>                     {                      var musicVolume = sliderMusicVolume.Value;                      if ((float)Math.Abs(musicVolume - MusicVolume) > 0.001)                       {                          MusicVolume = musicVolume;                          CCSimpleAudioEngine.SharedEngine.BackgroundMusicVolume = musicVolume;                      }                        var effectsVolume = sliderEffectsVolume.Value;                      if ((float)Math.Abs(effectsVolume - EffectsVolume) > 0.001)                       {                          EffectsVolume = effectsVolume;                          CCSimpleAudioEngine.SharedEngine.EffectsVolume = effectsVolume;                      }                  }              );
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,GameLayer,The following statement contains a magic number: Schedule( (dt) =>                     {                      var musicVolume = sliderMusicVolume.Value;                      if ((float)Math.Abs(musicVolume - MusicVolume) > 0.001)                       {                          MusicVolume = musicVolume;                          CCSimpleAudioEngine.SharedEngine.BackgroundMusicVolume = musicVolume;                      }                        var effectsVolume = sliderEffectsVolume.Value;                      if ((float)Math.Abs(effectsVolume - EffectsVolume) > 0.001)                       {                          EffectsVolume = effectsVolume;                          CCSimpleAudioEngine.SharedEngine.EffectsVolume = effectsVolume;                      }                  }              );
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddButtons,The following statement contains a magic number: var lblMusic = new CCLabel("Control Music"' "Arial"' 48' CCLabelFormat.SystemFont);
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddButtons,The following statement contains a magic number: btnPlay.Triggered += (sender' e) =>                  {                      var musicFile = btnCurrentBackground.Text;                      musicFile = "sounds/"+ musicFile.Substring(2' musicFile.Length - 4).Trim();                      audio.PlayBackgroundMusic(musicFile' true);                  };
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddButtons,The following statement contains a magic number: btnPlay.Triggered += (sender' e) =>                  {                      var musicFile = btnCurrentBackground.Text;                      musicFile = "sounds/"+ musicFile.Substring(2' musicFile.Length - 4).Trim();                      audio.PlayBackgroundMusic(musicFile' true);                  };
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddButtons,The following statement contains a magic number: var lblSound = new CCLabel("Control Effects"' "arial"' 48' CCLabelFormat.SystemFont);
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddButtons,The following statement contains a magic number: btnPlayEffect.Triggered += (sender' e) =>                  {                      var effectFile = btnCurrentEffect.Text;                      effectFile = "sounds/"+ effectFile.Substring(2' effectFile.Length - 4).Trim();                      var pitch = sliderPitch.Value;                      var pan = sliderPan.Value;                      var gain = sliderGain.Value;                      soundId = audio.PlayEffect(effectFile' false);//' pitch' pan' gain);                  };
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddButtons,The following statement contains a magic number: btnPlayEffect.Triggered += (sender' e) =>                  {                      var effectFile = btnCurrentEffect.Text;                      effectFile = "sounds/"+ effectFile.Substring(2' effectFile.Length - 4).Trim();                      var pitch = sliderPitch.Value;                      var pan = sliderPan.Value;                      var gain = sliderGain.Value;                      soundId = audio.PlayEffect(effectFile' false);//' pitch' pan' gain);                  };
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddButtons,The following statement contains a magic number: btnPlayEffectInLoop.Triggered += (sender' e) =>                  {                      var effectFile = btnCurrentEffect.Text;                      effectFile = "sounds/"+ effectFile.Substring(2' effectFile.Length - 4).Trim();                      var pitch = sliderPitch.Value;                      var pan = sliderPan.Value;                      var gain = sliderGain.Value;                      soundId = audio.PlayEffect(effectFile' true);//' pitch' pan' gain);                  };
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddButtons,The following statement contains a magic number: btnPlayEffectInLoop.Triggered += (sender' e) =>                  {                      var effectFile = btnCurrentEffect.Text;                      effectFile = "sounds/"+ effectFile.Substring(2' effectFile.Length - 4).Trim();                      var pitch = sliderPitch.Value;                      var pan = sliderPan.Value;                      var gain = sliderGain.Value;                      soundId = audio.PlayEffect(effectFile' true);//' pitch' pan' gain);                  };
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddButtons,The following statement contains a magic number: btnUnloadEffect.Triggered += (sender' e) =>                  {                      var effectFile = btnCurrentEffect.Text;                      effectFile = "sounds/"+ effectFile.Substring(2' effectFile.Length - 4).Trim();                      audio.UnloadEffect(effectFile);                  };
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddButtons,The following statement contains a magic number: btnUnloadEffect.Triggered += (sender' e) =>                  {                      var effectFile = btnCurrentEffect.Text;                      effectFile = "sounds/"+ effectFile.Substring(2' effectFile.Length - 4).Trim();                      audio.UnloadEffect(effectFile);                  };
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddSliders,The following statement contains a magic number: sliderPitch.SetValue(0.5f' 2' 1);
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddSliders,The following statement contains a magic number: var lblEffectsVolume = new CCLabel("Effects Volume"' "arial"' 16' CCLabelFormat.SystemFont);
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddSliders,The following statement contains a magic number: var lblMusicVolume = new CCLabel("Music Volume"' "arial"' 16' CCLabelFormat.SystemFont);
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddSoundSelections,The following statement contains a magic number: var lblEffectFiles = new CCLabel("Current Effect"' "arial"' 14' CCLabelFormat.SystemFont);
Magic Number,AudioSample,GameLayer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,AddSoundSelections,The following statement contains a magic number: var lblBackgroundFiles = new CCLabel("Current Background"' "arial"' 14' CCLabelFormat.SystemFont);
Magic Number,AudioSample,Button,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,Button,The following statement contains a magic number: child = new CCLabel(text' "arial"' 16' CCLabelFormat.SystemFont);
Magic Number,AudioSample,Button,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,scaleButtonTo,The following statement contains a magic number: action.Tag = 900;
Magic Number,AudioSample,Button,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,scaleButtonTo,The following statement contains a magic number: StopAction(900);
Magic Number,AudioSample,AudioSlider,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,SetValue,The following statement contains a magic number: if (lblMinValue == null)                  {                      lblMinValue = new CCLabel(valueText' "arial"' 10' CCLabelFormat.SystemFont) { AnchorPoint = CCPoint.AnchorMiddleLeft };                      AddChild(lblMinValue);                        if (direction == Direction.Vertical)                          lblMinValue.Position = new CCPoint(0' slider.ScaledContentSize.Height);                      else                          lblMinValue.Position = new CCPoint(0' slider.ScaledContentSize.Height * 1.5f);                  }                  else                      lblMinValue.Text = valueText;
Magic Number,AudioSample,AudioSlider,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\GameLayer.cs,SetValue,The following statement contains a magic number: if (lblMaxValue == null)                  {                      lblMaxValue = new CCLabel(valueText' "arial"' 10' CCLabelFormat.SystemFont) { AnchorPoint = CCPoint.AnchorMiddleRight };                      AddChild(lblMaxValue);                        if (direction == Direction.Vertical)                      {                          lblMaxValue.Position = new CCPoint(slider.ScaledContentSize.Height * 1.75f' slider.ScaledContentSize.Width);                          AnchorPoint = CCPoint.AnchorMiddleLeft;                      }                      else                          lblMaxValue.Position = new CCPoint(slider.ScaledContentSize.Width' slider.ScaledContentSize.Height * 1.5f);                  }                  else                      lblMaxValue.Text = valueText;
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,InitCCControlButton,The following statement contains a magic number: Color = new CCColor3B(255' 255' 255);
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,InitCCControlButton,The following statement contains a magic number: Color = new CCColor3B(255' 255' 255);
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,InitCCControlButton,The following statement contains a magic number: Color = new CCColor3B(255' 255' 255);
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,InitCCControlButton,The following statement contains a magic number: Opacity = 255;
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,NeedsLayout,The following statement contains a magic number: if (titleLabel != null)  			{  				titleLabel.Position = new CCPoint(ContentSize.Width / 2' ContentSize.Height / 2);  			}
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,NeedsLayout,The following statement contains a magic number: if (titleLabel != null)  			{  				titleLabel.Position = new CCPoint(ContentSize.Width / 2' ContentSize.Height / 2);  			}
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,NeedsLayout,The following statement contains a magic number: if (_backgroundSprite != null)  			{  				_backgroundSprite.Position = new CCPoint(ContentSize.Width / 2' ContentSize.Height / 2);  			}
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,NeedsLayout,The following statement contains a magic number: if (_backgroundSprite != null)  			{  				_backgroundSprite.Position = new CCPoint(ContentSize.Width / 2' ContentSize.Height / 2);  			}
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,NeedsLayout,The following statement contains a magic number: if (isAdjustBackgroundImage)  			{  				// Add the margins  				if (_backgroundSprite != null)  				{  					_backgroundSprite.ContentSize = new CCSize(titleLabelSize.Width + _marginH * 2' titleLabelSize.Height + _marginV * 2);  				}  			}  			else  			{  				//TODO: should this also have margins if one of the preferred sizes is relaxed?  				if (_backgroundSprite != null && _backgroundSprite is CCScale9Sprite)  				{  					CCSize preferredSize = ((CCScale9Sprite)_backgroundSprite).PreferredSize;  					if (preferredSize.Width <= 0)  					{  						preferredSize.Width = titleLabelSize.Width;  					}  					if (preferredSize.Height <= 0)  					{  						preferredSize.Height = titleLabelSize.Height;  					}    					_backgroundSprite.ContentSize = preferredSize;  				}  			}
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,NeedsLayout,The following statement contains a magic number: if (isAdjustBackgroundImage)  			{  				// Add the margins  				if (_backgroundSprite != null)  				{  					_backgroundSprite.ContentSize = new CCSize(titleLabelSize.Width + _marginH * 2' titleLabelSize.Height + _marginV * 2);  				}  			}  			else  			{  				//TODO: should this also have margins if one of the preferred sizes is relaxed?  				if (_backgroundSprite != null && _backgroundSprite is CCScale9Sprite)  				{  					CCSize preferredSize = ((CCScale9Sprite)_backgroundSprite).PreferredSize;  					if (preferredSize.Width <= 0)  					{  						preferredSize.Width = titleLabelSize.Width;  					}  					if (preferredSize.Height <= 0)  					{  						preferredSize.Height = titleLabelSize.Height;  					}    					_backgroundSprite.ContentSize = preferredSize;  				}  			}
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,NeedsLayout,The following statement contains a magic number: if (titleLabel != null)  			{  				titleLabel.Position = new CCPoint(ContentSize.Width / 2' ContentSize.Height / 2);  				// Make visible label  				titleLabel.Visible = true;  			}
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,NeedsLayout,The following statement contains a magic number: if (titleLabel != null)  			{  				titleLabel.Position = new CCPoint(ContentSize.Width / 2' ContentSize.Height / 2);  				// Make visible label  				titleLabel.Visible = true;  			}
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,NeedsLayout,The following statement contains a magic number: if (_backgroundSprite != null)  			{  				_backgroundSprite.Position = new CCPoint(ContentSize.Width / 2' ContentSize.Height / 2);  				// Make visible the background  				_backgroundSprite.Visible = true;  			}
Magic Number,CocosSharp,CCControlButton,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlButton.cs,NeedsLayout,The following statement contains a magic number: if (_backgroundSprite != null)  			{  				_backgroundSprite.Position = new CCPoint(ContentSize.Width / 2' ContentSize.Height / 2);  				// Make visible the background  				_backgroundSprite.Visible = true;  			}
Magic Number,CocosSharp,CCControlColourPicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlColourPicker.cs,CCControlColourPicker,The following statement contains a magic number: CCPoint backgroundPointZero   				= Background.Position - new CCPoint(Background.ContentSize.Width / 2' Background.ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlColourPicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlColourPicker.cs,CCControlColourPicker,The following statement contains a magic number: CCPoint backgroundPointZero   				= Background.Position - new CCPoint(Background.ContentSize.Width / 2' Background.ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlColourPicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlColourPicker.cs,CCControlColourPicker,The following statement contains a magic number: float hueShift = 8;
Magic Number,CocosSharp,CCControlColourPicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlColourPicker.cs,CCControlColourPicker,The following statement contains a magic number: float colourShift = 28;
Magic Number,CocosSharp,CCControlHuePicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlHuePicker.cs,CheckSliderPosition,The following statement contains a magic number: double distance = Math.Sqrt(Math.Pow(location.X + 10' 2) + Math.Pow(location.Y' 2));
Magic Number,CocosSharp,CCControlHuePicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlHuePicker.cs,CheckSliderPosition,The following statement contains a magic number: double distance = Math.Sqrt(Math.Pow(location.X + 10' 2) + Math.Pow(location.Y' 2));
Magic Number,CocosSharp,CCControlHuePicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlHuePicker.cs,CheckSliderPosition,The following statement contains a magic number: double distance = Math.Sqrt(Math.Pow(location.X + 10' 2) + Math.Pow(location.Y' 2));
Magic Number,CocosSharp,CCControlHuePicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlHuePicker.cs,CheckSliderPosition,The following statement contains a magic number: if (80 > distance && distance > 59)              {                  UpdateSliderPosition(location);                  return true;              }
Magic Number,CocosSharp,CCControlHuePicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlHuePicker.cs,CheckSliderPosition,The following statement contains a magic number: if (80 > distance && distance > 59)              {                  UpdateSliderPosition(location);                  return true;              }
Magic Number,CocosSharp,CCControlPotentiometer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlPotentiometer.cs,CCControlPotentiometer,The following statement contains a magic number: AddChild(thumbSprite' 2);
Magic Number,CocosSharp,CCControlPotentiometer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlPotentiometer.cs,IsTouchInside,The following statement contains a magic number: return distance < Math.Min(ContentSize.Width / 2' ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlPotentiometer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlPotentiometer.cs,IsTouchInside,The following statement contains a magic number: return distance < Math.Min(ContentSize.Width / 2' ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlPotentiometer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlPotentiometer.cs,PotentiometerMoved,The following statement contains a magic number: if (angle > 180)              {                  angle -= 360;              }              else if (angle < -180)              {                  angle += 360;              }
Magic Number,CocosSharp,CCControlPotentiometer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlPotentiometer.cs,PotentiometerMoved,The following statement contains a magic number: if (angle > 180)              {                  angle -= 360;              }              else if (angle < -180)              {                  angle += 360;              }
Magic Number,CocosSharp,CCControlPotentiometer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlPotentiometer.cs,PotentiometerMoved,The following statement contains a magic number: if (angle > 180)              {                  angle -= 360;              }              else if (angle < -180)              {                  angle += 360;              }
Magic Number,CocosSharp,CCControlPotentiometer,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlPotentiometer.cs,PotentiometerMoved,The following statement contains a magic number: if (angle > 180)              {                  angle -= 360;              }              else if (angle < -180)              {                  angle += 360;              }
Magic Number,CocosSharp,CCControlSaturationBrightnessPicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSaturationPicker.cs,CCControlSaturationBrightnessPicker,The following statement contains a magic number: boxPos = 35;
Magic Number,CocosSharp,CCControlSaturationBrightnessPicker,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSaturationPicker.cs,CCControlSaturationBrightnessPicker,The following statement contains a magic number: boxSize = (int) Background.ContentSize.Width / 2;
Magic Number,CocosSharp,CCControlSlider,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSlider.cs,CCControlSlider,The following statement contains a magic number: ThumbSprite.Position = new CCPoint(0' ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlSlider,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSlider.cs,IsTouchInside,The following statement contains a magic number: rect.Origin.X -= ThumbSprite.ContentSize.Width / 2;
Magic Number,CocosSharp,CCControlStepper,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlStepper.cs,CCControlStepper,The following statement contains a magic number: maximumValue = 100;
Magic Number,CocosSharp,CCControlStepper,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlStepper.cs,CCControlStepper,The following statement contains a magic number: MinusLabel = new CCLabel("-"' ControlStepperLabelFont' 38);
Magic Number,CocosSharp,CCControlStepper,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlStepper.cs,CCControlStepper,The following statement contains a magic number: PlusSprite.Position = new CCPoint(minusSprite.ContentSize.Width + plusSprite.ContentSize.Width / 2' minusSprite.ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlStepper,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlStepper.cs,CCControlStepper,The following statement contains a magic number: PlusSprite.Position = new CCPoint(minusSprite.ContentSize.Width + plusSprite.ContentSize.Width / 2' minusSprite.ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlStepper,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlStepper.cs,CCControlStepper,The following statement contains a magic number: PlusLabel = new CCLabel("+"' ControlStepperLabelFont' 38);
Magic Number,CocosSharp,CCControlStepper,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlStepper.cs,Update,The following statement contains a magic number: if ((autorepeatCount < AutorepeatIncreaseTimeIncrement) && (autorepeatCount % 3) != 0)                  return;
Magic Number,CocosSharp,CCControlStepper,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlStepper.cs,StartAutorepeat,The following statement contains a magic number: Schedule(Update' AutorepeatDeltaTime' CCSchedulePriority.RepeatForever' AutorepeatDeltaTime * 3);
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,CCControlSwitch,The following statement contains a magic number: switchSprite.Position = new CCPoint(switchSprite.ContentSize.Width / 2' switchSprite.ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,CCControlSwitch,The following statement contains a magic number: switchSprite.Position = new CCPoint(switchSprite.ContentSize.Width / 2' switchSprite.ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,OnTouchBegan,The following statement contains a magic number: switchSprite.ThumbSprite.Color = new CCColor3B(166' 166' 166);
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,OnTouchBegan,The following statement contains a magic number: switchSprite.ThumbSprite.Color = new CCColor3B(166' 166' 166);
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,OnTouchBegan,The following statement contains a magic number: switchSprite.ThumbSprite.Color = new CCColor3B(166' 166' 166);
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,OnTouchEnded,The following statement contains a magic number: switchSprite.ThumbSprite.Color = new CCColor3B(255' 255' 255);
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,OnTouchEnded,The following statement contains a magic number: switchSprite.ThumbSprite.Color = new CCColor3B(255' 255' 255);
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,OnTouchEnded,The following statement contains a magic number: switchSprite.ThumbSprite.Color = new CCColor3B(255' 255' 255);
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,OnTouchEnded,The following statement contains a magic number: if (HasMoved)              {  				On = !(location.X < switchSprite.ContentSize.Width / 2);              }              else              {  				On = !on;              }
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,OnTouchCancelled,The following statement contains a magic number: switchSprite.ThumbSprite.Color = new CCColor3B(255' 255' 255);
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,OnTouchCancelled,The following statement contains a magic number: switchSprite.ThumbSprite.Color = new CCColor3B(255' 255' 255);
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,OnTouchCancelled,The following statement contains a magic number: switchSprite.ThumbSprite.Color = new CCColor3B(255' 255' 255);
Magic Number,CocosSharp,CCControlSwitch,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,OnTouchCancelled,The following statement contains a magic number: if (HasMoved)              {  				On = !(location.X < switchSprite.ContentSize.Width / 2);              }              else              {  				On = !on;              }
Magic Number,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,CCControlSwitchSprite,The following statement contains a magic number: OffPosition = -onSprite.ContentSize.Width + thumbSprite.ContentSize.Width / 2;
Magic Number,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,NeedsLayout,The following statement contains a magic number: OnSprite.Position = new CCPoint(OnSprite.ContentSize.Width / 2 + sliderXPosition' OnSprite.ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,NeedsLayout,The following statement contains a magic number: OnSprite.Position = new CCPoint(OnSprite.ContentSize.Width / 2 + sliderXPosition' OnSprite.ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,NeedsLayout,The following statement contains a magic number: OffSprite.Position = new CCPoint(OnSprite.ContentSize.Width + OffSprite.ContentSize.Width / 2 + sliderXPosition' OffSprite.ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,NeedsLayout,The following statement contains a magic number: OffSprite.Position = new CCPoint(OnSprite.ContentSize.Width + OffSprite.ContentSize.Width / 2 + sliderXPosition' OffSprite.ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,NeedsLayout,The following statement contains a magic number: ThumbSprite.Position = new CCPoint(OnSprite.ContentSize.Width + sliderXPosition' MaskSprite.ContentSize.Height / 2);
Magic Number,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,NeedsLayout,The following statement contains a magic number: if (OnLabel != null)              {  				OnLabel.Position = new CCPoint(OnSprite.Position.X - ThumbSprite.ContentSize.Width / 6' OnSprite.ContentSize.Height / 2);              }
Magic Number,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,NeedsLayout,The following statement contains a magic number: if (OnLabel != null)              {  				OnLabel.Position = new CCPoint(OnSprite.Position.X - ThumbSprite.ContentSize.Width / 6' OnSprite.ContentSize.Height / 2);              }
Magic Number,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,NeedsLayout,The following statement contains a magic number: if (OffLabel != null)              {  				OffLabel.Position = new CCPoint(OffSprite.Position.X + ThumbSprite.ContentSize.Width / 6' OffSprite.ContentSize.Height / 2);              }
Magic Number,CocosSharp,CCControlSwitchSprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlSwitch.cs,NeedsLayout,The following statement contains a magic number: if (OffLabel != null)              {  				OffLabel.Position = new CCPoint(OffSprite.Position.X + ThumbSprite.ContentSize.Width / 6' OffSprite.ContentSize.Height / 2);              }
Magic Number,CocosSharp,CCControlUtils,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlUtils.cs,RGBfromHSV,The following statement contains a magic number: switch(i)  			{  				case 0:  					o.R = value.V;  					o.G = t;  					o.B = p;  					break;  				case 1:  					o.R = q;  					o.G = value.V;  					o.B = p;  					break;  				case 2:  					o.R = p;  					o.G = value.V;  					o.B = t;  					break;                				case 3:  					o.R = p;  					o.G = q;  					o.B = value.V;  					break;  				case 4:  					o.R = t;  					o.G = p;  					o.B = value.V;  					break;  				case 5:  				default:  					o.R = value.V;  					o.G = p;  					o.B = q;  					break;  			}
Magic Number,CocosSharp,CCControlUtils,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlUtils.cs,RGBfromHSV,The following statement contains a magic number: switch(i)  			{  				case 0:  					o.R = value.V;  					o.G = t;  					o.B = p;  					break;  				case 1:  					o.R = q;  					o.G = value.V;  					o.B = p;  					break;  				case 2:  					o.R = p;  					o.G = value.V;  					o.B = t;  					break;                				case 3:  					o.R = p;  					o.G = q;  					o.B = value.V;  					break;  				case 4:  					o.R = t;  					o.G = p;  					o.B = value.V;  					break;  				case 5:  				default:  					o.R = value.V;  					o.G = p;  					o.B = q;  					break;  			}
Magic Number,CocosSharp,CCControlUtils,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlUtils.cs,RGBfromHSV,The following statement contains a magic number: switch(i)  			{  				case 0:  					o.R = value.V;  					o.G = t;  					o.B = p;  					break;  				case 1:  					o.R = q;  					o.G = value.V;  					o.B = p;  					break;  				case 2:  					o.R = p;  					o.G = value.V;  					o.B = t;  					break;                				case 3:  					o.R = p;  					o.G = q;  					o.B = value.V;  					break;  				case 4:  					o.R = t;  					o.G = p;  					o.B = value.V;  					break;  				case 5:  				default:  					o.R = value.V;  					o.G = p;  					o.B = q;  					break;  			}
Magic Number,CocosSharp,CCControlUtils,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCControlUtils.cs,RGBfromHSV,The following statement contains a magic number: switch(i)  			{  				case 0:  					o.R = value.V;  					o.G = t;  					o.B = p;  					break;  				case 1:  					o.R = q;  					o.G = value.V;  					o.B = p;  					break;  				case 2:  					o.R = p;  					o.G = value.V;  					o.B = t;  					break;                				case 3:  					o.R = p;  					o.G = q;  					o.B = value.V;  					break;  				case 4:  					o.R = t;  					o.G = p;  					o.B = value.V;  					break;  				case 5:  				default:  					o.R = value.V;  					o.G = p;  					o.B = q;  					break;  			}
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: offsetPosition.X = (float)System.Math.Ceiling(offset.X + (originalSize.Width - spriteRect.Size.Width) / 2);
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: offsetPosition.Y = (float)System.Math.Ceiling(offset.Y + (originalSize.Height - spriteRect.Size.Height) / 2);
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: if (capInsetsInternal == CCRect.Zero)              {                  capInsetsInternal = new CCRect(width / 3' height / 3' width / 3' height / 3);              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: if (capInsetsInternal == CCRect.Zero)              {                  capInsetsInternal = new CCRect(width / 3' height / 3' width / 3' height / 3);              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: if (capInsetsInternal == CCRect.Zero)              {                  capInsetsInternal = new CCRect(width / 3' height / 3' width / 3' height / 3);              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: if (capInsetsInternal == CCRect.Zero)              {                  capInsetsInternal = new CCRect(width / 3' height / 3' width / 3' height / 3);              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: if (spriteFrameRotated)              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Height / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Height / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Width / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Width / 2);                  centerOffset.X = -offsetY;                  centerOffset.Y = offsetX;              }              else              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Width / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Width / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Height / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Height / 2);                  centerOffset.X = offsetX;                  centerOffset.Y = offsetY;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: if (spriteFrameRotated)              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Height / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Height / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Width / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Width / 2);                  centerOffset.X = -offsetY;                  centerOffset.Y = offsetX;              }              else              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Width / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Width / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Height / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Height / 2);                  centerOffset.X = offsetX;                  centerOffset.Y = offsetY;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: if (spriteFrameRotated)              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Height / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Height / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Width / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Width / 2);                  centerOffset.X = -offsetY;                  centerOffset.Y = offsetX;              }              else              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Width / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Width / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Height / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Height / 2);                  centerOffset.X = offsetX;                  centerOffset.Y = offsetY;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: if (spriteFrameRotated)              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Height / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Height / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Width / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Width / 2);                  centerOffset.X = -offsetY;                  centerOffset.Y = offsetX;              }              else              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Width / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Width / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Height / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Height / 2);                  centerOffset.X = offsetX;                  centerOffset.Y = offsetY;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: if (spriteFrameRotated)              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Height / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Height / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Width / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Width / 2);                  centerOffset.X = -offsetY;                  centerOffset.Y = offsetX;              }              else              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Width / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Width / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Height / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Height / 2);                  centerOffset.X = offsetX;                  centerOffset.Y = offsetY;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: if (spriteFrameRotated)              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Height / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Height / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Width / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Width / 2);                  centerOffset.X = -offsetY;                  centerOffset.Y = offsetX;              }              else              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Width / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Width / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Height / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Height / 2);                  centerOffset.X = offsetX;                  centerOffset.Y = offsetY;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: if (spriteFrameRotated)              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Height / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Height / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Width / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Width / 2);                  centerOffset.X = -offsetY;                  centerOffset.Y = offsetX;              }              else              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Width / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Width / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Height / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Height / 2);                  centerOffset.X = offsetX;                  centerOffset.Y = offsetY;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,CreateSlicedSprites,The following statement contains a magic number: if (spriteFrameRotated)              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Height / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Height / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Width / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Width / 2);                  centerOffset.X = -offsetY;                  centerOffset.Y = offsetX;              }              else              {                  float offsetX = (rotatedCenterBounds.Origin.X + rotatedCenterBounds.Size.Width / 2)                      - (rotatedCenterBoundsOriginal.Origin.X + rotatedCenterBoundsOriginal.Size.Width / 2);                  float offsetY = (rotatedCenterBoundsOriginal.Origin.Y + rotatedCenterBoundsOriginal.Size.Height / 2)                      - (rotatedCenterBounds.Origin.Y + rotatedCenterBounds.Size.Height / 2);                  centerOffset.X = offsetX;                  centerOffset.Y = offsetY;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,UpdatePositions,The following statement contains a magic number: if (leftSprite != null)              {                  leftSprite.AnchorPoint = CCPoint.AnchorMiddleRight;                  leftSprite.PositionX = leftWidth;                  leftSprite.PositionY = bottomHeight + rescaledHeight / 2 + centerOffset.Y;                  leftSprite.ScaleY = verticalScale;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,UpdatePositions,The following statement contains a magic number: if (rightSprite != null)              {                  rightSprite.AnchorPoint = CCPoint.AnchorMiddleLeft;                  rightSprite.PositionX = leftWidth + rescaledWidth;                  rightSprite.PositionY = bottomHeight + rescaledHeight / 2 + centerOffset.Y;                  rightSprite.ScaleY = verticalScale;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,UpdatePositions,The following statement contains a magic number: if (topSprite != null)              {                  topSprite.AnchorPoint = CCPoint.AnchorMiddleBottom;                  topSprite.PositionX = leftWidth + rescaledWidth / 2 + centerOffset.X;                  topSprite.PositionY = bottomHeight + rescaledHeight;                  topSprite.ScaleX = horizontalScale;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,UpdatePositions,The following statement contains a magic number: if (bottomSprite != null)              {                  bottomSprite.AnchorPoint = CCPoint.AnchorMiddleTop;                  bottomSprite.PositionX = leftWidth + rescaledWidth / 2 + centerOffset.X;                  bottomSprite.PositionY = bottomHeight;                  bottomSprite.ScaleX = horizontalScale;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,UpdatePositions,The following statement contains a magic number: if (centerSprite != null)              {                  centerSprite.AnchorPoint = CCPoint.AnchorMiddle;                  centerSprite.PositionX = leftWidth + rescaledWidth / 2 + centerOffset.X;                  centerSprite.PositionY = bottomHeight + rescaledHeight / 2 + centerOffset.Y;                  centerSprite.ScaleX = horizontalScale;                  centerSprite.ScaleY = verticalScale;              }
Magic Number,CocosSharp,CCScale9Sprite,C:\repos\mono_cocos-sharp-samples\AudioSample\AudioSample\AudioSample.Common\Extensions\GUI\CCControlExtension\CCScale9Sprite.cs,UpdatePositions,The following statement contains a magic number: if (centerSprite != null)              {                  centerSprite.AnchorPoint = CCPoint.AnchorMiddle;                  centerSprite.PositionX = leftWidth + rescaledWidth / 2 + centerOffset.X;                  centerSprite.PositionY = bottomHeight + rescaledHeight / 2 + centerOffset.Y;                  centerSprite.ScaleX = horizontalScale;                  centerSprite.ScaleY = verticalScale;              }
