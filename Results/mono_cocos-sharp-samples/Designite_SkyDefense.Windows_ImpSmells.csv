Implementation smell,Namespace,Class,File,Method,Description
Long Method,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createGameScreen,The method has 108 lines of code.
Complex Method,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,Update,Cyclomatic complexity of the method is 14
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,AddedToScene,The following statement contains a magic number: _fallingObjects = new List<CCSprite>(40);
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,Update,The following statement contains a magic number: if (_bomb.Visible)  			{  				if (_bomb.ScaleX > 0.3f)  				{  					if (_bomb.Opacity != 255)  						_bomb.Opacity = 255;  				}  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,Update,The following statement contains a magic number: if (_bomb.Visible)  			{  				if (_bomb.ScaleX > 0.3f)  				{  					if (_bomb.Opacity != 255)  						_bomb.Opacity = 255;  				}  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,Update,The following statement contains a magic number: if (_shockWave.Visible)  			{  				count = _fallingObjects.Count;    				float diffx;  				float diffy;    				for (i = count - 1; i >= 0; i--)  				{  					sprite = (CCSprite)_fallingObjects[i];  					diffx = _shockWave.PositionX - sprite.PositionX;  					diffy = _shockWave.PositionY - sprite.PositionY;  					if (Math.Pow(diffx' 2) + Math.Pow(diffy' 2) <= Math.Pow(_shockWave.BoundingBox.Size.Width * 0.5f' 2))  					{  						sprite.StopAllActions();  						sprite.RunAction(_explosion);  						CCSimpleAudioEngine.SharedEngine.PlayEffect("music/boom");  						if (sprite.Tag == kSpriteMeteor)  						{  							_shockwaveHits++;  							_score += _shockwaveHits * 13 + _shockwaveHits * 2;  						}  						//play sound  						_fallingObjects.RemoveAt(i);  					}  				}    				_scoreDisplay.Text = String.Format("{0}"' _score);  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,Update,The following statement contains a magic number: if (_shockWave.Visible)  			{  				count = _fallingObjects.Count;    				float diffx;  				float diffy;    				for (i = count - 1; i >= 0; i--)  				{  					sprite = (CCSprite)_fallingObjects[i];  					diffx = _shockWave.PositionX - sprite.PositionX;  					diffy = _shockWave.PositionY - sprite.PositionY;  					if (Math.Pow(diffx' 2) + Math.Pow(diffy' 2) <= Math.Pow(_shockWave.BoundingBox.Size.Width * 0.5f' 2))  					{  						sprite.StopAllActions();  						sprite.RunAction(_explosion);  						CCSimpleAudioEngine.SharedEngine.PlayEffect("music/boom");  						if (sprite.Tag == kSpriteMeteor)  						{  							_shockwaveHits++;  							_score += _shockwaveHits * 13 + _shockwaveHits * 2;  						}  						//play sound  						_fallingObjects.RemoveAt(i);  					}  				}    				_scoreDisplay.Text = String.Format("{0}"' _score);  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,Update,The following statement contains a magic number: if (_shockWave.Visible)  			{  				count = _fallingObjects.Count;    				float diffx;  				float diffy;    				for (i = count - 1; i >= 0; i--)  				{  					sprite = (CCSprite)_fallingObjects[i];  					diffx = _shockWave.PositionX - sprite.PositionX;  					diffy = _shockWave.PositionY - sprite.PositionY;  					if (Math.Pow(diffx' 2) + Math.Pow(diffy' 2) <= Math.Pow(_shockWave.BoundingBox.Size.Width * 0.5f' 2))  					{  						sprite.StopAllActions();  						sprite.RunAction(_explosion);  						CCSimpleAudioEngine.SharedEngine.PlayEffect("music/boom");  						if (sprite.Tag == kSpriteMeteor)  						{  							_shockwaveHits++;  							_score += _shockwaveHits * 13 + _shockwaveHits * 2;  						}  						//play sound  						_fallingObjects.RemoveAt(i);  					}  				}    				_scoreDisplay.Text = String.Format("{0}"' _score);  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,Update,The following statement contains a magic number: if (_shockWave.Visible)  			{  				count = _fallingObjects.Count;    				float diffx;  				float diffy;    				for (i = count - 1; i >= 0; i--)  				{  					sprite = (CCSprite)_fallingObjects[i];  					diffx = _shockWave.PositionX - sprite.PositionX;  					diffy = _shockWave.PositionY - sprite.PositionY;  					if (Math.Pow(diffx' 2) + Math.Pow(diffy' 2) <= Math.Pow(_shockWave.BoundingBox.Size.Width * 0.5f' 2))  					{  						sprite.StopAllActions();  						sprite.RunAction(_explosion);  						CCSimpleAudioEngine.SharedEngine.PlayEffect("music/boom");  						if (sprite.Tag == kSpriteMeteor)  						{  							_shockwaveHits++;  							_score += _shockwaveHits * 13 + _shockwaveHits * 2;  						}  						//play sound  						_fallingObjects.RemoveAt(i);  					}  				}    				_scoreDisplay.Text = String.Format("{0}"' _score);  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,Update,The following statement contains a magic number: if (_shockWave.Visible)  			{  				count = _fallingObjects.Count;    				float diffx;  				float diffy;    				for (i = count - 1; i >= 0; i--)  				{  					sprite = (CCSprite)_fallingObjects[i];  					diffx = _shockWave.PositionX - sprite.PositionX;  					diffy = _shockWave.PositionY - sprite.PositionY;  					if (Math.Pow(diffx' 2) + Math.Pow(diffy' 2) <= Math.Pow(_shockWave.BoundingBox.Size.Width * 0.5f' 2))  					{  						sprite.StopAllActions();  						sprite.RunAction(_explosion);  						CCSimpleAudioEngine.SharedEngine.PlayEffect("music/boom");  						if (sprite.Tag == kSpriteMeteor)  						{  							_shockwaveHits++;  							_score += _shockwaveHits * 13 + _shockwaveHits * 2;  						}  						//play sound  						_fallingObjects.RemoveAt(i);  					}  				}    				_scoreDisplay.Text = String.Format("{0}"' _score);  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,Update,The following statement contains a magic number: for (i = 0; i < count; i++)  			{  				sprite = _clouds[i];  				sprite.PositionX = sprite.PositionX + dt * 20;  				if (sprite.PositionX > _screenSize.Width + sprite.BoundingBox.Size.Width * 0.5f)  					sprite.PositionX = -sprite.BoundingBox.Size.Width * 0.5f;  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,TouchesBegan,The following statement contains a magic number: if (touch != null)  			{    				//if bomb already growing...  				if (_bomb.Visible)  				{  					//stop all actions on bomb' halo and sparkle  					_bomb.StopAllActions();  					CCSprite child;  					child = (CCSprite)_bomb.GetChildByTag(kSpriteHalo);  					ProcessSprite(child);  					//child.BlendFunc = new CCBlendFunc(blendSrc' blendDst);  					child.StopAllActions();  					child = (CCSprite)_bomb.GetChildByTag(kSpriteSparkle);  					ProcessSprite(child);  					//child.BlendFunc = new CCBlendFunc(blendSrc' blendDst);  					child.StopAllActions();    					//if bomb is the right size' then create shockwave  					if (_bomb.ScaleX > 0.3f)  					{    						_shockWave.Scale = 0.1f;  						_shockWave.Position = _bomb.Position;  						_shockWave.Visible = true;  						_shockWave.RunAction(new CCScaleTo(0.5f' _bomb.ScaleX * 2.0f));  						_shockWave.RunAction((CCFiniteTimeAction)_shockwaveSequence);  						CCSimpleAudioEngine.SharedEngine.PlayEffect("music/bombRelease");    					}  					else  					{  						CCSimpleAudioEngine.SharedEngine.PlayEffect("music/bombFail");  					}  					_bomb.Visible = false;  					//reset hits with shockwave' so we can count combo hits  					_shockwaveHits = 0;    					//if no bomb currently on screen' create one  				}  				else  				{    					CCPoint tap = touch.LocationOnScreen; ; ; //??ΏΏ?Ώ?  					tap.Y = Window.WindowSizeInPixels.Height - tap.Y;    					_bomb.StopAllActions();  					_bomb.Scale = 0.1f;  					_bomb.Position = tap;  					_bomb.Visible = true;  					_bomb.Opacity = 50;  					_bomb.RunAction(_growBomb);    					CCSprite child;  					child = (CCSprite)_bomb.GetChildByTag(kSpriteHalo);  					ProcessSprite(child);  					//child.BlendFunc = new CCBlendFunc(blendSrc' blendDst);  					child.RunAction(_rotateSprite);  					child = (CCSprite)_bomb.GetChildByTag(kSpriteSparkle);  					ProcessSprite(child);  					//child.BlendFunc = new CCBlendFunc(blendSrc' blendDst);  					child.RunAction(_rotateSprite);  				}  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createActions,The following statement contains a magic number: CCFiniteTimeAction easeSwing = new CCSequence(  						   new CCEaseInOut(new CCRotateTo(1.2f' -10)' 2)'  						   new CCEaseInOut(new CCRotateTo(1.2f' 10)' 2));
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createActions,The following statement contains a magic number: CCFiniteTimeAction easeSwing = new CCSequence(  						   new CCEaseInOut(new CCRotateTo(1.2f' -10)' 2)'  						   new CCEaseInOut(new CCRotateTo(1.2f' 10)' 2));
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createActions,The following statement contains a magic number: CCFiniteTimeAction easeSwing = new CCSequence(  						   new CCEaseInOut(new CCRotateTo(1.2f' -10)' 2)'  						   new CCEaseInOut(new CCRotateTo(1.2f' 10)' 2));
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createActions,The following statement contains a magic number: CCFiniteTimeAction easeSwing = new CCSequence(  						   new CCEaseInOut(new CCRotateTo(1.2f' -10)' 2)'  						   new CCEaseInOut(new CCRotateTo(1.2f' 10)' 2));
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createActions,The following statement contains a magic number: _rotateSprite = new CCRepeatForever(new CCRotateBy(0.5f' -90));
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createActions,The following statement contains a magic number: for (i = 1; i <= 10; i++)  			{    				frame = spriteFrameCache[String.Format("boom{0}.png"' i)];  				animation.AddSpriteFrame(frame);    			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createActions,The following statement contains a magic number: for (i = 1; i <= 7; i++)  			{    				frame = spriteFrameCache[String.Format("explosion_small{0}.png"' i)];    				animation.AddSpriteFrame(frame);  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createPools,The following statement contains a magic number: _meteorPool = new List<CCSprite>(50);
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createPools,The following statement contains a magic number: for (i = 0; i < 50; i++)  			{  				sprite = new CCSprite("meteor.png"); //new CCSprite("meteor.png");  				//sprite.BlendFunc = new CCBlendFunc(blendSrc' blendDst);  				ProcessSprite(sprite);  				sprite.Visible = false;  				_gameBatchNode.AddChild(sprite' kMiddleground' kSpriteMeteor);  				_meteorPool.Add(sprite);  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createPools,The following statement contains a magic number: _healthPool = new List<CCSprite>(20);
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createPools,The following statement contains a magic number: for (i = 0; i < 20; i++)  			{  				sprite = new CCSprite("health.png");  //new CCSprite("health.png");  				//sprite.BlendFunc = new CCBlendFunc(blendSrc' blendDst);  				ProcessSprite(sprite);  				sprite.Visible = false;  				sprite.AnchorPoint = new CCPoint(0.5f' 0.8f);  				_gameBatchNode.AddChild(sprite' kMiddleground' kSpriteHealth);  				_healthPool.Add(sprite);  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createGameScreen,The following statement contains a magic number: for (int i = 0; i < 2; i++)  			{    				sprite = new CCSprite("city_dark.png"); //new CCSprite("city_dark.png");  				//sprite.BlendFunc = new CCBlendFunc(blendSrc' blendDst);  				ProcessSprite(sprite);    				sprite.Position = new CCPoint(_screenSize.Width * (0.25f + i * 0.5f)'  									  sprite.BoundingBox.Size.Height * 0.5f);    				_gameBatchNode.AddChild(sprite' kForeground);    				sprite = new CCSprite("city_light.png");// new CCSprite("city_light.png");  				//sprite.BlendFunc = new CCBlendFunc(blendSrc' blendDst);  				ProcessSprite(sprite);    				sprite.Position = new CCPoint(_screenSize.Width * (0.25f + i * 0.5f)'  									  sprite.BoundingBox.Size.Height * 0.9f);    				_gameBatchNode.AddChild(sprite' kBackground);    			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createGameScreen,The following statement contains a magic number: for (int i = 0; i < 3; i++)  			{    				sprite = new CCSprite("trees.png");// new CCSprite("trees.png");    				//sprite.BlendFunc = new CCBlendFunc(blendSrc' blendDst);  				ProcessSprite(sprite);    				sprite.Position = new CCPoint(_screenSize.Width * (0.2f + i * 0.3f)'  										sprite.BoundingBox.Size.Height * 0.5f);    				_gameBatchNode.AddChild(sprite' kForeground);    			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createGameScreen,The following statement contains a magic number: _scoreDisplay = new CCLabelTtf("0"' "MarkerFelt"' 22);
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createGameScreen,The following statement contains a magic number: _energyDisplay = new CCLabelTtf("100%"' "MarkerFelt"' 22);
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createGameScreen,The following statement contains a magic number: _clouds = new List<CCSprite>(4);
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createGameScreen,The following statement contains a magic number: for (int i = 0; i < 4; i++)  			{  				cloud_y = i % 2 == 0 ? _screenSize.Height * 0.4f : _screenSize.Height * 0.5f;  				cloud = new CCSprite(CCSpriteFrameCache.SharedSpriteFrameCache["cloud.png"]); // new CCSprite("cloud.png");  				ProcessSprite(cloud);  				//cloud.BlendFunc = new CCBlendFunc(blendSrc' blendDst);  				cloud.Position = new CCPoint(_screenSize.Width * 0.1f + i * _screenSize.Width * 0.3f' cloud_y);  				_gameBatchNode.AddChild(cloud' kBackground);  				_clouds.Add(cloud);  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,createGameScreen,The following statement contains a magic number: for (int i = 0; i < 4; i++)  			{  				cloud_y = i % 2 == 0 ? _screenSize.Height * 0.4f : _screenSize.Height * 0.5f;  				cloud = new CCSprite(CCSpriteFrameCache.SharedSpriteFrameCache["cloud.png"]); // new CCSprite("cloud.png");  				ProcessSprite(cloud);  				//cloud.BlendFunc = new CCBlendFunc(blendSrc' blendDst);  				cloud.Position = new CCPoint(_screenSize.Width * 0.1f + i * _screenSize.Width * 0.3f' cloud_y);  				_gameBatchNode.AddChild(cloud' kBackground);  				_clouds.Add(cloud);  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,resetGame,The following statement contains a magic number: _energy = 100;
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,resetGame,The following statement contains a magic number: _meteorSpeed = 10;
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,resetGame,The following statement contains a magic number: _healthInterval = 20;
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,resetGame,The following statement contains a magic number: _healthSpeed = 15;
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,resetGame,The following statement contains a magic number: _difficultyInterval = 60;
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,increaseDifficulty,The following statement contains a magic number: if (_meteorSpeed < 4) _meteorSpeed = 4;
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,increaseDifficulty,The following statement contains a magic number: if (_meteorSpeed < 4) _meteorSpeed = 4;
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,increaseDifficulty,The following statement contains a magic number: if (_healthSpeed < 8) _healthSpeed = 8;
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,increaseDifficulty,The following statement contains a magic number: if (_healthSpeed < 8) _healthSpeed = 8;
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,resetHealth,The following statement contains a magic number: if (_fallingObjects.Count > 30) return;
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,resetHealth,The following statement contains a magic number: int health_x = CCRandom.GetRandomInt(0' 1000) % (int)(_screenSize.Width * 0.8f + _screenSize.Width * 0.1f);
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,resetHealth,The following statement contains a magic number: int health_target_x = CCRandom.GetRandomInt(0' 1000) % (int)(_screenSize.Width * 0.8f + _screenSize.Width * 0.1f);
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,resetMeteor,The following statement contains a magic number: if (_fallingObjects.Count > 30) return;
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,resetMeteor,The following statement contains a magic number: int meteor_x = CCRandom.GetRandomInt(1' 1000) % (int)((_screenSize.Width * 0.8f) + _screenSize.Width * 0.1f);
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,resetMeteor,The following statement contains a magic number: int meteor_target_x = CCRandom.GetRandomInt(1' 1000) % (int)((_screenSize.Width * 0.8f) + _screenSize.Width * 0.1f);
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,resetMeteor,The following statement contains a magic number: CCRotateBy rotate = new CCRotateBy(0.5f' -90);
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,fallingObjectDone,The following statement contains a magic number: if (pSender.Tag == kSpriteMeteor)  			{  				_energy -= 15;  				//show explosion animation  				pSender.RunAction((CCAction)_groundHit);  				//play explosion sound  				CCSimpleAudioEngine.SharedEngine.PlayEffect("boom");    				//if object is a health drop...  			}  			else  			{  				pSender.Visible = false;    				//if energy is full' score points from falling drop  				if (_energy == 100)  				{    					_score += 25;    					_scoreDisplay.Text = String.Format("{0}"' _score);    				}  				else  				{  					_energy += 10;  					if (_energy > 100) _energy = 100;  				}    				//play health bonus sound  				CCSimpleAudioEngine.SharedEngine.PlayEffect("health.png");  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,fallingObjectDone,The following statement contains a magic number: if (pSender.Tag == kSpriteMeteor)  			{  				_energy -= 15;  				//show explosion animation  				pSender.RunAction((CCAction)_groundHit);  				//play explosion sound  				CCSimpleAudioEngine.SharedEngine.PlayEffect("boom");    				//if object is a health drop...  			}  			else  			{  				pSender.Visible = false;    				//if energy is full' score points from falling drop  				if (_energy == 100)  				{    					_score += 25;    					_scoreDisplay.Text = String.Format("{0}"' _score);    				}  				else  				{  					_energy += 10;  					if (_energy > 100) _energy = 100;  				}    				//play health bonus sound  				CCSimpleAudioEngine.SharedEngine.PlayEffect("health.png");  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,fallingObjectDone,The following statement contains a magic number: if (pSender.Tag == kSpriteMeteor)  			{  				_energy -= 15;  				//show explosion animation  				pSender.RunAction((CCAction)_groundHit);  				//play explosion sound  				CCSimpleAudioEngine.SharedEngine.PlayEffect("boom");    				//if object is a health drop...  			}  			else  			{  				pSender.Visible = false;    				//if energy is full' score points from falling drop  				if (_energy == 100)  				{    					_score += 25;    					_scoreDisplay.Text = String.Format("{0}"' _score);    				}  				else  				{  					_energy += 10;  					if (_energy > 100) _energy = 100;  				}    				//play health bonus sound  				CCSimpleAudioEngine.SharedEngine.PlayEffect("health.png");  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,fallingObjectDone,The following statement contains a magic number: if (pSender.Tag == kSpriteMeteor)  			{  				_energy -= 15;  				//show explosion animation  				pSender.RunAction((CCAction)_groundHit);  				//play explosion sound  				CCSimpleAudioEngine.SharedEngine.PlayEffect("boom");    				//if object is a health drop...  			}  			else  			{  				pSender.Visible = false;    				//if energy is full' score points from falling drop  				if (_energy == 100)  				{    					_score += 25;    					_scoreDisplay.Text = String.Format("{0}"' _score);    				}  				else  				{  					_energy += 10;  					if (_energy > 100) _energy = 100;  				}    				//play health bonus sound  				CCSimpleAudioEngine.SharedEngine.PlayEffect("health.png");  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,fallingObjectDone,The following statement contains a magic number: if (pSender.Tag == kSpriteMeteor)  			{  				_energy -= 15;  				//show explosion animation  				pSender.RunAction((CCAction)_groundHit);  				//play explosion sound  				CCSimpleAudioEngine.SharedEngine.PlayEffect("boom");    				//if object is a health drop...  			}  			else  			{  				pSender.Visible = false;    				//if energy is full' score points from falling drop  				if (_energy == 100)  				{    					_score += 25;    					_scoreDisplay.Text = String.Format("{0}"' _score);    				}  				else  				{  					_energy += 10;  					if (_energy > 100) _energy = 100;  				}    				//play health bonus sound  				CCSimpleAudioEngine.SharedEngine.PlayEffect("health.png");  			}
Magic Number,SkyDefense.Common,IntroLayer,C:\repos\mono_cocos-sharp-samples\SkyDefense\src\Common\IntroLayer.cs,fallingObjectDone,The following statement contains a magic number: if (pSender.Tag == kSpriteMeteor)  			{  				_energy -= 15;  				//show explosion animation  				pSender.RunAction((CCAction)_groundHit);  				//play explosion sound  				CCSimpleAudioEngine.SharedEngine.PlayEffect("boom");    				//if object is a health drop...  			}  			else  			{  				pSender.Visible = false;    				//if energy is full' score points from falling drop  				if (_energy == 100)  				{    					_score += 25;    					_scoreDisplay.Text = String.Format("{0}"' _score);    				}  				else  				{  					_energy += 10;  					if (_energy > 100) _energy = 100;  				}    				//play health bonus sound  				CCSimpleAudioEngine.SharedEngine.PlayEffect("health.png");  			}
