Implementation smell,Namespace,Class,File,Method,Description
Long Method,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,JSON,The method has 250 lines of code.
Long Method,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The method has 182 lines of code.
Long Method,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The method has 241 lines of code.
Complex Method,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,getValue,Cyclomatic complexity of the method is 8
Complex Method,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,JSON,Cyclomatic complexity of the method is 24
Complex Method,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,Cyclomatic complexity of the method is 24
Complex Method,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,Cyclomatic complexity of the method is 36
Complex Method,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,Hook_PRIV,Cyclomatic complexity of the method is 17
Complex Method,wmib,Requests,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Requests\Request.cs,Hook_PRIV,Cyclomatic complexity of the method is 12
Complex Method,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Hook_PRIV,Cyclomatic complexity of the method is 14
Complex Method,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Format,Cyclomatic complexity of the method is 8
Long Parameter List,wmib,Instance,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Instance,The method has 6 parameters. Parameters: real' name' host' ip' type' online
Long Parameter List,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Format,The method has 10 parameters. Parameters: name_url' url' page' username' link' summary' chan' bot' New' minor
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,JSON,The length of the statement  "                string URL = "https://labsconsole.wikimedia.org/wiki/Special:Ask/-5B-5BResource-20Type::instance-5D-5D/-3FInstance-20Name/-3FInstance-20Type/-3FProject/-3FImage-20Id/-3FFQDN/-3FLaunch-20Time/-3FPuppet-20Class/-3FModification-20date/-3FInstance-20Host/-3FNumber-20of-20CPUs/-3FRAM-20Size/-3FAmount-20of-20Storage/limit%3D500/format%3Djson"; " is 339.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,JSON,The length of the statement  "                URL = "https://labsconsole.wikimedia.org/wiki/Special:Ask/-5B-5BResource-20Type::project-5D-5D/-3F/-3FMember/-3FDescription/mainlabel%3D-2D/searchlabel%3Dprojects/offset%3D0/limit%3D500/format%3Djson"; " is 201.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                    results += instance.OriginalName + " is Nova Instance with name: " + instance.Name + "' host: " + instance.Host + "' IP: " + instance.IP " is 136.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                        + " of type: " + instance.Type + "' with number of CPUs: " + instance.NumberOfCpu + "' RAM of this size: " + instance.Ram " is 121.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                        + "M' member of project: " + instance.Project + "' size of storage: " + instance.Storage + " and with image ID: " + instance.ImageID; " is 133.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                IRC.DeliverMessage("I don't know this instance' sorry' try browsing the list by hand' but I can guarantee there is no such instance matching this name' host or Nova ID unless it was created less than " + time().Seconds.ToString() + " seconds ago"' user); " is 254.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                    string d = "The " + host + " resolves to instance " + instance.OriginalName + " with a fancy name " + instance.Name + " and IP " + instance.IP; " is 143.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                    IRC.DeliverMessage("I don't know this instance' sorry' try browsing the list by hand' but I can guarantee there is no such instance matching this name' host or Nova ID unless it was created less than " + time().Seconds + " seconds ago"' user); " is 243.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                            IRC.DeliverMessage("Following users are in this project (showing all " + project.users.Count.ToString() + " members): " + instances' user); " is 139.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                        IRC.DeliverMessage("Following users are in this project (displaying " + trimmed.ToString() + " of " + project.users.Count.ToString() + " total): " + instances' user); " is 166.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                    IRC.DeliverMessage("I don't know this project' did you mean: " + names + "? I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' user); " is 227.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                IRC.DeliverMessage("I don't know this project' sorry' try browsing the list by hand' but I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' user); " is 240.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                    IRC.DeliverMessage("I don't know this project' did you mean: " + names + "? I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' user); " is 227.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                IRC.DeliverMessage("I don't know this project' sorry' try browsing the list by hand' but I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' user); " is 240.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                    string d = "The project " + project.Name + " has " + project.instances.Count.ToString() + " instances and " + project.users.Count.ToString() + " members' description: " + project.Description; " is 191.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                    IRC.DeliverMessage("I don't know this project' did you mean: " + names + "? I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' user); " is 227.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The length of the statement  "                IRC.DeliverMessage("I don't know this project' sorry' try browsing the list by hand' but I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' user); " is 240.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                        IRC.DeliverMessage("Please wait' I still didn't retrieve the labs datafile containing the list of instances"' channel.Name); " is 124.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                        results += instance.OriginalName + " is Nova Instance with name: " + instance.Name + "' host: " + instance.Host + "' IP: " + instance.IP " is 136.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                            + " of type: " + instance.Type + "' with number of CPUs: " + instance.NumberOfCpu + "' RAM of this size: " + instance.Ram " is 121.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                            + "M' member of project: " + instance.Project + "' size of storage: " + instance.Storage + " and with image ID: " + instance.ImageID; " is 133.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                    IRC.DeliverMessage("I don't know this instance' sorry' try browsing the list by hand' but I can guarantee there is no such instance matching this name' host or Nova ID unless it was created less than " + time().Seconds.ToString() + " seconds ago"' channel.Name); " is 262.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                        string d = "The " + host + " resolves to instance " + instance.OriginalName + " with a fancy name " + instance.Name + " and IP " + instance.IP; " is 143.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                        IRC.DeliverMessage("I don't know this instance' sorry' try browsing the list by hand' but I can guarantee there is no such instance matching this name' host or Nova ID unless it was created less than " + time().Seconds.ToString() + " seconds ago"' channel); " is 257.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                                IRC.DeliverMessage("Following users are in this project (showing all " + project.users.Count.ToString() + " members): " + instances' channel); " is 142.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                            IRC.DeliverMessage("Following users are in this project (displaying " + trimmed.ToString() + " of " + project.users.Count.ToString() + " total): " + instances' channel); " is 169.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                        IRC.DeliverMessage("I don't know this project' did you mean: " + names + "? I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' channel.Name); " is 235.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                    IRC.DeliverMessage("I don't know this project' sorry' try browsing the list by hand' but I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' channel.Name); " is 248.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                        IRC.DeliverMessage("Please wait' I still didn't retrieve the labs datafile containing the list of projects"' channel.Name); " is 123.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                        IRC.DeliverMessage("I don't know this project' did you mean: " + names + "? I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' channel.Name); " is 235.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                    IRC.DeliverMessage("I don't know this project' sorry' try browsing the list by hand' but I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' channel.Name); " is 248.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                        IRC.DeliverMessage("Please wait' I still didn't retrieve the labs datafile containing the list of projects"' channel.Name); " is 123.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                        string d = "The project " + project.Name + " has " + project.instances.Count.ToString() + " instances and " + project.users.Count.ToString() + " members' description: " + project.Description; " is 191.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                        IRC.DeliverMessage("I don't know this project' did you mean: " + names + "? I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' channel.Name); " is 235.
Long Statement,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The length of the statement  "                    IRC.DeliverMessage("I don't know this project' sorry' try browsing the list by hand' but I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' channel.Name); " is 248.
Long Statement,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,Hook_PRIV,The length of the statement  "                string xx = MakeTemplate(GetConfig(channel' "Link.Last"' "")' GetConfig(channel' "Link.Default"' "en")' false) + MakeLink(GetConfig(channel' "Link.Last"' "")' GetConfig(channel' "Link.Default"' "en")' true); " is 207.
Long Statement,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,Hook_PRIV,The length of the statement  "                string xx = MakeTemplate(link' GetConfig(channel' "Link.Default"' "en")' false) + MakeLink(link' GetConfig(channel' "Link.Default"' "en")' true); " is 145.
Long Statement,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,Hook_PRIV,The length of the statement  "                string result = MakeTemplate(message' GetConfig(channel' "Link.Default"' "en")' false) + MakeLink(message' GetConfig(channel' "Link.Default"' "en")' true); " is 155.
Long Statement,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The length of the statement  "                DateTime replica = new DateTime(int.Parse(time.Substring(0' 4))' int.Parse(time.Substring(4' 2))' int.Parse(time.Substring(6' 2))' int.Parse(time.Substring(8' 2))' int.Parse(time.Substring(10' 2))' int.Parse(time.Substring(12' 2))); " is 232.
Long Statement,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The length of the statement  "                //string x = n.Year.ToString() + Double(n.Month) + Double(n.Day) + Double(n.Hour) + Double(n.Minute) + Double(n.Second); " is 120.
Long Statement,wmib,Requests,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Requests\Request.cs,getWaitingUsernames,The length of the statement  "                string username = r1.SelectNodes("struct/var[@name = 'printouts']/struct/var[@name = '" + usernamePrintout + "']/array/string").Item(0).InnerText; " is 146.
Long Statement,wmib,Requests,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Requests\Request.cs,formatReportLine,The length of the statement  "                info = "There are " + usernames.Count + " users waiting for " + requestedAccess + "' displaying last " + displayed + ": " + info + "."; " is 135.
Long Statement,wmib,OpsTools,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\OpsTools\OpsTools.cs,Hook_PRIV,The length of the statement  "            List<string> channels = new List<string> { "#huggle"' "#wikidata"' "#wikimedia"' "#wikitech"' "#wikipedia"' "#wm-bot"' "#wikibooks"' "#mediawiki"' "#wikinews"' "#wikisource"' "#wikiquote"' "#wikivoyage"' "#wiktionary"' "#wikiversity" }; " is 236.
Long Statement,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Hook_PRIV,The length of the statement  "                            IRC.DeliverMessage(messages.Localize("Feed4"' channel.Language) + invoker.Nick + messages.Localize("Feed5"' channel.Language)' channel); " is 136.
Long Statement,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Hook_PRIV,The length of the statement  "                            IRC.DeliverMessage("Underscore in wiki name is not supported' new format is for example: en.wikipedia.org instead of en_wikipedia"' channel); " is 141.
Long Statement,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Format,The length of the statement  "                    return messages.Localize("fl"' chan.Language' new List<string> { "12" + name_url + ""' "" + page + ""' "modified"' "" + username + ""' "https://" + url + "/w/index.php?diff=" + link' summary }); " is 200.
Long Statement,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Format,The length of the statement  "                return messages.Localize("fl"' chan.Language' new List<string> { "12" + name_url + ""' "" + page + ""' "created"' "" + username + ""' "https://" + url + "/wiki/" + Core.WikiEncode(page)' summary }); " is 204.
Long Statement,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Format,The length of the statement  "                   .Replace("$encoded_wiki_username"' HttpUtility.UrlEncode(username).Replace("+"' "_").Replace("%3a"' ":").Replace("%2f"' "/").Replace("%23"' "#").Replace("%28"' "(").Replace("%29"' ")")) " is 185.
Long Statement,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,OnChange,The length of the statement  "                                if ((!edit.Minor && edit.Bot && GetConfig(curr.channel' "Bot.Enabled"' true)) || (!edit.Bot && edit.Minor && GetConfig(curr.channel' "Minor.Enabled"' true)) || (!edit.Bot && !edit.Minor) || (edit.Minor && GetConfig(curr.channel' "Minor.Enabled"' true) && edit.Bot && GetConfig(curr.channel' "Bot.Enabled"' true))) " is 313.
Long Statement,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,OnChange,The length of the statement  "                                            curr.channel' edit.Bot' edit.Type == XmlRcs.RecentChange.ChangeType.New' edit.Minor)' curr.channel.Name' libirc.Defs.Priority.Low); " is 131.
Long Statement,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,OnChange,The length of the statement  "                                        IRC.DeliverMessage(Format(edit.ServerName' edit.ServerName' edit.Title' edit.User' edit.RevID.ToString()' edit.Summary' curr.channel' edit.Bot' " is 143.
Complex Conditional,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,OnChange,The conditional expression  "(!edit.Minor && edit.Bot && GetConfig(curr.channel' "Bot.Enabled"' true)) || (!edit.Bot && edit.Minor && GetConfig(curr.channel' "Minor.Enabled"' true)) || (!edit.Bot && !edit.Minor) || (edit.Minor && GetConfig(curr.channel' "Minor.Enabled"' true) && edit.Bot && GetConfig(curr.channel' "Bot.Enabled"' true))"  is complex.
Empty Catch Block,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Load,The method has an empty catch block.
Empty Catch Block,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,Load,The method has an empty catch block.
Empty Catch Block,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Load,The method has an empty catch block.
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,getValue,The following statement contains a magic number: while (true)              {                  if (!b.Read())                  {                      return "{unknown}";                  }                  if (b.Value != null)                  {                      if (b.TokenType == JsonToken.PropertyName)                      {                          if (!silent)                          {                              DebugLog("JSON returned property when I requested value"' 6);                          }                          return "{unknown}";                      }                      if (b.TokenType != JsonToken.Comment && b.Value != null)                      {                          if (b.ValueType.ToString() == "")                          {                              return "{unknown}";                          }                          return b.Value.ToString();                      }                  }              }
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,JSON,The following statement contains a magic number: try              {                  string URL = "https://labsconsole.wikimedia.org/wiki/Special:Ask/-5B-5BResource-20Type::instance-5D-5D/-3FInstance-20Name/-3FInstance-20Type/-3FProject/-3FImage-20Id/-3FFQDN/-3FLaunch-20Time/-3FPuppet-20Class/-3FModification-20date/-3FInstance-20Host/-3FNumber-20of-20CPUs/-3FRAM-20Size/-3FAmount-20of-20Storage/limit%3D500/format%3Djson";                  string temp = Path.GetTempFileName();                  if (Download(URL' temp))                  {                      List<Instance> deleted = new List<Instance>();                      lock (Instances)                      {                          deleted.AddRange(Instances);                      }                      StreamReader a = File.OpenText(temp);                      JsonTextReader b = new JsonTextReader(a);                      string name = "{unknown}";                      string host = "{unknown}";                      string ip = "{unknown}";                      string project = "{unknown}";                      string resource = "{unknown}";                      string image = "{unknown}";                      string Ram = "{unknown}";                      string NumberOfCpu = "{unknown}";                      string ModifyTime = "{unknown}";                      string Storage = "{unknown}";                      string FullUrl = "{unknown}";                      string fqdn = "{unknown}";                      string LaunchTime = "{unknown}";                      string type = "{unknown}";                      while (b.Read())                      {                          if (b.TokenType == JsonToken.PropertyName)                          {                              if (b.Value == null)                              {                                  DebugLog("null at value");                                  continue;                              }                              string value = b.Value.ToString();                              if (value.StartsWith("Nova Resource:"))                              {                                  value = value.Substring("Nova Resource:".Length);                                  if (resource != "{unknown}")                                  {                                      Instance instance = getInstance(resource);                                      if (instance != null)                                      {                                          if (deleted.Contains(instance))                                          {                                              deleted.Remove(instance);                                          }                                          deleteInstance(instance);                                      }                                      try                                      {                                          IPAddress[] addresslist = Dns.GetHostAddresses(resource);                                            if (addresslist.Length > 0)                                          {                                              ip = addresslist[0].ToString();                                          }                                      }                                      catch (Exception)                                      {                                          DebugLog("can't resolve" + resource' 8);                                      }                                      instance = new Instance(resource' name' host' ip' type' true)                                      {                                          fqdn = fqdn'                                          FullUrl = FullUrl'                                          ImageID = image'                                          LaunchTime = LaunchTime'                                          ModifyTime = ModifyTime'                                          NumberOfCpu = NumberOfCpu'                                          Project = project'                                          Ram = Ram'                                          Storage = Storage                                      };                                      lock (Instances)                                      {                                          Instances.Add(instance);                                      }                                      name = "{unknown}";                                      host = "{unknown}";                                      ip = "{unknown}";                                      project = "{unknown}";                                      resource = "{unknown}";                                      image = "{unknown}";                                      Ram = "{unknown}";                                      NumberOfCpu = "{unknown}";                                      ModifyTime = "{unknown}";                                      Storage = "{unknown}";                                      FullUrl = "{unknown}";                                      fqdn = "{unknown}";                                      LaunchTime = "{unknown}";                                      type = "{unknown}";                                  }                                  resource = value;                              }                              switch (b.Value.ToString())                              {                                  case "Instance Name":                                      name = getValue(ref b);                                      break;                                  case "Instance Type":                                      type = getValue(ref b);                                      break;                                  case "Project":                                      project = getValue(ref b);                                      break;                                  case "Image Id":                                      image = getValue(ref b);                                      break;                                  case "FQDN":                                      fqdn = getValue(ref b);                                      break;                                  case "Launch Time":                                      continue;                                  case "Puppet Class":                                      break;                                  case "Modification date":                                      ModifyTime = getValue(ref b);                                      break;                                  case "Instance Host":                                      host = getValue(ref b);                                      break;                                  case "Number of CPUs":                                      NumberOfCpu = getValue(ref b);                                      break;                                  case "RAM Size":                                      Ram = getValue(ref b);                                      break;                                  case "Amount of Storage":                                      Storage = getValue(ref b);                                      break;                                  case "fullurl":                                      FullUrl = getValue(ref b);                                      break;                              }                          }                      }                      File.Delete(temp);                      foreach (Instance x in deleted)                      {                          deleteInstance(x);                      }                  }                  else                  {                      Syslog.Log("Labs: Failed to download db file"' true);                  }                  URL = "https://labsconsole.wikimedia.org/wiki/Special:Ask/-5B-5BResource-20Type::project-5D-5D/-3F/-3FMember/-3FDescription/mainlabel%3D-2D/searchlabel%3Dprojects/offset%3D0/limit%3D500/format%3Djson";                  temp = Path.GetTempFileName();                  if (Download(URL' temp))                  {                      StreamReader a = File.OpenText(temp);                      JsonTextReader b = new JsonTextReader(a);                      string name = "{unknown}";                      List<Nova> projectlist2 = new List<Nova>();                      List<string> members = new List<string>();                      string description = "{unknown}";                      while (b.Read())                      {                          if (b.Value == null)                          {                              continue;                          }                          //Console.WriteLine(b.Value.ToString());                          string value = b.Value.ToString();                          if (value.StartsWith("Nova Resource:"))                          {                              value = value.Substring("Nova Resource:".Length);                              if (name != "{unknown}")                              {                                  Nova project = null;                                  foreach (Nova x in projectlist2)                                  {                                      if (x.Name == value)                                      {                                          project = x;                                          break;                                      }                                  }                                  if (project == null)                                  {                                      project = new Nova(name);                                  }                                  project.users.AddRange(members);                                  if (!(description == "" && project.Description == ""))                                  {                                      project.Description = description;                                  }                                  else if (project.Description == "")                                  {                                      project.Description = "there is no description for this item";                                  }                                  description = "";                                  if (!projectlist2.Contains(project))                                  {                                      projectlist2.Add(project);                                  }                                  members.Clear();                              }                              name = value;                          }                          if (value.StartsWith("User:"))                          {                              members.Add(value.Substring(5));                          }                          if (value == "Description")                          {                              description = getValue(ref b' true);                          }                      }                      File.Delete(temp);                      lock (ProjectList)                      {                          ProjectList.Clear();                          ProjectList.AddRange(projectlist2);                      }                      lock (Instances)                      {                          foreach (Instance i in Instances)                          {                              Nova nova = getProject(i.Project);                              if (nova != null)                              {                                  i.project = nova;                                  lock (nova.instances)                                  {                                      if (!nova.instances.Contains(i))                                      {                                          nova.instances.Add(i);                                      }                                  }                              }                          }                      }                  }                  else                  {                      Syslog.Log("Failed to download db file"' true);                  }                  OK = true;                  LastUpdate = DateTime.Now;              }              catch (Exception t)              {                  Syslog.Log(t.Data + t.StackTrace);                  Core.HandleException(t' "Labs");              }
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,JSON,The following statement contains a magic number: try              {                  string URL = "https://labsconsole.wikimedia.org/wiki/Special:Ask/-5B-5BResource-20Type::instance-5D-5D/-3FInstance-20Name/-3FInstance-20Type/-3FProject/-3FImage-20Id/-3FFQDN/-3FLaunch-20Time/-3FPuppet-20Class/-3FModification-20date/-3FInstance-20Host/-3FNumber-20of-20CPUs/-3FRAM-20Size/-3FAmount-20of-20Storage/limit%3D500/format%3Djson";                  string temp = Path.GetTempFileName();                  if (Download(URL' temp))                  {                      List<Instance> deleted = new List<Instance>();                      lock (Instances)                      {                          deleted.AddRange(Instances);                      }                      StreamReader a = File.OpenText(temp);                      JsonTextReader b = new JsonTextReader(a);                      string name = "{unknown}";                      string host = "{unknown}";                      string ip = "{unknown}";                      string project = "{unknown}";                      string resource = "{unknown}";                      string image = "{unknown}";                      string Ram = "{unknown}";                      string NumberOfCpu = "{unknown}";                      string ModifyTime = "{unknown}";                      string Storage = "{unknown}";                      string FullUrl = "{unknown}";                      string fqdn = "{unknown}";                      string LaunchTime = "{unknown}";                      string type = "{unknown}";                      while (b.Read())                      {                          if (b.TokenType == JsonToken.PropertyName)                          {                              if (b.Value == null)                              {                                  DebugLog("null at value");                                  continue;                              }                              string value = b.Value.ToString();                              if (value.StartsWith("Nova Resource:"))                              {                                  value = value.Substring("Nova Resource:".Length);                                  if (resource != "{unknown}")                                  {                                      Instance instance = getInstance(resource);                                      if (instance != null)                                      {                                          if (deleted.Contains(instance))                                          {                                              deleted.Remove(instance);                                          }                                          deleteInstance(instance);                                      }                                      try                                      {                                          IPAddress[] addresslist = Dns.GetHostAddresses(resource);                                            if (addresslist.Length > 0)                                          {                                              ip = addresslist[0].ToString();                                          }                                      }                                      catch (Exception)                                      {                                          DebugLog("can't resolve" + resource' 8);                                      }                                      instance = new Instance(resource' name' host' ip' type' true)                                      {                                          fqdn = fqdn'                                          FullUrl = FullUrl'                                          ImageID = image'                                          LaunchTime = LaunchTime'                                          ModifyTime = ModifyTime'                                          NumberOfCpu = NumberOfCpu'                                          Project = project'                                          Ram = Ram'                                          Storage = Storage                                      };                                      lock (Instances)                                      {                                          Instances.Add(instance);                                      }                                      name = "{unknown}";                                      host = "{unknown}";                                      ip = "{unknown}";                                      project = "{unknown}";                                      resource = "{unknown}";                                      image = "{unknown}";                                      Ram = "{unknown}";                                      NumberOfCpu = "{unknown}";                                      ModifyTime = "{unknown}";                                      Storage = "{unknown}";                                      FullUrl = "{unknown}";                                      fqdn = "{unknown}";                                      LaunchTime = "{unknown}";                                      type = "{unknown}";                                  }                                  resource = value;                              }                              switch (b.Value.ToString())                              {                                  case "Instance Name":                                      name = getValue(ref b);                                      break;                                  case "Instance Type":                                      type = getValue(ref b);                                      break;                                  case "Project":                                      project = getValue(ref b);                                      break;                                  case "Image Id":                                      image = getValue(ref b);                                      break;                                  case "FQDN":                                      fqdn = getValue(ref b);                                      break;                                  case "Launch Time":                                      continue;                                  case "Puppet Class":                                      break;                                  case "Modification date":                                      ModifyTime = getValue(ref b);                                      break;                                  case "Instance Host":                                      host = getValue(ref b);                                      break;                                  case "Number of CPUs":                                      NumberOfCpu = getValue(ref b);                                      break;                                  case "RAM Size":                                      Ram = getValue(ref b);                                      break;                                  case "Amount of Storage":                                      Storage = getValue(ref b);                                      break;                                  case "fullurl":                                      FullUrl = getValue(ref b);                                      break;                              }                          }                      }                      File.Delete(temp);                      foreach (Instance x in deleted)                      {                          deleteInstance(x);                      }                  }                  else                  {                      Syslog.Log("Labs: Failed to download db file"' true);                  }                  URL = "https://labsconsole.wikimedia.org/wiki/Special:Ask/-5B-5BResource-20Type::project-5D-5D/-3F/-3FMember/-3FDescription/mainlabel%3D-2D/searchlabel%3Dprojects/offset%3D0/limit%3D500/format%3Djson";                  temp = Path.GetTempFileName();                  if (Download(URL' temp))                  {                      StreamReader a = File.OpenText(temp);                      JsonTextReader b = new JsonTextReader(a);                      string name = "{unknown}";                      List<Nova> projectlist2 = new List<Nova>();                      List<string> members = new List<string>();                      string description = "{unknown}";                      while (b.Read())                      {                          if (b.Value == null)                          {                              continue;                          }                          //Console.WriteLine(b.Value.ToString());                          string value = b.Value.ToString();                          if (value.StartsWith("Nova Resource:"))                          {                              value = value.Substring("Nova Resource:".Length);                              if (name != "{unknown}")                              {                                  Nova project = null;                                  foreach (Nova x in projectlist2)                                  {                                      if (x.Name == value)                                      {                                          project = x;                                          break;                                      }                                  }                                  if (project == null)                                  {                                      project = new Nova(name);                                  }                                  project.users.AddRange(members);                                  if (!(description == "" && project.Description == ""))                                  {                                      project.Description = description;                                  }                                  else if (project.Description == "")                                  {                                      project.Description = "there is no description for this item";                                  }                                  description = "";                                  if (!projectlist2.Contains(project))                                  {                                      projectlist2.Add(project);                                  }                                  members.Clear();                              }                              name = value;                          }                          if (value.StartsWith("User:"))                          {                              members.Add(value.Substring(5));                          }                          if (value == "Description")                          {                              description = getValue(ref b' true);                          }                      }                      File.Delete(temp);                      lock (ProjectList)                      {                          ProjectList.Clear();                          ProjectList.AddRange(projectlist2);                      }                      lock (Instances)                      {                          foreach (Instance i in Instances)                          {                              Nova nova = getProject(i.Project);                              if (nova != null)                              {                                  i.project = nova;                                  lock (nova.instances)                                  {                                      if (!nova.instances.Contains(i))                                      {                                          nova.instances.Add(i);                                      }                                  }                              }                          }                      }                  }                  else                  {                      Syslog.Log("Failed to download db file"' true);                  }                  OK = true;                  LastUpdate = DateTime.Now;              }              catch (Exception t)              {                  Syslog.Log(t.Data + t.StackTrace);                  Core.HandleException(t' "Labs");              }
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Construct,The following statement contains a magic number: Version = new Version(1' 2' 8' 0);
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Construct,The following statement contains a magic number: Version = new Version(1' 2' 8' 0);
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,getProjectsList,The following statement contains a magic number: lock (ProjectList)              {                  foreach (Nova instance2 in ProjectList)                  {                      if (projects.Contains(instance2.Name) != true)                      {                          projects.Add(instance2.Name);                      }                  }                  host = host.ToLower();                  foreach (string instance2 in projects)                  {                      if (instance2.ToLower().Contains(host))                      {                          names += instance2 + "' ";                          if (names.Length > 210)                          {                              break;                          }                      }                  }              }
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,getProjectsList,The following statement contains a magic number: if (names.EndsWith("' "))              {                  names = names.Substring(0' names.Length - 2);              }
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The following statement contains a magic number: if (message.StartsWith("@labs-user "))              {                  string user2 = message.Substring(11);                  string result = getProjects(user2);                  int list = getNumbers(user2);                  if (result != "")                  {                      IRC.DeliverMessage(user2 + " is member of " + list.ToString() + " projects: " + result' user);                      return true;                  }                  IRC.DeliverMessage("That user is not a member of any project"' user);                  return true;              }
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The following statement contains a magic number: if (message.StartsWith("@labs-resolve "))              {                  string host = message.Substring("@labs-resolve ".Length);                  if (!OK)                  {                      IRC.DeliverMessage("Please wait' I still didn't retrieve the labs datafile containing the list of instances"' user);                      return true;                  }                  Instance instance = resolve(host);                  if (instance != null)                  {                      string d = "The " + host + " resolves to instance " + instance.OriginalName + " with a fancy name " + instance.Name + " and IP " + instance.IP;                      IRC.DeliverMessage(d' user);                      return true;                  }                  string names = "";                  lock (Instances)                  {                      foreach (Instance instance2 in Instances)                      {                          if (instance2.Name.Contains(host) || instance2.OriginalName.Contains(host))                          {                              names += instance2.OriginalName + " (" + instance2.Name + ")' ";                              if (names.Length > 210)                              {                                  break;                              }                          }                      }                  }                  if (names != "")                  {                      IRC.DeliverMessage("I don't know this instance - aren't you are looking for: " + names' user);                  }                  else                  {                      IRC.DeliverMessage("I don't know this instance' sorry' try browsing the list by hand' but I can guarantee there is no such instance matching this name' host or Nova ID unless it was created less than " + time().Seconds + " seconds ago"' user);                  }                  return true;              }
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_OnPrivateFromUser,The following statement contains a magic number: if (message.StartsWith("@labs-project-users "))              {                  string host = message.Substring("@labs-project-users ".Length);                  if (!OK)                  {                      IRC.DeliverMessage("Please wait' I still didn't retrieve the labs datafile containing the list of projects"' user);                      return true;                  }                  Nova project = getProject(host);                  if (project != null)                  {                      string instances = "";                      int trimmed = 0;                      lock (project.instances)                      {                          foreach (string x in project.users)                          {                              if (instances.Length > 180)                              {                                  break;                              }                              trimmed++;                              instances = instances + x + "' ";                          }                          if (trimmed == project.users.Count)                          {                              IRC.DeliverMessage("Following users are in this project (showing all " + project.users.Count.ToString() + " members): " + instances' user);                              return true;                          }                          IRC.DeliverMessage("Following users are in this project (displaying " + trimmed.ToString() + " of " + project.users.Count.ToString() + " total): " + instances' user);                          return true;                      }                  }                  string names = getProjectsList(host);                  if (names != "")                  {                      IRC.DeliverMessage("I don't know this project' did you mean: " + names + "? I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' user);                      return true;                  }                  IRC.DeliverMessage("I don't know this project' sorry' try browsing the list by hand' but I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' user);                  return true;              }
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The following statement contains a magic number: if (message.StartsWith("@labs-user "))              {                  if (GetConfig(channel' "LABS.Enabled"' false))                  {                      string user = message.Substring(11);                      string result = getProjects(user);                      int list = getNumbers(user);                      if (result != "")                      {                          IRC.DeliverMessage(user + " is member of " + list.ToString() + " projects: " + result' channel.Name);                          return;                      }                      IRC.DeliverMessage("That user is not a member of any project"' channel.Name);                      return;                  }              }
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The following statement contains a magic number: if (message.StartsWith("@labs-resolve "))              {                  if (GetConfig(channel' "LABS.Enabled"' false))                  {                      string host = message.Substring("@labs-resolve ".Length);                      if (!OK)                      {                          IRC.DeliverMessage("Please wait' I still didn't retrieve the labs datafile containing the list of instances"' channel);                          return;                      }                      Instance instance = resolve(host);                      if (instance != null)                      {                          string d = "The " + host + " resolves to instance " + instance.OriginalName + " with a fancy name " + instance.Name + " and IP " + instance.IP;                          IRC.DeliverMessage(d' channel);                          return;                      }                      string names = "";                      lock (Instances)                      {                          foreach (Instance instance2 in Instances)                          {                              if (instance2.Name.Contains(host) || instance2.OriginalName.Contains(host))                              {                                  names += instance2.OriginalName + " (" + instance2.Name + ")' ";                                  if (names.Length > 210)                                  {                                      break;                                  }                              }                          }                      }                      if (names != "")                      {                          IRC.DeliverMessage("I don't know this instance - aren't you are looking for: " + names' channel);                      }                      else                      {                          IRC.DeliverMessage("I don't know this instance' sorry' try browsing the list by hand' but I can guarantee there is no such instance matching this name' host or Nova ID unless it was created less than " + time().Seconds.ToString() + " seconds ago"' channel);                      }                  }              }
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Hook_PRIV,The following statement contains a magic number: if (message.StartsWith("@labs-project-users "))              {                  if (GetConfig(channel' "LABS.Enabled"' false))                  {                      string host = message.Substring("@labs-project-users ".Length);                      if (!OK)                      {                          IRC.DeliverMessage("Please wait' I still didn't retrieve the labs datafile containing the list of projects"' channel);                          return;                      }                      Nova project = getProject(host);                      if (project != null)                      {                          string instances = "";                          int trimmed = 0;                          lock (project.instances)                          {                              foreach (string x in project.users)                              {                                  if (instances.Length > 180)                                  {                                      break;                                  }                                  trimmed++;                                  instances = instances + x + "' ";                              }                              if (trimmed == project.users.Count)                              {                                  IRC.DeliverMessage("Following users are in this project (showing all " + project.users.Count.ToString() + " members): " + instances' channel);                                  return;                              }                              IRC.DeliverMessage("Following users are in this project (displaying " + trimmed.ToString() + " of " + project.users.Count.ToString() + " total): " + instances' channel);                              return;                          }                      }                      string names = getProjectsList(host);                      if (names != "")                      {                          IRC.DeliverMessage("I don't know this project' did you mean: " + names + "? I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' channel.Name);                          return;                      }                      IRC.DeliverMessage("I don't know this project' sorry' try browsing the list by hand' but I can guarantee there is no such project matching this name unless it has been created less than " + time().Seconds.ToString() + " seconds ago"' channel.Name);                  }              }
Magic Number,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,Load,The following statement contains a magic number: try              {                  Core.Help.Register("labs-on"' "Turn on the labs tool");                  Core.Help.Register("labs-off"' "Turn off the labs tool");                  Core.Help.Register("labs-resolve"' "Retrieve information about object");                  Core.Help.Register("labs-info"' "Display all known info about the object");                  Core.Help.Register("labs-user"' "Display information about user");                  Core.Help.Register("labs-project-info"' "Display information about the project");                  Core.Help.Register("labs-project-instances"' "List all instances in a project");                  Core.Help.Register("labs-project-users"' "Display all users in a project");                    while (IsWorking)                  {                      JSON();                      Thread.Sleep(200000);                  }              }              catch (ThreadAbortException)              {              }              catch (Exception f)              {                  Core.HandleException(f' "Labs");              }
Magic Number,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,Construct,The following statement contains a magic number: Version = new System.Version(1' 0' 0' 2);
Magic Number,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,MakeTemplate,The following statement contains a magic number: if (text.Contains("{{"))              {                  string link = text.Substring(text.IndexOf("{{") + 2);                  if (link.Contains("}}"))                  {                      string second = link.Substring(link.IndexOf("}}") + 2);                      if (second.Contains("{{"))                      {                          second = MakeLink(second' Default' Ignore);                      }                      else                      {                          second = null;                      }                      link = link.Substring(0' link.IndexOf("}}"));                      if (link.Contains("|"))                      {                          link = link.Substring(0' link.IndexOf("|"));                      }                      link = HttpUtility.UrlEncode(link).Replace("%2f"' "/")                          .Replace("%3a"' ":")                          .Replace("+"' "_");                      if (second != null)                      {                          return URL2(link' Default) + " " + second;                      }                      return URL2(link' Default) + " ";                  }              }
Magic Number,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,MakeTemplate,The following statement contains a magic number: if (text.Contains("{{"))              {                  string link = text.Substring(text.IndexOf("{{") + 2);                  if (link.Contains("}}"))                  {                      string second = link.Substring(link.IndexOf("}}") + 2);                      if (second.Contains("{{"))                      {                          second = MakeLink(second' Default' Ignore);                      }                      else                      {                          second = null;                      }                      link = link.Substring(0' link.IndexOf("}}"));                      if (link.Contains("|"))                      {                          link = link.Substring(0' link.IndexOf("|"));                      }                      link = HttpUtility.UrlEncode(link).Replace("%2f"' "/")                          .Replace("%3a"' ":")                          .Replace("+"' "_");                      if (second != null)                      {                          return URL2(link' Default) + " " + second;                      }                      return URL2(link' Default) + " ";                  }              }
Magic Number,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,MakeLink,The following statement contains a magic number: if (text.Contains("[["))              {                  string link = text.Substring(text.IndexOf("[[") + 2);                  if (link.Contains("]]"))                  {                      string second = link.Substring(link.IndexOf("]]") + 2);                      if (second.Contains("[["))                      {                          second = MakeLink(second' Default' Ignore);                      }                      else                      {                          second = null;                      }                      link = link.Substring(0' link.IndexOf("]]"));                      if (link.Contains("|"))                      {                          link = link.Substring(0' link.IndexOf("|"));                      }                      link = HttpUtility.UrlEncode(link).Replace("%2f"' "/")                          .Replace("%3a"' ":")                          .Replace("%23"' "#")                          .Replace("+"' "_");                      if (second != null)                      {                          return URL(link' Default) + " " + second;                      }                      return URL(link' Default);                  }              }
Magic Number,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,MakeLink,The following statement contains a magic number: if (text.Contains("[["))              {                  string link = text.Substring(text.IndexOf("[[") + 2);                  if (link.Contains("]]"))                  {                      string second = link.Substring(link.IndexOf("]]") + 2);                      if (second.Contains("[["))                      {                          second = MakeLink(second' Default' Ignore);                      }                      else                      {                          second = null;                      }                      link = link.Substring(0' link.IndexOf("]]"));                      if (link.Contains("|"))                      {                          link = link.Substring(0' link.IndexOf("|"));                      }                      link = HttpUtility.UrlEncode(link).Replace("%2f"' "/")                          .Replace("%3a"' ":")                          .Replace("%23"' "#")                          .Replace("+"' "_");                      if (second != null)                      {                          return URL(link' Default) + " " + second;                      }                      return URL(link' Default);                  }              }
Magic Number,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,ContainsLink,The following statement contains a magic number: if (message.Contains("{{"))              {                  if (message.Substring(message.IndexOf("{{") + 2).Contains("}}"))                  {                      return true;                  }              }
Magic Number,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,ContainsLink,The following statement contains a magic number: if (message.Contains("[["))              {                  if (message.Substring(message.IndexOf("[[") + 2).Contains("]]"))                  {                      return true;                  }              }
Magic Number,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,Hook_PRIV,The following statement contains a magic number: if (message.StartsWith(Configuration.System.CommandPrefix + "link "))              {                  string link = message.Substring(6);                  string xx = MakeTemplate(link' GetConfig(channel' "Link.Default"' "en")' false) + MakeLink(link' GetConfig(channel' "Link.Default"' "en")' true);                  if (xx.Length > 0)                  {                      IRC.DeliverMessage(xx' channel);                      return;                  }                  IRC.DeliverMessage(messages.Localize("Linkie-E3"' channel.Language)' channel);                  return;              }
Magic Number,wmib,Link,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Link\Link.cs,Load,The following statement contains a magic number: try              {                  while (IsWorking)                  {                      Thread.Sleep(20000);                  }              }              catch (ThreadAbortException)              {              }
Magic Number,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,Double,The following statement contains a magic number: if (n < 10)              {                  return "0" + n;              }
Magic Number,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The following statement contains a magic number: try              {                  Core.DB.Connect();                  string time = Core.DB.Select("recentchanges"' "rc_timestamp"' "order by rc_timestamp desc limit 1")[0][0];                  Core.DB.Disconnect();                  if (time == null)                  {                      return "ERROR: unable to retrieve the data because " + Core.DB.ErrorBuffer;                  }                  DateTime n = DateTime.Now;                  DateTime replica = new DateTime(int.Parse(time.Substring(0' 4))' int.Parse(time.Substring(4' 2))' int.Parse(time.Substring(6' 2))' int.Parse(time.Substring(8' 2))' int.Parse(time.Substring(10' 2))' int.Parse(time.Substring(12' 2)));                  //string x = n.Year.ToString() + Double(n.Month) + Double(n.Day) + Double(n.Hour) + Double(n.Minute) + Double(n.Second);                  return (n - replica).ToString();              }              catch (Exception fail)              {                  return "ERROR: unable to retrieve data because: " + fail;              }
Magic Number,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The following statement contains a magic number: try              {                  Core.DB.Connect();                  string time = Core.DB.Select("recentchanges"' "rc_timestamp"' "order by rc_timestamp desc limit 1")[0][0];                  Core.DB.Disconnect();                  if (time == null)                  {                      return "ERROR: unable to retrieve the data because " + Core.DB.ErrorBuffer;                  }                  DateTime n = DateTime.Now;                  DateTime replica = new DateTime(int.Parse(time.Substring(0' 4))' int.Parse(time.Substring(4' 2))' int.Parse(time.Substring(6' 2))' int.Parse(time.Substring(8' 2))' int.Parse(time.Substring(10' 2))' int.Parse(time.Substring(12' 2)));                  //string x = n.Year.ToString() + Double(n.Month) + Double(n.Day) + Double(n.Hour) + Double(n.Minute) + Double(n.Second);                  return (n - replica).ToString();              }              catch (Exception fail)              {                  return "ERROR: unable to retrieve data because: " + fail;              }
Magic Number,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The following statement contains a magic number: try              {                  Core.DB.Connect();                  string time = Core.DB.Select("recentchanges"' "rc_timestamp"' "order by rc_timestamp desc limit 1")[0][0];                  Core.DB.Disconnect();                  if (time == null)                  {                      return "ERROR: unable to retrieve the data because " + Core.DB.ErrorBuffer;                  }                  DateTime n = DateTime.Now;                  DateTime replica = new DateTime(int.Parse(time.Substring(0' 4))' int.Parse(time.Substring(4' 2))' int.Parse(time.Substring(6' 2))' int.Parse(time.Substring(8' 2))' int.Parse(time.Substring(10' 2))' int.Parse(time.Substring(12' 2)));                  //string x = n.Year.ToString() + Double(n.Month) + Double(n.Day) + Double(n.Hour) + Double(n.Minute) + Double(n.Second);                  return (n - replica).ToString();              }              catch (Exception fail)              {                  return "ERROR: unable to retrieve data because: " + fail;              }
Magic Number,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The following statement contains a magic number: try              {                  Core.DB.Connect();                  string time = Core.DB.Select("recentchanges"' "rc_timestamp"' "order by rc_timestamp desc limit 1")[0][0];                  Core.DB.Disconnect();                  if (time == null)                  {                      return "ERROR: unable to retrieve the data because " + Core.DB.ErrorBuffer;                  }                  DateTime n = DateTime.Now;                  DateTime replica = new DateTime(int.Parse(time.Substring(0' 4))' int.Parse(time.Substring(4' 2))' int.Parse(time.Substring(6' 2))' int.Parse(time.Substring(8' 2))' int.Parse(time.Substring(10' 2))' int.Parse(time.Substring(12' 2)));                  //string x = n.Year.ToString() + Double(n.Month) + Double(n.Day) + Double(n.Hour) + Double(n.Minute) + Double(n.Second);                  return (n - replica).ToString();              }              catch (Exception fail)              {                  return "ERROR: unable to retrieve data because: " + fail;              }
Magic Number,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The following statement contains a magic number: try              {                  Core.DB.Connect();                  string time = Core.DB.Select("recentchanges"' "rc_timestamp"' "order by rc_timestamp desc limit 1")[0][0];                  Core.DB.Disconnect();                  if (time == null)                  {                      return "ERROR: unable to retrieve the data because " + Core.DB.ErrorBuffer;                  }                  DateTime n = DateTime.Now;                  DateTime replica = new DateTime(int.Parse(time.Substring(0' 4))' int.Parse(time.Substring(4' 2))' int.Parse(time.Substring(6' 2))' int.Parse(time.Substring(8' 2))' int.Parse(time.Substring(10' 2))' int.Parse(time.Substring(12' 2)));                  //string x = n.Year.ToString() + Double(n.Month) + Double(n.Day) + Double(n.Hour) + Double(n.Minute) + Double(n.Second);                  return (n - replica).ToString();              }              catch (Exception fail)              {                  return "ERROR: unable to retrieve data because: " + fail;              }
Magic Number,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The following statement contains a magic number: try              {                  Core.DB.Connect();                  string time = Core.DB.Select("recentchanges"' "rc_timestamp"' "order by rc_timestamp desc limit 1")[0][0];                  Core.DB.Disconnect();                  if (time == null)                  {                      return "ERROR: unable to retrieve the data because " + Core.DB.ErrorBuffer;                  }                  DateTime n = DateTime.Now;                  DateTime replica = new DateTime(int.Parse(time.Substring(0' 4))' int.Parse(time.Substring(4' 2))' int.Parse(time.Substring(6' 2))' int.Parse(time.Substring(8' 2))' int.Parse(time.Substring(10' 2))' int.Parse(time.Substring(12' 2)));                  //string x = n.Year.ToString() + Double(n.Month) + Double(n.Day) + Double(n.Hour) + Double(n.Minute) + Double(n.Second);                  return (n - replica).ToString();              }              catch (Exception fail)              {                  return "ERROR: unable to retrieve data because: " + fail;              }
Magic Number,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The following statement contains a magic number: try              {                  Core.DB.Connect();                  string time = Core.DB.Select("recentchanges"' "rc_timestamp"' "order by rc_timestamp desc limit 1")[0][0];                  Core.DB.Disconnect();                  if (time == null)                  {                      return "ERROR: unable to retrieve the data because " + Core.DB.ErrorBuffer;                  }                  DateTime n = DateTime.Now;                  DateTime replica = new DateTime(int.Parse(time.Substring(0' 4))' int.Parse(time.Substring(4' 2))' int.Parse(time.Substring(6' 2))' int.Parse(time.Substring(8' 2))' int.Parse(time.Substring(10' 2))' int.Parse(time.Substring(12' 2)));                  //string x = n.Year.ToString() + Double(n.Month) + Double(n.Day) + Double(n.Hour) + Double(n.Minute) + Double(n.Second);                  return (n - replica).ToString();              }              catch (Exception fail)              {                  return "ERROR: unable to retrieve data because: " + fail;              }
Magic Number,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The following statement contains a magic number: try              {                  Core.DB.Connect();                  string time = Core.DB.Select("recentchanges"' "rc_timestamp"' "order by rc_timestamp desc limit 1")[0][0];                  Core.DB.Disconnect();                  if (time == null)                  {                      return "ERROR: unable to retrieve the data because " + Core.DB.ErrorBuffer;                  }                  DateTime n = DateTime.Now;                  DateTime replica = new DateTime(int.Parse(time.Substring(0' 4))' int.Parse(time.Substring(4' 2))' int.Parse(time.Substring(6' 2))' int.Parse(time.Substring(8' 2))' int.Parse(time.Substring(10' 2))' int.Parse(time.Substring(12' 2)));                  //string x = n.Year.ToString() + Double(n.Month) + Double(n.Day) + Double(n.Hour) + Double(n.Minute) + Double(n.Second);                  return (n - replica).ToString();              }              catch (Exception fail)              {                  return "ERROR: unable to retrieve data because: " + fail;              }
Magic Number,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The following statement contains a magic number: try              {                  Core.DB.Connect();                  string time = Core.DB.Select("recentchanges"' "rc_timestamp"' "order by rc_timestamp desc limit 1")[0][0];                  Core.DB.Disconnect();                  if (time == null)                  {                      return "ERROR: unable to retrieve the data because " + Core.DB.ErrorBuffer;                  }                  DateTime n = DateTime.Now;                  DateTime replica = new DateTime(int.Parse(time.Substring(0' 4))' int.Parse(time.Substring(4' 2))' int.Parse(time.Substring(6' 2))' int.Parse(time.Substring(8' 2))' int.Parse(time.Substring(10' 2))' int.Parse(time.Substring(12' 2)));                  //string x = n.Year.ToString() + Double(n.Month) + Double(n.Day) + Double(n.Hour) + Double(n.Minute) + Double(n.Second);                  return (n - replica).ToString();              }              catch (Exception fail)              {                  return "ERROR: unable to retrieve data because: " + fail;              }
Magic Number,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The following statement contains a magic number: try              {                  Core.DB.Connect();                  string time = Core.DB.Select("recentchanges"' "rc_timestamp"' "order by rc_timestamp desc limit 1")[0][0];                  Core.DB.Disconnect();                  if (time == null)                  {                      return "ERROR: unable to retrieve the data because " + Core.DB.ErrorBuffer;                  }                  DateTime n = DateTime.Now;                  DateTime replica = new DateTime(int.Parse(time.Substring(0' 4))' int.Parse(time.Substring(4' 2))' int.Parse(time.Substring(6' 2))' int.Parse(time.Substring(8' 2))' int.Parse(time.Substring(10' 2))' int.Parse(time.Substring(12' 2)));                  //string x = n.Year.ToString() + Double(n.Month) + Double(n.Day) + Double(n.Hour) + Double(n.Minute) + Double(n.Second);                  return (n - replica).ToString();              }              catch (Exception fail)              {                  return "ERROR: unable to retrieve data because: " + fail;              }
Magic Number,wmib,Replag,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Replag\Rl.cs,GetReplag,The following statement contains a magic number: try              {                  Core.DB.Connect();                  string time = Core.DB.Select("recentchanges"' "rc_timestamp"' "order by rc_timestamp desc limit 1")[0][0];                  Core.DB.Disconnect();                  if (time == null)                  {                      return "ERROR: unable to retrieve the data because " + Core.DB.ErrorBuffer;                  }                  DateTime n = DateTime.Now;                  DateTime replica = new DateTime(int.Parse(time.Substring(0' 4))' int.Parse(time.Substring(4' 2))' int.Parse(time.Substring(6' 2))' int.Parse(time.Substring(8' 2))' int.Parse(time.Substring(10' 2))' int.Parse(time.Substring(12' 2)));                  //string x = n.Year.ToString() + Double(n.Month) + Double(n.Day) + Double(n.Hour) + Double(n.Minute) + Double(n.Second);                  return (n - replica).ToString();              }              catch (Exception fail)              {                  return "ERROR: unable to retrieve data because: " + fail;              }
Magic Number,wmib,Requests,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Requests\Request.cs,Construct,The following statement contains a magic number: Version = new Version(1' 20);
Magic Number,wmib,Requests,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Requests\Request.cs,formatReportLine,The following statement contains a magic number: foreach (string username in usernames)              {                  if (info != "")                      info += "' ";                  info += username;   // TODO: Add " (waiting " + (time since Modification_date) + ")".                  displayed++;                  if (info.Length > 160)                      break;              }
Magic Number,wmib,Requests,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Requests\Request.cs,Run,The following statement contains a magic number: try              {                  while (this.IsWorking)                  {                      List<string> requests = new List<string>();                      // first copy all requests so that we don't keep the array locked for too long                      // because it can be locked by main thread' we need to acquire the lock for shortest time                      lock (this.WaitingRequests)                      {                          requests.AddRange(this.WaitingRequests);                          this.WaitingRequests.Clear();                      }                        foreach (string channel in requests)                      {                          // TODO: here we should implement the channel parameter so that we could use this module                          // in more channels than one                          displayWaiting(true);                      }                      Thread.Sleep(600);                  }              }              catch (Exception fail)              {                  HandleException(fail);              }
Magic Number,wmib,Requests,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Requests\Request.cs,Load,The following statement contains a magic number: try              {                  // TODO: Install CA certificate used by wikitech to                  // Mono.                  ServicePointManager.ServerCertificateValidationCallback = (a' b' c' d) => true;                    pRequestsChannel = Core.GetChannel(RequestChannel);                  if (pRequestsChannel == null)                  {                      Log("CRITICAL: the bot isn't in " + RequestChannel + " unloading requests"' true);                      return;                  }                    PendingRequests = new Thread(Run) {Name = "Pending queries thread for requests extension"};                  PendingRequests.Start();                    Thread.Sleep(60000);                  while (this.IsWorking)                  {                      if (GetConfig(pRequestsChannel' "Requests.Enabled"' false) && displayWaiting(false))                          Thread.Sleep(800000);                      else                          Thread.Sleep(20000);                  }              }              catch (Exception fail)              {                  HandleException(fail);              }
Magic Number,wmib,Requests,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Requests\Request.cs,Load,The following statement contains a magic number: try              {                  // TODO: Install CA certificate used by wikitech to                  // Mono.                  ServicePointManager.ServerCertificateValidationCallback = (a' b' c' d) => true;                    pRequestsChannel = Core.GetChannel(RequestChannel);                  if (pRequestsChannel == null)                  {                      Log("CRITICAL: the bot isn't in " + RequestChannel + " unloading requests"' true);                      return;                  }                    PendingRequests = new Thread(Run) {Name = "Pending queries thread for requests extension"};                  PendingRequests.Start();                    Thread.Sleep(60000);                  while (this.IsWorking)                  {                      if (GetConfig(pRequestsChannel' "Requests.Enabled"' false) && displayWaiting(false))                          Thread.Sleep(800000);                      else                          Thread.Sleep(20000);                  }              }              catch (Exception fail)              {                  HandleException(fail);              }
Magic Number,wmib,Requests,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Requests\Request.cs,Load,The following statement contains a magic number: try              {                  // TODO: Install CA certificate used by wikitech to                  // Mono.                  ServicePointManager.ServerCertificateValidationCallback = (a' b' c' d) => true;                    pRequestsChannel = Core.GetChannel(RequestChannel);                  if (pRequestsChannel == null)                  {                      Log("CRITICAL: the bot isn't in " + RequestChannel + " unloading requests"' true);                      return;                  }                    PendingRequests = new Thread(Run) {Name = "Pending queries thread for requests extension"};                  PendingRequests.Start();                    Thread.Sleep(60000);                  while (this.IsWorking)                  {                      if (GetConfig(pRequestsChannel' "Requests.Enabled"' false) && displayWaiting(false))                          Thread.Sleep(800000);                      else                          Thread.Sleep(20000);                  }              }              catch (Exception fail)              {                  HandleException(fail);              }
Magic Number,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Construct,The following statement contains a magic number: Version = new Version(1' 2' 0' 8);
Magic Number,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Construct,The following statement contains a magic number: Version = new Version(1' 2' 0' 8);
Magic Number,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Extension_DumpHtml,The following statement contains a magic number: try              {                  if (GetConfig(channel' "RC.Enabled"' false))                  {                      RecentChanges rc = (RecentChanges)channel.RetrieveObject("RC");                      if (rc != null)                      {                          HTML = rc.ToTable();                      }                      else                      {                          Syslog.ErrorLog("NULL rc for " + channel.Name);                      }                  }                  else                  {                      DebugLog("RC is disabled for " + channel.Name' 2);                  }              }              catch (Exception fail)              {                  HandleException(fail);              }
Magic Number,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Hook_PRIV,The following statement contains a magic number: if (message.StartsWith(Configuration.System.CommandPrefix + "RC-"))              {                  if (channel.SystemUsers.IsApproved(invoker' "recentchanges-remove"))                  {                      if (GetConfig(channel' "RC.Enabled"' false))                      {                          string[] a = message.Split(' ');                          if (a.Length < 3)                          {                              IRC.DeliverMessage(messages.Localize("Feed8"' channel.Language' new List<string> { invoker.Nick })' channel.Name);                              return;                          }                          string wiki = a[1];                          string Page = a[2];                          RecentChanges rc = (RecentChanges)channel.RetrieveObject("RC");                          if (rc != null)                          {                              rc.RemovePage(wiki' Page);                          }                          return;                      }                      IRC.DeliverMessage(messages.Localize("Feed3"' channel.Language)' channel);                      return;                  }                  if (!channel.SuppressWarnings)                  {                      IRC.DeliverMessage(messages.Localize("PermissionDenied"' channel.Language)' channel);                  }                  return;              }
Magic Number,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Hook_PRIV,The following statement contains a magic number: if (message.StartsWith(Configuration.System.CommandPrefix + "RC-"))              {                  if (channel.SystemUsers.IsApproved(invoker' "recentchanges-remove"))                  {                      if (GetConfig(channel' "RC.Enabled"' false))                      {                          string[] a = message.Split(' ');                          if (a.Length < 3)                          {                              IRC.DeliverMessage(messages.Localize("Feed8"' channel.Language' new List<string> { invoker.Nick })' channel.Name);                              return;                          }                          string wiki = a[1];                          string Page = a[2];                          RecentChanges rc = (RecentChanges)channel.RetrieveObject("RC");                          if (rc != null)                          {                              rc.RemovePage(wiki' Page);                          }                          return;                      }                      IRC.DeliverMessage(messages.Localize("Feed3"' channel.Language)' channel);                      return;                  }                  if (!channel.SuppressWarnings)                  {                      IRC.DeliverMessage(messages.Localize("PermissionDenied"' channel.Language)' channel);                  }                  return;              }
Magic Number,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Hook_PRIV,The following statement contains a magic number: if (message.StartsWith(Configuration.System.CommandPrefix + "RC+ "))              {                  if (channel.SystemUsers.IsApproved(invoker' "recentchanges-add"))                  {                      if (GetConfig(channel' "RC.Enabled"' false))                      {                          string[] a = message.Split(' ');                          if (a.Length < 3)                          {                              IRC.DeliverMessage(messages.Localize("Feed4"' channel.Language) + invoker.Nick + messages.Localize("Feed5"' channel.Language)' channel);                              return;                          }                          string wiki = a[1];                          string Page = a[2];                          if (wiki.Contains("_"))                          {                              IRC.DeliverMessage("Underscore in wiki name is not supported' new format is for example: en.wikipedia.org instead of en_wikipedia"' channel);                              return;                          }                          RecentChanges rc = (RecentChanges)channel.RetrieveObject("RC");                          if (rc != null)                          {                              rc.MonitorPage(wiki' Page);                          }                          return;                      }                      IRC.DeliverMessage(messages.Localize("Feed3"' channel.Language)' channel);                      return;                  }                  if (!channel.SuppressWarnings)                  {                      IRC.DeliverMessage(messages.Localize("PermissionDenied"' channel.Language)' channel);                  }                  return;              }
Magic Number,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Hook_PRIV,The following statement contains a magic number: if (message.StartsWith(Configuration.System.CommandPrefix + "RC+ "))              {                  if (channel.SystemUsers.IsApproved(invoker' "recentchanges-add"))                  {                      if (GetConfig(channel' "RC.Enabled"' false))                      {                          string[] a = message.Split(' ');                          if (a.Length < 3)                          {                              IRC.DeliverMessage(messages.Localize("Feed4"' channel.Language) + invoker.Nick + messages.Localize("Feed5"' channel.Language)' channel);                              return;                          }                          string wiki = a[1];                          string Page = a[2];                          if (wiki.Contains("_"))                          {                              IRC.DeliverMessage("Underscore in wiki name is not supported' new format is for example: en.wikipedia.org instead of en_wikipedia"' channel);                              return;                          }                          RecentChanges rc = (RecentChanges)channel.RetrieveObject("RC");                          if (rc != null)                          {                              rc.MonitorPage(wiki' Page);                          }                          return;                      }                      IRC.DeliverMessage(messages.Localize("Feed3"' channel.Language)' channel);                      return;                  }                  if (!channel.SuppressWarnings)                  {                      IRC.DeliverMessage(messages.Localize("PermissionDenied"' channel.Language)' channel);                  }                  return;              }
Magic Number,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Format,The following statement contains a magic number: if (flags.EndsWith("' "))                  flags = flags.Substring(0' flags.Length - 2);
Magic Number,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,OnChange,The following statement contains a magic number: foreach (RecentChanges curr in recentChanges)              {                  if (GetConfig(curr.channel' "RC.Enabled"' false))                  {                      lock (curr.MonitoredPages)                      {                          foreach (RecentChanges.IWatch iwatch in curr.MonitoredPages)                          {                              if (iwatch.Site == edit.ServerName || iwatch.Site == "*")                              {                                  if ((!edit.Minor && edit.Bot && GetConfig(curr.channel' "Bot.Enabled"' true)) || (!edit.Bot && edit.Minor && GetConfig(curr.channel' "Minor.Enabled"' true)) || (!edit.Bot && !edit.Minor) || (edit.Minor && GetConfig(curr.channel' "Minor.Enabled"' true) && edit.Bot && GetConfig(curr.channel' "Bot.Enabled"' true)))                                  {                                      if (edit.Title == iwatch.Page)                                      {                                          if (edit.LengthNew != 0 || edit.LengthOld != 0)                                          {                                              int size = edit.LengthNew - edit.LengthOld;                                              string sx = size.ToString();                                              if (size >= 0)                                              sx = "+" + sx;                                              edit.Summary = "[" + sx + "] " + edit.Summary;                                          }                                          if (iwatch.Site == null)                                              DebugLog("NULL pointer on idata 1"' 2);                                          IRC.DeliverMessage(Format(edit.ServerName' edit.ServerName' edit.Title' edit.User' edit.RevID.ToString()' edit.Summary'                                              curr.channel' edit.Bot' edit.Type == XmlRcs.RecentChange.ChangeType.New' edit.Minor)' curr.channel.Name' libirc.Defs.Priority.Low);                                      }                                      else if (iwatch.Page.EndsWith("*") && edit.Title.StartsWith(iwatch.Page.Replace("*"' "")))                                      {                                          if (iwatch.Site == null)                                          {                                              DebugLog("NULL pointer on idata 2"' 2);                                          }                                          IRC.DeliverMessage(Format(edit.ServerName' edit.ServerName' edit.Title' edit.User' edit.RevID.ToString()' edit.Summary' curr.channel' edit.Bot'                                                  edit.Type == XmlRcs.RecentChange.ChangeType.New' edit.Minor)' curr.channel.Name' libirc.Defs.Priority.Low);                                      }                                  }                              }                          }                      }                  }              }
Magic Number,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,OnChange,The following statement contains a magic number: foreach (RecentChanges curr in recentChanges)              {                  if (GetConfig(curr.channel' "RC.Enabled"' false))                  {                      lock (curr.MonitoredPages)                      {                          foreach (RecentChanges.IWatch iwatch in curr.MonitoredPages)                          {                              if (iwatch.Site == edit.ServerName || iwatch.Site == "*")                              {                                  if ((!edit.Minor && edit.Bot && GetConfig(curr.channel' "Bot.Enabled"' true)) || (!edit.Bot && edit.Minor && GetConfig(curr.channel' "Minor.Enabled"' true)) || (!edit.Bot && !edit.Minor) || (edit.Minor && GetConfig(curr.channel' "Minor.Enabled"' true) && edit.Bot && GetConfig(curr.channel' "Bot.Enabled"' true)))                                  {                                      if (edit.Title == iwatch.Page)                                      {                                          if (edit.LengthNew != 0 || edit.LengthOld != 0)                                          {                                              int size = edit.LengthNew - edit.LengthOld;                                              string sx = size.ToString();                                              if (size >= 0)                                              sx = "+" + sx;                                              edit.Summary = "[" + sx + "] " + edit.Summary;                                          }                                          if (iwatch.Site == null)                                              DebugLog("NULL pointer on idata 1"' 2);                                          IRC.DeliverMessage(Format(edit.ServerName' edit.ServerName' edit.Title' edit.User' edit.RevID.ToString()' edit.Summary'                                              curr.channel' edit.Bot' edit.Type == XmlRcs.RecentChange.ChangeType.New' edit.Minor)' curr.channel.Name' libirc.Defs.Priority.Low);                                      }                                      else if (iwatch.Page.EndsWith("*") && edit.Title.StartsWith(iwatch.Page.Replace("*"' "")))                                      {                                          if (iwatch.Site == null)                                          {                                              DebugLog("NULL pointer on idata 2"' 2);                                          }                                          IRC.DeliverMessage(Format(edit.ServerName' edit.ServerName' edit.Title' edit.User' edit.RevID.ToString()' edit.Summary' curr.channel' edit.Bot'                                                  edit.Type == XmlRcs.RecentChange.ChangeType.New' edit.Minor)' curr.channel.Name' libirc.Defs.Priority.Low);                                      }                                  }                              }                          }                      }                  }              }
Magic Number,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Load,The following statement contains a magic number: try              {                  Log("Loading feed");                  RecentChanges.Connect();                  RecentChanges.Provider.On_Error += OnError;                  RecentChanges.Provider.On_Change += OnChange;                  RecentChanges.Provider.On_Timeout += Provider_On_Timeout;                  RecentChanges.Provider.On_Exception += Provider_On_Exception;                  while (Core.IsRunning)                  {                      System.Threading.Thread.Sleep(200);                  }              }              catch (System.Threading.ThreadAbortException)              {              }              catch (Exception fail)              {                  HandleException(fail);              }
Missing Default,wmib,Labs,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\Labs\Labs.cs,JSON,The following switch statement is missing a default case: switch (b.Value.ToString())                              {                                  case "Instance Name":                                      name = getValue(ref b);                                      break;                                  case "Instance Type":                                      type = getValue(ref b);                                      break;                                  case "Project":                                      project = getValue(ref b);                                      break;                                  case "Image Id":                                      image = getValue(ref b);                                      break;                                  case "FQDN":                                      fqdn = getValue(ref b);                                      break;                                  case "Launch Time":                                      continue;                                  case "Puppet Class":                                      break;                                  case "Modification date":                                      ModifyTime = getValue(ref b);                                      break;                                  case "Instance Host":                                      host = getValue(ref b);                                      break;                                  case "Number of CPUs":                                      NumberOfCpu = getValue(ref b);                                      break;                                  case "RAM Size":                                      Ram = getValue(ref b);                                      break;                                  case "Amount of Storage":                                      Storage = getValue(ref b);                                      break;                                  case "fullurl":                                      FullUrl = getValue(ref b);                                      break;                              }
Missing Default,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Hook_GetConfig,The following switch statement is missing a default case: switch (config)              {                  case "recent-changes-template":                      IRC.DeliverMessage("Value of " + config + " is: " + GetConfig(chan' "RC.Template"' "<default value>")' chan);                      return true;              }
Missing Default,wmib.Extensions,ModuleRC,C:\repos\benapetr_wikimedia-bot\src\WMBot.WMFPlugins\RC\ModuleRC.cs,Hook_SetConfig,The following switch statement is missing a default case: switch (config)              {                  case "recent-changes-template":                      if (value != "null")                      {                          SetConfig(chan' "RC.Template"' value);                          IRC.DeliverMessage(messages.Localize("configuresave"' chan.Language' new List<string> { value' config })' chan);                          chan.SaveConfig();                          return true;                      }                      SetConfig(chan' "RC.Template"' "");                      IRC.DeliverMessage(messages.Localize("configuresave"' chan.Language' new List<string> { "null"' config })' chan);                      chan.SaveConfig();                      return true;              }
