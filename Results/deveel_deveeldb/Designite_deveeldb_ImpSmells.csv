Implementation smell,Namespace,Class,File,Method,Description
Long Method,Deveel.Data.Configurations.Util,Properties,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Configurations\Util\Properties.cs,Load,The method has 133 lines of code.
Long Method,Deveel.Data.Sql.Types,PrimitiveTypes,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\PrimitiveTypes.cs,ResolvePrimitive,The method has 105 lines of code.
Long Method,Deveel.Data.Text,PatternSearch,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Text\PatternSearch.cs,PatternMatch,The method has 102 lines of code.
Complex Method,Deveel,BigList<T>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\BigList.cs,AddRange,Cyclomatic complexity of the method is 8
Complex Method,Deveel,DictionaryExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\DictionaryExtensions.cs,GetValue,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchFirst,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchLast,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchFirst,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchLast,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Collections,SortedCollectionBase<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollectionBase.cs,FindLastBlock,Cyclomatic complexity of the method is 10
Complex Method,Deveel.Collections,SortedCollectionBase<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollectionBase.cs,FindFirstBlock,Cyclomatic complexity of the method is 9
Complex Method,Deveel.Collections,SortedCollectionBase<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollectionBase.cs,FindLastBlock,Cyclomatic complexity of the method is 10
Complex Method,Deveel.Data.Configurations,Configuration,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Configurations\Configuration.cs,SetValue,Cyclomatic complexity of the method is 9
Complex Method,Deveel.Data.Configurations,Configuration,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Configurations\Configuration.cs,GetValue,Cyclomatic complexity of the method is 9
Complex Method,Deveel.Data.Configurations.Util,Properties,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Configurations\Util\Properties.cs,Load,Cyclomatic complexity of the method is 31
Complex Method,Deveel.Data.Security,PrivilegeResolver,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Security\SqlPrivileges.cs,ResolvePrivilege,Cyclomatic complexity of the method is 15
Complex Method,Deveel.Data.Security,PrivilegeResolver,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Security\SqlPrivileges.cs,ToString,Cyclomatic complexity of the method is 15
Complex Method,Deveel.Data.Services,ServiceContainer,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Services\ServiceContainer.cs,Register,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,CompareTo,Cyclomatic complexity of the method is 12
Complex Method,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,GetTypeCode,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Data.Sql,SqlObject,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlObject.cs,GetSqlType,Cyclomatic complexity of the method is 15
Complex Method,Deveel.Data.Sql,SqlYearToMonth,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlYearToMonth.cs,TryParse,Cyclomatic complexity of the method is 9
Complex Method,Deveel.Data.Sql.Expressions,SqlBinaryExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlBinaryExpression.cs,ReduceBinary,Cyclomatic complexity of the method is 17
Complex Method,Deveel.Data.Sql.Expressions,SqlBinaryExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlBinaryExpression.cs,GetOperatorString,Cyclomatic complexity of the method is 17
Complex Method,Deveel.Data.Sql.Expressions,SqlConditionExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlConditionExpression.cs,ReduceAsync,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,Cyclomatic complexity of the method is 13
Complex Method,Deveel.Data.Sql.Expressions,SqlExpressionVisitor,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpressionVisitor.cs,Visit,Cyclomatic complexity of the method is 17
Complex Method,Deveel.Data.Sql.Expressions,SqlQuantifyExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlQuantifyExpression.cs,Relational,Cyclomatic complexity of the method is 9
Complex Method,Deveel.Data.Sql.Expressions,SqlQueryExpressionFrom,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlQueryExpressionFrom.cs,AppendTo,Cyclomatic complexity of the method is 11
Complex Method,Deveel.Data.Sql.Expressions,SqlStringMatchExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlStringMatchExpression.cs,ReduceAsync,Cyclomatic complexity of the method is 9
Complex Method,Deveel.Data.Sql.Indexes,RangeChecker,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\BlindSearchIndex.cs,Resolve,Cyclomatic complexity of the method is 11
Complex Method,Deveel.Data.Sql.Indexes,CollatedSearchIndex,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\CollatedSearchIndex.cs,PositionOfRangePoint,Cyclomatic complexity of the method is 17
Complex Method,Deveel.Data.Sql.Indexes,IndexRangeSet,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\IndexRangeSet.cs,IntersectOn,Cyclomatic complexity of the method is 12
Complex Method,Deveel.Data.Sql.Indexes,IndexRangeSet,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\IndexRangeSet.cs,Union,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Data.Sql.Methods,MethodContext,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Methods\MethodContext.cs,BuildArguments,Cyclomatic complexity of the method is 9
Complex Method,Deveel.Data.Sql.Statements,StatementContext,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Statements\StatementContext.cs,FindInTree,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Data.Sql.Tables.Model,RawTableInfo,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Tables\Model\RawTableInfo.cs,Union,Cyclomatic complexity of the method is 19
Complex Method,Deveel.Data.Sql.Types,PrimitiveTypes,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\PrimitiveTypes.cs,IsPrimitive,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Data.Sql.Types,PrimitiveTypes,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\PrimitiveTypes.cs,ResolvePrimitive,Cyclomatic complexity of the method is 30
Complex Method,Deveel.Data.Sql.Types,SqlCharacterType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlCharacterType.cs,NormalizeValue,Cyclomatic complexity of the method is 8
Complex Method,Deveel.Data.Sql.Types,SqlCharacterType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlCharacterType.cs,Cast,Cyclomatic complexity of the method is 9
Complex Method,Deveel.Data.Sql.Types,SqlNumericType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlNumericType.cs,DiscoverPrecision,Cyclomatic complexity of the method is 9
Complex Method,Deveel.Data.Sql.Types,SqlNumericType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlNumericType.cs,ValidatePrecision,Cyclomatic complexity of the method is 9
Complex Method,Deveel.Data.Sql.Types,SqlNumericType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlNumericType.cs,Wider,Cyclomatic complexity of the method is 12
Complex Method,Deveel.Data.Text,PatternSearch,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Text\PatternSearch.cs,PatternMatch,Cyclomatic complexity of the method is 18
Long Parameter List,Deveel.Data.Diagnostics,ContextExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Diagnostics\ContextExtensions.cs,LogAsync,The method has 5 parameters. Parameters: context' source' message' level' data
Long Parameter List,Deveel.Data.Security,Grant,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Security\Grant.cs,Grant,The method has 5 parameters. Parameters: granter' grantee' objectName' privileges' withOption
Long Parameter List,Deveel.Data.Security,IGrantManager,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Security\IGrantManager.cs,RevokeFromUserAsync,The method has 5 parameters. Parameters: revoker' user' objName' privileges' option
Long Parameter List,Deveel.Data.Security,IGrantManager,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Security\IGrantManager.cs,GrantToUserAsync,The method has 5 parameters. Parameters: granter' user' objName' privileges' withOption
Long Parameter List,Deveel.Data.Security,ObjectPrivilegesGrantedEvent,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Security\ObjectPrivilegesGrantedEvent.cs,ObjectPrivilegesGrantedEvent,The method has 6 parameters. Parameters: source' granter' grantee' objectName' privileges' withGrantOption
Long Parameter List,Deveel.Data.Security,ObjectPrivilegesRevokedEvent,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Security\ObjectPrivilegesRevokedEvent.cs,ObjectPrivilegesRevokedEvent,The method has 5 parameters. Parameters: source' revoker' grantee' objectName' privileges
Long Parameter List,Deveel.Data.Services,ServiceContainerExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Services\ServiceContainerExtensions.cs,Register,The method has 5 parameters. Parameters: container' serviceType' implementationType' scope' serviceKey
Long Parameter List,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' millisecond
Long Parameter List,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The method has 8 parameters. Parameters: year' month' day' hour' minute' second' millisecond' offset
Long Parameter List,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,SqlDayToSecond,The method has 5 parameters. Parameters: days' hours' minutes' seconds' milliseconds
Long Parameter List,Deveel.Data.Sql.Statements,GrantObjectPrivilegesStatement,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Statements\GrantObjectPrivilegesStatement.cs,GrantObjectPrivilegesStatement,The method has 5 parameters. Parameters: grantee' privileges' objectName' withGrantOption' columns
Long Parameter List,Deveel.Data.Sql.Tables,TableRowEvent,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Tables\TableRowEvent.cs,TableRowEvent,The method has 5 parameters. Parameters: source' tableName' tableId' rowNumber' eventType
Long Parameter List,Deveel.Data.Storage,InMemoryArea,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Storage\InMemoryStore.cs,InMemoryArea,The method has 5 parameters. Parameters: id' readOnly' data' offset' length
Long Parameter List,Deveel.Data.Transactions,Transaction,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Transactions\Transaction.cs,Transaction,The method has 5 parameters. Parameters: database' tableSystem' commitId' visibleTables' indexSets
Long Identifier,Deveel.Data.Sql.Indexes,RangeChecker,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\BlindSearchIndex.cs,,The length of the parameter CheckLesserEqualOrGreaterEqual is 30.
Long Statement,Deveel,BigList<T>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\BigList.cs,TrimToSize,The length of the statement  "				throw new ArgumentException("Cannot trim BigList class to value less than 0 or larger than original size"' nameof(newSize)); " is 124.
Long Statement,Deveel.Data.Sql,SqlBoolean,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlBoolean.cs,CompareTo,The length of the statement  "					throw new ArgumentOutOfRangeException("other"' "The given numeric value is out of range for a comparison with SQL BOOLEAN."); " is 125.
Long Statement,Deveel.Data.Sql,ParameterCollection,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlCommand.cs,ValidateParameter,The length of the statement  "					throw new ArgumentException(String.Format("The command accepts markers' but the parameter '{0}' is named."' item.Name)); " is 120.
Long Statement,Deveel.Data.Sql.Indexes,IndexList,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\IndexSetInfo.cs,AssertMatchesTable,The length of the statement  "					throw new ArgumentException($"The index is referencing the table '{indexInfo.TableName}' that is not in scope for the set"); " is 124.
Long Statement,Deveel.Data.Sql.Methods,MethodContext,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Methods\MethodContext.cs,Value,The length of the statement  "				throw new InvalidOperationException($"The argument at offset {offset} of the invoke does not resolve to any constant value"); " is 125.
Long Statement,Deveel.Data.Sql.Methods,MethodContext,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Methods\MethodContext.cs,BuildArguments,The length of the statement  "								$"The invoke to {methodInfo.MethodName} has no value for required parameter {paramInfo.Name} and no default value was set"); " is 124.
Long Statement,Deveel.Data.Sql.Methods,MethodContext,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Methods\MethodContext.cs,SetResult,The length of the statement  "				throw new InvalidOperationException($"Trying to set the return type to the method {Method.MethodInfo.MethodName} that is not a function."); " is 139.
Long Statement,Deveel.Data.Sql.Methods,SqlMethod,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Methods\SqlMethod.cs,ExecuteAsync,The length of the statement  "					throw new MethodException($"Error while executing {MethodInfo.MethodName}: see inner exception for more information"' ex); " is 122.
Long Statement,Deveel.Data.Sql.Methods,SqlMethodResult,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Methods\SqlMethodResult.cs,Validate,The length of the statement  "					throw new MethodException($"The requested output parameter {requestedParam.Name} was not set by the method {methodInfo.MethodName}"); " is 133.
Long Statement,Deveel.Data.Sql.Statements,TableColumnChecker,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Statements\CreateTableStatement.cs,ResolveColumnName,The length of the statement  "				        throw new InvalidOperationException(String.Format("Column name '{0}' caused an ambiguous match in table."' columnName)); " is 120.
Long Statement,Deveel.Data.Sql.Statements,DropUserStatement,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Statements\DropUserStatement.cs,RevokeAllGrantedPrivileges,The length of the statement  "					if (!await grantManager.RevokeFromUserAsync(user.Name' grant.Grantee' grant.ObjectName' grant.Privileges' grant.WithOption)) " is 124.
Long Statement,Deveel.Data.Sql.Statements,DropUserStatement,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Statements\DropUserStatement.cs,RevokeAllGrantedPrivileges,The length of the statement  "				context.RaiseEvent(new ObjectPrivilegesRevokedEvent(this' user.Name' grant.Grantee' grant.ObjectName' grant.Privileges)); " is 121.
Long Statement,Deveel.Data.Sql.Statements,GrantObjectPrivilegesStatement,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Statements\GrantObjectPrivilegesStatement.cs,PrepareStatementAsync,The length of the statement  "			return Task.FromResult<SqlStatement>(new GrantObjectPrivilegesStatement(Grantee' Privileges' objName' WithGrantOption' Columns)); " is 129.
Long Statement,Deveel.Data.Sql.Statements,GrantObjectPrivilegesStatement,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Statements\GrantObjectPrivilegesStatement.cs,ExecuteStatementAsync,The length of the statement  "			context.RaiseEvent<ObjectPrivilegesGrantedEvent>(context.User().Name' Grantee' ObjectName' Privileges' WithGrantOption); " is 120.
Long Statement,Deveel.Data.Sql.Statements.Security,PrivilegesRequirement,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Statements\Security\PrivilegesRequirement.cs,HandleRequirementAsync,The length of the statement  "				throw new UnauthorizedAccessException($"The user '{context.User().Name}' misses the privilege {Privilege} on {ObjectName}"); " is 124.
Long Statement,Deveel.Data.Sql.Tables,Row,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Tables\Row.cs,GetValueAsync,The length of the statement  "				throw new ArgumentOutOfRangeException(nameof(column)' column' $"Column is out of range of the columns of table '{Table.TableInfo.TableName}'"); " is 143.
Long Statement,Deveel.Data.Sql.Tables,ColumnCollection,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Tables\TableInfo.cs,AssertColumnNotExists,The length of the statement  "					throw new ArgumentException($"A column named '{column.ColumnName}' is already present in table '{tableInfo.TableName}'"); " is 121.
Long Statement,Deveel.Data.Sql.Tables.Model,ReferenceResolver,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Tables\Model\GroupTable.cs,ResolveType,The length of the statement  "						throw new InvalidOperationException($"Cannot find column {referenceName} in table {groupResolver.table.TableInfo.TableName}"); " is 126.
Long Statement,Deveel.Data.Sql.Variables,ContextExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Variables\ContextExtensions.cs,AssignVariable,The length of the statement  "			throw new SqlExpressionException($"Could not find variable '{name}' in the context hierarchy and no variable manager was found"); " is 129.
Long Statement,Deveel.Data.Sql.Variables,Variable,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Variables\Variable.cs,SetValue,The length of the statement  "				throw new ArgumentException($"The type {valueType} of the value is not compatible with the variable type '{VariableInfo.Type}'"); " is 129.
Complex Conditional,Deveel.Data.Configurations,ConfigurationExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Configurations\ConfigurationExtensions.cs,ConvertToEnum,The conditional expression  "value is int ||  				value is short ||  				value is long ||  				value is byte"  is complex.
Complex Conditional,Deveel.Data.Configurations,ConfigurationExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Configurations\ConfigurationExtensions.cs,ConvertToBoolean,The conditional expression  "String.Equals(value' "true"' StringComparison.OrdinalIgnoreCase) ||  				String.Equals(value' "enabled"' StringComparison.OrdinalIgnoreCase) ||  				String.Equals(value' "1") ||  				String.Equals(value' "on"' StringComparison.OrdinalIgnoreCase)"  is complex.
Complex Conditional,Deveel.Data.Configurations,ConfigurationExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Configurations\ConfigurationExtensions.cs,ConvertToBoolean,The conditional expression  "String.Equals(value' "false"' StringComparison.OrdinalIgnoreCase) ||  				String.Equals(value' "disabled"' StringComparison.OrdinalIgnoreCase) ||  				String.Equals(value' "0") ||  				String.Equals(value' "off")"  is complex.
Complex Conditional,Deveel.Data.Configurations.Util,Properties,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Configurations\Util\Properties.cs,Load,The conditional expression  "pos < line.Length  					   && !Char.IsWhiteSpace(c = line[pos++])  					   && c != '=' && c != ':'"  is complex.
Complex Conditional,Deveel.Data.Sql,SqlObject,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlObject.cs,Is,The conditional expression  "IsUnknown && !other.IsUnknown ||  			    !IsUnknown && other.IsUnknown"  is complex.
Complex Conditional,Deveel.Data.Sql.Indexes,IndexRangeSet,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\IndexRangeSet.cs,IntersectOn,The conditional expression  "op == SqlExpressionType.Is ||  			    op == SqlExpressionType.Equal ||  			    op == SqlExpressionType.GreaterThan ||  			    op == SqlExpressionType.GreaterThanOrEqual"  is complex.
Complex Conditional,Deveel.Data.Sql.Indexes,IndexRangeSet,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\IndexRangeSet.cs,IntersectOn,The conditional expression  "op == SqlExpressionType.Is ||  			    op == SqlExpressionType.Equal ||  			    op == SqlExpressionType.LessThan ||  			    op == SqlExpressionType.LessThanOrEqual"  is complex.
Complex Conditional,Deveel.Data.Sql.Indexes,IndexRangeSet,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\IndexRangeSet.cs,IntersectOn,The conditional expression  "(c == 0 && (startPosition == RangeFieldOffset.AfterLastValue ||  				                endPosition == RangeFieldOffset.BeforeFirstValue)) ||  				    c > 0"  is complex.
Complex Conditional,Deveel.Data.Sql.Indexes,IndexRangeSet,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\IndexRangeSet.cs,IntersectedBy,The conditional expression  "c < 0 ||  				    (c == 0 && (startFlag1 == RangeFieldOffset.FirstValue ||  				                endFlag2 == RangeFieldOffset.LastValue))"  is complex.
Complex Conditional,Deveel.Data.Sql.Indexes,IndexRangeSet,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\IndexRangeSet.cs,IntersectedBy,The conditional expression  "c < 0 ||  				    (c == 0 && (startFlag2 == RangeFieldOffset.FirstValue ||  				                endFlag1 == RangeFieldOffset.LastValue))"  is complex.
Complex Conditional,Deveel.Data.Sql.Indexes,IndexRangeSet,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\IndexRangeSet.cs,ChangeRangeSizeToEncompass,The conditional expression  "c > 0 ||  					    c == 0 && startPosition1 == RangeFieldOffset.AfterLastValue &&  					    startPosition2 == RangeFieldOffset.FirstValue"  is complex.
Complex Conditional,Deveel.Data.Sql.Indexes,IndexRangeSet,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\IndexRangeSet.cs,ChangeRangeSizeToEncompass,The conditional expression  "c < 0 ||  					    c == 0 && endPosition1 == RangeFieldOffset.BeforeFirstValue &&  					    endPosition2 == RangeFieldOffset.LastValue"  is complex.
Complex Conditional,Deveel.Data.Sql.Types,PrimitiveTypes,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\PrimitiveTypes.cs,IsPrimitive,The conditional expression  "sqlType == SqlTypeCode.Unknown ||  			    sqlType == SqlTypeCode.Type ||  			    sqlType == SqlTypeCode.QueryPlan ||  			    sqlType == SqlTypeCode.Object ||  				sqlType == SqlTypeCode.RowRef ||  				sqlType == SqlTypeCode.FieldRef"  is complex.
Virtual Method Call from Constructor,Deveel.Collections,Enumerator,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,Enumerator,The constructor "Enumerator" calls a virtual method "GetArray".
Virtual Method Call from Constructor,Deveel.Data.Sql,SqlObject,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlObject.cs,SqlObject,The constructor "SqlObject" calls a virtual method "IsInstanceOf".
Virtual Method Call from Constructor,Deveel.Data.Sql,SqlObject,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlObject.cs,SqlObject,The constructor "SqlObject" calls a virtual method "NormalizeValue".
Empty Catch Block,Deveel.Data.Transactions,Transaction,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Transactions\Transaction.cs,Finish,The method has an empty catch block.
Empty Catch Block,Deveel.Data.Transactions,TransactionState,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Transactions\TransactionState.cs,DisposeTouchedTables,The method has an empty catch block.
Empty Catch Block,Deveel.Data.Transactions,TransactionState,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Transactions\TransactionState.cs,DisposeAllIndices,The method has an empty catch block.
Empty Catch Block,Deveel.Data.Transactions,TransactionState,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Transactions\TransactionState.cs,DisposeAllIndices,The method has an empty catch block.
Magic Number,Deveel,BigArray<T>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\BigArray.cs,Allocate,The following statement contains a magic number: BlockSize = (int.MaxValue - 56) / itemSize;
Magic Number,Deveel,BigArraySortUtil<T>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\BigArraySortUtil.cs,QuickSort,The following statement contains a magic number: var pivot = elements[(left + right) / 2];
Magic Number,Deveel,BigList<T>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\BigList.cs,TrimExcess,The following statement contains a magic number: var num = (long) (_items.Length * 0.9);
Magic Number,Deveel.Collections,SortedCollection<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,NewBlock,The following statement contains a magic number: return new Block(512);
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,BinarySearch,The following statement contains a magic number: var mid = (low + high)/2;
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchFirst,The following statement contains a magic number: return -(high + 2);
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchFirst,The following statement contains a magic number: high - low <= 2
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchFirst,The following statement contains a magic number: var mid = (low + high)/2;
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchLast,The following statement contains a magic number: return -(i + 2);
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchLast,The following statement contains a magic number: high - low <= 2
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchLast,The following statement contains a magic number: long mid = (low + high)/2;
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchFirst,The following statement contains a magic number: return -(high + 2);
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchFirst,The following statement contains a magic number: high - low <= 2
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchFirst,The following statement contains a magic number: long mid = (low + high)/2;
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchLast,The following statement contains a magic number: return -(i + 2);
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchLast,The following statement contains a magic number: high - low <= 2
Magic Number,Deveel.Collections,Block,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollection.cs,SearchLast,The following statement contains a magic number: long mid = (low + high)/2;
Magic Number,Deveel.Collections,SortedCollectionBase<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollectionBase.cs,SortedCollectionBase,The following statement contains a magic number: Blocks = new List<ICollectionBlock<TKey' TValue>>(10);
Magic Number,Deveel.Collections,SortedCollectionBase<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollectionBase.cs,InsertIntoBlock,The following statement contains a magic number: long moveSize = (block.Count/7) - 1;
Magic Number,Deveel.Collections,SortedCollectionBase<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollectionBase.cs,FindBlockContaining,The following statement contains a magic number: int mid = (low + high)/2;
Magic Number,Deveel.Collections,SortedCollectionBase<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollectionBase.cs,FindLastBlock,The following statement contains a magic number: high - low <= 2
Magic Number,Deveel.Collections,SortedCollectionBase<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollectionBase.cs,FindLastBlock,The following statement contains a magic number: int mid = (low + high)/2;
Magic Number,Deveel.Collections,SortedCollectionBase<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollectionBase.cs,FindFirstBlock,The following statement contains a magic number: high - low <= 2
Magic Number,Deveel.Collections,SortedCollectionBase<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollectionBase.cs,FindFirstBlock,The following statement contains a magic number: int mid = (low + high)/2;
Magic Number,Deveel.Collections,SortedCollectionBase<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollectionBase.cs,FindLastBlock,The following statement contains a magic number: high - low <= 2
Magic Number,Deveel.Collections,SortedCollectionBase<TKey;TValue>,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Collections\SortedCollectionBase.cs,FindLastBlock,The following statement contains a magic number: int mid = (low + high)/2;
Magic Number,Deveel.Data.Events,InMemoryEventRegistry,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Events\InMemoryEventRegistry.cs,InMemoryEventRegistry,The following statement contains a magic number: threads = new Task[3];
Magic Number,Deveel.Data.Events,InMemoryEventRegistry,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Events\InMemoryEventRegistry.cs,Listen,The following statement contains a magic number: semaphore.WaitOne(100)
Magic Number,Deveel.Data.Events,InMemoryEventRegistry,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Events\InMemoryEventRegistry.cs,Dispose,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Deveel.Data.Security,Privilege,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Security\Privilege.cs,Next,The following statement contains a magic number: return new Privilege(value ^ 2);
Magic Number,Deveel.Data.Sql,ObjectName,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\ObjectName.cs,GetHashCode,The following statement contains a magic number: var code = name.GetHashCode() ^ 5623;
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: year <= 0 || year > 9999
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: month <= 0 || month > 12
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: day <= 0 || day > 31
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: hour < 0 || hour > 23
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: minute < 0 || minute > 59
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: second < 0 || second > 59
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: millisecond < 0 || millisecond > 999
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: var year = ((bytes[0] - 100) * 100) + (bytes[1] - 100);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: var year = ((bytes[0] - 100) * 100) + (bytes[1] - 100);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: var year = ((bytes[0] - 100) * 100) + (bytes[1] - 100);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: var month = (int) bytes[2];
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: var day = (int) bytes[3];
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: var hour = (int) bytes[4] - 1;
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: var minute = (int) bytes[5] - 1;
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,SqlDateTime,The following statement contains a magic number: var second = (int) bytes[6] - 1;
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,DaysToAdd,The following statement contains a magic number: int n = (7 - c + d);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,DaysToAdd,The following statement contains a magic number: return (n > 7) ? n % 7 : n;
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,DaysToAdd,The following statement contains a magic number: return (n > 7) ? n % 7 : n;
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: var size = timeZone ? 13 : 11;
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: var size = timeZone ? 13 : 11;
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[0] = (byte) ((Year / 100) + 100);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[0] = (byte) ((Year / 100) + 100);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[1] = (byte) ((Year % 100) + 100);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[1] = (byte) ((Year % 100) + 100);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[2] = (byte) (Month);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[3] = (byte) (Day);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[4] = (byte) (Hour + 1);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[5] = (byte) (Minute + 1);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[6] = (byte) (Second + 1);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[7] = (byte) ((Millisecond >> 24));
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[7] = (byte) ((Millisecond >> 24));
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[8] = (byte) ((Millisecond >> 16) & 0xff);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[8] = (byte) ((Millisecond >> 16) & 0xff);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[9] = (byte) ((Millisecond >> 8) & 0xff);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[9] = (byte) ((Millisecond >> 8) & 0xff);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[10] = (byte) (Millisecond & 0xff);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[11] = (byte) (tsOffset.Hours + 20);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[11] = (byte) (tsOffset.Hours + 20);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[12] = (byte) (tsOffset.Minutes + 60);
Magic Number,Deveel.Data.Sql,SqlDateTime,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDateTime.cs,ToByteArray,The following statement contains a magic number: bytes[12] = (byte) (tsOffset.Minutes + 60);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,SqlDayToSecond,The following statement contains a magic number: bytes.Length != 20
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,SqlDayToSecond,The following statement contains a magic number: var hours = BitConverter.ToInt32(bytes' 4);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,SqlDayToSecond,The following statement contains a magic number: var minutes = BitConverter.ToInt32(bytes' 8);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,SqlDayToSecond,The following statement contains a magic number: var seconds = BitConverter.ToInt32(bytes' 12);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,SqlDayToSecond,The following statement contains a magic number: var millis = BitConverter.ToInt32(bytes' 16);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,ToByArray,The following statement contains a magic number: var bytes = new byte[20];
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,ToByArray,The following statement contains a magic number: Array.Copy(days' 0' bytes' 0' 4);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,ToByArray,The following statement contains a magic number: Array.Copy(hours' 0' bytes' 4' 4);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,ToByArray,The following statement contains a magic number: Array.Copy(hours' 0' bytes' 4' 4);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,ToByArray,The following statement contains a magic number: Array.Copy(minutes' 0' bytes' 8' 4);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,ToByArray,The following statement contains a magic number: Array.Copy(minutes' 0' bytes' 8' 4);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,ToByArray,The following statement contains a magic number: Array.Copy(seconds' 0' bytes' 12' 4);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,ToByArray,The following statement contains a magic number: Array.Copy(seconds' 0' bytes' 12' 4);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,ToByArray,The following statement contains a magic number: Array.Copy(millis' 0' bytes' 16' 4);
Magic Number,Deveel.Data.Sql,SqlDayToSecond,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlDayToSecond.cs,ToByArray,The following statement contains a magic number: Array.Copy(millis' 0' bytes' 16' 4);
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,SqlNumber,The following statement contains a magic number: byteCount = 120;
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,SqlNumber,The following statement contains a magic number: byteCount = 4;
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,SqlNumber,The following statement contains a magic number: bitCount < 30
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,SqlNumber,The following statement contains a magic number: byteCount = 120;
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,SqlNumber,The following statement contains a magic number: byteCount = 4;
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,SqlNumber,The following statement contains a magic number: bitCount < 30
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,GetUnscaledBytes,The following statement contains a magic number: var result = new byte[bytes.Length - 8];
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,GetUnscaledBytes,The following statement contains a magic number: Array.Copy(bytes' 8' result' 0' bytes.Length - 8);
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,GetUnscaledBytes,The following statement contains a magic number: Array.Copy(bytes' 8' result' 0' bytes.Length - 8);
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,GetScale,The following statement contains a magic number: return BitConverter.ToInt32(bytes' 4);
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,ToByteArray,The following statement contains a magic number: var result = new byte[unscaled.Length + 4 + 4];
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,ToByteArray,The following statement contains a magic number: var result = new byte[unscaled.Length + 4 + 4];
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,ToByteArray,The following statement contains a magic number: Array.Copy(precision' 0' result' 0' 4);
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,ToByteArray,The following statement contains a magic number: Array.Copy(scale' 0' result' 4' 4);
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,ToByteArray,The following statement contains a magic number: Array.Copy(scale' 0' result' 4' 4);
Magic Number,Deveel.Data.Sql,SqlNumber,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlNumber.cs,ToByteArray,The following statement contains a magic number: Array.Copy(unscaled' 0' result' 8' unscaled.Length);
Magic Number,Deveel.Data.Sql,SqlObject,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlObject.cs,GetHashCode,The following statement contains a magic number: var code = Type.GetHashCode() * 23;
Magic Number,Deveel.Data.Sql,SqlString,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlString.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,Deveel.Data.Sql,SqlString,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlString.cs,GetHashCode,The following statement contains a magic number: hash = hash * 23 + item.GetHashCode();
Magic Number,Deveel.Data.Sql,SqlString,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlString.cs,Concat,The following statement contains a magic number: var buffer = new char[2048];
Magic Number,Deveel.Data.Sql,SqlString,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlString.cs,Concat,The following statement contains a magic number: var buffer = new char[2048];
Magic Number,Deveel.Data.Sql,SqlStringCompare,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlStringCompare.cs,LexicographicalOrder,The following statement contains a magic number: str1Size < 32 * 1024 &&  			    str2Size < 32 * 1024
Magic Number,Deveel.Data.Sql,SqlStringCompare,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlStringCompare.cs,LexicographicalOrder,The following statement contains a magic number: str1Size < 32 * 1024 &&  			    str2Size < 32 * 1024
Magic Number,Deveel.Data.Sql,SqlStringCompare,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlStringCompare.cs,LexicographicalOrder,The following statement contains a magic number: str1Size < 32 * 1024 &&  			    str2Size < 32 * 1024
Magic Number,Deveel.Data.Sql,SqlStringCompare,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlStringCompare.cs,LexicographicalOrder,The following statement contains a magic number: str1Size < 32 * 1024 &&  			    str2Size < 32 * 1024
Magic Number,Deveel.Data.Sql,SqlYearToMonth,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlYearToMonth.cs,TryParse,The following statement contains a magic number: var totalMonths = ((years * 12) + months);
Magic Number,Deveel.Data.Sql,SqlYearToMonth,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\SqlYearToMonth.cs,AppendTo,The following statement contains a magic number: var m = System.Math.Abs(TotalMonths - (y * 12));
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following statement contains a magic number: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Magic Number,Deveel.Data.Sql.Indexes,BlindSearchIndex,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\BlindSearchIndex.cs,HighestSearch,The following statement contains a magic number: (higher - lower) <= 5
Magic Number,Deveel.Data.Sql.Indexes,BlindSearchIndex,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\BlindSearchIndex.cs,HighestSearch,The following statement contains a magic number: var mid = (lower + higher) / 2;
Magic Number,Deveel.Data.Sql.Indexes,CollatedSearchIndex,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Indexes\CollatedSearchIndex.cs,AddRange,The following statement contains a magic number: var list = new BigList<long>((end - start) + 2);
Magic Number,Deveel.Data.Sql.Statements,LocationInfo,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Statements\LocationInfo.cs,GetHashCode,The following statement contains a magic number: return (Line * 397) ^ Column;
Magic Number,Deveel.Data.Sql.Tables.Model,GroupResolver,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Tables\Model\GroupTable.cs,EnsureGroup,The following statement contains a magic number: GroupId == -2
Magic Number,Deveel.Data.Sql.Tables.Model,GroupResolver,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Tables\Model\GroupTable.cs,GetRowResolver,The following statement contains a magic number: return new GroupResolver(table' -2);
Magic Number,Deveel.Data.Sql.Types,SqlNumericType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlNumericType.cs,GetIntSize,The following statement contains a magic number: switch (sqlType) {  				case SqlTypeCode.TinyInt:  					return 1;  				case SqlTypeCode.SmallInt:  					return 2;  				case SqlTypeCode.Integer:  					return 4;  				case SqlTypeCode.BigInt:  					return 8;  				default:  					return 0;  			}
Magic Number,Deveel.Data.Sql.Types,SqlNumericType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlNumericType.cs,GetIntSize,The following statement contains a magic number: switch (sqlType) {  				case SqlTypeCode.TinyInt:  					return 1;  				case SqlTypeCode.SmallInt:  					return 2;  				case SqlTypeCode.Integer:  					return 4;  				case SqlTypeCode.BigInt:  					return 8;  				default:  					return 0;  			}
Magic Number,Deveel.Data.Sql.Types,SqlNumericType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlNumericType.cs,GetIntSize,The following statement contains a magic number: switch (sqlType) {  				case SqlTypeCode.TinyInt:  					return 1;  				case SqlTypeCode.SmallInt:  					return 2;  				case SqlTypeCode.Integer:  					return 4;  				case SqlTypeCode.BigInt:  					return 8;  				default:  					return 0;  			}
Magic Number,Deveel.Data.Sql.Types,SqlNumericType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlNumericType.cs,GetFloatSize,The following statement contains a magic number: switch (sqlType) {  				default:  					return 0;  				case SqlTypeCode.Real:  					return 4;  				case SqlTypeCode.Float:  				case SqlTypeCode.Double:  					return 8;  			}
Magic Number,Deveel.Data.Sql.Types,SqlNumericType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlNumericType.cs,GetFloatSize,The following statement contains a magic number: switch (sqlType) {  				default:  					return 0;  				case SqlTypeCode.Real:  					return 4;  				case SqlTypeCode.Float:  				case SqlTypeCode.Double:  					return 8;  			}
Magic Number,Deveel.Data.Sql.Types,SqlNumericType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlNumericType.cs,Wider,The following statement contains a magic number: return new SqlNumericType(SqlTypeCode.Double' 16' -1);
Magic Number,Deveel.Data.Storage,AreaExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Storage\AreaExtensions.cs,ReadInt16,The following statement contains a magic number: var bytes = new byte[2];
Magic Number,Deveel.Data.Storage,AreaExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Storage\AreaExtensions.cs,ReadInt16,The following statement contains a magic number: area.Read(bytes' 0' 2);
Magic Number,Deveel.Data.Storage,AreaExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Storage\AreaExtensions.cs,ReadInt32,The following statement contains a magic number: var bytes = new byte[4];
Magic Number,Deveel.Data.Storage,AreaExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Storage\AreaExtensions.cs,ReadInt32,The following statement contains a magic number: area.Read(bytes' 0' 4);
Magic Number,Deveel.Data.Storage,AreaExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Storage\AreaExtensions.cs,ReadInt64,The following statement contains a magic number: var bytes = new byte[8];
Magic Number,Deveel.Data.Storage,AreaExtensions,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Storage\AreaExtensions.cs,ReadInt64,The following statement contains a magic number: area.Read(bytes' 0' 8);
Magic Number,Deveel.Data.Storage,InMemoryArea,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Storage\InMemoryStore.cs,CopyTo,The following statement contains a magic number: const int bufferSize = 2048;
Magic Number,Deveel.Data.Storage,InMemoryStoreSystem,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Storage\InMemoryStoreSystem.cs,CreateStore,The following statement contains a magic number: var hashSize = configuration.GetInt32("hashSize"' 1024);
Magic Number,Deveel.Data.Storage,ObjectStream,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Storage\ObjectStream.cs,ObjectStream,The following statement contains a magic number: outTempStream = new MemoryStream(64*1024);
Magic Number,Deveel.Data.Storage,ObjectStream,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Storage\ObjectStream.cs,ObjectStream,The following statement contains a magic number: outTempStream = new MemoryStream(64*1024);
Magic Number,Deveel.Data.Transactions,Locker,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Transactions\Locker.cs,Locker,The following statement contains a magic number: openHandles = new List<LockHandle>(128);
Magic Number,Deveel.Data.Transactions,LockHandle,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Transactions\LockHandle.cs,Wait,The following statement contains a magic number: var timeout = 300;
Magic Number,Deveel.Data.Transactions,LockHandle,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Transactions\LockHandle.cs,WaitAll,The following statement contains a magic number: var timeout = 300;
Missing Default,Deveel.Data.Security,PrivilegeResolver,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Security\SqlPrivileges.cs,ResolvePrivilege,The following switch statement is missing a default case: switch (privName.ToUpperInvariant()) {  						case "ADMIN": priv = Admin; break;  						case "CONNECT": priv = Connect; break;    						case "SELECT": priv = Select; break;  						case "INSERT": priv = Insert; break;  						case "UPDATE": priv = Update; break;  						case "DELETE": priv = Delete; break;  						case "DROP": priv = Drop; break;  						case "REFERENCES": priv = References; break;  						case "USAGE": priv = Usage; break;  						case "CREATE": priv = Create; break;  						case "ALTER": priv = Alter; break;  						case "LIST": priv = List; break;  						case "EXECUTE": priv = Execute; break;  					}
Missing Default,Deveel.Data.Sql.Expressions,SqlExpression,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Expressions\SqlExpression.cs,GetPrecedence,The following switch statement is missing a default case: switch (ExpressionType) {  				// Group  				case SqlExpressionType.Group:    					return 151;    				// References  				case SqlExpressionType.Reference:  				case SqlExpressionType.Function:  				case SqlExpressionType.VariableAssign:  				case SqlExpressionType.ReferenceAssign:  				case SqlExpressionType.Variable:  				case SqlExpressionType.Parameter:    					return 150;    				// Unary  				case SqlExpressionType.UnaryPlus:  				case SqlExpressionType.Negate:  				case SqlExpressionType.Not:    					return 140;    				// Cast  				case SqlExpressionType.Cast:    					return 139;    				// Multiplicative  				case SqlExpressionType.Multiply:  				case SqlExpressionType.Divide:  				case SqlExpressionType.Modulo:    					return 130;    				// Additive  				case SqlExpressionType.Add:  				case SqlExpressionType.Subtract:    					return 120;    				// Relational  				case SqlExpressionType.GreaterThan:  				case SqlExpressionType.GreaterThanOrEqual:  				case SqlExpressionType.LessThan:  				case SqlExpressionType.LessThanOrEqual:  				case SqlExpressionType.Is:  				case SqlExpressionType.IsNot:  				case SqlExpressionType.Like:  				case SqlExpressionType.NotLike:    					return 110;    				// Equality  				case SqlExpressionType.Equal:  				case SqlExpressionType.NotEqual:    					return 100;    				// Logical  				case SqlExpressionType.And:    					return 90;  				case SqlExpressionType.Or:    					return 89;  				case SqlExpressionType.XOr:    					return 88;    				// Conditional  				case SqlExpressionType.Condition:    					return 80;    				// Constant  				case SqlExpressionType.Constant:    					return 70;  			}
Missing Default,Deveel.Data.Sql.Types,PrimitiveTypes,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\PrimitiveTypes.cs,IsPrimitive,The following switch statement is missing a default case: switch (name.ToUpperInvariant()) {  				case "NULL":  					return true;    				case "BOOLEAN":  				case "BOOL":  				case "BIT":  					return true;    				case "NUMERIC":  				case "INT":  				case "INTEGER":  				case "BIGINT":  				case "TINYINT":  				case "SMALLINT":  				case "REAL":  				case "FLOAT":  				case "DOUBLE":  				case "DECIMAL":  				case "VARNUMERIC":  				case "NUMERIC VARYING":  					return true;    				case "STRING":  				case "VARCHAR":  				case "CHAR":  				case "CHARACTER VARYING":  				case "CLOB":  				case "LONGVARCHAR":  				case "LONG VARCHAR":  				case "LONG CHARACTER VARYING":  				case "TEXT":  					return true;    				case "BINARY":  				case "VARBINARY":  				case "LONG VARBINARY":  				case "LONGVARBINARY":  				case "LONG BINARY VARYING":  				case "BLOB":  					return true;    				case "DATE":  				case "DATETIME":  				case "TIME":  				case "TIMESTAMP":  					return true;    				case "YEAR TO MONTH":  				case "DAY TO SECOND":  					return true;  			}
Missing Default,Deveel.Data.Sql.Types,SqlCharacterType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlCharacterType.cs,NormalizeValue,The following switch statement is missing a default case: switch (TypeCode) {  					case SqlTypeCode.VarChar:  					case SqlTypeCode.String: {  						if (HasMaxSize && s.Length > MaxSize)  							throw new InvalidCastException(); // TODO: maybe a substring here?    						return s;  					}  					case SqlTypeCode.Char: {  						if (s.Length > MaxSize) {  							s = s.Substring(0' MaxSize);  						} else if (s.Length < MaxSize) {  							s = s.PadRight(MaxSize);  						}    						return s;  					}  				}
Missing Default,Deveel.Data.Sql.Types,SqlDateTimeType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlDateTimeType.cs,NormalizeValue,The following switch statement is missing a default case: switch (TypeCode) {  				case SqlTypeCode.Time:  					return date.TimePart;  				case SqlTypeCode.Date:  					return date.DatePart;  			}
Missing Default,Deveel.Data.Sql.Types,SqlNumericType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlNumericType.cs,AssertScale,The following switch statement is missing a default case: switch (typeCode) {  				case SqlTypeCode.TinyInt:  				case SqlTypeCode.SmallInt:  				case SqlTypeCode.Integer:  				case SqlTypeCode.BigInt:  					if (scale > 0)  						throw new ArgumentException($"Integer type {typeCode} must have a scale of 0");    					break;  				case SqlTypeCode.Numeric:  					if (scale <= 0) {  						throw new ArgumentException("The NUMERIC type requires an explicit scale");  					}    					break;  			}
Missing Default,Deveel.Data.Sql.Types,SqlNumericType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlNumericType.cs,IsInstanceOf,The following switch statement is missing a default case: switch (TypeCode) {  					case SqlTypeCode.Integer:  					case SqlTypeCode.TinyInt:  					case SqlTypeCode.SmallInt:  					case SqlTypeCode.BigInt:  						return number.Scale == 0 && number.Precision <= Precision;  					case SqlTypeCode.Double:  					case SqlTypeCode.Float:  						return number.Precision <= Precision;  					case SqlTypeCode.Numeric:  						return number.Precision <= Precision &&  						       (Scale < 0 || number.Scale <= Scale);  					case SqlTypeCode.VarNumeric:  						return number.Precision > 0 && number.Scale >= 0;  				}
Missing Default,Deveel.Data.Sql.Types,SqlNumericType,D:\research\architectureSmells\repos\deveel_deveeldb\src\DeveelDB\Data\Sql\Types\SqlNumericType.cs,NormalizeValue,The following switch statement is missing a default case: switch (TypeCode) {  				case SqlTypeCode.TinyInt:  				case SqlTypeCode.SmallInt:  				case SqlTypeCode.Integer:  				case SqlTypeCode.BigInt:  					return ToInteger(number);  				case SqlTypeCode.Real:  				case SqlTypeCode.Float:  				case SqlTypeCode.Double:  					return ToFloatingPoint(number);  				case SqlTypeCode.Numeric:  					return ToDecimal(number);  			}
