Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Poker,Card,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\Card.cs,ToString,Cyclomatic complexity of the method is 25
Complex Method,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsStraightFlush,Cyclomatic complexity of the method is 12
Complex Method,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsFullHouse,Cyclomatic complexity of the method is 8
Complex Method,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsStraight,Cyclomatic complexity of the method is 12
Complex Method,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsThreeOfAKind,Cyclomatic complexity of the method is 8
Long Statement,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsHighCard,The length of the statement  "	if (this.IsStraightFlush (hand) || this.IsFourOfAKind (hand) || this.IsFullHouse (hand) || this.IsFlush (hand) || this.IsStraight (hand) || this.IsThreeOfAKind (hand) || this.IsTwoPair (hand) || IsOnePair (hand)) { " is 214.
Complex Conditional,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsHighCard,The conditional expression  "this.IsStraightFlush (hand) || this.IsFourOfAKind (hand) || this.IsFullHouse (hand) || this.IsFlush (hand) || this.IsStraight (hand) || this.IsThreeOfAKind (hand) || this.IsTwoPair (hand) || IsOnePair (hand)"  is complex.
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsValidHand,The following statement contains a magic number: if (hand.Cards.Count != 5) {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsStraightFlush,The following statement contains a magic number: if (minCard > 10) {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsStraightFlush,The following statement contains a magic number: for (int i = minCard; i < minCard + 5; i++) {  	bool wasFound = false;  	for (int j = 0; j < hand.Cards.Count; j++) {  		if (i == (int)hand.Cards [j].Face) {  			wasFound = true;  			break;  		}  	}  	if (!wasFound) {  		hasFiveSequentCards = false;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsFourOfAKind,The following statement contains a magic number: for (int i = 0; i < hand.Cards.Count; i++) {  	for (int j = i + 1; j < hand.Cards.Count; j++) {  		if (hand.Cards [i].Face == hand.Cards [j].Face) {  			sameFaceCounter++;  		}  	}  	if (sameFaceCounter == 4) {  		return true;  	}  	else {  		sameFaceCounter = 1;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsFourOfAKind,The following statement contains a magic number: if (sameFaceCounter == 4) {  	return true;  }  else {  	sameFaceCounter = 1;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsFullHouse,The following statement contains a magic number: for (int i = 0; i < hand.Cards.Count; i++) {  	int sameCardCounter = 1;  	for (int j = 0; j < hand.Cards.Count; j++) {  		if (i == j) {  			continue;  		}  		if (hand.Cards [i].Face == hand.Cards [j].Face) {  			sameCardCounter++;  		}  	}  	if (sameCardCounter == 2) {  		pairedHandsCount++;  	}  	if (sameCardCounter == 3) {  		threeHandsCount++;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsFullHouse,The following statement contains a magic number: for (int i = 0; i < hand.Cards.Count; i++) {  	int sameCardCounter = 1;  	for (int j = 0; j < hand.Cards.Count; j++) {  		if (i == j) {  			continue;  		}  		if (hand.Cards [i].Face == hand.Cards [j].Face) {  			sameCardCounter++;  		}  	}  	if (sameCardCounter == 2) {  		pairedHandsCount++;  	}  	if (sameCardCounter == 3) {  		threeHandsCount++;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsFullHouse,The following statement contains a magic number: if (sameCardCounter == 2) {  	pairedHandsCount++;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsFullHouse,The following statement contains a magic number: if (sameCardCounter == 3) {  	threeHandsCount++;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsFullHouse,The following statement contains a magic number: if (pairedHandsCount == 2 && threeHandsCount == 3) {  	return true;  }  else {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsFullHouse,The following statement contains a magic number: if (pairedHandsCount == 2 && threeHandsCount == 3) {  	return true;  }  else {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsStraight,The following statement contains a magic number: if (minCard > 10) {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsStraight,The following statement contains a magic number: for (int i = minCard; i < minCard + 5; i++) {  	bool wasFound = false;  	for (int j = 0; j < hand.Cards.Count; j++) {  		if (i == (int)hand.Cards [j].Face) {  			wasFound = true;  			break;  		}  	}  	if (!wasFound) {  		hasFiveSequentCards = false;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsThreeOfAKind,The following statement contains a magic number: for (int i = 0; i < hand.Cards.Count; i++) {  	int sameCardCounter = 1;  	for (int j = 0; j < hand.Cards.Count; j++) {  		if (i == j) {  			continue;  		}  		if (hand.Cards [i].Face == hand.Cards [j].Face) {  			sameCardCounter++;  		}  	}  	if (sameCardCounter == 2) {  		pairedHandsCount++;  	}  	if (sameCardCounter == 3) {  		threeHandsCount++;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsThreeOfAKind,The following statement contains a magic number: for (int i = 0; i < hand.Cards.Count; i++) {  	int sameCardCounter = 1;  	for (int j = 0; j < hand.Cards.Count; j++) {  		if (i == j) {  			continue;  		}  		if (hand.Cards [i].Face == hand.Cards [j].Face) {  			sameCardCounter++;  		}  	}  	if (sameCardCounter == 2) {  		pairedHandsCount++;  	}  	if (sameCardCounter == 3) {  		threeHandsCount++;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsThreeOfAKind,The following statement contains a magic number: if (sameCardCounter == 2) {  	pairedHandsCount++;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsThreeOfAKind,The following statement contains a magic number: if (sameCardCounter == 3) {  	threeHandsCount++;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsThreeOfAKind,The following statement contains a magic number: if (pairedHandsCount == 0 && threeHandsCount == 3) {  	return true;  }  else {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsTwoPair,The following statement contains a magic number: for (int i = 0; i < hand.Cards.Count; i++) {  	int sameCardCounter = 1;  	for (int j = 0; j < hand.Cards.Count; j++) {  		if (i == j) {  			continue;  		}  		if (hand.Cards [i].Face == hand.Cards [j].Face) {  			sameCardCounter++;  		}  	}  	if (sameCardCounter == 2) {  		pairedHandsCount++;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsTwoPair,The following statement contains a magic number: if (sameCardCounter == 2) {  	pairedHandsCount++;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsTwoPair,The following statement contains a magic number: if (pairedHandsCount == 4) {  	return true;  }  else {  	return false;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsOnePair,The following statement contains a magic number: for (int i = 0; i < hand.Cards.Count; i++) {  	int sameCardCounter = 1;  	for (int j = 0; j < hand.Cards.Count; j++) {  		if (i == j) {  			continue;  		}  		if (hand.Cards [i].Face == hand.Cards [j].Face) {  			sameCardCounter++;  		}  	}  	if (sameCardCounter == 2) {  		pairedHandsCount++;  	}  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsOnePair,The following statement contains a magic number: if (sameCardCounter == 2) {  	pairedHandsCount++;  }  
Magic Number,Poker,PokerHandsChecker,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\PokerHandsChecker.cs,IsOnePair,The following statement contains a magic number: if (pairedHandsCount == 2) {  	return true;  }  else {  	return false;  }  
Missing Default,Poker,Card,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\12. Test-driven Development\Homework\Poker\Card.cs,ToString,The following switch statement is missing a default case: switch (suit) {  case "1":  	suit = "♣";  	break;  case "2":  	suit = "♦";  	break;  case "3":  	suit = "♥";  	break;  case "4":  	suit = "♠";  	break;  }  
