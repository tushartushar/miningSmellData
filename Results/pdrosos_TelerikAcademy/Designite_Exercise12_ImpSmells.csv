Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Main,Cyclomatic complexity of the method is 12
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Sum,The following statement contains a magic number: for (int i = 0; i < pol1.Length - 1; i++) {  	coef = pol1 [i] + pol2 [i] + carage;  	carage = 0;  	if (coef < 9) {  		result [i] = coef;  	}  	else {  		result [i] = coef % 10;  		coef -= result [i];  		carage = coef / 10;  	}  }  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Sum,The following statement contains a magic number: for (int i = 0; i < pol1.Length - 1; i++) {  	coef = pol1 [i] + pol2 [i] + carage;  	carage = 0;  	if (coef < 9) {  		result [i] = coef;  	}  	else {  		result [i] = coef % 10;  		coef -= result [i];  		carage = coef / 10;  	}  }  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Sum,The following statement contains a magic number: for (int i = 0; i < pol1.Length - 1; i++) {  	coef = pol1 [i] + pol2 [i] + carage;  	carage = 0;  	if (coef < 9) {  		result [i] = coef;  	}  	else {  		result [i] = coef % 10;  		coef -= result [i];  		carage = coef / 10;  	}  }  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Sum,The following statement contains a magic number: if (coef < 9) {  	result [i] = coef;  }  else {  	result [i] = coef % 10;  	coef -= result [i];  	carage = coef / 10;  }  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Sum,The following statement contains a magic number: if (coef < 9) {  	result [i] = coef;  }  else {  	result [i] = coef % 10;  	coef -= result [i];  	carage = coef / 10;  }  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Sum,The following statement contains a magic number: if (coef < 9) {  	result [i] = coef;  }  else {  	result [i] = coef % 10;  	coef -= result [i];  	carage = coef / 10;  }  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Sum,The following statement contains a magic number: result [i] = coef % 10;  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Sum,The following statement contains a magic number: carage = coef / 10;  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Multiply,The following statement contains a magic number: for (int i = 0; i < pol1.Length - 1; i++) {  	coef = pol1 [i] * pol2 [i] + carage;  	carage = 0;  	if (coef < 9) {  		result [i] = coef;  	}  	else {  		result [i] = coef % 10;  		coef -= result [i];  		carage = coef / 10;  	}  }  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Multiply,The following statement contains a magic number: for (int i = 0; i < pol1.Length - 1; i++) {  	coef = pol1 [i] * pol2 [i] + carage;  	carage = 0;  	if (coef < 9) {  		result [i] = coef;  	}  	else {  		result [i] = coef % 10;  		coef -= result [i];  		carage = coef / 10;  	}  }  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Multiply,The following statement contains a magic number: for (int i = 0; i < pol1.Length - 1; i++) {  	coef = pol1 [i] * pol2 [i] + carage;  	carage = 0;  	if (coef < 9) {  		result [i] = coef;  	}  	else {  		result [i] = coef % 10;  		coef -= result [i];  		carage = coef / 10;  	}  }  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Multiply,The following statement contains a magic number: if (coef < 9) {  	result [i] = coef;  }  else {  	result [i] = coef % 10;  	coef -= result [i];  	carage = coef / 10;  }  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Multiply,The following statement contains a magic number: if (coef < 9) {  	result [i] = coef;  }  else {  	result [i] = coef % 10;  	coef -= result [i];  	carage = coef / 10;  }  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Multiply,The following statement contains a magic number: if (coef < 9) {  	result [i] = coef;  }  else {  	result [i] = coef % 10;  	coef -= result [i];  	carage = coef / 10;  }  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Multiply,The following statement contains a magic number: result [i] = coef % 10;  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Multiply,The following statement contains a magic number: carage = coef / 10;  
Magic Number,Exercise12,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise12\Exercise12\Program.cs,Subtrack,The following statement contains a magic number: for (int i = pol1.Length - 2; i < 0; i++) {  	coef = pol1 [i] - pol2 [i];  	if (coef > 0) {  		result [i] = coef;  	}  	else {  		//     temp = result[i] + result[i + 1] * 10;  		//     coef = temp - pol2[i];  		//     result[i] = coef % 10;  		//     coef -= result[i];  		//     carage = coef / 10;  	}  }  
