Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AcademyEcosystem,Engine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Engine.cs,HandleEncounters,Cyclomatic complexity of the method is 9
Complex Method,AcademyEcosystem,ExtendedEngine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\ExtendedEngine.cs,ExecuteBirthCommand,Cyclomatic complexity of the method is 13
Magic Number,AcademyEcosystem,Engine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Engine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "deer": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Deer (name' position));  	break;  }  case "tree": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Tree (position));  	break;  }  case "bush": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Bush (position));  	break;  }  }  
Magic Number,AcademyEcosystem,Engine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Engine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "deer": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Deer (name' position));  	break;  }  case "tree": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Tree (position));  	break;  }  case "bush": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Bush (position));  	break;  }  }  
Magic Number,AcademyEcosystem,Engine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Engine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "deer": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Deer (name' position));  	break;  }  case "tree": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Tree (position));  	break;  }  case "bush": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Bush (position));  	break;  }  }  
Magic Number,AcademyEcosystem,Engine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Engine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "deer": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Deer (name' position));  	break;  }  case "tree": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Tree (position));  	break;  }  case "bush": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Bush (position));  	break;  }  }  
Magic Number,AcademyEcosystem,Engine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Engine.cs,ExecuteAnimalCommand,The following statement contains a magic number: switch (commandWords [0]) {  case "go": {  	string name = commandWords [1];  	Point destination = Point.Parse (commandWords [2]);  	destination = HandleGo (name' destination);  	break;  }  case "sleep": {  	string name = commandWords [1];  	int sleepTime = int.Parse (commandWords [2]);  	HandleSleep (name' sleepTime);  	break;  }  }  
Magic Number,AcademyEcosystem,Engine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Engine.cs,ExecuteAnimalCommand,The following statement contains a magic number: switch (commandWords [0]) {  case "go": {  	string name = commandWords [1];  	Point destination = Point.Parse (commandWords [2]);  	destination = HandleGo (name' destination);  	break;  }  case "sleep": {  	string name = commandWords [1];  	int sleepTime = int.Parse (commandWords [2]);  	HandleSleep (name' sleepTime);  	break;  }  }  
Magic Number,AcademyEcosystem,ExtendedEngine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\ExtendedEngine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "wolf": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Wolf (name' position));  	break;  }  case "lion": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Lion (name' position));  	break;  }  case "boar": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Boar (name' position));  	break;  }  case "zombie": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Zombie (name' position));  	break;  }  case "grass": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Grass (position));  	break;  }  default:  	base.ExecuteBirthCommand (commandWords);  	break;  }  
Magic Number,AcademyEcosystem,ExtendedEngine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\ExtendedEngine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "wolf": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Wolf (name' position));  	break;  }  case "lion": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Lion (name' position));  	break;  }  case "boar": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Boar (name' position));  	break;  }  case "zombie": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Zombie (name' position));  	break;  }  case "grass": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Grass (position));  	break;  }  default:  	base.ExecuteBirthCommand (commandWords);  	break;  }  
Magic Number,AcademyEcosystem,ExtendedEngine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\ExtendedEngine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "wolf": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Wolf (name' position));  	break;  }  case "lion": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Lion (name' position));  	break;  }  case "boar": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Boar (name' position));  	break;  }  case "zombie": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Zombie (name' position));  	break;  }  case "grass": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Grass (position));  	break;  }  default:  	base.ExecuteBirthCommand (commandWords);  	break;  }  
Magic Number,AcademyEcosystem,ExtendedEngine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\ExtendedEngine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "wolf": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Wolf (name' position));  	break;  }  case "lion": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Lion (name' position));  	break;  }  case "boar": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Boar (name' position));  	break;  }  case "zombie": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Zombie (name' position));  	break;  }  case "grass": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Grass (position));  	break;  }  default:  	base.ExecuteBirthCommand (commandWords);  	break;  }  
Magic Number,AcademyEcosystem,ExtendedEngine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\ExtendedEngine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "wolf": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Wolf (name' position));  	break;  }  case "lion": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Lion (name' position));  	break;  }  case "boar": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Boar (name' position));  	break;  }  case "zombie": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Zombie (name' position));  	break;  }  case "grass": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Grass (position));  	break;  }  default:  	base.ExecuteBirthCommand (commandWords);  	break;  }  
Magic Number,AcademyEcosystem,ExtendedEngine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\ExtendedEngine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "wolf": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Wolf (name' position));  	break;  }  case "lion": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Lion (name' position));  	break;  }  case "boar": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Boar (name' position));  	break;  }  case "zombie": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Zombie (name' position));  	break;  }  case "grass": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Grass (position));  	break;  }  default:  	base.ExecuteBirthCommand (commandWords);  	break;  }  
Magic Number,AcademyEcosystem,ExtendedEngine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\ExtendedEngine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "wolf": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Wolf (name' position));  	break;  }  case "lion": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Lion (name' position));  	break;  }  case "boar": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Boar (name' position));  	break;  }  case "zombie": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Zombie (name' position));  	break;  }  case "grass": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Grass (position));  	break;  }  default:  	base.ExecuteBirthCommand (commandWords);  	break;  }  
Magic Number,AcademyEcosystem,ExtendedEngine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\ExtendedEngine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "wolf": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Wolf (name' position));  	break;  }  case "lion": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Lion (name' position));  	break;  }  case "boar": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Boar (name' position));  	break;  }  case "zombie": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Zombie (name' position));  	break;  }  case "grass": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Grass (position));  	break;  }  default:  	base.ExecuteBirthCommand (commandWords);  	break;  }  
Magic Number,AcademyEcosystem,ExtendedEngine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\ExtendedEngine.cs,ExecuteBirthCommand,The following statement contains a magic number: switch (commandWords [1]) {  case "wolf": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Wolf (name' position));  	break;  }  case "lion": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Lion (name' position));  	break;  }  case "boar": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Boar (name' position));  	break;  }  case "zombie": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Zombie (name' position));  	break;  }  case "grass": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Grass (position));  	break;  }  default:  	base.ExecuteBirthCommand (commandWords);  	break;  }  
Magic Number,AcademyEcosystem,Lion,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Lion.cs,TryEatAnimal,The following statement contains a magic number: if (animal != null) {  	if (animal.Size <= this.Size * 2) {  		this.Size++;  		return animal.GetMeatFromKillQuantity ();  	}  }  
Magic Number,AcademyEcosystem,Lion,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Lion.cs,TryEatAnimal,The following statement contains a magic number: if (animal.Size <= this.Size * 2) {  	this.Size++;  	return animal.GetMeatFromKillQuantity ();  }  
Magic Number,AcademyEcosystem,Point,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Point.cs,GetHashCode,The following statement contains a magic number: return this.X * 7 + this.Y;  
Magic Number,AcademyEcosystem,Zombie,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Zombie.cs,GetMeatFromKillQuantity,The following statement contains a magic number: return 10;  
Missing Default,AcademyEcosystem,Engine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Engine.cs,ExecuteBirthCommand,The following switch statement is missing a default case: switch (commandWords [1]) {  case "deer": {  	string name = commandWords [2];  	Point position = Point.Parse (commandWords [3]);  	this.AddOrganism (new Deer (name' position));  	break;  }  case "tree": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Tree (position));  	break;  }  case "bush": {  	Point position = Point.Parse (commandWords [2]);  	this.AddOrganism (new Bush (position));  	break;  }  }  
Missing Default,AcademyEcosystem,Engine,C:\repos\pdrosos_TelerikAcademy\OOP\08. Exam preparation\Evaluated Homeworks\01\HW_Podgotovka-za-izpit-po-OOP\AcademyEcosystem\Engine.cs,ExecuteAnimalCommand,The following switch statement is missing a default case: switch (commandWords [0]) {  case "go": {  	string name = commandWords [1];  	Point destination = Point.Parse (commandWords [2]);  	destination = HandleGo (name' destination);  	break;  }  case "sleep": {  	string name = commandWords [1];  	int sleepTime = int.Parse (commandWords [2]);  	HandleSleep (name' sleepTime);  	break;  }  }  
