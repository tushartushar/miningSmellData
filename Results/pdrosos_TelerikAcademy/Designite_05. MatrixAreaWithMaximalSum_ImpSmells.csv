Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MatrixAreaWithMaximalSum,MatrixAreaWithMaximalSum,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\07. Text Files\Homework\TextFiles\MatrixAreaWithMaximalSum\MatrixAreaWithMaximalSum.cs,Main,Cyclomatic complexity of the method is 8
Long Parameter List,MatrixAreaWithMaximalSum,MatrixAreaWithMaximalSum,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\07. Text Files\Homework\TextFiles\MatrixAreaWithMaximalSum\MatrixAreaWithMaximalSum.cs,SubMatrixSum,The method has 5 parameters.
Magic Number,MatrixAreaWithMaximalSum,MatrixAreaWithMaximalSum,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\07. Text Files\Homework\TextFiles\MatrixAreaWithMaximalSum\MatrixAreaWithMaximalSum.cs,Main,The following statement contains a magic number: if (reader != null && writer != null) {  	using (reader) {  		// read first line  		int matrixLength = Convert.ToInt32 (reader.ReadLine ());  		int['] matrix = new int[matrixLength' matrixLength];  		// read next matrixLength lines  		List<string> numbers = new List<string> ();  		for (int i = 0; i < matrixLength; i++) {  			numbers.AddRange (reader.ReadLine ().Split (' '));  			for (int j = 0; j < matrixLength; j++) {  				matrix [i' j] = Convert.ToInt32 (numbers [j]);  			}  			numbers.Clear ();  		}  		int subMatrixMaxSum = SubMatrixElementsMaxSum (matrix' 2' 2);  		using (writer) {  			writer.Write (subMatrixMaxSum);  		}  	}  	Console.WriteLine ("Done. Please' check the text file.");  }  else {  	Console.WriteLine ("Cannot open files.");  }  
Magic Number,MatrixAreaWithMaximalSum,MatrixAreaWithMaximalSum,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\07. Text Files\Homework\TextFiles\MatrixAreaWithMaximalSum\MatrixAreaWithMaximalSum.cs,Main,The following statement contains a magic number: if (reader != null && writer != null) {  	using (reader) {  		// read first line  		int matrixLength = Convert.ToInt32 (reader.ReadLine ());  		int['] matrix = new int[matrixLength' matrixLength];  		// read next matrixLength lines  		List<string> numbers = new List<string> ();  		for (int i = 0; i < matrixLength; i++) {  			numbers.AddRange (reader.ReadLine ().Split (' '));  			for (int j = 0; j < matrixLength; j++) {  				matrix [i' j] = Convert.ToInt32 (numbers [j]);  			}  			numbers.Clear ();  		}  		int subMatrixMaxSum = SubMatrixElementsMaxSum (matrix' 2' 2);  		using (writer) {  			writer.Write (subMatrixMaxSum);  		}  	}  	Console.WriteLine ("Done. Please' check the text file.");  }  else {  	Console.WriteLine ("Cannot open files.");  }  
Magic Number,MatrixAreaWithMaximalSum,MatrixAreaWithMaximalSum,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\07. Text Files\Homework\TextFiles\MatrixAreaWithMaximalSum\MatrixAreaWithMaximalSum.cs,Main,The following statement contains a magic number: using (reader) {  	// read first line  	int matrixLength = Convert.ToInt32 (reader.ReadLine ());  	int['] matrix = new int[matrixLength' matrixLength];  	// read next matrixLength lines  	List<string> numbers = new List<string> ();  	for (int i = 0; i < matrixLength; i++) {  		numbers.AddRange (reader.ReadLine ().Split (' '));  		for (int j = 0; j < matrixLength; j++) {  			matrix [i' j] = Convert.ToInt32 (numbers [j]);  		}  		numbers.Clear ();  	}  	int subMatrixMaxSum = SubMatrixElementsMaxSum (matrix' 2' 2);  	using (writer) {  		writer.Write (subMatrixMaxSum);  	}  }  
Magic Number,MatrixAreaWithMaximalSum,MatrixAreaWithMaximalSum,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\07. Text Files\Homework\TextFiles\MatrixAreaWithMaximalSum\MatrixAreaWithMaximalSum.cs,Main,The following statement contains a magic number: using (reader) {  	// read first line  	int matrixLength = Convert.ToInt32 (reader.ReadLine ());  	int['] matrix = new int[matrixLength' matrixLength];  	// read next matrixLength lines  	List<string> numbers = new List<string> ();  	for (int i = 0; i < matrixLength; i++) {  		numbers.AddRange (reader.ReadLine ().Split (' '));  		for (int j = 0; j < matrixLength; j++) {  			matrix [i' j] = Convert.ToInt32 (numbers [j]);  		}  		numbers.Clear ();  	}  	int subMatrixMaxSum = SubMatrixElementsMaxSum (matrix' 2' 2);  	using (writer) {  		writer.Write (subMatrixMaxSum);  	}  }  
