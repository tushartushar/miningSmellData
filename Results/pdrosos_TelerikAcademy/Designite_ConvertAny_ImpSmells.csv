Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,Cyclomatic complexity of the method is 26
Complex Method,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,Cyclomatic complexity of the method is 21
Long Statement,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,Main,The length of the statement  "	Console.WriteLine ("Number is: {0}' InputBase is: {1}' Output base is: {2} and Output number is: "' number' inputBase' outputBase); " is 131.
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: for (int i = 0; i < number.Length; i++) {  	if (char.IsLetter (number [i])) {  		switch (number [i]) {  		case 'A':  			num += (10 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'B':  			num += (11 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'C':  			num += (12 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'D':  			num += (13 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'E':  			num += (14 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'F':  			num += (15 * ((int)Math.Pow (input' j)));  			j--;  			break;  		}  	}  	else {  		num += ((number [i] - '0') * ((int)Math.Pow (input' j)));  		j--;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: for (int i = 0; i < number.Length; i++) {  	if (char.IsLetter (number [i])) {  		switch (number [i]) {  		case 'A':  			num += (10 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'B':  			num += (11 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'C':  			num += (12 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'D':  			num += (13 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'E':  			num += (14 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'F':  			num += (15 * ((int)Math.Pow (input' j)));  			j--;  			break;  		}  	}  	else {  		num += ((number [i] - '0') * ((int)Math.Pow (input' j)));  		j--;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: for (int i = 0; i < number.Length; i++) {  	if (char.IsLetter (number [i])) {  		switch (number [i]) {  		case 'A':  			num += (10 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'B':  			num += (11 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'C':  			num += (12 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'D':  			num += (13 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'E':  			num += (14 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'F':  			num += (15 * ((int)Math.Pow (input' j)));  			j--;  			break;  		}  	}  	else {  		num += ((number [i] - '0') * ((int)Math.Pow (input' j)));  		j--;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: for (int i = 0; i < number.Length; i++) {  	if (char.IsLetter (number [i])) {  		switch (number [i]) {  		case 'A':  			num += (10 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'B':  			num += (11 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'C':  			num += (12 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'D':  			num += (13 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'E':  			num += (14 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'F':  			num += (15 * ((int)Math.Pow (input' j)));  			j--;  			break;  		}  	}  	else {  		num += ((number [i] - '0') * ((int)Math.Pow (input' j)));  		j--;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: for (int i = 0; i < number.Length; i++) {  	if (char.IsLetter (number [i])) {  		switch (number [i]) {  		case 'A':  			num += (10 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'B':  			num += (11 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'C':  			num += (12 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'D':  			num += (13 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'E':  			num += (14 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'F':  			num += (15 * ((int)Math.Pow (input' j)));  			j--;  			break;  		}  	}  	else {  		num += ((number [i] - '0') * ((int)Math.Pow (input' j)));  		j--;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: for (int i = 0; i < number.Length; i++) {  	if (char.IsLetter (number [i])) {  		switch (number [i]) {  		case 'A':  			num += (10 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'B':  			num += (11 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'C':  			num += (12 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'D':  			num += (13 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'E':  			num += (14 * ((int)Math.Pow (input' j)));  			j--;  			break;  		case 'F':  			num += (15 * ((int)Math.Pow (input' j)));  			j--;  			break;  		}  	}  	else {  		num += ((number [i] - '0') * ((int)Math.Pow (input' j)));  		j--;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: if (char.IsLetter (number [i])) {  	switch (number [i]) {  	case 'A':  		num += (10 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'B':  		num += (11 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'C':  		num += (12 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'D':  		num += (13 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'E':  		num += (14 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'F':  		num += (15 * ((int)Math.Pow (input' j)));  		j--;  		break;  	}  }  else {  	num += ((number [i] - '0') * ((int)Math.Pow (input' j)));  	j--;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: if (char.IsLetter (number [i])) {  	switch (number [i]) {  	case 'A':  		num += (10 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'B':  		num += (11 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'C':  		num += (12 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'D':  		num += (13 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'E':  		num += (14 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'F':  		num += (15 * ((int)Math.Pow (input' j)));  		j--;  		break;  	}  }  else {  	num += ((number [i] - '0') * ((int)Math.Pow (input' j)));  	j--;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: if (char.IsLetter (number [i])) {  	switch (number [i]) {  	case 'A':  		num += (10 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'B':  		num += (11 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'C':  		num += (12 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'D':  		num += (13 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'E':  		num += (14 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'F':  		num += (15 * ((int)Math.Pow (input' j)));  		j--;  		break;  	}  }  else {  	num += ((number [i] - '0') * ((int)Math.Pow (input' j)));  	j--;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: if (char.IsLetter (number [i])) {  	switch (number [i]) {  	case 'A':  		num += (10 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'B':  		num += (11 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'C':  		num += (12 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'D':  		num += (13 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'E':  		num += (14 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'F':  		num += (15 * ((int)Math.Pow (input' j)));  		j--;  		break;  	}  }  else {  	num += ((number [i] - '0') * ((int)Math.Pow (input' j)));  	j--;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: if (char.IsLetter (number [i])) {  	switch (number [i]) {  	case 'A':  		num += (10 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'B':  		num += (11 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'C':  		num += (12 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'D':  		num += (13 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'E':  		num += (14 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'F':  		num += (15 * ((int)Math.Pow (input' j)));  		j--;  		break;  	}  }  else {  	num += ((number [i] - '0') * ((int)Math.Pow (input' j)));  	j--;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: if (char.IsLetter (number [i])) {  	switch (number [i]) {  	case 'A':  		num += (10 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'B':  		num += (11 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'C':  		num += (12 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'D':  		num += (13 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'E':  		num += (14 * ((int)Math.Pow (input' j)));  		j--;  		break;  	case 'F':  		num += (15 * ((int)Math.Pow (input' j)));  		j--;  		break;  	}  }  else {  	num += ((number [i] - '0') * ((int)Math.Pow (input' j)));  	j--;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: switch (number [i]) {  case 'A':  	num += (10 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'B':  	num += (11 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'C':  	num += (12 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'D':  	num += (13 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'E':  	num += (14 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'F':  	num += (15 * ((int)Math.Pow (input' j)));  	j--;  	break;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: switch (number [i]) {  case 'A':  	num += (10 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'B':  	num += (11 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'C':  	num += (12 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'D':  	num += (13 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'E':  	num += (14 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'F':  	num += (15 * ((int)Math.Pow (input' j)));  	j--;  	break;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: switch (number [i]) {  case 'A':  	num += (10 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'B':  	num += (11 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'C':  	num += (12 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'D':  	num += (13 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'E':  	num += (14 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'F':  	num += (15 * ((int)Math.Pow (input' j)));  	j--;  	break;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: switch (number [i]) {  case 'A':  	num += (10 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'B':  	num += (11 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'C':  	num += (12 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'D':  	num += (13 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'E':  	num += (14 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'F':  	num += (15 * ((int)Math.Pow (input' j)));  	j--;  	break;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: switch (number [i]) {  case 'A':  	num += (10 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'B':  	num += (11 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'C':  	num += (12 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'D':  	num += (13 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'E':  	num += (14 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'F':  	num += (15 * ((int)Math.Pow (input' j)));  	j--;  	break;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: switch (number [i]) {  case 'A':  	num += (10 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'B':  	num += (11 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'C':  	num += (12 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'D':  	num += (13 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'E':  	num += (14 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'F':  	num += (15 * ((int)Math.Pow (input' j)));  	j--;  	break;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: num += (10 * ((int)Math.Pow (input' j)));  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: num += (11 * ((int)Math.Pow (input' j)));  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: num += (12 * ((int)Math.Pow (input' j)));  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: num += (13 * ((int)Math.Pow (input' j)));  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: num += (14 * ((int)Math.Pow (input' j)));  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following statement contains a magic number: num += (15 * ((int)Math.Pow (input' j)));  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: while (num > 0) {  	newNumber = num % output;  	num = num / output;  	if (newNumber >= 10 && (output == 16)) {  		switch (newNumber) {  		case 10:  			bin += 'A';  			break;  		case 11:  			bin += 'B';  			break;  		case 12:  			bin += 'C';  			break;  		case 13:  			bin += 'D';  			break;  		case 14:  			bin += 'E';  			break;  		case 15:  			bin += 'F';  			break;  		}  	}  	else {  		bin += newNumber;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: while (num > 0) {  	newNumber = num % output;  	num = num / output;  	if (newNumber >= 10 && (output == 16)) {  		switch (newNumber) {  		case 10:  			bin += 'A';  			break;  		case 11:  			bin += 'B';  			break;  		case 12:  			bin += 'C';  			break;  		case 13:  			bin += 'D';  			break;  		case 14:  			bin += 'E';  			break;  		case 15:  			bin += 'F';  			break;  		}  	}  	else {  		bin += newNumber;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: while (num > 0) {  	newNumber = num % output;  	num = num / output;  	if (newNumber >= 10 && (output == 16)) {  		switch (newNumber) {  		case 10:  			bin += 'A';  			break;  		case 11:  			bin += 'B';  			break;  		case 12:  			bin += 'C';  			break;  		case 13:  			bin += 'D';  			break;  		case 14:  			bin += 'E';  			break;  		case 15:  			bin += 'F';  			break;  		}  	}  	else {  		bin += newNumber;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: while (num > 0) {  	newNumber = num % output;  	num = num / output;  	if (newNumber >= 10 && (output == 16)) {  		switch (newNumber) {  		case 10:  			bin += 'A';  			break;  		case 11:  			bin += 'B';  			break;  		case 12:  			bin += 'C';  			break;  		case 13:  			bin += 'D';  			break;  		case 14:  			bin += 'E';  			break;  		case 15:  			bin += 'F';  			break;  		}  	}  	else {  		bin += newNumber;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: while (num > 0) {  	newNumber = num % output;  	num = num / output;  	if (newNumber >= 10 && (output == 16)) {  		switch (newNumber) {  		case 10:  			bin += 'A';  			break;  		case 11:  			bin += 'B';  			break;  		case 12:  			bin += 'C';  			break;  		case 13:  			bin += 'D';  			break;  		case 14:  			bin += 'E';  			break;  		case 15:  			bin += 'F';  			break;  		}  	}  	else {  		bin += newNumber;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: while (num > 0) {  	newNumber = num % output;  	num = num / output;  	if (newNumber >= 10 && (output == 16)) {  		switch (newNumber) {  		case 10:  			bin += 'A';  			break;  		case 11:  			bin += 'B';  			break;  		case 12:  			bin += 'C';  			break;  		case 13:  			bin += 'D';  			break;  		case 14:  			bin += 'E';  			break;  		case 15:  			bin += 'F';  			break;  		}  	}  	else {  		bin += newNumber;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: while (num > 0) {  	newNumber = num % output;  	num = num / output;  	if (newNumber >= 10 && (output == 16)) {  		switch (newNumber) {  		case 10:  			bin += 'A';  			break;  		case 11:  			bin += 'B';  			break;  		case 12:  			bin += 'C';  			break;  		case 13:  			bin += 'D';  			break;  		case 14:  			bin += 'E';  			break;  		case 15:  			bin += 'F';  			break;  		}  	}  	else {  		bin += newNumber;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: while (num > 0) {  	newNumber = num % output;  	num = num / output;  	if (newNumber >= 10 && (output == 16)) {  		switch (newNumber) {  		case 10:  			bin += 'A';  			break;  		case 11:  			bin += 'B';  			break;  		case 12:  			bin += 'C';  			break;  		case 13:  			bin += 'D';  			break;  		case 14:  			bin += 'E';  			break;  		case 15:  			bin += 'F';  			break;  		}  	}  	else {  		bin += newNumber;  	}  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: if (newNumber >= 10 && (output == 16)) {  	switch (newNumber) {  	case 10:  		bin += 'A';  		break;  	case 11:  		bin += 'B';  		break;  	case 12:  		bin += 'C';  		break;  	case 13:  		bin += 'D';  		break;  	case 14:  		bin += 'E';  		break;  	case 15:  		bin += 'F';  		break;  	}  }  else {  	bin += newNumber;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: if (newNumber >= 10 && (output == 16)) {  	switch (newNumber) {  	case 10:  		bin += 'A';  		break;  	case 11:  		bin += 'B';  		break;  	case 12:  		bin += 'C';  		break;  	case 13:  		bin += 'D';  		break;  	case 14:  		bin += 'E';  		break;  	case 15:  		bin += 'F';  		break;  	}  }  else {  	bin += newNumber;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: if (newNumber >= 10 && (output == 16)) {  	switch (newNumber) {  	case 10:  		bin += 'A';  		break;  	case 11:  		bin += 'B';  		break;  	case 12:  		bin += 'C';  		break;  	case 13:  		bin += 'D';  		break;  	case 14:  		bin += 'E';  		break;  	case 15:  		bin += 'F';  		break;  	}  }  else {  	bin += newNumber;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: if (newNumber >= 10 && (output == 16)) {  	switch (newNumber) {  	case 10:  		bin += 'A';  		break;  	case 11:  		bin += 'B';  		break;  	case 12:  		bin += 'C';  		break;  	case 13:  		bin += 'D';  		break;  	case 14:  		bin += 'E';  		break;  	case 15:  		bin += 'F';  		break;  	}  }  else {  	bin += newNumber;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: if (newNumber >= 10 && (output == 16)) {  	switch (newNumber) {  	case 10:  		bin += 'A';  		break;  	case 11:  		bin += 'B';  		break;  	case 12:  		bin += 'C';  		break;  	case 13:  		bin += 'D';  		break;  	case 14:  		bin += 'E';  		break;  	case 15:  		bin += 'F';  		break;  	}  }  else {  	bin += newNumber;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: if (newNumber >= 10 && (output == 16)) {  	switch (newNumber) {  	case 10:  		bin += 'A';  		break;  	case 11:  		bin += 'B';  		break;  	case 12:  		bin += 'C';  		break;  	case 13:  		bin += 'D';  		break;  	case 14:  		bin += 'E';  		break;  	case 15:  		bin += 'F';  		break;  	}  }  else {  	bin += newNumber;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: if (newNumber >= 10 && (output == 16)) {  	switch (newNumber) {  	case 10:  		bin += 'A';  		break;  	case 11:  		bin += 'B';  		break;  	case 12:  		bin += 'C';  		break;  	case 13:  		bin += 'D';  		break;  	case 14:  		bin += 'E';  		break;  	case 15:  		bin += 'F';  		break;  	}  }  else {  	bin += newNumber;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: if (newNumber >= 10 && (output == 16)) {  	switch (newNumber) {  	case 10:  		bin += 'A';  		break;  	case 11:  		bin += 'B';  		break;  	case 12:  		bin += 'C';  		break;  	case 13:  		bin += 'D';  		break;  	case 14:  		bin += 'E';  		break;  	case 15:  		bin += 'F';  		break;  	}  }  else {  	bin += newNumber;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: switch (newNumber) {  case 10:  	bin += 'A';  	break;  case 11:  	bin += 'B';  	break;  case 12:  	bin += 'C';  	break;  case 13:  	bin += 'D';  	break;  case 14:  	bin += 'E';  	break;  case 15:  	bin += 'F';  	break;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: switch (newNumber) {  case 10:  	bin += 'A';  	break;  case 11:  	bin += 'B';  	break;  case 12:  	bin += 'C';  	break;  case 13:  	bin += 'D';  	break;  case 14:  	bin += 'E';  	break;  case 15:  	bin += 'F';  	break;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: switch (newNumber) {  case 10:  	bin += 'A';  	break;  case 11:  	bin += 'B';  	break;  case 12:  	bin += 'C';  	break;  case 13:  	bin += 'D';  	break;  case 14:  	bin += 'E';  	break;  case 15:  	bin += 'F';  	break;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: switch (newNumber) {  case 10:  	bin += 'A';  	break;  case 11:  	bin += 'B';  	break;  case 12:  	bin += 'C';  	break;  case 13:  	bin += 'D';  	break;  case 14:  	bin += 'E';  	break;  case 15:  	bin += 'F';  	break;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: switch (newNumber) {  case 10:  	bin += 'A';  	break;  case 11:  	bin += 'B';  	break;  case 12:  	bin += 'C';  	break;  case 13:  	bin += 'D';  	break;  case 14:  	bin += 'E';  	break;  case 15:  	bin += 'F';  	break;  }  
Magic Number,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following statement contains a magic number: switch (newNumber) {  case 10:  	bin += 'A';  	break;  case 11:  	bin += 'B';  	break;  case 12:  	bin += 'C';  	break;  case 13:  	bin += 'D';  	break;  case 14:  	bin += 'E';  	break;  case 15:  	bin += 'F';  	break;  }  
Missing Default,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,SSystemToDec,The following switch statement is missing a default case: switch (number [i]) {  case 'A':  	num += (10 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'B':  	num += (11 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'C':  	num += (12 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'D':  	num += (13 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'E':  	num += (14 * ((int)Math.Pow (input' j)));  	j--;  	break;  case 'F':  	num += (15 * ((int)Math.Pow (input' j)));  	j--;  	break;  }  
Missing Default,ConvertAny,Convert,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\ConvertAny\Program.cs,DecToOutputBase,The following switch statement is missing a default case: switch (newNumber) {  case 10:  	bin += 'A';  	break;  case 11:  	bin += 'B';  	break;  case 12:  	bin += 'C';  	break;  case 13:  	bin += 'D';  	break;  case 14:  	bin += 'E';  	break;  case 15:  	bin += 'F';  	break;  }  
