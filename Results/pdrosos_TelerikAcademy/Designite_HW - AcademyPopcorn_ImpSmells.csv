Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AcademyPopcorn,CollisionDispatcher,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\CollisionDispatcher.cs,HandleMovingWithStaticCollisions,Cyclomatic complexity of the method is 10
Complex Method,AcademyPopcorn,KeyboardInterface,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\KeyboardInterface.cs,ProcessInput,Cyclomatic complexity of the method is 8
Long Parameter List,AcademyPopcorn,AcademyPopcornMain,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\AcademyPopcornMain.cs,Main,The method has 5 parameters.
Long Identifier,AcademyPopcorn,CollisionData,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\CollisionData.cs,CollisionData,The length of the parameter hitObjectsCollisionGroupStrings is 31.
Long Statement,AcademyPopcorn,CollisionDispatcher,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\CollisionDispatcher.cs,HandleMovingWithStaticCollisions,The length of the statement  "			staticObjects [verticalIndex].RespondToCollision (new CollisionData (new MatrixCoords (movingObject.Speed.Row' 0)' movingObject.GetCollisionGroupString ())); " is 157.
Long Statement,AcademyPopcorn,CollisionDispatcher,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\CollisionDispatcher.cs,HandleMovingWithStaticCollisions,The length of the statement  "			staticObjects [horizontalIndex].RespondToCollision (new CollisionData (new MatrixCoords (0' movingObject.Speed.Col)' movingObject.GetCollisionGroupString ())); " is 159.
Long Statement,AcademyPopcorn,CollisionDispatcher,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\CollisionDispatcher.cs,HandleMovingWithStaticCollisions,The length of the statement  "				staticObjects [diagonalIndex].RespondToCollision (new CollisionData (new MatrixCoords (movingObject.Speed.Row' 0)' movingObject.GetCollisionGroupString ())); " is 157.
Long Statement,AcademyPopcorn,Racket,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\Racket.cs,CanCollideWith,The length of the statement  "	return otherCollisionGroupString == "block" || otherCollisionGroupString == Racket.CollisionGroupString || otherCollisionGroupString == "ball"; " is 143.
Long Statement,AcademyPopcorn,UnstoppableBall,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\UnstoppableBall.cs,CanCollideWith,The length of the statement  "	return otherCollisionGroupString == "racket" || otherCollisionGroupString == "block" || otherCollisionGroupString == "unpassableBlock" || otherCollisionGroupString == "indestructibleBlock"; " is 189.
Long Statement,AcademyPopcorn,UnstoppableBall,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\UnstoppableBall.cs,RespondToCollision,The length of the statement  "		if (collisionData.hitObjectsCollisionGroupStrings [i] == "unpassableBlock" || collisionData.hitObjectsCollisionGroupStrings [i] == "racket" || collisionData.hitObjectsCollisionGroupStrings [i] == "indestructibleBlock") { " is 220.
Complex Conditional,AcademyPopcorn,ConsoleRenderer,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\ConsoleRenderer.cs,EnqueueForRendering,The conditional expression  "row >= 0 && row < renderContextMatrixRows && col >= 0 && col < renderContextMatrixCols"  is complex.
Magic Number,AcademyPopcorn,AcademyPopcornMain,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\AcademyPopcornMain.cs,Initialize,The following statement contains a magic number: for (int i = startCol; i < endCol; i++) {  	Block currBlock;  	if (i == 7) {  		currBlock = new ExplodingBlock (new MatrixCoords (startRow' i));  	}  	else if (i == endCol - 3) {  		currBlock = new GiftBlock (new MatrixCoords (startRow' i));  	}  	else {  		currBlock = new Block (new MatrixCoords (startRow' i));  	}  	engine.AddObject (currBlock);  }  
Magic Number,AcademyPopcorn,AcademyPopcornMain,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\AcademyPopcornMain.cs,Initialize,The following statement contains a magic number: for (int i = startCol; i < endCol; i++) {  	Block currBlock;  	if (i == 7) {  		currBlock = new ExplodingBlock (new MatrixCoords (startRow' i));  	}  	else if (i == endCol - 3) {  		currBlock = new GiftBlock (new MatrixCoords (startRow' i));  	}  	else {  		currBlock = new Block (new MatrixCoords (startRow' i));  	}  	engine.AddObject (currBlock);  }  
Magic Number,AcademyPopcorn,AcademyPopcornMain,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\AcademyPopcornMain.cs,Initialize,The following statement contains a magic number: if (i == 7) {  	currBlock = new ExplodingBlock (new MatrixCoords (startRow' i));  }  else if (i == endCol - 3) {  	currBlock = new GiftBlock (new MatrixCoords (startRow' i));  }  else {  	currBlock = new Block (new MatrixCoords (startRow' i));  }  
Magic Number,AcademyPopcorn,AcademyPopcornMain,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\AcademyPopcornMain.cs,Initialize,The following statement contains a magic number: if (i == 7) {  	currBlock = new ExplodingBlock (new MatrixCoords (startRow' i));  }  else if (i == endCol - 3) {  	currBlock = new GiftBlock (new MatrixCoords (startRow' i));  }  else {  	currBlock = new Block (new MatrixCoords (startRow' i));  }  
Magic Number,AcademyPopcorn,AcademyPopcornMain,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\AcademyPopcornMain.cs,Initialize,The following statement contains a magic number: if (i == endCol - 3) {  	currBlock = new GiftBlock (new MatrixCoords (startRow' i));  }  else {  	currBlock = new Block (new MatrixCoords (startRow' i));  }  
Magic Number,AcademyPopcorn,AcademyPopcornMain,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\AcademyPopcornMain.cs,Main,The following statement contains a magic number: for (int i = 2; i < WorldRows; i++) {  	gameEngine.AddObject (new IndestructibleBlock (new MatrixCoords (i' 0)));  	gameEngine.AddObject (new IndestructibleBlock (new MatrixCoords (i' WorldCols - 1)));  }  
Magic Number,AcademyPopcorn,AcademyPopcornMain,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\AcademyPopcornMain.cs,Main,The following statement contains a magic number: for (int i = 0; i < WorldCols; i++) {  	gameEngine.AddObject (new IndestructibleBlock (new MatrixCoords (2' i)));  }  
Magic Number,AcademyPopcorn,AcademyPopcornMain,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\AcademyPopcornMain.cs,Main,The following statement contains a magic number: gameEngine.AddObject (new IndestructibleBlock (new MatrixCoords (2' i)));  
Magic Number,AcademyPopcorn,Gift,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\Gift.cs,ProduceObjects,The following statement contains a magic number: if (this.IsDestroyed) {  	produceObjects.Add (new ShoothingRacket (new MatrixCoords (this.topLeft.Row + 1' this.topLeft.Col)' 6));  }  
Magic Number,AcademyPopcorn,Gift,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\Gift.cs,ProduceObjects,The following statement contains a magic number: produceObjects.Add (new ShoothingRacket (new MatrixCoords (this.topLeft.Row + 1' this.topLeft.Col)' 6));  
Magic Number,AcademyPopcorn,MatrixCoords,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\MatrixCoords.cs,GetHashCode,The following statement contains a magic number: return this.Row.GetHashCode () * 7 + this.Col;  
Magic Number,AcademyPopcorn,MeteoriteBall,C:\repos\pdrosos_TelerikAcademy\OOP\07. Workshop\Evaluated Homeworks\01\HW_Prakticheska-rabotilnica-po-OOP\HW - AcademyPopcorn\MeteoriteBall.cs,ProduceObjects,The following statement contains a magic number: produceObjects.Add (new TrailObject (base.topLeft' new char['] {  	{  		'*'  	}  }' 3));  
