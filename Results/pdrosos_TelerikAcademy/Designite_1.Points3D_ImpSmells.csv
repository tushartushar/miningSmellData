Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Points3D,PathStorage,C:\repos\pdrosos_TelerikAcademy\OOP\02. Defining Classes - Part II\Evaluated Homeworks\02\HW_Definirane-na-klasove---chast-II\Points3D\PathStorage.cs,LoadPath,The length of the statement  "			if (coordinates.Length == 3 && Double.TryParse (coordinates [0]' out x) && Double.TryParse (coordinates [1]' out y) && Double.TryParse (coordinates [2]' out z)) { " is 162.
Complex Conditional,Points3D,PathStorage,C:\repos\pdrosos_TelerikAcademy\OOP\02. Defining Classes - Part II\Evaluated Homeworks\02\HW_Definirane-na-klasove---chast-II\Points3D\PathStorage.cs,LoadPath,The conditional expression  "coordinates.Length == 3 && Double.TryParse (coordinates [0]' out x) && Double.TryParse (coordinates [1]' out y) && Double.TryParse (coordinates [2]' out z)"  is complex.
Magic Number,Points3D,PathStorage,C:\repos\pdrosos_TelerikAcademy\OOP\02. Defining Classes - Part II\Evaluated Homeworks\02\HW_Definirane-na-klasove---chast-II\Points3D\PathStorage.cs,LoadPath,The following statement contains a magic number: using (StreamReader fileReader = new StreamReader (fileFullName)) {  	string line;  	while ((line = fileReader.ReadLine ()) != null) {  		string[] coordinates = line.Split (new char[] {  			' '  		}' StringSplitOptions.RemoveEmptyEntries);  		double x' y' z;  		if (coordinates.Length == 3 && Double.TryParse (coordinates [0]' out x) && Double.TryParse (coordinates [1]' out y) && Double.TryParse (coordinates [2]' out z)) {  			Point3D point = new Point3D (x' y' z);  			points.Add (point);  		}  	}  }  
Magic Number,Points3D,PathStorage,C:\repos\pdrosos_TelerikAcademy\OOP\02. Defining Classes - Part II\Evaluated Homeworks\02\HW_Definirane-na-klasove---chast-II\Points3D\PathStorage.cs,LoadPath,The following statement contains a magic number: using (StreamReader fileReader = new StreamReader (fileFullName)) {  	string line;  	while ((line = fileReader.ReadLine ()) != null) {  		string[] coordinates = line.Split (new char[] {  			' '  		}' StringSplitOptions.RemoveEmptyEntries);  		double x' y' z;  		if (coordinates.Length == 3 && Double.TryParse (coordinates [0]' out x) && Double.TryParse (coordinates [1]' out y) && Double.TryParse (coordinates [2]' out z)) {  			Point3D point = new Point3D (x' y' z);  			points.Add (point);  		}  	}  }  
Magic Number,Points3D,PathStorage,C:\repos\pdrosos_TelerikAcademy\OOP\02. Defining Classes - Part II\Evaluated Homeworks\02\HW_Definirane-na-klasove---chast-II\Points3D\PathStorage.cs,LoadPath,The following statement contains a magic number: while ((line = fileReader.ReadLine ()) != null) {  	string[] coordinates = line.Split (new char[] {  		' '  	}' StringSplitOptions.RemoveEmptyEntries);  	double x' y' z;  	if (coordinates.Length == 3 && Double.TryParse (coordinates [0]' out x) && Double.TryParse (coordinates [1]' out y) && Double.TryParse (coordinates [2]' out z)) {  		Point3D point = new Point3D (x' y' z);  		points.Add (point);  	}  }  
Magic Number,Points3D,PathStorage,C:\repos\pdrosos_TelerikAcademy\OOP\02. Defining Classes - Part II\Evaluated Homeworks\02\HW_Definirane-na-klasove---chast-II\Points3D\PathStorage.cs,LoadPath,The following statement contains a magic number: while ((line = fileReader.ReadLine ()) != null) {  	string[] coordinates = line.Split (new char[] {  		' '  	}' StringSplitOptions.RemoveEmptyEntries);  	double x' y' z;  	if (coordinates.Length == 3 && Double.TryParse (coordinates [0]' out x) && Double.TryParse (coordinates [1]' out y) && Double.TryParse (coordinates [2]' out z)) {  		Point3D point = new Point3D (x' y' z);  		points.Add (point);  	}  }  
Magic Number,Points3D,PathStorage,C:\repos\pdrosos_TelerikAcademy\OOP\02. Defining Classes - Part II\Evaluated Homeworks\02\HW_Definirane-na-klasove---chast-II\Points3D\PathStorage.cs,LoadPath,The following statement contains a magic number: if (coordinates.Length == 3 && Double.TryParse (coordinates [0]' out x) && Double.TryParse (coordinates [1]' out y) && Double.TryParse (coordinates [2]' out z)) {  	Point3D point = new Point3D (x' y' z);  	points.Add (point);  }  
Magic Number,Points3D,PathStorage,C:\repos\pdrosos_TelerikAcademy\OOP\02. Defining Classes - Part II\Evaluated Homeworks\02\HW_Definirane-na-klasove---chast-II\Points3D\PathStorage.cs,LoadPath,The following statement contains a magic number: if (coordinates.Length == 3 && Double.TryParse (coordinates [0]' out x) && Double.TryParse (coordinates [1]' out y) && Double.TryParse (coordinates [2]' out z)) {  	Point3D point = new Point3D (x' y' z);  	points.Add (point);  }  
