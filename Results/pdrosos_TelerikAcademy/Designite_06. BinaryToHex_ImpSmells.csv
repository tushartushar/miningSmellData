Implementation smell,Namespace,Class,File,Method,Description
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,BinaryToHexadecimal,The following statement contains a magic number: if (binaryNumber.Length % 4 != 0) {  	return BinaryToHexadecimal (new String ('0'' 4 - binaryNumber.Length % 4) + binaryNumber);  }  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,BinaryToHexadecimal,The following statement contains a magic number: if (binaryNumber.Length % 4 != 0) {  	return BinaryToHexadecimal (new String ('0'' 4 - binaryNumber.Length % 4) + binaryNumber);  }  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,BinaryToHexadecimal,The following statement contains a magic number: if (binaryNumber.Length % 4 != 0) {  	return BinaryToHexadecimal (new String ('0'' 4 - binaryNumber.Length % 4) + binaryNumber);  }  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,BinaryToHexadecimal,The following statement contains a magic number: return BinaryToHexadecimal (new String ('0'' 4 - binaryNumber.Length % 4) + binaryNumber);  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,BinaryToHexadecimal,The following statement contains a magic number: return BinaryToHexadecimal (new String ('0'' 4 - binaryNumber.Length % 4) + binaryNumber);  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,BinaryToHexadecimal,The following statement contains a magic number: for (int i = binaryNumber.Length - 1; i >= 0; i -= 4) {  	digitsGroup = 0;  	powerOfTwo = 1;  	for (int j = 0; j < 4; j++) {  		digitsGroup += BinaryDigitToDecimalDigit (binaryNumber [i - j]) * powerOfTwo;  		powerOfTwo *= 2;  	}  	hexNumber.Insert (0' DecimalDigitToHexDigit (digitsGroup));  }  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,BinaryToHexadecimal,The following statement contains a magic number: for (int i = binaryNumber.Length - 1; i >= 0; i -= 4) {  	digitsGroup = 0;  	powerOfTwo = 1;  	for (int j = 0; j < 4; j++) {  		digitsGroup += BinaryDigitToDecimalDigit (binaryNumber [i - j]) * powerOfTwo;  		powerOfTwo *= 2;  	}  	hexNumber.Insert (0' DecimalDigitToHexDigit (digitsGroup));  }  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,BinaryToHexadecimal,The following statement contains a magic number: for (int i = binaryNumber.Length - 1; i >= 0; i -= 4) {  	digitsGroup = 0;  	powerOfTwo = 1;  	for (int j = 0; j < 4; j++) {  		digitsGroup += BinaryDigitToDecimalDigit (binaryNumber [i - j]) * powerOfTwo;  		powerOfTwo *= 2;  	}  	hexNumber.Insert (0' DecimalDigitToHexDigit (digitsGroup));  }  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,BinaryToHexadecimal,The following statement contains a magic number: i -= 4
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,BinaryToHexadecimal,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	digitsGroup += BinaryDigitToDecimalDigit (binaryNumber [i - j]) * powerOfTwo;  	powerOfTwo *= 2;  }  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,BinaryToHexadecimal,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	digitsGroup += BinaryDigitToDecimalDigit (binaryNumber [i - j]) * powerOfTwo;  	powerOfTwo *= 2;  }  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,BinaryToHexadecimal,The following statement contains a magic number: powerOfTwo *= 2;  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,DecimalDigitToHexDigit,The following statement contains a magic number: if (number >= 10) {  	return (char)('A' + number - 10);  }  else {  	return (char)('0' + number);  }  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,DecimalDigitToHexDigit,The following statement contains a magic number: if (number >= 10) {  	return (char)('A' + number - 10);  }  else {  	return (char)('0' + number);  }  
Magic Number,BinaryToHex,BinaryToHex,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Homework\NumeralSystems\BinaryToHex\BinaryToHex.cs,DecimalDigitToHexDigit,The following statement contains a magic number: return (char)('A' + number - 10);  
