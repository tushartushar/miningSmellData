Implementation smell,Namespace,Class,File,Method,Description
Long Statement,PermutationsOfArrayOfNElements,PermutationsOfArrayOfNElements,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\01. Arrays\Homework\Arrays\PermutationsOfNumberN\PermutationsOfArrayOfNElements.cs,Main,The length of the statement  "	Console.WriteLine ("All possible permutations of {" + string.Join ("' "' numbers.Select (x => x.ToString ()).ToArray ()) + "} are:"); " is 133.
Magic Number,PermutationsOfArrayOfNElements,PermutationsOfArrayOfNElements,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\01. Arrays\Homework\Arrays\PermutationsOfNumberN\PermutationsOfArrayOfNElements.cs,CalculateHeapPermutations,The following statement contains a magic number: if (arrayLength == 1) {  	permutations.Add ((int[])array.Clone ());  }  else {  	int tempElement;  	for (int i = 0; i < arrayLength; i++) {  		CalculateHeapPermutations (array' arrayLength - 1' permutations);  		if (arrayLength % 2 == 1) {  			tempElement = array [0];  			array [0] = array [arrayLength - 1];  			array [arrayLength - 1] = tempElement;  		}  		else {  			tempElement = array [i];  			array [i] = array [arrayLength - 1];  			array [arrayLength - 1] = tempElement;  		}  	}  }  
Magic Number,PermutationsOfArrayOfNElements,PermutationsOfArrayOfNElements,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\01. Arrays\Homework\Arrays\PermutationsOfNumberN\PermutationsOfArrayOfNElements.cs,CalculateHeapPermutations,The following statement contains a magic number: for (int i = 0; i < arrayLength; i++) {  	CalculateHeapPermutations (array' arrayLength - 1' permutations);  	if (arrayLength % 2 == 1) {  		tempElement = array [0];  		array [0] = array [arrayLength - 1];  		array [arrayLength - 1] = tempElement;  	}  	else {  		tempElement = array [i];  		array [i] = array [arrayLength - 1];  		array [arrayLength - 1] = tempElement;  	}  }  
Magic Number,PermutationsOfArrayOfNElements,PermutationsOfArrayOfNElements,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\01. Arrays\Homework\Arrays\PermutationsOfNumberN\PermutationsOfArrayOfNElements.cs,CalculateHeapPermutations,The following statement contains a magic number: if (arrayLength % 2 == 1) {  	tempElement = array [0];  	array [0] = array [arrayLength - 1];  	array [arrayLength - 1] = tempElement;  }  else {  	tempElement = array [i];  	array [i] = array [arrayLength - 1];  	array [arrayLength - 1] = tempElement;  }  
