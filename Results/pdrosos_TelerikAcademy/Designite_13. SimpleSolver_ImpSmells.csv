Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Main,Cyclomatic complexity of the method is 14
Magic Number,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Main,The following statement contains a magic number: do {  	Console.WriteLine ("Please' choose a number of task:");  }  while (!int.TryParse (Console.ReadLine ()' out choice) || choice < 1 || choice > 3);  
Magic Number,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Main,The following statement contains a magic number: switch (choice) {  case 1: {  	Console.WriteLine ("Please' enter a non-negative number:");  	int number;  	while (!int.TryParse (Console.ReadLine ()' out number) || number < 0) {  		Console.WriteLine ("Invalid number. Enter a non-negative number:");  	}  	Console.WriteLine ("The reversed number is {0}."' Reverse (number));  	break;  }  case 2: {  	string input = "";  	List<int> numbers = new List<int> ();  	Console.WriteLine ("Please' enter a sequence of integers:");  	int number;  	do {  		Console.WriteLine ("Enter an integer (Type \"000\" to stop): ");  		input = Console.ReadLine ();  		if (input == "000") {  			if (numbers.Count > 0) {  				break;  			}  			else {  				Console.WriteLine ("The sequence can not be empty.");  				continue;  			}  		}  		if (int.TryParse (input' out number)) {  			numbers.Add (number);  		}  		else {  			Console.WriteLine ("Invalid number.");  		}  	}  	while (true);  	Console.WriteLine ("The avarage of the sequence of integers is {0}."' Avg (numbers.ToArray ()));  	break;  }  case 3: {  	Console.WriteLine ("Please' enter values of coefficients a (> 0) and b:");  	double a;  	Console.WriteLine ("a:");  	while (!double.TryParse (Console.ReadLine ()' out a) || a <= 0) {  		Console.WriteLine ("Invalid coefficient a. Please' enter a > 0:");  	}  	double b;  	Console.WriteLine ("b:");  	while (!double.TryParse (Console.ReadLine ()' out b)) {  		Console.WriteLine ("Invalid coefficient b. Please' enter b:");  	}  	Console.WriteLine ("The root of the equation is {0}."' SolveEquation (a' b));  	break;  }  }  
Magic Number,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Main,The following statement contains a magic number: switch (choice) {  case 1: {  	Console.WriteLine ("Please' enter a non-negative number:");  	int number;  	while (!int.TryParse (Console.ReadLine ()' out number) || number < 0) {  		Console.WriteLine ("Invalid number. Enter a non-negative number:");  	}  	Console.WriteLine ("The reversed number is {0}."' Reverse (number));  	break;  }  case 2: {  	string input = "";  	List<int> numbers = new List<int> ();  	Console.WriteLine ("Please' enter a sequence of integers:");  	int number;  	do {  		Console.WriteLine ("Enter an integer (Type \"000\" to stop): ");  		input = Console.ReadLine ();  		if (input == "000") {  			if (numbers.Count > 0) {  				break;  			}  			else {  				Console.WriteLine ("The sequence can not be empty.");  				continue;  			}  		}  		if (int.TryParse (input' out number)) {  			numbers.Add (number);  		}  		else {  			Console.WriteLine ("Invalid number.");  		}  	}  	while (true);  	Console.WriteLine ("The avarage of the sequence of integers is {0}."' Avg (numbers.ToArray ()));  	break;  }  case 3: {  	Console.WriteLine ("Please' enter values of coefficients a (> 0) and b:");  	double a;  	Console.WriteLine ("a:");  	while (!double.TryParse (Console.ReadLine ()' out a) || a <= 0) {  		Console.WriteLine ("Invalid coefficient a. Please' enter a > 0:");  	}  	double b;  	Console.WriteLine ("b:");  	while (!double.TryParse (Console.ReadLine ()' out b)) {  		Console.WriteLine ("Invalid coefficient b. Please' enter b:");  	}  	Console.WriteLine ("The root of the equation is {0}."' SolveEquation (a' b));  	break;  }  }  
Magic Number,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Reverse,The following statement contains a magic number: do {  	index++;  	check = check / 10;  }  while (check != 0);  
Magic Number,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Reverse,The following statement contains a magic number: check = check / 10;  
Magic Number,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Reverse,The following statement contains a magic number: for (int i = index - 1; i >= 0; i--) {  	reversedNumber = reversedNumber + number % 10 * (int)Math.Pow (10' i);  	number = number / 10;  }  
Magic Number,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Reverse,The following statement contains a magic number: for (int i = index - 1; i >= 0; i--) {  	reversedNumber = reversedNumber + number % 10 * (int)Math.Pow (10' i);  	number = number / 10;  }  
Magic Number,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Reverse,The following statement contains a magic number: for (int i = index - 1; i >= 0; i--) {  	reversedNumber = reversedNumber + number % 10 * (int)Math.Pow (10' i);  	number = number / 10;  }  
Magic Number,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Reverse,The following statement contains a magic number: reversedNumber = reversedNumber + number % 10 * (int)Math.Pow (10' i);  
Magic Number,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Reverse,The following statement contains a magic number: reversedNumber = reversedNumber + number % 10 * (int)Math.Pow (10' i);  
Magic Number,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Reverse,The following statement contains a magic number: number = number / 10;  
Missing Default,SimpleSolver,SimpleSolver,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Homework\Methods\SimpleSolver\SimpleSolver.cs,Main,The following switch statement is missing a default case: switch (choice) {  case 1: {  	Console.WriteLine ("Please' enter a non-negative number:");  	int number;  	while (!int.TryParse (Console.ReadLine ()' out number) || number < 0) {  		Console.WriteLine ("Invalid number. Enter a non-negative number:");  	}  	Console.WriteLine ("The reversed number is {0}."' Reverse (number));  	break;  }  case 2: {  	string input = "";  	List<int> numbers = new List<int> ();  	Console.WriteLine ("Please' enter a sequence of integers:");  	int number;  	do {  		Console.WriteLine ("Enter an integer (Type \"000\" to stop): ");  		input = Console.ReadLine ();  		if (input == "000") {  			if (numbers.Count > 0) {  				break;  			}  			else {  				Console.WriteLine ("The sequence can not be empty.");  				continue;  			}  		}  		if (int.TryParse (input' out number)) {  			numbers.Add (number);  		}  		else {  			Console.WriteLine ("Invalid number.");  		}  	}  	while (true);  	Console.WriteLine ("The avarage of the sequence of integers is {0}."' Avg (numbers.ToArray ()));  	break;  }  case 3: {  	Console.WriteLine ("Please' enter values of coefficients a (> 0) and b:");  	double a;  	Console.WriteLine ("a:");  	while (!double.TryParse (Console.ReadLine ()' out a) || a <= 0) {  		Console.WriteLine ("Invalid coefficient a. Please' enter a > 0:");  	}  	double b;  	Console.WriteLine ("b:");  	while (!double.TryParse (Console.ReadLine ()' out b)) {  		Console.WriteLine ("Invalid coefficient b. Please' enter b:");  	}  	Console.WriteLine ("The root of the equation is {0}."' SolveEquation (a' b));  	break;  }  }  
