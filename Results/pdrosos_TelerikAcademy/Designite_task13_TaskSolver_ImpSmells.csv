Implementation smell,Namespace,Class,File,Method,Description
Complex Method,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,Cyclomatic complexity of the method is 11
Complex Conditional,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The conditional expression  "splitedInput.Length < 7 || splitedInput [0] == "0" || (splitedInput [0] == "-" && splitedInput [1] == "0")"  is complex.
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput.Length < 7 || splitedInput [0] == "0" || (splitedInput [0] == "-" && splitedInput [1] == "0")) {  	flag = false;  }  else {  	//if a is < 0  	if (splitedInput [0] == "-") {  		if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  			flag = false;  		}  		ab [0] *= -1;  		if (splitedInput [4] == "+") {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  	// if a is > 0  	else {  		if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  			flag = false;  		}  		if (splitedInput [3] == "+") {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput.Length < 7 || splitedInput [0] == "0" || (splitedInput [0] == "-" && splitedInput [1] == "0")) {  	flag = false;  }  else {  	//if a is < 0  	if (splitedInput [0] == "-") {  		if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  			flag = false;  		}  		ab [0] *= -1;  		if (splitedInput [4] == "+") {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  	// if a is > 0  	else {  		if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  			flag = false;  		}  		if (splitedInput [3] == "+") {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput.Length < 7 || splitedInput [0] == "0" || (splitedInput [0] == "-" && splitedInput [1] == "0")) {  	flag = false;  }  else {  	//if a is < 0  	if (splitedInput [0] == "-") {  		if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  			flag = false;  		}  		ab [0] *= -1;  		if (splitedInput [4] == "+") {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  	// if a is > 0  	else {  		if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  			flag = false;  		}  		if (splitedInput [3] == "+") {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput.Length < 7 || splitedInput [0] == "0" || (splitedInput [0] == "-" && splitedInput [1] == "0")) {  	flag = false;  }  else {  	//if a is < 0  	if (splitedInput [0] == "-") {  		if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  			flag = false;  		}  		ab [0] *= -1;  		if (splitedInput [4] == "+") {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  	// if a is > 0  	else {  		if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  			flag = false;  		}  		if (splitedInput [3] == "+") {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput.Length < 7 || splitedInput [0] == "0" || (splitedInput [0] == "-" && splitedInput [1] == "0")) {  	flag = false;  }  else {  	//if a is < 0  	if (splitedInput [0] == "-") {  		if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  			flag = false;  		}  		ab [0] *= -1;  		if (splitedInput [4] == "+") {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  	// if a is > 0  	else {  		if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  			flag = false;  		}  		if (splitedInput [3] == "+") {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput.Length < 7 || splitedInput [0] == "0" || (splitedInput [0] == "-" && splitedInput [1] == "0")) {  	flag = false;  }  else {  	//if a is < 0  	if (splitedInput [0] == "-") {  		if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  			flag = false;  		}  		ab [0] *= -1;  		if (splitedInput [4] == "+") {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  	// if a is > 0  	else {  		if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  			flag = false;  		}  		if (splitedInput [3] == "+") {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput.Length < 7 || splitedInput [0] == "0" || (splitedInput [0] == "-" && splitedInput [1] == "0")) {  	flag = false;  }  else {  	//if a is < 0  	if (splitedInput [0] == "-") {  		if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  			flag = false;  		}  		ab [0] *= -1;  		if (splitedInput [4] == "+") {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  	// if a is > 0  	else {  		if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  			flag = false;  		}  		if (splitedInput [3] == "+") {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  		}  		else {  			if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  				flag = false;  			}  			ab [1] *= -1;  		}  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput [0] == "-") {  	if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  		flag = false;  	}  	ab [0] *= -1;  	if (splitedInput [4] == "+") {  		if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  			flag = false;  		}  	}  	else {  		if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  			flag = false;  		}  		ab [1] *= -1;  	}  }  // if a is > 0  else {  	if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  		flag = false;  	}  	if (splitedInput [3] == "+") {  		if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  			flag = false;  		}  	}  	else {  		if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  			flag = false;  		}  		ab [1] *= -1;  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput [0] == "-") {  	if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  		flag = false;  	}  	ab [0] *= -1;  	if (splitedInput [4] == "+") {  		if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  			flag = false;  		}  	}  	else {  		if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  			flag = false;  		}  		ab [1] *= -1;  	}  }  // if a is > 0  else {  	if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  		flag = false;  	}  	if (splitedInput [3] == "+") {  		if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  			flag = false;  		}  	}  	else {  		if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  			flag = false;  		}  		ab [1] *= -1;  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput [0] == "-") {  	if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  		flag = false;  	}  	ab [0] *= -1;  	if (splitedInput [4] == "+") {  		if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  			flag = false;  		}  	}  	else {  		if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  			flag = false;  		}  		ab [1] *= -1;  	}  }  // if a is > 0  else {  	if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  		flag = false;  	}  	if (splitedInput [3] == "+") {  		if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  			flag = false;  		}  	}  	else {  		if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  			flag = false;  		}  		ab [1] *= -1;  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput [0] == "-") {  	if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  		flag = false;  	}  	ab [0] *= -1;  	if (splitedInput [4] == "+") {  		if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  			flag = false;  		}  	}  	else {  		if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  			flag = false;  		}  		ab [1] *= -1;  	}  }  // if a is > 0  else {  	if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  		flag = false;  	}  	if (splitedInput [3] == "+") {  		if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  			flag = false;  		}  	}  	else {  		if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  			flag = false;  		}  		ab [1] *= -1;  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput [0] == "-") {  	if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  		flag = false;  	}  	ab [0] *= -1;  	if (splitedInput [4] == "+") {  		if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  			flag = false;  		}  	}  	else {  		if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  			flag = false;  		}  		ab [1] *= -1;  	}  }  // if a is > 0  else {  	if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  		flag = false;  	}  	if (splitedInput [3] == "+") {  		if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  			flag = false;  		}  	}  	else {  		if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  			flag = false;  		}  		ab [1] *= -1;  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput [0] == "-") {  	if (!(int.TryParse (splitedInput [1]' out ab [0]))) {  		flag = false;  	}  	ab [0] *= -1;  	if (splitedInput [4] == "+") {  		if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  			flag = false;  		}  	}  	else {  		if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  			flag = false;  		}  		ab [1] *= -1;  	}  }  // if a is > 0  else {  	if (!(int.TryParse (splitedInput [0]' out ab [0]))) {  		flag = false;  	}  	if (splitedInput [3] == "+") {  		if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  			flag = false;  		}  	}  	else {  		if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  			flag = false;  		}  		ab [1] *= -1;  	}  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput [4] == "+") {  	if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  		flag = false;  	}  }  else {  	if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  		flag = false;  	}  	ab [1] *= -1;  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput [4] == "+") {  	if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  		flag = false;  	}  }  else {  	if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  		flag = false;  	}  	ab [1] *= -1;  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput [4] == "+") {  	if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  		flag = false;  	}  }  else {  	if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  		flag = false;  	}  	ab [1] *= -1;  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  	flag = false;  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (!(int.TryParse (splitedInput [5]' out ab [1]))) {  	flag = false;  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput [3] == "+") {  	if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  		flag = false;  	}  }  else {  	if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  		flag = false;  	}  	ab [1] *= -1;  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput [3] == "+") {  	if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  		flag = false;  	}  }  else {  	if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  		flag = false;  	}  	ab [1] *= -1;  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (splitedInput [3] == "+") {  	if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  		flag = false;  	}  }  else {  	if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  		flag = false;  	}  	ab [1] *= -1;  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  	flag = false;  }  
Magic Number,task13_TaskSolver,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\01\HW_Metodi\task13_TaskSolver\Program.cs,StringToArrLikeEquation,The following statement contains a magic number: if (!(int.TryParse (splitedInput [4]' out ab [1]))) {  	flag = false;  }  
