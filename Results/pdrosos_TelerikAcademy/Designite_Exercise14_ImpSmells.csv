Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Exercise14,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise14\Exercise14\Program.cs,Main,Cyclomatic complexity of the method is 16
Magic Number,Exercise14,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise14\Exercise14\Program.cs,Main,The following statement contains a magic number: do {  	Console.WriteLine ("Select operation :");  	Console.WriteLine ();  	Console.WriteLine (" 1 - minimum value in array");  	Console.WriteLine (" 2 - maximum value in array");  	Console.WriteLine (" 3 - average value of the array");  	Console.WriteLine (" 4 - sum value of the array");  	choise = byte.Parse (Console.ReadLine ());  }  while (choise < 1 && choise > 4);  
Magic Number,Exercise14,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise14\Exercise14\Program.cs,Main,The following statement contains a magic number: switch (choise) {  case 1:  	Max_value (NumArray);  	break;  case 2:  	Min_value (NumArray);  	break;  case 3:  	Avarage (NumArray);  	break;  case 4:  	Sum (NumArray);  	break;  default:  	break;  }  
Magic Number,Exercise14,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise14\Exercise14\Program.cs,Main,The following statement contains a magic number: switch (choise) {  case 1:  	Max_value (NumArray);  	break;  case 2:  	Min_value (NumArray);  	break;  case 3:  	Avarage (NumArray);  	break;  case 4:  	Sum (NumArray);  	break;  default:  	break;  }  
Magic Number,Exercise14,Program,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\03. Methods\Evaluated Homeworks\02\Methods\Exercise14\Exercise14\Program.cs,Main,The following statement contains a magic number: switch (choise) {  case 1:  	Max_value (NumArray);  	break;  case 2:  	Min_value (NumArray);  	break;  case 3:  	Avarage (NumArray);  	break;  case 4:  	Sum (NumArray);  	break;  default:  	break;  }  
