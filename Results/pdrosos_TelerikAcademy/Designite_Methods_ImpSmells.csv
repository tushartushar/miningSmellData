Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Methods,NumberFormatter,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\NumberFormatter.cs,DigitToWord,Cyclomatic complexity of the method is 32
Complex Method,Methods,NumberFormatter,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\NumberFormatter.cs,FormatNumber,Cyclomatic complexity of the method is 11
Long Statement,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The length of the statement  "	Console.WriteLine ("{0} older than {1} -> {2}"' firstStudent.FirstName' secondStudent.FirstName' firstStudent.IsOlderThan (secondStudent)); " is 139.
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (MathExtensions.CalculateTriangleArea (3' 4' 5));  
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (MathExtensions.CalculateTriangleArea (3' 4' 5));  
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (MathExtensions.CalculateTriangleArea (3' 4' 5));  
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (NumberFormatter.DigitToWord (5));  
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (MathExtensions.FindMaxNumber (5' -1' 3' 2' 14' 2' 3));  
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (MathExtensions.FindMaxNumber (5' -1' 3' 2' 14' 2' 3));  
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (MathExtensions.FindMaxNumber (5' -1' 3' 2' 14' 2' 3));  
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (MathExtensions.FindMaxNumber (5' -1' 3' 2' 14' 2' 3));  
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (MathExtensions.FindMaxNumber (5' -1' 3' 2' 14' 2' 3));  
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (MathExtensions.FindMaxNumber (5' -1' 3' 2' 14' 2' 3));  
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (NumberFormatter.FormatNumber (1.3' "fixedPoint"));  
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (NumberFormatter.FormatNumber (0.75' "percentage"));  
Magic Number,Methods,Methods,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\Methods.cs,Main,The following statement contains a magic number: Console.WriteLine (NumberFormatter.FormatNumber (2.30' "roundTrip"));  
Magic Number,Methods,NumberFormatter,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\NumberFormatter.cs,DigitToWord,The following statement contains a magic number: switch (number) {  case 0:  	word = "zero";  	break;  case 1:  	word = "one";  	break;  case 2:  	word = "two";  	break;  case 3:  	word = "three";  	break;  case 4:  	word = "four";  	break;  case 5:  	word = "five";  	break;  case 6:  	word = "six";  	break;  case 7:  	word = "seven";  	break;  case 8:  	word = "eight";  	break;  case 9:  	word = "nine";  	break;  default:  	throw new ArgumentException ("Invalid digit!");  }  
Magic Number,Methods,NumberFormatter,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\NumberFormatter.cs,DigitToWord,The following statement contains a magic number: switch (number) {  case 0:  	word = "zero";  	break;  case 1:  	word = "one";  	break;  case 2:  	word = "two";  	break;  case 3:  	word = "three";  	break;  case 4:  	word = "four";  	break;  case 5:  	word = "five";  	break;  case 6:  	word = "six";  	break;  case 7:  	word = "seven";  	break;  case 8:  	word = "eight";  	break;  case 9:  	word = "nine";  	break;  default:  	throw new ArgumentException ("Invalid digit!");  }  
Magic Number,Methods,NumberFormatter,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\NumberFormatter.cs,DigitToWord,The following statement contains a magic number: switch (number) {  case 0:  	word = "zero";  	break;  case 1:  	word = "one";  	break;  case 2:  	word = "two";  	break;  case 3:  	word = "three";  	break;  case 4:  	word = "four";  	break;  case 5:  	word = "five";  	break;  case 6:  	word = "six";  	break;  case 7:  	word = "seven";  	break;  case 8:  	word = "eight";  	break;  case 9:  	word = "nine";  	break;  default:  	throw new ArgumentException ("Invalid digit!");  }  
Magic Number,Methods,NumberFormatter,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\NumberFormatter.cs,DigitToWord,The following statement contains a magic number: switch (number) {  case 0:  	word = "zero";  	break;  case 1:  	word = "one";  	break;  case 2:  	word = "two";  	break;  case 3:  	word = "three";  	break;  case 4:  	word = "four";  	break;  case 5:  	word = "five";  	break;  case 6:  	word = "six";  	break;  case 7:  	word = "seven";  	break;  case 8:  	word = "eight";  	break;  case 9:  	word = "nine";  	break;  default:  	throw new ArgumentException ("Invalid digit!");  }  
Magic Number,Methods,NumberFormatter,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\NumberFormatter.cs,DigitToWord,The following statement contains a magic number: switch (number) {  case 0:  	word = "zero";  	break;  case 1:  	word = "one";  	break;  case 2:  	word = "two";  	break;  case 3:  	word = "three";  	break;  case 4:  	word = "four";  	break;  case 5:  	word = "five";  	break;  case 6:  	word = "six";  	break;  case 7:  	word = "seven";  	break;  case 8:  	word = "eight";  	break;  case 9:  	word = "nine";  	break;  default:  	throw new ArgumentException ("Invalid digit!");  }  
Magic Number,Methods,NumberFormatter,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\NumberFormatter.cs,DigitToWord,The following statement contains a magic number: switch (number) {  case 0:  	word = "zero";  	break;  case 1:  	word = "one";  	break;  case 2:  	word = "two";  	break;  case 3:  	word = "three";  	break;  case 4:  	word = "four";  	break;  case 5:  	word = "five";  	break;  case 6:  	word = "six";  	break;  case 7:  	word = "seven";  	break;  case 8:  	word = "eight";  	break;  case 9:  	word = "nine";  	break;  default:  	throw new ArgumentException ("Invalid digit!");  }  
Magic Number,Methods,NumberFormatter,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\NumberFormatter.cs,DigitToWord,The following statement contains a magic number: switch (number) {  case 0:  	word = "zero";  	break;  case 1:  	word = "one";  	break;  case 2:  	word = "two";  	break;  case 3:  	word = "three";  	break;  case 4:  	word = "four";  	break;  case 5:  	word = "five";  	break;  case 6:  	word = "six";  	break;  case 7:  	word = "seven";  	break;  case 8:  	word = "eight";  	break;  case 9:  	word = "nine";  	break;  default:  	throw new ArgumentException ("Invalid digit!");  }  
Magic Number,Methods,NumberFormatter,C:\repos\pdrosos_TelerikAcademy\High-Quality Code\7. High-quality Methods\Homework\Methods\NumberFormatter.cs,DigitToWord,The following statement contains a magic number: switch (number) {  case 0:  	word = "zero";  	break;  case 1:  	word = "one";  	break;  case 2:  	word = "two";  	break;  case 3:  	word = "three";  	break;  case 4:  	word = "four";  	break;  case 5:  	word = "five";  	break;  case 6:  	word = "six";  	break;  case 7:  	word = "seven";  	break;  case 8:  	word = "eight";  	break;  case 9:  	word = "nine";  	break;  default:  	throw new ArgumentException ("Invalid digit!");  }  
