Implementation smell,Namespace,Class,File,Method,Description
Complex Method,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,Cyclomatic complexity of the method is 21
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: for (int i = 0; i < hex.Length; i++) {  	if (char.IsLetter (hex [i])) {  		switch (hex [i]) {  		case 'A':  			number = 10;  			break;  		case 'B':  			number = 11;  			break;  		case 'C':  			number = 12;  			break;  		case 'D':  			number = 13;  			break;  		case 'E':  			number = 14;  			break;  		case 'F':  			number = 15;  			break;  		}  	}  	else {  		number = hex [i] - '0';  	}  	for (int bitNum = 3; bitNum >= 0; bitNum--) {  		int bitValue = (number >> bitNum) & 1;  		bin += bitValue;  	}  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: for (int i = 0; i < hex.Length; i++) {  	if (char.IsLetter (hex [i])) {  		switch (hex [i]) {  		case 'A':  			number = 10;  			break;  		case 'B':  			number = 11;  			break;  		case 'C':  			number = 12;  			break;  		case 'D':  			number = 13;  			break;  		case 'E':  			number = 14;  			break;  		case 'F':  			number = 15;  			break;  		}  	}  	else {  		number = hex [i] - '0';  	}  	for (int bitNum = 3; bitNum >= 0; bitNum--) {  		int bitValue = (number >> bitNum) & 1;  		bin += bitValue;  	}  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: for (int i = 0; i < hex.Length; i++) {  	if (char.IsLetter (hex [i])) {  		switch (hex [i]) {  		case 'A':  			number = 10;  			break;  		case 'B':  			number = 11;  			break;  		case 'C':  			number = 12;  			break;  		case 'D':  			number = 13;  			break;  		case 'E':  			number = 14;  			break;  		case 'F':  			number = 15;  			break;  		}  	}  	else {  		number = hex [i] - '0';  	}  	for (int bitNum = 3; bitNum >= 0; bitNum--) {  		int bitValue = (number >> bitNum) & 1;  		bin += bitValue;  	}  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: for (int i = 0; i < hex.Length; i++) {  	if (char.IsLetter (hex [i])) {  		switch (hex [i]) {  		case 'A':  			number = 10;  			break;  		case 'B':  			number = 11;  			break;  		case 'C':  			number = 12;  			break;  		case 'D':  			number = 13;  			break;  		case 'E':  			number = 14;  			break;  		case 'F':  			number = 15;  			break;  		}  	}  	else {  		number = hex [i] - '0';  	}  	for (int bitNum = 3; bitNum >= 0; bitNum--) {  		int bitValue = (number >> bitNum) & 1;  		bin += bitValue;  	}  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: for (int i = 0; i < hex.Length; i++) {  	if (char.IsLetter (hex [i])) {  		switch (hex [i]) {  		case 'A':  			number = 10;  			break;  		case 'B':  			number = 11;  			break;  		case 'C':  			number = 12;  			break;  		case 'D':  			number = 13;  			break;  		case 'E':  			number = 14;  			break;  		case 'F':  			number = 15;  			break;  		}  	}  	else {  		number = hex [i] - '0';  	}  	for (int bitNum = 3; bitNum >= 0; bitNum--) {  		int bitValue = (number >> bitNum) & 1;  		bin += bitValue;  	}  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: for (int i = 0; i < hex.Length; i++) {  	if (char.IsLetter (hex [i])) {  		switch (hex [i]) {  		case 'A':  			number = 10;  			break;  		case 'B':  			number = 11;  			break;  		case 'C':  			number = 12;  			break;  		case 'D':  			number = 13;  			break;  		case 'E':  			number = 14;  			break;  		case 'F':  			number = 15;  			break;  		}  	}  	else {  		number = hex [i] - '0';  	}  	for (int bitNum = 3; bitNum >= 0; bitNum--) {  		int bitValue = (number >> bitNum) & 1;  		bin += bitValue;  	}  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: for (int i = 0; i < hex.Length; i++) {  	if (char.IsLetter (hex [i])) {  		switch (hex [i]) {  		case 'A':  			number = 10;  			break;  		case 'B':  			number = 11;  			break;  		case 'C':  			number = 12;  			break;  		case 'D':  			number = 13;  			break;  		case 'E':  			number = 14;  			break;  		case 'F':  			number = 15;  			break;  		}  	}  	else {  		number = hex [i] - '0';  	}  	for (int bitNum = 3; bitNum >= 0; bitNum--) {  		int bitValue = (number >> bitNum) & 1;  		bin += bitValue;  	}  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: if (char.IsLetter (hex [i])) {  	switch (hex [i]) {  	case 'A':  		number = 10;  		break;  	case 'B':  		number = 11;  		break;  	case 'C':  		number = 12;  		break;  	case 'D':  		number = 13;  		break;  	case 'E':  		number = 14;  		break;  	case 'F':  		number = 15;  		break;  	}  }  else {  	number = hex [i] - '0';  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: if (char.IsLetter (hex [i])) {  	switch (hex [i]) {  	case 'A':  		number = 10;  		break;  	case 'B':  		number = 11;  		break;  	case 'C':  		number = 12;  		break;  	case 'D':  		number = 13;  		break;  	case 'E':  		number = 14;  		break;  	case 'F':  		number = 15;  		break;  	}  }  else {  	number = hex [i] - '0';  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: if (char.IsLetter (hex [i])) {  	switch (hex [i]) {  	case 'A':  		number = 10;  		break;  	case 'B':  		number = 11;  		break;  	case 'C':  		number = 12;  		break;  	case 'D':  		number = 13;  		break;  	case 'E':  		number = 14;  		break;  	case 'F':  		number = 15;  		break;  	}  }  else {  	number = hex [i] - '0';  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: if (char.IsLetter (hex [i])) {  	switch (hex [i]) {  	case 'A':  		number = 10;  		break;  	case 'B':  		number = 11;  		break;  	case 'C':  		number = 12;  		break;  	case 'D':  		number = 13;  		break;  	case 'E':  		number = 14;  		break;  	case 'F':  		number = 15;  		break;  	}  }  else {  	number = hex [i] - '0';  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: if (char.IsLetter (hex [i])) {  	switch (hex [i]) {  	case 'A':  		number = 10;  		break;  	case 'B':  		number = 11;  		break;  	case 'C':  		number = 12;  		break;  	case 'D':  		number = 13;  		break;  	case 'E':  		number = 14;  		break;  	case 'F':  		number = 15;  		break;  	}  }  else {  	number = hex [i] - '0';  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: if (char.IsLetter (hex [i])) {  	switch (hex [i]) {  	case 'A':  		number = 10;  		break;  	case 'B':  		number = 11;  		break;  	case 'C':  		number = 12;  		break;  	case 'D':  		number = 13;  		break;  	case 'E':  		number = 14;  		break;  	case 'F':  		number = 15;  		break;  	}  }  else {  	number = hex [i] - '0';  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: switch (hex [i]) {  case 'A':  	number = 10;  	break;  case 'B':  	number = 11;  	break;  case 'C':  	number = 12;  	break;  case 'D':  	number = 13;  	break;  case 'E':  	number = 14;  	break;  case 'F':  	number = 15;  	break;  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: switch (hex [i]) {  case 'A':  	number = 10;  	break;  case 'B':  	number = 11;  	break;  case 'C':  	number = 12;  	break;  case 'D':  	number = 13;  	break;  case 'E':  	number = 14;  	break;  case 'F':  	number = 15;  	break;  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: switch (hex [i]) {  case 'A':  	number = 10;  	break;  case 'B':  	number = 11;  	break;  case 'C':  	number = 12;  	break;  case 'D':  	number = 13;  	break;  case 'E':  	number = 14;  	break;  case 'F':  	number = 15;  	break;  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: switch (hex [i]) {  case 'A':  	number = 10;  	break;  case 'B':  	number = 11;  	break;  case 'C':  	number = 12;  	break;  case 'D':  	number = 13;  	break;  case 'E':  	number = 14;  	break;  case 'F':  	number = 15;  	break;  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: switch (hex [i]) {  case 'A':  	number = 10;  	break;  case 'B':  	number = 11;  	break;  case 'C':  	number = 12;  	break;  case 'D':  	number = 13;  	break;  case 'E':  	number = 14;  	break;  case 'F':  	number = 15;  	break;  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: switch (hex [i]) {  case 'A':  	number = 10;  	break;  case 'B':  	number = 11;  	break;  case 'C':  	number = 12;  	break;  case 'D':  	number = 13;  	break;  case 'E':  	number = 14;  	break;  case 'F':  	number = 15;  	break;  }  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: number = 10;  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: number = 11;  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: number = 12;  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: number = 13;  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: number = 14;  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: number = 15;  
Magic Number,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following statement contains a magic number: for (int bitNum = 3; bitNum >= 0; bitNum--) {  	int bitValue = (number >> bitNum) & 1;  	bin += bitValue;  }  
Missing Default,HexToBin,HexToBinary,C:\repos\pdrosos_TelerikAcademy\C# Fundamentals - Part II\04. Numeral Systems\Evaluated Homeworks\03\HW4\HexToBin\Program.cs,HexToBin,The following switch statement is missing a default case: switch (hex [i]) {  case 'A':  	number = 10;  	break;  case 'B':  	number = 11;  	break;  case 'C':  	number = 12;  	break;  case 'D':  	number = 13;  	break;  case 'E':  	number = 14;  	break;  case 'F':  	number = 15;  	break;  }  
