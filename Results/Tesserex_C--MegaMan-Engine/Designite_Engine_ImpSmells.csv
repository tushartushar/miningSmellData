Implementation smell,Namespace,Class,File,Method,Description
Long Method,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The method has 446 lines of code.
Long Method,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The method has 295 lines of code.
Long Method,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The method has 745 lines of code.
Long Method,MegaMan.Engine.Entities.Effects,MovementEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\MovementEffectLoader.cs,ParseMovementBehavior,The method has 143 lines of code.
Long Method,MegaMan.Engine.Entities.Effects,PositionEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\PositionEffectLoader.cs,ParsePositionBehavior,The method has 132 lines of code.
Long Method,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,IsCompatibleWith,The method has 112 lines of code.
Long Method,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,NextToken,The method has 176 lines of code.
Complex Method,MegaMan.Engine,CollisionBox,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionBox.cs,EnvironmentContact,Cyclomatic complexity of the method is 9
Complex Method,MegaMan.Engine,CollisionBox,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionBox.cs,GetIntersectionOffset,Cyclomatic complexity of the method is 12
Complex Method,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,Update,Cyclomatic complexity of the method is 16
Complex Method,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,ReactForHitbox,Cyclomatic complexity of the method is 8
Complex Method,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,CheckEnvironment,Cyclomatic complexity of the method is 8
Complex Method,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,CheckEntityCollisions,Cyclomatic complexity of the method is 9
Complex Method,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,BlockByIntersection,Cyclomatic complexity of the method is 11
Complex Method,MegaMan.Engine,EffectParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\EffectParser.cs,GetFilteredEntities,Cyclomatic complexity of the method is 10
Complex Method,MegaMan.Engine,HealthMeter,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\HealthMeter.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,MegaMan.Engine,MovementComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\MovementComponent.cs,Update,Cyclomatic complexity of the method is 14
Complex Method,MegaMan.Engine,Engine,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Engine.cs,KeyToInput,Cyclomatic complexity of the method is 9
Complex Method,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Update,Cyclomatic complexity of the method is 10
Complex Method,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,MegaMan.Engine.Entities,GameEntitySource,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\GameEntitySource.cs,LoadEntity,Cyclomatic complexity of the method is 12
Complex Method,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,ParseIdentifier,Cyclomatic complexity of the method is 9
Complex Method,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,CompareConversions,Cyclomatic complexity of the method is 8
Long Parameter List,MegaMan.Engine,BossDoorHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\BossDoorHandler.cs,BossDoorHandler,The method has 7 parameters. Parameters: join' container' entityPool' tileSize' height' width' name
Long Parameter List,MegaMan.Engine,CollisionBox,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionBox.cs,GetIntersectionOffset,The method has 6 parameters. Parameters: tileBox' boundBox' approach_vx' approach_vy' uponly' downonly
Long Parameter List,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,CollisionWithAllEntitiesAndTiles_RealTime,The method has 7 parameters. Parameters: boxName' entity' property' pushAway' solidOnly' checkTilesForCollisions' checkEntitiesForCollisions
Long Parameter List,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,CheckTargetBox,The method has 5 parameters. Parameters: hitbox' boundBox' entity' coll' targetBox
Long Parameter List,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,CheckEnvironmentTile,The method has 6 parameters. Parameters: hitSquares' hitbox' hitRect' tile' offset' pushAway
Long Parameter List,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,CheckEntityCollisions,The method has 5 parameters. Parameters: blockEntities' hitbox' boundbox' pushAway' solidOnly
Long Parameter List,MegaMan.Engine,EngineGraphicsControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,snes_ntsc_blit,The method has 8 parameters. Parameters: ntsc' input' in_row_width' burst_phase' in_width' in_height' rgb_out' out_pitch
Long Parameter List,MegaMan.Engine,snes_ntsc_setup_t,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,snes_ntsc_setup_t,The method has 11 parameters. Parameters: hue' saturation' contrast' brightness' sharpness' gamma' resolution' artifacts' fringing' bleed' merge_fields
Long Parameter List,MegaMan.Engine,HandlerFill,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\HanderObjects.cs,HandlerFill,The method has 6 parameters. Parameters: color' x' y' width' height' layer
Long Parameter List,MegaMan.Engine,HandlerFill,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\HanderObjects.cs,Move,The method has 5 parameters. Parameters: nx' ny' nwidth' nheight' duration
Long Parameter List,MegaMan.Engine,FontSystem,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\FontSystem.cs,Draw,The method has 5 parameters. Parameters: renderContext' layer' font' text' position
Long Parameter List,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,JoinHandler,The method has 5 parameters. Parameters: join' tileSize' height' width' name
Long Parameter List,MegaMan.Engine,MapSquare,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\MapSquare.cs,MapSquare,The method has 5 parameters. Parameters: layer' tile' x' y' tilesize
Long Parameter List,MegaMan.Engine,Program,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Program.cs,PeekMessage,The method has 5 parameters. Parameters: msg' hwnd' messageFilterMin' messageFilterMax' flags
Long Parameter List,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,ScreenHandler,The method has 5 parameters. Parameters: screen' layers' joins' blockPatterns' container
Long Parameter List,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Draw,The method has 6 parameters. Parameters: renderArgs' playerPos' adj_x' adj_y' off_x' off_y
Long Parameter List,MegaMan.Engine,WeaponComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\WeaponComponent.cs,AddWeapon,The method has 6 parameters. Parameters: name' entity' ammo' usage' meter' palette
Long Parameter List,System.Linq.Dynamic,DynamicExpression,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,ParseLambda,The method has 5 parameters. Parameters: parameters' delegateType' resultType' expression' values
Long Parameter List,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,CheckAndPromoteOperands,The method has 5 parameters. Parameters: signatures' opName' left' right' errorPos
Long Parameter List,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,FindMethod,The method has 5 parameters. Parameters: type' methodName' staticAccess' args' method
Long Parameter List,MegaMan.Engine.Rendering,XnaRenderingContext,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Rendering\XnaRenderingContext.cs,Draw,The method has 6 parameters. Parameters: resource' layer' position' sourceRect' flipHorizontal' flipVertical
Long Identifier,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,,The length of the parameter invincibilityToolStripMenuItem is 30.
Long Identifier,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,,The length of the parameter framerateDownToolStripMenuItem is 30.
Long Identifier,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,,The length of the parameter defaultFramerateToolStripMenuItem is 33.
Long Identifier,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,,The length of the parameter increaseVolumeToolStripMenuItem is 31.
Long Identifier,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,,The length of the parameter decreaseVolumeToolStripMenuItem is 31.
Long Identifier,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,,The length of the parameter defaultConfigToolStripMenuItem is 30.
Long Identifier,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,,The length of the parameter saveConfigurationsToolStripMenuItem is 35.
Long Identifier,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,,The length of the parameter loadConfigurationToolStripMenuItem is 34.
Long Identifier,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,,The length of the parameter deleteConfigurationsToolStripMenuItem is 37.
Long Identifier,System.Linq.Dynamic,Res,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,,The length of the parameter AmbiguousConstructorInvocation is 30.
Long Identifier,MegaMan.Engine.Forms.Settings,Constants,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\UserSettings.cs,,The length of the parameter noGameConfigNameToDisplayToUser is 31.
Long Identifier,MegaMan.Engine.Forms.Settings,Errors,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\UserSettings.cs,,The length of the parameter GetUserSettingsFromXML_NoError is 30.
Long Identifier,MegaMan.Engine.Forms.Settings,Errors,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\UserSettings.cs,,The length of the parameter GetUserSettingsFromXML_FileNotFound is 35.
Long Identifier,MegaMan.Engine.Forms.Settings,Errors,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\UserSettings.cs,,The length of the parameter GetUserSettingsFromXML_CannotDeserialize is 40.
Long Identifier,MegaMan.Engine.Forms.Settings,Errors,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\UserSettings.cs,,The length of the parameter LoadConfigFromXML_FileNotFound is 30.
Long Identifier,MegaMan.Engine.Forms.Settings,Errors,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\UserSettings.cs,,The length of the parameter LoadConfigFromXML_CannotDeserialize is 35.
Long Identifier,MegaMan.Engine.Forms.Settings,Errors,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\UserSettings.cs,,The length of the parameter LoadConfigFromXML_NoContentReadFromXML is 38.
Long Identifier,MegaMan.Engine.Forms.Settings,Errors,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\UserSettings.cs,,The length of the parameter LoadConfigFromXML_NoDefaultValueInXML is 37.
Long Statement,MegaMan.Engine,Binding,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Bindings\Binding.cs,Create,The length of the statement  "                        throw new GameRunException("Weapon bindings must be given of the format 'Weapon.{NAME}'' for example' 'Weapon.MBuster'.");" is 122.
Long Statement,MegaMan.Engine,Binding,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Bindings\Binding.cs,Create,The length of the statement  "                        throw new GameRunException("Health bindings must be given of the format 'Health.{ENTITYNAME}'' for example' 'Health.Player'.");" is 127.
Long Statement,MegaMan.Engine,CollisionBox,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionBox.cs,EnvironmentContact,The length of the statement  "            if (parentComponent.MovementSrc != null) offset = GetIntersectionOffset(tileBox' boundBox' parentComponent.MovementSrc.VelocityX' parentComponent.MovementSrc.VelocityY' up' down); " is 179.
Long Statement,MegaMan.Engine,CollisionBox,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionBox.cs,BoxAt,The length of the statement  "            float x = (parentComponent.MovementSrc != null && parentComponent.MovementSrc.Direction == Direction.Left) ? offset.X - box.X - box.Width : box.X + offset.X; " is 157.
Long Statement,MegaMan.Engine,CollisionBox,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionBox.cs,BoxAt,The length of the statement  "            if (parentComponent.Parent.IsGravitySensitive && parentComponent.Parent.Container.IsGravityFlipped) return new RectangleF(x' offset.Y - box.Y - box.Height' box.Width' box.Height); " is 179.
Long Statement,MegaMan.Engine,CollisionBox,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionBox.cs,BoxAt,The length of the statement  "            float x = (parentComponent.MovementSrc != null && parentComponent.MovementSrc.Direction == Direction.Left) ? offset.X - box.X - box.Width : box.X + offset.X; " is 157.
Long Statement,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,Instance_GameRender,The length of the statement  "                e.RenderContext.Draw(rectTex' 5' new Common.Geometry.Point((int)(boundBox.X)' (int)(boundBox.Y))' new Common.Geometry.Rectangle(0' 0' (int)(boundBox.Width)' (int)(boundBox.Height))); " is 182.
Long Statement,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,Message,The length of the statement  "                        throw new GameRunException(String.Format("The {0} entity wanted to enable a hitbox named {1}' which doesn't exist."' Parent.Name' name)); " is 137.
Long Statement,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,CollisionWithAllEntitiesAndTiles_RealTime,The length of the statement  "            var collComponent = (entity == null) ? this : Parent.Entities.GetEntityById(entity)?.GetComponent<CollisionComponent>(); " is 120.
Long Statement,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,CollisionWithAllEntitiesAndTiles_RealTime,The length of the statement  "                    lastFunctionCallReturnValue = collComponent.CollisionWithAllEntities_RealTime(collisionBox' property' solidOnly' pushAway); " is 123.
Long Statement,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,CollisionBoxToCheck,The length of the statement  "            var entityHitboxes = (entityId != null) ? Parent.Entities.GetEntityById(entityId)?.GetComponent<CollisionComponent>()?.hitboxes : this.hitboxes; " is 144.
Long Statement,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,ReactForHitbox,The length of the statement  "                    bool hit = (tile.BlockBox != RectangleF.Empty) ? BlockByIntersection(boundBox' tileBox' uponly' downonly) : boundBox.IntersectsWith(tile.BoundBox); " is 147.
Long Statement,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,CheckEntityCollisions,The length of the statement  "                IEnumerable<CollisionBox> collToCheck = (solidOnly) ? coll.HitByBoxes(hitbox).Where(box => box.Properties.Blocking) : coll.HitByBoxes(hitbox); " is 142.
Long Statement,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,BlockByIntersection,The length of the statement  "                if (intersection.Top == myBox.Top && !downonly) BlockTop = (uponly && MovementSrc != null) ? (MovementSrc.VelocityY * -1 > intersection.Height) : true; " is 151.
Long Statement,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,BlockByIntersection,The length of the statement  "                if (intersection.Bottom == myBox.Bottom && !uponly) BlockBottom = (downonly && MovementSrc != null) ? (MovementSrc.VelocityY > intersection.Height) : true; " is 155.
Long Statement,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The length of the statement  "            this.label1.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The length of the statement  "            this.label2.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The length of the statement  "            this.label3.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The length of the statement  "            this.label4.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The length of the statement  "            this.label5.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The length of the statement  "            this.label6.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The length of the statement  "            this.label7.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The length of the statement  "            this.label8.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The length of the statement  "            this.label9.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The length of the statement  "            this.label10.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 154.
Long Statement,MegaMan.Engine,EffectParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\EffectParser.cs,ParseCondition,The length of the statement  "                new[] { posParam' moveParam' sprParam' inputParam' collParam' ladderParam' timerParam' varsParam' healthParam' weaponParam' stParam' lifeParam' playerXParam' playerYParam' playerXAbsParam' playerYAbsParam' gravParam' randParam' playerParam }' " is 242.
Long Statement,MegaMan.Engine,EffectParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\EffectParser.cs,CompileEffect,The length of the statement  "                            new[] { posParam' moveParam' sprParam' inputParam' collParam' ladderParam' timerParam' healthParam' stateParam' weaponParam' playerParam }' " is 139.
Long Statement,MegaMan.Engine,EffectParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\EffectParser.cs,CompileQuery,The length of the statement  "                            new[] { posParam' moveParam' sprParam' inputParam' collParam' ladderParam' timerParam' healthParam' stateParam' weaponParam' playerParam }' " is 139.
Long Statement,MegaMan.Engine,EngineGraphicsControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,Initialize,The length of the statement  "            masterRenderingTarget = new RenderTarget2D(GraphicsDevice' Width' Height' false' SurfaceFormat.Bgr565' DepthFormat.None); " is 121.
Long Statement,MegaMan.Engine,EngineGraphicsControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,SetSize,The length of the statement  "            masterRenderingTarget = new RenderTarget2D(GraphicsDevice' Width' Height' false' SurfaceFormat.Bgr565' DepthFormat.None' 0' RenderTargetUsage.DiscardContents); " is 159.
Long Statement,MegaMan.Engine,snes_ntsc_setup_t,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,snes_ntsc_custom,The length of the statement  "            return new snes_ntsc_setup_t(hue' saturation' contrast' brightness' sharpness' gamma' resolution' artifacts'fringing' bleed' merge_fields); " is 139.
Long Statement,MegaMan.Engine,GameHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\GameHandler.cs,RemoveCommand,The length of the statement  "                throw new GameRunException(String.Format("The handler '{0}' referenced an object called '{1}'' which doesn't exist."' Info.Name' command.Name)); " is 144.
Long Statement,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,MovePlayer,The length of the statement  "            if (direction == Direction.Right) playerPos.SetPosition(new PointF(playerPos.Position.X + tickdist' playerPos.Position.Y)); " is 123.
Long Statement,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,MovePlayer,The length of the statement  "            else if (direction == Direction.Left) playerPos.SetPosition(new PointF(playerPos.Position.X - tickdist' playerPos.Position.Y)); " is 127.
Long Statement,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,MovePlayer,The length of the statement  "            else if (direction == Direction.Down) playerPos.SetPosition(new PointF(playerPos.Position.X' playerPos.Position.Y + tickdist)); " is 127.
Long Statement,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,MovePlayer,The length of the statement  "            else if (direction == Direction.Up) playerPos.SetPosition(new PointF(playerPos.Position.X' playerPos.Position.Y - tickdist)); " is 125.
Long Statement,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,Finish,The length of the statement  "            if (direction == Direction.Right) { playerPos.SetPosition(new PointF(OffsetDist()' playerPos.Position.Y + NextScreenY)); } " is 122.
Long Statement,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,Finish,The length of the statement  "            else if (direction == Direction.Left) { playerPos.SetPosition(new PointF(nextWidth - OffsetDist()' playerPos.Position.Y + NextScreenY)); } " is 138.
Long Statement,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,Finish,The length of the statement  "            else if (direction == Direction.Down) { playerPos.SetPosition(new PointF(playerPos.Position.X + NextScreenX' OffsetDist())); } " is 126.
Long Statement,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,Finish,The length of the statement  "            else if (direction == Direction.Up) { playerPos.SetPosition(new PointF(playerPos.Position.X + NextScreenX' nextHeight - OffsetDist())); } " is 137.
Long Statement,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,ProcessCmdKey,The length of the statement  "                    MessageBox.Show(this' "Key " + key + " is not allowed."' "Unhauthorized key"' MessageBoxButtons.OK' MessageBoxIcon.Asterisk' MessageBoxDefaultButton.Button1); " is 158.
Long Statement,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The length of the statement  "            this.label1.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The length of the statement  "            this.label3.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The length of the statement  "            this.label5.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The length of the statement  "            this.label7.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The length of the statement  "            this.label9.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Long Statement,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The length of the statement  "            this.label11.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 154.
Long Statement,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The length of the statement  "            this.label13.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 154.
Long Statement,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The length of the statement  "            this.label15.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 154.
Long Statement,MegaMan.Engine,LadderComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\LadderComponent.cs,StandOn,The length of the statement  "                position.SetPosition(new PointF(aboveTile.ScreenX + aboveTile.Tile.Width / 2' (Parent.IsGravitySensitive && Parent.Container.IsGravityFlipped) ? aboveTile.ScreenY + aboveTile.BoundBox.Height + 9 : aboveTile.ScreenY - 9)); " is 221.
Long Statement,MegaMan.Engine,LadderComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\LadderComponent.cs,ClimbDown,The length of the statement  "                position.SetPosition(new PointF(aboveTile.ScreenX + aboveTile.Tile.Width / 2' (Parent.IsGravitySensitive && Parent.Container.IsGravityFlipped) ? aboveTile.ScreenY + aboveTile.BoundBox.Height + 2 : aboveTile.ScreenY - 2)); " is 221.
Long Statement,MegaMan.Engine,LadderComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\LadderComponent.cs,CheckInReach,The length of the statement  "                        RectangleF myBox = hitbox.BoxAt(position.Position' Parent.IsGravitySensitive ? Parent.Container.IsGravityFlipped : false); " is 122.
Long Statement,MegaMan.Engine,Log,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Log.cs,SaveLog,The length of the statement  "                System.IO.File.AppendAllText(@System.IO.Directory.GetCurrentDirectory() + "\\" + FileNameToPutDebuggingMsg' log + Environment.NewLine); " is 135.
Long Statement,MegaMan.Engine,StageFactory,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\StageFactory.cs,Load,The length of the statement  "                throw new GameRunException(String.Format("The map file for stage {0} has badly formatted XML:\n\n{1}"' info.Name' e.Message)); " is 126.
Long Statement,MegaMan.Engine,StageFactory,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\StageFactory.cs,CreateJoin,The length of the statement  "                return new BossDoorHandler(join' stage' _entityPool' screen.Tileset.TileSize' screen.PixelHeight' screen.PixelWidth' screen.Name); " is 130.
Long Statement,MegaMan.Engine,StageHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\StageHandler.cs,DrawJoin,The length of the statement  "            nextScreen.Draw(renderArgs' PlayerPos.Position' currentJoin.NextScreenX' currentJoin.NextScreenY' currentJoin.NextOffsetX' currentJoin.NextOffsetY); " is 148.
Long Statement,MegaMan.Engine,StageHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\StageHandler.cs,BeforeStart,The length of the statement  "            if (!info.Screens.ContainsKey(startScreen)) throw new GameRunException("The start screen for \"" + info.Name + "\" is supposed to be \"" + startScreen + "\"' but it doesn't exist!"); " is 182.
Long Statement,MegaMan.Engine,StageHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\StageHandler.cs,RunCommand,The length of the statement  "                cmd.Type == SceneCommands.Next || cmd.Type == SceneCommands.PlayMusic || cmd.Type == SceneCommands.Sound || cmd.Type == SceneCommands.StopMusic) " is 144.
Long Statement,MegaMan.Engine,Menu,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\Menu.cs,LoadMenus,The length of the statement  "                if (menus.ContainsKey(info.Name)) throw new GameRunException(String.Format("You have two Menus with the name of {0} - names must be unique."' info.Name)); " is 154.
Long Statement,MegaMan.Engine,Menu,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\Menu.cs,Get,The length of the statement  "                    String.Format("I tried to run the menu named '{0}'' but couldn't find it.\nPerhaps it's not being included in the main file."' name) " is 132.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,loadConfigurationToolStripMenuItem_Click,The length of the statement  "            loadConfigForm.Location = new Point(this.Location.X + (this.Size.Width - loadConfigForm.Size.Width) / 2' this.Location.Y + (this.Size.Height - loadConfigForm.Size.Height) / 2); " is 176.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,deleteConfigurationsToolStripMenuItem_Click,The length of the statement  "            deleteConfigsForm.Location = new Point(this.Location.X + (this.Size.Width - deleteConfigsForm.Size.Width) / 2' this.Location.Y + (this.Size.Height - deleteConfigsForm.Size.Height) / 2); " is 185.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,keyboardToolStripMenuItem_Click,The length of the statement  "            keyform.Location = new Point(this.Location.X + (this.Size.Width - keyform.Size.Width) / 2' this.Location.Y + (this.Size.Height - keyform.Size.Height) / 2); " is 155.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,ntscCustom_Click,The length of the statement  "            customNtscForm.Location = new Point(this.Location.X + (this.Size.Width - customNtscForm.Size.Width) / 2' this.Location.Y + (this.Size.Height - customNtscForm.Size.Height) / 2); " is 176.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,LoadGame,The length of the statement  "                    MessageBox.Show("I'm sorry' I couldn't the following file. Perhaps the file path is incorrect?\n\n" + ex.Message' "C# MegaMan Engine"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 179.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,LoadGame,The length of the statement  "                    MessageBox.Show("Your XML is badly formatted.\n\nFile: " + ex.SourceUri + "\n\nError: " + ex.Message' "C# MegaMan Engine"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 167.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,LoadGame,The length of the statement  "                    MessageBox.Show("There was an error loading the game.\n\n" + ex.Message' "C# MegaMan Engine"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 138.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,LoadGame,The length of the statement  "                    MessageBox.Show("StackTrace: " + st + " Frame: " + frame + " Line: " + line' "C# MegaMan Engine"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 142.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,Engine_Exception,The length of the statement  "            MessageBox.Show(this' e.Message' "Game Error"' MessageBoxButtons.OK' MessageBoxIcon.Warning' MessageBoxDefaultButton.Button1); " is 126.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,Programming_Error_No_Shutdown,The length of the statement  "            MessageBox.Show(this' message' "Programming Error"' MessageBoxButtons.OK' MessageBoxIcon.Warning' MessageBoxDefaultButton.Button1); " is 131.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,WrongConfigAlert,The length of the statement  "            MessageBox.Show(this' message' "Config File Invalid Value"' MessageBoxButtons.OK' MessageBoxIcon.Warning' MessageBoxDefaultButton.Button1); " is 139.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.loadToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.O))); " is 139.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.resetToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.R))); " is 140.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.closeGameToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.Q))); " is 144.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.quitToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Alt | System.Windows.Forms.Keys.F4))); " is 136.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.loadConfigurationToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)(((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.Shift)  " is 154.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.loadConfigurationToolStripMenuItem.Click += new System.EventHandler(this.loadConfigurationToolStripMenuItem_Click); " is 120.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.saveConfigurationsToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)(((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.Shift)  " is 155.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.saveConfigurationsToolStripMenuItem.Click += new System.EventHandler(this.saveConfigurationsToolStripMenuItem_Click); " is 122.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.deleteConfigurationsToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.Delete))); " is 160.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.deleteConfigurationsToolStripMenuItem.Click += new System.EventHandler(this.deleteConfigurationsToolStripMenuItem_Click); " is 126.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.keyboardToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Alt | System.Windows.Forms.Keys.K))); " is 139.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.musicMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.M))); " is 131.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.sfxMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)(((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.Shift)  " is 131.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.sq1MenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Alt | System.Windows.Forms.Keys.D7))); " is 126.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.sq2MenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Alt | System.Windows.Forms.Keys.D8))); " is 126.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.triMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Alt | System.Windows.Forms.Keys.D9))); " is 126.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.noiseMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Alt | System.Windows.Forms.Keys.D0))); " is 128.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.increaseVolumeToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.V))); " is 149.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.decreaseVolumeToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)(((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.Shift)  " is 151.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.screenshotMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Alt | System.Windows.Forms.Keys.C))); " is 132.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.debugBarToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.D))); " is 143.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.showHitboxesToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.H))); " is 147.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.noDamageToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.N))); " is 143.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.invincibilityToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.I))); " is 148.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.gravityFlipToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.G))); " is 146.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.emptyHealthMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.K))); " is 137.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.fillHealthMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)(((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.Shift)  " is 138.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.emptyWeaponMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.W))); " is 137.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.fillWeaponMenuIem.ShortcutKeys = ((System.Windows.Forms.Keys)(((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.Shift)  " is 137.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.activateAllToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Alt | System.Windows.Forms.Keys.R))); " is 142.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.framerateUpToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.F))); " is 146.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.framerateDownToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)(((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.Shift)  " is 150.
Long Statement,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The length of the statement  "            this.defaultFramerateToolStripMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)(((System.Windows.Forms.Keys.Alt | System.Windows.Forms.Keys.Shift)  " is 149.
Long Statement,MegaMan.Engine,Program,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Program.cs,Main,The length of the statement  "                MessageBox.Show("There was an unhandled error. I'm sorry' but I have to close.\nPlease give the following information to the developer:\n\n" + e.Message + "\n" + e.StackTrace' "C# MegaMan Engine"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 241.
Long Statement,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The length of the statement  "                var paletteData = img.LockBits(imageRect' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb); " is 141.
Long Statement,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The length of the statement  "                        uint key = (uint)((paletteBytes[i] << 24) + (paletteBytes[i + 1] << 16) + (paletteBytes[i + 2] << 8) + (paletteBytes[i + 3])); " is 126.
Long Statement,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The length of the statement  "                        uint value = (uint)((paletteBytes[swap_i] << 24) + (paletteBytes[swap_i + 1] << 16) + (paletteBytes[swap_i + 2] << 8) + (paletteBytes[swap_i + 3])); " is 148.
Long Statement,MegaMan.Engine,Scene,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\Scene.cs,LoadScenes,The length of the statement  "                if (scenes.ContainsKey(info.Name)) throw new GameRunException(String.Format("You have two Scenes with the name of {0} - names must be unique."' info.Name)); " is 156.
Long Statement,MegaMan.Engine,Scene,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\Scene.cs,Get,The length of the statement  "                    String.Format("I tried to run the scene named '{0}'' but couldn't find it.\nPerhaps it's not being included in the main file."' name) " is 133.
Long Statement,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Start,The length of the statement  "            var autoscroll = (SceneAutoscrollCommandInfo)this.Screen.Commands.FirstOrDefault(c => c.Type == SceneCommands.Autoscroll); " is 122.
Long Statement,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Update,The length of the statement  "                else if (Math.Abs(playerPos.Position.X - teleport.From.X) >= 16 || Math.Abs(playerPos.Position.Y - teleport.From.Y) >= 16) " is 122.
Long Statement,MegaMan.Engine,SpriteComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\SpriteComponent.cs,ChangeSprite,The length of the statement  "                throw new GameRunException(String.Format("A sprite with name {0} was not found in the entity {1}."' name' Parent.Name)); " is 120.
Long Statement,MegaMan.Engine,SpriteComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\SpriteComponent.cs,Draw,The length of the statement  "            if (PositionSrc == null) throw new InvalidOperationException("SpriteComponent has not been initialized with a position source."); " is 129.
Long Statement,MegaMan.Engine,SpriteGroup,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\SpriteComponent.cs,Add,The length of the statement  "                    throw new GameRunException(String.Format("A sprite with the same part name already exists in the {0} entity."' _parent.Parent.Name)); " is 133.
Long Statement,MegaMan.Engine,StateComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\StateComponent.cs,ChangeState,The length of the statement  "            if (!states.ContainsKey(currentState)) throw new GameRunException("Entity \"" + Parent.Name + "\" tried to change to state \"" + currentState + "\"' which does not exist."); " is 173.
Long Statement,MegaMan.Engine,StateComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\StateComponent.cs,ParseTrigger,The length of the statement  "                return new Trigger { Condition = condition' Effect = effect' Else = elseEffect' ConditionString = info.Condition' Priority = info.Priority ?? 0 }; " is 146.
Long Statement,MegaMan.Engine,StateComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\StateComponent.cs,ParseTrigger,The length of the statement  "                throw new GameRunException("There was an error parsing a trigger. There may be a syntax error in your condition expression.\n\nThe error message was:\n\n\t" + e.Message); " is 170.
Long Statement,MegaMan.Engine.Entities.Effects,MovementEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\MovementEffectLoader.cs,ParseMovementBehavior,The length of the statement  "                                if (axis != Axis.Y) mov.VelocityX = (dir == Direction.Right) ? (mag ?? Math.Abs(mov.VelocityX)) : ((dir == Direction.Left) ? (-mag ?? -1 * Math.Abs(mov.VelocityX)) : 0); " is 169.
Long Statement,MegaMan.Engine.Entities.Effects,MovementEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\MovementEffectLoader.cs,ParseMovementBehavior,The length of the statement  "                                if (axis != Axis.X) mov.VelocityY = (dir == Direction.Down) ? (mag ?? Math.Abs(mov.VelocityY)) : ((dir == Direction.Up) ? (-mag ?? -1 * Math.Abs(mov.VelocityY)) : 0); " is 166.
Long Statement,MegaMan.Engine.Entities.Effects,MovementEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\MovementEffectLoader.cs,CheckMagnitudeVar,The length of the statement  "                        throw new GameRunException(string.Format("Entity {0} attempted to set movement using local variable {1}' but the value it contained was not a number."' entity.Name' magVar)); " is 174.
Long Statement,MegaMan.Engine.Entities.Effects,PositionEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\PositionEffectLoader.cs,ParsePositionBehavior,The length of the statement  "                                    else if (input.Right || (!input.Up && !input.Down)) pos.SetPosition(new PointF(pos.Position.X + offset' pos.Position.Y)); " is 121.
Long Statement,MegaMan.Engine.Entities.Effects,PositionEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\PositionEffectLoader.cs,CheckNumericVar,The length of the statement  "                        throw new GameRunException(string.Format("Entity {0} attempted to set position using local variable {1}' but the value it contained was not a number."' entity.Name' numVar)); " is 174.
Long Statement,MegaMan.Engine.Entities.Effects,TriggerEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\TriggerEffectLoader.cs,Load,The length of the statement  "            Effect elseEffect = (triggerInfo.Trigger.Else != null) ? EffectParser.LoadTriggerEffect(triggerInfo.Trigger.Else) : null; " is 121.
Long Statement,MegaMan.Engine.Entities,GameEntitySource,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\GameEntitySource.cs,GetOriginalEntity,The length of the statement  "            if (!entities.ContainsKey(name)) throw new GameRunException("Someone requested an entity named \"" + name + "\"' but I couldn't find it!\n" + " is 141.
Long Statement,System.Linq.Dynamic,DynamicExpression,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,ParseLambda,The length of the statement  "            return ParseLambda(new ParameterExpression[] { Expression.Parameter(itType' "") }' itType' resultType' expression' values); " is 123.
Long Statement,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,btnDelete_Click,The length of the statement  "            if ((MessageBox.Show("Are you sure you want to delete configuration for " + configSelected + "?"' "C# MegaMan Engine"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) == DialogResult.No) return;" is 196.
Long Statement,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,btnDeleteAll_Click,The length of the statement  "            if ((MessageBox.Show("Are you sure you want to delete ALL configurations ?"' "C# MegaMan Engine"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) == DialogResult.No) return;" is 175.
Long Statement,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,btnSelect_Click,The length of the statement  "            else settingsSelected = userSettingObject.GetSettingByIndex(selection - 1); // -1 because an option is added at position 0" is 122.
Long Statement,MegaMan.Engine.Forms.Settings,SettingsService,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\SettingsService.cs,WrongConfigAlert,The length of the statement  "            MessageBox.Show(message' "Config File Invalid Value"' MessageBoxButtons.OK' MessageBoxIcon.Warning' MessageBoxDefaultButton.Button1); " is 133.
Complex Conditional,MegaMan.Engine,CollisionBox,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionBox.cs,GetIntersectionOffset,The conditional expression  "top > 0 || bottom > 0 || left > 0 || right > 0"  is complex.
Complex Conditional,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,VerticalApproach,The conditional expression  "(intersection.Bottom == boundBox.Bottom && vy < 0) ||                  (intersection.Top == boundBox.Top && vy > 0)"  is complex.
Complex Conditional,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,VerticalApproach,The conditional expression  "(intersection.Left == boundBox.Left && vx > 0) ||                  (intersection.Right == boundBox.Right && vx < 0)"  is complex.
Complex Conditional,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,Update,The conditional expression  "JoinInfo.type == JoinType.Vertical && scrollDist >= Game.CurrentGame.PixelsAcross ||                  JoinInfo.type == JoinType.Horizontal && scrollDist >= Game.CurrentGame.PixelsDown"  is complex.
Complex Conditional,MegaMan.Engine,StageHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\StageHandler.cs,RunCommand,The conditional expression  "cmd.Type == SceneCommands.Call || cmd.Type == SceneCommands.Condition || cmd.Type == SceneCommands.Effect ||                  cmd.Type == SceneCommands.Next || cmd.Type == SceneCommands.PlayMusic || cmd.Type == SceneCommands.Sound || cmd.Type == SceneCommands.StopMusic"  is complex.
Complex Conditional,MegaMan.Engine,MovementComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\MovementComponent.cs,Update,The conditional expression  "(!collision.BlockLeft && deltaX < 0) || (!collision.BlockRight && deltaX > 0)"  is complex.
Complex Conditional,MegaMan.Engine,MovementComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\MovementComponent.cs,Update,The conditional expression  "(!collision.BlockTop && deltaY < 0) || (!collision.BlockBottom && deltaY > 0)"  is complex.
Complex Conditional,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,ParseComparison,The conditional expression  "token.id == TokenId.Equal || token.id == TokenId.DoubleEqual ||                  token.id == TokenId.ExclamationEqual || token.id == TokenId.LessGreater ||                  token.id == TokenId.GreaterThan || token.id == TokenId.GreaterThanEqual ||                  token.id == TokenId.LessThan || token.id == TokenId.LessThanEqual"  is complex.
Complex Conditional,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,ParseMultiplicative,The conditional expression  "token.id == TokenId.Asterisk || token.id == TokenId.Slash ||                  token.id == TokenId.Percent || TokenIdentifierIs("mod")"  is complex.
Complex Conditional,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,GenerateConversion,The conditional expression  "(IsNumericType(exprType) || IsEnumType(exprType)) &&                      (IsNumericType(type)) || IsEnumType(type)"  is complex.
Complex Conditional,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,GenerateConversion,The conditional expression  "exprType.IsAssignableFrom(type) || type.IsAssignableFrom(exprType) ||                  exprType.IsInterface || type.IsInterface"  is complex.
Virtual Method Call from Constructor,MegaMan.Engine,HandlerSprite,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\HanderObjects.cs,HandlerSprite,The constructor "HandlerSprite" calls a virtual method "Play".
Empty Catch Block,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,OnLoad,The method has an empty catch block.
Empty Catch Block,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,LoadGlobalConfigValues,The method has an empty catch block.
Empty Catch Block,MegaMan.Engine.Forms.Settings,UserSettings,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\UserSettings.cs,deleteSetting,The method has an empty catch block.
Empty Catch Block,MegaMan.Engine.Forms.Settings,UserSettings,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\UserSettings.cs,deleteAllSetting,The method has an empty catch block.
Empty Catch Block,WinFormsGraphicsDevice,GraphicsDeviceControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\GraphicsDeviceControl.cs,EndDraw,The method has an empty catch block.
Magic Number,MegaMan.Engine,Binding,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Bindings\Binding.cs,Create,The following statement contains a magic number: switch (sourceParts[0].ToUpper())             {                 case "INVENTORY":                     return new InventoryBinding(target' targetProperty' sourceParts);                                  case "WEAPON":                     if (sourceParts.Length != 2)                     {                         throw new GameRunException("Weapon bindings must be given of the format 'Weapon.{NAME}'' for example' 'Weapon.MBuster'.");                     }                      return new WeaponBinding(target' targetProperty' sourceParts[1]);                  case "HEALTH":                     if (sourceParts.Length != 2)                     {                         throw new GameRunException("Health bindings must be given of the format 'Health.{ENTITYNAME}'' for example' 'Health.Player'.");                     }                      return new HealthBinding(target' targetProperty' sourceParts[1]);                                  default:                     throw new GameRunException(String.Format("Binding type '{0}' is invalid."' info.Source));             }
Magic Number,MegaMan.Engine,Binding,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Bindings\Binding.cs,Create,The following statement contains a magic number: switch (sourceParts[0].ToUpper())             {                 case "INVENTORY":                     return new InventoryBinding(target' targetProperty' sourceParts);                                  case "WEAPON":                     if (sourceParts.Length != 2)                     {                         throw new GameRunException("Weapon bindings must be given of the format 'Weapon.{NAME}'' for example' 'Weapon.MBuster'.");                     }                      return new WeaponBinding(target' targetProperty' sourceParts[1]);                  case "HEALTH":                     if (sourceParts.Length != 2)                     {                         throw new GameRunException("Health bindings must be given of the format 'Health.{ENTITYNAME}'' for example' 'Health.Player'.");                     }                      return new HealthBinding(target' targetProperty' sourceParts[1]);                                  default:                     throw new GameRunException(String.Format("Binding type '{0}' is invalid."' info.Source));             }
Magic Number,MegaMan.Engine,InventoryBinding,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Bindings\InventoryBinding.cs,InventoryBinding,The following statement contains a magic number: if (sourceParts.Length < 2)             {                 throw new GameRunException(String.Format("Binding '{0}' is invalid. Inventory bindings must be of the form 'Inventory.ItemName'."' sourceParts[0]));             }
Magic Number,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,Instance_GameRender,The following statement contains a magic number: foreach (CollisionBox hitbox in hitboxes)              {                  if (!enabledBoxes.Contains(hitbox.ID)) continue;                    hitbox.SetParent(this);                  RectangleF boundBox = hitbox.BoxAt(PositionSrc.Position);                  boundBox.Offset(-Parent.Screen.OffsetX' -Parent.Screen.OffsetY);                    if (rectTex == null)                      rectTex = e.RenderContext.CreateColorResource(new MegaMan.Common.Color(1' 0.6f' 0' 0.7f));                    e.RenderContext.Draw(rectTex' 5' new Common.Geometry.Point((int)(boundBox.X)' (int)(boundBox.Y))' new Common.Geometry.Rectangle(0' 0' (int)(boundBox.Width)' (int)(boundBox.Height)));              }
Magic Number,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,CheckEntityCollisions,The following statement contains a magic number: foreach (var entity in Parent.Entities.GetAll())              {                  if (entity == Parent) continue;                  CollisionComponent coll = entity.GetComponent<CollisionComponent>();                  if (coll == null) continue;                    IEnumerable<CollisionBox> collToCheck = (solidOnly) ? coll.HitByBoxes(hitbox).Where(box => box.Properties.Blocking) : coll.HitByBoxes(hitbox);                    foreach (CollisionBox targetBox in collToCheck)                  {                      // if he's blocking' check for collision and maybe push me away                        RectangleF rect = targetBox.BoxAt(coll.PositionSrc.Position);                      RectangleF adjustrect = rect;                      adjustrect.X -= Const.PixelEpsilon;                      adjustrect.Y -= Const.PixelEpsilon;                      adjustrect.Width += 2 * Const.PixelEpsilon;                      adjustrect.Height += 2 - Const.PixelEpsilon;                      RectangleF intersection = RectangleF.Intersect(boundbox' adjustrect);                      if (intersection.Width != 0 || intersection.Height != 0)                      {                          blockEntities.Add(new Collision(hitbox' targetBox' coll));                            if (hitbox.PushAway && pushAway)                          {                              float vx' vy;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              vx = MovementSrc.VelocityX;                              vy = MovementSrc.VelocityY;                              if (mov != null)                              {                                  vx -= mov.VelocityX;                                  vy -= mov.VelocityY;                              }                                PointF offset = hitbox.GetIntersectionOffset(rect' boundbox' vx' vy' false' false);                              if (offset.X != 0 || offset.Y != 0)                              {                                  PositionSrc.Offset(offset.X' offset.Y);                                  boundbox.Offset(offset.X' offset.Y);                              }                          }                      }                  }              }
Magic Number,MegaMan.Engine,CollisionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\CollisionComponent.cs,CheckEntityCollisions,The following statement contains a magic number: foreach (var entity in Parent.Entities.GetAll())              {                  if (entity == Parent) continue;                  CollisionComponent coll = entity.GetComponent<CollisionComponent>();                  if (coll == null) continue;                    IEnumerable<CollisionBox> collToCheck = (solidOnly) ? coll.HitByBoxes(hitbox).Where(box => box.Properties.Blocking) : coll.HitByBoxes(hitbox);                    foreach (CollisionBox targetBox in collToCheck)                  {                      // if he's blocking' check for collision and maybe push me away                        RectangleF rect = targetBox.BoxAt(coll.PositionSrc.Position);                      RectangleF adjustrect = rect;                      adjustrect.X -= Const.PixelEpsilon;                      adjustrect.Y -= Const.PixelEpsilon;                      adjustrect.Width += 2 * Const.PixelEpsilon;                      adjustrect.Height += 2 - Const.PixelEpsilon;                      RectangleF intersection = RectangleF.Intersect(boundbox' adjustrect);                      if (intersection.Width != 0 || intersection.Height != 0)                      {                          blockEntities.Add(new Collision(hitbox' targetBox' coll));                            if (hitbox.PushAway && pushAway)                          {                              float vx' vy;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              vx = MovementSrc.VelocityX;                              vy = MovementSrc.VelocityY;                              if (mov != null)                              {                                  vx -= mov.VelocityX;                                  vy -= mov.VelocityY;                              }                                PointF offset = hitbox.GetIntersectionOffset(rect' boundbox' vx' vy' false' false);                              if (offset.X != 0 || offset.Y != 0)                              {                                  PositionSrc.Offset(offset.X' offset.Y);                                  boundbox.Offset(offset.X' offset.Y);                              }                          }                      }                  }              }
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,gammaTrack_Scroll,The following statement contains a magic number: gammaValue.Text = (gammaTrack.Value / 100.0).ToString();
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,satTrack_Scroll,The following statement contains a magic number: satValue.Text = (satTrack.Value / 100.0).ToString();
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,brightTrack_Scroll,The following statement contains a magic number: brightValue.Text = (brightTrack.Value / 100.0).ToString();
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,contTrack_Scroll,The following statement contains a magic number: contValue.Text = (contTrack.Value / 100.0).ToString();
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,sharpTrack_Scroll,The following statement contains a magic number: sharpValue.Text = (sharpTrack.Value / 100.0).ToString();
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,resTrack_Scroll,The following statement contains a magic number: resValue.Text = (resTrack.Value / 100.0).ToString();
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,artTrack_Scroll,The following statement contains a magic number: artValue.Text = (artTrack.Value / 100.0).ToString();
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,fringeTrack_Scroll,The following statement contains a magic number: fringeValue.Text = (fringeTrack.Value / 100.0).ToString();
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,bleedTrack_Scroll,The following statement contains a magic number: bleedValue.Text = (bleedTrack.Value / 100.0).ToString();
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueTrack.Location = new System.Drawing.Point(86' 12);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueTrack.Location = new System.Drawing.Point(86' 12);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueTrack.Maximum = 180;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueTrack.Minimum = -180;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueTrack.TickFrequency = 30;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(50' 12);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(50' 12);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(30' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(30' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(15' 43);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(15' 43);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(65' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(65' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(14' 74);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(14' 74);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(66' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(66' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 3;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(26' 105);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(26' 105);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(54' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(54' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 4;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(14' 136);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(14' 136);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(66' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(66' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 5;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(32' 167);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(32' 167);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(48' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(48' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label6.TabIndex = 6;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(13' 198);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(13' 198);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(67' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(67' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label7.TabIndex = 7;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point(26' 229);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point(26' 229);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size(54' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size(54' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label8.TabIndex = 8;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(28' 260);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(28' 260);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(52' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(52' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label9.TabIndex = 9;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point(41' 291);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point(41' 291);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size(39' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size(39' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.label10.TabIndex = 10;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satTrack.Location = new System.Drawing.Point(86' 43);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satTrack.Location = new System.Drawing.Point(86' 43);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satTrack.Maximum = 100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satTrack.Minimum = -100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satTrack.TabIndex = 11;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satTrack.TickFrequency = 20;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightTrack.Location = new System.Drawing.Point(86' 74);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightTrack.Location = new System.Drawing.Point(86' 74);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightTrack.Maximum = 100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightTrack.Minimum = -100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightTrack.TabIndex = 12;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightTrack.TickFrequency = 20;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contTrack.Location = new System.Drawing.Point(86' 105);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contTrack.Location = new System.Drawing.Point(86' 105);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contTrack.Maximum = 100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contTrack.Minimum = -100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contTrack.TabIndex = 13;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contTrack.TickFrequency = 20;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpTrack.Location = new System.Drawing.Point(86' 136);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpTrack.Location = new System.Drawing.Point(86' 136);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpTrack.Maximum = 100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpTrack.Minimum = -100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpTrack.TabIndex = 14;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpTrack.TickFrequency = 20;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaTrack.Location = new System.Drawing.Point(86' 167);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaTrack.Location = new System.Drawing.Point(86' 167);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaTrack.Maximum = 100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaTrack.Minimum = -100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaTrack.TabIndex = 15;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaTrack.TickFrequency = 20;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resTrack.Location = new System.Drawing.Point(86' 198);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resTrack.Location = new System.Drawing.Point(86' 198);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resTrack.Maximum = 100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resTrack.Minimum = -100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resTrack.TabIndex = 16;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resTrack.TickFrequency = 20;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artTrack.Location = new System.Drawing.Point(86' 229);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artTrack.Location = new System.Drawing.Point(86' 229);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artTrack.Maximum = 100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artTrack.TabIndex = 17;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artTrack.TickFrequency = 10;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeTrack.Location = new System.Drawing.Point(86' 260);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeTrack.Location = new System.Drawing.Point(86' 260);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeTrack.Maximum = 100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeTrack.TabIndex = 18;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeTrack.TickFrequency = 10;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedTrack.Location = new System.Drawing.Point(86' 291);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedTrack.Location = new System.Drawing.Point(86' 291);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedTrack.Maximum = 100;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedTrack.Size = new System.Drawing.Size(229' 21);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedTrack.TabIndex = 19;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedTrack.TickFrequency = 10;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueValue.Location = new System.Drawing.Point(321' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueValue.Location = new System.Drawing.Point(321' 13);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueValue.Padding = new System.Windows.Forms.Padding(2);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.hueValue.TabIndex = 20;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satValue.Location = new System.Drawing.Point(321' 44);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satValue.Location = new System.Drawing.Point(321' 44);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satValue.Padding = new System.Windows.Forms.Padding(2);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.satValue.TabIndex = 21;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightValue.Location = new System.Drawing.Point(321' 75);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightValue.Location = new System.Drawing.Point(321' 75);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightValue.Padding = new System.Windows.Forms.Padding(2);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.brightValue.TabIndex = 22;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contValue.Location = new System.Drawing.Point(321' 106);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contValue.Location = new System.Drawing.Point(321' 106);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contValue.Padding = new System.Windows.Forms.Padding(2);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.contValue.TabIndex = 23;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpValue.Location = new System.Drawing.Point(321' 137);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpValue.Location = new System.Drawing.Point(321' 137);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpValue.Padding = new System.Windows.Forms.Padding(2);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.sharpValue.TabIndex = 24;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaValue.Location = new System.Drawing.Point(321' 168);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaValue.Location = new System.Drawing.Point(321' 168);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaValue.Padding = new System.Windows.Forms.Padding(2);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.gammaValue.TabIndex = 25;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resValue.Location = new System.Drawing.Point(321' 199);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resValue.Location = new System.Drawing.Point(321' 199);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resValue.Padding = new System.Windows.Forms.Padding(2);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resValue.TabIndex = 26;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artValue.Location = new System.Drawing.Point(321' 230);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artValue.Location = new System.Drawing.Point(321' 230);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artValue.Padding = new System.Windows.Forms.Padding(2);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.artValue.TabIndex = 27;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeValue.Location = new System.Drawing.Point(321' 261);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeValue.Location = new System.Drawing.Point(321' 261);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeValue.Padding = new System.Windows.Forms.Padding(2);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.fringeValue.TabIndex = 28;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedValue.Location = new System.Drawing.Point(321' 292);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedValue.Location = new System.Drawing.Point(321' 292);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedValue.Padding = new System.Windows.Forms.Padding(2);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedValue.Size = new System.Drawing.Size(42' 20);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.bleedValue.TabIndex = 29;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resetButton.Location = new System.Drawing.Point(18' 331);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resetButton.Location = new System.Drawing.Point(18' 331);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resetButton.Size = new System.Drawing.Size(92' 24);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resetButton.Size = new System.Drawing.Size(92' 24);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.resetButton.TabIndex = 30;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.closeButton.Location = new System.Drawing.Point(271' 331);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.closeButton.Location = new System.Drawing.Point(271' 331);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.closeButton.Size = new System.Drawing.Size(92' 24);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.closeButton.Size = new System.Drawing.Size(92' 24);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.closeButton.TabIndex = 31;
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(388' 369);
Magic Number,MegaMan.Engine,CustomNtscForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\CustomNtscForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(388' 369);
Magic Number,MegaMan.Engine,EngineGraphicsControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,Initialize,The following statement contains a magic number: ntscTexture = new Texture2D(GraphicsDevice' 602' 448' false' SurfaceFormat.Bgr565);
Magic Number,MegaMan.Engine,EngineGraphicsControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,Initialize,The following statement contains a magic number: ntscTexture = new Texture2D(GraphicsDevice' 602' 448' false' SurfaceFormat.Bgr565);
Magic Number,MegaMan.Engine,EngineGraphicsControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,Initialize,The following statement contains a magic number: for (int i = 0; i <= ushort.MaxValue; i++)              {                  int red = (i & 0xf800);                  int green = (i & 0x7e0);                  int blue = (i & 0x1f);                  red = ((red - (red >> 3)) & 0xf800);                  green = ((green - (green >> 3)) & 0x7e0);                  blue = ((blue - (blue >> 3)) & 0x1f);                  ntscPixelsDimmed[i] = (ushort)(red | green | blue);              }
Magic Number,MegaMan.Engine,EngineGraphicsControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,Initialize,The following statement contains a magic number: for (int i = 0; i <= ushort.MaxValue; i++)              {                  int red = (i & 0xf800);                  int green = (i & 0x7e0);                  int blue = (i & 0x1f);                  red = ((red - (red >> 3)) & 0xf800);                  green = ((green - (green >> 3)) & 0x7e0);                  blue = ((blue - (blue >> 3)) & 0x1f);                  ntscPixelsDimmed[i] = (ushort)(red | green | blue);              }
Magic Number,MegaMan.Engine,EngineGraphicsControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,Initialize,The following statement contains a magic number: for (int i = 0; i <= ushort.MaxValue; i++)              {                  int red = (i & 0xf800);                  int green = (i & 0x7e0);                  int blue = (i & 0x1f);                  red = ((red - (red >> 3)) & 0xf800);                  green = ((green - (green >> 3)) & 0x7e0);                  blue = ((blue - (blue >> 3)) & 0x1f);                  ntscPixelsDimmed[i] = (ushort)(red | green | blue);              }
Magic Number,MegaMan.Engine,EngineGraphicsControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,DrawMasterTargetToBatch,The following statement contains a magic number: if (NTSC)              {                  masterRenderingTarget.GetData(pixels);                    snes_ntsc_blit(ntsc' pixels' 256' 0' 256' 224' filtered' 1204);                    ntscTexture.SetData(filtered);                    drawTexture = ntscTexture;              }
Magic Number,MegaMan.Engine,EngineGraphicsControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,DrawMasterTargetToBatch,The following statement contains a magic number: if (NTSC)              {                  masterRenderingTarget.GetData(pixels);                    snes_ntsc_blit(ntsc' pixels' 256' 0' 256' 224' filtered' 1204);                    ntscTexture.SetData(filtered);                    drawTexture = ntscTexture;              }
Magic Number,MegaMan.Engine,EngineGraphicsControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,DrawMasterTargetToBatch,The following statement contains a magic number: if (NTSC)              {                  masterRenderingTarget.GetData(pixels);                    snes_ntsc_blit(ntsc' pixels' 256' 0' 256' 224' filtered' 1204);                    ntscTexture.SetData(filtered);                    drawTexture = ntscTexture;              }
Magic Number,MegaMan.Engine,EngineGraphicsControl,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\EngineGraphicsControl.cs,DrawMasterTargetToBatch,The following statement contains a magic number: if (NTSC)              {                  masterRenderingTarget.GetData(pixels);                    snes_ntsc_blit(ntsc' pixels' 256' 0' 256' 224' filtered' 1204);                    ntscTexture.SetData(filtered);                    drawTexture = ntscTexture;              }
Magic Number,MegaMan.Engine,HandlerText,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\HanderObjects.cs,Draw,The following statement contains a magic number: FontSystem.Draw(renderContext' 5' font' displayed' position);
Magic Number,MegaMan.Engine,GameEntity,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameEntity.cs,GameEntity,The following statement contains a magic number: MaxAlive = 50;
Magic Number,MegaMan.Engine,HealthComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\HealthComponent.cs,Update,The following statement contains a magic number: if (flashing > 0)              {                  flashing--;                  SpriteComponent spr = Parent.GetComponent<SpriteComponent>();                  if (spr != null) spr.Visible = (flashing % 3 != 1);              }
Magic Number,MegaMan.Engine,HealthMeter,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\HealthMeter.cs,UpTick,The following statement contains a magic number: if (tickframes >= 3)              {                  tickframes = 0;                  value += tickSize;              }
Magic Number,MegaMan.Engine,HealthMeter,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\HealthMeter.cs,Draw,The following statement contains a magic number: if (tickTexture != null)              {                  int i = 0;                  int ticks = (int)Math.Ceiling(value / tickSize);                  // prevent float errors                  if (ticks > 28) ticks = 28;                    if (meterTexture != null)                      context.Draw(meterTexture' 4' new Common.Geometry.Point((int)positionX' (int)positionY));                    if (horizontal)                  {                      for (int y = (int)positionX; i < ticks; i++' y += tickTexture.Width)                      {                          context.Draw(tickTexture' 4' new Common.Geometry.Point(y' (int)positionY));                      }                  }                  else                  {                      for (int y = 54 + (int)positionY; i < ticks; i++' y -= tickTexture.Height)                      {                          context.Draw(tickTexture' 4' new Common.Geometry.Point((int)(positionX + tickOffset.X)' (int)(y + tickOffset.Y)));                      }                  }              }
Magic Number,MegaMan.Engine,HealthMeter,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\HealthMeter.cs,Draw,The following statement contains a magic number: if (tickTexture != null)              {                  int i = 0;                  int ticks = (int)Math.Ceiling(value / tickSize);                  // prevent float errors                  if (ticks > 28) ticks = 28;                    if (meterTexture != null)                      context.Draw(meterTexture' 4' new Common.Geometry.Point((int)positionX' (int)positionY));                    if (horizontal)                  {                      for (int y = (int)positionX; i < ticks; i++' y += tickTexture.Width)                      {                          context.Draw(tickTexture' 4' new Common.Geometry.Point(y' (int)positionY));                      }                  }                  else                  {                      for (int y = 54 + (int)positionY; i < ticks; i++' y -= tickTexture.Height)                      {                          context.Draw(tickTexture' 4' new Common.Geometry.Point((int)(positionX + tickOffset.X)' (int)(y + tickOffset.Y)));                      }                  }              }
Magic Number,MegaMan.Engine,HealthMeter,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\HealthMeter.cs,Draw,The following statement contains a magic number: if (tickTexture != null)              {                  int i = 0;                  int ticks = (int)Math.Ceiling(value / tickSize);                  // prevent float errors                  if (ticks > 28) ticks = 28;                    if (meterTexture != null)                      context.Draw(meterTexture' 4' new Common.Geometry.Point((int)positionX' (int)positionY));                    if (horizontal)                  {                      for (int y = (int)positionX; i < ticks; i++' y += tickTexture.Width)                      {                          context.Draw(tickTexture' 4' new Common.Geometry.Point(y' (int)positionY));                      }                  }                  else                  {                      for (int y = 54 + (int)positionY; i < ticks; i++' y -= tickTexture.Height)                      {                          context.Draw(tickTexture' 4' new Common.Geometry.Point((int)(positionX + tickOffset.X)' (int)(y + tickOffset.Y)));                      }                  }              }
Magic Number,MegaMan.Engine,HealthMeter,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\HealthMeter.cs,Draw,The following statement contains a magic number: if (tickTexture != null)              {                  int i = 0;                  int ticks = (int)Math.Ceiling(value / tickSize);                  // prevent float errors                  if (ticks > 28) ticks = 28;                    if (meterTexture != null)                      context.Draw(meterTexture' 4' new Common.Geometry.Point((int)positionX' (int)positionY));                    if (horizontal)                  {                      for (int y = (int)positionX; i < ticks; i++' y += tickTexture.Width)                      {                          context.Draw(tickTexture' 4' new Common.Geometry.Point(y' (int)positionY));                      }                  }                  else                  {                      for (int y = 54 + (int)positionY; i < ticks; i++' y -= tickTexture.Height)                      {                          context.Draw(tickTexture' 4' new Common.Geometry.Point((int)(positionX + tickOffset.X)' (int)(y + tickOffset.Y)));                      }                  }              }
Magic Number,MegaMan.Engine,HealthMeter,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\HealthMeter.cs,Draw,The following statement contains a magic number: if (tickTexture != null)              {                  int i = 0;                  int ticks = (int)Math.Ceiling(value / tickSize);                  // prevent float errors                  if (ticks > 28) ticks = 28;                    if (meterTexture != null)                      context.Draw(meterTexture' 4' new Common.Geometry.Point((int)positionX' (int)positionY));                    if (horizontal)                  {                      for (int y = (int)positionX; i < ticks; i++' y += tickTexture.Width)                      {                          context.Draw(tickTexture' 4' new Common.Geometry.Point(y' (int)positionY));                      }                  }                  else                  {                      for (int y = 54 + (int)positionY; i < ticks; i++' y -= tickTexture.Height)                      {                          context.Draw(tickTexture' 4' new Common.Geometry.Point((int)(positionX + tickOffset.X)' (int)(y + tickOffset.Y)));                      }                  }              }
Magic Number,MegaMan.Engine,HealthMeter,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\HealthMeter.cs,Draw,The following statement contains a magic number: if (tickTexture != null)              {                  int i = 0;                  int ticks = (int)Math.Ceiling(value / tickSize);                  // prevent float errors                  if (ticks > 28) ticks = 28;                    if (meterTexture != null)                      context.Draw(meterTexture' 4' new Common.Geometry.Point((int)positionX' (int)positionY));                    if (horizontal)                  {                      for (int y = (int)positionX; i < ticks; i++' y += tickTexture.Width)                      {                          context.Draw(tickTexture' 4' new Common.Geometry.Point(y' (int)positionY));                      }                  }                  else                  {                      for (int y = 54 + (int)positionY; i < ticks; i++' y -= tickTexture.Height)                      {                          context.Draw(tickTexture' 4' new Common.Geometry.Point((int)(positionX + tickOffset.X)' (int)(y + tickOffset.Y)));                      }                  }              }
Magic Number,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,JoinHandler,The following statement contains a magic number: if (join.screenOne == name)              {                  NextScreenName = join.screenTwo;                  if (join.type == JoinType.Horizontal)   // bottom edge                  {                      direction = Direction.Down;                      threshXmin = join.offsetOne * tileSize;                      threshYmin = height - Const.PlayerScrollTrigger;                      threshXmax = threshXmin + size;                      threshYmax = height + 100;                      NextScreenX = (join.offsetTwo - join.offsetOne) * tileSize;                  }                  else // right edge                  {                      direction = Direction.Right;                      threshXmin = width - Const.PlayerScrollTrigger;                      threshYmin = join.offsetOne * tileSize;                      threshXmax = width + 100;                      threshYmax = threshYmin + size;                      NextScreenY = (join.offsetTwo - join.offsetOne) * tileSize;                  }              }              else              {                  NextScreenName = join.screenOne;                  if (join.type == JoinType.Horizontal)   // top edge                  {                      direction = Direction.Up;                      threshXmin = join.offsetTwo * tileSize;                      threshYmin = -100;                      threshXmax = threshXmin + size;                      threshYmax = Const.PlayerScrollTrigger;                      NextScreenX = (join.offsetOne - join.offsetTwo) * tileSize;                  }                  else // left edge                  {                      direction = Direction.Left;                      threshXmin = -100;                      threshYmin = join.offsetTwo * tileSize;                      threshXmax = Const.PlayerScrollTrigger;                      threshYmax = threshYmin + size;                      NextScreenY = (join.offsetOne - join.offsetTwo) * tileSize;                  }              }
Magic Number,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,JoinHandler,The following statement contains a magic number: if (join.screenOne == name)              {                  NextScreenName = join.screenTwo;                  if (join.type == JoinType.Horizontal)   // bottom edge                  {                      direction = Direction.Down;                      threshXmin = join.offsetOne * tileSize;                      threshYmin = height - Const.PlayerScrollTrigger;                      threshXmax = threshXmin + size;                      threshYmax = height + 100;                      NextScreenX = (join.offsetTwo - join.offsetOne) * tileSize;                  }                  else // right edge                  {                      direction = Direction.Right;                      threshXmin = width - Const.PlayerScrollTrigger;                      threshYmin = join.offsetOne * tileSize;                      threshXmax = width + 100;                      threshYmax = threshYmin + size;                      NextScreenY = (join.offsetTwo - join.offsetOne) * tileSize;                  }              }              else              {                  NextScreenName = join.screenOne;                  if (join.type == JoinType.Horizontal)   // top edge                  {                      direction = Direction.Up;                      threshXmin = join.offsetTwo * tileSize;                      threshYmin = -100;                      threshXmax = threshXmin + size;                      threshYmax = Const.PlayerScrollTrigger;                      NextScreenX = (join.offsetOne - join.offsetTwo) * tileSize;                  }                  else // left edge                  {                      direction = Direction.Left;                      threshXmin = -100;                      threshYmin = join.offsetTwo * tileSize;                      threshXmax = Const.PlayerScrollTrigger;                      threshYmax = threshYmin + size;                      NextScreenY = (join.offsetOne - join.offsetTwo) * tileSize;                  }              }
Magic Number,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,JoinHandler,The following statement contains a magic number: if (join.screenOne == name)              {                  NextScreenName = join.screenTwo;                  if (join.type == JoinType.Horizontal)   // bottom edge                  {                      direction = Direction.Down;                      threshXmin = join.offsetOne * tileSize;                      threshYmin = height - Const.PlayerScrollTrigger;                      threshXmax = threshXmin + size;                      threshYmax = height + 100;                      NextScreenX = (join.offsetTwo - join.offsetOne) * tileSize;                  }                  else // right edge                  {                      direction = Direction.Right;                      threshXmin = width - Const.PlayerScrollTrigger;                      threshYmin = join.offsetOne * tileSize;                      threshXmax = width + 100;                      threshYmax = threshYmin + size;                      NextScreenY = (join.offsetTwo - join.offsetOne) * tileSize;                  }              }              else              {                  NextScreenName = join.screenOne;                  if (join.type == JoinType.Horizontal)   // top edge                  {                      direction = Direction.Up;                      threshXmin = join.offsetTwo * tileSize;                      threshYmin = -100;                      threshXmax = threshXmin + size;                      threshYmax = Const.PlayerScrollTrigger;                      NextScreenX = (join.offsetOne - join.offsetTwo) * tileSize;                  }                  else // left edge                  {                      direction = Direction.Left;                      threshXmin = -100;                      threshYmin = join.offsetTwo * tileSize;                      threshXmax = Const.PlayerScrollTrigger;                      threshYmax = threshYmin + size;                      NextScreenY = (join.offsetOne - join.offsetTwo) * tileSize;                  }              }
Magic Number,MegaMan.Engine,JoinHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\JoinHandler.cs,JoinHandler,The following statement contains a magic number: if (join.screenOne == name)              {                  NextScreenName = join.screenTwo;                  if (join.type == JoinType.Horizontal)   // bottom edge                  {                      direction = Direction.Down;                      threshXmin = join.offsetOne * tileSize;                      threshYmin = height - Const.PlayerScrollTrigger;                      threshXmax = threshXmin + size;                      threshYmax = height + 100;                      NextScreenX = (join.offsetTwo - join.offsetOne) * tileSize;                  }                  else // right edge                  {                      direction = Direction.Right;                      threshXmin = width - Const.PlayerScrollTrigger;                      threshYmin = join.offsetOne * tileSize;                      threshXmax = width + 100;                      threshYmax = threshYmin + size;                      NextScreenY = (join.offsetTwo - join.offsetOne) * tileSize;                  }              }              else              {                  NextScreenName = join.screenOne;                  if (join.type == JoinType.Horizontal)   // top edge                  {                      direction = Direction.Up;                      threshXmin = join.offsetTwo * tileSize;                      threshYmin = -100;                      threshXmax = threshXmin + size;                      threshYmax = Const.PlayerScrollTrigger;                      NextScreenX = (join.offsetOne - join.offsetTwo) * tileSize;                  }                  else // left edge                  {                      direction = Direction.Left;                      threshXmin = -100;                      threshYmin = join.offsetTwo * tileSize;                      threshXmax = Const.PlayerScrollTrigger;                      threshYmax = threshYmin + size;                      NextScreenY = (join.offsetOne - join.offsetTwo) * tileSize;                  }              }
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(16' 10);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(16' 10);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(23' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(23' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.upkeylabel.Location = new System.Drawing.Point(45' 10);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.upkeylabel.Location = new System.Drawing.Point(45' 10);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.upkeylabel.Size = new System.Drawing.Size(35' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.upkeylabel.Size = new System.Drawing.Size(35' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(10' 35);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(10' 35);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(29' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(29' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 2;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.leftkeylabel.Location = new System.Drawing.Point(45' 35);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.leftkeylabel.Location = new System.Drawing.Point(45' 35);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.leftkeylabel.Size = new System.Drawing.Size(35' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.leftkeylabel.Size = new System.Drawing.Size(35' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.leftkeylabel.TabIndex = 3;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(3' 59);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(3' 59);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(36' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(36' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 4;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.jumpkeylabel.Location = new System.Drawing.Point(45' 59);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.jumpkeylabel.Location = new System.Drawing.Point(45' 59);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.jumpkeylabel.Size = new System.Drawing.Size(35' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.jumpkeylabel.Size = new System.Drawing.Size(35' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.jumpkeylabel.TabIndex = 5;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(3' 85);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(3' 85);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(34' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(34' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label7.TabIndex = 6;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.startkeylabel.Location = new System.Drawing.Point(45' 85);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.startkeylabel.Location = new System.Drawing.Point(45' 85);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.startkeylabel.Size = new System.Drawing.Size(35' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.startkeylabel.Size = new System.Drawing.Size(35' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.startkeylabel.TabIndex = 7;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(173' 10);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(173' 10);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(39' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(39' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label9.TabIndex = 8;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.downkeylabel.Location = new System.Drawing.Point(218' 10);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.downkeylabel.Location = new System.Drawing.Point(218' 10);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.downkeylabel.Size = new System.Drawing.Size(41' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.downkeylabel.Size = new System.Drawing.Size(41' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.downkeylabel.TabIndex = 9;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label11.Location = new System.Drawing.Point(175' 35);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label11.Location = new System.Drawing.Point(175' 35);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label11.Size = new System.Drawing.Size(37' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label11.Size = new System.Drawing.Size(37' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label11.TabIndex = 10;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.rightkeylabel.Location = new System.Drawing.Point(218' 35);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.rightkeylabel.Location = new System.Drawing.Point(218' 35);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.rightkeylabel.Size = new System.Drawing.Size(41' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.rightkeylabel.Size = new System.Drawing.Size(41' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.rightkeylabel.TabIndex = 11;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label13.Location = new System.Drawing.Point(172' 59);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label13.Location = new System.Drawing.Point(172' 59);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label13.Size = new System.Drawing.Size(40' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label13.Size = new System.Drawing.Size(40' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label13.TabIndex = 12;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.shootkeylabel.Location = new System.Drawing.Point(218' 59);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.shootkeylabel.Location = new System.Drawing.Point(218' 59);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.shootkeylabel.Size = new System.Drawing.Size(41' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.shootkeylabel.Size = new System.Drawing.Size(41' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.shootkeylabel.TabIndex = 13;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label15.Location = new System.Drawing.Point(169' 85);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label15.Location = new System.Drawing.Point(169' 85);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label15.Size = new System.Drawing.Size(43' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label15.Size = new System.Drawing.Size(43' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.label15.TabIndex = 14;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.selectkeylabel.Location = new System.Drawing.Point(218' 85);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.selectkeylabel.Location = new System.Drawing.Point(218' 85);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.selectkeylabel.Size = new System.Drawing.Size(41' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.selectkeylabel.Size = new System.Drawing.Size(41' 13);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.selectkeylabel.TabIndex = 15;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(92' 5);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(92' 5);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button2.Location = new System.Drawing.Point(92' 80);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button2.Location = new System.Drawing.Point(92' 80);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button2.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button2.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button2.TabIndex = 7;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button3.Location = new System.Drawing.Point(265' 80);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button3.Location = new System.Drawing.Point(265' 80);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button3.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button3.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button3.TabIndex = 8;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button4.Location = new System.Drawing.Point(265' 54);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button4.Location = new System.Drawing.Point(265' 54);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button4.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button4.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button4.TabIndex = 6;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button5.Location = new System.Drawing.Point(265' 30);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button5.Location = new System.Drawing.Point(265' 30);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button5.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button5.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button5.TabIndex = 4;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button6.Location = new System.Drawing.Point(265' 5);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button6.Location = new System.Drawing.Point(265' 5);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button6.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button6.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button6.TabIndex = 2;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button7.Location = new System.Drawing.Point(92' 54);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button7.Location = new System.Drawing.Point(92' 54);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button7.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button7.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button7.TabIndex = 5;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button8.Location = new System.Drawing.Point(92' 30);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button8.Location = new System.Drawing.Point(92' 30);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button8.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button8.Size = new System.Drawing.Size(57' 23);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.button8.TabIndex = 3;
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(340' 111);
Magic Number,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(340' 111);
Magic Number,MegaMan.Engine,LadderComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\LadderComponent.cs,Grab,The following statement contains a magic number: if (InReach)              {                  position.SetPosition(new PointF(inReachTile.ScreenX + inReachTile.Tile.Width / 2' position.Position.Y));              }
Magic Number,MegaMan.Engine,LadderComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\LadderComponent.cs,StandOn,The following statement contains a magic number: if (position != null && aboveTile != null)              {                  position.SetPosition(new PointF(aboveTile.ScreenX + aboveTile.Tile.Width / 2' (Parent.IsGravitySensitive && Parent.Container.IsGravityFlipped) ? aboveTile.ScreenY + aboveTile.BoundBox.Height + 9 : aboveTile.ScreenY - 9));              }
Magic Number,MegaMan.Engine,LadderComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\LadderComponent.cs,StandOn,The following statement contains a magic number: if (position != null && aboveTile != null)              {                  position.SetPosition(new PointF(aboveTile.ScreenX + aboveTile.Tile.Width / 2' (Parent.IsGravitySensitive && Parent.Container.IsGravityFlipped) ? aboveTile.ScreenY + aboveTile.BoundBox.Height + 9 : aboveTile.ScreenY - 9));              }
Magic Number,MegaMan.Engine,LadderComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\LadderComponent.cs,StandOn,The following statement contains a magic number: if (position != null && aboveTile != null)              {                  position.SetPosition(new PointF(aboveTile.ScreenX + aboveTile.Tile.Width / 2' (Parent.IsGravitySensitive && Parent.Container.IsGravityFlipped) ? aboveTile.ScreenY + aboveTile.BoundBox.Height + 9 : aboveTile.ScreenY - 9));              }
Magic Number,MegaMan.Engine,LadderComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\LadderComponent.cs,ClimbDown,The following statement contains a magic number: if (position != null && aboveTile != null)              {                  position.SetPosition(new PointF(aboveTile.ScreenX + aboveTile.Tile.Width / 2' (Parent.IsGravitySensitive && Parent.Container.IsGravityFlipped) ? aboveTile.ScreenY + aboveTile.BoundBox.Height + 2 : aboveTile.ScreenY - 2));              }
Magic Number,MegaMan.Engine,LadderComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\LadderComponent.cs,ClimbDown,The following statement contains a magic number: if (position != null && aboveTile != null)              {                  position.SetPosition(new PointF(aboveTile.ScreenX + aboveTile.Tile.Width / 2' (Parent.IsGravitySensitive && Parent.Container.IsGravityFlipped) ? aboveTile.ScreenY + aboveTile.BoundBox.Height + 2 : aboveTile.ScreenY - 2));              }
Magic Number,MegaMan.Engine,LadderComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\LadderComponent.cs,ClimbDown,The following statement contains a magic number: if (position != null && aboveTile != null)              {                  position.SetPosition(new PointF(aboveTile.ScreenX + aboveTile.Tile.Width / 2' (Parent.IsGravitySensitive && Parent.Container.IsGravityFlipped) ? aboveTile.ScreenY + aboveTile.BoundBox.Height + 2 : aboveTile.ScreenY - 2));              }
Magic Number,MegaMan.Engine,LadderComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\LadderComponent.cs,CheckAtTop,The following statement contains a magic number: if (Parent.IsGravitySensitive && Parent.Container.IsGravityFlipped)              {                  above = Parent.Screen.TileAt(inReachTile.X * Parent.Screen.TileSize' (inReachTile.Y + 1) * Parent.Screen.TileSize);                  if (above != null && !above.Properties.Climbable)                  {                      if (reachRect.Height < 5 && reachRect.Bottom == inReachTile.BoundBox.Bottom)	// at the top                      {                          atTop = true;                      }                  }              }              else              {                  above = Parent.Screen.TileAt(inReachTile.X * Parent.Screen.TileSize' (inReachTile.Y - 1) * Parent.Screen.TileSize);                  if (above != null && !above.Properties.Climbable)                  {                      if (reachRect.Height < 5 && reachRect.Top == inReachTile.BoundBox.Top)	// at the top                      {                          atTop = true;                      }                  }              }
Magic Number,MegaMan.Engine,LadderComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\LadderComponent.cs,CheckAtTop,The following statement contains a magic number: if (Parent.IsGravitySensitive && Parent.Container.IsGravityFlipped)              {                  above = Parent.Screen.TileAt(inReachTile.X * Parent.Screen.TileSize' (inReachTile.Y + 1) * Parent.Screen.TileSize);                  if (above != null && !above.Properties.Climbable)                  {                      if (reachRect.Height < 5 && reachRect.Bottom == inReachTile.BoundBox.Bottom)	// at the top                      {                          atTop = true;                      }                  }              }              else              {                  above = Parent.Screen.TileAt(inReachTile.X * Parent.Screen.TileSize' (inReachTile.Y - 1) * Parent.Screen.TileSize);                  if (above != null && !above.Properties.Climbable)                  {                      if (reachRect.Height < 5 && reachRect.Top == inReachTile.BoundBox.Top)	// at the top                      {                          atTop = true;                      }                  }              }
Magic Number,MegaMan.Engine,ScreenLayer,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenLayer.cs,Draw,The following statement contains a magic number: var layer = _info.Foreground ? 5 : 0;
Magic Number,MegaMan.Engine,MapSquare,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\MapSquare.cs,LoadLadderBoxes,The following statement contains a magic number: if (below != null && !below.Tile.Properties.Climbable)              {                  flipLadderBox = blockBox;                  flipLadderBox.Offset(0' flipLadderBox.Height - 4);                  flipLadderBox.Height = 4;              }              else flipLadderBox = RectangleF.Empty;
Magic Number,MegaMan.Engine,MapSquare,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\MapSquare.cs,LoadLadderBoxes,The following statement contains a magic number: if (below != null && !below.Tile.Properties.Climbable)              {                  flipLadderBox = blockBox;                  flipLadderBox.Offset(0' flipLadderBox.Height - 4);                  flipLadderBox.Height = 4;              }              else flipLadderBox = RectangleF.Empty;
Magic Number,MegaMan.Engine,MapSquare,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\MapSquare.cs,LoadLadderBoxes,The following statement contains a magic number: if (above != null && !above.Tile.Properties.Climbable)              {                  ladderBox = blockBox;                  ladderBox.Height = 4;              }              else ladderBox = RectangleF.Empty;
Magic Number,MegaMan.Engine,Game,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Game.cs,ProcessCommandLineArgs,The following statement contains a magic number: if (parts.Length != 2)              {                  throw new GameRunException("The starting point given by command line argument was invalid.");              }
Magic Number,MegaMan.Engine,Game,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Game.cs,ProcessCommandLineArgs,The following statement contains a magic number: switch (parts[0].ToUpper())              {                  case "SCENE":                      _stateMachine.StartScene(new HandlerTransfer() { Name = name' Mode = HandlerMode.Next });                      break;                    case "STAGE":                      var screen = (pathArgs.Count > 1) ? pathArgs[1] : null;                      Point? startPos = null;                      if (pathArgs.Count > 2)                      {                          var point = pathArgs[2];                          var coords = point.Split(''');                          startPos = new Point(int.Parse(coords[0])' int.Parse(coords[1]));                      }                      _stateMachine.StartStage(name' screen' startPos);                      break;                    case "MENU":                      _stateMachine.StartMenu(new HandlerTransfer() { Name = name' Mode = HandlerMode.Next });                      break;                    default:                      throw new GameRunException("The starting point given by command line argument was invalid.");              }
Magic Number,MegaMan.Engine,Game,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Game.cs,ProcessCommandLineArgs,The following statement contains a magic number: switch (parts[0].ToUpper())              {                  case "SCENE":                      _stateMachine.StartScene(new HandlerTransfer() { Name = name' Mode = HandlerMode.Next });                      break;                    case "STAGE":                      var screen = (pathArgs.Count > 1) ? pathArgs[1] : null;                      Point? startPos = null;                      if (pathArgs.Count > 2)                      {                          var point = pathArgs[2];                          var coords = point.Split(''');                          startPos = new Point(int.Parse(coords[0])' int.Parse(coords[1]));                      }                      _stateMachine.StartStage(name' screen' startPos);                      break;                    case "MENU":                      _stateMachine.StartMenu(new HandlerTransfer() { Name = name' Mode = HandlerMode.Next });                      break;                    default:                      throw new GameRunException("The starting point given by command line argument was invalid.");              }
Magic Number,MegaMan.Engine,Menu,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\Menu.cs,GameInputReceived,The following statement contains a magic number: if (e.Input == GameInput.Start)              {                  var select = this.options[selectedId].SelectEvent;                  if (select != null)                  {                      RunCommands(select);                  }              }              else if (e.Input == GameInput.Down)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                        int ydist = info.Y - currentPos.Y;                      if (ydist == 0) continue;                        if (ydist < 0) ydist += Game.CurrentGame.PixelsDown;    // wrapping around bottom                        // weight x distance worse than y distance                      int dist = 2 * Math.Abs(info.X - currentPos.X) + ydist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }              else if (e.Input == GameInput.Up)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                      int ydist = currentPos.Y - info.Y;                      if (ydist == 0) continue;                        if (ydist < 0) ydist += Game.CurrentGame.PixelsDown;    // wrapping around bottom                        // weight x distance worse than y distance                      int dist = 2 * Math.Abs(info.X - currentPos.X) + ydist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }              else if (e.Input == GameInput.Right)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                      int xdist = info.X - currentPos.X;                      if (xdist == 0) continue;                        if (xdist < 0) xdist += Game.CurrentGame.PixelsAcross;    // wrapping around bottom                        int dist = 2 * Math.Abs(info.Y - currentPos.Y) + xdist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }              else if (e.Input == GameInput.Left)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                      int xdist = currentPos.X - info.X;                      if (xdist == 0) continue;                        if (xdist < 0) xdist += Game.CurrentGame.PixelsAcross;    // wrapping around bottom                        int dist = 2 * Math.Abs(info.Y - currentPos.Y) + xdist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }
Magic Number,MegaMan.Engine,Menu,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\Menu.cs,GameInputReceived,The following statement contains a magic number: if (e.Input == GameInput.Start)              {                  var select = this.options[selectedId].SelectEvent;                  if (select != null)                  {                      RunCommands(select);                  }              }              else if (e.Input == GameInput.Down)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                        int ydist = info.Y - currentPos.Y;                      if (ydist == 0) continue;                        if (ydist < 0) ydist += Game.CurrentGame.PixelsDown;    // wrapping around bottom                        // weight x distance worse than y distance                      int dist = 2 * Math.Abs(info.X - currentPos.X) + ydist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }              else if (e.Input == GameInput.Up)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                      int ydist = currentPos.Y - info.Y;                      if (ydist == 0) continue;                        if (ydist < 0) ydist += Game.CurrentGame.PixelsDown;    // wrapping around bottom                        // weight x distance worse than y distance                      int dist = 2 * Math.Abs(info.X - currentPos.X) + ydist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }              else if (e.Input == GameInput.Right)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                      int xdist = info.X - currentPos.X;                      if (xdist == 0) continue;                        if (xdist < 0) xdist += Game.CurrentGame.PixelsAcross;    // wrapping around bottom                        int dist = 2 * Math.Abs(info.Y - currentPos.Y) + xdist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }              else if (e.Input == GameInput.Left)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                      int xdist = currentPos.X - info.X;                      if (xdist == 0) continue;                        if (xdist < 0) xdist += Game.CurrentGame.PixelsAcross;    // wrapping around bottom                        int dist = 2 * Math.Abs(info.Y - currentPos.Y) + xdist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }
Magic Number,MegaMan.Engine,Menu,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\Menu.cs,GameInputReceived,The following statement contains a magic number: if (e.Input == GameInput.Start)              {                  var select = this.options[selectedId].SelectEvent;                  if (select != null)                  {                      RunCommands(select);                  }              }              else if (e.Input == GameInput.Down)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                        int ydist = info.Y - currentPos.Y;                      if (ydist == 0) continue;                        if (ydist < 0) ydist += Game.CurrentGame.PixelsDown;    // wrapping around bottom                        // weight x distance worse than y distance                      int dist = 2 * Math.Abs(info.X - currentPos.X) + ydist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }              else if (e.Input == GameInput.Up)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                      int ydist = currentPos.Y - info.Y;                      if (ydist == 0) continue;                        if (ydist < 0) ydist += Game.CurrentGame.PixelsDown;    // wrapping around bottom                        // weight x distance worse than y distance                      int dist = 2 * Math.Abs(info.X - currentPos.X) + ydist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }              else if (e.Input == GameInput.Right)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                      int xdist = info.X - currentPos.X;                      if (xdist == 0) continue;                        if (xdist < 0) xdist += Game.CurrentGame.PixelsAcross;    // wrapping around bottom                        int dist = 2 * Math.Abs(info.Y - currentPos.Y) + xdist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }              else if (e.Input == GameInput.Left)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                      int xdist = currentPos.X - info.X;                      if (xdist == 0) continue;                        if (xdist < 0) xdist += Game.CurrentGame.PixelsAcross;    // wrapping around bottom                        int dist = 2 * Math.Abs(info.Y - currentPos.Y) + xdist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }
Magic Number,MegaMan.Engine,Menu,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\Menu.cs,GameInputReceived,The following statement contains a magic number: if (e.Input == GameInput.Start)              {                  var select = this.options[selectedId].SelectEvent;                  if (select != null)                  {                      RunCommands(select);                  }              }              else if (e.Input == GameInput.Down)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                        int ydist = info.Y - currentPos.Y;                      if (ydist == 0) continue;                        if (ydist < 0) ydist += Game.CurrentGame.PixelsDown;    // wrapping around bottom                        // weight x distance worse than y distance                      int dist = 2 * Math.Abs(info.X - currentPos.X) + ydist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }              else if (e.Input == GameInput.Up)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                      int ydist = currentPos.Y - info.Y;                      if (ydist == 0) continue;                        if (ydist < 0) ydist += Game.CurrentGame.PixelsDown;    // wrapping around bottom                        // weight x distance worse than y distance                      int dist = 2 * Math.Abs(info.X - currentPos.X) + ydist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }              else if (e.Input == GameInput.Right)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                      int xdist = info.X - currentPos.X;                      if (xdist == 0) continue;                        if (xdist < 0) xdist += Game.CurrentGame.PixelsAcross;    // wrapping around bottom                        int dist = 2 * Math.Abs(info.Y - currentPos.Y) + xdist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }              else if (e.Input == GameInput.Left)              {                  for (var i = 0; i < options.Count; i++)                  {                      if (i == selectedId) continue;                        var info = options[i];                      int xdist = currentPos.X - info.X;                      if (xdist == 0) continue;                        if (xdist < 0) xdist += Game.CurrentGame.PixelsAcross;    // wrapping around bottom                        int dist = 2 * Math.Abs(info.Y - currentPos.Y) + xdist;                      if (dist < min)                      {                          min = dist;                          id = i;                      }                  }              }
Magic Number,MegaMan.Engine,Player,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Player.cs,Player,The following statement contains a magic number: Lives = 2;
Magic Number,MegaMan.Engine,PositionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\PositionComponent.cs,SetPosition,The following statement contains a magic number: pos.X = (float)Math.Round(pos.X' 3);
Magic Number,MegaMan.Engine,PositionComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\PositionComponent.cs,SetPosition,The following statement contains a magic number: pos.Y = (float)Math.Round(pos.Y' 3);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,OnLoad,The following statement contains a magic number: try              {                  var args = Environment.GetCommandLineArgs();                    base.OnLoad(e);                    if (args.Length > 1)                  {                      var path = args[1];                      var start = (args.Length > 2) ? args[2] : null;                        LoadGame(path' args.Skip(2).ToList());                  }                  else                  {                      try                      {                          LoadGlobalConfigValues();                          LoadCurrentConfig();                            string autoLoadGame = settingsService.GetAutoLoadGame();                          if (autoLoadGame != null)                          {                              if (!LoadGame(autoLoadGame' null' true))                              {                                  // Game we try to autoload failed. Now set autoload to when no game is loaded                                  autoloadToolStripMenuItem.Checked = true;                                  SaveGlobalConfigValues();                              }                              else                              {                                  OnGameLoaded();                              }                          }                      }                      catch (Exception x)                      {                          MessageBox.Show(x.Message); // If a line in config file is wrong' this is gonna tell user.                          MessageBox.Show("The config file could was not loaded successfully.");                      }                  }              }              catch (Exception)              {              }
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,OnLoad,The following statement contains a magic number: try              {                  var args = Environment.GetCommandLineArgs();                    base.OnLoad(e);                    if (args.Length > 1)                  {                      var path = args[1];                      var start = (args.Length > 2) ? args[2] : null;                        LoadGame(path' args.Skip(2).ToList());                  }                  else                  {                      try                      {                          LoadGlobalConfigValues();                          LoadCurrentConfig();                            string autoLoadGame = settingsService.GetAutoLoadGame();                          if (autoLoadGame != null)                          {                              if (!LoadGame(autoLoadGame' null' true))                              {                                  // Game we try to autoload failed. Now set autoload to when no game is loaded                                  autoloadToolStripMenuItem.Checked = true;                                  SaveGlobalConfigValues();                              }                              else                              {                                  OnGameLoaded();                              }                          }                      }                      catch (Exception x)                      {                          MessageBox.Show(x.Message); // If a line in config file is wrong' this is gonna tell user.                          MessageBox.Show("The config file could was not loaded successfully.");                      }                  }              }              catch (Exception)              {              }
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,OnLoad,The following statement contains a magic number: try              {                  var args = Environment.GetCommandLineArgs();                    base.OnLoad(e);                    if (args.Length > 1)                  {                      var path = args[1];                      var start = (args.Length > 2) ? args[2] : null;                        LoadGame(path' args.Skip(2).ToList());                  }                  else                  {                      try                      {                          LoadGlobalConfigValues();                          LoadCurrentConfig();                            string autoLoadGame = settingsService.GetAutoLoadGame();                          if (autoLoadGame != null)                          {                              if (!LoadGame(autoLoadGame' null' true))                              {                                  // Game we try to autoload failed. Now set autoload to when no game is loaded                                  autoloadToolStripMenuItem.Checked = true;                                  SaveGlobalConfigValues();                              }                              else                              {                                  OnGameLoaded();                              }                          }                      }                      catch (Exception x)                      {                          MessageBox.Show(x.Message); // If a line in config file is wrong' this is gonna tell user.                          MessageBox.Show("The config file could was not loaded successfully.");                      }                  }              }              catch (Exception)              {              }
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeControllers,The following statement contains a magic number: this.controllers = new List<IMenuController>() {                  b' s1' s2' s3' s4' f'                  new ActivateAllMenuController(activateAllToolStripMenuItem' b' s1' s2' s3' s4' f)'                  new AudioMenuController(sq1MenuItem' 1)'                  new AudioMenuController(sq2MenuItem' 2)'                  new AudioMenuController(triMenuItem' 3)'                  new AudioMenuController(noiseMenuItem' 4)'                  screen1xControl'                  screen2xControl'                  screen3xControl'                  screen4xControl'                  compositeControl'                  svideoControl'                  rgbControl'                  fullScreenControl'                  new PixellatedMenuController(pixellatedToolStripMenuItem' PixellatedOrSmoothed.Pixellated' pixellatedCtrl)'                  new PixellatedMenuController(smoothedToolStripMenuItem' PixellatedOrSmoothed.Smoothed' pixellatedCtrl)              };
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeControllers,The following statement contains a magic number: this.controllers = new List<IMenuController>() {                  b' s1' s2' s3' s4' f'                  new ActivateAllMenuController(activateAllToolStripMenuItem' b' s1' s2' s3' s4' f)'                  new AudioMenuController(sq1MenuItem' 1)'                  new AudioMenuController(sq2MenuItem' 2)'                  new AudioMenuController(triMenuItem' 3)'                  new AudioMenuController(noiseMenuItem' 4)'                  screen1xControl'                  screen2xControl'                  screen3xControl'                  screen4xControl'                  compositeControl'                  svideoControl'                  rgbControl'                  fullScreenControl'                  new PixellatedMenuController(pixellatedToolStripMenuItem' PixellatedOrSmoothed.Pixellated' pixellatedCtrl)'                  new PixellatedMenuController(smoothedToolStripMenuItem' PixellatedOrSmoothed.Smoothed' pixellatedCtrl)              };
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeControllers,The following statement contains a magic number: this.controllers = new List<IMenuController>() {                  b' s1' s2' s3' s4' f'                  new ActivateAllMenuController(activateAllToolStripMenuItem' b' s1' s2' s3' s4' f)'                  new AudioMenuController(sq1MenuItem' 1)'                  new AudioMenuController(sq2MenuItem' 2)'                  new AudioMenuController(triMenuItem' 3)'                  new AudioMenuController(noiseMenuItem' 4)'                  screen1xControl'                  screen2xControl'                  screen3xControl'                  screen4xControl'                  compositeControl'                  svideoControl'                  rgbControl'                  fullScreenControl'                  new PixellatedMenuController(pixellatedToolStripMenuItem' PixellatedOrSmoothed.Pixellated' pixellatedCtrl)'                  new PixellatedMenuController(smoothedToolStripMenuItem' PixellatedOrSmoothed.Smoothed' pixellatedCtrl)              };
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,loadConfigurationToolStripMenuItem_Click,The following statement contains a magic number: loadConfigForm.Location = new Point(this.Location.X + (this.Size.Width - loadConfigForm.Size.Width) / 2' this.Location.Y + (this.Size.Height - loadConfigForm.Size.Height) / 2);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,loadConfigurationToolStripMenuItem_Click,The following statement contains a magic number: loadConfigForm.Location = new Point(this.Location.X + (this.Size.Width - loadConfigForm.Size.Width) / 2' this.Location.Y + (this.Size.Height - loadConfigForm.Size.Height) / 2);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,deleteConfigurationsToolStripMenuItem_Click,The following statement contains a magic number: deleteConfigsForm.Location = new Point(this.Location.X + (this.Size.Width - deleteConfigsForm.Size.Width) / 2' this.Location.Y + (this.Size.Height - deleteConfigsForm.Size.Height) / 2);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,deleteConfigurationsToolStripMenuItem_Click,The following statement contains a magic number: deleteConfigsForm.Location = new Point(this.Location.X + (this.Size.Width - deleteConfigsForm.Size.Width) / 2' this.Location.Y + (this.Size.Height - deleteConfigsForm.Size.Height) / 2);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,keyboardToolStripMenuItem_Click,The following statement contains a magic number: keyform.Location = new Point(this.Location.X + (this.Size.Width - keyform.Size.Width) / 2' this.Location.Y + (this.Size.Height - keyform.Size.Height) / 2);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,keyboardToolStripMenuItem_Click,The following statement contains a magic number: keyform.Location = new Point(this.Location.X + (this.Size.Width - keyform.Size.Width) / 2' this.Location.Y + (this.Size.Height - keyform.Size.Height) / 2);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,ScaleScreen,The following statement contains a magic number: if (scale == ScreenScale.X1)              {                  widthZoom = heightZoom = 1;              }              else if (scale == ScreenScale.X2)              {                  widthZoom = heightZoom = 2;              }              else if (scale == ScreenScale.X3)              {                  widthZoom = heightZoom = 3;              }              else if (scale == ScreenScale.X4)              {                  widthZoom = heightZoom = 4;              }
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,ScaleScreen,The following statement contains a magic number: if (scale == ScreenScale.X1)              {                  widthZoom = heightZoom = 1;              }              else if (scale == ScreenScale.X2)              {                  widthZoom = heightZoom = 2;              }              else if (scale == ScreenScale.X3)              {                  widthZoom = heightZoom = 3;              }              else if (scale == ScreenScale.X4)              {                  widthZoom = heightZoom = 4;              }
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,ScaleScreen,The following statement contains a magic number: if (scale == ScreenScale.X1)              {                  widthZoom = heightZoom = 1;              }              else if (scale == ScreenScale.X2)              {                  widthZoom = heightZoom = 2;              }              else if (scale == ScreenScale.X3)              {                  widthZoom = heightZoom = 3;              }              else if (scale == ScreenScale.X4)              {                  widthZoom = heightZoom = 4;              }
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,NtscScreen,The following statement contains a magic number: if (width != 256 || height != 224) return;
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,NtscScreen,The following statement contains a magic number: if (width != 256 || height != 224) return;
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,NtscScreen,The following statement contains a magic number: ResizeScreen(602' 448);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,NtscScreen,The following statement contains a magic number: ResizeScreen(602' 448);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,ntscCustom_Click,The following statement contains a magic number: customNtscForm.Location = new Point(this.Location.X + (this.Size.Width - customNtscForm.Size.Width) / 2' this.Location.Y + (this.Size.Height - customNtscForm.Size.Height) / 2);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,ntscCustom_Click,The following statement contains a magic number: customNtscForm.Location = new Point(this.Location.X + (this.Size.Width - customNtscForm.Size.Width) / 2' this.Location.Y + (this.Size.Height - customNtscForm.Size.Height) / 2);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,framerateUpToolStripMenuItem_Click,The following statement contains a magic number: SetFrameRate(Engine.Instance.FPS + 10);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,framerateDownToolStripMenuItem_Click,The following statement contains a magic number: SetFrameRate(Engine.Instance.FPS - 10);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,SetLayersVisibilityFromSettings,The following statement contains a magic number: Engine.Instance.SetLayerVisibility(2' sprites2ToolStripMenuItem.Checked);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,SetLayersVisibilityFromSettings,The following statement contains a magic number: Engine.Instance.SetLayerVisibility(3' sprites3ToolStripMenuItem.Checked);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,SetLayersVisibilityFromSettings,The following statement contains a magic number: Engine.Instance.SetLayerVisibility(4' sprites4ToolStripMenuItem.Checked);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,SetLayersVisibilityFromSettings,The following statement contains a magic number: Engine.Instance.SetLayerVisibility(5' foregroundToolStripMenuItem.Checked);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,Game_ScreenSizeChanged,The following statement contains a magic number: if (width != 256 || height != 224)              {                  xnaImage.NTSC = false;              }
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,Game_ScreenSizeChanged,The following statement contains a magic number: if (width != 256 || height != 224)              {                  xnaImage.NTSC = false;              }
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,Game_ScreenSizeChanged,The following statement contains a magic number: if (xnaImage.NTSC)              {                  ResizeScreen(602' 448);              }              else              {                  // normal zoomed size                  ResizeScreen();              }
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,Game_ScreenSizeChanged,The following statement contains a magic number: if (xnaImage.NTSC)              {                  ResizeScreen(602' 448);              }              else              {                  // normal zoomed size                  ResizeScreen();              }
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,Instance_GameLogicTick,The following statement contains a magic number: thinkLabel.Text = "Busy: " + (Engine.Instance.ThinkTime * 100).ToString("N0") + "%";
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new System.Drawing.Size(294' 24);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new System.Drawing.Size(294' 24);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new System.Drawing.Size(37' 20);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new System.Drawing.Size(37' 20);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.loadToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.loadToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.resetToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.resetToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.closeGameToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.closeGameToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.quitToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.quitToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator7.Size = new System.Drawing.Size(249' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator7.Size = new System.Drawing.Size(249' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.pauseEngineToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.pauseEngineToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator9.Size = new System.Drawing.Size(249' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator9.Size = new System.Drawing.Size(249' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.autosaveToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.autosaveToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.defaultConfigToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.defaultConfigToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.loadConfigurationToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.loadConfigurationToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.saveConfigurationsToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.saveConfigurationsToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.deleteConfigurationsToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.deleteConfigurationsToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator10.Size = new System.Drawing.Size(249' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator10.Size = new System.Drawing.Size(249' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.autoloadToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.autoloadToolStripMenuItem.Size = new System.Drawing.Size(252' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.inputToolStripMenuItem.Size = new System.Drawing.Size(47' 20);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.inputToolStripMenuItem.Size = new System.Drawing.Size(47' 20);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.keyboardToolStripMenuItem.Size = new System.Drawing.Size(161' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.keyboardToolStripMenuItem.Size = new System.Drawing.Size(161' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.audioToolStripMenuItem.Size = new System.Drawing.Size(51' 20);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.audioToolStripMenuItem.Size = new System.Drawing.Size(51' 20);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.musicMenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.musicMenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sfxMenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sfxMenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator8.Size = new System.Drawing.Size(260' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator8.Size = new System.Drawing.Size(260' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sq1MenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sq1MenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sq2MenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sq2MenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.triMenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.triMenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.noiseMenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.noiseMenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator3.Size = new System.Drawing.Size(260' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator3.Size = new System.Drawing.Size(260' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.increaseVolumeToolStripMenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.increaseVolumeToolStripMenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.decreaseVolumeToolStripMenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.decreaseVolumeToolStripMenuItem.Size = new System.Drawing.Size(263' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screenToolStripMenuItem.Size = new System.Drawing.Size(54' 20);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screenToolStripMenuItem.Size = new System.Drawing.Size(54' 20);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screen1XMenu.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screen1XMenu.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screen2XMenu.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screen2XMenu.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screen3XMenu.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screen3XMenu.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screen4XMenu.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screen4XMenu.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screenNTSCMenu.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screenNTSCMenu.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ntscComposite.Size = new System.Drawing.Size(132' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ntscComposite.Size = new System.Drawing.Size(132' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ntscSVideo.Size = new System.Drawing.Size(132' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ntscSVideo.Size = new System.Drawing.Size(132' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ntscRGB.Size = new System.Drawing.Size(132' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ntscRGB.Size = new System.Drawing.Size(132' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ntscCustom.Size = new System.Drawing.Size(132' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ntscCustom.Size = new System.Drawing.Size(132' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fullScreenToolStripMenuItem.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fullScreenToolStripMenuItem.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(151' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(151' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.pixellatedToolStripMenuItem.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.pixellatedToolStripMenuItem.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.smoothedToolStripMenuItem.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.smoothedToolStripMenuItem.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator4.Size = new System.Drawing.Size(151' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator4.Size = new System.Drawing.Size(151' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.hideMenuItem.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.hideMenuItem.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screenshotMenuItem.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.screenshotMenuItem.Size = new System.Drawing.Size(154' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.debugToolStripMenuItem.Size = new System.Drawing.Size(54' 20);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.debugToolStripMenuItem.Size = new System.Drawing.Size(54' 20);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.debugBarToolStripMenuItem.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.debugBarToolStripMenuItem.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(233' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(233' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.showHitboxesToolStripMenuItem.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.showHitboxesToolStripMenuItem.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.debugCheatMenu.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.debugCheatMenu.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.noDamageToolStripMenuItem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.noDamageToolStripMenuItem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.invincibilityToolStripMenuItem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.invincibilityToolStripMenuItem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.gravityFlipToolStripMenuItem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.gravityFlipToolStripMenuItem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.emptyHealthMenuItem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.emptyHealthMenuItem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fillHealthMenuItem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fillHealthMenuItem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.emptyWeaponMenuItem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.emptyWeaponMenuItem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fillWeaponMenuIem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fillWeaponMenuIem.Size = new System.Drawing.Size(214' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.layersToolStripMenuItem.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.layersToolStripMenuItem.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.backgroundToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.backgroundToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sprites1ToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sprites1ToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sprites2ToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sprites2ToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sprites3ToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sprites3ToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sprites4ToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.sprites4ToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.foregroundToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.foregroundToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator5.Size = new System.Drawing.Size(164' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator5.Size = new System.Drawing.Size(164' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.activateAllToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.activateAllToolStripMenuItem.Size = new System.Drawing.Size(167' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator6.Size = new System.Drawing.Size(233' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator6.Size = new System.Drawing.Size(233' 6);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.framerateUpToolStripMenuItem.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.framerateUpToolStripMenuItem.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.framerateDownToolStripMenuItem.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.framerateDownToolStripMenuItem.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.defaultFramerateToolStripMenuItem.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.defaultFramerateToolStripMenuItem.Size = new System.Drawing.Size(236' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.debugBar.Location = new System.Drawing.Point(0' 272);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.debugBar.Size = new System.Drawing.Size(294' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.debugBar.Size = new System.Drawing.Size(294' 22);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.debugBar.TabIndex = 2;
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fpsLabel.Size = new System.Drawing.Size(13' 17);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fpsLabel.Size = new System.Drawing.Size(13' 17);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.thinkLabel.Size = new System.Drawing.Size(13' 17);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.thinkLabel.Size = new System.Drawing.Size(13' 17);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.entityLabel.Size = new System.Drawing.Size(13' 17);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.entityLabel.Size = new System.Drawing.Size(13' 17);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fpsCapLabel.Size = new System.Drawing.Size(13' 17);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.fpsCapLabel.Size = new System.Drawing.Size(13' 17);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.xnaImage.Location = new System.Drawing.Point(0' 24);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.xnaImage.Size = new System.Drawing.Size(294' 248);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.xnaImage.Size = new System.Drawing.Size(294' 248);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(294' 294);
Magic Number,MegaMan.Engine,MainForm,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(294' 294);
Magic Number,MegaMan.Engine,Engine,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Engine.cs,Engine,The following statement contains a magic number: layerVisibility = Enumerable.Range(0' 6).Select(i => true).ToList();
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The following statement contains a magic number: using (var img = (Bitmap)Image.FromFile(_info.ImagePath.Absolute))              {                  var imageRect = new Rectangle(0' 0' img.Width' img.Height);                    var paletteData = img.LockBits(imageRect' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);                    byte[] paletteBytes = new byte[paletteData.Height * paletteData.Stride];                    try                  {                      Marshal.Copy(paletteData.Scan0' paletteBytes' 0' paletteData.Height * paletteData.Stride);                  }                  finally                  {                      img.UnlockBits(paletteData);                  }                    _swapColors = new List<Dictionary<uint' uint>>();                    var s = paletteData.Stride;                    for (int line = 0; line < paletteData.Height; line++)                  {                      var pal = new Dictionary<uint' uint>();                        for (int i = 0; i < s; i += 4)                      {                          var swap_i = i + (line * s);                            uint key = (uint)((paletteBytes[i] << 24) + (paletteBytes[i + 1] << 16) + (paletteBytes[i + 2] << 8) + (paletteBytes[i + 3]));                          uint value = (uint)((paletteBytes[swap_i] << 24) + (paletteBytes[swap_i + 1] << 16) + (paletteBytes[swap_i + 2] << 8) + (paletteBytes[swap_i + 3]));                            pal[key] = value;                      }                        _swapColors.Add(pal);                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The following statement contains a magic number: using (var img = (Bitmap)Image.FromFile(_info.ImagePath.Absolute))              {                  var imageRect = new Rectangle(0' 0' img.Width' img.Height);                    var paletteData = img.LockBits(imageRect' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);                    byte[] paletteBytes = new byte[paletteData.Height * paletteData.Stride];                    try                  {                      Marshal.Copy(paletteData.Scan0' paletteBytes' 0' paletteData.Height * paletteData.Stride);                  }                  finally                  {                      img.UnlockBits(paletteData);                  }                    _swapColors = new List<Dictionary<uint' uint>>();                    var s = paletteData.Stride;                    for (int line = 0; line < paletteData.Height; line++)                  {                      var pal = new Dictionary<uint' uint>();                        for (int i = 0; i < s; i += 4)                      {                          var swap_i = i + (line * s);                            uint key = (uint)((paletteBytes[i] << 24) + (paletteBytes[i + 1] << 16) + (paletteBytes[i + 2] << 8) + (paletteBytes[i + 3]));                          uint value = (uint)((paletteBytes[swap_i] << 24) + (paletteBytes[swap_i + 1] << 16) + (paletteBytes[swap_i + 2] << 8) + (paletteBytes[swap_i + 3]));                            pal[key] = value;                      }                        _swapColors.Add(pal);                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The following statement contains a magic number: using (var img = (Bitmap)Image.FromFile(_info.ImagePath.Absolute))              {                  var imageRect = new Rectangle(0' 0' img.Width' img.Height);                    var paletteData = img.LockBits(imageRect' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);                    byte[] paletteBytes = new byte[paletteData.Height * paletteData.Stride];                    try                  {                      Marshal.Copy(paletteData.Scan0' paletteBytes' 0' paletteData.Height * paletteData.Stride);                  }                  finally                  {                      img.UnlockBits(paletteData);                  }                    _swapColors = new List<Dictionary<uint' uint>>();                    var s = paletteData.Stride;                    for (int line = 0; line < paletteData.Height; line++)                  {                      var pal = new Dictionary<uint' uint>();                        for (int i = 0; i < s; i += 4)                      {                          var swap_i = i + (line * s);                            uint key = (uint)((paletteBytes[i] << 24) + (paletteBytes[i + 1] << 16) + (paletteBytes[i + 2] << 8) + (paletteBytes[i + 3]));                          uint value = (uint)((paletteBytes[swap_i] << 24) + (paletteBytes[swap_i + 1] << 16) + (paletteBytes[swap_i + 2] << 8) + (paletteBytes[swap_i + 3]));                            pal[key] = value;                      }                        _swapColors.Add(pal);                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The following statement contains a magic number: using (var img = (Bitmap)Image.FromFile(_info.ImagePath.Absolute))              {                  var imageRect = new Rectangle(0' 0' img.Width' img.Height);                    var paletteData = img.LockBits(imageRect' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);                    byte[] paletteBytes = new byte[paletteData.Height * paletteData.Stride];                    try                  {                      Marshal.Copy(paletteData.Scan0' paletteBytes' 0' paletteData.Height * paletteData.Stride);                  }                  finally                  {                      img.UnlockBits(paletteData);                  }                    _swapColors = new List<Dictionary<uint' uint>>();                    var s = paletteData.Stride;                    for (int line = 0; line < paletteData.Height; line++)                  {                      var pal = new Dictionary<uint' uint>();                        for (int i = 0; i < s; i += 4)                      {                          var swap_i = i + (line * s);                            uint key = (uint)((paletteBytes[i] << 24) + (paletteBytes[i + 1] << 16) + (paletteBytes[i + 2] << 8) + (paletteBytes[i + 3]));                          uint value = (uint)((paletteBytes[swap_i] << 24) + (paletteBytes[swap_i + 1] << 16) + (paletteBytes[swap_i + 2] << 8) + (paletteBytes[swap_i + 3]));                            pal[key] = value;                      }                        _swapColors.Add(pal);                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The following statement contains a magic number: using (var img = (Bitmap)Image.FromFile(_info.ImagePath.Absolute))              {                  var imageRect = new Rectangle(0' 0' img.Width' img.Height);                    var paletteData = img.LockBits(imageRect' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);                    byte[] paletteBytes = new byte[paletteData.Height * paletteData.Stride];                    try                  {                      Marshal.Copy(paletteData.Scan0' paletteBytes' 0' paletteData.Height * paletteData.Stride);                  }                  finally                  {                      img.UnlockBits(paletteData);                  }                    _swapColors = new List<Dictionary<uint' uint>>();                    var s = paletteData.Stride;                    for (int line = 0; line < paletteData.Height; line++)                  {                      var pal = new Dictionary<uint' uint>();                        for (int i = 0; i < s; i += 4)                      {                          var swap_i = i + (line * s);                            uint key = (uint)((paletteBytes[i] << 24) + (paletteBytes[i + 1] << 16) + (paletteBytes[i + 2] << 8) + (paletteBytes[i + 3]));                          uint value = (uint)((paletteBytes[swap_i] << 24) + (paletteBytes[swap_i + 1] << 16) + (paletteBytes[swap_i + 2] << 8) + (paletteBytes[swap_i + 3]));                            pal[key] = value;                      }                        _swapColors.Add(pal);                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The following statement contains a magic number: using (var img = (Bitmap)Image.FromFile(_info.ImagePath.Absolute))              {                  var imageRect = new Rectangle(0' 0' img.Width' img.Height);                    var paletteData = img.LockBits(imageRect' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);                    byte[] paletteBytes = new byte[paletteData.Height * paletteData.Stride];                    try                  {                      Marshal.Copy(paletteData.Scan0' paletteBytes' 0' paletteData.Height * paletteData.Stride);                  }                  finally                  {                      img.UnlockBits(paletteData);                  }                    _swapColors = new List<Dictionary<uint' uint>>();                    var s = paletteData.Stride;                    for (int line = 0; line < paletteData.Height; line++)                  {                      var pal = new Dictionary<uint' uint>();                        for (int i = 0; i < s; i += 4)                      {                          var swap_i = i + (line * s);                            uint key = (uint)((paletteBytes[i] << 24) + (paletteBytes[i + 1] << 16) + (paletteBytes[i + 2] << 8) + (paletteBytes[i + 3]));                          uint value = (uint)((paletteBytes[swap_i] << 24) + (paletteBytes[swap_i + 1] << 16) + (paletteBytes[swap_i + 2] << 8) + (paletteBytes[swap_i + 3]));                            pal[key] = value;                      }                        _swapColors.Add(pal);                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The following statement contains a magic number: using (var img = (Bitmap)Image.FromFile(_info.ImagePath.Absolute))              {                  var imageRect = new Rectangle(0' 0' img.Width' img.Height);                    var paletteData = img.LockBits(imageRect' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);                    byte[] paletteBytes = new byte[paletteData.Height * paletteData.Stride];                    try                  {                      Marshal.Copy(paletteData.Scan0' paletteBytes' 0' paletteData.Height * paletteData.Stride);                  }                  finally                  {                      img.UnlockBits(paletteData);                  }                    _swapColors = new List<Dictionary<uint' uint>>();                    var s = paletteData.Stride;                    for (int line = 0; line < paletteData.Height; line++)                  {                      var pal = new Dictionary<uint' uint>();                        for (int i = 0; i < s; i += 4)                      {                          var swap_i = i + (line * s);                            uint key = (uint)((paletteBytes[i] << 24) + (paletteBytes[i + 1] << 16) + (paletteBytes[i + 2] << 8) + (paletteBytes[i + 3]));                          uint value = (uint)((paletteBytes[swap_i] << 24) + (paletteBytes[swap_i + 1] << 16) + (paletteBytes[swap_i + 2] << 8) + (paletteBytes[swap_i + 3]));                            pal[key] = value;                      }                        _swapColors.Add(pal);                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The following statement contains a magic number: using (var img = (Bitmap)Image.FromFile(_info.ImagePath.Absolute))              {                  var imageRect = new Rectangle(0' 0' img.Width' img.Height);                    var paletteData = img.LockBits(imageRect' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);                    byte[] paletteBytes = new byte[paletteData.Height * paletteData.Stride];                    try                  {                      Marshal.Copy(paletteData.Scan0' paletteBytes' 0' paletteData.Height * paletteData.Stride);                  }                  finally                  {                      img.UnlockBits(paletteData);                  }                    _swapColors = new List<Dictionary<uint' uint>>();                    var s = paletteData.Stride;                    for (int line = 0; line < paletteData.Height; line++)                  {                      var pal = new Dictionary<uint' uint>();                        for (int i = 0; i < s; i += 4)                      {                          var swap_i = i + (line * s);                            uint key = (uint)((paletteBytes[i] << 24) + (paletteBytes[i + 1] << 16) + (paletteBytes[i + 2] << 8) + (paletteBytes[i + 3]));                          uint value = (uint)((paletteBytes[swap_i] << 24) + (paletteBytes[swap_i + 1] << 16) + (paletteBytes[swap_i + 2] << 8) + (paletteBytes[swap_i + 3]));                            pal[key] = value;                      }                        _swapColors.Add(pal);                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The following statement contains a magic number: using (var img = (Bitmap)Image.FromFile(_info.ImagePath.Absolute))              {                  var imageRect = new Rectangle(0' 0' img.Width' img.Height);                    var paletteData = img.LockBits(imageRect' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);                    byte[] paletteBytes = new byte[paletteData.Height * paletteData.Stride];                    try                  {                      Marshal.Copy(paletteData.Scan0' paletteBytes' 0' paletteData.Height * paletteData.Stride);                  }                  finally                  {                      img.UnlockBits(paletteData);                  }                    _swapColors = new List<Dictionary<uint' uint>>();                    var s = paletteData.Stride;                    for (int line = 0; line < paletteData.Height; line++)                  {                      var pal = new Dictionary<uint' uint>();                        for (int i = 0; i < s; i += 4)                      {                          var swap_i = i + (line * s);                            uint key = (uint)((paletteBytes[i] << 24) + (paletteBytes[i + 1] << 16) + (paletteBytes[i + 2] << 8) + (paletteBytes[i + 3]));                          uint value = (uint)((paletteBytes[swap_i] << 24) + (paletteBytes[swap_i + 1] << 16) + (paletteBytes[swap_i + 2] << 8) + (paletteBytes[swap_i + 3]));                            pal[key] = value;                      }                        _swapColors.Add(pal);                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The following statement contains a magic number: using (var img = (Bitmap)Image.FromFile(_info.ImagePath.Absolute))              {                  var imageRect = new Rectangle(0' 0' img.Width' img.Height);                    var paletteData = img.LockBits(imageRect' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);                    byte[] paletteBytes = new byte[paletteData.Height * paletteData.Stride];                    try                  {                      Marshal.Copy(paletteData.Scan0' paletteBytes' 0' paletteData.Height * paletteData.Stride);                  }                  finally                  {                      img.UnlockBits(paletteData);                  }                    _swapColors = new List<Dictionary<uint' uint>>();                    var s = paletteData.Stride;                    for (int line = 0; line < paletteData.Height; line++)                  {                      var pal = new Dictionary<uint' uint>();                        for (int i = 0; i < s; i += 4)                      {                          var swap_i = i + (line * s);                            uint key = (uint)((paletteBytes[i] << 24) + (paletteBytes[i + 1] << 16) + (paletteBytes[i + 2] << 8) + (paletteBytes[i + 3]));                          uint value = (uint)((paletteBytes[swap_i] << 24) + (paletteBytes[swap_i + 1] << 16) + (paletteBytes[swap_i + 2] << 8) + (paletteBytes[swap_i + 3]));                            pal[key] = value;                      }                        _swapColors.Add(pal);                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,Initialize,The following statement contains a magic number: using (var img = (Bitmap)Image.FromFile(_info.ImagePath.Absolute))              {                  var imageRect = new Rectangle(0' 0' img.Width' img.Height);                    var paletteData = img.LockBits(imageRect' System.Drawing.Imaging.ImageLockMode.ReadOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);                    byte[] paletteBytes = new byte[paletteData.Height * paletteData.Stride];                    try                  {                      Marshal.Copy(paletteData.Scan0' paletteBytes' 0' paletteData.Height * paletteData.Stride);                  }                  finally                  {                      img.UnlockBits(paletteData);                  }                    _swapColors = new List<Dictionary<uint' uint>>();                    var s = paletteData.Stride;                    for (int line = 0; line < paletteData.Height; line++)                  {                      var pal = new Dictionary<uint' uint>();                        for (int i = 0; i < s; i += 4)                      {                          var swap_i = i + (line * s);                            uint key = (uint)((paletteBytes[i] << 24) + (paletteBytes[i + 1] << 16) + (paletteBytes[i + 2] << 8) + (paletteBytes[i + 3]));                          uint value = (uint)((paletteBytes[swap_i] << 24) + (paletteBytes[swap_i + 1] << 16) + (paletteBytes[swap_i + 2] << 8) + (paletteBytes[swap_i + 3]));                            pal[key] = value;                      }                        _swapColors.Add(pal);                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,Palette,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\PaletteSystem.cs,GetSwappedPixels,The following statement contains a magic number: for (int i = 0; i < pixelData.Length; i += 4)              {                  uint key;                                    if (flip_endian)                      key = (uint)((pixelData[i + 2] << 24) + (pixelData[i + 1] << 16) + (pixelData[i] << 8) + (pixelData[i + 3]));                  else                      key = (uint)((pixelData[i] << 24) + (pixelData[i + 1] << 16) + (pixelData[i + 2] << 8) + (pixelData[i + 3]));                    for (int swap_i = 0; swap_i < swappedPixels.Count; swap_i++)                  {                      var palette = _swapColors[swap_i];                        uint value = key;                        if (palette.ContainsKey(key))                      {                          value = palette[key];                      }                        if (flip_endian)                      {                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                      else                      {                          swappedPixels[swap_i][i] = (byte)((value & (255 << 24)) >> 24);                          swappedPixels[swap_i][i + 1] = (byte)((value & (255 << 16)) >> 16);                          swappedPixels[swap_i][i + 2] = (byte)((value & (255 << 8)) >> 8);                          swappedPixels[swap_i][i + 3] = (byte)(value & 255);                      }                  }              }
Magic Number,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Update,The following statement contains a magic number: for (int i = 0; i < Screen.Teleports.Count; i++)              {                  TeleportInfo teleport = Screen.Teleports[i];                    if (teleportEnabled[i])                  {                      if (Math.Abs(playerPos.Position.X - teleport.From.X) <= 2 && Math.Abs(playerPos.Position.Y - teleport.From.Y) <= 8)                      {                          if (Teleport != null) Teleport(teleport);                          break;                      }                  }                  else if (Math.Abs(playerPos.Position.X - teleport.From.X) >= 16 || Math.Abs(playerPos.Position.Y - teleport.From.Y) >= 16)                  {                      teleportEnabled[i] = true;                  }              }
Magic Number,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Update,The following statement contains a magic number: for (int i = 0; i < Screen.Teleports.Count; i++)              {                  TeleportInfo teleport = Screen.Teleports[i];                    if (teleportEnabled[i])                  {                      if (Math.Abs(playerPos.Position.X - teleport.From.X) <= 2 && Math.Abs(playerPos.Position.Y - teleport.From.Y) <= 8)                      {                          if (Teleport != null) Teleport(teleport);                          break;                      }                  }                  else if (Math.Abs(playerPos.Position.X - teleport.From.X) >= 16 || Math.Abs(playerPos.Position.Y - teleport.From.Y) >= 16)                  {                      teleportEnabled[i] = true;                  }              }
Magic Number,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Update,The following statement contains a magic number: for (int i = 0; i < Screen.Teleports.Count; i++)              {                  TeleportInfo teleport = Screen.Teleports[i];                    if (teleportEnabled[i])                  {                      if (Math.Abs(playerPos.Position.X - teleport.From.X) <= 2 && Math.Abs(playerPos.Position.Y - teleport.From.Y) <= 8)                      {                          if (Teleport != null) Teleport(teleport);                          break;                      }                  }                  else if (Math.Abs(playerPos.Position.X - teleport.From.X) >= 16 || Math.Abs(playerPos.Position.Y - teleport.From.Y) >= 16)                  {                      teleportEnabled[i] = true;                  }              }
Magic Number,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Update,The following statement contains a magic number: for (int i = 0; i < Screen.Teleports.Count; i++)              {                  TeleportInfo teleport = Screen.Teleports[i];                    if (teleportEnabled[i])                  {                      if (Math.Abs(playerPos.Position.X - teleport.From.X) <= 2 && Math.Abs(playerPos.Position.Y - teleport.From.Y) <= 8)                      {                          if (Teleport != null) Teleport(teleport);                          break;                      }                  }                  else if (Math.Abs(playerPos.Position.X - teleport.From.X) >= 16 || Math.Abs(playerPos.Position.Y - teleport.From.Y) >= 16)                  {                      teleportEnabled[i] = true;                  }              }
Magic Number,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,EnforcePlayerBounds,The following statement contains a magic number: if ((player.GetComponent<CollisionComponent>()).Enabled)              {                  float leftBound = (float)Const.PlayerScrollTrigger;                  float rightBound = Screen.PixelWidth - Const.PlayerScrollTrigger;                    if (isAutoscrolling)                  {                      leftBound += OffsetX;                      rightBound = OffsetX + Game.CurrentGame.PixelsAcross;                  }                    // now if we aren't scrolling' hold the player at the screen borders                  if (playerPos.Position.X >= rightBound)                  {                      playerPos.SetPosition(new PointF(rightBound' playerPos.Position.Y));                  }                  else if (playerPos.Position.X <= leftBound)                  {                      playerPos.SetPosition(new PointF(leftBound' playerPos.Position.Y));                  }                    if (playerPos.Position.Y > Screen.PixelHeight - Const.PlayerScrollTrigger)                  {                      if (!container.IsGravityFlipped && playerPos.Position.Y > Game.CurrentGame.PixelsDown + 32)                      {                          // bottomless pit death!                          playerPos.Parent.Die();                      }                  }                  else if (playerPos.Position.Y < Const.PlayerScrollTrigger)                  {                      if (container.IsGravityFlipped && playerPos.Position.Y < -32)                      {                          playerPos.Parent.Die();                      }                  }              }
Magic Number,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,EnforcePlayerBounds,The following statement contains a magic number: if ((player.GetComponent<CollisionComponent>()).Enabled)              {                  float leftBound = (float)Const.PlayerScrollTrigger;                  float rightBound = Screen.PixelWidth - Const.PlayerScrollTrigger;                    if (isAutoscrolling)                  {                      leftBound += OffsetX;                      rightBound = OffsetX + Game.CurrentGame.PixelsAcross;                  }                    // now if we aren't scrolling' hold the player at the screen borders                  if (playerPos.Position.X >= rightBound)                  {                      playerPos.SetPosition(new PointF(rightBound' playerPos.Position.Y));                  }                  else if (playerPos.Position.X <= leftBound)                  {                      playerPos.SetPosition(new PointF(leftBound' playerPos.Position.Y));                  }                    if (playerPos.Position.Y > Screen.PixelHeight - Const.PlayerScrollTrigger)                  {                      if (!container.IsGravityFlipped && playerPos.Position.Y > Game.CurrentGame.PixelsDown + 32)                      {                          // bottomless pit death!                          playerPos.Parent.Die();                      }                  }                  else if (playerPos.Position.Y < Const.PlayerScrollTrigger)                  {                      if (container.IsGravityFlipped && playerPos.Position.Y < -32)                      {                          playerPos.Parent.Die();                      }                  }              }
Magic Number,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Draw,The following statement contains a magic number: if (!isAutoscrolling)              {                  OffsetX = OffsetY = 0;                    centerX = playerPos.X + adj_x;                  centerY = playerPos.Y + adj_y;                    if (centerX > Game.CurrentGame.PixelsAcross / 2)                  {                      OffsetX = centerX - Game.CurrentGame.PixelsAcross / 2;                      if (OffsetX > width - Game.CurrentGame.PixelsAcross)                          OffsetX = width - Game.CurrentGame.PixelsAcross;                  }                    if (centerY > Game.CurrentGame.PixelsDown / 2)                  {                      OffsetY = centerY - Game.CurrentGame.PixelsDown / 2;                      if (OffsetY > height - Game.CurrentGame.PixelsDown)                          OffsetY = height - Game.CurrentGame.PixelsDown;                      if (OffsetY < 0) OffsetY = 0;                  }                    OffsetX += off_x;                  OffsetY += off_y;              }
Magic Number,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Draw,The following statement contains a magic number: if (!isAutoscrolling)              {                  OffsetX = OffsetY = 0;                    centerX = playerPos.X + adj_x;                  centerY = playerPos.Y + adj_y;                    if (centerX > Game.CurrentGame.PixelsAcross / 2)                  {                      OffsetX = centerX - Game.CurrentGame.PixelsAcross / 2;                      if (OffsetX > width - Game.CurrentGame.PixelsAcross)                          OffsetX = width - Game.CurrentGame.PixelsAcross;                  }                    if (centerY > Game.CurrentGame.PixelsDown / 2)                  {                      OffsetY = centerY - Game.CurrentGame.PixelsDown / 2;                      if (OffsetY > height - Game.CurrentGame.PixelsDown)                          OffsetY = height - Game.CurrentGame.PixelsDown;                      if (OffsetY < 0) OffsetY = 0;                  }                    OffsetX += off_x;                  OffsetY += off_y;              }
Magic Number,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Draw,The following statement contains a magic number: if (!isAutoscrolling)              {                  OffsetX = OffsetY = 0;                    centerX = playerPos.X + adj_x;                  centerY = playerPos.Y + adj_y;                    if (centerX > Game.CurrentGame.PixelsAcross / 2)                  {                      OffsetX = centerX - Game.CurrentGame.PixelsAcross / 2;                      if (OffsetX > width - Game.CurrentGame.PixelsAcross)                          OffsetX = width - Game.CurrentGame.PixelsAcross;                  }                    if (centerY > Game.CurrentGame.PixelsDown / 2)                  {                      OffsetY = centerY - Game.CurrentGame.PixelsDown / 2;                      if (OffsetY > height - Game.CurrentGame.PixelsDown)                          OffsetY = height - Game.CurrentGame.PixelsDown;                      if (OffsetY < 0) OffsetY = 0;                  }                    OffsetX += off_x;                  OffsetY += off_y;              }
Magic Number,MegaMan.Engine,ScreenHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Stage\ScreenHandler.cs,Draw,The following statement contains a magic number: if (!isAutoscrolling)              {                  OffsetX = OffsetY = 0;                    centerX = playerPos.X + adj_x;                  centerY = playerPos.Y + adj_y;                    if (centerX > Game.CurrentGame.PixelsAcross / 2)                  {                      OffsetX = centerX - Game.CurrentGame.PixelsAcross / 2;                      if (OffsetX > width - Game.CurrentGame.PixelsAcross)                          OffsetX = width - Game.CurrentGame.PixelsAcross;                  }                    if (centerY > Game.CurrentGame.PixelsDown / 2)                  {                      OffsetY = centerY - Game.CurrentGame.PixelsDown / 2;                      if (OffsetY > height - Game.CurrentGame.PixelsDown)                          OffsetY = height - Game.CurrentGame.PixelsDown;                      if (OffsetY < 0) OffsetY = 0;                  }                    OffsetX += off_x;                  OffsetY += off_y;              }
Magic Number,MegaMan.Engine,SoundSystem,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\SoundSystem.cs,SoundSystem,The following statement contains a magic number: soundSystem.init(32' INITFLAGS.NORMAL' (IntPtr)null);
Magic Number,MegaMan.Engine,SoundSystem,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\SoundSystem.cs,SoundSystem,The following statement contains a magic number: updateTimer = new System.Windows.Forms.Timer {Interval = 10};
Magic Number,MegaMan.Engine,SoundSystem,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\SoundSystem.cs,SoundSystem,The following statement contains a magic number: CurrentSfxPriority = 255;
Magic Number,MegaMan.Engine,SoundSystem,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\SoundSystem.cs,InstanceSfxPlaybackStopped,The following statement contains a magic number: CurrentSfxPriority = 255;
Magic Number,MegaMan.Engine,SoundSystem,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\SoundSystem.cs,StopSfx,The following statement contains a magic number: if (loadedSounds.ContainsKey(name))              {                  loadedSounds[name].Stop();                  CurrentSfxPriority = 255;              }
Magic Number,MegaMan.Engine,SpriteComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\SpriteComponent.cs,RenderSprite,The following statement contains a magic number: if (evenframe)              {                  foreach (var meter in HealthMeter.AllMeters)                  {                      var bounds = new RectangleF(currentSprite.BoundBox.X' currentSprite.BoundBox.Y'                          currentSprite.BoundBox.Width' currentSprite.BoundBox.Height);                        bounds.Offset(-currentSprite.HotSpot.X' -currentSprite.HotSpot.Y);                      bounds.Offset(PositionSrc.Position);                      if (meter.Bounds.IntersectsWith(bounds))                      {                          Draw(currentSprite' e.RenderContext' 5);                          return;                      }                  }              }
Magic Number,MegaMan.Engine.Entities.Effects,MovementEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\MovementEffectLoader.cs,ParseMovementBehavior,The following statement contains a magic number: if (mag == 0)              {                  if (axis == Axis.X)                      action = entity => {                          MovementComponent mov = entity.GetComponent<MovementComponent>();                          if (mov != null) mov.VelocityX = 0;                      };                  else                      action = entity => {                          MovementComponent mov = entity.GetComponent<MovementComponent>();                          if (mov != null) mov.VelocityY = 0;                      };              }              else              {                  switch (info.Direction)                  {                      case MovementEffectDirection.Up:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov != null) mov.VelocityY = -1 * (mag ?? Math.Abs(mov.VelocityY));                          };                          break;                        case MovementEffectDirection.Down:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov != null) mov.VelocityY = (mag ?? Math.Abs(mov.VelocityY));                          };                          break;                        case MovementEffectDirection.Left:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov != null) mov.VelocityX = -mag ?? -1 * Math.Abs(mov.VelocityX);                          };                          break;                        case MovementEffectDirection.Right:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov != null) mov.VelocityX = mag ?? Math.Abs(mov.VelocityX);                          };                          break;                        case MovementEffectDirection.Same:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              if (mag == null) return;                              float fmag = mag ?? 0;                                MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov == null) return;                              Direction dir = mov.Direction;                                if (axis != Axis.Y) mov.VelocityX = (dir == Direction.Right) ? fmag : ((dir == Direction.Left) ? -fmag : 0);                              if (axis != Axis.X) mov.VelocityY = (dir == Direction.Down) ? fmag : ((dir == Direction.Up) ? -fmag : 0);                          };                          break;                        case MovementEffectDirection.Reverse:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              if (mag == null) return;                              float fmag = mag ?? 0;                                MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov == null) return;                              Direction dir = mov.Direction;                                if (axis != Axis.Y) mov.VelocityX = (dir == Direction.Left) ? fmag : ((dir == Direction.Right) ? -fmag : 0);                              if (axis != Axis.X) mov.VelocityY = (dir == Direction.Up) ? fmag : ((dir == Direction.Down) ? -fmag : 0);                          };                          break;                        case MovementEffectDirection.Inherit:                          action = entity => {                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov == null) return;                              if (entity.Parent != null)                              {                                  Direction dir = entity.Parent.Direction;                                  mag = CheckMagnitudeVar(entity' magVar) ?? mag;                                    if (axis != Axis.Y) mov.VelocityX = (dir == Direction.Right) ? (mag ?? Math.Abs(mov.VelocityX)) : ((dir == Direction.Left) ? (-mag ?? -1 * Math.Abs(mov.VelocityX)) : 0);                                  if (axis != Axis.X) mov.VelocityY = (dir == Direction.Down) ? (mag ?? Math.Abs(mov.VelocityY)) : ((dir == Direction.Up) ? (-mag ?? -1 * Math.Abs(mov.VelocityY)) : 0);                              }                              else mov.VelocityY = 0;                          };                          break;                        case MovementEffectDirection.Input:                          action = entity => {                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              InputComponent input = entity.GetComponent<InputComponent>();                              if (mov == null || input == null) return;                                mag = CheckMagnitudeVar(entity' magVar) ?? mag;                                if (axis != Axis.Y)                              {                                  if (input.Left) mov.VelocityX = -mag ?? -1 * Math.Abs(mov.VelocityX);                                  else if (input.Right) mov.VelocityX = mag ?? Math.Abs(mov.VelocityX);                              }                              if (axis != Axis.X)                              {                                  if (input.Down) mov.VelocityY = mag ?? Math.Abs(mov.VelocityY);                                  else if (input.Up) mov.VelocityY = -mag ?? -1 * Math.Abs(mov.VelocityY);                                  else mov.VelocityY = 0;                              }                          };                          break;                        case MovementEffectDirection.Player:                          action = entity => {                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              PositionComponent pos = entity.GetComponent<PositionComponent>();                              if (mov == null || pos == null) return;                                GameEntity player = entity.Entities.GetEntityById("Player");                                if (player == null)                                  return;                                PositionComponent playerPos = player.GetComponent<PositionComponent>();                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                                if (axis == Axis.X)                              {                                  if (pos.Position.X > playerPos.Position.X) mov.VelocityX = -mag ?? -1 * Math.Abs(mov.VelocityX);                                  else if (pos.Position.X < playerPos.Position.X) mov.VelocityX = mag ?? Math.Abs(mov.VelocityX);                              }                              else if (axis == Axis.Y)                              {                                  if (pos.Position.Y > playerPos.Position.Y) mov.VelocityY = -mag ?? -1 * Math.Abs(mov.VelocityY);                                  else if (pos.Position.Y < playerPos.Position.Y) mov.VelocityY = mag ?? Math.Abs(mov.VelocityY);                              }                              else                              {                                  float dx = playerPos.Position.X - pos.Position.X;                                  float dy = playerPos.Position.Y - pos.Position.Y;                                  double hyp = Math.Pow(dx' 2) + Math.Pow(dy' 2);                                  hyp = Math.Pow(hyp' 0.5);                                    mov.VelocityX = (float)(mag * dx / hyp);                                  mov.VelocityY = (float)(mag * dy / hyp);                              }                          };                          break;                        default: action = new Effect(entity => { }); break;                  }              }
Magic Number,MegaMan.Engine.Entities.Effects,MovementEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\MovementEffectLoader.cs,ParseMovementBehavior,The following statement contains a magic number: if (mag == 0)              {                  if (axis == Axis.X)                      action = entity => {                          MovementComponent mov = entity.GetComponent<MovementComponent>();                          if (mov != null) mov.VelocityX = 0;                      };                  else                      action = entity => {                          MovementComponent mov = entity.GetComponent<MovementComponent>();                          if (mov != null) mov.VelocityY = 0;                      };              }              else              {                  switch (info.Direction)                  {                      case MovementEffectDirection.Up:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov != null) mov.VelocityY = -1 * (mag ?? Math.Abs(mov.VelocityY));                          };                          break;                        case MovementEffectDirection.Down:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov != null) mov.VelocityY = (mag ?? Math.Abs(mov.VelocityY));                          };                          break;                        case MovementEffectDirection.Left:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov != null) mov.VelocityX = -mag ?? -1 * Math.Abs(mov.VelocityX);                          };                          break;                        case MovementEffectDirection.Right:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov != null) mov.VelocityX = mag ?? Math.Abs(mov.VelocityX);                          };                          break;                        case MovementEffectDirection.Same:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              if (mag == null) return;                              float fmag = mag ?? 0;                                MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov == null) return;                              Direction dir = mov.Direction;                                if (axis != Axis.Y) mov.VelocityX = (dir == Direction.Right) ? fmag : ((dir == Direction.Left) ? -fmag : 0);                              if (axis != Axis.X) mov.VelocityY = (dir == Direction.Down) ? fmag : ((dir == Direction.Up) ? -fmag : 0);                          };                          break;                        case MovementEffectDirection.Reverse:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              if (mag == null) return;                              float fmag = mag ?? 0;                                MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov == null) return;                              Direction dir = mov.Direction;                                if (axis != Axis.Y) mov.VelocityX = (dir == Direction.Left) ? fmag : ((dir == Direction.Right) ? -fmag : 0);                              if (axis != Axis.X) mov.VelocityY = (dir == Direction.Up) ? fmag : ((dir == Direction.Down) ? -fmag : 0);                          };                          break;                        case MovementEffectDirection.Inherit:                          action = entity => {                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov == null) return;                              if (entity.Parent != null)                              {                                  Direction dir = entity.Parent.Direction;                                  mag = CheckMagnitudeVar(entity' magVar) ?? mag;                                    if (axis != Axis.Y) mov.VelocityX = (dir == Direction.Right) ? (mag ?? Math.Abs(mov.VelocityX)) : ((dir == Direction.Left) ? (-mag ?? -1 * Math.Abs(mov.VelocityX)) : 0);                                  if (axis != Axis.X) mov.VelocityY = (dir == Direction.Down) ? (mag ?? Math.Abs(mov.VelocityY)) : ((dir == Direction.Up) ? (-mag ?? -1 * Math.Abs(mov.VelocityY)) : 0);                              }                              else mov.VelocityY = 0;                          };                          break;                        case MovementEffectDirection.Input:                          action = entity => {                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              InputComponent input = entity.GetComponent<InputComponent>();                              if (mov == null || input == null) return;                                mag = CheckMagnitudeVar(entity' magVar) ?? mag;                                if (axis != Axis.Y)                              {                                  if (input.Left) mov.VelocityX = -mag ?? -1 * Math.Abs(mov.VelocityX);                                  else if (input.Right) mov.VelocityX = mag ?? Math.Abs(mov.VelocityX);                              }                              if (axis != Axis.X)                              {                                  if (input.Down) mov.VelocityY = mag ?? Math.Abs(mov.VelocityY);                                  else if (input.Up) mov.VelocityY = -mag ?? -1 * Math.Abs(mov.VelocityY);                                  else mov.VelocityY = 0;                              }                          };                          break;                        case MovementEffectDirection.Player:                          action = entity => {                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              PositionComponent pos = entity.GetComponent<PositionComponent>();                              if (mov == null || pos == null) return;                                GameEntity player = entity.Entities.GetEntityById("Player");                                if (player == null)                                  return;                                PositionComponent playerPos = player.GetComponent<PositionComponent>();                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                                if (axis == Axis.X)                              {                                  if (pos.Position.X > playerPos.Position.X) mov.VelocityX = -mag ?? -1 * Math.Abs(mov.VelocityX);                                  else if (pos.Position.X < playerPos.Position.X) mov.VelocityX = mag ?? Math.Abs(mov.VelocityX);                              }                              else if (axis == Axis.Y)                              {                                  if (pos.Position.Y > playerPos.Position.Y) mov.VelocityY = -mag ?? -1 * Math.Abs(mov.VelocityY);                                  else if (pos.Position.Y < playerPos.Position.Y) mov.VelocityY = mag ?? Math.Abs(mov.VelocityY);                              }                              else                              {                                  float dx = playerPos.Position.X - pos.Position.X;                                  float dy = playerPos.Position.Y - pos.Position.Y;                                  double hyp = Math.Pow(dx' 2) + Math.Pow(dy' 2);                                  hyp = Math.Pow(hyp' 0.5);                                    mov.VelocityX = (float)(mag * dx / hyp);                                  mov.VelocityY = (float)(mag * dy / hyp);                              }                          };                          break;                        default: action = new Effect(entity => { }); break;                  }              }
Magic Number,MegaMan.Engine.Entities.Effects,MovementEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\MovementEffectLoader.cs,ParseMovementBehavior,The following statement contains a magic number: if (mag == 0)              {                  if (axis == Axis.X)                      action = entity => {                          MovementComponent mov = entity.GetComponent<MovementComponent>();                          if (mov != null) mov.VelocityX = 0;                      };                  else                      action = entity => {                          MovementComponent mov = entity.GetComponent<MovementComponent>();                          if (mov != null) mov.VelocityY = 0;                      };              }              else              {                  switch (info.Direction)                  {                      case MovementEffectDirection.Up:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov != null) mov.VelocityY = -1 * (mag ?? Math.Abs(mov.VelocityY));                          };                          break;                        case MovementEffectDirection.Down:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov != null) mov.VelocityY = (mag ?? Math.Abs(mov.VelocityY));                          };                          break;                        case MovementEffectDirection.Left:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov != null) mov.VelocityX = -mag ?? -1 * Math.Abs(mov.VelocityX);                          };                          break;                        case MovementEffectDirection.Right:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov != null) mov.VelocityX = mag ?? Math.Abs(mov.VelocityX);                          };                          break;                        case MovementEffectDirection.Same:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              if (mag == null) return;                              float fmag = mag ?? 0;                                MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov == null) return;                              Direction dir = mov.Direction;                                if (axis != Axis.Y) mov.VelocityX = (dir == Direction.Right) ? fmag : ((dir == Direction.Left) ? -fmag : 0);                              if (axis != Axis.X) mov.VelocityY = (dir == Direction.Down) ? fmag : ((dir == Direction.Up) ? -fmag : 0);                          };                          break;                        case MovementEffectDirection.Reverse:                          action = entity => {                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                              if (mag == null) return;                              float fmag = mag ?? 0;                                MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov == null) return;                              Direction dir = mov.Direction;                                if (axis != Axis.Y) mov.VelocityX = (dir == Direction.Left) ? fmag : ((dir == Direction.Right) ? -fmag : 0);                              if (axis != Axis.X) mov.VelocityY = (dir == Direction.Up) ? fmag : ((dir == Direction.Down) ? -fmag : 0);                          };                          break;                        case MovementEffectDirection.Inherit:                          action = entity => {                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              if (mov == null) return;                              if (entity.Parent != null)                              {                                  Direction dir = entity.Parent.Direction;                                  mag = CheckMagnitudeVar(entity' magVar) ?? mag;                                    if (axis != Axis.Y) mov.VelocityX = (dir == Direction.Right) ? (mag ?? Math.Abs(mov.VelocityX)) : ((dir == Direction.Left) ? (-mag ?? -1 * Math.Abs(mov.VelocityX)) : 0);                                  if (axis != Axis.X) mov.VelocityY = (dir == Direction.Down) ? (mag ?? Math.Abs(mov.VelocityY)) : ((dir == Direction.Up) ? (-mag ?? -1 * Math.Abs(mov.VelocityY)) : 0);                              }                              else mov.VelocityY = 0;                          };                          break;                        case MovementEffectDirection.Input:                          action = entity => {                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              InputComponent input = entity.GetComponent<InputComponent>();                              if (mov == null || input == null) return;                                mag = CheckMagnitudeVar(entity' magVar) ?? mag;                                if (axis != Axis.Y)                              {                                  if (input.Left) mov.VelocityX = -mag ?? -1 * Math.Abs(mov.VelocityX);                                  else if (input.Right) mov.VelocityX = mag ?? Math.Abs(mov.VelocityX);                              }                              if (axis != Axis.X)                              {                                  if (input.Down) mov.VelocityY = mag ?? Math.Abs(mov.VelocityY);                                  else if (input.Up) mov.VelocityY = -mag ?? -1 * Math.Abs(mov.VelocityY);                                  else mov.VelocityY = 0;                              }                          };                          break;                        case MovementEffectDirection.Player:                          action = entity => {                              MovementComponent mov = entity.GetComponent<MovementComponent>();                              PositionComponent pos = entity.GetComponent<PositionComponent>();                              if (mov == null || pos == null) return;                                GameEntity player = entity.Entities.GetEntityById("Player");                                if (player == null)                                  return;                                PositionComponent playerPos = player.GetComponent<PositionComponent>();                              mag = CheckMagnitudeVar(entity' magVar) ?? mag;                                if (axis == Axis.X)                              {                                  if (pos.Position.X > playerPos.Position.X) mov.VelocityX = -mag ?? -1 * Math.Abs(mov.VelocityX);                                  else if (pos.Position.X < playerPos.Position.X) mov.VelocityX = mag ?? Math.Abs(mov.VelocityX);                              }                              else if (axis == Axis.Y)                              {                                  if (pos.Position.Y > playerPos.Position.Y) mov.VelocityY = -mag ?? -1 * Math.Abs(mov.VelocityY);                                  else if (pos.Position.Y < playerPos.Position.Y) mov.VelocityY = mag ?? Math.Abs(mov.VelocityY);                              }                              else                              {                                  float dx = playerPos.Position.X - pos.Position.X;                                  float dy = playerPos.Position.Y - pos.Position.Y;                                  double hyp = Math.Pow(dx' 2) + Math.Pow(dy' 2);                                  hyp = Math.Pow(hyp' 0.5);                                    mov.VelocityX = (float)(mag * dx / hyp);                                  mov.VelocityY = (float)(mag * dy / hyp);                              }                          };                          break;                        default: action = new Effect(entity => { }); break;                  }              }
Magic Number,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,ParseStringLiteral,The following statement contains a magic number: string s = token.text.Substring(1' token.text.Length - 2);
Magic Number,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,ParseIif,The following statement contains a magic number: if (args.Length != 3)                  throw ParseError(errorPos' Res.IifRequiresThreeArgs);
Magic Number,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,ParseIif,The following statement contains a magic number: return GenerateConditional(args[0]' args[1]' args[2]' errorPos);
Magic Number,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,IsSignedIntegralType,The following statement contains a magic number: return GetNumericTypeKind(type) == 2;
Magic Number,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,IsUnsignedIntegralType,The following statement contains a magic number: return GetNumericTypeKind(type) == 3;
Magic Number,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,GetNumericTypeKind,The following statement contains a magic number: switch (Type.GetTypeCode(type)) {                  case TypeCode.Char:                  case TypeCode.Single:                  case TypeCode.Double:                  case TypeCode.Decimal:                      return 1;                  case TypeCode.SByte:                  case TypeCode.Int16:                  case TypeCode.Int32:                  case TypeCode.Int64:                      return 2;                  case TypeCode.Byte:                  case TypeCode.UInt16:                  case TypeCode.UInt32:                  case TypeCode.UInt64:                      return 3;                  default:                      return 0;              }
Magic Number,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,GetNumericTypeKind,The following statement contains a magic number: switch (Type.GetTypeCode(type)) {                  case TypeCode.Char:                  case TypeCode.Single:                  case TypeCode.Double:                  case TypeCode.Decimal:                      return 1;                  case TypeCode.SByte:                  case TypeCode.Int16:                  case TypeCode.Int32:                  case TypeCode.Int64:                      return 2;                  case TypeCode.Byte:                  case TypeCode.UInt16:                  case TypeCode.UInt32:                  case TypeCode.UInt64:                      return 3;                  default:                      return 0;              }
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.lblInstruction.Location = new System.Drawing.Point(9' 15);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.lblInstruction.Location = new System.Drawing.Point(9' 15);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.lblInstruction.Size = new System.Drawing.Size(102' 13);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.lblInstruction.Size = new System.Drawing.Size(102' 13);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.lblInstruction.TabIndex = 9;
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.cbxConfigToDelete.Location = new System.Drawing.Point(12' 31);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.cbxConfigToDelete.Location = new System.Drawing.Point(12' 31);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.cbxConfigToDelete.Size = new System.Drawing.Size(351' 21);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.cbxConfigToDelete.Size = new System.Drawing.Size(351' 21);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnClose.Location = new System.Drawing.Point(288' 59);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnClose.Location = new System.Drawing.Point(288' 59);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnClose.Size = new System.Drawing.Size(75' 23);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnClose.Size = new System.Drawing.Size(75' 23);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnClose.TabIndex = 3;
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnDelete.Location = new System.Drawing.Point(12' 58);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnDelete.Location = new System.Drawing.Point(12' 58);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnDelete.Size = new System.Drawing.Size(75' 23);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnDelete.Size = new System.Drawing.Size(75' 23);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnDelete.TabIndex = 2;
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnDeleteAll.Location = new System.Drawing.Point(12' 87);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnDeleteAll.Location = new System.Drawing.Point(12' 87);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnDeleteAll.Size = new System.Drawing.Size(351' 23);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnDeleteAll.Size = new System.Drawing.Size(351' 23);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.btnDeleteAll.TabIndex = 4;
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(375' 115);
Magic Number,MegaMan.Engine.Forms,DeleteConfigs,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\DeleteConfigs.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(375' 115);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.lblInfo.Location = new System.Drawing.Point(10' 95);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.lblInfo.Location = new System.Drawing.Point(10' 95);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.lblInfo.Size = new System.Drawing.Size(357' 26);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.lblInfo.Size = new System.Drawing.Size(357' 26);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.btnSelect.Location = new System.Drawing.Point(13' 52);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.btnSelect.Location = new System.Drawing.Point(13' 52);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.btnSelect.Size = new System.Drawing.Size(75' 23);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.btnSelect.Size = new System.Drawing.Size(75' 23);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.btnSelect.TabIndex = 2;
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(289' 52);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(289' 52);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 3;
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.cbxConfigToPickFrom.Location = new System.Drawing.Point(13' 25);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.cbxConfigToPickFrom.Location = new System.Drawing.Point(13' 25);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.cbxConfigToPickFrom.Size = new System.Drawing.Size(351' 21);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.cbxConfigToPickFrom.Size = new System.Drawing.Size(351' 21);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.lblInstruction.Location = new System.Drawing.Point(10' 9);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.lblInstruction.Location = new System.Drawing.Point(10' 9);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.lblInstruction.Size = new System.Drawing.Size(96' 13);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.lblInstruction.Size = new System.Drawing.Size(96' 13);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.lblInstruction.TabIndex = 5;
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(376' 127);
Magic Number,MegaMan.Engine.Forms,LoadConfig,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\LoadConfig.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(376' 127);
Magic Number,MegaMan.Engine.Forms.MenuControllers,AudioMenuController,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MenuControllers\AudioMenuController.cs,LoadSettings,The following statement contains a magic number: if (channel == 1)                  Set(settings.Audio.Square1);              else if (channel == 2)                  Set(settings.Audio.Square2);              else if (channel == 3)                  Set(settings.Audio.Triangle);              else if (channel == 4)                  Set(settings.Audio.Noise);
Magic Number,MegaMan.Engine.Forms.MenuControllers,AudioMenuController,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MenuControllers\AudioMenuController.cs,LoadSettings,The following statement contains a magic number: if (channel == 1)                  Set(settings.Audio.Square1);              else if (channel == 2)                  Set(settings.Audio.Square2);              else if (channel == 3)                  Set(settings.Audio.Triangle);              else if (channel == 4)                  Set(settings.Audio.Noise);
Magic Number,MegaMan.Engine.Forms.MenuControllers,AudioMenuController,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MenuControllers\AudioMenuController.cs,LoadSettings,The following statement contains a magic number: if (channel == 1)                  Set(settings.Audio.Square1);              else if (channel == 2)                  Set(settings.Audio.Square2);              else if (channel == 3)                  Set(settings.Audio.Triangle);              else if (channel == 4)                  Set(settings.Audio.Noise);
Magic Number,MegaMan.Engine.Forms.MenuControllers,AudioMenuController,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MenuControllers\AudioMenuController.cs,Set,The following statement contains a magic number: if (channel == 1)                  Engine.Instance.SoundSystem.SquareOne = value;              else if (channel == 2)                  Engine.Instance.SoundSystem.SquareTwo = value;              else if (channel == 3)                  Engine.Instance.SoundSystem.Triangle = value;              else if (channel == 4)                  Engine.Instance.SoundSystem.Noise = value;
Magic Number,MegaMan.Engine.Forms.MenuControllers,AudioMenuController,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MenuControllers\AudioMenuController.cs,Set,The following statement contains a magic number: if (channel == 1)                  Engine.Instance.SoundSystem.SquareOne = value;              else if (channel == 2)                  Engine.Instance.SoundSystem.SquareTwo = value;              else if (channel == 3)                  Engine.Instance.SoundSystem.Triangle = value;              else if (channel == 4)                  Engine.Instance.SoundSystem.Noise = value;
Magic Number,MegaMan.Engine.Forms.MenuControllers,AudioMenuController,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MenuControllers\AudioMenuController.cs,Set,The following statement contains a magic number: if (channel == 1)                  Engine.Instance.SoundSystem.SquareOne = value;              else if (channel == 2)                  Engine.Instance.SoundSystem.SquareTwo = value;              else if (channel == 3)                  Engine.Instance.SoundSystem.Triangle = value;              else if (channel == 4)                  Engine.Instance.SoundSystem.Noise = value;
Magic Number,MegaMan.Engine.Forms.MenuControllers,AudioMenuController,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MenuControllers\AudioMenuController.cs,SaveSettings,The following statement contains a magic number: if (channel == 1)                  settings.Audio.Square1 = this.menuItem.Checked;              else if (channel == 2)                  settings.Audio.Square2 = this.menuItem.Checked;              else if (channel == 3)                  settings.Audio.Triangle = this.menuItem.Checked;              else if (channel == 4)                  settings.Audio.Noise = this.menuItem.Checked;
Magic Number,MegaMan.Engine.Forms.MenuControllers,AudioMenuController,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MenuControllers\AudioMenuController.cs,SaveSettings,The following statement contains a magic number: if (channel == 1)                  settings.Audio.Square1 = this.menuItem.Checked;              else if (channel == 2)                  settings.Audio.Square2 = this.menuItem.Checked;              else if (channel == 3)                  settings.Audio.Triangle = this.menuItem.Checked;              else if (channel == 4)                  settings.Audio.Noise = this.menuItem.Checked;
Magic Number,MegaMan.Engine.Forms.MenuControllers,AudioMenuController,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MenuControllers\AudioMenuController.cs,SaveSettings,The following statement contains a magic number: if (channel == 1)                  settings.Audio.Square1 = this.menuItem.Checked;              else if (channel == 2)                  settings.Audio.Square2 = this.menuItem.Checked;              else if (channel == 3)                  settings.Audio.Triangle = this.menuItem.Checked;              else if (channel == 4)                  settings.Audio.Noise = this.menuItem.Checked;
Magic Number,MegaMan.Engine.Forms.Settings,UserSettings,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\UserSettings.cs,UserSettings,The following statement contains a magic number: Default = new Setting() {                  GameFileName = ""'                  Keys = new UserKeys() {                      Up = Keys.Up'                      Down = Keys.Down'                      Left = Keys.Left'                      Right = Keys.Right'                      Jump = Keys.A'                      Shoot = Keys.S'                      Start = Keys.Enter'                      Select = Keys.Space                  }'                  Screens = new LastScreen() {                      Size = ScreenScale.X1'                      Maximized = false'                      HideMenu = false'                      Pixellated = PixellatedOrSmoothed.Pixellated'                      NTSC_Options = NTSC_Options.None'                      NTSC_Custom = new NTSC_CustomOptions() {                          Hue = 0'                          Saturation = 0'                          Brightness = 0'                          Contrast = 0'                          Sharpness = 0'                          Gamma = 0'                          Resolution = 0'                          Artifacts = 0'                          Fringing = 0'                          Bleed = 0'                          Merge_Fields = true                      }                  }'                  Audio = new LastAudio() {                      Volume = 50'                      Musics = true'                      Sound = true'                      Square1 = true'                      Square2 = true'                      Triangle = true'                      Noise = true                  }'                  Debug = new LastDebug() {                      ShowMenu = true'                      ShowHitboxes = false'                      Framerate = 60'                      Layers = new LastLayers() {                          Background = true'                          Sprites1 = true'                          Sprites2 = true'                          Sprites3 = true'                          Sprites4 = true'                          Foreground = true                      }'                      Cheat = new LastCheat() {                          Invincibility = false'                          NoDamage = false                      }                  }'                  Miscellaneous = new LastMiscellaneous() {                      ScreenX_Coordinate = -1'        // -1 means centered                      ScreenY_Coordinate = -1                  }              };
Magic Number,MegaMan.Engine.Forms.Settings,UserSettings,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Settings\UserSettings.cs,UserSettings,The following statement contains a magic number: Default = new Setting() {                  GameFileName = ""'                  Keys = new UserKeys() {                      Up = Keys.Up'                      Down = Keys.Down'                      Left = Keys.Left'                      Right = Keys.Right'                      Jump = Keys.A'                      Shoot = Keys.S'                      Start = Keys.Enter'                      Select = Keys.Space                  }'                  Screens = new LastScreen() {                      Size = ScreenScale.X1'                      Maximized = false'                      HideMenu = false'                      Pixellated = PixellatedOrSmoothed.Pixellated'                      NTSC_Options = NTSC_Options.None'                      NTSC_Custom = new NTSC_CustomOptions() {                          Hue = 0'                          Saturation = 0'                          Brightness = 0'                          Contrast = 0'                          Sharpness = 0'                          Gamma = 0'                          Resolution = 0'                          Artifacts = 0'                          Fringing = 0'                          Bleed = 0'                          Merge_Fields = true                      }                  }'                  Audio = new LastAudio() {                      Volume = 50'                      Musics = true'                      Sound = true'                      Square1 = true'                      Square2 = true'                      Triangle = true'                      Noise = true                  }'                  Debug = new LastDebug() {                      ShowMenu = true'                      ShowHitboxes = false'                      Framerate = 60'                      Layers = new LastLayers() {                          Background = true'                          Sprites1 = true'                          Sprites2 = true'                          Sprites3 = true'                          Sprites4 = true'                          Foreground = true                      }'                      Cheat = new LastCheat() {                          Invincibility = false'                          NoDamage = false                      }                  }'                  Miscellaneous = new LastMiscellaneous() {                      ScreenX_Coordinate = -1'        // -1 means centered                      ScreenY_Coordinate = -1                  }              };
Magic Number,WinFormsGraphicsDevice,GraphicsDeviceService,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\GraphicsDeviceService.cs,ResetDevice,The following statement contains a magic number: parameters.BackBufferHeight = Math.Max(parameters.BackBufferHeight' height * 2);
Magic Number,MegaMan.Engine.Rendering,XnaRenderingContext,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Rendering\XnaRenderingContext.cs,GenerateSwappedTextures,The following statement contains a magic number: byte[] pixelData = new byte[image.Width * image.Height * 4];
Missing Default,MegaMan.Engine,GameHandler,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\GameHandlers\GameHandler.cs,RunCommand,The following switch statement is missing a default case: switch (cmd.Type)              {                  case SceneCommands.PlayMusic:                      PlayMusicCommand((ScenePlayCommandInfo)cmd);                      break;                    case SceneCommands.StopMusic:                      StopMusicCommand((SceneStopMusicCommandInfo)cmd);                      break;                    case SceneCommands.Add:                      AddCommand((SceneAddCommandInfo)cmd);                      break;                    case SceneCommands.Move:                      MoveCommand((SceneMoveCommandInfo)cmd);                      break;                    case SceneCommands.Remove:                      RemoveCommand((SceneRemoveCommandInfo)cmd);                      break;                    case SceneCommands.Entity:                      EntityCommand((SceneEntityCommandInfo)cmd);                      break;                    case SceneCommands.Text:                      TextCommand((SceneTextCommandInfo)cmd);                      break;                    case SceneCommands.Fill:                      FillCommand((SceneFillCommandInfo)cmd);                      break;                    case SceneCommands.FillMove:                      FillMoveCommand((SceneFillMoveCommandInfo)cmd);                      break;                    case SceneCommands.Sound:                      SoundCommand((SceneSoundCommandInfo)cmd);                      break;                    case SceneCommands.Next:                      NextCommand((SceneNextCommandInfo)cmd);                      break;                    case SceneCommands.Call:                      CallCommand((SceneCallCommandInfo)cmd);                      break;                    case SceneCommands.Effect:                      EffectCommand((SceneEffectCommandInfo)cmd);                      break;                    case SceneCommands.Condition:                      ConditionCommand((SceneConditionCommandInfo)cmd);                      break;              }
Missing Default,MegaMan.Engine,InputComponent,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Components\InputComponent.cs,Instance_GameInputReceived,The following switch statement is missing a default case: switch (e.Input)                  {                      case GameInput.Shoot:                          Shoot = e.Pressed;                          break;                        case GameInput.Jump:                          Jump = e.Pressed;                          break;                        case GameInput.Start:                          StartKey = e.Pressed;                          break;                        case GameInput.Select:                          Select = e.Pressed;                          break;                  }
Missing Default,MegaMan.Engine,Keyboard,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\Keyboard.cs,ProcessCmdKey,The following switch statement is missing a default case: switch (waitKey)                      {                          case GameInput.Up: GameInputKeys.Up = keyData; break;                          case GameInput.Down: GameInputKeys.Down = keyData; break;                          case GameInput.Left: GameInputKeys.Left = keyData; break;                          case GameInput.Right: GameInputKeys.Right = keyData; break;                          case GameInput.Jump: GameInputKeys.Jump = keyData; break;                          case GameInput.Shoot: GameInputKeys.Shoot = keyData; break;                          case GameInput.Start: GameInputKeys.Start = keyData; break;                          case GameInput.Select: GameInputKeys.Select = keyData; break;                      }
Missing Default,MegaMan.Engine.Entities.Effects,PositionEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\PositionEffectLoader.cs,ParsePositionBehavior,The following switch statement is missing a default case: switch (axisInfo.OffsetDirection)                  {                      case OffsetDirection.Inherit:                          action += entity => {                              var offset = axisInfo.Offset ?? CheckNumericVar(entity' offsetVar) ?? 0;                              PositionComponent pos = entity.GetComponent<PositionComponent>();                              if (pos != null && entity.Parent != null)                              {                                  Direction offdir = entity.Parent.Direction;                                  switch (offdir)                                  {                                      case Direction.Down: pos.SetPosition(new PointF(pos.Position.X' pos.Position.Y + offset)); break;                                      case Direction.Up: pos.SetPosition(new PointF(pos.Position.X' pos.Position.Y - offset)); break;                                      case Direction.Left: pos.SetPosition(new PointF(pos.Position.X - offset' pos.Position.Y)); break;                                      case Direction.Right: pos.SetPosition(new PointF(pos.Position.X + offset' pos.Position.Y)); break;                                  }                              }                          };                          break;                        case OffsetDirection.Input:                          action += entity => {                              var offset = axisInfo.Offset ?? CheckNumericVar(entity' offsetVar) ?? 0;                              PositionComponent pos = entity.GetComponent<PositionComponent>();                              InputComponent input = entity.GetComponent<InputComponent>();                              if (input != null && pos != null)                              {                                  if (axis == Axis.Y)                                  {                                      if (input.Down) pos.SetPosition(new PointF(pos.Position.X' pos.Position.Y + offset));                                      else if (input.Up) pos.SetPosition(new PointF(pos.Position.X' pos.Position.Y - offset));                                  } else                                  {                                      if (input.Left) pos.SetPosition(new PointF(pos.Position.X - offset' pos.Position.Y));                                      else if (input.Right || (!input.Up && !input.Down)) pos.SetPosition(new PointF(pos.Position.X + offset' pos.Position.Y));                                  }                              }                          };                          break;                        case OffsetDirection.Left:                          action += entity =>                          {                              var offset = axisInfo.Offset ?? CheckNumericVar(entity' offsetVar) ?? 0;                              PositionComponent pos = entity.GetComponent<PositionComponent>();                              if (pos != null) pos.SetPosition(new PointF(pos.Position.X - offset' pos.Position.Y));                          };                          break;                        case OffsetDirection.Right:                          action += entity =>                          {                              var offset = axisInfo.Offset ?? CheckNumericVar(entity' offsetVar) ?? 0;                              PositionComponent pos = entity.GetComponent<PositionComponent>();                              if (pos != null) pos.SetPosition(new PointF(pos.Position.X + offset' pos.Position.Y));                          };                          break;                        case OffsetDirection.Down:                          action += entity =>                          {                              var offset = axisInfo.Offset ?? CheckNumericVar(entity' offsetVar) ?? 0;                              PositionComponent pos = entity.GetComponent<PositionComponent>();                              if (pos != null) pos.SetPosition(new PointF(pos.Position.X' pos.Position.Y + offset));                          };                          break;                        case OffsetDirection.Up:                          action += entity =>                          {                              var offset = axisInfo.Offset ?? CheckNumericVar(entity' offsetVar) ?? 0;                              PositionComponent pos = entity.GetComponent<PositionComponent>();                              if (pos != null) pos.SetPosition(new PointF(pos.Position.X' pos.Position.Y - offset));                          };                          break;                  }
Missing Default,MegaMan.Engine.Entities.Effects,PositionEffectLoader,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Entities\Effects\PositionEffectLoader.cs,ParsePositionBehavior,The following switch statement is missing a default case: switch (offdir)                                  {                                      case Direction.Down: pos.SetPosition(new PointF(pos.Position.X' pos.Position.Y + offset)); break;                                      case Direction.Up: pos.SetPosition(new PointF(pos.Position.X' pos.Position.Y - offset)); break;                                      case Direction.Left: pos.SetPosition(new PointF(pos.Position.X - offset' pos.Position.Y)); break;                                      case Direction.Right: pos.SetPosition(new PointF(pos.Position.X + offset' pos.Position.Y)); break;                                  }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,ParseComparison,The following switch statement is missing a default case: switch (op.id) {                      case TokenId.Equal:                      case TokenId.DoubleEqual:                          left = GenerateEqual(left' right);                          break;                      case TokenId.ExclamationEqual:                      case TokenId.LessGreater:                          left = GenerateNotEqual(left' right);                          break;                      case TokenId.GreaterThan:                          left = GenerateGreaterThan(left' right);                          break;                      case TokenId.GreaterThanEqual:                          left = GenerateGreaterThanEqual(left' right);                          break;                      case TokenId.LessThan:                          left = GenerateLessThan(left' right);                          break;                      case TokenId.LessThanEqual:                          left = GenerateLessThanEqual(left' right);                          break;                  }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,ParseAdditive,The following switch statement is missing a default case: switch (op.id) {                      case TokenId.Plus:                          if (left.Type == typeof(string) || right.Type == typeof(string))                              goto case TokenId.Amphersand;                          CheckAndPromoteOperands(typeof(IAddSignatures)' op.text' ref left' ref right' op.pos);                          left = GenerateAdd(left' right);                          break;                      case TokenId.Minus:                          CheckAndPromoteOperands(typeof(ISubtractSignatures)' op.text' ref left' ref right' op.pos);                          left = GenerateSubtract(left' right);                          break;                      case TokenId.Amphersand:                          left = GenerateStringConcat(left' right);                          break;                  }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,ParseMultiplicative,The following switch statement is missing a default case: switch (op.id) {                      case TokenId.Asterisk:                          left = Expression.Multiply(left' right);                          break;                      case TokenId.Slash:                          left = Expression.Divide(left' right);                          break;                      case TokenId.Percent:                      case TokenId.Identifier:                          left = Expression.Modulo(left' right);                          break;                  }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,PromoteExpression,The following switch statement is missing a default case: switch (Type.GetTypeCode(ce.Type)) {                              case TypeCode.Int32:                              case TypeCode.UInt32:                              case TypeCode.Int64:                              case TypeCode.UInt64:                                  value = ParseNumber(text' target);                                  break;                              case TypeCode.Double:                                  if (target == typeof(decimal)) value = ParseNumber(text' target);                                  break;                              case TypeCode.String:                                  value = ParseEnum(text' target);                                  break;                          }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,ParseNumber,The following switch statement is missing a default case: switch (Type.GetTypeCode(GetNonNullableType(type))) {                  case TypeCode.SByte:                      sbyte sb;                      if (sbyte.TryParse(text' out sb)) return sb;                      break;                  case TypeCode.Byte:                      byte b;                      if (byte.TryParse(text' out b)) return b;                      break;                  case TypeCode.Int16:                      short s;                      if (short.TryParse(text' out s)) return s;                      break;                  case TypeCode.UInt16:                      ushort us;                      if (ushort.TryParse(text' out us)) return us;                      break;                  case TypeCode.Int32:                      int i;                      if (int.TryParse(text' out i)) return i;                      break;                  case TypeCode.UInt32:                      uint ui;                      if (uint.TryParse(text' out ui)) return ui;                      break;                  case TypeCode.Int64:                      long l;                      if (long.TryParse(text' out l)) return l;                      break;                  case TypeCode.UInt64:                      ulong ul;                      if (ulong.TryParse(text' out ul)) return ul;                      break;                  case TypeCode.Single:                      float f;                      if (text.TryParse(out f)) return f;                      break;                  case TypeCode.Double:                      double d;                      if (text.TryParse(out d)) return d;                      break;                  case TypeCode.Decimal:                      decimal e;                      if (decimal.TryParse(text' out e)) return e;                      break;              }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {                          case TypeCode.SByte:                          case TypeCode.Int16:                          case TypeCode.Int32:                          case TypeCode.Int64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {                          case TypeCode.Byte:                          case TypeCode.Int16:                          case TypeCode.UInt16:                          case TypeCode.Int32:                          case TypeCode.UInt32:                          case TypeCode.Int64:                          case TypeCode.UInt64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {                          case TypeCode.Int16:                          case TypeCode.Int32:                          case TypeCode.Int64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {                          case TypeCode.UInt16:                          case TypeCode.Int32:                          case TypeCode.UInt32:                          case TypeCode.Int64:                          case TypeCode.UInt64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {                          case TypeCode.Int32:                          case TypeCode.Int64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {                          case TypeCode.UInt32:                          case TypeCode.Int64:                          case TypeCode.UInt64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {                          case TypeCode.Int64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {                          case TypeCode.UInt64:                          case TypeCode.Single:                          case TypeCode.Double:                          case TypeCode.Decimal:                              return true;                      }
Missing Default,System.Linq.Dynamic,ExpressionParser,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Dynamic.cs,IsCompatibleWith,The following switch statement is missing a default case: switch (tc) {                          case TypeCode.Single:                          case TypeCode.Double:                              return true;                      }
Missing Default,MegaMan.Engine.Forms.MenuControllers,NtscMenuController,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\Forms\MenuControllers\NtscMenuController.cs,NtscMenuController,The following switch statement is missing a default case: switch (ntscOption)              {                  case NTSC_Options.Composite:                      this.ntscSetup = snes_ntsc_setup_t.snes_ntsc_composite;                      break;                    case NTSC_Options.RGB:                      this.ntscSetup = snes_ntsc_setup_t.snes_ntsc_rgb;                      break;                    case NTSC_Options.S_Video:                      this.ntscSetup = snes_ntsc_setup_t.snes_ntsc_svideo;                      break;              }
Missing Default,MegaMan.Engine.StateMachine,GameStateMachine,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\StateMachine\GameStateMachine.cs,ProcessHandler,The following switch statement is missing a default case: switch (handler.Mode)              {                  case HandlerMode.Next:                      new EndStateTransition(handler).Apply(this);                      break;                    case HandlerMode.Push:                      new PushStateTransition(handler).Apply(this);                      break;                    case HandlerMode.Pop:                      new PopStateTransition(handler).Apply(this);                      break;              }
Missing Default,MegaMan.Engine.StateMachine,GameStateMachine,C:\repos\Tesserex_C--MegaMan-Engine\Mega Man\StateMachine\GameStateMachine.cs,StartHandler,The following switch statement is missing a default case: switch (handler.Type)                  {                      case HandlerType.Scene:                          StartScene(handler);                          break;                        case HandlerType.Stage:                          StartStage(handler.Name);                          break;                        case HandlerType.Menu:                          StartMenu(handler);                          break;                  }
