Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MegaMan.IO.Xml.Effects,CollisionEffectPartXmlWriter,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\Effects\CollisionEffectPartXmlWriter.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,MegaMan.IO.Xml.Effects,EffectXmlWriter,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\Effects\EffectXmlWriter.cs,WriteEffectContents,Cyclomatic complexity of the method is 9
Complex Method,MegaMan.IO.Xml,ProjectXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\ProjectXmlReader.cs,Load,Cyclomatic complexity of the method is 13
Complex Method,MegaMan.IO.Xml,ProjectXmlWriter,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\ProjectXmlWriter.cs,Save,Cyclomatic complexity of the method is 12
Complex Method,MegaMan.IO.Xml,SpriteXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\SpriteXmlReader.cs,LoadSprite,Cyclomatic complexity of the method is 8
Complex Method,MegaMan.IO.Xml,StageXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\StageXmlReader.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,MegaMan.IO.Xml,StageXmlWriter,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\StageXmlWriter.cs,Save,Cyclomatic complexity of the method is 10
Complex Method,MegaMan.IO.Xml,StageXmlWriter,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\StageXmlWriter.cs,SaveScreen,Cyclomatic complexity of the method is 8
Complex Method,MegaMan.IO.Xml,TilesetXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\TilesetXmlReader.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,MegaMan.IO.Xml,TilesetXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\TilesetXmlReader.cs,LoadProperties,Cyclomatic complexity of the method is 27
Complex Method,MegaMan.IO.Xml,TilesetXmlWriter,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\TilesetXmlWriter.cs,SaveProperties,Cyclomatic complexity of the method is 15
Complex Method,MegaMan.IO.Xml.Handlers.Commands,MenuOptionCommandXmlWriter,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\Handlers\Commands\MenuOptionCommandXmlWriter.cs,Write,Cyclomatic complexity of the method is 8
Long Parameter List,MegaMan.IO.Xml,GameXmlException,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\GameXmlException.cs,GameXmlException,The method has 6 parameters. Parameters: file' line' entity' tag' attribute' message
Long Parameter List,MegaMan.IO.Xml,StageXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\StageXmlReader.cs,LoadScreenLayer,The method has 7 parameters. Parameters: node' stagePath' name' tileset' tileStartX' tileStartY' foreground
Long Statement,MegaMan.IO.Xml,IncludeFileXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\IncludeFileXmlReader.cs,LoadSound,The length of the statement  "                if (!trackAttr.Value.TryParse(out track) || track <= 0) throw new GameXmlException(trackAttr' "Sound track attribute must be an integer greater than zero."); " is 157.
Long Statement,MegaMan.IO.Xml,ProjectXmlWriter,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\ProjectXmlWriter.cs,Save,The length of the statement  "            _writer.WriteAttributeString("version"' System.Reflection.Assembly.GetExecutingAssembly().GetName().Version.ToString()); " is 120.
Long Statement,MegaMan.IO.Xml,StageXmlWriter,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\StageXmlWriter.cs,Save,The length of the statement  "                if (_stageInfo.MusicIntroPath != null && !string.IsNullOrEmpty(_stageInfo.MusicIntroPath.Relative)) _writer.WriteElementString("Intro"' _stageInfo.MusicIntroPath.Relative); " is 172.
Long Statement,MegaMan.IO.Xml,StageXmlWriter,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\StageXmlWriter.cs,Save,The length of the statement  "                if (_stageInfo.MusicLoopPath != null && !string.IsNullOrEmpty(_stageInfo.MusicLoopPath.Relative)) _writer.WriteElementString("Loop"' _stageInfo.MusicLoopPath.Relative); " is 168.
Long Statement,MegaMan.IO.Xml.Includes,SoundXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\Includes\SoundXmlReader.cs,LoadSound,The length of the statement  "                if (!trackAttr.Value.TryParse(out track) || track <= 0) throw new GameXmlException(trackAttr' "Sound track attribute must be an integer greater than zero."); " is 157.
Magic Number,MegaMan.IO.Xml,StageXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\StageXmlReader.cs,Load,The following statement contains a magic number: _info.PlayerStartX = 3;
Magic Number,MegaMan.IO.Xml,StageXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\StageXmlReader.cs,Load,The following statement contains a magic number: _info.PlayerStartY = 3;
Magic Number,MegaMan.IO.Xml.Includes,EntityXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\Includes\EntityXmlReader.cs,Load,The following statement contains a magic number: var info = new EntityInfo() {                  Name = xmlNode.RequireAttribute("name").Value'                  MaxAlive = xmlNode.TryAttribute<int>("maxAlive"' 50)'                  GravityFlip = xmlNode.TryElementValue<bool>("GravityFlip")'                  Components = new List<IComponentInfo>()              };
Magic Number,MegaMan.IO.Xml.Handlers.Commands,AutoscrollCommandXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\Handlers\Commands\AutoscrollCommandXmlReader.cs,Load,The following statement contains a magic number: info.StartX = node.TryAttribute<int>("startX"' 128);
Magic Number,MegaMan.IO.Xml.Handlers.Commands,FillCommandXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\Handlers\Commands\FillCommandXmlReader.cs,Load,The following statement contains a magic number: info.Blue = byte.Parse(split[2]);
Missing Default,MegaMan.IO.Xml.Effects,WeaponEffectPartXmlWriter,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\Effects\WeaponEffectPartXmlWriter.cs,Write,The following switch statement is missing a default case: switch (weapon.Action)              {                  case WeaponAction.Shoot:                  case WeaponAction.RotateForward:                  case WeaponAction.RotateBackward:                      writer.WriteValue(weapon.Action.ToString());                      break;                    case WeaponAction.Ammo:                      writer.WriteAttributeString("val"' weapon.Ammo.ToString());                      break;                    case WeaponAction.Change:                      writer.WriteAttributeString("name"' weapon.ChangeName);                      break;              }
Missing Default,MegaMan.IO.Xml,SpriteXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\SpriteXmlReader.cs,LoadSprite,The following switch statement is missing a default case: switch (style)                  {                      case "Bounce": sprite.AnimStyle = AnimationStyle.Bounce; break;                      case "PlayOnce": sprite.AnimStyle = AnimationStyle.PlayOnce; break;                  }
Missing Default,MegaMan.IO.Xml,SpriteXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\SpriteXmlReader.cs,LoadSprite,The following switch statement is missing a default case: switch (direction)                  {                      case "Forward": sprite.AnimDirection = AnimationDirection.Forward; break;                      case "Backward": sprite.AnimDirection = AnimationDirection.Backward; break;                  }
Missing Default,MegaMan.IO.Xml,StageXmlWriter,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\StageXmlWriter.cs,Save,The following switch statement is missing a default case: switch (join.direction)                  {                      case JoinDirection.Both: _writer.WriteAttributeString("direction"' "both"); break;                      case JoinDirection.ForwardOnly: _writer.WriteAttributeString("direction"' "forward"); break;                      case JoinDirection.BackwardOnly: _writer.WriteAttributeString("direction"' "backward"); break;                  }
Missing Default,MegaMan.IO.Xml,TilesetXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\TilesetXmlReader.cs,LoadProperties,The following switch statement is missing a default case: switch (attr.Name.LocalName.ToLower())                  {                      case "name":                          properties.Name = attr.Value;                          break;                        case "blocking":                          if (!bool.TryParse(attr.Value' out b)) throw new Exception("Tile property blocking attribute was not a valid bool.");                          properties.Blocking = b;                          break;                        case "climbable":                          if (!bool.TryParse(attr.Value' out b)) throw new Exception("Tile property climbable attribute was not a valid bool.");                          properties.Climbable = b;                          break;                        case "lethal":                          if (!bool.TryParse(attr.Value' out b)) throw new Exception("Tile property lethal attribute was not a valid bool.");                          properties.Lethal = b;                          break;                        case "pushx":                          if (!attr.Value.TryParse(out f)) throw new Exception("Tile property pushX attribute was not a valid number.");                          properties.PushX = f;                          break;                        case "pushy":                          if (!attr.Value.TryParse(out f)) throw new Exception("Tile property pushY attribute was not a valid number.");                          properties.PushY = f;                          break;                        case "resistx":                          if (!attr.Value.TryParse(out f)) throw new Exception("Tile property resistX attribute was not a valid number.");                          properties.ResistX = f;                          break;                        case "resisty":                          if (!attr.Value.TryParse(out f)) throw new Exception("Tile property resistY attribute was not a valid number.");                          properties.ResistY = f;                          break;                        case "dragx":                          if (!attr.Value.TryParse(out f)) throw new Exception("Tile property dragX attribute was not a valid number.");                          properties.DragX = f;                          break;                        case "dragy":                          if (!attr.Value.TryParse(out f)) throw new Exception("Tile property dragY attribute was not a valid number.");                          properties.DragY = f;                          break;                        case "sinking":                          if (!attr.Value.TryParse(out f)) throw new Exception("Tile property sinking attribute was not a valid number.");                          properties.Sinking = f;                          break;                        case "gravitymult":                          if (!attr.Value.TryParse(out f)) throw new Exception("Tile property gravitymult attribute was not a valid number.");                          properties.GravityMult = f;                          break;                        case "onenter":                          properties.OnEnter = attr.Value;                          break;                        case "onleave":                          properties.OnLeave = attr.Value;                          break;                        case "onover":                          properties.OnOver = attr.Value;                          break;                  }
Missing Default,MegaMan.IO.Xml.Handlers,HandlerTransferXmlReader,D:\research\architectureSmells\repos1\Tesserex_C--MegaMan-Engine\IO\Xml\Handlers\HandlerTransferXmlReader.cs,Load,The following switch statement is missing a default case: switch (node.RequireAttribute("type").Value.ToLower())                  {                      case "stage":                          transfer.Type = HandlerType.Stage;                          break;                        case "scene":                          transfer.Type = HandlerType.Scene;                          break;                        case "menu":                          transfer.Type = HandlerType.Menu;                          break;                  }
