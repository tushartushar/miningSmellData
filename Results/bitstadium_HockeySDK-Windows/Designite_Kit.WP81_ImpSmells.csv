Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,CheckAndHandleExistingTokenAsync,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.HockeyApp.Services,HttpClientTransmission,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\HttpClientTransmission.cs,PostAsync,The method has 5 parameters. Parameters: address' content' contentType' contentEncoding' timeout
Long Parameter List,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,AuthenticateUser,The method has 5 parameters. Parameters: authMode' tokenValidationPolicy' authValidationMode' email' appSecret
Long Parameter List,Microsoft.HockeyApp,HockeyClientExtensionsWinUniversal,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\HockeyClientExtensionsWinUniversal.cs,AuthorizeUser,The method has 5 parameters. Parameters: this' successAction' eMail' tokenValidationPolicy' authValidationMode
Long Parameter List,Microsoft.HockeyApp,HockeyClientExtensionsWinUniversal,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\HockeyClientExtensionsWinUniversal.cs,IdentifyUser,The method has 6 parameters. Parameters: this' appSecret' successAction' eMail' tokenValidationPolicy' authValidationMode
Long Parameter List,Microsoft.HockeyApp,HockeyClientExtensionsWinUniversal,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\HockeyClientExtensionsWinUniversal.cs,AuthorizeUser,The method has 5 parameters. Parameters: this' pageTypeForSuccessRedirect' eMail' tokenValidationPolicy' authValidationMode
Long Parameter List,Microsoft.HockeyApp,HockeyClientExtensionsWinUniversal,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\HockeyClientExtensionsWinUniversal.cs,IdentifyUser,The method has 6 parameters. Parameters: this' appSecret' pageTypeForSuccessRedirect' eMail' tokenValidationPolicy' authValidationMode
Long Identifier,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,,The length of the parameter AsyncRetryIntervalInMilliseconds is 32.
Long Identifier,Microsoft.HockeyApp,FeedbackManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\FeedbackManager.cs,,The length of the parameter FeedbackThreadTokensSettingsKey is 31.
Long Identifier,Microsoft.HockeyApp,HockeyClientExtensionsWP81,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\HockeyClientExtensionsWP81.cs,,The length of the parameter customUnobservedTaskExceptionFunc is 33.
Long Statement,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,Init,The length of the statement  "                        string msg = string.Format(CultureInfo.InvariantCulture' "Storage: Unhandled exception in DeleteObsoleteFiles: {0}"' task.Exception); " is 133.
Long Statement,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,Peek,The length of the statement  "                            StorageTransmission storageTransmissionItem = LoadTransmissionFromFileAsync(file).ConfigureAwait(false).GetAwaiter().GetResult(); " is 129.
Long Statement,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,Peek,The length of the statement  "                        string msg = string.Format(CultureInfo.InvariantCulture' "Failed to load an item from the storage. file: {0} Exception: {1}"' file' e); " is 135.
Long Statement,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,Delete,The length of the statement  "                IStorageFile file = this.StorageFolder.GetFileAsync(item.FileName).AsTask().ConfigureAwait(false).GetAwaiter().GetResult(); " is 123.
Long Statement,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,Delete,The length of the statement  "                string msg = string.Format(CultureInfo.InvariantCulture' "Failed to delete a file. file: {0} Exception: {1}"' item == null ? "null" : item.FullFilePath' e); " is 156.
Long Statement,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,EnqueueAsync,The length of the statement  "                // Writes content to a temporaty file and only then rename to avoid the Peek from reading the file before it is being written. " is 126.
Long Statement,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,EnqueueAsync,The length of the statement  "                IStorageFile temporaryFile = await this.StorageFolder.CreateFileAsync(tempFileName + ".tmp").AsTask().ConfigureAwait(false); " is 124.
Long Statement,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,SaveTransmissionToFileAsync,The length of the statement  "                string message = string.Format("Failed to save transmission to file. UnauthorizedAccessException. File path: {0}' FileName: {1}"' file.Path' file.Name); " is 152.
Long Statement,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,LoadTransmissionFromFileAsync,The length of the statement  "                    StorageTransmission storageTransmissionItem = await StorageTransmission.CreateFromStreamAsync(stream' file.Path).ConfigureAwait(false); " is 135.
Long Statement,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,LoadTransmissionFromFileAsync,The length of the statement  "                string message = string.Format("Failed to load transmission from file. File path: {0}' FileName: {1}' Exception: {2}"' file.Path' file.Name' e); " is 144.
Long Statement,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,GetFiles,The length of the statement  "                    return files.Where((file) => Path.GetExtension(file.Name).Equals(filterByExtension' StringComparison.OrdinalIgnoreCase)); " is 121.
Long Statement,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetDeviceType,The length of the statement  "            var rootContainer = await PnpObject.CreateFromIdAsync(PnpObjectType.DeviceContainer' RootContainer' new[] { DisplayPrimaryCategoryKey }); " is 137.
Long Statement,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetDeviceUniqueId,The length of the statement  "                // Per documentation here http://msdn.microsoft.com/en-us/library/windows/apps/jj553431.aspx we are selectively pulling out  " is 123.
Long Statement,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetOperatingSystemVersionAsync,The length of the statement  "            // Getting OS Version for WinRT application is tricky. The Silverlight API using <see href="System.Environment.OSVersion" /> " is 124.
Long Statement,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetOperatingSystemVersionAsync,The length of the statement  "            // has been removed' but the new one <see href="AnalyticsInfo.VersionInfo.DeviceFamilyVersion" /> has been introduced only in a next  " is 132.
Long Statement,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetOperatingSystemVersionAsync,The length of the statement  "            // For Windows Phone' try to get the version using reflection on top of AnalyticsInfo.VersionInfo.DeviceFamilyVersion' if that fails'  " is 133.
Long Statement,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetOperatingSystemVersionAsync,The length of the statement  "            // For Windows 8.1 just use PnpObject which does its job. You can't use PnpObject for Windows Phone' it does not return correct value. " is 134.
Long Statement,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetOperatingSystemVersionAsync,The length of the statement  "            return HockeyPlatformHelper81.Name == "HockeySDKWP81" ? GetOsVersionUsingAnalyticsInfo() : await GetOsVersionUsingPnpObject(); " is 126.
Long Statement,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetOsVersionUsingPnpObject,The length of the statement  "            PnpObjectCollection pnpObjects = await PnpObject.FindAllAsync(PnpObjectType.Device' requestedProperties' RootContainerQuery); " is 125.
Long Statement,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetOemName,The length of the statement  "            var rootContainer = await PnpObject.CreateFromIdAsync(PnpObjectType.DeviceContainer' RootContainer' new[] { ManufacturerKey }); " is 127.
Long Statement,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,StoreStringProtectedAsync,The length of the statement  "            var file = await ApplicationData.Current.LocalFolder.CreateFileAsync(dataIdentifier + ConstantsUniversal.EncryptedFileExt' CreationCollisionOption.ReplaceExisting); " is 164.
Long Statement,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,RetrieveProtectedStringAsync,The length of the statement  "                buffer = await FileIO.ReadBufferAsync(await ApplicationData.Current.LocalFolder.GetFileAsync(dataIdentifier + ConstantsUniversal.EncryptedFileExt)); " is 148.
Long Statement,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,UpdateAuthStatusAsync,The length of the statement  "                HockeyClient.Current.AsInternal().PlatformHelper.SetSettingValue(ConstantsUniversal.AuthLastAuthorizedVersionKey' HockeyClient.Current.AsInternal().VersionInfo); " is 161.
Long Statement,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,AuthenticateUser,The length of the statement  "                throw new Exception("Internal error: AppSecret must be provided when Identify function is used"); //ResourceManager.Current.MainResourceMap " is 139.
Long Statement,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,AuthenticateUser,The length of the statement  "                string lastAuthorizedVersion = HockeyClient.Current.AsInternal().PlatformHelper.GetSettingValue(ConstantsUniversal.AuthLastAuthorizedVersionKey); " is 145.
Long Statement,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,AuthenticateUser,The length of the statement  "                needsLogin = (lastAuthorizedVersion == null) || (new Version(lastAuthorizedVersion) < new Version(HockeyClient.Current.AsInternal().VersionInfo)); " is 146.
Long Statement,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,CheckAndHandleExistingTokenAsync,The length of the statement  "                if (AuthenticationMode.Authorize.Equals(authMode) && !aS.IsAuthorized || AuthenticationMode.Identify.Equals(authMode) && aS.IsAuthorized) " is 137.
Long Statement,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,ExecuteSuccessRedirectOrAction,The length of the statement  "                await CoreWindow.GetForCurrentThread().Dispatcher.RunAsync(CoreDispatcherPriority.Normal' new DispatchedHandler(this.SuccessAction)); " is 133.
Long Statement,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,RemoveUserTokenAsync,The length of the statement  "                var file = await ApplicationData.Current.LocalFolder.GetFileAsync(ConstantsUniversal.AuthStatusKey + ConstantsUniversal.EncryptedFileExt); " is 138.
Long Statement,Microsoft.HockeyApp,FeedbackManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\FeedbackManager.cs,RefreshFeedbackThreadVMAsync,The length of the statement  "                threadVM.FeedbackThread = (await HockeyClient.Current.AsInternal().OpenFeedbackThreadAsync(threadVM.FeedbackThread.Token)) ?? FeedbackThread.CreateInstance(); " is 158.
Long Statement,Microsoft.HockeyApp,CrashHandler,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\CrashHandler.cs,AskUserForAgreementAsync,The length of the statement  "            var messageDialog = new MessageDialog(LocalizedStrings.LocalizedResources.SendCrashQuestion' LocalizedStrings.LocalizedResources.CrashData); " is 140.
Long Statement,Microsoft.HockeyApp,UpdateManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\UpdateManager.cs,UpdateVersionIfAvailable,The length of the statement  "                        && (updateCheckSettings.CustomDoShowUpdateFunc == null || updateCheckSettings.CustomDoShowUpdateFunc(newestAvailableAppVersion))) " is 129.
Long Statement,Microsoft.HockeyApp,UpdateManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\UpdateManager.cs,UpdateVersionIfAvailable,The length of the statement  "                        if (updateCheckSettings.UpdateMode.Equals(UpdateMode.InApp) || (updateCheckSettings.EnforceUpdateIfMandatory && newestAvailableAppVersion.Mandatory)) " is 149.
Long Statement,Microsoft.HockeyApp,UpdateManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\UpdateManager.cs,ShowUpdateNotification,The length of the statement  "            var dialog = new MessageDialog(LocalizedStrings.LocalizedResources.UpdateAvailable' LocalizedStrings.LocalizedResources.UpdateNotification); " is 140.
Long Statement,Microsoft.HockeyApp,UpdateManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\UpdateManager.cs,DoUpdate,The length of the statement  "            var aetxUri = new Uri(HockeyClient.Current.AsInternal().ApiBaseVersion2 + "apps/" + HockeyClient.Current.AsInternal().AppIdentifier + ".aetx"' UriKind.Absolute); " is 161.
Long Statement,Microsoft.HockeyApp,UpdateManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\UpdateManager.cs,DoUpdate,The length of the statement  "            var downloadUri = new Uri(HockeyClient.Current.AsInternal().ApiBaseVersion2 + "apps/" + HockeyClient.Current.AsInternal().AppIdentifier + "/app_versions/" + availableUpdate.Id + ".appx"' UriKind.Absolute); " is 205.
Long Statement,Microsoft.HockeyApp,UpdateManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\UpdateManager.cs,DoUpdate,The length of the statement  "                await new MessageDialog(String.Format(LocalizedStrings.LocalizedResources.UpdateAPIError' installError.Message)).ShowAsync(); " is 125.
Long Statement,Microsoft.HockeyApp.Common,SuspensionManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "                StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync(sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 140.
Long Statement,Microsoft.HockeyApp.Common,SuspensionManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Common\SuspensionManager.cs,RestoreAsync,The length of the statement  "                    if (weakFrameReference.TryGetTarget(out frame) && (string)frame.GetValue(FrameSessionBaseKeyProperty) == sessionBaseKey) " is 120.
Long Statement,Microsoft.HockeyApp.Common,SuspensionManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "                throw new InvalidOperationException("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 138.
Long Statement,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,SaveAsPngIntoBufferAsync,The length of the statement  "            return await canvas.SaveAsPngIntoBufferAsync(DisplayInformation.GetForCurrentView().RawPixelsPerViewPixel' dpiForImage).ConfigureAwait(false);" is 142.
Long Statement,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The length of the statement  "                    a = byte.Parse(hexColorString.Substring(0' 2)' System.Globalization.NumberStyles.HexNumber' CultureInfo.InvariantCulture);" is 122.
Long Statement,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The length of the statement  "                r = byte.Parse(hexColorString.Substring(start' 2)' System.Globalization.NumberStyles.HexNumber' CultureInfo.InvariantCulture);" is 126.
Long Statement,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The length of the statement  "                g = byte.Parse(hexColorString.Substring(start + 2' 2)' System.Globalization.NumberStyles.HexNumber' CultureInfo.InvariantCulture);" is 130.
Long Statement,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The length of the statement  "                b = byte.Parse(hexColorString.Substring(start + 4' 2)' System.Globalization.NumberStyles.HexNumber' CultureInfo.InvariantCulture);" is 130.
Long Statement,Microsoft.HockeyApp.Tools,CanvasExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\Tools\CanvasExtensions.cs,SaveAsPngIntoBufferAsync,The length of the statement  "            //string currentresolution = Window.Current.Bounds.Width * scaleFactor + "*" + Window.Current.Bounds.Height * scaleFactor; " is 122.
Long Statement,Microsoft.HockeyApp.Tools,WebBrowserHelper,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\Tools\WebBrowserHelper.cs,GetCssStylesAsync,The length of the statement  "            StorageFile file = await StorageFile.GetFileFromApplicationUriAsync(new Uri("ms-appx:///"+ WebBrowserHelper.AssemblyNameWithoutExtension +"/Assets/wp8releasenotes.css")); " is 170.
Long Statement,Microsoft.HockeyApp.Tools,WebBrowserHelper,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\Tools\WebBrowserHelper.cs,WrapContentAsync,The length of the statement  "            builder.Append("<html><head><meta name='viewport' content='width=device-width;user-scalable=no' /><style type='text/css'>"); " is 124.
Long Statement,Microsoft.HockeyApp.Model,ModelExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\Model\ModelExtensions.cs,SaveToStorageAsync,The length of the statement  "                await helper.WriteStreamToFileAsync(stream' ConstantsUniversal.OpenFeedbackMessageFile' ConstantsUniversal.FeedbackAttachmentTmpDir).ConfigureAwait(false); " is 155.
Long Statement,Microsoft.HockeyApp.ViewModels,FeedbackAttachmentVM,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\ViewModels\FeedbackAttachmentVM.cs,LoadFromStorageAsync,The length of the statement  "            using (var stream = (await helper.GetStreamAsync(filename' ConstantsUniversal.FeedbackAttachmentTmpDir)).AsRandomAccessStream()) " is 128.
Long Statement,Microsoft.HockeyApp.ViewModels,FeedbackAttachmentVM,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\ViewModels\FeedbackAttachmentVM.cs,SaveToStorageAsync,The length of the statement  "                counter + AttachmentNameSeparator + this.FeedbackAttachment.FileName + AttachmentFileExt ' ConstantsUniversal.FeedbackAttachmentTmpDir); " is 136.
Long Statement,Microsoft.HockeyApp.ViewModels,FeedbackMessageVM,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\ViewModels\FeedbackMessageVM.cs,SendFeedbackAsync,The length of the statement  "                attachment.FeedbackAttachment.FileName = Path.GetFileNameWithoutExtension(attachment.FeedbackAttachment.FileName) + ".jpg"; " is 123.
Long Statement,Microsoft.HockeyApp.ViewModels,FeedbackMessageVM,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\ViewModels\FeedbackMessageVM.cs,LoadFeedbackMessageVMFromStorageAsync,The length of the statement  "            if (await helper.FileExistsAsync(ConstantsUniversal.OpenFeedbackMessageFile' ConstantsUniversal.FeedbackAttachmentTmpDir))" is 122.
Long Statement,Microsoft.HockeyApp.ViewModels,FeedbackMessageVM,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\ViewModels\FeedbackMessageVM.cs,LoadFeedbackMessageVMFromStorageAsync,The length of the statement  "                using (var stream = await helper.GetStreamAsync(ConstantsUniversal.OpenFeedbackMessageFile' ConstantsUniversal.FeedbackAttachmentTmpDir))" is 137.
Long Statement,Microsoft.HockeyApp.ViewModels,FeedbackMessageVM,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\ViewModels\FeedbackMessageVM.cs,LoadFeedbackMessageVMFromStorageAsync,The length of the statement  "                var files = await helper.GetFileNamesAsync(ConstantsUniversal.FeedbackAttachmentTmpDir'"*" + FeedbackAttachmentVM.AttachmentFileExt);" is 133.
Long Statement,Microsoft.HockeyApp.ViewModels,FeedbackThreadVM,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\ViewModels\FeedbackThreadVM.cs,PostMessageAsync,The length of the statement  "            var msg = await this.FeedbackThread.PostFeedbackMessageAsync(msgVM.Message' msgVM.Email' msgVM.Subject' msgVM.Username' msgVM.Attachments.Select(att => att.FeedbackAttachment)); " is 177.
Long Statement,Microsoft.HockeyApp.Views,LoginPage,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Views\LoginPage.xaml.cs,AuthenticateOnlineAsync,The length of the statement  "                IAuthStatus status = await (this.VM.IsAuthorize ? this.VM.AuthorizeUserAsync(this.Password.Password) : this.VM.IdentifyUserAsync()); " is 132.
Long Statement,Microsoft.HockeyApp.Views,UpdatePage,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Views\UpdatePage.xaml.cs,InstallAETX_Click,The length of the statement  "            var aetxUri = new Uri(HockeyClient.Current.AsInternal().ApiBaseVersion2 + "apps/" + this.VM.NewestVersion.PublicIdentifier + ".aetx"' UriKind.Absolute); " is 152.
Long Statement,Microsoft.HockeyApp.Views,UpdatePage,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Views\UpdatePage.xaml.cs,OnNavigatedTo,The length of the statement  "                this.AppIconImage.Source = new BitmapImage(new Uri("ms-appx:///" + WebBrowserHelper.AssemblyNameWithoutExtension + "/Assets/windows_phone.png"' UriKind.RelativeOrAbsolute));  " is 173.
Long Statement,Microsoft.HockeyApp.Views,UpdatePage,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Views\UpdatePage.xaml.cs,OnNavigatedTo,The length of the statement  "            this.AppIconImage.Source = new BitmapImage(new Uri(HockeyClient.Current.AsInternal().ApiBaseVersion2 + "apps/" + this.VM.NewestVersion.PublicIdentifier + ".png")); " is 163.
Complex Conditional,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetDeviceUniqueId,The conditional expression  "(hardwareEntry[0] == 1 || // CPU ID of the processor                               hardwareEntry[0] == 2 || // Size of the memory                               hardwareEntry[0] == 3 || // Serial number of the disk device                               hardwareEntry[0] == 7 || // Mobile broadband ID                               hardwareEntry[0] == 9) && // BIOS                              hardwareEntry[1] == 0"  is complex.
Complex Conditional,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,CheckAndHandleExistingTokenAsync,The conditional expression  "AuthenticationMode.Authorize.Equals(authMode) && !aS.IsAuthorized || AuthenticationMode.Identify.Equals(authMode) && aS.IsAuthorized"  is complex.
Complex Conditional,Microsoft.HockeyApp,UpdateManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\UpdateManager.cs,UpdateVersionIfAvailable,The conditional expression  "appVersions.Any()                          && new Version(newestAvailableAppVersion.Version) > currentVersion                          && (updateCheckSettings.CustomDoShowUpdateFunc == null || updateCheckSettings.CustomDoShowUpdateFunc(newestAvailableAppVersion))"  is complex.
Virtual Method Call from Constructor,Microsoft.HockeyApp.Tools,DynamicNavigationParameters,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\Tools\DynamicNavigationParameters.cs,DynamicNavigationParameters,The constructor "DynamicNavigationParameters" calls a virtual method "Initialize".
Virtual Method Call from Constructor,Microsoft.HockeyApp.Tools,DynamicNavigationParameters,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\Tools\DynamicNavigationParameters.cs,DynamicNavigationParameters,The constructor "DynamicNavigationParameters" calls a virtual method "Initialize".
Empty Catch Block,Microsoft.HockeyApp,AuthManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\AuthManager.cs,RemoveUserTokenAsync,The method has an empty catch block.
Empty Catch Block,Microsoft.HockeyApp,HockeyPlatformHelper81,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\HockeyPlatformHelper81.cs,DeleteFileAsync,The method has an empty catch block.
Empty Catch Block,Microsoft.HockeyApp,HockeyPlatformHelper81,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\HockeyPlatformHelper81.cs,FileExistsAsync,The method has an empty catch block.
Empty Catch Block,Microsoft.HockeyApp,HockeyPlatformHelper81,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\HockeyPlatformHelper81.cs,GetStreamAsync,The method has an empty catch block.
Empty Catch Block,Microsoft.HockeyApp,ResourceWrapper,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\LocalizedStrings.cs,ResourceWrapper,The method has an empty catch block.
Empty Catch Block,Microsoft.HockeyApp.Tools,DynamicNavigationParameters,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\Tools\DynamicNavigationParameters.cs,TryGetMember,The method has an empty catch block.
Empty Catch Block,Microsoft.HockeyApp.Tools,DynamicNavigationParameters,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\Tools\DynamicNavigationParameters.cs,TrySetMember,The method has an empty catch block.
Magic Number,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,Init,The following statement contains a magic number: this.deletedFilesQueue = new FixedSizeQueue<string>(10);
Magic Number,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,Init,The following statement contains a magic number: this.CapacityInBytes = 10 * 1024 * 1024;
Magic Number,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,Init,The following statement contains a magic number: this.CapacityInBytes = 10 * 1024 * 1024;
Magic Number,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,Init,The following statement contains a magic number: this.CapacityInBytes = 10 * 1024 * 1024;
Magic Number,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,Init,The following statement contains a magic number: this.MaxFiles = 100;
Magic Number,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,Peek,The following statement contains a magic number: IEnumerable<StorageFile> files = this.GetFiles(CommonFileQuery.OrderByName' ".trn"' top: 50);
Magic Number,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,EnqueueAsync,The following statement contains a magic number: this.transmissionsDropped++ % 100 == 0
Magic Number,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,DeleteObsoleteFiles,The following statement contains a magic number: IEnumerable<StorageFile> files = this.GetFiles(CommonFileQuery.DefaultQuery' ".tmp"' 50);
Magic Number,Microsoft.HockeyApp.Services,StorageService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\StorageService.cs,DeleteObsoleteFiles,The following statement contains a magic number: DateTime.UtcNow - file.DateCreated.UtcDateTime >= TimeSpan.FromMinutes(5)
Magic Number,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetDeviceUniqueId,The following statement contains a magic number: byte[] hardwareEntry = new byte[4];
Magic Number,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetDeviceUniqueId,The following statement contains a magic number: builder.Append(hardwareEntry[2]);
Magic Number,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetDeviceUniqueId,The following statement contains a magic number: builder.Append(hardwareEntry[3]);
Magic Number,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetDeviceUniqueId,The following statement contains a magic number: (hardwareEntry[0] == 1 || // CPU ID of the processor                               hardwareEntry[0] == 2 || // Size of the memory                               hardwareEntry[0] == 3 || // Serial number of the disk device                               hardwareEntry[0] == 7 || // Mobile broadband ID                               hardwareEntry[0] == 9) && // BIOS                              hardwareEntry[1] == 0
Magic Number,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetDeviceUniqueId,The following statement contains a magic number: (hardwareEntry[0] == 1 || // CPU ID of the processor                               hardwareEntry[0] == 2 || // Size of the memory                               hardwareEntry[0] == 3 || // Serial number of the disk device                               hardwareEntry[0] == 7 || // Mobile broadband ID                               hardwareEntry[0] == 9) && // BIOS                              hardwareEntry[1] == 0
Magic Number,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetDeviceUniqueId,The following statement contains a magic number: (hardwareEntry[0] == 1 || // CPU ID of the processor                               hardwareEntry[0] == 2 || // Size of the memory                               hardwareEntry[0] == 3 || // Serial number of the disk device                               hardwareEntry[0] == 7 || // Mobile broadband ID                               hardwareEntry[0] == 9) && // BIOS                              hardwareEntry[1] == 0
Magic Number,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetDeviceUniqueId,The following statement contains a magic number: (hardwareEntry[0] == 1 || // CPU ID of the processor                               hardwareEntry[0] == 2 || // Size of the memory                               hardwareEntry[0] == 3 || // Serial number of the disk device                               hardwareEntry[0] == 7 || // Mobile broadband ID                               hardwareEntry[0] == 9) && // BIOS                              hardwareEntry[1] == 0
Magic Number,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,GetDeviceUniqueId,The following statement contains a magic number: offset += 4;
Magic Number,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,ConvertIntToVersion,The following statement contains a magic number: ulong v1 = (v & 0xFFFF000000000000L) >> 48;
Magic Number,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,ConvertIntToVersion,The following statement contains a magic number: ulong v2 = (v & 0x0000FFFF00000000L) >> 32;
Magic Number,Microsoft.HockeyApp.Services.Device,DeviceService,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.UWP\Services\Device\DeviceService.cs,ConvertIntToVersion,The following statement contains a magic number: ulong v3 = (v & 0x00000000FFFF0000L) >> 16;
Magic Number,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The following statement contains a magic number: byte a = 255;
Magic Number,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The following statement contains a magic number: byte r = 255;
Magic Number,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The following statement contains a magic number: byte g = 255;
Magic Number,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The following statement contains a magic number: byte b = 255;
Magic Number,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The following statement contains a magic number: a = byte.Parse(hexColorString.Substring(0' 2)' System.Globalization.NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The following statement contains a magic number: start = 2;
Magic Number,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The following statement contains a magic number: hexColorString.Length == 8
Magic Number,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The following statement contains a magic number: r = byte.Parse(hexColorString.Substring(start' 2)' System.Globalization.NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The following statement contains a magic number: g = byte.Parse(hexColorString.Substring(start + 2' 2)' System.Globalization.NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The following statement contains a magic number: g = byte.Parse(hexColorString.Substring(start + 2' 2)' System.Globalization.NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The following statement contains a magic number: b = byte.Parse(hexColorString.Substring(start + 4' 2)' System.Globalization.NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,Microsoft.HockeyApp.Tools,UtilWPExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Tools\UtilExtensions.cs,ConvertStringToColor,The following statement contains a magic number: b = byte.Parse(hexColorString.Substring(start + 4' 2)' System.Globalization.NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,Microsoft.HockeyApp.Tools,UtilExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\Tools\UtilExtensions.cs,EncodeWriteableBitmapAsync,The following statement contains a magic number: encoder.SetPixelData(BitmapPixelFormat.Bgra8' BitmapAlphaMode.Premultiplied'                 (uint)bmp.PixelWidth' (uint)bmp.PixelHeight'                 96' 96' pixels);
Magic Number,Microsoft.HockeyApp.Tools,UtilExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Universal\Tools\UtilExtensions.cs,EncodeWriteableBitmapAsync,The following statement contains a magic number: encoder.SetPixelData(BitmapPixelFormat.Bgra8' BitmapAlphaMode.Premultiplied'                 (uint)bmp.PixelWidth' (uint)bmp.PixelHeight'                 96' 96' pixels);
Magic Number,Microsoft.HockeyApp.Views,FeedbackImagePage,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Views\FeedbackImagePage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: MyCommandBar.Opened += (s' o) => { MyCommandBar.Opacity = 0.7; };
Magic Number,Microsoft.HockeyApp.Views,FeedbackImagePage,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Views\FeedbackImagePage.xaml.cs,MyCanvas_PointerMoved,The following statement contains a magic number: Line line = new Line()                  {                      X1 = _x1'                      Y1 = _y1'                      X2 = _x2'                      Y2 = _y2'                      StrokeThickness = 4.0'                      Stroke = new SolidColorBrush(_strokeColor)                  };
Magic Number,Microsoft.HockeyApp.Views,FeedbackImagePage,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Views\FeedbackImagePage.xaml.cs,MyCanvas_PointerMoved,The following statement contains a magic number: Distance(_x1' _y1' _x2' _y2) > 2.0
Magic Number,Microsoft.HockeyApp.Views,FeedbackImagePage,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Views\FeedbackImagePage.xaml.cs,Distance,The following statement contains a magic number: d = Math.Sqrt(Math.Pow((x2 - x1)' 2) + Math.Pow((y2 - y1)' 2));
Magic Number,Microsoft.HockeyApp.Views,FeedbackImagePage,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WP81\Views\FeedbackImagePage.xaml.cs,Distance,The following statement contains a magic number: d = Math.Sqrt(Math.Pow((x2 - x1)' 2) + Math.Pow((y2 - y1)' 2));
