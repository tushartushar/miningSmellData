Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.HockeyApp.Gui,UpdateWindow,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\Gui\UpdateWindow.xaml.cs,Connect,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.HockeyApp,HockeyClientWPF,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\HockeyClientWPF.cs,Configure,The method has 8 parameters. Parameters: appIdentifier' appVersionInformation' userID' contactInformation' descriptionLoader' apiBase' userAgentString' keepRunning
Long Identifier,Microsoft.HockeyApp,HockeyClientWPFExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\HockeyClientWPFExtensions.cs,,The length of the parameter customUnhandledExceptionAction is 30.
Long Identifier,Microsoft.HockeyApp,HockeyClientWPFExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\HockeyClientWPFExtensions.cs,,The length of the parameter customUnobservedTaskExceptionAction is 35.
Long Identifier,Microsoft.HockeyApp,HockeyClientWPFExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\HockeyClientWPFExtensions.cs,,The length of the parameter customDispatcherUnhandledExceptionAction is 40.
Long Statement,Microsoft.HockeyApp,CrashHandler,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\CrashHandler.cs,TaskScheduler_UnobservedTaskException,The length of the statement  "            logger.Info("Caught unobserved exception from TaskScheduler! Type={0}' Message={1}"' new object[] { e.Exception.GetType().Name' e.Exception.Message }); " is 151.
Long Statement,Microsoft.HockeyApp,CrashHandler,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\CrashHandler.cs,CurrentDomain_UnhandledException,The length of the statement  "                logger.Info ("Caught unobserved exception from AppDomain! Type={0}' Message={1}"' new object [] { ex.GetType ().Name' ex.Message }); " is 132.
Long Statement,Microsoft.HockeyApp,CrashHandler,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\CrashHandler.cs,Current_DispatcherUnhandledException,The length of the statement  "            logger.Info ("Caught unobserved exception from Dispatcher! Type={0}' Message={1}"' new object [] { e.Exception.GetType ().Name' e.Exception.Message }); " is 151.
Long Statement,Microsoft.HockeyApp,HockeyClientWPFExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\HockeyClientWPFExtensions.cs,SendCrashesAsync,The length of the statement  "                    MessageBoxResult result = MessageBox.Show(LocalizedStrings.LocalizedResources.CrashLogQuestion' LocalizedStrings.LocalizedResources.CrashLogMessageBox' MessageBoxButton.YesNo); " is 176.
Long Statement,Microsoft.HockeyApp,HockeyClientWPF,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\HockeyClientWPF.cs,Configure,The length of the statement  "            logger.Info("Configure HockeyClientWPF with appIdentifier={0}' userID={1}' contactInformation={2}' descriptionLoader available{3}' sendCrashesAutomatically={4}' apiBase={5}"' " is 174.
Long Statement,Microsoft.HockeyApp,HockeyPlatformHelperWPF,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\HockeyPlatformHelperWPF.cs,PostfixWithAppIdHash,The length of the statement  "            return ((folderName ?? "") + (noDirectorySeparator ? "" : "" + Path.DirectorySeparatorChar) + HockeyClientWPFExtensions.AppIdHash); " is 131.
Long Statement,Microsoft.HockeyApp,HockeyPlatformHelperWPF,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\HockeyPlatformHelperWPF.cs,SetSettingValue,The length of the statement  "                using (var fileStream = isoStore.OpenFile(PostfixWithAppIdHash(FILE_PREFIX + key' true)' FileMode.Create' FileAccess.Write)) " is 124.
Long Statement,Microsoft.HockeyApp,HockeyPlatformHelperWPF,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\HockeyPlatformHelperWPF.cs,GetSettingValue,The length of the statement  "                    using (var fileStream = isoStore.OpenFile(PostfixWithAppIdHash(FILE_PREFIX + key' true)' FileMode.Open' FileAccess.Read)) " is 121.
Long Statement,Microsoft.HockeyApp,HockeyPlatformHelperWPF,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\HockeyPlatformHelperWPF.cs,GetStreamAsync,The length of the statement  "                return isoStore.OpenFile(PostfixWithAppIdHash(folderName) + Path.DirectorySeparatorChar + fileName' FileMode.Open' FileAccess.Read); " is 132.
Long Statement,Microsoft.HockeyApp,HockeyPlatformHelperWPF,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\HockeyPlatformHelperWPF.cs,WriteStreamToFileAsync,The length of the statement  "                using (var fileStream = isoStore.OpenFile(PostfixWithAppIdHash(folderName) + Path.DirectorySeparatorChar + fileName' FileMode.Create' FileAccess.Write)) " is 152.
Long Statement,Microsoft.HockeyApp,HockeyPlatformHelperWPF,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\HockeyPlatformHelperWPF.cs,WriteStreamToFileSync,The length of the statement  "                using (var fileStream = isoStore.OpenFile(PostfixWithAppIdHash(folderName) + Path.DirectorySeparatorChar + fileName' FileMode.Create' FileAccess.Write)) " is 152.
Long Statement,Microsoft.HockeyApp,IAppVersionExtensions,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\IAppVersionExtensions.cs,DownloadMsi,The length of the statement  "            var uri = new Uri(HockeyClient.Current.AsInternal().ApiBaseVersion2 + "apps/" + HockeyClient.Current.AsInternal().AppIdentifier + "/app_versions/" + @this.Id + ".msi"); " is 168.
Long Statement,Microsoft.HockeyApp,UpdateManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\UpdateManager.cs,CheckForUpdates,The length of the statement  "                        this._logger.Warn("Remote version cannot be formatted to System.Version. CheckForUpdates canceled. Remote version: " + newest.Version); " is 135.
Long Statement,Microsoft.HockeyApp,UpdateManager,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\UpdateManager.cs,CheckForUpdates,The length of the statement  "                this._logger.Warn("Local version cannot be formatted to System.Version. CheckForUpdates canceled. Local version: " + HockeyClient.Current.AsInternal().VersionInfo); " is 164.
Long Statement,Microsoft.HockeyApp.Gui,UpdateWindow,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\Gui\UpdateWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Microsoft.HockeyApp.Kit;component/gui/updatewindow.xaml"' System.UriKind.Relative); " is 129.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\obj\Debug\Src\Kit.WPF\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Magic Number,Microsoft.HockeyApp.Gui,UpdateWindow,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\Gui\UpdateWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.txtTopic = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.txtText = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtReleaseNotes = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.releaseNotes = ((System.Windows.Controls.WebBrowser)(target));              return;              case 5:              this.DownloadProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 6:              this.btnInstall = ((System.Windows.Controls.Button)(target));                            #line 63 "Gui\UpdateWindow.xaml"              this.btnInstall.Click += new System.Windows.RoutedEventHandler(this.btnInstall_Click);                            #line default              #line hidden              return;              case 7:              this.btnCancel = ((System.Windows.Controls.Button)(target));                            #line 67 "Gui\UpdateWindow.xaml"              this.btnCancel.Click += new System.Windows.RoutedEventHandler(this.btnCancel_Click);                            #line default              #line hidden              return;              case 8:              this.IsBusyGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,Microsoft.HockeyApp.Gui,UpdateWindow,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\Gui\UpdateWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.txtTopic = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.txtText = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtReleaseNotes = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.releaseNotes = ((System.Windows.Controls.WebBrowser)(target));              return;              case 5:              this.DownloadProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 6:              this.btnInstall = ((System.Windows.Controls.Button)(target));                            #line 63 "Gui\UpdateWindow.xaml"              this.btnInstall.Click += new System.Windows.RoutedEventHandler(this.btnInstall_Click);                            #line default              #line hidden              return;              case 7:              this.btnCancel = ((System.Windows.Controls.Button)(target));                            #line 67 "Gui\UpdateWindow.xaml"              this.btnCancel.Click += new System.Windows.RoutedEventHandler(this.btnCancel_Click);                            #line default              #line hidden              return;              case 8:              this.IsBusyGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,Microsoft.HockeyApp.Gui,UpdateWindow,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\Gui\UpdateWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.txtTopic = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.txtText = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtReleaseNotes = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.releaseNotes = ((System.Windows.Controls.WebBrowser)(target));              return;              case 5:              this.DownloadProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 6:              this.btnInstall = ((System.Windows.Controls.Button)(target));                            #line 63 "Gui\UpdateWindow.xaml"              this.btnInstall.Click += new System.Windows.RoutedEventHandler(this.btnInstall_Click);                            #line default              #line hidden              return;              case 7:              this.btnCancel = ((System.Windows.Controls.Button)(target));                            #line 67 "Gui\UpdateWindow.xaml"              this.btnCancel.Click += new System.Windows.RoutedEventHandler(this.btnCancel_Click);                            #line default              #line hidden              return;              case 8:              this.IsBusyGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,Microsoft.HockeyApp.Gui,UpdateWindow,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\Gui\UpdateWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.txtTopic = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.txtText = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtReleaseNotes = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.releaseNotes = ((System.Windows.Controls.WebBrowser)(target));              return;              case 5:              this.DownloadProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 6:              this.btnInstall = ((System.Windows.Controls.Button)(target));                            #line 63 "Gui\UpdateWindow.xaml"              this.btnInstall.Click += new System.Windows.RoutedEventHandler(this.btnInstall_Click);                            #line default              #line hidden              return;              case 7:              this.btnCancel = ((System.Windows.Controls.Button)(target));                            #line 67 "Gui\UpdateWindow.xaml"              this.btnCancel.Click += new System.Windows.RoutedEventHandler(this.btnCancel_Click);                            #line default              #line hidden              return;              case 8:              this.IsBusyGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,Microsoft.HockeyApp.Gui,UpdateWindow,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\Gui\UpdateWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.txtTopic = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.txtText = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtReleaseNotes = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.releaseNotes = ((System.Windows.Controls.WebBrowser)(target));              return;              case 5:              this.DownloadProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 6:              this.btnInstall = ((System.Windows.Controls.Button)(target));                            #line 63 "Gui\UpdateWindow.xaml"              this.btnInstall.Click += new System.Windows.RoutedEventHandler(this.btnInstall_Click);                            #line default              #line hidden              return;              case 7:              this.btnCancel = ((System.Windows.Controls.Button)(target));                            #line 67 "Gui\UpdateWindow.xaml"              this.btnCancel.Click += new System.Windows.RoutedEventHandler(this.btnCancel_Click);                            #line default              #line hidden              return;              case 8:              this.IsBusyGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,Microsoft.HockeyApp.Gui,UpdateWindow,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\Gui\UpdateWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.txtTopic = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.txtText = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtReleaseNotes = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.releaseNotes = ((System.Windows.Controls.WebBrowser)(target));              return;              case 5:              this.DownloadProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 6:              this.btnInstall = ((System.Windows.Controls.Button)(target));                            #line 63 "Gui\UpdateWindow.xaml"              this.btnInstall.Click += new System.Windows.RoutedEventHandler(this.btnInstall_Click);                            #line default              #line hidden              return;              case 7:              this.btnCancel = ((System.Windows.Controls.Button)(target));                            #line 67 "Gui\UpdateWindow.xaml"              this.btnCancel.Click += new System.Windows.RoutedEventHandler(this.btnCancel_Click);                            #line default              #line hidden              return;              case 8:              this.IsBusyGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,Microsoft.HockeyApp.Gui,UpdateWindow,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\Gui\UpdateWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.txtTopic = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.txtText = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtReleaseNotes = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.releaseNotes = ((System.Windows.Controls.WebBrowser)(target));              return;              case 5:              this.DownloadProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 6:              this.btnInstall = ((System.Windows.Controls.Button)(target));                            #line 63 "Gui\UpdateWindow.xaml"              this.btnInstall.Click += new System.Windows.RoutedEventHandler(this.btnInstall_Click);                            #line default              #line hidden              return;              case 7:              this.btnCancel = ((System.Windows.Controls.Button)(target));                            #line 67 "Gui\UpdateWindow.xaml"              this.btnCancel.Click += new System.Windows.RoutedEventHandler(this.btnCancel_Click);                            #line default              #line hidden              return;              case 8:              this.IsBusyGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Missing Default,Microsoft.HockeyApp.Gui,UpdateWindow,D:\research\architectureSmells\repos\bitstadium_HockeySDK-Windows\Src\Kit.WPF\Gui\UpdateWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.txtTopic = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.txtText = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.txtReleaseNotes = ((System.Windows.Controls.TextBlock)(target));              return;              case 4:              this.releaseNotes = ((System.Windows.Controls.WebBrowser)(target));              return;              case 5:              this.DownloadProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 6:              this.btnInstall = ((System.Windows.Controls.Button)(target));                            #line 63 "Gui\UpdateWindow.xaml"              this.btnInstall.Click += new System.Windows.RoutedEventHandler(this.btnInstall_Click);                            #line default              #line hidden              return;              case 7:              this.btnCancel = ((System.Windows.Controls.Button)(target));                            #line 67 "Gui\UpdateWindow.xaml"              this.btnCancel.Click += new System.Windows.RoutedEventHandler(this.btnCancel_Click);                            #line default              #line hidden              return;              case 8:              this.IsBusyGrid = ((System.Windows.Controls.Grid)(target));              return;              }
