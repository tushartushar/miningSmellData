Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Flux,BufferStream,C:\repos\markrendle_Flux\src\Flux\BufferStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,Flux,BufferStream,C:\repos\markrendle_Flux\src\Flux\BufferStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Identifier,Flux,Server,C:\repos\markrendle_Flux\src\Flux\Server.cs,TaskSchedulerOnUnobservedTaskException,The length of the parameter unobservedTaskExceptionEventArgs is 32.
Long Statement,Flux,StreamExtensions,C:\repos\markrendle_Flux\src\Flux\StreamExtensions.cs,WriteAsync,The length of the statement  "            return Task.Factory.FromAsync(stream.BeginWrite' stream.EndWrite' bytes' offset' count' null' TaskCreationOptions.None); " is 120.
Magic Number,Flux,RequestLineParser,C:\repos\markrendle_Flux\src\Flux\RequestLineParser.cs,Parse,The following statement contains a magic number: if (parts.Length == 3)              {                  return new RequestLine(parts[0]' parts[1]' parts[2]);              }
Magic Number,Flux,RequestLineParser,C:\repos\markrendle_Flux\src\Flux\RequestLineParser.cs,Parse,The following statement contains a magic number: if (parts.Length == 3)              {                  return new RequestLine(parts[0]' parts[1]' parts[2]);              }
Magic Number,Flux,Instance,C:\repos\markrendle_Flux\src\Flux\Instance.cs,Instance,The following statement contains a magic number: _timer = new Timer(TimeoutCallback' null' 1000' 1000);
Magic Number,Flux,Instance,C:\repos\markrendle_Flux\src\Flux\Instance.cs,Instance,The following statement contains a magic number: _timer = new Timer(TimeoutCallback' null' 1000' 1000);
Magic Number,Flux,Instance,C:\repos\markrendle_Flux\src\Flux\Instance.cs,CreateEnvironmentDictionary,The following statement contains a magic number: if (requestLine.Uri.StartsWith("http"' StringComparison.InvariantCultureIgnoreCase))              {                  Uri uri;                  if (Uri.TryCreate(requestLine.Uri' UriKind.Absolute' out uri))                  {                      env[OwinKeys.RequestPath] = uri.AbsolutePath;                      env[OwinKeys.RequestQueryString] = uri.Query;                      env[OwinKeys.RequestScheme] = uri.Scheme;                  }              }              else              {                  var splitUri = requestLine.Uri.Split('?');                  env[OwinKeys.RequestPath] = splitUri[0];                  env[OwinKeys.RequestQueryString] = splitUri.Length == 2 ? splitUri[1] : string.Empty;                  env[OwinKeys.RequestScheme] = "http";              }
Magic Number,Flux,Instance,C:\repos\markrendle_Flux\src\Flux\Instance.cs,Result,The following statement contains a magic number: if (status == 0 || status == 404)              {                  _networkStream.WriteAsync(Status404NotFound' 0' Status404NotFound.Length)                      .ContinueWith(_ => Dispose());              }
Missing Default,Flux,Instance,C:\repos\markrendle_Flux\src\Flux\Instance.cs,WriteResult,The following switch statement is missing a default case: switch (header.Value.Length)                  {                      case 0:                          continue;                      case 1:                          headerBuilder.AppendFormat("{0}: {1}\r\n"' header.Key' header.Value[0]);                          continue;                  }
