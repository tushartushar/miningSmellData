Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PROJECTO,MeasuresEditForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\MeasuresEditForm.cs,Ok,Cyclomatic complexity of the method is 8
Complex Method,PROJECTO,MeasuresEditForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\MeasuresEditForm.cs,gridExecution_CellDoubleClick,Cyclomatic complexity of the method is 19
Complex Method,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,RowResultsToDatatable,Cyclomatic complexity of the method is 8
Complex Method,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,RowResultsToDatatable2,Cyclomatic complexity of the method is 13
Complex Method,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,Flush,Cyclomatic complexity of the method is 11
Complex Method,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,mnuStart_Click,Cyclomatic complexity of the method is 11
Complex Method,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,btAddAlgorithms_Click,Cyclomatic complexity of the method is 8
Complex Method,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,gridAlgorithms_CellDoubleClick,Cyclomatic complexity of the method is 12
Complex Method,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,gridResults_CellDoubleClick,Cyclomatic complexity of the method is 8
Long Parameter List,PROJECTO,ConfigsPanel,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\EnhancedImageForm\ConfigsPanel.cs,AddParam,The method has 5 parameters.
Long Parameter List,PROJECTO,ParamConfigPanel,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\EnhancedImageForm\ParamConfigPanel.cs,ParamConfigPanel,The method has 5 parameters.
Long Parameter List,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,RemoveNode,The method has 5 parameters.
Long Parameter List,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,CopyInto,The method has 5 parameters.
Long Parameter List,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,bt_FilterExecuted,The method has 6 parameters.
Long Parameter List,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,bt_FilterExecuted_threadsafe_,The method has 6 parameters.
Long Parameter List,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,bt_FilterMeasured,The method has 7 parameters.
Long Parameter List,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,bt_FilterMeasured_threadsafe_,The method has 7 parameters.
Long Statement,PROJECTO,AlgorithmsForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\AlgorithmsForm.cs,FillAlgorihtms,The length of the statement  "		IEnumerable<Filter> q = _listFilters.Where (f => keys.Contains (string.Join (SEPARATOR' (string[])f.Attributes ["Categories"]))); " is 129.
Long Statement,PROJECTO,AlgorithmsForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\AlgorithmsForm.cs,FillAlgorihtms,The length of the statement  "		dataSource = q.Select (f => new Tuple<string' string' Filter> (f.Attributes ["ShortName"].ToString ()' string.Join (SEPARATOR' (string[])f.Attributes ["Categories"])' f)).ToList (); " is 181.
Long Statement,PROJECTO,DataTableBindForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\DataTableBindForm.cs,gridDatatable_CellDoubleClick,The length of the statement  "		if (gridDatatable.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(Image)) || gridDatatable.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(Bitmap))) { " is 198.
Long Statement,PROJECTO,RealTimeFilter,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\RealTimeFilter.cs,fourierTransformToolStripMenuItem_Click,The length of the statement  "		FourierForm frm = new FourierForm (t.ApplyTransform (Facilities.To8bppGreyScale (Facilities.ToBitmap (pictureFilteredImage.Image)))); " is 133.
Long Statement,PROJECTO,MeasuresViewerForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\MeasuresViewerForm.cs,GridMeasures_CellDoubleClick,The length of the statement  "		if (GridMeasures.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(Image)) || GridMeasures.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(Bitmap))) { " is 196.
Long Statement,PROJECTO,ImageForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\ImageForm.cs,fourierTransformToolStripMenuItem_Click,The length of the statement  "		FourierForm frm = new FourierForm (t.ApplyTransform (Facilities.To8bppGreyScale (Facilities.ToBitmap (pictureBoxImage.Image)))); " is 128.
Long Statement,PROJECTO,ImageForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\ImageForm.cs,FILTER_ToolStripMenuItem_Click,The length of the statement  "		System.Diagnostics.Debug.Print ("Hello from " + filter.Attributes ["Name"].ToString () + ":" + Environment.NewLine + filter.Attributes ["Description"].ToString ()); " is 164.
Long Statement,PROJECTO,MeasuresEditForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\MeasuresEditForm.cs,gridExecution_CellDoubleClick,The length of the statement  "			IEnumerable<MetricExecutionType> values = (IEnumerable<MetricExecutionType>)Enum.GetValues (typeof(MetricExecutionType)); " is 121.
Long Statement,PROJECTO,MeasuresEditForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\MeasuresEditForm.cs,gridExecution_CellDoubleClick,The length of the statement  "				datasource [e.RowIndex] = new RowMetricExecution (r.Item1' (MetricExecutionType)Enum.Parse (typeof(MetricExecutionType)' sel.Selection [0])' r.Item3); " is 150.
Long Statement,PROJECTO,MainForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\MainForm.cs,ParentForm_FormClosing,The length of the statement  "			e.Cancel = (MessageBox.Show ("Close app?"' "Question"' MessageBoxButtons.YesNo) != System.Windows.Forms.DialogResult.Yes); " is 122.
Long Statement,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,OpenAlgorithmCurrentRow,The length of the statement  "						datasource [r.Index] = new RowBatchFilter (selection [0].Attributes ["ShortName"].ToString ()' ((FilterCore)Activator.CreateInstance (selection [0].FilterType)).GetDefaultConfigs ()' selection [0]' binded.Item4' binded.Item5); " is 226.
Long Statement,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,CopyInto,The length of the statement  "		_filters.Where (a => a.Item5 == sourceGuid).Select (r => new RowBatchFilter (r.Item1' r.Item2 == null ? null : new SortedDictionary<string' object> (r.Item2)' r.Item3' r.Item4 == null ? null : new List<MetricExecBase> (r.Item4)' currentGuid)).ToList ().ForEach (delegate (RowBatchFilter r) { " is 291.
Long Statement,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,ExportResultsToHtml,The length of the statement  "				img.GetThumbnailImage (newWidth' newHeight' nullCallback' IntPtr.Zero).Save (Path.Combine (directory_thumbs' file_img)' img.RawFormat); " is 135.
Long Statement,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,bt_FilterExecuted_threadsafe_,The length of the statement  "		_results.Add (new RowResults (filter.Attributes ["ShortName"].ToString ()' input' output' null' filter' configs' duration)); " is 124.
Long Statement,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,bt_FilterMeasured_threadsafe_,The length of the statement  "		_results.Add (new RowResults (filter.Attributes ["ShortName"].ToString ()' input' output' measures' filter' configs' duration)); " is 128.
Long Statement,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,btAddAlgorithms_Click,The length of the statement  "					datasource.Add (new RowBatchFilter (f.Attributes ["ShortName"].ToString ()' ((FilterCore)Activator.CreateInstance (f.FilterType)).GetDefaultConfigs ()' f' metrics' SelectedRowNode.Item1)); " is 188.
Long Statement,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,btReplicate_Click,The length of the statement  "						((BindingList<RowBatchFilter>)gridAlgorithms.DataSource).Add (new RowBatchFilter (template.Item1' sorted_dict_copy' template.Item3' template.Item4 == null ? null : new List<MetricExecBase> (template.Item4)' template.Item5)); " is 224.
Long Statement,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,gridImages_CellDoubleClick,The length of the statement  "		if (wrkGrid.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(Image)) || wrkGrid.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(Bitmap))) { " is 186.
Long Statement,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,gridResults_CellDoubleClick,The length of the statement  "		if (gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(Image)) || gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(Bitmap))) { " is 194.
Complex Conditional,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,Flush,The conditional expression  "(ckEnd.Checked && isEnd) || (!ckEnd.Checked && _results.Count > (int)(numericVal.Value))"  is complex.
Magic Number,PROJECTO,AlgorithmsForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\AlgorithmsForm.cs,CreateCategories,The following statement contains a magic number: try {  	List<string> parsed = new List<string> ();  	string key;  	CheckBox cb;  	_checkBoxes = new List<CheckBox> ();  	foreach (Filter f in _listFilters) {  		key = string.Join (SEPARATOR' (string[])f.Attributes ["Categories"]);  		if (!parsed.Contains (key)) {  			cb = new CheckBox ();  			cb.Text = key;  			cb.Checked = true;  			cb.Width = 200;  			cb.CheckedChanged += new EventHandler (cb_CheckedChanged);  			_checkBoxes.Add (cb);  			panelCategories.Controls.Add (cb);  			parsed.Add (key);  		}  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.GetType ().FullName' ex.Message);  }  
Magic Number,PROJECTO,AlgorithmsForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\AlgorithmsForm.cs,CreateCategories,The following statement contains a magic number: foreach (Filter f in _listFilters) {  	key = string.Join (SEPARATOR' (string[])f.Attributes ["Categories"]);  	if (!parsed.Contains (key)) {  		cb = new CheckBox ();  		cb.Text = key;  		cb.Checked = true;  		cb.Width = 200;  		cb.CheckedChanged += new EventHandler (cb_CheckedChanged);  		_checkBoxes.Add (cb);  		panelCategories.Controls.Add (cb);  		parsed.Add (key);  	}  }  
Magic Number,PROJECTO,AlgorithmsForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\AlgorithmsForm.cs,CreateCategories,The following statement contains a magic number: if (!parsed.Contains (key)) {  	cb = new CheckBox ();  	cb.Text = key;  	cb.Checked = true;  	cb.Width = 200;  	cb.CheckedChanged += new EventHandler (cb_CheckedChanged);  	_checkBoxes.Add (cb);  	panelCategories.Controls.Add (cb);  	parsed.Add (key);  }  
Magic Number,PROJECTO,AlgorithmsForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\AlgorithmsForm.cs,CreateCategories,The following statement contains a magic number: cb.Width = 200;  
Magic Number,PROJECTO,ConfigsPanel,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\EnhancedImageForm\ConfigsPanel.cs,SetFilter,The following statement contains a magic number: if (dict != null) {  	foreach (String k in dict.Keys) {  		double defaultValue;  		double minValue;  		double maxValue;  		double step;  		Rangeable val = dict [k] as Rangeable;  		if (null != val) {  			defaultValue = val.Value;  			minValue = val.Min;  			maxValue = val.Max;  			step = val.Step;  		}  		else {  			defaultValue = double.Parse (dict [k].ToString ());  			minValue = double.MinValue;  			maxValue = double.MaxValue;  			step = 0.000001;  		}  		AddParam (k' defaultValue' minValue' maxValue' step);  	}  }  
Magic Number,PROJECTO,ConfigsPanel,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\EnhancedImageForm\ConfigsPanel.cs,SetFilter,The following statement contains a magic number: foreach (String k in dict.Keys) {  	double defaultValue;  	double minValue;  	double maxValue;  	double step;  	Rangeable val = dict [k] as Rangeable;  	if (null != val) {  		defaultValue = val.Value;  		minValue = val.Min;  		maxValue = val.Max;  		step = val.Step;  	}  	else {  		defaultValue = double.Parse (dict [k].ToString ());  		minValue = double.MinValue;  		maxValue = double.MaxValue;  		step = 0.000001;  	}  	AddParam (k' defaultValue' minValue' maxValue' step);  }  
Magic Number,PROJECTO,ConfigsPanel,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\EnhancedImageForm\ConfigsPanel.cs,SetFilter,The following statement contains a magic number: if (null != val) {  	defaultValue = val.Value;  	minValue = val.Min;  	maxValue = val.Max;  	step = val.Step;  }  else {  	defaultValue = double.Parse (dict [k].ToString ());  	minValue = double.MinValue;  	maxValue = double.MaxValue;  	step = 0.000001;  }  
Magic Number,PROJECTO,ConfigsPanel,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\EnhancedImageForm\ConfigsPanel.cs,SetFilter,The following statement contains a magic number: step = 0.000001;  
Magic Number,PROJECTO,RealTimeFilter,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\RealTimeFilter.cs,ExecuteFilter,The following statement contains a magic number: try {  	if (System.Threading.Monitor.TryEnter (_mutex' 0)) {  		Cursor = Cursors.WaitCursor;  		try {  			FilterCore f = (FilterCore)Activator.CreateInstance (_filter.FilterType);  			SortedDictionary<string' object> conf = panelConfigs.GetConfigs ();  			_imageFiltered = f.ApplyFilter (_image' conf);  			SetImage (false);  			String sParams = "";  			if (conf != null) {  				if (conf.Count > 0) {  					IEnumerator<KeyValuePair<string' object>> k = conf.GetEnumerator ();  					k.MoveNext ();  					sParams = k.Current.Key + "=" + k.Current.Value.ToString ();  					while (k.MoveNext ()) {  						sParams += "' " + k.Current.Key + "=" + k.Current.Value.ToString ();  					}  				}  			}  			this.Text = _filter.FilterType.FullName + " {" + sParams + "}";  			Image img = pictureFilteredImage.Image;  			img.Tag = Facilities.CloneTag (_image);  			Facilities.AddFilterExecution (ref img' f' conf);  		}  		catch (Exception e) {  			MessageBox.Show (e.Message' e.GetType ().FullName);  		}  		Cursor = Cursors.Default;  		System.Threading.Thread.Sleep (500);  		System.Threading.Monitor.Exit (_mutex);  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.GetType ().FullName' ex.Message);  }  
Magic Number,PROJECTO,RealTimeFilter,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\RealTimeFilter.cs,ExecuteFilter,The following statement contains a magic number: if (System.Threading.Monitor.TryEnter (_mutex' 0)) {  	Cursor = Cursors.WaitCursor;  	try {  		FilterCore f = (FilterCore)Activator.CreateInstance (_filter.FilterType);  		SortedDictionary<string' object> conf = panelConfigs.GetConfigs ();  		_imageFiltered = f.ApplyFilter (_image' conf);  		SetImage (false);  		String sParams = "";  		if (conf != null) {  			if (conf.Count > 0) {  				IEnumerator<KeyValuePair<string' object>> k = conf.GetEnumerator ();  				k.MoveNext ();  				sParams = k.Current.Key + "=" + k.Current.Value.ToString ();  				while (k.MoveNext ()) {  					sParams += "' " + k.Current.Key + "=" + k.Current.Value.ToString ();  				}  			}  		}  		this.Text = _filter.FilterType.FullName + " {" + sParams + "}";  		Image img = pictureFilteredImage.Image;  		img.Tag = Facilities.CloneTag (_image);  		Facilities.AddFilterExecution (ref img' f' conf);  	}  	catch (Exception e) {  		MessageBox.Show (e.Message' e.GetType ().FullName);  	}  	Cursor = Cursors.Default;  	System.Threading.Thread.Sleep (500);  	System.Threading.Monitor.Exit (_mutex);  }  
Magic Number,PROJECTO,RealTimeFilter,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\RealTimeFilter.cs,ExecuteFilter,The following statement contains a magic number: System.Threading.Thread.Sleep (500);  
Magic Number,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,ExportResultsToHtml,The following statement contains a magic number: try {  	Directory.CreateDirectory (baseDir);  	string baseName = DateTime.Now.ToString ("yyyyMMdd_HHmmssfff");  	string INDEX_FILE = baseName + "_index.html";  	string IMG_FOLDER = baseName + "img";  	string TH_FOLDER = baseName + "thumbs";  	string directory_img = Path.Combine (baseDir' IMG_FOLDER);  	string directory_thumbs = Path.Combine (baseDir' TH_FOLDER);  	Directory.CreateDirectory (directory_img);  	Directory.CreateDirectory (directory_thumbs);  	// Dummy and nasty html code ... as long as it works ...  	StringBuilder dummyHtml = new StringBuilder ();  	//prolog  	dummyHtml.Append ("<html><head></head><body><table border='1'>");  	dummyHtml.Append ("<tr>");  	dummyHtml.Append ("<th>FilterName</th>");  	dummyHtml.Append ("<th>Parameters</th>");  	dummyHtml.Append ("<th>Filter-Chain</th>");  	dummyHtml.Append ("<th>Image</th>");  	dummyHtml.Append ("<th>Thumbnail</th>");  	dummyHtml.Append ("</tr>");  	// content  	foreach (RowResults r in results) {  		string filter = ""' parameters = ""' file_img = "";  		Image img = null;  		Facilities.FilterExecToString (r.Item5.FilterType' r.Item6' out filter' out parameters);  		dummyHtml.Append ("<tr>");  		dummyHtml.Append ("<td>");  		dummyHtml.Append (filter);  		dummyHtml.Append ("</td>");  		dummyHtml.Append ("<td>");  		dummyHtml.Append (parameters);  		dummyHtml.Append ("</td>");  		dummyHtml.Append ("<td>");  		string sChain = "";  		Image theImage = r.Item2.Image;  		ArrayList bucket = Facilities.GetBucket<ArrayList> (ref theImage' Facilities.EXECUTED_FILTERS);  		if (bucket != null) {  			foreach (object o in bucket) {  				sChain += (string.IsNullOrEmpty (sChain) ? "" : " ; ") + o.ToString ();  			}  		}  		dummyHtml.Append (sChain);  		dummyHtml.Append ("</td>");  		if (r.Item3 != null)  			img = r.Item3.Image;  		dummyHtml.Append ("<td>");  		if (img == null) {  			dummyHtml.Append ("(Erro!)");  			dummyHtml.Append ("</td>");  			dummyHtml.Append ("<td>");  			dummyHtml.Append ("(Erro!)");  			dummyHtml.Append ("</td>");  		}  		else {  			dummyHtml.Append ("<a href='");  			file_img = Path.GetFileNameWithoutExtension (Path.GetRandomFileName ()) + ".bmp";  			// Reduce width and height to a maximum of 75x75  			// Without changing image width / height ratio  			Image.GetThumbnailImageAbort nullCallback = delegate () {  				return true;  			};  			int newWidth = 0' newHeight = 0;  			double destiny = 75 / Math.Max (75.0' Math.Max (img.Width' img.Height));  			newWidth = (int)(destiny * img.Width);  			newHeight = (int)(destiny * img.Height);  			img.Save (Path.Combine (directory_img' file_img)' img.RawFormat);  			img.GetThumbnailImage (newWidth' newHeight' nullCallback' IntPtr.Zero).Save (Path.Combine (directory_thumbs' file_img)' img.RawFormat);  			// use relative path here  			dummyHtml.Append (IMG_FOLDER).Append ("/").Append (file_img);  			dummyHtml.Append ("'>");  			dummyHtml.Append ("(Click to Open)");  			dummyHtml.Append ("</a>");  			dummyHtml.Append ("</td>");  			dummyHtml.Append ("<td>");  			// use relative path here  			dummyHtml.Append ("<img src='").Append (TH_FOLDER).Append ("/").Append (file_img).Append ("'>");  			dummyHtml.Append ("</td>");  		}  		dummyHtml.Append ("</tr>");  	}  	//epilog  	dummyHtml.Append ("</table></body></html>");  	File.WriteAllText (Path.Combine (baseDir' INDEX_FILE)' dummyHtml.ToString ());  }  catch (Exception ex) {  	MessageBox.Show (ex.GetType ().FullName' ex.Message);  }  
Magic Number,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,ExportResultsToHtml,The following statement contains a magic number: try {  	Directory.CreateDirectory (baseDir);  	string baseName = DateTime.Now.ToString ("yyyyMMdd_HHmmssfff");  	string INDEX_FILE = baseName + "_index.html";  	string IMG_FOLDER = baseName + "img";  	string TH_FOLDER = baseName + "thumbs";  	string directory_img = Path.Combine (baseDir' IMG_FOLDER);  	string directory_thumbs = Path.Combine (baseDir' TH_FOLDER);  	Directory.CreateDirectory (directory_img);  	Directory.CreateDirectory (directory_thumbs);  	// Dummy and nasty html code ... as long as it works ...  	StringBuilder dummyHtml = new StringBuilder ();  	//prolog  	dummyHtml.Append ("<html><head></head><body><table border='1'>");  	dummyHtml.Append ("<tr>");  	dummyHtml.Append ("<th>FilterName</th>");  	dummyHtml.Append ("<th>Parameters</th>");  	dummyHtml.Append ("<th>Filter-Chain</th>");  	dummyHtml.Append ("<th>Image</th>");  	dummyHtml.Append ("<th>Thumbnail</th>");  	dummyHtml.Append ("</tr>");  	// content  	foreach (RowResults r in results) {  		string filter = ""' parameters = ""' file_img = "";  		Image img = null;  		Facilities.FilterExecToString (r.Item5.FilterType' r.Item6' out filter' out parameters);  		dummyHtml.Append ("<tr>");  		dummyHtml.Append ("<td>");  		dummyHtml.Append (filter);  		dummyHtml.Append ("</td>");  		dummyHtml.Append ("<td>");  		dummyHtml.Append (parameters);  		dummyHtml.Append ("</td>");  		dummyHtml.Append ("<td>");  		string sChain = "";  		Image theImage = r.Item2.Image;  		ArrayList bucket = Facilities.GetBucket<ArrayList> (ref theImage' Facilities.EXECUTED_FILTERS);  		if (bucket != null) {  			foreach (object o in bucket) {  				sChain += (string.IsNullOrEmpty (sChain) ? "" : " ; ") + o.ToString ();  			}  		}  		dummyHtml.Append (sChain);  		dummyHtml.Append ("</td>");  		if (r.Item3 != null)  			img = r.Item3.Image;  		dummyHtml.Append ("<td>");  		if (img == null) {  			dummyHtml.Append ("(Erro!)");  			dummyHtml.Append ("</td>");  			dummyHtml.Append ("<td>");  			dummyHtml.Append ("(Erro!)");  			dummyHtml.Append ("</td>");  		}  		else {  			dummyHtml.Append ("<a href='");  			file_img = Path.GetFileNameWithoutExtension (Path.GetRandomFileName ()) + ".bmp";  			// Reduce width and height to a maximum of 75x75  			// Without changing image width / height ratio  			Image.GetThumbnailImageAbort nullCallback = delegate () {  				return true;  			};  			int newWidth = 0' newHeight = 0;  			double destiny = 75 / Math.Max (75.0' Math.Max (img.Width' img.Height));  			newWidth = (int)(destiny * img.Width);  			newHeight = (int)(destiny * img.Height);  			img.Save (Path.Combine (directory_img' file_img)' img.RawFormat);  			img.GetThumbnailImage (newWidth' newHeight' nullCallback' IntPtr.Zero).Save (Path.Combine (directory_thumbs' file_img)' img.RawFormat);  			// use relative path here  			dummyHtml.Append (IMG_FOLDER).Append ("/").Append (file_img);  			dummyHtml.Append ("'>");  			dummyHtml.Append ("(Click to Open)");  			dummyHtml.Append ("</a>");  			dummyHtml.Append ("</td>");  			dummyHtml.Append ("<td>");  			// use relative path here  			dummyHtml.Append ("<img src='").Append (TH_FOLDER).Append ("/").Append (file_img).Append ("'>");  			dummyHtml.Append ("</td>");  		}  		dummyHtml.Append ("</tr>");  	}  	//epilog  	dummyHtml.Append ("</table></body></html>");  	File.WriteAllText (Path.Combine (baseDir' INDEX_FILE)' dummyHtml.ToString ());  }  catch (Exception ex) {  	MessageBox.Show (ex.GetType ().FullName' ex.Message);  }  
Magic Number,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,ExportResultsToHtml,The following statement contains a magic number: foreach (RowResults r in results) {  	string filter = ""' parameters = ""' file_img = "";  	Image img = null;  	Facilities.FilterExecToString (r.Item5.FilterType' r.Item6' out filter' out parameters);  	dummyHtml.Append ("<tr>");  	dummyHtml.Append ("<td>");  	dummyHtml.Append (filter);  	dummyHtml.Append ("</td>");  	dummyHtml.Append ("<td>");  	dummyHtml.Append (parameters);  	dummyHtml.Append ("</td>");  	dummyHtml.Append ("<td>");  	string sChain = "";  	Image theImage = r.Item2.Image;  	ArrayList bucket = Facilities.GetBucket<ArrayList> (ref theImage' Facilities.EXECUTED_FILTERS);  	if (bucket != null) {  		foreach (object o in bucket) {  			sChain += (string.IsNullOrEmpty (sChain) ? "" : " ; ") + o.ToString ();  		}  	}  	dummyHtml.Append (sChain);  	dummyHtml.Append ("</td>");  	if (r.Item3 != null)  		img = r.Item3.Image;  	dummyHtml.Append ("<td>");  	if (img == null) {  		dummyHtml.Append ("(Erro!)");  		dummyHtml.Append ("</td>");  		dummyHtml.Append ("<td>");  		dummyHtml.Append ("(Erro!)");  		dummyHtml.Append ("</td>");  	}  	else {  		dummyHtml.Append ("<a href='");  		file_img = Path.GetFileNameWithoutExtension (Path.GetRandomFileName ()) + ".bmp";  		// Reduce width and height to a maximum of 75x75  		// Without changing image width / height ratio  		Image.GetThumbnailImageAbort nullCallback = delegate () {  			return true;  		};  		int newWidth = 0' newHeight = 0;  		double destiny = 75 / Math.Max (75.0' Math.Max (img.Width' img.Height));  		newWidth = (int)(destiny * img.Width);  		newHeight = (int)(destiny * img.Height);  		img.Save (Path.Combine (directory_img' file_img)' img.RawFormat);  		img.GetThumbnailImage (newWidth' newHeight' nullCallback' IntPtr.Zero).Save (Path.Combine (directory_thumbs' file_img)' img.RawFormat);  		// use relative path here  		dummyHtml.Append (IMG_FOLDER).Append ("/").Append (file_img);  		dummyHtml.Append ("'>");  		dummyHtml.Append ("(Click to Open)");  		dummyHtml.Append ("</a>");  		dummyHtml.Append ("</td>");  		dummyHtml.Append ("<td>");  		// use relative path here  		dummyHtml.Append ("<img src='").Append (TH_FOLDER).Append ("/").Append (file_img).Append ("'>");  		dummyHtml.Append ("</td>");  	}  	dummyHtml.Append ("</tr>");  }  
Magic Number,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,ExportResultsToHtml,The following statement contains a magic number: foreach (RowResults r in results) {  	string filter = ""' parameters = ""' file_img = "";  	Image img = null;  	Facilities.FilterExecToString (r.Item5.FilterType' r.Item6' out filter' out parameters);  	dummyHtml.Append ("<tr>");  	dummyHtml.Append ("<td>");  	dummyHtml.Append (filter);  	dummyHtml.Append ("</td>");  	dummyHtml.Append ("<td>");  	dummyHtml.Append (parameters);  	dummyHtml.Append ("</td>");  	dummyHtml.Append ("<td>");  	string sChain = "";  	Image theImage = r.Item2.Image;  	ArrayList bucket = Facilities.GetBucket<ArrayList> (ref theImage' Facilities.EXECUTED_FILTERS);  	if (bucket != null) {  		foreach (object o in bucket) {  			sChain += (string.IsNullOrEmpty (sChain) ? "" : " ; ") + o.ToString ();  		}  	}  	dummyHtml.Append (sChain);  	dummyHtml.Append ("</td>");  	if (r.Item3 != null)  		img = r.Item3.Image;  	dummyHtml.Append ("<td>");  	if (img == null) {  		dummyHtml.Append ("(Erro!)");  		dummyHtml.Append ("</td>");  		dummyHtml.Append ("<td>");  		dummyHtml.Append ("(Erro!)");  		dummyHtml.Append ("</td>");  	}  	else {  		dummyHtml.Append ("<a href='");  		file_img = Path.GetFileNameWithoutExtension (Path.GetRandomFileName ()) + ".bmp";  		// Reduce width and height to a maximum of 75x75  		// Without changing image width / height ratio  		Image.GetThumbnailImageAbort nullCallback = delegate () {  			return true;  		};  		int newWidth = 0' newHeight = 0;  		double destiny = 75 / Math.Max (75.0' Math.Max (img.Width' img.Height));  		newWidth = (int)(destiny * img.Width);  		newHeight = (int)(destiny * img.Height);  		img.Save (Path.Combine (directory_img' file_img)' img.RawFormat);  		img.GetThumbnailImage (newWidth' newHeight' nullCallback' IntPtr.Zero).Save (Path.Combine (directory_thumbs' file_img)' img.RawFormat);  		// use relative path here  		dummyHtml.Append (IMG_FOLDER).Append ("/").Append (file_img);  		dummyHtml.Append ("'>");  		dummyHtml.Append ("(Click to Open)");  		dummyHtml.Append ("</a>");  		dummyHtml.Append ("</td>");  		dummyHtml.Append ("<td>");  		// use relative path here  		dummyHtml.Append ("<img src='").Append (TH_FOLDER).Append ("/").Append (file_img).Append ("'>");  		dummyHtml.Append ("</td>");  	}  	dummyHtml.Append ("</tr>");  }  
Magic Number,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,ExportResultsToHtml,The following statement contains a magic number: if (img == null) {  	dummyHtml.Append ("(Erro!)");  	dummyHtml.Append ("</td>");  	dummyHtml.Append ("<td>");  	dummyHtml.Append ("(Erro!)");  	dummyHtml.Append ("</td>");  }  else {  	dummyHtml.Append ("<a href='");  	file_img = Path.GetFileNameWithoutExtension (Path.GetRandomFileName ()) + ".bmp";  	// Reduce width and height to a maximum of 75x75  	// Without changing image width / height ratio  	Image.GetThumbnailImageAbort nullCallback = delegate () {  		return true;  	};  	int newWidth = 0' newHeight = 0;  	double destiny = 75 / Math.Max (75.0' Math.Max (img.Width' img.Height));  	newWidth = (int)(destiny * img.Width);  	newHeight = (int)(destiny * img.Height);  	img.Save (Path.Combine (directory_img' file_img)' img.RawFormat);  	img.GetThumbnailImage (newWidth' newHeight' nullCallback' IntPtr.Zero).Save (Path.Combine (directory_thumbs' file_img)' img.RawFormat);  	// use relative path here  	dummyHtml.Append (IMG_FOLDER).Append ("/").Append (file_img);  	dummyHtml.Append ("'>");  	dummyHtml.Append ("(Click to Open)");  	dummyHtml.Append ("</a>");  	dummyHtml.Append ("</td>");  	dummyHtml.Append ("<td>");  	// use relative path here  	dummyHtml.Append ("<img src='").Append (TH_FOLDER).Append ("/").Append (file_img).Append ("'>");  	dummyHtml.Append ("</td>");  }  
Magic Number,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,ExportResultsToHtml,The following statement contains a magic number: if (img == null) {  	dummyHtml.Append ("(Erro!)");  	dummyHtml.Append ("</td>");  	dummyHtml.Append ("<td>");  	dummyHtml.Append ("(Erro!)");  	dummyHtml.Append ("</td>");  }  else {  	dummyHtml.Append ("<a href='");  	file_img = Path.GetFileNameWithoutExtension (Path.GetRandomFileName ()) + ".bmp";  	// Reduce width and height to a maximum of 75x75  	// Without changing image width / height ratio  	Image.GetThumbnailImageAbort nullCallback = delegate () {  		return true;  	};  	int newWidth = 0' newHeight = 0;  	double destiny = 75 / Math.Max (75.0' Math.Max (img.Width' img.Height));  	newWidth = (int)(destiny * img.Width);  	newHeight = (int)(destiny * img.Height);  	img.Save (Path.Combine (directory_img' file_img)' img.RawFormat);  	img.GetThumbnailImage (newWidth' newHeight' nullCallback' IntPtr.Zero).Save (Path.Combine (directory_thumbs' file_img)' img.RawFormat);  	// use relative path here  	dummyHtml.Append (IMG_FOLDER).Append ("/").Append (file_img);  	dummyHtml.Append ("'>");  	dummyHtml.Append ("(Click to Open)");  	dummyHtml.Append ("</a>");  	dummyHtml.Append ("</td>");  	dummyHtml.Append ("<td>");  	// use relative path here  	dummyHtml.Append ("<img src='").Append (TH_FOLDER).Append ("/").Append (file_img).Append ("'>");  	dummyHtml.Append ("</td>");  }  
Magic Number,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,gridAlgorithms_CellDoubleClick,The following statement contains a magic number: try {  	int c_index = Configs.Index;  	switch (e.ColumnIndex) {  	case 0:  		// Algorithms  		OpenAlgorithmCurrentRow ();  		break;  	case 1:  		// Configs  		OpenHashConfigCurrentRow ();  		break;  	case 2:  		OpenMeasurementCurrentRow ();  		break;  	default:  		break;  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.GetType ().FullName' ex.Message);  }  
Magic Number,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,gridAlgorithms_CellDoubleClick,The following statement contains a magic number: switch (e.ColumnIndex) {  case 0:  	// Algorithms  	OpenAlgorithmCurrentRow ();  	break;  case 1:  	// Configs  	OpenHashConfigCurrentRow ();  	break;  case 2:  	OpenMeasurementCurrentRow ();  	break;  default:  	break;  }  
Magic Number,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,gridResults_CellDoubleClick,The following statement contains a magic number: try {  	if (e.RowIndex < 0 || e.ColumnIndex < 0)  		return;  	RowResults tuple = (RowResults)gridResults.Rows [e.RowIndex].DataBoundItem;  	ImageForm frm;  	if (gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(Image)) || gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(Bitmap))) {  		frm = new ImageForm ((Image)(gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value));  		frm.MdiParent = MdiParent;  		frm.Show ();  	}  	else if (gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(WeakImage))) {  		frm = new ImageForm (((WeakImage)gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value).Image);  		frm.MdiParent = MdiParent;  		frm.Show ();  	}  	else {  		switch (e.ColumnIndex) {  		case 3:  			MeasuresViewerForm m = new MeasuresViewerForm (tuple.Item4);  			m.MdiParent = MdiParent;  			m.Show ();  			break;  		}  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.GetType ().FullName' ex.Message);  }  
Magic Number,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,gridResults_CellDoubleClick,The following statement contains a magic number: if (gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(Image)) || gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(Bitmap))) {  	frm = new ImageForm ((Image)(gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value));  	frm.MdiParent = MdiParent;  	frm.Show ();  }  else if (gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(WeakImage))) {  	frm = new ImageForm (((WeakImage)gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value).Image);  	frm.MdiParent = MdiParent;  	frm.Show ();  }  else {  	switch (e.ColumnIndex) {  	case 3:  		MeasuresViewerForm m = new MeasuresViewerForm (tuple.Item4);  		m.MdiParent = MdiParent;  		m.Show ();  		break;  	}  }  
Magic Number,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,gridResults_CellDoubleClick,The following statement contains a magic number: if (gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value.GetType ().Equals (typeof(WeakImage))) {  	frm = new ImageForm (((WeakImage)gridResults.Rows [e.RowIndex].Cells [e.ColumnIndex].Value).Image);  	frm.MdiParent = MdiParent;  	frm.Show ();  }  else {  	switch (e.ColumnIndex) {  	case 3:  		MeasuresViewerForm m = new MeasuresViewerForm (tuple.Item4);  		m.MdiParent = MdiParent;  		m.Show ();  		break;  	}  }  
Magic Number,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,gridResults_CellDoubleClick,The following statement contains a magic number: switch (e.ColumnIndex) {  case 3:  	MeasuresViewerForm m = new MeasuresViewerForm (tuple.Item4);  	m.MdiParent = MdiParent;  	m.Show ();  	break;  }  
Missing Default,PROJECTO,ExecutedFiltersForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\ExecutedFiltersForm.cs,gridExecutedFilters_KeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.Escape:  	Close ();  	break;  // ....  }  
Missing Default,PROJECTO,MeasuresEditForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\MeasuresEditForm.cs,Ok,The following switch statement is missing a default case: switch (r.Item2) {  case Framework.Batch.MetricExecutionType.InputOutput:  	_execs.Add (new MetricExec (key' r.Item1));  	break;  case Framework.Batch.MetricExecutionType.RefOutput:  	_execs.Add (new MetricExecReference (key' r.Item1' r.Item3));  	break;  }  
Missing Default,PROJECTO,MeasuresEditForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\MeasuresEditForm.cs,gridExecution_CellDoubleClick,The following switch statement is missing a default case: switch (e.ColumnIndex) {  case 0:  	IEnumerable<MetricExecutionType> values = (IEnumerable<MetricExecutionType>)Enum.GetValues (typeof(MetricExecutionType));  	SelectionForm<string> sel = new SelectionForm<string> (values.Select (s => s.ToString ()).ToArray ()' false);  	sel.ShowDialog (this);  	if (sel.DialogResult == System.Windows.Forms.DialogResult.OK) {  		RowMetricExecution r = (RowMetricExecution)gridExecution.Rows [e.RowIndex].DataBoundItem;  		BindingList<RowMetricExecution> datasource = (BindingList<RowMetricExecution>)gridExecution.DataSource;  		datasource [e.RowIndex] = new RowMetricExecution (r.Item1' (MetricExecutionType)Enum.Parse (typeof(MetricExecutionType)' sel.Selection [0])' r.Item3);  	}  	sel.Dispose ();  	break;  case 1:  	RowMetricExecution r2 = (RowMetricExecution)gridExecution.Rows [e.RowIndex].DataBoundItem;  	if (r2.Item2 != MetricExecutionType.RefOutput) {  		MessageBox.Show ("Set to ExecutionType.InputOutput first!!!");  		return;  	}  	SelectionForm<Image> sel2 = new SelectionForm<Image> (_references' false);  	sel2.ShowDialog (this);  	if (sel2.DialogResult == System.Windows.Forms.DialogResult.OK) {  		BindingList<RowMetricExecution> datasource = (BindingList<RowMetricExecution>)gridExecution.DataSource;  		datasource [e.RowIndex] = new RowMetricExecution (r2.Item1' r2.Item2' new WeakImage (sel2.Selection [0]));  	}  	sel2.Dispose ();  	break;  }  
Missing Default,PROJECTO,SelectionForm,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\SelectionForm.cs,dataGridView1_KeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.Enter:  	Ok ();  	break;  }  
Missing Default,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,mnuStart_Click,The following switch statement is missing a default case: switch (MessageBox.Show ("Clean current results?"' "Question"' MessageBoxButtons.YesNoCancel)) {  case System.Windows.Forms.DialogResult.Yes:  	_results.Clear ();  	break;  case System.Windows.Forms.DialogResult.No:  	break;  case System.Windows.Forms.DialogResult.Cancel:  	return;  }  
Missing Default,PROJECTO,TreeBatch,C:\repos\fabriceleal_ImageProcessing\ImageProcessing\TreeBatch.cs,gridResults_CellDoubleClick,The following switch statement is missing a default case: switch (e.ColumnIndex) {  case 3:  	MeasuresViewerForm m = new MeasuresViewerForm (tuple.Item4);  	m.MdiParent = MdiParent;  	m.Show ();  	break;  }  
