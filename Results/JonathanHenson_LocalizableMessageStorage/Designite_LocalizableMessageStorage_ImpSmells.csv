Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LocalizableMessageStorage.Localization,LocalizableMessageStorage,C:\repos\JonathanHenson_LocalizableMessageStorage\LocalizableMessageStorage\Localization\LocalizableMessageStorage.cs,LoadLocaleIntoMap,Cyclomatic complexity of the method is 8
Long Statement,LocalizableMessageStorage.Localization,LocalizableMessageStorage,C:\repos\JonathanHenson_LocalizableMessageStorage\LocalizableMessageStorage\Localization\LocalizableMessageStorage.cs,GetLocalizedMessage,The length of the statement  "			Logger.ErrorFormat ("Failed while formatting string {0}' for locale {1}' with args {2}. Returning Null. Exception {3}"' localizedMessage' locale' args' ex); " is 156.
Magic Number,LocalizableMessageStorage.Localization,LocalizableMessageStorage,C:\repos\JonathanHenson_LocalizableMessageStorage\LocalizableMessageStorage\Localization\LocalizableMessageStorage.cs,LoadMapFromDirectory,The following statement contains a magic number: foreach (string fileName in Directory.GetFiles (messageFileDirectory)) {  	Match localeFilesMatch = Regex.Match (Path.GetFileName (fileName)' filePattern);  	if (localeFilesMatch.Success && localeFilesMatch.Groups.Count == 2) {  		CultureInfo locale = CultureInfo.CreateSpecificCulture (localeFilesMatch.Groups [1].Value);  		LoadLocaleIntoMap (locale' fileName);  	}  }  
Magic Number,LocalizableMessageStorage.Localization,LocalizableMessageStorage,C:\repos\JonathanHenson_LocalizableMessageStorage\LocalizableMessageStorage\Localization\LocalizableMessageStorage.cs,LoadMapFromDirectory,The following statement contains a magic number: if (localeFilesMatch.Success && localeFilesMatch.Groups.Count == 2) {  	CultureInfo locale = CultureInfo.CreateSpecificCulture (localeFilesMatch.Groups [1].Value);  	LoadLocaleIntoMap (locale' fileName);  }  
Magic Number,LocalizableMessageStorage.Localization,LocalizableMessageStorage,C:\repos\JonathanHenson_LocalizableMessageStorage\LocalizableMessageStorage\Localization\LocalizableMessageStorage.cs,LoadLocaleIntoMap,The following statement contains a magic number: using (TextReader fileStream = File.OpenText (fileName)) {  	Dictionary<string' string> cultureMap = new Dictionary<string' string> ();  	allMessageMaps [locale] = cultureMap;  	string previousKey = null;  	while (fileStream.Peek () > 0) {  		string line = fileStream.ReadLine ();  		if (isCommentLine (line))  			continue;  		string[] keyValue = SplitOnFirstCharOrReturnWholeString (line' '=');  		if (keyValue.Length == 2) {  			previousKey = keyValue [0].Trim ();  			cultureMap [previousKey] = keyValue [1];  		}  		//allow multiple lines of content  		else if (previousKey != null && !String.IsNullOrEmpty (line)) {  			string currentValue = cultureMap [previousKey];  			//allow bash style newline escape.  			if (currentValue.EndsWith ("/")) {  				currentValue = currentValue.Remove (currentValue.Length - 1);  			}  			else {  				currentValue += Environment.NewLine;  			}  			currentValue += line.TrimEnd ();  			cultureMap [previousKey] = currentValue;  		}  	}  }  
Magic Number,LocalizableMessageStorage.Localization,LocalizableMessageStorage,C:\repos\JonathanHenson_LocalizableMessageStorage\LocalizableMessageStorage\Localization\LocalizableMessageStorage.cs,LoadLocaleIntoMap,The following statement contains a magic number: while (fileStream.Peek () > 0) {  	string line = fileStream.ReadLine ();  	if (isCommentLine (line))  		continue;  	string[] keyValue = SplitOnFirstCharOrReturnWholeString (line' '=');  	if (keyValue.Length == 2) {  		previousKey = keyValue [0].Trim ();  		cultureMap [previousKey] = keyValue [1];  	}  	//allow multiple lines of content  	else if (previousKey != null && !String.IsNullOrEmpty (line)) {  		string currentValue = cultureMap [previousKey];  		//allow bash style newline escape.  		if (currentValue.EndsWith ("/")) {  			currentValue = currentValue.Remove (currentValue.Length - 1);  		}  		else {  			currentValue += Environment.NewLine;  		}  		currentValue += line.TrimEnd ();  		cultureMap [previousKey] = currentValue;  	}  }  
Magic Number,LocalizableMessageStorage.Localization,LocalizableMessageStorage,C:\repos\JonathanHenson_LocalizableMessageStorage\LocalizableMessageStorage\Localization\LocalizableMessageStorage.cs,LoadLocaleIntoMap,The following statement contains a magic number: if (keyValue.Length == 2) {  	previousKey = keyValue [0].Trim ();  	cultureMap [previousKey] = keyValue [1];  }  //allow multiple lines of content  else if (previousKey != null && !String.IsNullOrEmpty (line)) {  	string currentValue = cultureMap [previousKey];  	//allow bash style newline escape.  	if (currentValue.EndsWith ("/")) {  		currentValue = currentValue.Remove (currentValue.Length - 1);  	}  	else {  		currentValue += Environment.NewLine;  	}  	currentValue += line.TrimEnd ();  	cultureMap [previousKey] = currentValue;  }  
