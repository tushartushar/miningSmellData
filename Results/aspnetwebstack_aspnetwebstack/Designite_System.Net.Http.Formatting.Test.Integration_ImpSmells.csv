Implementation smell,Namespace,Class,File,Method,Description
Complex Method,System.Net.Http.Formatting,ObjectComparer,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonNetSerializationTest.cs,Equals,Cyclomatic complexity of the method is 12
Complex Method,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,Cyclomatic complexity of the method is 16
Complex Method,System.Net.Http.Formatting,FormUrlEncodedJsonFromContentTests,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\FormUrlEncodedFromContentTests.cs,BuildParams,Cyclomatic complexity of the method is 10
Complex Method,System.Net.Http.Formatting,FormUrlEncodedJsonFromUriQueryTests,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\FormUrlEncodedFromUriQueryTests.cs,BuildParams,Cyclomatic complexity of the method is 10
Complex Method,System.Net.Http.Formatting,JTokenRoundTripComparer,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JTokenRoundTripComparer.cs,Compare,Cyclomatic complexity of the method is 14
Long Statement,System.Net.Http.Formatting,JsonNetSerializationTest,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonNetSerializationTest.cs,Deserialize,The length of the statement  "            Task<object> readTask = formatter.ReadFromStreamAsync(type' ms' contentHeaders: null' formatterLogger: formatterLogger); " is 120.
Long Statement,System.Net.Http.Formatting,ObjectComparer,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonNetSerializationTest.cs,Equals,The length of the statement  "                if (typeof(JToken).IsAssignableFrom(xType) || xType == typeof(ArgumentNullException) || xType == typeof(KeyValuePair<JToken' JToken>)) " is 134.
Magic Number,System.Net.Http.Formatting,JsonNetSerializationTest,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonNetSerializationTest.cs,DeserializingDeepArraysThrows,The following statement contains a magic number: int depth = 500;
Magic Number,System.Net.Http.Formatting,JsonNetValidationTest,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonNetValidationTest.cs,HittingMaxDepthRaisesOnlyOneValidationError,The following statement contains a magic number: i < 5000
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJToken,The following statement contains a magic number: switch (rndGen.Next(10))                  {                      case 0:                      case 1:                      case 2:                          // 30% chance to create an array                          return CreateJArray(rndGen' depth);                      case 3:                      case 4:                      case 5:                          // 30% chance to create an object                          return CreateJObject(rndGen' depth);                      default:                          // 40% chance to create a primitive                          break;                  }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJToken,The following statement contains a magic number: switch (rndGen.Next(10))                  {                      case 0:                      case 1:                      case 2:                          // 30% chance to create an array                          return CreateJArray(rndGen' depth);                      case 3:                      case 4:                      case 5:                          // 30% chance to create an object                          return CreateJObject(rndGen' depth);                      default:                          // 40% chance to create a primitive                          break;                  }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJToken,The following statement contains a magic number: switch (rndGen.Next(10))                  {                      case 0:                      case 1:                      case 2:                          // 30% chance to create an array                          return CreateJArray(rndGen' depth);                      case 3:                      case 4:                      case 5:                          // 30% chance to create an object                          return CreateJObject(rndGen' depth);                      default:                          // 40% chance to create a primitive                          break;                  }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJToken,The following statement contains a magic number: switch (rndGen.Next(10))                  {                      case 0:                      case 1:                      case 2:                          // 30% chance to create an array                          return CreateJArray(rndGen' depth);                      case 3:                      case 4:                      case 5:                          // 30% chance to create an object                          return CreateJObject(rndGen' depth);                      default:                          // 40% chance to create a primitive                          break;                  }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJToken,The following statement contains a magic number: switch (rndGen.Next(10))                  {                      case 0:                      case 1:                      case 2:                          // 30% chance to create an array                          return CreateJArray(rndGen' depth);                      case 3:                      case 4:                      case 5:                          // 30% chance to create an object                          return CreateJObject(rndGen' depth);                      default:                          // 40% chance to create a primitive                          break;                  }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJsonPrimitive,The following statement contains a magic number: switch (rndGen.Next(17))              {                  case 0:                      return PrimitiveCreator.CreateInstanceOfChar(rndGen);                  case 1:                      return new JValue(PrimitiveCreator.CreateInstanceOfByte(rndGen));                  case 2:                      return PrimitiveCreator.CreateInstanceOfSByte(rndGen);                  case 3:                      return PrimitiveCreator.CreateInstanceOfInt16(rndGen);                  case 4:                      return PrimitiveCreator.CreateInstanceOfUInt16(rndGen);                  case 5:                      return PrimitiveCreator.CreateInstanceOfInt32(rndGen);                  case 6:                      return PrimitiveCreator.CreateInstanceOfUInt32(rndGen);                  case 7:                      return PrimitiveCreator.CreateInstanceOfInt64(rndGen);                  case 8:                      return PrimitiveCreator.CreateInstanceOfUInt64(rndGen);                  case 9:                      return PrimitiveCreator.CreateInstanceOfDecimal(rndGen);                  case 10:                      return PrimitiveCreator.CreateInstanceOfDouble(rndGen);                  case 11:                      return PrimitiveCreator.CreateInstanceOfSingle(rndGen);                  case 12:                      return PrimitiveCreator.CreateInstanceOfDateTime(rndGen);                  case 13:                      return PrimitiveCreator.CreateInstanceOfDateTimeOffset(rndGen);                  case 14:                  case 15:                      // TODO: 199532 fix uri comparer                      return PrimitiveCreator.CreateInstanceOfString(rndGen);                  default:                      return PrimitiveCreator.CreateInstanceOfBoolean(rndGen);              }
Magic Number,System.Net.Http.Formatting,JTokenCreatorSurrogate,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\JsonValueCreatorSurrogate.cs,CreateJObject,The following statement contains a magic number: key = PrimitiveCreator.CreateInstanceOfString(rndGen' 10' keyChars);
Magic Number,System.Net.Http.Formatting,FormUrlEncodedJsonFromContentTests,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\FormUrlEncodedFromContentTests.cs,GeneratedJTokenTest,The following statement contains a magic number: CreatorSettings.MaxArrayLength = 5;
Magic Number,System.Net.Http.Formatting,FormUrlEncodedJsonFromContentTests,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\FormUrlEncodedFromContentTests.cs,GeneratedJTokenTest,The following statement contains a magic number: CreatorSettings.MaxListLength = 3;
Magic Number,System.Net.Http.Formatting,FormUrlEncodedJsonFromContentTests,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\FormUrlEncodedFromContentTests.cs,GeneratedJTokenTest,The following statement contains a magic number: CreatorSettings.MaxStringLength = 3;
Magic Number,System.Net.Http.Formatting,FormUrlEncodedJsonFromContentTests,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\FormUrlEncodedFromContentTests.cs,GeneratedJTokenTest,The following statement contains a magic number: i < 1000
Magic Number,System.Net.Http.Formatting,FormUrlEncodedJsonFromUriQueryTests,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\FormUrlEncodedFromUriQueryTests.cs,GeneratedJTokenTest,The following statement contains a magic number: CreatorSettings.MaxArrayLength = 5;
Magic Number,System.Net.Http.Formatting,FormUrlEncodedJsonFromUriQueryTests,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\FormUrlEncodedFromUriQueryTests.cs,GeneratedJTokenTest,The following statement contains a magic number: CreatorSettings.MaxListLength = 3;
Magic Number,System.Net.Http.Formatting,FormUrlEncodedJsonFromUriQueryTests,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\FormUrlEncodedFromUriQueryTests.cs,GeneratedJTokenTest,The following statement contains a magic number: CreatorSettings.MaxStringLength = 3;
Magic Number,System.Net.Http.Formatting,FormUrlEncodedJsonFromUriQueryTests,D:\research\architectureSmells\repos\aspnetwebstack_aspnetwebstack\test\System.Net.Http.Formatting.Test.Integration\FormUrlEncodedFromUriQueryTests.cs,GeneratedJTokenTest,The following statement contains a magic number: i < 1000
