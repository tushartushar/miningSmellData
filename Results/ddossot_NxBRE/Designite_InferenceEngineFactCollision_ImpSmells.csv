Implementation smell,Namespace,Class,File,Method,Description
Magic Number,NxBRE.StressTests,WeightError,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\WeightError.cs,PerformProcess,The following statement contains a magic number: if (qrs.Count != (3 * nbDecaItems)) throw new Exception("Collision!");
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
Magic Number,NxBRE.StressTests,DummyData,C:\repos\ddossot_NxBRE\StressTests\InferenceEngineFactCollision\DummyData.cs,GetPhysicalObjects,The following statement contains a magic number: for(int i=0; i<nbDecaItems; i++)   			{  				physical_objects.Add(new PhysicalObject(1 + i*10' 1' 2));  				physical_objects.Add(new PhysicalObject(2 + i*10' 2' 3));  				physical_objects.Add(new PhysicalObject(3 + i*10' 3' 4));  				physical_objects.Add(new PhysicalObject(4 + i*10' 4' 5 ));  				physical_objects.Add(new PhysicalObject(5 + i*10' 5' 6));  				physical_objects.Add(new PhysicalObject(6 + i*10' 6' 7));  				physical_objects.Add(new PhysicalObject(7 + i*10' 7' 8));    				// Objects to fire the rule of weight  				physical_objects.Add(new PhysicalObject(8 + i*10' 9' 8));  				physical_objects.Add(new PhysicalObject(9 + i*10' 10' 9));  				physical_objects.Add(new PhysicalObject(10 + i*10' 11' 10));  			}
