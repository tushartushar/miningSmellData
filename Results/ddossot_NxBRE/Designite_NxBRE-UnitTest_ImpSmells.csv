Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,CommonVisio2003ImplicationProperties,Cyclomatic complexity of the method is 9
Long Parameter List,NxBRE.Test.FlowEngine,ProbeTraceListener,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,TraceData,The method has 5 parameters. Parameters: eventCache' source' eventType' id' data
Long Parameter List,NxBRE.Test.FlowEngine,ProbeTraceListener,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,TraceData,The method has 5 parameters. Parameters: eventCache' source' eventType' id' data
Long Parameter List,NxBRE.Test.FlowEngine,ProbeTraceListener,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,TraceEvent,The method has 6 parameters. Parameters: eventCache' source' eventType' id' format' args
Long Parameter List,NxBRE.Test.FlowEngine,ProbeTraceListener,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,TraceEvent,The method has 5 parameters. Parameters: eventCache' source' eventType' id' message
Long Statement,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,Exceptions,The length of the statement  "			Assert.IsTrue(((System.Exception)GetObject("EXCP")).Message == "This is another exception!"' "Stored Exception Message"); " is 121.
Long Statement,NxBRE.Test.FlowEngine,ProbeTraceListener,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,HandleEvent,The length of the statement  "					if ((data.Length == 1) && (data[0] is System.Exception) && (((System.Exception)data[0]).Message == ASSERTED_HELLO_VALUE)) " is 121.
Long Statement,NxBRE.Test.FlowEngine,ProbeTraceListener,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,HandleEvent,The length of the statement  "				else if ((eventType == TraceEventType.Information) && (data.Length == 1) && (data[0].ToString() == ASSERTED_HELLO_VALUE)) { " is 123.
Long Statement,NxBRE.Test.FlowEngine,TestDrivers,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestDrivers.cs,XBusinessRulesStringDriver,The length of the statement  "												"<xBusinessRules xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"http://nxbre.org/xBusinessRules.xsd\">" + " is 146.
Long Statement,NxBRE.Test.FlowEngine,TestRule,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestRule.cs,IBRERuleResultToString,The length of the statement  "			Assert.AreEqual("MetaData   :\nID Type : System.String\nID Str  : md-id\nFactory : NxBRE.Test.FlowEngine.TestRule+MockBRERuleFactory\nStack Loc: 0\nResult Type: System.String\nResult Str : result1\n"' rr.ToString()); " is 216.
Long Statement,NxBRE.Test.FlowEngine,TestRule,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestRule.cs,IBRERuleResultToString,The length of the statement  "			Assert.AreEqual("MetaData   :\nID Type : System.String\nID Str  : md-id\nFactory : NxBRE.Test.FlowEngine.TestRule+MockBRERuleFactory\nStack Loc: 0\nResult: Null"' rr.ToString()); " is 178.
Long Statement,NxBRE.Test.InferenceEngine,AbstractTestEngine,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\AbstractTestEngine.cs,HandleNewFactEvent,The length of the statement  "			if (Logger.IsInferenceEngineVerbose) Logger.InferenceEngineSource.TraceEvent(TraceEventType.Verbose' 0' "+ Deducted: " + nfea.Fact); " is 132.
Long Statement,NxBRE.Test.InferenceEngine,AbstractTestEngine,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\AbstractTestEngine.cs,HandleDeletedFactEvent,The length of the statement  "			if (Logger.IsInferenceEngineVerbose) Logger.InferenceEngineSource.TraceEvent(TraceEventType.Verbose' 0' "- Deleted: " + nfea.Fact); " is 131.
Long Statement,NxBRE.Test.InferenceEngine,AbstractTestEngine,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\AbstractTestEngine.cs,HandleModifiedFactEvent,The length of the statement  "			if (Logger.IsInferenceEngineVerbose) Logger.InferenceEngineSource.TraceEvent(TraceEventType.Verbose' 0' "* Modified: " + nfea.Fact + " -> " + nfea.OtherFact); " is 158.
Long Statement,NxBRE.Test.InferenceEngine,AbstractTestEngine,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\AbstractTestEngine.cs,HandleOrderedNewFact,The length of the statement  "				Console.Error.WriteLine("* Wrongly Deducted: {0} @ {1}' Expected: {2}"' nfea.Fact' deductionChecker' deductionsToCheck[deductionChecker]); " is 138.
Long Statement,NxBRE.Test.InferenceEngine,AbstractTestEngine,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\AbstractTestEngine.cs,ParseResult,The length of the statement  "			if (Logger.IsInferenceEngineVerbose) Logger.InferenceEngineSource.TraceEvent(TraceEventType.Verbose' 0' "-(Query Results) -"); " is 126.
Long Statement,NxBRE.Test.InferenceEngine,AbstractTestEngine,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\AbstractTestEngine.cs,ParseResult,The length of the statement  "				if (Logger.IsInferenceEngineVerbose) Logger.InferenceEngineSource.TraceEvent(TraceEventType.Verbose' 0' " (Result #{" + i + "})"); " is 130.
Long Statement,NxBRE.Test.InferenceEngine,AbstractTestEngine,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\AbstractTestEngine.cs,ParseResult,The length of the statement  "			if (Logger.IsInferenceEngineVerbose) Logger.InferenceEngineSource.TraceEvent(TraceEventType.Verbose' 0' "-(End Results)-\n"); " is 125.
Long Statement,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RuleMLImplicationLabelTagParserSimpleLabel,The length of the statement  "			RuleML086NafDatalogAdapter.ImplicationProperties labelInfo = new RuleML086NafDatalogAdapter.ImplicationProperties(simpleLabel); " is 127.
Long Statement,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RuleMLImplicationLabelTagParserComplexLabel,The length of the statement  "			RuleML086NafDatalogAdapter.ImplicationProperties labelInfo = new RuleML086NafDatalogAdapter.ImplicationProperties(complexLabel); " is 128.
Long Statement,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RuleMLStreamSource,The length of the statement  "			string ruleBase = "<rulebase><fact><_head><atom><_opr><rel>regular</rel></_opr><ind>Honda</ind></atom></_head></fact></rulebase>"; " is 130.
Long Statement,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RunVisio2003ImplicationProperties_3_0,The length of the statement  "				List<string> expected = new List<string>(new string[] {"own{?person'?stuff} == possess{?person'?stuff}"' "own{?person'?stuff} == belong{?stuff'?person}"}); " is 155.
Long Statement,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,Visio2003PageNames,The length of the statement  "			foreach(string pageName in pageNames) Assert.IsTrue(expectedResult.Contains("|" + pageName + "|")' pageName + " found"); " is 120.
Long Statement,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,BinderEventsVCB,The length of the statement  "	      IInferenceEngine ie = new IEImpl(VisualBasicBinderFactory.LoadFromString("NxBRE.Test.InferenceEngine.EventTestBinder"' sr.ReadToEnd())); " is 136.
Long Statement,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,BinderEventsCCB,The length of the statement  "	      IInferenceEngine ie = new IEImpl(CSharpBinderFactory.LoadFromString("NxBRE.Test.InferenceEngine.EventTestBinder"' sr.ReadToEnd())); " is 131.
Long Statement,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,BinderEventsFCE,The length of the statement  "      IInferenceEngine ie = new IEImpl(new FlowEngineBinder(ruleFilesFolder + "events-test.ruleml.xbre"' BindingTypes.BeforeAfter)); " is 126.
Long Statement,NxBRE.Test.InferenceEngine,TestCompositeAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCompositeAdapter.cs,ImplicationCount,The length of the statement  "            Assert.AreEqual(m_GedcomAdapter.Implications.Count + m_TestUnitAdapter.Implications.Count' m_CompositeAdapter.Implications.Count); " is 130.
Long Statement,NxBRE.Test.InferenceEngine,TestCompositeAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCompositeAdapter.cs,AssertionsCount,The length of the statement  "            Assert.AreEqual(m_GedcomAdapter.Assertions.Count + m_TestUnitAdapter.Assertions.Count' m_CompositeAdapter.Assertions.Count); " is 124.
Long Statement,NxBRE.Test.InferenceEngine,TestCompositeAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCompositeAdapter.cs,EquivalentsCount,The length of the statement  "            Assert.AreEqual(m_GedcomAdapter.Equivalents.Count + m_TestUnitAdapter.Equivalents.Count' m_CompositeAdapter.Equivalents.Count); " is 127.
Long Statement,NxBRE.Test.InferenceEngine,TestCompositeAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCompositeAdapter.cs,IntegrityQueriesCount,The length of the statement  "            Assert.AreEqual(m_GedcomAdapter.IntegrityQueries.Count + m_TestUnitAdapter.IntegrityQueries.Count' m_CompositeAdapter.IntegrityQueries.Count); " is 142.
Long Statement,NxBRE.Test.InferenceEngine,TestCompositeAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCompositeAdapter.cs,RetractionsCount,The length of the statement  "            Assert.AreEqual(m_GedcomAdapter.Retractions.Count + m_TestUnitAdapter.Retractions.Count' m_CompositeAdapter.Retractions.Count); " is 127.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Init,The length of the statement  "			atom3 = new Atom("spending"' new Variable("customer")' new Individual("min(5000'EUR)")' new Individual("previous year")); " is 121.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Init,The length of the statement  "			atomF = new Atom("spending"' new Variable("customer")' new Function(Function.FunctionResolutionType.Binder' "min(5000'EUR)"' null' "min"' new string[]{"5000"'"EUR"})' new Individual("previous year"));			 " is 200.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Init,The length of the statement  "			fact3 = new Fact("spending"' new Individual("Peter Miller")' new Individual("min(5000'EUR)")' new Individual("previous year")); " is 127.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Init,The length of the statement  "			fact3bis = new Fact("spending"' new Individual("Peter Miller")' new Individual("min(5000'EUR)")' new Individual("previous year")); " is 130.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Init,The length of the statement  "			factX = new Fact("spending"' new Individual("John Q. Doe")' new Individual("min(5000'EUR)")' new Individual("previous year")); " is 126.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,AtomSlots,The length of the statement  "			Atom atom = new Atom("spending"' new Slot("client"' new Variable("buyer"))' new Function(Function.FunctionResolutionType.Binder' "min(5000'EUR)"' null' "min"' new string[]{"5000"'"EUR"})); " is 188.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,WrongImplicationLowPriority,The length of the statement  "			new Implication(null' -1' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 122.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,WrongImplicationHiPriority,The length of the statement  "			new Implication(null' 101' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 123.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,WrongImplicationLowSalience,The length of the statement  "			Implication i = new Implication(null' ImplicationPriority.Medium' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 162.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,WrongImplicationHiSalience,The length of the statement  "			Implication i = new Implication(null' ImplicationPriority.Medium' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 162.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ImplicationBaseDuplicatedLabel,The length of the statement  "			ib.Add(new Implication("impMedLow"' 25' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3))); " is 137.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ImplicationBaseDuplicatedLabel,The length of the statement  "			ib.Add(new Implication("impMedLow"' 75' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3))); " is 137.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ImplicationBase,The length of the statement  "			Implication imp = new Implication("impMedLow"' 25' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 147.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ImplicationBase,The length of the statement  "			ib.Add(new Implication("impMedHi"' 75' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3))); " is 136.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,MutexMissing,The length of the statement  "			Implication imp = new Implication("impMedLow"' 25' "missing"' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 144.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,MutexMissing,The length of the statement  "			ib.Add(new Implication("impMedHi"' 25' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3))); " is 136.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,PreconditionMissing,The length of the statement  "			Implication impMedLow = new Implication("impMedLow"' 25' String.Empty' "missing"' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 150.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,PreconditionMissing,The length of the statement  "			ib.Add(new Implication("impMedHi"' 25' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3))); " is 136.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,GetPreconditionChildren,The length of the statement  "			Implication impMedLow = new Implication("impMedLow"' 25' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 153.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,GetPreconditionChildren,The length of the statement  "			Implication impMedHi = new Implication("impMedHi"' 25' String.Empty' "impMedLow"' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 150.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,PreconditionIsMutex,The length of the statement  "			Implication impMedLow = new Implication("impMedLow"' 25' "impMedHi"' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 151.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,PreconditionIsMutex,The length of the statement  "			Implication impMedHi = new Implication("impMedHi"' 25' String.Empty' "impMedLow"' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 150.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ProcessAnd,The length of the statement  "			IList<IList<FactBase.PositiveMatchResult>> result = fb.ProcessAtomGroup(new AtomGroup(AtomGroup.LogicalOperator.And' atom1' atom2)); " is 132.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ProcessAnd,The length of the statement  "			atom2 = new Atom("spending"' new Variable("otherName")' new Variable("whateverAmount")' new Individual("previous year")); " is 121.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ProcessAnd,The length of the statement  "			atom2 = new Atom("spending"' new Variable("otherName")' new Variable("whateverAmount")' new Individual("unknown year")); " is 120.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ProcessOr,The length of the statement  "			IList<IList<FactBase.PositiveMatchResult>> result = fb.ProcessAtomGroup(new AtomGroup(AtomGroup.LogicalOperator.Or' atom1' atom2)); " is 131.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,AtomFunctionBinder,The length of the statement  "			Assert.IsTrue(new AtomFunction(AtomFunction.RelationResolutionType.NxBRE' false' null' "nxbre:Equals"' new Individual(123)' new Individual(123)).PositiveRelation' "AtomFunction: true PositiveRelation"); " is 202.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,AtomFunctionBinder,The length of the statement  "			Assert.IsFalse(new AtomFunction(AtomFunction.RelationResolutionType.NxBRE' false' null' "nxbre:Equals"' new Individual(123)' new Individual(321)).PositiveRelation' "AtomFunction: false PositiveRelation"); " is 204.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,AtomFunctionWithFunctionPredicate,The length of the statement  "			new AtomFunction(AtomFunction.RelationResolutionType.NxBRE' false' null' "nxbre:Equals"' new Individual(123)' new Function(Function.FunctionResolutionType.Binder' "123"' null' "Test"' new string[0])); " is 200.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Agenda,The length of the statement  "			Implication impLow = new Implication("impLow"' ImplicationPriority.Minimum' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 172.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Agenda,The length of the statement  "			Implication impLowMed = new Implication("impLowMed"' 25' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 153.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Agenda,The length of the statement  "			Implication impMed = new Implication("impMed"' ImplicationPriority.Medium' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 171.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Agenda,The length of the statement  "			Implication impMedSaLo = new Implication("impMedSaLo"' ImplicationPriority.Medium' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 179.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Agenda,The length of the statement  "			Implication impMedSaHi = new Implication("impMedSaHi"' ImplicationPriority.Medium' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 179.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Agenda,The length of the statement  "			Implication impMedHi = new Implication("impMedHi"' 75' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 151.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Agenda,The length of the statement  "			Implication impHi = new Implication("impHi"' ImplicationPriority.Maximum' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)); " is 170.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,QueryBase,The length of the statement  "			Assert.IsTrue(((Atom)query1.AtomGroup.Members[0]).IsIntersecting((Atom)getQ1.AtomGroup.Members[0])' "Get Query Is Similar"); " is 124.
Long Statement,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,QueryBase,The length of the statement  "			Assert.IsTrue(((Atom)query2.AtomGroup.Members[0]).IsIntersecting((Atom)getQ2.AtomGroup.Members[0])' "(3) Get Query Is Similar"); " is 128.
Long Statement,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,RetractingImplication,The length of the statement  "			Assert.IsTrue(ie.FactExists(factRetractionConfirmation)' "2nd process: retracting implication positive pre-conditionned"); " is 122.
Long Statement,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,CheckNonStrictImplicationBehavior,The length of the statement  "			Assert.IsTrue(ie.Assert(new Fact("flagStrictB"' new Individual("anything")' new Individual("whatever")))' "Asserted fact B"); " is 125.
Long Statement,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ExpressionModification,The length of the statement  "													  new Atom("Contract Details"' new Individual(referenceA)' new Variable("Next Renewal Date")' new Variable("Period Months"))))); " is 126.
Long Statement,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ExpressionModification,The length of the statement  "													  new Atom("Contract Details"' new Individual(referenceA)' new Variable("Next Renewal Date")' new Variable("Period Months"))))); " is 126.
Long Statement,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,DataInBodySupport,The length of the statement  "			Assert.IsTrue(ie.Assert(new Fact("Threshold-Check"' new Individual("PASS")' new Individual(50)))' "Asserted passing fact"); " is 123.
Long Statement,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,DataInBodySupport,The length of the statement  "			Assert.IsTrue(ie.Assert(new Fact("Threshold-Check"' new Individual("FAIL")' new Individual(5)))' "Asserted failing fact"); " is 122.
Long Statement,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SlotContributeNamedValues,The length of the statement  "			Assert.IsTrue(ie.Assert(new Fact("Slot-Threshold-Check"' new Individual("PASS")' new Individual(50)))' "Asserted passing fact"); " is 128.
Long Statement,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SlotContributeNamedValues,The length of the statement  "			Assert.IsTrue(ie.Assert(new Fact("Slot-Threshold-Check"' new Individual("FAIL")' new Individual(5)))' "Asserted failing fact"); " is 127.
Long Statement,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SlotContributeNamedValues,The length of the statement  "			Assert.IsTrue(ie.Assert(new Fact("Slot-Contribution"' new Individual("SUCCESS")' new Individual("PASS")' new Individual(50)))' "Asserted second passing fact"); " is 159.
Long Statement,NxBRE.Test.InferenceEngine,TestEngineRuleML09MultiSyntax,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineRuleML09MultiSyntax.cs,PerformLoadTest,The length of the statement  "				Assert.IsTrue((fact.ToString() == "sell{John'Mary'XMLBible}") | ((fact.ToString() == "keep{Mary'XMLBible}"))' "Initial facts value"); " is 133.
Long Statement,NxBRE.Test.InferenceEngine,TestTypedFacts,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestTypedFacts.cs,PersistenceOfNonConvertibleTypedFacts086,The length of the statement  "			DoPersistenceOfNonConvertibleTypedFacts(new RuleML086NafDatalogAdapter(ruleFilesFolder + "typed-facts-0_86.ruleml"' FileAccess.Read)); " is 134.
Long Statement,NxBRE.Test.InferenceEngine,TestTypedFacts,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestTypedFacts.cs,PersistenceOfNonConvertibleTypedFacts09,The length of the statement  "			DoPersistenceOfNonConvertibleTypedFacts(new RuleML09NafDatalogAdapter(ruleFilesFolder + "typed-facts-0_9.ruleml"' FileAccess.Read)); " is 132.
Long Statement,NxBRE.Test.InferenceEngine,TestTypedFacts,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestTypedFacts.cs,EnsureFactCorrectlyTyped,The length of the statement  "				Assert.AreEqual(fact.Type.Substring(1 + fact.Type.LastIndexOf(' '))' fact.GetPredicateValue(0).GetType().FullName' "Ensure type support"); " is 138.
Long Statement,NxBRE.Test.InferenceEngine,TestTypedFacts,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestTypedFacts.cs,LoadTypedFactsRuleML086,The length of the statement  "			EnsureFactCorrectlyTyped(new RuleML086NafDatalogAdapter(ruleFilesFolder + "typed-facts-0_86.ruleml"' FileAccess.Read)' 9); " is 122.
Long Statement,NxBRE.Test.InferenceEngine,TestTypedFacts,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestTypedFacts.cs,LoadTypedFactsRuleML09,The length of the statement  "			EnsureFactCorrectlyTyped(new RuleML09NafDatalogAdapter(ruleFilesFolder + "typed-facts-0_9.ruleml"' FileAccess.Read)' 43); " is 121.
Long Statement,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectDictionaryExpressions,The length of the statement  "			Assert.AreEqual(21d' Compilation.Evaluate("5 + System.Math.Pow(2d' {var:a})"' @"\{var:(?<1>[^}]*)\}"' values)' "Evaluation with var:"); " is 135.
Long Statement,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectDictionaryExpressions,The length of the statement  "			Assert.AreEqual(31d' Compilation.Evaluate("15 + System.Math.Pow(2d' {$a})"' @"\{\$(?<1>[^}]*)\}"' values)' "Evaluation with $"); " is 128.
Long Statement,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectDictionaryExpressions,The length of the statement  "			Assert.AreEqual(21d' Compilation.Evaluate("expr:5 + System.Math.Pow(2d' {var:a})"' @"\{var:(?<1>[^}]*)\}"' values)' "Evaluation with var:"); " is 140.
Long Statement,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectDictionaryExpressions,The length of the statement  "			Assert.AreEqual(31d' Compilation.Evaluate("expr:15 + System.Math.Pow(2d' {$a})"' @"\{\$(?<1>[^}]*)\}"' values)' "Evaluation with $"); " is 133.
Long Statement,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,CompiledDictionaryExpressions,The length of the statement  "			IDictionaryEvaluator compiledEvaluator = Compilation.NewEvaluator("5 + System.Math.Pow(2d' {var:a})"' @"\{var:(?<1>[^}]*)\}"' values); " is 134.
Long Statement,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MissingArgumentDictionaryExpressions,The length of the statement  "			Assert.AreEqual(21d' Compilation.Evaluate("5 + System.Math.Pow(2d' {var:a})"' @"\{var:(?<1>[^}]*)\}"' values)' "Evaluation with var:"); " is 135.
Long Statement,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,CompileThenChangeTypeError,The length of the statement  "			IDictionaryEvaluator compiledEvaluator = Compilation.NewEvaluator("5 + System.Math.Pow(2d' {var:a})"' @"\{var:(?<1>[^}]*)\}"' values); " is 134.
Long Statement,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectListExpressions,The length of the statement  "			Assert.AreEqual(21d' Compilation.Evaluate("{var:a} + System.Math.Pow(2d' {var:b})"' @"\{var:(?<1>[^}]*)\}"' variables' values)' "Evaluation with var:"); " is 152.
Long Statement,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectListExpressions,The length of the statement  "			Assert.AreEqual(31d' Compilation.Evaluate("expr:{$a} + System.Math.Pow(2d' {$b})"' @"\{\$(?<1>[^}]*)\}"' variables' values)' "Evaluation with $"); " is 146.
Long Statement,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MissingValueDirectListExpressions,The length of the statement  "			Assert.AreEqual(21d' Compilation.Evaluate("{var:a} + System.Math.Pow(2d' {var:b})"' @"\{var:(?<1>[^}]*)\}"' variables' values)' "Evaluation with var:"); " is 152.
Long Statement,NxBRE.Test,TestSchema,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestSchema.cs,CheckAllTypesSupport,The length of the statement  "			  Assert.AreEqual(value' Xml.FromClr(Xml.ToClr(value' schemaType)' schemaType)' "Testing type=" + schemaType + " value=" + value); " is 128.
Long Statement,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,CastValue,The length of the statement  "			Assert.AreEqual(new System.Exception("dummy").ToString()' Reflection.CastValue("dummy"' typeof(Exception)).ToString()' "string to exception"); " is 142.
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,SetsForKnownOutcome,The following statement contains a magic number: Assert.AreEqual(2' sets.Count);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,SetsForKnownOutcome,The following statement contains a magic number: Assert.AreEqual(2' sets.Count);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,SourceObjectsForKnownSet,The following statement contains a magic number: Assert.AreEqual(4' objects.Count);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,SourceObjectsForKnownSet,The following statement contains a magic number: Assert.AreEqual(4' objects.Count);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,OneLevelProcessingNoOutcome,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TotalIncome"' 16000);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,OneLevelProcessingWithOutcome,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TotalIncome"' 12000);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,OneLevelProcessingWithOutcome,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TotalIncome"' 16000);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,TwoLevelProcessingWithOutcome,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TotalIncome"' 100.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,TwoLevelProcessingWithOutcome,The following statement contains a magic number: flowEngine.RuleContext.SetObject("MonthlyInstallments"' 10.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NLevelProcessingWithOutcome,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TotalIncome"' 11000.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NLevelProcessingWithOutcome,The following statement contains a magic number: flowEngine.RuleContext.SetObject("MonthlyInstallments"' 5500.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NLevelProcessingWithOutcome,The following statement contains a magic number: flowEngine.RuleContext.SetObject("AgeOfApplicant"' 27);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NLevelProcessingWithOutcome,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TimeAtCurrentJob"' 13);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,PositiveResolution,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TotalIncome"' 11000.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,PositiveResolution,The following statement contains a magic number: flowEngine.RuleContext.SetObject("MonthlyInstallments"' 5500.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,PositiveResolution,The following statement contains a magic number: flowEngine.RuleContext.SetObject("AgeOfApplicant"' 27);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,PositiveResolution,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TimeAtCurrentJob"' 13);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NegativeResolutions,The following statement contains a magic number: transientFlowEngine.RuleContext.SetObject("TotalIncome"' 11000.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NegativeResolutions,The following statement contains a magic number: transientFlowEngine.RuleContext.SetObject("MonthlyInstallments"' 5500.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NegativeResolutions,The following statement contains a magic number: transientFlowEngine.RuleContext.SetObject("AgeOfApplicant"' 27);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NegativeResolutions,The following statement contains a magic number: transientFlowEngine.RuleContext.SetObject("TimeAtCurrentJob"' 13);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NegativeResolutions,The following statement contains a magic number: transientFlowEngine.RuleContext.SetObject("TotalIncome"' 11000.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NegativeResolutions,The following statement contains a magic number: transientFlowEngine.RuleContext.SetObject("MonthlyInstallments"' 5500.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NegativeResolutions,The following statement contains a magic number: transientFlowEngine.RuleContext.SetObject("AgeOfApplicant"' 27);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NegativeResolutions,The following statement contains a magic number: transientFlowEngine.RuleContext.SetObject("TimeAtCurrentJob"' 10);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NegativeResolutions,The following statement contains a magic number: transientFlowEngine.RuleContext.SetObject("TotalIncome"' 11000.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NegativeResolutions,The following statement contains a magic number: transientFlowEngine.RuleContext.SetObject("MonthlyInstallments"' 5500.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NegativeResolutions,The following statement contains a magic number: transientFlowEngine.RuleContext.SetObject("AgeOfApplicant"' 27);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,NegativeResolutions,The following statement contains a magic number: transientFlowEngine.RuleContext.SetObject("TimeAtCurrentJob"' 15);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEnginePositiveResolutionNoDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TotalIncome"' 11000.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEnginePositiveResolutionNoDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("MonthlyInstallments"' 5500.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEnginePositiveResolutionNoDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("AgeOfApplicant"' 27);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEnginePositiveResolutionNoDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TimeAtCurrentJob"' 13);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEnginePositiveResolutionDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TotalIncome"' 11000.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEnginePositiveResolutionDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("MonthlyInstallments"' 5500.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEnginePositiveResolutionDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("AgeOfApplicant"' 27);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEnginePositiveResolutionDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TimeAtCurrentJob"' 13);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEngineNegativeResolutionNoDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TotalIncome"' 11000.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEngineNegativeResolutionNoDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("MonthlyInstallments"' 5500.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEngineNegativeResolutionNoDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("AgeOfApplicant"' 27);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEngineNegativeResolutionNoDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TimeAtCurrentJob"' 13);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEngineNegativeResolutionDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TotalIncome"' 11000.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEngineNegativeResolutionDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("MonthlyInstallments"' 5500.0);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEngineNegativeResolutionDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("AgeOfApplicant"' 27);
Magic Number,NxBRE.Test.FlowEngine,TestBackwardChainer,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBackwardChainer.cs,FlowEngineNegativeResolutionDefault,The following statement contains a magic number: flowEngine.RuleContext.SetObject("TimeAtCurrentJob"' 13);
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,ContextlessDelegate,The following statement contains a magic number: return 50;
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,InitTest,The following statement contains a magic number: to = new TestObject(true' 10' "hello");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,InitTest,The following statement contains a magic number: row.col2=2004;
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual((Byte) 8' GetObject("8b")' "Byte");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(2003' 12' 25)' GetObject("xmas2003")' "Date");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(2003' 12' 25)' GetObject("xmas2003")' "Date");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(2003' 12' 25)' GetObject("xmas2003")' "Date");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(1969' 07' 21' 02' 56' 00)' GetObject("manOnMoon")' "DateTime");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(1969' 07' 21' 02' 56' 00)' GetObject("manOnMoon")' "DateTime");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(1969' 07' 21' 02' 56' 00)' GetObject("manOnMoon")' "DateTime");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(1969' 07' 21' 02' 56' 00)' GetObject("manOnMoon")' "DateTime");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(1969' 07' 21' 02' 56' 00)' GetObject("manOnMoon")' "DateTime");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(DateTime.Today.Add(new TimeSpan(7' 15' 30))' GetObject("wakeUpCall")' "Time");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(DateTime.Today.Add(new TimeSpan(7' 15' 30))' GetObject("wakeUpCall")' "Time");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(DateTime.Today.Add(new TimeSpan(7' 15' 30))' GetObject("wakeUpCall")' "Time");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(2003' 12' 25)' GetObject("xmas2003_A")' "Asserted Date");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(2003' 12' 25)' GetObject("xmas2003_A")' "Asserted Date");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(2003' 12' 25)' GetObject("xmas2003_A")' "Asserted Date");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(1969' 07' 21' 02' 56' 00)' GetObject("manOnMoon_A")' "Asserted DateTime");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(1969' 07' 21' 02' 56' 00)' GetObject("manOnMoon_A")' "Asserted DateTime");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(1969' 07' 21' 02' 56' 00)' GetObject("manOnMoon_A")' "Asserted DateTime");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(1969' 07' 21' 02' 56' 00)' GetObject("manOnMoon_A")' "Asserted DateTime");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(new DateTime(1969' 07' 21' 02' 56' 00)' GetObject("manOnMoon_A")' "Asserted DateTime");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(DateTime.Today.Add(new TimeSpan(7' 15' 30))' GetObject("wakeUpCall_A")' "Asserted Time");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(DateTime.Today.Add(new TimeSpan(7' 15' 30))' GetObject("wakeUpCall_A")' "Asserted Time");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(DateTime.Today.Add(new TimeSpan(7' 15' 30))' GetObject("wakeUpCall_A")' "Asserted Time");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(3.14m' GetObject("3.14m")' "Decimal");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual((Single) 3.14' GetObject("3.14")' "Single");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual(3.14d' GetObject("3.14d")' "Double");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual((Int16) 16' GetObject("16s")' "Int16");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual((Int32)5' GetObject("5i")' "Int16(5)");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,PrimitiveAssertions,The following statement contains a magic number: Assert.AreEqual((Int32)10' GetObject("10i")' "Int16(10)");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,Reflection,The following statement contains a magic number: Assert.AreEqual(20' to.MyProperty);
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,Reflection,The following statement contains a magic number: Assert.AreEqual(1969' row["col2"]' "RowSet.Set");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,Reflection,The following statement contains a magic number: Assert.AreEqual(2' tryParseResult.Length);
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,Reflection,The following statement contains a magic number: Assert.AreEqual(12345' tryParseResult[1]);
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,ReflectionParams,The following statement contains a magic number: Assert.AreEqual(90' GetObject("TestMultiply")' "TestMultiply");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,ReflectionParams,The following statement contains a magic number: Assert.AreEqual(14d' GetObject("TestOperate1")' "TestOperate1");
Magic Number,NxBRE.Test.FlowEngine,TestBREImpl,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestBREImpl.cs,ReflectionParams,The following statement contains a magic number: Assert.AreEqual(25' GetObject("TestOperate2")' "TestOperate2");
Magic Number,NxBRE.Test.FlowEngine,TestExtra,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestExtra.cs,TestCancelWhile,The following statement contains a magic number: Assert.AreEqual(10' flowEngine.RuleContext.GetObject("10i"));
Magic Number,NxBRE.Test.FlowEngine,TestRule,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\FlowEngine\TestRule.cs,MatchesOperator,The following statement contains a magic number: j<2
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RuleMLImplicationLabelTagParserComplexLabel,The following statement contains a magic number: Assert.AreEqual(75' labelInfo.priority' "Prority");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RuleML08LoadFacts,The following statement contains a magic number: Assert.AreEqual(6' ie.FactsCount' "Initial process");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RuleML08LoadFacts,The following statement contains a magic number: Assert.AreEqual(8' ie.FactsCount' "Loaded facts");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RuleML08LoadFacts,The following statement contains a magic number: Assert.AreEqual(10' ie.FactsCount' "Subsequent process");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,HRFLoadRuleBase,The following statement contains a magic number: Assert.AreEqual(3' ie.FactsCount' "FraudControl Facts");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,HRFLoadRuleBase,The following statement contains a magic number: Assert.AreEqual(3' ie.FactsCount' "Telco-Rating Facts");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,Visio2003ImplicationProperties_2_1,The following statement contains a magic number: CommonVisio2003ImplicationProperties(0' 3' va' true);
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,Visio2003ImplicationProperties_2_2,The following statement contains a magic number: CommonVisio2003ImplicationProperties(0' 4' va' false);
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,Visio2003ImplicationProperties_2_3,The following statement contains a magic number: CommonVisio2003ImplicationProperties(1' 5' va' false);
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RunVisio2003ImplicationProperties_3_0,The following statement contains a magic number: CommonVisio2003ImplicationProperties(1' 5' va' false);
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RunVisio2003ImplicationProperties_3_0,The following statement contains a magic number: Assert.IsInstanceOfType(typeof(Function)' atom.Members[2]' "Basic slot type predicate support");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RunVisio2003ImplicationProperties_3_0,The following statement contains a magic number: Assert.AreEqual("Size"' atom.SlotNames[2]' "Basic slot name predicate support");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RunVisio2003ImplicationProperties_3_0,The following statement contains a magic number: Assert.IsInstanceOfType(typeof(int)' atom.GetPredicateValue(3)' "Typed slot type predicate support");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RunVisio2003ImplicationProperties_3_0,The following statement contains a magic number: Assert.AreEqual("Year"' atom.SlotNames[3]' "Typed slot name predicate support");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RunVisio2003ImplicationProperties_3_0,The following statement contains a magic number: Assert.AreEqual(2006' atom.GetPredicate("Year").Value' "Typed slot value support");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,RunVisio2003ImplicationProperties_3_0,The following statement contains a magic number: Assert.AreEqual(2' va.Equivalents.Count' "Equivalents count");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,CommonVisio2003ImplicationProperties,The following statement contains a magic number: Assert.AreEqual(70' i.Priority' "imp1: Priority");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,Visio2003PageNames,The following statement contains a magic number: Assert.AreEqual(5' pageNames.Count' "Page count");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,PerfomativeLoadProcessing,The following statement contains a magic number: Assert.AreEqual(3' ie.FactsCount' "Only fact assertion should have happened");
Magic Number,NxBRE.Test.InferenceEngine,TestAdapter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestAdapter.cs,PerfomativeLoadProcessing,The following statement contains a magic number: Assert.AreEqual(6' ie.FactsCount' "Fact assertion and deduction should have happened");
Magic Number,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,BeforeAfterFlowEngineBinder,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "polite Count");
Magic Number,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,RunTestBinderEvents,The following statement contains a magic number: Assert.AreEqual(2' ((ArrayList)bo["ASSERTED"]).Count' "Count Asserted");
Magic Number,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,RunTestBinderEvents,The following statement contains a magic number: Assert.AreEqual(2' ((ArrayList)bo["MODIFIED"]).Count' "Count Modified");
Magic Number,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,RunTestBoundFormulas,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("operandA"' new Individual(23))));
Magic Number,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,RunTestBoundFormulas,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("operandB"' new Individual(7))));
Magic Number,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,RunTestBoundFormulas,The following statement contains a magic number: Assert.AreEqual(5' ie.FactsCount);
Magic Number,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,RunTestBoundFormulas,The following statement contains a magic number: Assert.IsTrue(ie.FactExists(new Fact("resultA-B"' new Individual(16)))' "resultA-B is wrong");
Magic Number,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,RunTestBoundFormulas,The following statement contains a magic number: Assert.IsTrue(ie.FactExists(new Fact("resultB-A"' new Individual(-16)))' "resultB-A is wrong");
Magic Number,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,RunTestBoundFormulas,The following statement contains a magic number: Assert.IsTrue(ie.FactExists(new Fact("resultBoth"' new Individual(16)' new Individual(-16)))' "resultBoth is wrong");
Magic Number,NxBRE.Test.InferenceEngine,TestBinder,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestBinder.cs,RunTestBoundFormulas,The following statement contains a magic number: Assert.IsTrue(ie.FactExists(new Fact("resultBoth"' new Individual(16)' new Individual(-16)))' "resultBoth is wrong");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("44")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual((SByte) 44)' new Individual("foo")))'  			              "SByte");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("11")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual((Int16) 11)' new Individual("foo")))'  			              "Int16");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("22")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual((Int32) 22)' new Individual("foo")))'  			              "Int32");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("33")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual((Int64) 33)' new Individual("foo")))'  			              "Int64");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("3.14")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual((Single) 3.14)' new Individual("foo")))'  			              "Single");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("6.28")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual((Double) 6.28)' new Individual("foo")))'  			              "Double");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("9.42")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual((Decimal) 9.42)' new Individual("foo")))'  			              "Decimal");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("2003-12-25")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual(new DateTime(2003' 12' 25))' new Individual("foo")))'  			              "Date");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("2003-12-25")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual(new DateTime(2003' 12' 25))' new Individual("foo")))'  			              "Date");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("2003-12-25")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual(new DateTime(2003' 12' 25))' new Individual("foo")))'  			              "Date");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("1969-07-21T02:56:00")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual(new DateTime(1969' 07' 21' 02' 56' 00))' new Individual("foo")))'  			              "DateTime");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("1969-07-21T02:56:00")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual(new DateTime(1969' 07' 21' 02' 56' 00))' new Individual("foo")))'  			              "DateTime");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("1969-07-21T02:56:00")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual(new DateTime(1969' 07' 21' 02' 56' 00))' new Individual("foo")))'  			              "DateTime");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("1969-07-21T02:56:00")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual(new DateTime(1969' 07' 21' 02' 56' 00))' new Individual("foo")))'  			              "DateTime");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("1969-07-21T02:56:00")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual(new DateTime(1969' 07' 21' 02' 56' 00))' new Individual("foo")))'  			              "DateTime");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("07:15:30")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual(DateTime.Today.Add(new TimeSpan(7' 15' 30)))' new Individual("foo")))'  			              "Time");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("07:15:30")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual(DateTime.Today.Add(new TimeSpan(7' 15' 30)))' new Individual("foo")))'  			              "Time");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,TypedRelationMatching,The following statement contains a magic number: Assert.IsTrue(new Atom("test"' new Individual("07:15:30")' new Variable("foo"))  			              .Matches(new Fact("test"' new Individual(DateTime.Today.Add(new TimeSpan(7' 15' 30)))' new Individual("foo")))'  			              "Time");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,WrongImplicationHiPriority,The following statement contains a magic number: new Implication(null' 101' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,WrongImplicationHiSalience,The following statement contains a magic number: i.Salience = 100;
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ImplicationBaseDuplicatedLabel,The following statement contains a magic number: ib.Add(new Implication("impMedLow"' 25' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ImplicationBaseDuplicatedLabel,The following statement contains a magic number: ib.Add(new Implication("impMedLow"' 75' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ImplicationBase,The following statement contains a magic number: Implication imp = new Implication("impMedLow"' 25' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ImplicationBase,The following statement contains a magic number: ib.Add(new Implication("impMedHi"' 75' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,MutexMissing,The following statement contains a magic number: Implication imp = new Implication("impMedLow"' 25' "missing"' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,MutexMissing,The following statement contains a magic number: ib.Add(new Implication("impMedHi"' 25' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,PreconditionMissing,The following statement contains a magic number: Implication impMedLow = new Implication("impMedLow"' 25' String.Empty' "missing"' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,PreconditionMissing,The following statement contains a magic number: ib.Add(new Implication("impMedHi"' 25' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3)));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,GetPreconditionChildren,The following statement contains a magic number: Implication impMedLow = new Implication("impMedLow"' 25' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,GetPreconditionChildren,The following statement contains a magic number: Implication impMedHi = new Implication("impMedHi"' 25' String.Empty' "impMedLow"' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,PreconditionIsMutex,The following statement contains a magic number: Implication impMedLow = new Implication("impMedLow"' 25' "impMedHi"' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,PreconditionIsMutex,The following statement contains a magic number: Implication impMedHi = new Implication("impMedHi"' 25' String.Empty' "impMedLow"' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,RunStrictTypingFactBaseTest,The following statement contains a magic number: Assert.IsTrue(fb.Assert(new Fact("spending"'  								                        new Individual("foo")'  								                        new Individual(7000)))' "Assert 'foo Spending'");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,NonStrictTypingFactBase,The following statement contains a magic number: Assert.AreEqual(2' RunStrictTypingFactBaseTest(false)' "Non-Strict typing selection");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ExcludeFactsFromSelection,The following statement contains a magic number: Assert.IsTrue(fb.Assert(new Fact("spending"'  								                        new Individual("Peter Miller")'  								                        new Individual(5000)'  								                        new Individual("previous year")))' "Assert 'P.Miller Spending'");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ExcludeFactsFromSelection,The following statement contains a magic number: Fact jqdSpending = new Fact("JQD Spending"'  								                   "spending"'  						                        new Individual("John Q.Clone Doe")'  						                        new Individual(7000)'  						                        new Individual("previous year"));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ExcludeFactsFromSelection,The following statement contains a magic number: Assert.AreEqual(2' CountEnumerator(fb.Select(filter' null))' "Query with NxBRE function and no fact exclusion");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,PopulateFactBase,The following statement contains a magic number: Assert.IsTrue(fb.Assert(new Fact("spending"'  								                        new Individual("foo")'  								                        new Individual(7000)))' "Assert 'foo Spending'");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,PopulateFactBase,The following statement contains a magic number: Assert.IsTrue(fb.Assert(new Fact("spending"'  								                        new Individual("Peter Miller")'  								                        new Individual(5000)'  								                        new Individual("previous year")))' "Assert 'P.Miller Spending'");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,PopulateFactBase,The following statement contains a magic number: Assert.IsTrue(fb.Assert(new Fact("JQD Spending"'  										                   "spending"'  								                        new Individual("John Q.Clone Doe")'  								                        new Individual(7000)'  								                        new Individual("previous year")))' "Assert 'JQD Spending'");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,PopulateFactBase,The following statement contains a magic number: Assert.IsTrue(fb.Assert(new Fact("lending"'  								                        new Individual("John Q.Clone Doe")'  								                        new Individual(7000)'  								                        new Individual("previous year")))' "Assert 'JQD Lending'");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ProcessAnd,The following statement contains a magic number: Assert.AreEqual(2' result.Count' "2 positive combinatorial atoms");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,ProcessOr,The following statement contains a magic number: Assert.AreEqual(3' result.Count' "2 positive atoms");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,AtomFunctionBinder,The following statement contains a magic number: Assert.IsTrue(new AtomFunction(AtomFunction.RelationResolutionType.NxBRE' false' null' "nxbre:Equals"' new Individual(123)' new Individual(123)).PositiveRelation' "AtomFunction: true PositiveRelation");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,AtomFunctionBinder,The following statement contains a magic number: Assert.IsTrue(new AtomFunction(AtomFunction.RelationResolutionType.NxBRE' false' null' "nxbre:Equals"' new Individual(123)' new Individual(123)).PositiveRelation' "AtomFunction: true PositiveRelation");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,AtomFunctionBinder,The following statement contains a magic number: Assert.IsFalse(new AtomFunction(AtomFunction.RelationResolutionType.NxBRE' false' null' "nxbre:Equals"' new Individual(123)' new Individual(321)).PositiveRelation' "AtomFunction: false PositiveRelation");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,AtomFunctionBinder,The following statement contains a magic number: Assert.IsFalse(new AtomFunction(AtomFunction.RelationResolutionType.NxBRE' false' null' "nxbre:Equals"' new Individual(123)' new Individual(321)).PositiveRelation' "AtomFunction: false PositiveRelation");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,AtomFunctionWithFunctionPredicate,The following statement contains a magic number: new AtomFunction(AtomFunction.RelationResolutionType.NxBRE' false' null' "nxbre:Equals"' new Individual(123)' new Function(Function.FunctionResolutionType.Binder' "123"' null' "Test"' new string[0]));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,FactBaseAssertModify,The following statement contains a magic number: Assert.AreEqual(2' fb.Count' "(1) FactBase size");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,FactBaseAssertModify,The following statement contains a magic number: Assert.AreEqual(2' fb.Count' "(2) FactBase size");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,FactBaseAssertModify,The following statement contains a magic number: Assert.AreEqual(2' fb.Count' "(3) FactBase size");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Agenda,The following statement contains a magic number: Implication impLowMed = new Implication("impLowMed"' 25' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Agenda,The following statement contains a magic number: Assert.AreEqual(5101' impMedSaLo.Weight' "Weight impMedSaLo");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Agenda,The following statement contains a magic number: impMedSaHi.Salience = 99;
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Agenda,The following statement contains a magic number: Assert.AreEqual(5199' impMedSaHi.Weight' "Weight impMedSaLo");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,Agenda,The following statement contains a magic number: Implication impMedHi = new Implication("impMedHi"' 75' String.Empty' String.Empty' imp2' new AtomGroup(AtomGroup.LogicalOperator.And' atom2_2' atom3));
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,QueryBaseIndexTooHigh,The following statement contains a magic number: qb.Get(2);
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,QueryBase,The following statement contains a magic number: Assert.AreEqual(2' qb.Count' "(2) QueriesCount");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,QueryBase,The following statement contains a magic number: Assert.AreEqual(2' qb.Count' "(4) QueriesCount");
Magic Number,NxBRE.Test.InferenceEngine,TestCore,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestCore.cs,FactResolve,The following statement contains a magic number: Fact fact2bis = new Fact("spending"' new Individual("Peter Miller")' new Individual(35000));
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,QueryAndSupport,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "Query A and B and C: Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,QueryVarLessSupport,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "One Atom Var-less: Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,QueryVarLessSupport,The following statement contains a magic number: Assert.AreEqual(6' qrs.Count' "Two Atoms Var-less: Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,QueryVarLessSupport,The following statement contains a magic number: Assert.AreEqual(6' qrs.Count' "Two Atoms: Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ImplicationVarLessSupport,The following statement contains a magic number: Assert.AreEqual(3' deducted' "Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ImplicationLogicalSupport,The following statement contains a magic number: Assert.AreEqual(3' deducted' "(2) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,PrioritySupport,The following statement contains a magic number: Assert.AreEqual(3' deducted' "Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,PreconditionSupport,The following statement contains a magic number: Assert.AreEqual(2' deducted' "(2) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,PreconditionSupport,The following statement contains a magic number: Assert.AreEqual(2' deducted' "(3) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,PreconditionSupport,The following statement contains a magic number: Assert.AreEqual(4' deducted' "(4) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ObjectPredicates,The following statement contains a magic number: Account a1234 = new Account(1234' 25);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ObjectPredicates,The following statement contains a magic number: Account a1234 = new Account(1234' 25);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ObjectPredicates,The following statement contains a magic number: ie.Assert(new Fact("balance"'  							   new Individual(a1234)'  							   new Individual("expectedValue")'  							   new Individual(50)));
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ObjectPredicates,The following statement contains a magic number: Account a9876 = new Account(9876' 50);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ObjectPredicates,The following statement contains a magic number: Account a9876 = new Account(9876' 50);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ObjectPredicates,The following statement contains a magic number: ie.Assert(new Fact("balance"'  							   new Individual(a9876)'  							   new Individual("expectedValue")'  							   new Individual(50)));
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ObjectPredicates,The following statement contains a magic number: Assert.AreEqual(2' deducted' "Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,NxBREOperators,The following statement contains a magic number: Account a50 = new Account(123' 50);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,NxBREOperators,The following statement contains a magic number: Account a50 = new Account(123' 50);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,NxBREOperators,The following statement contains a magic number: Account a100 = new Account(456' 100);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,NxBREOperators,The following statement contains a magic number: Account a100 = new Account(456' 100);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,NxBREOperators,The following statement contains a magic number: Account a200 = new Account(789' 200);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,NxBREOperators,The following statement contains a magic number: Account a200 = new Account(789' 200);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,NxBREOperators,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "Operator gte: Query Size");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,NxBREOperators,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "Operator lte: Query Size");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,NxBREOperators,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "Operator ne: Query Size");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,AdvancedImplicationLogicalSupport,The following statement contains a magic number: Account a50 = new Account(123' 50);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,AdvancedImplicationLogicalSupport,The following statement contains a magic number: Account a50 = new Account(123' 50);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,AdvancedImplicationLogicalSupport,The following statement contains a magic number: Account a100 = new Account(456' 100);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,AdvancedImplicationLogicalSupport,The following statement contains a magic number: Account a100 = new Account(456' 100);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,AdvancedImplicationLogicalSupport,The following statement contains a magic number: Account a200 = new Account(789' 200);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,AdvancedImplicationLogicalSupport,The following statement contains a magic number: Account a200 = new Account(789' 200);
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,AdvancedImplicationLogicalSupport,The following statement contains a magic number: Assert.AreEqual(7' deducted' "Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,CommitIsolatedEmptyMemory,The following statement contains a magic number: Assert.AreEqual(2' ie.FactsCount' "(3) Facts count before WorkingMemoryTypes.IsolatedEmpty");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,CommitIsolatedEmptyMemory,The following statement contains a magic number: Assert.AreEqual(initialFactCount + 3' ie.FactsCount' "(3) Facts count after WorkingMemoryTypes.IsolatedEmpty");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,Gedcom,The following statement contains a magic number: Assert.AreEqual(32' deducted' "(1) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,Gedcom,The following statement contains a magic number: Assert.AreEqual(17' deducted' "(2) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,Gedcom,The following statement contains a magic number: Assert.AreEqual(12' deducted' "(3) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,Gedcom,The following statement contains a magic number: Assert.AreEqual(22' deducted' "(4) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ExpressionAssertion,The following statement contains a magic number: int a = 3;
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ExpressionAssertion,The following statement contains a magic number: int b = 2;
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ExpressionAssertion,The following statement contains a magic number: int result = a+5*b;
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ExpressionModification,The following statement contains a magic number: int periodInMonthsA = 18;
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,ExpressionModification,The following statement contains a magic number: int periodInMonthsB = 36;
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,WrongMultipleFactInDataTables_Bug_1252700,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("ClientNum"'  											 new Individual("D16.0")'  											 new Individual("1")'  											 new Individual(366)))' "Asserted ClientNum '1'");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,WrongMultipleFactInDataTables_Bug_1252700,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("ClientNum"'  											 new Individual("D16.0")'  											 new Individual("2")'  											 new Individual(10000)))' "Asserted ClientNum '2'");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,WrongMultipleFactInDataTables_Bug_1252700,The following statement contains a magic number: Assert.AreEqual(2' modified' "Modified");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SimilarNafMatching,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("naf-probe"'  											 new Individual(123)'  											 new Individual("bar")))' "Asserted naf-probe");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SimilarNafMatching,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("naf-switch"'  											 new Individual(123)'  											 new Individual("pivot")'  											 new Individual("baz")))' "Asserted first naf-switch");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SimilarNafMatching,The following statement contains a magic number: Fact switchToKill = new Fact("naf-switch"'  									 new Individual(123)'  									 new Individual("pivot")'  									 new Individual("foo"));
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,IndividualBasedAtomCombination,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("trigger-atom-combination"'  											 new Individual(123)'  											 new Individual("bar")))' "Asserted first trigger-atom-combination");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,IndividualBasedAtomCombination,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("trigger-atom-combination"'  											 new Individual(456)'  											 new Individual("bar")))' "Asserted second trigger-atom-combination");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,IndividualBasedAtomCombination,The following statement contains a magic number: Assert.AreEqual(2' deducted' "Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SlotSupport,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("success"' new Individual("Bobby")' new Individual(1000)))' "Asserted gold fact");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SlotSupport,The following statement contains a magic number: Assert.AreEqual(2' deducted' "Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SlotSupport,The following statement contains a magic number: Assert.AreEqual(3000' qrs[0][0].GetPredicateValue("amount")' "Correct Sloted Result");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,DataInBodySupport,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("Threshold-Check"' new Individual("PASS")' new Individual(50)))' "Asserted passing fact");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,DataInBodySupport,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("Threshold-Check"' new Individual("FAIL")' new Individual(5)))' "Asserted failing fact");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SlotContributeNamedValues,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("Slot-Threshold-Check"' new Individual("PASS")' new Individual(50)))' "Asserted passing fact");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SlotContributeNamedValues,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("Slot-Threshold-Check"' new Individual("FAIL")' new Individual(5)))' "Asserted failing fact");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SlotContributeNamedValues,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("Slot-Contribution"' new Individual("SUCCESS")' new Individual("PASS")' new Individual(50)))' "Asserted second passing fact");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineCoreFeaturesRuleML09,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineCoreFeaturesRuleML09.cs,SlotContributeNamedValues,The following statement contains a magic number: Assert.AreEqual(2' deducted' "(2) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,AgendaScheduler,The following statement contains a magic number: Assert.AreEqual(2' deducted' "Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,Discount,The following statement contains a magic number: Assert.AreEqual(3' deducted' "(1) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,Discount,The following statement contains a magic number: Assert.AreEqual(6' ie.FactsCount' "(1) Total Facts Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,Discount,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "(1) Query Result Size");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,Discount,The following statement contains a magic number: Assert.AreEqual(3' deducted' "(2) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,Discount,The following statement contains a magic number: Assert.AreEqual(11' ie.FactsCount' "(2) Total Facts Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,Discount,The following statement contains a magic number: Assert.AreEqual(4' qrs.Count' "(2) Query Result Size");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,CommonDiscountVisio2003,The following statement contains a magic number: Assert.AreEqual(3' deducted' "(1) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,CommonDiscountVisio2003,The following statement contains a magic number: Assert.AreEqual(6' ie.FactsCount' "(2) Total Facts Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,CommonDiscountVisio2003,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "(1) Query Result Size");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,CommonDiscountVisio2003,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("Spending"'  		                          new Individual("John Q. Doe")'  		             						  new Individual(2004)'  		             						  new Individual(123.45f)))'  		             		"jqdoeSpending asserted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,CommonDiscountVisio2003,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("Spending"'  		                          new Individual("John Q. Doe")'  		             						  new Individual(2004)'  		             						  new Individual(123.45f)))'  		             		"jqdoeSpending asserted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,CommonDiscountVisio2003,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("Spending"'  					                    new Individual("Jean Dupont")'  			             						new Individual(2004)'  			             						new Individual(3245.25f)))'  		             		"jdupontSpending asserted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,CommonDiscountVisio2003,The following statement contains a magic number: Assert.IsTrue(ie.Assert(new Fact("Spending"'  					                    new Individual("Jean Dupont")'  			             						new Individual(2004)'  			             						new Individual(3245.25f)))'  		             		"jdupontSpending asserted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,CommonDiscountVisio2003,The following statement contains a magic number: Assert.AreEqual(4' deducted' "(2) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,CommonDiscountVisio2003,The following statement contains a magic number: Assert.AreEqual(12' ie.FactsCount' "(2) Total Facts Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,CommonDiscountVisio2003,The following statement contains a magic number: Assert.AreEqual(4' qrs.Count' "(2) Query Result Size");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,CommonDiscountVisio2003,The following statement contains a magic number: Assert.AreEqual(3' qrs.Count' "(3) Query Result Size");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,DiscountVisio2003Pages,The following statement contains a magic number: Assert.AreEqual(2' ie.FactsCount' "(2) Total Facts Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,RuleBaseProperties,The following statement contains a magic number: Assert.AreEqual(3' ie.FactsCount' "Facts Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,RuleBaseProperties,The following statement contains a magic number: Assert.AreEqual(3' ie.ImplicationsCount' "Implications Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,DiscountLabelized,The following statement contains a magic number: Assert.AreEqual(3' deducted' "(1) Deducted' Isolated");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,DiscountLabelized,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "(1) Query Result Size");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,DiscountLabelized,The following statement contains a magic number: Assert.AreEqual(3' deducted' "(1bis) Deducted' Isolated");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,DiscountLabelized,The following statement contains a magic number: Assert.AreEqual(3' deducted' "(2) Deducted' Shared");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,DiscountLabelized,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "(2) Query Result Size");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,DiscountLabelized,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "(3) Query Result Size");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,PerformNafSupport,The following statement contains a magic number: Assert.AreEqual(3' qrs.Count' "(1) Safe Room List: Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,PerformNafSupport,The following statement contains a magic number: Assert.AreEqual(2' deducted' "Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,PerformNafSupport,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "(2) Safe Room List: Count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,PerformCountingImpFunctionRelSupport,The following statement contains a magic number: Assert.AreEqual(3' deducted' "(1) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,PerformCountingImpFunctionRelSupport,The following statement contains a magic number: ie.Assert(new Fact("Score"' new Individual("Maths")' new Individual(88)));
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,PerformCountingImpFunctionRelSupport,The following statement contains a magic number: Assert.AreEqual(5' deducted' "(2) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineMisc,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineMisc.cs,PerformChocolateBoxTwiddling,The following statement contains a magic number: Assert.AreEqual(2' modified' "Modified");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineRuleML09MultiSyntax,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineRuleML09MultiSyntax.cs,PerformLoadTest,The following statement contains a magic number: Assert.AreEqual(2' ie.FactsCount' "Initial facts count");
Magic Number,NxBRE.Test.InferenceEngine,TestEngineRuleML09MultiSyntax,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEngineRuleML09MultiSyntax.cs,PerformLoadTest,The following statement contains a magic number: Assert.AreEqual(2' deducted' "Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestEventContext,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEventContext.cs,TestAllActionsWithContext,The following statement contains a magic number: Assert.AreEqual(2' newFactEventCount);
Magic Number,NxBRE.Test.InferenceEngine,TestEventContext,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestEventContext.cs,TestAllActionsWithoutContext,The following statement contains a magic number: Assert.AreEqual(4' factEventCount);
Magic Number,NxBRE.Test.InferenceEngine,TestFileRegistry,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestFileRegistry.cs,Count,The following statement contains a magic number: Assert.AreEqual(5' registry.Count);
Magic Number,NxBRE.Test.InferenceEngine,TestQueryResultsExporter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestQueryResultsExporter.cs,ExportQueryResult,The following statement contains a magic number: Assert.AreEqual(3' deducted' "(1) Deducted");
Magic Number,NxBRE.Test.InferenceEngine,TestQueryResultsExporter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestQueryResultsExporter.cs,ExportQueryResult,The following statement contains a magic number: Assert.AreEqual(2' qrs.Count' "(1) Query Result Size");
Magic Number,NxBRE.Test.InferenceEngine,TestQueryResultsExporter,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestQueryResultsExporter.cs,ExportQueryResult,The following statement contains a magic number: Assert.AreEqual(2' ie.FactsCount' "(2) Exported query results can be reloaded");
Magic Number,NxBRE.Test.InferenceEngine,TestTypedFacts,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestTypedFacts.cs,LoadTypedFactsRuleML086,The following statement contains a magic number: EnsureFactCorrectlyTyped(new RuleML086NafDatalogAdapter(ruleFilesFolder + "typed-facts-0_86.ruleml"' FileAccess.Read)' 9);
Magic Number,NxBRE.Test.InferenceEngine,TestTypedFacts,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\InferenceEngine\TestTypedFacts.cs,LoadTypedFactsRuleML09,The following statement contains a magic number: EnsureFactCorrectlyTyped(new RuleML09NafDatalogAdapter(ruleFilesFolder + "typed-facts-0_9.ruleml"' FileAccess.Read)' 43);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,NoArgumentExpressions,The following statement contains a magic number: Assert.AreEqual(5d' Compilation.Evaluate("5d")' "Evaluation without expr:");
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,NoArgumentExpressions,The following statement contains a magic number: Assert.AreEqual(10d' Compilation.Evaluate("expr:10d")' "Evaluation with expr:");
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectDictionaryExpressions,The following statement contains a magic number: values.Add("a"' 4d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectDictionaryExpressions,The following statement contains a magic number: Assert.AreEqual(21d' Compilation.Evaluate("5 + System.Math.Pow(2d' {var:a})"' @"\{var:(?<1>[^}]*)\}"' values)' "Evaluation with var:");
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectDictionaryExpressions,The following statement contains a magic number: Assert.AreEqual(31d' Compilation.Evaluate("15 + System.Math.Pow(2d' {$a})"' @"\{\$(?<1>[^}]*)\}"' values)' "Evaluation with $");
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectDictionaryExpressions,The following statement contains a magic number: Assert.AreEqual(21d' Compilation.Evaluate("expr:5 + System.Math.Pow(2d' {var:a})"' @"\{var:(?<1>[^}]*)\}"' values)' "Evaluation with var:");
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectDictionaryExpressions,The following statement contains a magic number: Assert.AreEqual(31d' Compilation.Evaluate("expr:15 + System.Math.Pow(2d' {$a})"' @"\{\$(?<1>[^}]*)\}"' values)' "Evaluation with $");
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,CompiledDictionaryExpressions,The following statement contains a magic number: values.Add("a"' 4d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,CompiledDictionaryExpressions,The following statement contains a magic number: Assert.AreEqual(21d' compiledEvaluator.Run(values));
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,CompiledDictionaryExpressions,The following statement contains a magic number: values.Add("a"' 3d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,CompiledDictionaryExpressions,The following statement contains a magic number: Assert.AreEqual(13d' compiledEvaluator.Run(values));
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MixedDictionaryExpressions,The following statement contains a magic number: values.Add("a"' 4d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MixedDictionaryExpressions,The following statement contains a magic number: values.Add(1' 3d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MixedDictionaryExpressions,The following statement contains a magic number: Assert.AreEqual(64d' Compilation.Evaluate("System.Math.Pow({stringVarName:a}' {intVarName:1})"'  			                                          @"\{(stringVarName:|intVarName:)(?<1>[^}]*)\}"'  			                                          @"\{intVarName:([^}]*)\}"'  			                                          values)'  			                     "Evaluation with String and Int32 arguments");
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MissingArgumentDictionaryExpressions,The following statement contains a magic number: values.Add("b"' 4d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MissingArgumentDictionaryExpressions,The following statement contains a magic number: Assert.AreEqual(21d' Compilation.Evaluate("5 + System.Math.Pow(2d' {var:a})"' @"\{var:(?<1>[^}]*)\}"' values)' "Evaluation with var:");
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MissingArgumentMixedDictionaryExpressions,The following statement contains a magic number: values.Add("a"' 4d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MissingArgumentMixedDictionaryExpressions,The following statement contains a magic number: values.Add(2' 3d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MissingArgumentMixedDictionaryExpressions,The following statement contains a magic number: values.Add(2' 3d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MissingArgumentMixedDictionaryExpressions,The following statement contains a magic number: Assert.AreEqual(64d' Compilation.Evaluate("System.Math.Pow({stringVarName:a}' {intVarName:1})"'  			                                          @"\{(stringVarName:|intVarName:)(?<1>[^}]*)\}"'  			                                          @"\{intVarName:([^}]*)\}"'  			                                          values)'  			                     "Evaluation with String and Int32 arguments");
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,CompileThenChangeTypeError,The following statement contains a magic number: values.Add("a"' 4d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,CompileThenChangeTypeError,The following statement contains a magic number: Assert.AreEqual(21d' compiledEvaluator.Run(values));
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,CompileThenChangeTypeError,The following statement contains a magic number: Assert.AreEqual(21d' compiledEvaluator.Run(values));
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectListExpressions,The following statement contains a magic number: values.Add(5d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectListExpressions,The following statement contains a magic number: values.Add(4d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectListExpressions,The following statement contains a magic number: Assert.AreEqual(21d' Compilation.Evaluate("{var:a} + System.Math.Pow(2d' {var:b})"' @"\{var:(?<1>[^}]*)\}"' variables' values)' "Evaluation with var:");
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectListExpressions,The following statement contains a magic number: values.Add(15d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectListExpressions,The following statement contains a magic number: values.Add(4d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DirectListExpressions,The following statement contains a magic number: Assert.AreEqual(31d' Compilation.Evaluate("expr:{$a} + System.Math.Pow(2d' {$b})"' @"\{\$(?<1>[^}]*)\}"' variables' values)' "Evaluation with $");
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MissingValueDirectListExpressions,The following statement contains a magic number: values.Add(5d);
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,MissingValueDirectListExpressions,The following statement contains a magic number: Assert.AreEqual(21d' Compilation.Evaluate("{var:a} + System.Math.Pow(2d' {var:b})"' @"\{var:(?<1>[^}]*)\}"' variables' values)' "Evaluation with var:");
Magic Number,NxBRE.Test,TestCompilation,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestCompilation.cs,DynamicallyBuiltAssemblyInDomain,The following statement contains a magic number: Assert.AreEqual(5d'	Compilation.Evaluate("5d")' "Evaluation without expr:");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,AreIntersecting,The following statement contains a magic number: a1.Add(3.14);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,AreIntersecting,The following statement contains a magic number: a2.Add(6.28);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,AreIntersecting,The following statement contains a magic number: a3.Add(2);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,AreIntersecting,The following statement contains a magic number: a3.Add(9.42);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(3' Maths.Multiply(3)' "3 * = 3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(3' Maths.Multiply(3)' "3 * = 3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(10' Maths.Multiply(2' 5)' "2 * 5 = 10");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(10' Maths.Multiply(2' 5)' "2 * 5 = 10");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(10' Maths.Multiply(2' 5)' "2 * 5 = 10");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-210' Maths.Multiply(2' 5' -3' 7)' "2 * 5 * -3 * 7 = -210");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-210' Maths.Multiply(2' 5' -3' 7)' "2 * 5 * -3 * 7 = -210");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-210' Maths.Multiply(2' 5' -3' 7)' "2 * 5 * -3 * 7 = -210");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-210' Maths.Multiply(2' 5' -3' 7)' "2 * 5 * -3 * 7 = -210");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-210' Maths.Multiply(2' 5' -3' 7)' "2 * 5 * -3 * 7 = -210");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(2.5' Maths.Multiply(2.5d)'DELTA ' "2.5 * = 2.5");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(2.5' Maths.Multiply(2.5d)'DELTA ' "2.5 * = 2.5");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-8.75d' Maths.Multiply(2.5d' -3.5d)'DELTA ' "2.5 * (-3.5) = -8.75");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-8.75d' Maths.Multiply(2.5d' -3.5d)'DELTA ' "2.5 * (-3.5) = -8.75");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-8.75d' Maths.Multiply(2.5d' -3.5d)'DELTA ' "2.5 * (-3.5) = -8.75");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(37.625d' Maths.Multiply(2.5d' 3.5d' 4.3d)'DELTA ' "2.5 * 3.5 * 4.3 = 37.625");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(37.625d' Maths.Multiply(2.5d' 3.5d' 4.3d)'DELTA ' "2.5 * 3.5 * 4.3 = 37.625");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(37.625d' Maths.Multiply(2.5d' 3.5d' 4.3d)'DELTA ' "2.5 * 3.5 * 4.3 = 37.625");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(37.625d' Maths.Multiply(2.5d' 3.5d' 4.3d)'DELTA ' "2.5 * 3.5 * 4.3 = 37.625");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(3' Maths.Add(3)' "3 + = 3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(3' Maths.Add(3)' "3 + = 3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(7' Maths.Add(2' 5)' "2 + 5 = 7");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(7' Maths.Add(2' 5)' "2 + 5 = 7");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(7' Maths.Add(2' 5)' "2 + 5 = 7");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-3' Maths.Add(2' 5' -3' -7)' "2 + 5 + (-3) + (-7) = -3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-3' Maths.Add(2' 5' -3' -7)' "2 + 5 + (-3) + (-7) = -3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-3' Maths.Add(2' 5' -3' -7)' "2 + 5 + (-3) + (-7) = -3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-3' Maths.Add(2' 5' -3' -7)' "2 + 5 + (-3) + (-7) = -3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-3' Maths.Add(2' 5' -3' -7)' "2 + 5 + (-3) + (-7) = -3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(2.5' Maths.Add(2.5d)'DELTA ' "2.5 + = 2.5");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(2.5' Maths.Add(2.5d)'DELTA ' "2.5 + = 2.5");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-1.0d' Maths.Add(2.5d' -3.5d)'DELTA ' "2.5 + (-3.5) = -1.0");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-1.0d' Maths.Add(2.5d' -3.5d)'DELTA ' "2.5 + (-3.5) = -1.0");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(1.7d' Maths.Add(2.5d' 3.5d' -4.3d)' DELTA' "2.5 + 3.5 + (-4.3) = 1.7");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(1.7d' Maths.Add(2.5d' 3.5d' -4.3d)' DELTA' "2.5 + 3.5 + (-4.3) = 1.7");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(1.7d' Maths.Add(2.5d' 3.5d' -4.3d)' DELTA' "2.5 + 3.5 + (-4.3) = 1.7");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(1.7d' Maths.Add(2.5d' 3.5d' -4.3d)' DELTA' "2.5 + 3.5 + (-4.3) = 1.7");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(3' Maths.Subtract(3)' "3 - = 3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(3' Maths.Subtract(3)' "3 - = 3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-3' Maths.Subtract(2' 5)' "2 - 5 = -3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-3' Maths.Subtract(2' 5)' "2 - 5 = -3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(-3' Maths.Subtract(2' 5)' "2 - 5 = -3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(7' Maths.Subtract(2' 5' -3' -7)' "2 - 5 - (-3) - (-7) = 7");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(7' Maths.Subtract(2' 5' -3' -7)' "2 - 5 - (-3) - (-7) = 7");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(7' Maths.Subtract(2' 5' -3' -7)' "2 - 5 - (-3) - (-7) = 7");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(7' Maths.Subtract(2' 5' -3' -7)' "2 - 5 - (-3) - (-7) = 7");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(7' Maths.Subtract(2' 5' -3' -7)' "2 - 5 - (-3) - (-7) = 7");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(2.5d' Maths.Subtract(2.5d)'DELTA ' "2.5 - = 2.5");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(2.5d' Maths.Subtract(2.5d)'DELTA ' "2.5 - = 2.5");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(6.0d' Maths.Subtract(2.5d' -3.5d)'DELTA ' "2.5 - (-3.5) = 6.0");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(6.0d' Maths.Subtract(2.5d' -3.5d)'DELTA ' "2.5 - (-3.5) = 6.0");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(6.0d' Maths.Subtract(2.5d' -3.5d)'DELTA ' "2.5 - (-3.5) = 6.0");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(3.3d' Maths.Subtract(2.5d' 3.5d' -4.3d)'DELTA ' "2.5 - 3.5 - (-4.3) = 3.3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(3.3d' Maths.Subtract(2.5d' 3.5d' -4.3d)'DELTA ' "2.5 - 3.5 - (-4.3) = 3.3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(3.3d' Maths.Subtract(2.5d' 3.5d' -4.3d)'DELTA ' "2.5 - 3.5 - (-4.3) = 3.3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(3.3d' Maths.Subtract(2.5d' 3.5d' -4.3d)'DELTA ' "2.5 - 3.5 - (-4.3) = 3.3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(3' Maths.Divide(3)' "3 / = 3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(3' Maths.Divide(3)' "3 / = 3");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(4' Maths.Divide(20' 5)' "20 / 5 = 4");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(4' Maths.Divide(20' 5)' "20 / 5 = 4");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(4' Maths.Divide(20' 5)' "20 / 5 = 4");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(1' Maths.Divide(100' 5' -4' -5)' "100 / 5 / (-4) / (-5) = 1");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(1' Maths.Divide(100' 5' -4' -5)' "100 / 5 / (-4) / (-5) = 1");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(1' Maths.Divide(100' 5' -4' -5)' "100 / 5 / (-4) / (-5) = 1");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(1' Maths.Divide(100' 5' -4' -5)' "100 / 5 / (-4) / (-5) = 1");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(2.5d' Maths.Divide(2.5d)'DELTA ' "2.5 / = 2.5");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(2.5d' Maths.Divide(2.5d)'DELTA ' "2.5 / = 2.5");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(.4d' Maths.Divide(2d' 5d)'DELTA ' "2 / 5 = .4");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(.4d' Maths.Divide(2d' 5d)'DELTA ' "2 / 5 = .4");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(.4d' Maths.Divide(2d' 5d)'DELTA ' "2 / 5 = .4");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(.1d' Maths.Divide(2d' 5d' -.4d' -10d)'DELTA ' "2 / 5 / (-.4) / (-10) = .1");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(.1d' Maths.Divide(2d' 5d' -.4d' -10d)'DELTA ' "2 / 5 / (-.4) / (-10) = .1");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(.1d' Maths.Divide(2d' 5d' -.4d' -10d)'DELTA ' "2 / 5 / (-.4) / (-10) = .1");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(.1d' Maths.Divide(2d' 5d' -.4d' -10d)'DELTA ' "2 / 5 / (-.4) / (-10) = .1");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,MathOperators,The following statement contains a magic number: Assert.AreEqual(.1d' Maths.Divide(2d' 5d' -.4d' -10d)'DELTA ' "2 / 5 / (-.4) / (-10) = .1");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,RowSetAccess,The following statement contains a magic number: row.col2=2004;
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,RowSetAccess,The following statement contains a magic number: Assert.AreEqual(2004' DataAccess.GetDataRowColumnValue(row' "col2")' "(2)GetDataRowColumnValue");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,RowSetAccess,The following statement contains a magic number: DataAccess.SetDataRowColumnValue(row' "col2"' 1969);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,RowSetAccess,The following statement contains a magic number: Assert.AreEqual(1969' DataAccess.GetDataRowColumnValue(row' "col2")' "(4)GetDataRowColumnValue");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,CastValue,The following statement contains a magic number: Assert.AreEqual(123' Reflection.CastValue("123"' typeof(byte))' "string to byte");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,CastValue,The following statement contains a magic number: Assert.AreEqual("987"' Reflection.CastValue(987' typeof(string))' "int to string");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,CastToStrongTypeUnchanged,The following statement contains a magic number: object o1 = 25;
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,CastToStrongTypeUnchanged,The following statement contains a magic number: object o2 = 75;
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,CastToStrongTypeUnchanged,The following statement contains a magic number: Assert.AreEqual(o1' 25' "(1) o1 value");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,CastToStrongTypeUnchanged,The following statement contains a magic number: Assert.AreEqual(o2' 75' "(1) o2 value");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,CastToStrongTypeChanged,The following statement contains a magic number: object o2 = 75;
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,CastToStrongTypeChanged,The following statement contains a magic number: Assert.AreEqual(o1' 25' "(1) o1 value");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,CastToStrongTypeChanged,The following statement contains a magic number: Assert.AreEqual(o2' 75' "(1) o2 value");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,CastToStrongTypeChanged,The following statement contains a magic number: Assert.AreEqual(o2' -6.55d' "(2) o2 value");
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalNoNullValues,The following statement contains a magic number: object[] args = new object[]{"foo"' 1' 2' 3};
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalNoNullValues,The following statement contains a magic number: object[] args = new object[]{"foo"' 1' 2' 3};
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalNoNullValues,The following statement contains a magic number: Assert.AreEqual(2' result.Length);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalNoNullValues,The following statement contains a magic number: Assert.AreEqual(3' ((int[])result[1]).Length);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithMiddleNullValue,The following statement contains a magic number: object[] args = new object[]{"foo"' null' 1' 2' 3};
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithMiddleNullValue,The following statement contains a magic number: object[] args = new object[]{"foo"' null' 1' 2' 3};
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithMiddleNullValue,The following statement contains a magic number: Assert.AreEqual(3' result.Length);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithMiddleNullValue,The following statement contains a magic number: Assert.IsTrue(result[2] is int[]);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithMiddleNullValue,The following statement contains a magic number: Assert.AreEqual(3' ((int[])result[2]).Length);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithMiddleNullValue,The following statement contains a magic number: Assert.AreEqual(3' ((int[])result[2]).Length);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithBeginNullValue,The following statement contains a magic number: object[] args = new object[]{null' "foo"' 1' 2' 3};
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithBeginNullValue,The following statement contains a magic number: object[] args = new object[]{null' "foo"' 1' 2' 3};
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithBeginNullValue,The following statement contains a magic number: Assert.AreEqual(3' result.Length);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithBeginNullValue,The following statement contains a magic number: Assert.IsTrue(result[2] is int[]);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithBeginNullValue,The following statement contains a magic number: Assert.AreEqual(3' ((int[])result[2]).Length);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithBeginNullValue,The following statement contains a magic number: Assert.AreEqual(3' ((int[])result[2]).Length);
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithEndNullValue,The following statement contains a magic number: object[] args = new object[]{"foo"' 1' 2' 3' null};
Magic Number,NxBRE.Test,TestUtil,D:\research\architectureSmells\repos\ddossot_NxBRE\NxBRE3\Test\TestUtil.cs,GroupFinalWithEndNullValue,The following statement contains a magic number: object[] args = new object[]{"foo"' 1' 2' 3' null};
