Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PlainElastic.Net,JsonBeautifier,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Utils\JsonBeautifier.cs,Beautify,Cyclomatic complexity of the method is 15
Complex Method,PlainElastic.Net.Utils,StringExtensions,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Utils\StringExtensions.cs,ToEscapedJson,Cyclomatic complexity of the method is 15
Long Parameter List,PlainElastic.Net,BulkBuilder,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Bulk\BulkBuilder.cs,Index,The method has 6 parameters. Parameters: data' index' type' id' options' customOptions
Long Parameter List,PlainElastic.Net,BulkBuilder,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Bulk\BulkBuilder.cs,Create,The method has 6 parameters. Parameters: data' index' type' id' options' customOptions
Long Parameter List,PlainElastic.Net,BulkBuilder,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Bulk\BulkBuilder.cs,Delete,The method has 5 parameters. Parameters: id' index' type' options' customOptions
Long Parameter List,PlainElastic.Net,BulkBuilder,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Bulk\BulkBuilder.cs,BuildOperationParameters,The method has 5 parameters. Parameters: index' type' id' optionsJson' customOptions
Long Parameter List,PlainElastic.Net.Queries,Sort<T>,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Queries\Sort.cs,GeoDistance,The method has 5 parameters. Parameters: field' lat' lon' unit' order
Long Parameter List,PlainElastic.Net.Queries,Sort<T>,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Queries\Sort.cs,GeoDistance,The method has 5 parameters. Parameters: field' lat' lon' unit' order
Long Identifier,PlainElastic.Net.Serialization,RecoveryIndexStats,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Serialization\Results\StatusResult.cs,,The length of the parameter expected_recovered_size_in_bytes is 32.
Long Statement,PlainElastic.Net.Queries,TermsAggregation<T>,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Queries\Aggregations\TermsAggregation.cs,Include,The length of the statement  "			RegisterJsonPart("'include': {{ 'pattern': {0}' 'flags': {1} }}"' includeTerm.Quotate()' regexFlags.AsString().Quotate()); " is 122.
Long Statement,PlainElastic.Net.Queries,TermsAggregation<T>,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Queries\Aggregations\TermsAggregation.cs,Exclude,The length of the statement  "			RegisterJsonPart("'exclude': {{ 'pattern': {0}' 'flags': {1} }}"' excludeTerm.Quotate()' regexFlags.AsString().Quotate()); " is 122.
Long Statement,PlainElastic.Net.Queries,RegExpFilter<T>,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Queries\Filters\RegExpFilter.cs,Value,The length of the statement  "                RegisterJsonPart("{0}: {{ 'value': {1}' 'flags': {2} }}"' RegisteredField' value.Quotate()' flags.AsString().Quotate()); " is 120.
Long Statement,PlainElastic.Net.Queries,Sort<T>,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Queries\Sort.cs,Script,The length of the statement  "            RegisterJsonPart("{{ '_script': {{ 'script': {0}''type': {1}''params': {2}''order': {3} }} }}"' script.Quotate()' type.Quotate()' @params' order.AsString().Quotate()); " is 167.
Complex Conditional,PlainElastic.Net.Queries,QueryBase<TPart>,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Queries\QueryBase.cs,ToJson,The conditional expression  "!ForceJsonBuild() &&                   (jsonParts.Count == 0 || (!HasCustomPatrs && !HasRequiredParts()))"  is complex.
Complex Conditional,PlainElastic.Net.Utils,StringExtensions,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Utils\StringExtensions.cs,ToEscapedJson,The conditional expression  "symbol >= 32 && symbol < 128 && symbol != '\\' && symbol != '"'"  is complex.
Magic Number,PlainElastic.Net.Serialization,DateHistogram,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Serialization\Results\FacetResult.cs,UtcTime,The following statement contains a magic number: var epoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,PlainElastic.Net.Utils,StringExtensions,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Utils\StringExtensions.cs,JoinInBatches,The following statement contains a magic number: StringBuilder batch = new StringBuilder(batchSize * 30);
Magic Number,PlainElastic.Net.Utils,StringExtensions,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Utils\StringExtensions.cs,ToEscapedJson,The following statement contains a magic number: var builder = new StringBuilder(length + 10);
Magic Number,PlainElastic.Net.Utils,StringExtensions,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Utils\StringExtensions.cs,ToEscapedJson,The following statement contains a magic number: symbol >= 32 && symbol < 128 && symbol != '\\' && symbol != '"'
Magic Number,PlainElastic.Net.Utils,StringExtensions,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Utils\StringExtensions.cs,ToEscapedJson,The following statement contains a magic number: symbol >= 32 && symbol < 128 && symbol != '\\' && symbol != '"'
Magic Number,PlainElastic.Net.Utils,StringExtensions,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Utils\StringExtensions.cs,CharToUniHex,The following statement contains a magic number: hex[5 - i] = (char)('0' + digit);
Magic Number,PlainElastic.Net.Utils,StringExtensions,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Utils\StringExtensions.cs,CharToUniHex,The following statement contains a magic number: digit < 10
Magic Number,PlainElastic.Net.Utils,StringExtensions,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Utils\StringExtensions.cs,CharToUniHex,The following statement contains a magic number: intSymbol >>= 4;
Magic Number,PlainElastic.Net.Utils,StringExtensions,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Utils\StringExtensions.cs,CharToUniHex,The following statement contains a magic number: i < 2
Missing Default,PlainElastic.Net.Queries,RewriteExtensions,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Queries\Enums.cs,GetRewriteValue,The following switch statement is missing a default case: switch (rewrite)              {                  case Rewrite.top_terms_boost_n:                      return "top_terms_boost_" + n;                    case Rewrite.top_terms_n:                      return "top_terms_" + n;              }
Missing Default,PlainElastic.Net.Mappings,ElasticCoreTypeMapper,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Builders\Mappings\Core\ElasticCoreTypeMapper.cs,GetElasticNumericType,The following switch statement is missing a default case: switch (typeCode)              {                  case TypeCode.Byte:                  case TypeCode.SByte:                  case TypeCode.Boolean:                      return "byte";                    case TypeCode.UInt16:                  case TypeCode.Int16:                      return "short";                    case TypeCode.UInt32:                  case TypeCode.Int32:                      return "integer";                    case TypeCode.UInt64:                  case TypeCode.Int64:                      return "long";                    case TypeCode.Single:                      return "float";                    case TypeCode.Double:                      return "double";              }
Missing Default,PlainElastic.Net.Utils,StringExtensions,D:\research\architectureSmells\repos\Yegoroff_PlainElastic.Net\src\PlainElastic.Net\Utils\StringExtensions.cs,HasAnyJsonEscapeChars,The following switch statement is missing a default case: switch (symbol)                  {                      case '\n':                      case '\r':                      case '\t':                      case '\\':                      case '\f':                      case '\b':                      case '"':                      case '\u0085':                      case '\u2028':                      case '\u2029':                          return true;                  }
