Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Blaze.SoundForge.Model,CircuitInstrument,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\CircuitInstrument.cs,Read,Cyclomatic complexity of the method is 8
Long Parameter List,Blaze.SoundForge,SoundComponentDefinition,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\SoundComponentDefinition.cs,CreateDefinition,The method has 5 parameters.
Long Statement,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The length of the statement  "		inputs [ii].Location = new Point (location.X - sConnectorOffset' location.Y + (ii + 1) * (sLabelSize + sLabelPadding) + 2 * connectSize); " is 137.
Long Statement,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The length of the statement  "		outputs [ii].Location = new Point (location.X + size.Width + sConnectorOffset - 2 * connectSize' location.Y + (ii + 1) * (sLabelSize + sLabelPadding) + 2 * connectSize); " is 169.
Long Statement,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,Draw,The length of the statement  "		g.DrawString (inputs [ii]' CircuitElementInputLabel' ForegroundBrush' new Point (location.X + sLabelPadding' location.Y + (ii + 1) * (sLabelSize + sLabelPadding))); " is 164.
Long Statement,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,Draw,The length of the statement  "		g.DrawString (outputs [ii]' CircuitElementInputLabel' ForegroundBrush' new Point (location.X + size.Width - mOutputLabelSizes [ii] - sLabelPadding' location.Y + (ii + 1) * (sLabelSize + sLabelPadding))); " is 203.
Long Statement,Blaze.SoundForge,MainWindow,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\MainWindow.xaml.cs,ToolBox_MouseMove,The length of the statement  "			MessageBox.Show (string.Format ("Error {0}.\n Details: {1}"' x.Message' x)' "Woops"' MessageBoxButton.OK' MessageBoxImage.Error); " is 129.
Virtual Method Call from Constructor,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,CircuitElement,The constructor "CircuitElement" calls a virtual method "Layout".
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,Layout,The following statement contains a magic number: Size = new Size (2 * maxWidth + sCenterPadding' ((maxHeight + sLabelPadding) * lineCount) + lineCount);  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: for (var ii = 0; ii < inputs.Length; ++ii) {  	inputs [ii].Location = new Point (location.X - sConnectorOffset' location.Y + (ii + 1) * (sLabelSize + sLabelPadding) + 2 * connectSize);  	inputs [ii].Size = new Size (connectSize * 2' connectSize * 2);  }  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: for (var ii = 0; ii < inputs.Length; ++ii) {  	inputs [ii].Location = new Point (location.X - sConnectorOffset' location.Y + (ii + 1) * (sLabelSize + sLabelPadding) + 2 * connectSize);  	inputs [ii].Size = new Size (connectSize * 2' connectSize * 2);  }  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: for (var ii = 0; ii < inputs.Length; ++ii) {  	inputs [ii].Location = new Point (location.X - sConnectorOffset' location.Y + (ii + 1) * (sLabelSize + sLabelPadding) + 2 * connectSize);  	inputs [ii].Size = new Size (connectSize * 2' connectSize * 2);  }  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: inputs [ii].Location = new Point (location.X - sConnectorOffset' location.Y + (ii + 1) * (sLabelSize + sLabelPadding) + 2 * connectSize);  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: inputs [ii].Size = new Size (connectSize * 2' connectSize * 2);  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: inputs [ii].Size = new Size (connectSize * 2' connectSize * 2);  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: for (var ii = 0; ii < outputs.Length; ++ii) {  	outputs [ii].Location = new Point (location.X + size.Width + sConnectorOffset - 2 * connectSize' location.Y + (ii + 1) * (sLabelSize + sLabelPadding) + 2 * connectSize);  	outputs [ii].Size = new Size (connectSize * 2' connectSize * 2);  }  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: for (var ii = 0; ii < outputs.Length; ++ii) {  	outputs [ii].Location = new Point (location.X + size.Width + sConnectorOffset - 2 * connectSize' location.Y + (ii + 1) * (sLabelSize + sLabelPadding) + 2 * connectSize);  	outputs [ii].Size = new Size (connectSize * 2' connectSize * 2);  }  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: for (var ii = 0; ii < outputs.Length; ++ii) {  	outputs [ii].Location = new Point (location.X + size.Width + sConnectorOffset - 2 * connectSize' location.Y + (ii + 1) * (sLabelSize + sLabelPadding) + 2 * connectSize);  	outputs [ii].Size = new Size (connectSize * 2' connectSize * 2);  }  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: for (var ii = 0; ii < outputs.Length; ++ii) {  	outputs [ii].Location = new Point (location.X + size.Width + sConnectorOffset - 2 * connectSize' location.Y + (ii + 1) * (sLabelSize + sLabelPadding) + 2 * connectSize);  	outputs [ii].Size = new Size (connectSize * 2' connectSize * 2);  }  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: outputs [ii].Location = new Point (location.X + size.Width + sConnectorOffset - 2 * connectSize' location.Y + (ii + 1) * (sLabelSize + sLabelPadding) + 2 * connectSize);  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: outputs [ii].Location = new Point (location.X + size.Width + sConnectorOffset - 2 * connectSize' location.Y + (ii + 1) * (sLabelSize + sLabelPadding) + 2 * connectSize);  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: outputs [ii].Size = new Size (connectSize * 2' connectSize * 2);  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,UpdateConnectorsPosition,The following statement contains a magic number: outputs [ii].Size = new Size (connectSize * 2' connectSize * 2);  
Magic Number,Blaze.SoundForge.Diagram,CircuitElement,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Diagram\CircuitElement.cs,Draw,The following statement contains a magic number: g.DrawString ("âœ—"' CircuitElementInputLabel' ForegroundBrush' new Point (location.X + size.Width - 13' location.Y));  
Magic Number,Blaze.SoundForge.Model,CircuitInstrument,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\CircuitInstrument.cs,Initialize,The following statement contains a magic number: foreach (var comp in Circuit.Components) {  	comp.SetSamplesPerComputation (64);  }  
Magic Number,Blaze.SoundForge.Model,CircuitInstrument,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\CircuitInstrument.cs,Initialize,The following statement contains a magic number: comp.SetSamplesPerComputation (64);  
Magic Number,Blaze.SoundForge.Model,SinusoidComponent,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\SinusoidComponent.cs,ComputeIntenal,The following statement contains a magic number: for (var ii = 0; ii < SamplesPerComputation; ++ii) {  	var sampleRate = (int)Inputs [0] [ii];  	var sampleNumber = (int)Inputs [1] [ii];  	var freq = (float)Inputs [2] [ii];  	Outputs [0] [ii] = (float)(Math.Sin ((2 * Math.PI * sampleNumber * freq) / sampleRate));  }  
Magic Number,Blaze.SoundForge.Model,SinusoidComponent,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\SinusoidComponent.cs,ComputeIntenal,The following statement contains a magic number: for (var ii = 0; ii < SamplesPerComputation; ++ii) {  	var sampleRate = (int)Inputs [0] [ii];  	var sampleNumber = (int)Inputs [1] [ii];  	var freq = (float)Inputs [2] [ii];  	Outputs [0] [ii] = (float)(Math.Sin ((2 * Math.PI * sampleNumber * freq) / sampleRate));  }  
Magic Number,Blaze.SoundForge.Model,SinusoidComponent,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\SinusoidComponent.cs,ComputeIntenal,The following statement contains a magic number: Outputs [0] [ii] = (float)(Math.Sin ((2 * Math.PI * sampleNumber * freq) / sampleRate));  
Magic Number,Blaze.SoundForge.Model,SoundCircuit,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\SoundCircuit.cs,CycleSetup,The following statement contains a magic number: for (var ii = 0; ii < samplesPerComputation; ++ii) {  	InputComponent.Outputs [0] [ii] = sampleRate;  	InputComponent.Outputs [1] [ii] = sample + ii;  	InputComponent.Outputs [2] [ii] = relativeSample + ii;  	InputComponent.Outputs [3] [ii] = (double)(sample + ii) / (double)sampleRate;  	InputComponent.Outputs [4] [ii] = (double)(relativeSample + ii) / (double)sampleRate;  	InputComponent.Outputs [5] [ii] = note.mFreq;  }  
Magic Number,Blaze.SoundForge.Model,SoundCircuit,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\SoundCircuit.cs,CycleSetup,The following statement contains a magic number: for (var ii = 0; ii < samplesPerComputation; ++ii) {  	InputComponent.Outputs [0] [ii] = sampleRate;  	InputComponent.Outputs [1] [ii] = sample + ii;  	InputComponent.Outputs [2] [ii] = relativeSample + ii;  	InputComponent.Outputs [3] [ii] = (double)(sample + ii) / (double)sampleRate;  	InputComponent.Outputs [4] [ii] = (double)(relativeSample + ii) / (double)sampleRate;  	InputComponent.Outputs [5] [ii] = note.mFreq;  }  
Magic Number,Blaze.SoundForge.Model,SoundCircuit,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\SoundCircuit.cs,CycleSetup,The following statement contains a magic number: for (var ii = 0; ii < samplesPerComputation; ++ii) {  	InputComponent.Outputs [0] [ii] = sampleRate;  	InputComponent.Outputs [1] [ii] = sample + ii;  	InputComponent.Outputs [2] [ii] = relativeSample + ii;  	InputComponent.Outputs [3] [ii] = (double)(sample + ii) / (double)sampleRate;  	InputComponent.Outputs [4] [ii] = (double)(relativeSample + ii) / (double)sampleRate;  	InputComponent.Outputs [5] [ii] = note.mFreq;  }  
Magic Number,Blaze.SoundForge.Model,SoundCircuit,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\SoundCircuit.cs,CycleSetup,The following statement contains a magic number: for (var ii = 0; ii < samplesPerComputation; ++ii) {  	InputComponent.Outputs [0] [ii] = sampleRate;  	InputComponent.Outputs [1] [ii] = sample + ii;  	InputComponent.Outputs [2] [ii] = relativeSample + ii;  	InputComponent.Outputs [3] [ii] = (double)(sample + ii) / (double)sampleRate;  	InputComponent.Outputs [4] [ii] = (double)(relativeSample + ii) / (double)sampleRate;  	InputComponent.Outputs [5] [ii] = note.mFreq;  }  
Magic Number,Blaze.SoundForge.Model,SoundCircuit,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\SoundCircuit.cs,CycleSetup,The following statement contains a magic number: InputComponent.Outputs [2] [ii] = relativeSample + ii;  
Magic Number,Blaze.SoundForge.Model,SoundCircuit,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\SoundCircuit.cs,CycleSetup,The following statement contains a magic number: InputComponent.Outputs [3] [ii] = (double)(sample + ii) / (double)sampleRate;  
Magic Number,Blaze.SoundForge.Model,SoundCircuit,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\SoundCircuit.cs,CycleSetup,The following statement contains a magic number: InputComponent.Outputs [4] [ii] = (double)(relativeSample + ii) / (double)sampleRate;  
Magic Number,Blaze.SoundForge.Model,SoundCircuit,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\SoundCircuit.cs,CycleSetup,The following statement contains a magic number: InputComponent.Outputs [5] [ii] = note.mFreq;  
Magic Number,Blaze.SoundForge.Model,WaveComponent,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\Model\WaveComponent.cs,ComputeIntenal,The following statement contains a magic number: for (var ii = 0; ii < SamplesPerComputation; ++ii) {  	var sampleRate = (int)Inputs [0] [ii];  	var sampleNumber = (int)Inputs [1] [ii];  	var freq = (float)Inputs [2] [ii];  	Outputs [0] [ii] = mWave [sampleNumber' freq * mWave.Resolution / sampleRate];  }  
Magic Number,Blaze.SoundForge,SoundComponentDefinition,C:\repos\GKBelmonte_SoundPlayer\SoundFurnace\SoundComponentDefinition.cs,SoundComponentDefinition,The following statement contains a magic number: StandardDefinitions = new Dictionary<string' SoundComponentDefinition> (10);  
