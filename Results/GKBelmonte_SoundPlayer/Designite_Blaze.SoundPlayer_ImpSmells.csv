Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,FrequencyToNote,Cyclomatic complexity of the method is 8
Complex Method,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,KeyNumberToNoteLetter,Cyclomatic complexity of the method is 13
Complex Method,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,Cyclomatic complexity of the method is 13
Complex Method,Blaze.SoundPlayer.WaveProviders,InstrumentProvider,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\InstrumentProvider.cs,Read,Cyclomatic complexity of the method is 10
Long Statement,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,FrequencyToNote,The length of the statement  "	// Console.WriteLine(string.Format("The freq {0} is approx {1} < %{0}% < {2}. Me thinks this is {3}{4}"' freq' approx' next' letter' CeeFam)); " is 142.
Long Statement,Blaze.SoundPlayer.Sounds,SimpleSound,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Sounds\SimpleSound.cs,Get,The length of the statement  "		return (mEnvelope (sampleRate' sample) * ((float)((short)(100 * mWave (sampleRate' (int)(sample + mPhaseMod (sampleRate' sample))' (freq + mFreqMod (sampleRate' sample)))))) / 100); " is 181.
Long Statement,Blaze.SoundPlayer.Sounds,SimpleSound,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Sounds\SimpleSound.cs,Get,The length of the statement  "		return (mEnvelope (sampleRate' sample) * mWave (sampleRate' (int)(sample + mPhaseMod (sampleRate' sample))' (freq + mFreqMod (sampleRate' sample)))); " is 149.
Long Statement,Blaze.SoundPlayer.WaveProviders,AdditiveSynthesisWaveProvider,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\AdditiveSynthesisWaveProvider.cs,Read,The length of the statement  "			res += ((mAmps != null ? mAmps [ii] : AmplitudeMultiplier) * mWaves [ii].Get (sampleRate' sample' mFreq != null ? mFreq [ii] : Frequency)); " is 139.
Virtual Method Call from Constructor,Blaze.SoundPlayer.WaveProviders,FixedDataWaveProvider,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\FixedDataWaveProvider.cs,FixedDataWaveProvider,The constructor "FixedDataWaveProvider" calls a virtual method "Initialize".
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,KeyNumberToNoteLetter,The following statement contains a magic number: switch (letterModifier) {  case 0:  	return "C";  case 1:  	return "C#";  case 2:  	return "D";  case 3:  	return "D#";  case 4:  	return "E";  case 5:  	return "F";  case 6:  	return "F#";  case 7:  	return "G";  case 8:  	return "G#";  case 9:  	return "A";  case 10:  	return "A#";  case 11:  	return "B";  default:  	return "?";  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,KeyNumberToNoteLetter,The following statement contains a magic number: switch (letterModifier) {  case 0:  	return "C";  case 1:  	return "C#";  case 2:  	return "D";  case 3:  	return "D#";  case 4:  	return "E";  case 5:  	return "F";  case 6:  	return "F#";  case 7:  	return "G";  case 8:  	return "G#";  case 9:  	return "A";  case 10:  	return "A#";  case 11:  	return "B";  default:  	return "?";  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,KeyNumberToNoteLetter,The following statement contains a magic number: switch (letterModifier) {  case 0:  	return "C";  case 1:  	return "C#";  case 2:  	return "D";  case 3:  	return "D#";  case 4:  	return "E";  case 5:  	return "F";  case 6:  	return "F#";  case 7:  	return "G";  case 8:  	return "G#";  case 9:  	return "A";  case 10:  	return "A#";  case 11:  	return "B";  default:  	return "?";  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,KeyNumberToNoteLetter,The following statement contains a magic number: switch (letterModifier) {  case 0:  	return "C";  case 1:  	return "C#";  case 2:  	return "D";  case 3:  	return "D#";  case 4:  	return "E";  case 5:  	return "F";  case 6:  	return "F#";  case 7:  	return "G";  case 8:  	return "G#";  case 9:  	return "A";  case 10:  	return "A#";  case 11:  	return "B";  default:  	return "?";  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,KeyNumberToNoteLetter,The following statement contains a magic number: switch (letterModifier) {  case 0:  	return "C";  case 1:  	return "C#";  case 2:  	return "D";  case 3:  	return "D#";  case 4:  	return "E";  case 5:  	return "F";  case 6:  	return "F#";  case 7:  	return "G";  case 8:  	return "G#";  case 9:  	return "A";  case 10:  	return "A#";  case 11:  	return "B";  default:  	return "?";  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,KeyNumberToNoteLetter,The following statement contains a magic number: switch (letterModifier) {  case 0:  	return "C";  case 1:  	return "C#";  case 2:  	return "D";  case 3:  	return "D#";  case 4:  	return "E";  case 5:  	return "F";  case 6:  	return "F#";  case 7:  	return "G";  case 8:  	return "G#";  case 9:  	return "A";  case 10:  	return "A#";  case 11:  	return "B";  default:  	return "?";  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,KeyNumberToNoteLetter,The following statement contains a magic number: switch (letterModifier) {  case 0:  	return "C";  case 1:  	return "C#";  case 2:  	return "D";  case 3:  	return "D#";  case 4:  	return "E";  case 5:  	return "F";  case 6:  	return "F#";  case 7:  	return "G";  case 8:  	return "G#";  case 9:  	return "A";  case 10:  	return "A#";  case 11:  	return "B";  default:  	return "?";  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,KeyNumberToNoteLetter,The following statement contains a magic number: switch (letterModifier) {  case 0:  	return "C";  case 1:  	return "C#";  case 2:  	return "D";  case 3:  	return "D#";  case 4:  	return "E";  case 5:  	return "F";  case 6:  	return "F#";  case 7:  	return "G";  case 8:  	return "G#";  case 9:  	return "A";  case 10:  	return "A#";  case 11:  	return "B";  default:  	return "?";  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,KeyNumberToNoteLetter,The following statement contains a magic number: switch (letterModifier) {  case 0:  	return "C";  case 1:  	return "C#";  case 2:  	return "D";  case 3:  	return "D#";  case 4:  	return "E";  case 5:  	return "F";  case 6:  	return "F#";  case 7:  	return "G";  case 8:  	return "G#";  case 9:  	return "A";  case 10:  	return "A#";  case 11:  	return "B";  default:  	return "?";  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,KeyNumberToNoteLetter,The following statement contains a magic number: switch (letterModifier) {  case 0:  	return "C";  case 1:  	return "C#";  case 2:  	return "D";  case 3:  	return "D#";  case 4:  	return "E";  case 5:  	return "F";  case 6:  	return "F#";  case 7:  	return "G";  case 8:  	return "G#";  case 9:  	return "A";  case 10:  	return "A#";  case 11:  	return "B";  default:  	return "?";  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: switch (noteLetter) {  case "C":  	return 0;  case "C#":  	return 1;  case "D":  	return 2;  case "D#":  	return 3;  case "E":  	return 4;  case "F":  	return 5;  case "F#":  	return 6;  case "G":  	return 7;  case "G#":  	return 8;  case "A":  	return 9;  case "A#":  	return 10;  case "B":  	return 11;  default:  	return -1;  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: switch (noteLetter) {  case "C":  	return 0;  case "C#":  	return 1;  case "D":  	return 2;  case "D#":  	return 3;  case "E":  	return 4;  case "F":  	return 5;  case "F#":  	return 6;  case "G":  	return 7;  case "G#":  	return 8;  case "A":  	return 9;  case "A#":  	return 10;  case "B":  	return 11;  default:  	return -1;  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: switch (noteLetter) {  case "C":  	return 0;  case "C#":  	return 1;  case "D":  	return 2;  case "D#":  	return 3;  case "E":  	return 4;  case "F":  	return 5;  case "F#":  	return 6;  case "G":  	return 7;  case "G#":  	return 8;  case "A":  	return 9;  case "A#":  	return 10;  case "B":  	return 11;  default:  	return -1;  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: switch (noteLetter) {  case "C":  	return 0;  case "C#":  	return 1;  case "D":  	return 2;  case "D#":  	return 3;  case "E":  	return 4;  case "F":  	return 5;  case "F#":  	return 6;  case "G":  	return 7;  case "G#":  	return 8;  case "A":  	return 9;  case "A#":  	return 10;  case "B":  	return 11;  default:  	return -1;  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: switch (noteLetter) {  case "C":  	return 0;  case "C#":  	return 1;  case "D":  	return 2;  case "D#":  	return 3;  case "E":  	return 4;  case "F":  	return 5;  case "F#":  	return 6;  case "G":  	return 7;  case "G#":  	return 8;  case "A":  	return 9;  case "A#":  	return 10;  case "B":  	return 11;  default:  	return -1;  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: switch (noteLetter) {  case "C":  	return 0;  case "C#":  	return 1;  case "D":  	return 2;  case "D#":  	return 3;  case "E":  	return 4;  case "F":  	return 5;  case "F#":  	return 6;  case "G":  	return 7;  case "G#":  	return 8;  case "A":  	return 9;  case "A#":  	return 10;  case "B":  	return 11;  default:  	return -1;  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: switch (noteLetter) {  case "C":  	return 0;  case "C#":  	return 1;  case "D":  	return 2;  case "D#":  	return 3;  case "E":  	return 4;  case "F":  	return 5;  case "F#":  	return 6;  case "G":  	return 7;  case "G#":  	return 8;  case "A":  	return 9;  case "A#":  	return 10;  case "B":  	return 11;  default:  	return -1;  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: switch (noteLetter) {  case "C":  	return 0;  case "C#":  	return 1;  case "D":  	return 2;  case "D#":  	return 3;  case "E":  	return 4;  case "F":  	return 5;  case "F#":  	return 6;  case "G":  	return 7;  case "G#":  	return 8;  case "A":  	return 9;  case "A#":  	return 10;  case "B":  	return 11;  default:  	return -1;  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: switch (noteLetter) {  case "C":  	return 0;  case "C#":  	return 1;  case "D":  	return 2;  case "D#":  	return 3;  case "E":  	return 4;  case "F":  	return 5;  case "F#":  	return 6;  case "G":  	return 7;  case "G#":  	return 8;  case "A":  	return 9;  case "A#":  	return 10;  case "B":  	return 11;  default:  	return -1;  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: switch (noteLetter) {  case "C":  	return 0;  case "C#":  	return 1;  case "D":  	return 2;  case "D#":  	return 3;  case "E":  	return 4;  case "F":  	return 5;  case "F#":  	return 6;  case "G":  	return 7;  case "G#":  	return 8;  case "A":  	return 9;  case "A#":  	return 10;  case "B":  	return 11;  default:  	return -1;  }  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: return 2;  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: return 3;  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: return 4;  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: return 5;  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: return 6;  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: return 7;  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: return 8;  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: return 9;  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: return 10;  
Magic Number,Blaze.SoundPlayer,Note,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Note.cs,NoteLetterToKeyNumber,The following statement contains a magic number: return 11;  
Magic Number,Blaze.SoundPlayer,MathExtensions,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\MathExtensions.cs,IntegerPow,The following statement contains a magic number: while (ii < exponent && 2 * ii <= exponent) {  	res = res * res;  	ii = 2 * ii;  }  
Magic Number,Blaze.SoundPlayer,MathExtensions,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\MathExtensions.cs,IntegerPow,The following statement contains a magic number: while (ii < exponent && 2 * ii <= exponent) {  	res = res * res;  	ii = 2 * ii;  }  
Magic Number,Blaze.SoundPlayer,MathExtensions,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\MathExtensions.cs,IntegerPow,The following statement contains a magic number: ii = 2 * ii;  
Magic Number,Blaze.SoundPlayer,NAudioSoundPlayer,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\NAudioSoundPlayer.cs,NAudioSoundPlayer,The following statement contains a magic number: mSampleFrequency = 1024 * 16;  
Magic Number,Blaze.SoundPlayer,NAudioSoundPlayer,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\NAudioSoundPlayer.cs,NAudioSoundPlayer,The following statement contains a magic number: mSampleFrequency = 1024 * 16;  
Magic Number,Blaze.SoundPlayer,NAudioSoundPlayer,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\NAudioSoundPlayer.cs,PlayAsync,The following statement contains a magic number: lock (mWaveLock) {  	mWaveOut = new WaveOut ();  	mWaveOut.DesiredLatency = 25;  	mWaveOut.NumberOfBuffers = 4;  	if (fixedDuration == -1)  		mWaveOut.PlaybackStopped += mWaveOut_PlaybackStopped;  	mWaveOut.Init ((IWaveProvider)wave);  	mWaveOut.Play ();  }  
Magic Number,Blaze.SoundPlayer,NAudioSoundPlayer,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\NAudioSoundPlayer.cs,PlayAsync,The following statement contains a magic number: lock (mWaveLock) {  	mWaveOut = new WaveOut ();  	mWaveOut.DesiredLatency = 25;  	mWaveOut.NumberOfBuffers = 4;  	if (fixedDuration == -1)  		mWaveOut.PlaybackStopped += mWaveOut_PlaybackStopped;  	mWaveOut.Init ((IWaveProvider)wave);  	mWaveOut.Play ();  }  
Magic Number,Blaze.SoundPlayer,NAudioSoundPlayer,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\NAudioSoundPlayer.cs,PlayAsync,The following statement contains a magic number: mWaveOut.DesiredLatency = 25;  
Magic Number,Blaze.SoundPlayer,NAudioSoundPlayer,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\NAudioSoundPlayer.cs,PlayAsync,The following statement contains a magic number: mWaveOut.NumberOfBuffers = 4;  
Magic Number,Blaze.SoundPlayer.Filters,RCLowPass,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Filters\RCLowPass.cs,RCLowPass,The following statement contains a magic number: RC = (float)(1.0 / (2.0 * Math.PI * cutOff));  
Magic Number,Blaze.SoundPlayer.Sounds,SimpleSound,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Sounds\SimpleSound.cs,Get,The following statement contains a magic number: if (Length != -1 && 1000 * sample / sampleRate > Length) {  	DonePlaying = true;  	return 0;  }  
Magic Number,Blaze.SoundPlayer.Sounds,SimpleSound,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Sounds\SimpleSound.cs,Get,The following statement contains a magic number: if (dither)  	return (mEnvelope (sampleRate' sample) * ((float)((short)(100 * mWave (sampleRate' (int)(sample + mPhaseMod (sampleRate' sample))' (freq + mFreqMod (sampleRate' sample)))))) / 100);  else  	return (mEnvelope (sampleRate' sample) * mWave (sampleRate' (int)(sample + mPhaseMod (sampleRate' sample))' (freq + mFreqMod (sampleRate' sample))));  
Magic Number,Blaze.SoundPlayer.Sounds,SimpleSound,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Sounds\SimpleSound.cs,Get,The following statement contains a magic number: if (dither)  	return (mEnvelope (sampleRate' sample) * ((float)((short)(100 * mWave (sampleRate' (int)(sample + mPhaseMod (sampleRate' sample))' (freq + mFreqMod (sampleRate' sample)))))) / 100);  else  	return (mEnvelope (sampleRate' sample) * mWave (sampleRate' (int)(sample + mPhaseMod (sampleRate' sample))' (freq + mFreqMod (sampleRate' sample))));  
Magic Number,Blaze.SoundPlayer.Sounds,SimpleSound,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Sounds\SimpleSound.cs,Get,The following statement contains a magic number: return (mEnvelope (sampleRate' sample) * ((float)((short)(100 * mWave (sampleRate' (int)(sample + mPhaseMod (sampleRate' sample))' (freq + mFreqMod (sampleRate' sample)))))) / 100);  
Magic Number,Blaze.SoundPlayer.Sounds,SimpleSound,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Sounds\SimpleSound.cs,Get,The following statement contains a magic number: return (mEnvelope (sampleRate' sample) * ((float)((short)(100 * mWave (sampleRate' (int)(sample + mPhaseMod (sampleRate' sample))' (freq + mFreqMod (sampleRate' sample)))))) / 100);  
Magic Number,Blaze.SoundPlayer.WaveProviders,AdditiveSynthesisWaveProvider,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\AdditiveSynthesisWaveProvider.cs,AdditiveSynthesisWaveProvider,The following statement contains a magic number: Frequency = 440;  
Magic Number,Blaze.SoundPlayer.WaveProviders,CompositeFixedDataWaveProvider,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\CompositeFixedDataWaveProvider.cs,CompositeFixedDataWaveProvider,The following statement contains a magic number: Frequency = 1000;  
Magic Number,Blaze.SoundPlayer.WaveProviders,CompositeFixedDataWaveProvider,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\CompositeFixedDataWaveProvider.cs,CompositeFixedDataWaveProvider,The following statement contains a magic number: Resolution = 1024 * 4;  
Magic Number,Blaze.SoundPlayer.WaveProviders,CompositeFixedDataWaveProvider,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\CompositeFixedDataWaveProvider.cs,CompositeFixedDataWaveProvider,The following statement contains a magic number: Resolution = 1024 * 4;  
Magic Number,Blaze.SoundPlayer.WaveProviders,FixedDataWaveProvider,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\FixedDataWaveProvider.cs,FixedDataWaveProvider,The following statement contains a magic number: Frequency = 1000;  
Magic Number,Blaze.SoundPlayer.WaveProviders,InstrumentBase,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\InstrumentBase.cs,StepAndOctaveToNumber,The following statement contains a magic number: return octave * 12 + Note.NoteLetterToKeyNumber (step);  
Magic Number,Blaze.SoundPlayer.WaveProviders,WaveProviderCommon,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\WaveProviderCommon.cs,WaveProviderCommon,The following statement contains a magic number: DefaultFrequency = 440;  
Magic Number,Blaze.SoundPlayer.WaveProviders,SineWaveProvider,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\SineWaveProvider.cs,SineWaveProvider,The following statement contains a magic number: Frequency = 1000;  
Magic Number,Blaze.SoundPlayer.WaveProviders,SineWaveProvider,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\SineWaveProvider.cs,Read,The following statement contains a magic number: for (int n = 0; n < sampleCount; n++) {  	buffer [n + offset] = (float)(AmplitudeMultiplier * Math.Sin ((2 * Math.PI * sample * Frequency) / sampleRate));  	sample++;  	if (sample >= sampleRate)  		sample = 0;  }  
Magic Number,Blaze.SoundPlayer.WaveProviders,SineWaveProvider,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\WaveProviders\SineWaveProvider.cs,Read,The following statement contains a magic number: buffer [n + offset] = (float)(AmplitudeMultiplier * Math.Sin ((2 * Math.PI * sample * Frequency) / sampleRate));  
Magic Number,Blaze.SoundPlayer.Waves,Wave,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Waves\Wave.cs,GetPowerAndMultiplier,The following statement contains a magic number: while (fractional != Math.Floor (fractional) && negativeExponent < maxNegativeExponent) {  	negativeExponent++;  	fractional = fractional * 2;  }  
Magic Number,Blaze.SoundPlayer.Waves,Wave,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Waves\Wave.cs,GetPowerAndMultiplier,The following statement contains a magic number: fractional = fractional * 2;  
Magic Number,Blaze.SoundPlayer.Waves,Sawtooth,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Waves\Sawtooth.cs,Initialize,The following statement contains a magic number: for (int ii = Resolution / 2 + 1; ii < Resolution; ++ii) {  	_data [ii] -= (float)(2 * maxVal);  }  
Magic Number,Blaze.SoundPlayer.Waves,Sawtooth,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Waves\Sawtooth.cs,Initialize,The following statement contains a magic number: for (int ii = Resolution / 2 + 1; ii < Resolution; ++ii) {  	_data [ii] -= (float)(2 * maxVal);  }  
Magic Number,Blaze.SoundPlayer.Waves,Sawtooth,C:\repos\GKBelmonte_SoundPlayer\Blaze.SoundPlayer\Waves\Sawtooth.cs,Initialize,The following statement contains a magic number: _data [ii] -= (float)(2 * maxVal);  
