Implementation smell,Namespace,Class,File,Method,Description
Long Method,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Parse,The method has 140 lines of code.
Complex Method,UnityTest,Assertions,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Assertions.cs,CheckAssertions,Cyclomatic complexity of the method is 12
Complex Method,UnityTest,PropertyResolver,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\PropertyResolver.cs,GetFieldsAndPropertiesUnderPath,Cyclomatic complexity of the method is 11
Complex Method,UnityTest,TestRunner,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,StateMachine,Cyclomatic complexity of the method is 27
Complex Method,UnityTest.IntegrationTestRunner,ResultSummarizer,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\ResultWriter\ResultSummarizer.cs,Summarize,Cyclomatic complexity of the method is 28
Complex Method,UnityTest.IntegrationTestRunner,XmlResultWriter,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\ResultWriter\XmlResultWriter.cs,WriteResultElement,Cyclomatic complexity of the method is 15
Complex Method,strange.extensions.command.impl,SignalCommandBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\command\impl\SignalCommandBinder.cs,createCommandForSignal,Cyclomatic complexity of the method is 10
Complex Method,strange.extensions.dispatcher.eventdispatcher.impl,EventBinding,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\dispatcher\eventdispatcher\impl\EventBinding.cs,storeMethodType,Cyclomatic complexity of the method is 9
Complex Method,strange.extensions.dispatcher.eventdispatcher.impl,EventDispatcher,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\dispatcher\eventdispatcher\impl\EventDispatcher.cs,Dispatch,Cyclomatic complexity of the method is 14
Complex Method,strange.extensions.implicitBind.impl,ImplicitBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\implicitBind\impl\ImplicitBinder.cs,ScanForAnnotatedClasses,Cyclomatic complexity of the method is 15
Complex Method,strange.extensions.injector.impl,Injector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\Injector.cs,Instantiate,Cyclomatic complexity of the method is 9
Complex Method,strange.extensions.mediation.impl,MediationBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\mediation\impl\MediationBinder.cs,Trigger,Cyclomatic complexity of the method is 11
Complex Method,strange.framework.impl,Binder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\framework\impl\Binder.cs,ResolveBinding,Cyclomatic complexity of the method is 11
Complex Method,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Escape,Cyclomatic complexity of the method is 25
Complex Method,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Parse,Cyclomatic complexity of the method is 96
Complex Method,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Deserialize,Cyclomatic complexity of the method is 19
Complex Method,strange.examples.strangerobots,ScreenUtil,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\common\util\ScreenUtil.cs,GetAnchorPosition,Cyclomatic complexity of the method is 21
Complex Method,strange.examples.strangerobots.game,GameDebugView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\view\GameDebugView.cs,OnGUI,Cyclomatic complexity of the method is 21
Complex Method,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,Cyclomatic complexity of the method is 17
Long Parameter List,UnityTest,PropertyResolver,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\PropertyResolver.cs,GetFieldsAndPropertiesFromGameObject,The method has 6 parameters.
Long Parameter List,UnityTest,ScriptSelector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\ScriptSelector.cs,GetMethodList,The method has 5 parameters.
Long Parameter List,UnityTest,TestRunner,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,PrintResultToLog,The method has 9 parameters.
Long Parameter List,strange.extensions.injector.impl,Injector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\Injector.cs,failIf,The method has 5 parameters.
Long Parameter List,strange.extensions.injector.impl,Injector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\Injector.cs,failIf,The method has 6 parameters.
Long Parameter List,strange.examples.strangerobots.game,LevelConfig,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\model\LevelConfig.cs,LevelConfig,The method has 5 parameters.
Long Statement,UnityTest,AssertionComponent,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\AssertionComponent.cs,OnComponentCopy,The length of the statement  "	var oldAction = FindObjectsOfType (typeof(AssertionComponent)).Where (o => ((AssertionComponent)o).m_ActionBase == m_ActionBase && o != this); " is 142.
Long Statement,UnityTest,Assertions,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Assertions.cs,CheckAssertions,The length of the statement  "				message = assertion.name + " assertion failed.\n(" + assertion.Action.go + ")." + assertion.Action.thisPropertyPath + " " + comparer.compareToType; " is 147.
Long Statement,UnityTest,Assertions,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Assertions.cs,CheckAssertions,The length of the statement  "				message = assertion.name + " assertion failed.\n(" + assertion.Action.go + ")." + assertion.Action.thisPropertyPath + " failed."; " is 129.
Long Statement,UnityTest,ActionBase,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\ActionBase.cs,GetConfigurationDescription,The length of the statement  "	foreach (var prop in GetType ().GetFields (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly).Where (info => info.FieldType.IsSerializable)) { " is 164.
Long Statement,UnityTest,PropertyResolver,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\PropertyResolver.cs,GetPropertiesAndFieldsFromType,The length of the statement  "		if (AllowedTypes == null || !AllowedTypes.Any () || (AllowedTypes.Contains (memberType) && !ExcludedFieldNames.Contains (memberTypeName))) { " is 140.
Long Statement,UnityTest,ScriptSelector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\ScriptSelector.cs,GetMethodList,The length of the statement  "			if (methodParams [0].ParameterType.IsAssignableFrom (firstArgumentType) || methodParams [0].ParameterType.IsAssignableFrom (typeof(GameObject))) " is 144.
Long Statement,UnityTest,ScriptSelector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\ScriptSelector.cs,GetMethodList,The length of the statement  "			if ((methodParams [0].ParameterType.IsAssignableFrom (firstArgumentType) && methodParams [1].ParameterType.IsAssignableFrom (secondArgumentType)) || (methodParams [0].ParameterType.IsAssignableFrom (typeof(GameObject)) && methodParams [1].ParameterType.IsAssignableFrom (typeof(GameObject)))) " is 292.
Long Statement,UnityTest,TestComponent,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\TestComponent.cs,GetTypeByName,The length of the statement  "	return AppDomain.CurrentDomain.GetAssemblies ().SelectMany (a => a.GetTypes ()).FirstOrDefault (type => type.Name == className); " is 128.
Long Statement,UnityTest,TestRunner,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,PrintResultToLog,The length of the statement  "		Debug.Log ("Failed tests: " + string.Join ("' "' testToRun.Where (t => t.IsFailure).Select (result => result.name).ToArray ())); " is 128.
Long Statement,UnityTest,TestRunner,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,PrintResultToLog,The length of the statement  "		Debug.Log ("Ignored tests: " + string.Join ("' "' testToRun.Where (t => t.IsIgnored).Select (result => result.name).ToArray ())); " is 129.
Long Statement,strange.extensions.command.impl,Command,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\command\impl\Command.cs,Execute,The length of the statement  "	throw new CommandException ("You must override the Execute method in every Command"' CommandExceptionType.EXECUTE_OVERRIDE); " is 124.
Long Statement,strange.extensions.command.impl,CommandBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\command\impl\CommandBinder.cs,createCommand,The length of the statement  "		msg += " could not be instantiated.\nThis might be caused by a null pointer during instantiation or failing to override Execute (generally you shouldn't have constructor code in Commands)."; " is 190.
Long Statement,strange.extensions.command.impl,EventCommandBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\command\impl\EventCommandBinder.cs,createCommand,The length of the statement  "		msg += " could not be instantiated.\nThis might be caused by a null pointer during instantiation or failing to override Execute (generally you shouldn't have constructor code in Commands)."; " is 190.
Long Statement,strange.extensions.command.impl,SignalCommandBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\command\impl\SignalCommandBinder.cs,createCommandForSignal,The length of the statement  "						throw new SignalException ("SignalCommandBinder attempted to bind a null value from a signal to Command: " + cmd.GetType () + " to type: " + type' SignalExceptionType.COMMAND_NULL_INJECTION); " is 191.
Long Statement,strange.extensions.command.impl,SignalCommandBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\command\impl\SignalCommandBinder.cs,createCommandForSignal,The length of the statement  "					throw new SignalException ("Could not find an unused injectable value to inject in to Command: " + cmd.GetType () + " for Type: " + type' SignalExceptionType.COMMAND_VALUE_NOT_FOUND); " is 183.
Long Statement,strange.extensions.command.impl,SignalCommandBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\command\impl\SignalCommandBinder.cs,createCommandForSignal,The length of the statement  "				throw new SignalException ("SignalCommandBinder: You have attempted to map more than one value of type: " + type + " in Command: " + cmd.GetType () + ". Only the first value of a type will be injected. You may want to place your values in a VO' instead."' SignalExceptionType.COMMAND_VALUE_CONFLICT); " is 300.
Long Statement,strange.extensions.context.impl,CrossContext,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\context\impl\CrossContext.cs,addCoreComponents,The length of the statement  "		injectionBinder.Bind<IEventDispatcher> ().To<EventDispatcher> ().ToSingleton ().ToName (ContextKeys.CROSS_CONTEXT_DISPATCHER).CrossContext (); " is 142.
Long Statement,strange.extensions.context.impl,CrossContext,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\context\impl\CrossContext.cs,instantiateCoreComponents,The length of the statement  "		IEventDispatcher dispatcher = injectionBinder.GetInstance<IEventDispatcher> (ContextKeys.CONTEXT_DISPATCHER) as IEventDispatcher; " is 129.
Long Statement,strange.extensions.context.impl,CrossContext,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\context\impl\CrossContext.cs,instantiateCoreComponents,The length of the statement  "			crossContextDispatcher = injectionBinder.GetInstance<IEventDispatcher> (ContextKeys.CROSS_CONTEXT_DISPATCHER) as IEventDispatcher; " is 130.
Long Statement,strange.extensions.context.impl,CrossContext,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\context\impl\CrossContext.cs,RemoveCrossContext,The length of the statement  "		((childContext.crossContextDispatcher) as ITriggerProvider).RemoveTriggerable (childContext.GetComponent<IEventDispatcher> (ContextKeys.CONTEXT_DISPATCHER) as ITriggerable); " is 173.
Long Statement,strange.extensions.context.impl,MVCSContext,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\context\impl\MVCSContext.cs,SetContextView,The length of the statement  "		throw new ContextException ("MVCSContext requires a ContextView of type MonoBehaviour"' ContextExceptionType.NO_CONTEXT_VIEW); " is 126.
Long Statement,strange.extensions.context.impl,MVCSContext,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\context\impl\MVCSContext.cs,addCoreComponents,The length of the statement  "	injectionBinder.Bind<IEventDispatcher> ().To<EventDispatcher> ().ToSingleton ().ToName (ContextKeys.CONTEXT_DISPATCHER); " is 120.
Long Statement,strange.extensions.context.impl,MVCSContext,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\context\impl\MVCSContext.cs,instantiateCoreComponents,The length of the statement  "		throw new ContextException ("MVCSContext requires a ContextView of type MonoBehaviour"' ContextExceptionType.NO_CONTEXT_VIEW); " is 126.
Long Statement,strange.extensions.context.impl,MVCSContext,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\context\impl\MVCSContext.cs,postBindings,The length of the statement  "	//It's possible for views to fire their Awake before bindings. This catches any early risers and attaches their Mediators. " is 122.
Long Statement,strange.extensions.context.impl,MVCSContext,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\context\impl\MVCSContext.cs,mediateViewCache,The length of the statement  "		throw new ContextException ("MVCSContext cannot mediate views without a mediationBinder"' ContextExceptionType.NO_MEDIATION_BINDER); " is 132.
Long Statement,strange.extensions.dispatcher.eventdispatcher.impl,EventBinding,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\dispatcher\eventdispatcher\impl\EventBinding.cs,storeMethodType,The length of the statement  "		throw new DispatcherException ("EventDispatcher can't map something that isn't a delegate'"' DispatcherExceptionType.ILLEGAL_CALLBACK_HANDLER); " is 143.
Long Statement,strange.extensions.dispatcher.eventdispatcher.impl,EventBinding,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\dispatcher\eventdispatcher\impl\EventBinding.cs,storeMethodType,The length of the statement  "		throw new DispatcherException ("Event callbacks must have either one or no arguments"' DispatcherExceptionType.ILLEGAL_CALLBACK_HANDLER); " is 137.
Long Statement,strange.extensions.dispatcher.eventdispatcher.impl,EventDispatcher,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\dispatcher\eventdispatcher\impl\EventDispatcher.cs,conformDataToEvent,The length of the statement  "		throw new EventDispatcherException ("Attempt to Dispatch to null.\ndata: " + data' EventDispatcherExceptionType.EVENT_KEY_NULL); " is 128.
Long Statement,strange.extensions.dispatcher.eventdispatcher.impl,EventDispatcher,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\dispatcher\eventdispatcher\impl\EventDispatcher.cs,invokeEventCallback,The length of the statement  "		string message = "An EventCallback is attempting an illegal cast. One possible reason is not typing the payload to IEvent in your callback. Another is illegal casting of the data.\nTarget class: " + tgt + " method: " + methodName; " is 230.
Long Statement,strange.extensions.dispatcher.eventdispatcher.impl,EventDispatcher,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\dispatcher\eventdispatcher\impl\EventDispatcher.cs,Trigger,The length of the statement  "	bool allow = ((data is IEvent && System.Object.ReferenceEquals ((data as IEvent).target' this) == false) || (key is IEvent && System.Object.ReferenceEquals ((data as IEvent).target' this) == false)); " is 199.
Long Statement,strange.extensions.implicitBind.impl,ImplicitBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\implicitBind\impl\ImplicitBinder.cs,ScanForAnnotatedClasses,The length of the statement  "			typesInNamespaces.AddRange (types.Where (t => !string.IsNullOrEmpty (t.Namespace) && t.Namespace.StartsWith (usingNamespaces [ns]))); " is 133.
Long Statement,strange.extensions.implicitBind.impl,ImplicitBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\implicitBind\impl\ImplicitBinder.cs,ScanForAnnotatedClasses,The length of the statement  "				if (implBy.DefaultType.GetInterfaces ().Contains (type))//Verify this DefaultType exists and implements the tagged interface " is 124.
Long Statement,strange.extensions.implicitBind.impl,ImplicitBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\implicitBind\impl\ImplicitBinder.cs,ScanForAnnotatedClasses,The length of the statement  "					implementedByBindings.Add (new ImplicitBindingVO (type' implBy.DefaultType' implBy.Scope == InjectionBindingScope.CROSS_CONTEXT' null)); " is 136.
Long Statement,strange.extensions.implicitBind.impl,ImplicitBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\implicitBind\impl\ImplicitBinder.cs,ScanForAnnotatedClasses,The length of the statement  "					throw new InjectionException ("Default Type: " + implBy.DefaultType.Name + " does not implement annotated interface " + type.Name' InjectionExceptionType.IMPLICIT_BINDING_IMPLEMENTOR_DOES_NOT_IMPLEMENT_INTERFACE); " is 213.
Long Statement,strange.extensions.implicitBind.impl,ImplicitBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\implicitBind\impl\ImplicitBinder.cs,ScanForAnnotatedClasses,The length of the statement  "							throw new InjectionException ("Annotated type " + type.Name + " does not implement Default Interface " + impl.DefaultInterface.Name' InjectionExceptionType.IMPLICIT_BINDING_TYPE_DOES_NOT_IMPLEMENT_DESIGNATED_INTERFACE); " is 219.
Long Statement,strange.extensions.implicitBind.impl,ImplicitBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\implicitBind\impl\ImplicitBinder.cs,ScanForAnnotatedClasses,The length of the statement  "					throw new MediationException ("Cannot implicitly bind view of type: " + type.Name + " due to null MediatorType"' MediationExceptionType.MEDIATOR_VIEW_STACK_OVERFLOW); " is 166.
Long Statement,strange.extensions.implicitBind.impl,ImplicitBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\implicitBind\impl\ImplicitBinder.cs,ScanForAnnotatedClasses,The length of the statement  "					throw new MediationException ("Cannot implicitly bind Mediator of type: " + type.Name + " due to null ViewType"' MediationExceptionType.MEDIATOR_VIEW_STACK_OVERFLOW); " is 166.
Long Statement,strange.extensions.implicitBind.impl,ImplicitBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\implicitBind\impl\ImplicitBinder.cs,ScanForAnnotatedClasses,The length of the statement  "		throw new InjectionException ("Assembly was not initialized yet for Implicit Bindings!"' InjectionExceptionType.UNINITIALIZED_ASSEMBLY); " is 136.
Long Statement,strange.extensions.implicitBind.impl,ImplicitBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\implicitBind\impl\ImplicitBinder.cs,Bind,The length of the statement  "	//We do not check for the existence of a binding. Because implicit bindings are weak bindings' they are overridden automatically by other implicit bindings " is 155.
Long Statement,strange.extensions.implicitBind.impl,ImplicitBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\implicitBind\impl\ImplicitBinder.cs,Bind,The length of the statement  "	binding = toBind.ToType != null ? binding.To (toBind.ToType).ToName (toBind.Name).ToSingleton () : binding.ToName (toBind.Name).ToSingleton (); " is 143.
Long Statement,strange.extensions.injector.impl,CrossContextInjectionBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\CrossContextInjectionBinder.cs,GetBinding,The length of the statement  "	if (binding == null)//Attempt to get this from the cross context. Cross context is always SECOND PRIORITY. Local injections always override " is 139.
Long Statement,strange.extensions.injector.impl,InjectionBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\InjectionBinder.cs,GetInstance,The length of the statement  "		throw new InjectionException ("InjectionBinder has no binding for:\n\tkey: " + key + "\nname: " + name' InjectionExceptionType.NULL_BINDING); " is 141.
Long Statement,strange.extensions.injector.impl,InjectionBinding,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\InjectionBinding.cs,SetValue,The length of the statement  "			throw new InjectionException ("Injection cannot bind a value that does not extend or implement the binding type."' InjectionExceptionType.ILLEGAL_BINDING_VALUE); " is 161.
Long Statement,strange.extensions.injector.impl,Injector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\Injector.cs,performConstructorInjection,The length of the statement  "	failIf (target == null' "Attempt to perform constructor injection into a null object"' InjectionExceptionType.NULL_TARGET); " is 123.
Long Statement,strange.extensions.injector.impl,Injector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\Injector.cs,performConstructorInjection,The length of the statement  "	failIf (reflection == null' "Attempt to perform constructor injection without a reflection"' InjectionExceptionType.NULL_REFLECTION); " is 133.
Long Statement,strange.extensions.injector.impl,Injector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\Injector.cs,performConstructorInjection,The length of the statement  "	failIf (constructor == null' "Attempt to construction inject a null constructor"' InjectionExceptionType.NULL_CONSTRUCTOR); " is 123.
Long Statement,strange.extensions.injector.impl,Injector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\Injector.cs,performSetterInjection,The length of the statement  "	failIf (reflection.setters.Length != reflection.setterNames.Length' "Attempt to perform setter injection with mismatched names.\nThere must be exactly as many names as setters."' InjectionExceptionType.SETTER_NAME_MISMATCH); " is 224.
Long Statement,strange.extensions.injector.impl,Injector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\Injector.cs,getValueInjection,The length of the statement  "	failIf (binding == null' "Attempt to Instantiate a null binding."' InjectionExceptionType.NULL_BINDING' t' name' target); " is 121.
Long Statement,strange.extensions.injector.impl,Injector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\Injector.cs,armorAgainstInfiniteLoops,The length of the statement  "		throw new InjectionException ("There appears to be a circular dependency. Terminating loop."' InjectionExceptionType.CIRCULAR_DEPENDENCY); " is 138.
Long Statement,strange.extensions.injector.impl,InjectorFactory,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\InjectorFactory.cs,generateImplicit,The length of the statement  "	throw new InjectionException ("InjectorFactory can't instantiate an Interface or Abstract Class. Class: " + key.ToString ()' InjectionExceptionType.NOT_INSTANTIABLE); " is 166.
Long Statement,strange.extensions.mediation.impl,MediationBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\mediation\impl\MediationBinder.cs,mapView,The length of the statement  "				throw new MediationException (viewType + "mapped to itself. The result would be a stack overflow."' MediationExceptionType.MEDIATOR_VIEW_STACK_OVERFLOW); " is 153.
Long Statement,strange.extensions.mediation.impl,MediationBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\mediation\impl\MediationBinder.cs,mapView,The length of the statement  "				throw new MediationException ("The view: " + viewType.ToString () + " is mapped to mediator: " + mediatorType.ToString () + ". AddComponent resulted in null' which probably means " + mediatorType.ToString ().Substring (mediatorType.ToString ().LastIndexOf (".") + 1) + " is not a MonoBehaviour."' MediationExceptionType.NULL_MEDIATOR); " is 335.
Long Statement,strange.extensions.mediation.impl,View,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\mediation\impl\View.cs,bubbleToContext,The length of the statement  "		string msg = (loopLimiter == LOOP_MAX) ? msg = "A view couldn't find a context. Loop limit reached." : msg = "A view was added with no context. Views must be added into the hierarchy of their ContextView lest all hell break loose."; " is 232.
Long Statement,strange.extensions.reflector.impl,ReflectionBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\reflector\impl\ReflectionBinder.cs,mapPreferredConstructor,The length of the statement  "		throw new ReflectionException ("The reflector requires concrete classes.\nType " + type + " has no constructor. Is it an interface?"' ReflectionExceptionType.CANNOT_REFLECT_INTERFACE); " is 184.
Long Statement,strange.extensions.reflector.impl,ReflectionBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\reflector\impl\ReflectionBinder.cs,findPreferredConstructor,The length of the statement  "	ConstructorInfo[] constructors = type.GetConstructors (BindingFlags.FlattenHierarchy | BindingFlags.Public | BindingFlags.Instance | BindingFlags.InvokeMethod); " is 160.
Long Statement,strange.extensions.reflector.impl,ReflectionBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\reflector\impl\ReflectionBinder.cs,mapPostConstructors,The length of the statement  "	MethodInfo[] methods = type.GetMethods (BindingFlags.FlattenHierarchy | BindingFlags.Public | BindingFlags.Instance | BindingFlags.InvokeMethod); " is 145.
Long Statement,strange.extensions.reflector.impl,ReflectionBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\reflector\impl\ReflectionBinder.cs,mapSetters,The length of the statement  "	MemberInfo[] privateMembers = type.FindMembers (MemberTypes.Property' BindingFlags.FlattenHierarchy | BindingFlags.SetProperty | BindingFlags.NonPublic | BindingFlags.Instance' null' null); " is 189.
Long Statement,strange.extensions.reflector.impl,ReflectionBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\reflector\impl\ReflectionBinder.cs,mapSetters,The length of the statement  "			throw new ReflectionException ("The class " + type.Name + " has a non-public Injection setter " + member.Name + ". Make the setter public to allow injection."' ReflectionExceptionType.CANNOT_INJECT_INTO_NONPUBLIC_SETTER); " is 221.
Long Statement,strange.extensions.reflector.impl,ReflectionBinder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\reflector\impl\ReflectionBinder.cs,mapSetters,The length of the statement  "	MemberInfo[] members = type.FindMembers (MemberTypes.Property' BindingFlags.FlattenHierarchy | BindingFlags.SetProperty | BindingFlags.Public | BindingFlags.Instance' null' null); " is 179.
Long Statement,strange.extensions.sequencer.impl,SequenceBinding,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\sequencer\impl\SequenceBinding.cs,To,The length of the statement  "		throw new SequencerException ("Attempt to bind a non SequenceCommand to a Sequence. Perhaps your command needs to extend SequenceCommand or implement ISequenCommand?\n\tType: " + oType.ToString ()' SequencerExceptionType.COMMAND_USED_IN_SEQUENCE); " is 247.
Long Statement,strange.extensions.sequencer.impl,SequenceCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\sequencer\impl\SequenceCommand.cs,Execute,The length of the statement  "	throw new SequencerException ("You must override the Execute method in every SequenceCommand"' SequencerExceptionType.EXECUTE_OVERRIDE); " is 136.
Long Statement,strange.framework.impl,Binder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\framework\impl\Binder.cs,GetBinding,The length of the statement  "		throw new BinderException ("Binder cannot fetch Bindings when the binder is in a conflicted state.\nConflicts: " + conflictSummary' BinderExceptionType.CONFLICT_IN_BINDER); " is 172.
Long Statement,strange.framework.impl,Binder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\framework\impl\Binder.cs,ResolveBinding,The length of the statement  "			//SDM2014-01-20: as part of cross-context implicit bindings fix' attempts by a weak binding to replace a non-weak binding are ignored instead of being  " is 150.
Long Statement,strange.framework.impl,Binder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\framework\impl\Binder.cs,ResolveBinding,The length of the statement  "				if (existingBinding != binding && existingBinding.isWeak && (!binding.isWeak || existingBinding.value == null || existingBinding.value is System.Type)) { " is 153.
Long Statement,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,SaveToCompressedStream,The length of the statement  "	throw new Exception ("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON"); " is 139.
Long Statement,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,SaveToCompressedFile,The length of the statement  "	throw new Exception ("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON"); " is 139.
Long Statement,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,SaveToCompressedBase64,The length of the statement  "	throw new Exception ("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON"); " is 139.
Long Statement,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,LoadFromCompressedFile,The length of the statement  "	throw new Exception ("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON"); " is 139.
Long Statement,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,LoadFromCompressedStream,The length of the statement  "	throw new Exception ("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON"); " is 139.
Long Statement,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,LoadFromCompressedBase64,The length of the statement  "	throw new Exception ("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON"); " is 139.
Long Statement,strange.examples.strangerobots.game,GameContext,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\config\GameContext.cs,mapBindings,The length of the statement  "	commandBinder.Bind<LevelStartSignal> ().To<CleanupLevelCommand> ().To<CreateGameFieldCommand> ().To<SetupLevelCommand> ().To<StartLevelCommand> ().To<MatchCameraToFieldCommand> ().InSequence (); " is 194.
Long Statement,strange.examples.strangerobots.game,GameContext,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\config\GameContext.cs,mapBindings,The length of the statement  "	commandBinder.Bind<StartTurnSignal> ().To<StartTurnCommand> ().To<MovePlayerCommand> ().To<MoveEnemiesCommand> ().To<EndTurnCommand> ().InSequence (); " is 150.
Long Statement,strange.examples.strangerobots.game,CreatePlayerCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\player\CreatePlayerCommand.cs,Execute,The length of the statement  "	float xPos = (gameModel.currentLevel.player.y + .5f - (gameModel.currentLevel.height * .5f)) * gameModel.currentLevel.magnifier; " is 128.
Long Statement,strange.examples.strangerobots.game,CreatePlayerCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\player\CreatePlayerCommand.cs,Execute,The length of the statement  "	float zPos = (gameModel.currentLevel.player.x + .5f - (gameModel.currentLevel.width * .5f)) * gameModel.currentLevel.magnifier; " is 127.
Complex Conditional,UnityTest,PropertyResolver,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\PropertyResolver.cs,GetPropertiesAndFieldsFromType,The conditional expression  "AllowedTypes == null || !AllowedTypes.Any () || (AllowedTypes.Contains (memberType) && !ExcludedFieldNames.Contains (memberTypeName))"  is complex.
Complex Conditional,UnityTest,ScriptSelector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\ScriptSelector.cs,GetMethodList,The conditional expression  "(methodParams [0].ParameterType.IsAssignableFrom (firstArgumentType) && methodParams [1].ParameterType.IsAssignableFrom (secondArgumentType)) || (methodParams [0].ParameterType.IsAssignableFrom (typeof(GameObject)) && methodParams [1].ParameterType.IsAssignableFrom (typeof(GameObject)))"  is complex.
Complex Conditional,strange.framework.impl,Binder,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\framework\impl\Binder.cs,ResolveBinding,The conditional expression  "existingBinding != binding && existingBinding.isWeak && (!binding.isWeak || existingBinding.value == null || existingBinding.value is System.Type)"  is complex.
Complex Conditional,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The conditional expression  "xDest < 0 || yDest < 0 || xDest >= level.width || yDest >= level.height"  is complex.
Virtual Method Call from Constructor,strange.extensions.context.impl,Context,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\context\impl\Context.cs,Context,The constructor "Context" calls a virtual method "SetContextView".
Virtual Method Call from Constructor,strange.extensions.context.impl,Context,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\context\impl\Context.cs,Context,The constructor "Context" calls a virtual method "addCoreComponents".
Virtual Method Call from Constructor,strange.extensions.context.impl,Context,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\context\impl\Context.cs,Context,The constructor "Context" calls a virtual method "Start".
Empty Catch Block,strange.extensions.injector.impl,InjectorFactory,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strange\extensions\injector\impl\InjectorFactory.cs,createFromValue,The method has an empty catch block.
Magic Number,UnityTest,ActionBase,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\ActionBase.cs,GetDepthOfSearch,The following statement contains a magic number: return 2;  
Magic Number,UnityTest,FloatComparer,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\FloatComparer.cs,GetDepthOfSearch,The following statement contains a magic number: return 3;  
Magic Number,UnityTest,Vector2Comparer,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\Vector2Comparer.cs,GetDepthOfSearch,The following statement contains a magic number: return 3;  
Magic Number,UnityTest,Vector4Comparer,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\Vector4Comparer.cs,GetDepthOfSearch,The following statement contains a magic number: return 3;  
Magic Number,UnityTest,PropertyResolver,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\PropertyResolver.cs,GetFieldsAndPropertiesUnderPath,The following statement contains a magic number: if (idx < 0) {  	var components = GetFieldsAndPropertiesFromGameObject (go' 2' null);  	return components;  }  
Magic Number,UnityTest,PropertyResolver,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\PropertyResolver.cs,GetFieldsAndPropertiesUnderPath,The following statement contains a magic number: try {  	type = GetPropertyTypeFromString (go' propertyToSearch);  	idx = propertPath.Length - 1;  }  catch (ArgumentException) {  	try {  		propertyToSearch = propertPath.Substring (0' idx);  		type = GetPropertyTypeFromString (go' propertyToSearch);  	}  	catch (NullReferenceException) {  		var components = GetFieldsAndPropertiesFromGameObject (go' 2' null);  		return components.Where (s => s.StartsWith (propertPath.Substring (idx + 1))).ToArray ();  	}  }  
Magic Number,UnityTest,PropertyResolver,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\PropertyResolver.cs,GetFieldsAndPropertiesUnderPath,The following statement contains a magic number: try {  	propertyToSearch = propertPath.Substring (0' idx);  	type = GetPropertyTypeFromString (go' propertyToSearch);  }  catch (NullReferenceException) {  	var components = GetFieldsAndPropertiesFromGameObject (go' 2' null);  	return components.Where (s => s.StartsWith (propertPath.Substring (idx + 1))).ToArray ();  }  
Magic Number,UnityTest,ScriptSelector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\ScriptSelector.cs,GetMethodList,The following statement contains a magic number: result = result.Where (info =>  {  	var methodParams = info.GetParameters ();  	if (methodParams.Length == 0)  		return true;  	if (firstArgumentType != null && methodParams.Length == 1) {  		if (methodParams [0].ParameterType.IsAssignableFrom (firstArgumentType) || methodParams [0].ParameterType.IsAssignableFrom (typeof(GameObject)))  			return true;  	}  	if (firstArgumentType != null && secondArgumentType != null && methodParams.Length == 2) {  		if ((methodParams [0].ParameterType.IsAssignableFrom (firstArgumentType) && methodParams [1].ParameterType.IsAssignableFrom (secondArgumentType)) || (methodParams [0].ParameterType.IsAssignableFrom (typeof(GameObject)) && methodParams [1].ParameterType.IsAssignableFrom (typeof(GameObject))))  			return true;  	}  	return false;  });  
Magic Number,UnityTest,ScriptSelector,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\ScriptSelector.cs,GetMethodList,The following statement contains a magic number: if (firstArgumentType != null && secondArgumentType != null && methodParams.Length == 2) {  	if ((methodParams [0].ParameterType.IsAssignableFrom (firstArgumentType) && methodParams [1].ParameterType.IsAssignableFrom (secondArgumentType)) || (methodParams [0].ParameterType.IsAssignableFrom (typeof(GameObject)) && methodParams [1].ParameterType.IsAssignableFrom (typeof(GameObject))))  		return true;  }  
Magic Number,UnityTest,Icons,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Common\Icons.cs,GetSpinningIcon,The following statement contains a magic number: switch (frame) {  case 0:  	return guiGreenredyellowImg1;  case 1:  	return guiGreenredyellowImg2;  case 2:  	return guiGreenredyellowImg3;  case 3:  	return guiGreenredyellowImg4;  default:  	return guiGreenredyellowImg1;  }  
Magic Number,UnityTest,Icons,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Common\Icons.cs,GetSpinningIcon,The following statement contains a magic number: switch (frame) {  case 0:  	return guiGreenredyellowImg1;  case 1:  	return guiGreenredyellowImg2;  case 2:  	return guiGreenredyellowImg3;  case 3:  	return guiGreenredyellowImg4;  default:  	return guiGreenredyellowImg1;  }  
Magic Number,UnityTest.IntegrationTestRunner,XmlResultWriter,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\ResultWriter\XmlResultWriter.cs,WriteCData,The following statement contains a magic number: while (true) {  	int illegal = text.IndexOf ("]]>"' start);  	if (illegal < 0)  		break;  	xmlWriter.WriteCData (text.Substring (start' illegal - start + 2));  	start = illegal + 2;  	if (start >= text.Length)  		return;  }  
Magic Number,UnityTest.IntegrationTestRunner,XmlResultWriter,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\ResultWriter\XmlResultWriter.cs,WriteCData,The following statement contains a magic number: while (true) {  	int illegal = text.IndexOf ("]]>"' start);  	if (illegal < 0)  		break;  	xmlWriter.WriteCData (text.Substring (start' illegal - start + 2));  	start = illegal + 2;  	if (start >= text.Length)  		return;  }  
Magic Number,UnityTest.IntegrationTestRunner,XmlResultWriter,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\ResultWriter\XmlResultWriter.cs,WriteCData,The following statement contains a magic number: xmlWriter.WriteCData (text.Substring (start' illegal - start + 2));  
Magic Number,UnityTest.IntegrationTestRunner,XmlResultWriter,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\ResultWriter\XmlResultWriter.cs,WriteCData,The following statement contains a magic number: start = illegal + 2;  
Magic Number,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Parse,The following statement contains a magic number: while (i < aJSON.Length) {  	switch (aJSON [i]) {  	case '{':  		if (QuoteMode) {  			Token += aJSON [i];  			break;  		}  		stack.Push (new JSONClass ());  		if (ctx != null) {  			TokenName = TokenName.Trim ();  			if (ctx is JSONArray)  				ctx.Add (stack.Peek ());  			else if (TokenName != "")  				ctx.Add (TokenName' stack.Peek ());  		}  		TokenName = "";  		Token = "";  		ctx = stack.Peek ();  		break;  	case '[':  		if (QuoteMode) {  			Token += aJSON [i];  			break;  		}  		stack.Push (new JSONArray ());  		if (ctx != null) {  			TokenName = TokenName.Trim ();  			if (ctx is JSONArray)  				ctx.Add (stack.Peek ());  			else if (TokenName != "")  				ctx.Add (TokenName' stack.Peek ());  		}  		TokenName = "";  		Token = "";  		ctx = stack.Peek ();  		break;  	case '}':  	case ']':  		if (QuoteMode) {  			Token += aJSON [i];  			break;  		}  		if (stack.Count == 0)  			throw new Exception ("JSON Parse: Too many closing brackets");  		stack.Pop ();  		if (Token != "") {  			TokenName = TokenName.Trim ();  			if (ctx is JSONArray)  				ctx.Add (Token);  			else if (TokenName != "")  				ctx.Add (TokenName' Token);  		}  		TokenName = "";  		Token = "";  		if (stack.Count > 0)  			ctx = stack.Peek ();  		break;  	case ':':  		if (QuoteMode) {  			Token += aJSON [i];  			break;  		}  		TokenName = Token;  		Token = "";  		break;  	case '"':  		QuoteMode ^= true;  		break;  	case ''':  		if (QuoteMode) {  			Token += aJSON [i];  			break;  		}  		if (Token != "") {  			if (ctx is JSONArray)  				ctx.Add (Token);  			else if (TokenName != "")  				ctx.Add (TokenName' Token);  		}  		TokenName = "";  		Token = "";  		break;  	case '\r':  	case '\n':  		break;  	case ' ':  	case '\t':  		if (QuoteMode)  			Token += aJSON [i];  		break;  	case '\\':  		++i;  		if (QuoteMode) {  			char C = aJSON [i];  			switch (C) {  			case 't':  				Token += '\t';  				break;  			case 'r':  				Token += '\r';  				break;  			case 'n':  				Token += '\n';  				break;  			case 'b':  				Token += '\b';  				break;  			case 'f':  				Token += '\f';  				break;  			case 'u': {  				string s = aJSON.Substring (i + 1' 4);  				Token += (char)int.Parse (s' System.Globalization.NumberStyles.AllowHexSpecifier);  				i += 4;  				break;  			}  			default:  				Token += C;  				break;  			}  		}  		break;  	default:  		Token += aJSON [i];  		break;  	}  	++i;  }  
Magic Number,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Parse,The following statement contains a magic number: while (i < aJSON.Length) {  	switch (aJSON [i]) {  	case '{':  		if (QuoteMode) {  			Token += aJSON [i];  			break;  		}  		stack.Push (new JSONClass ());  		if (ctx != null) {  			TokenName = TokenName.Trim ();  			if (ctx is JSONArray)  				ctx.Add (stack.Peek ());  			else if (TokenName != "")  				ctx.Add (TokenName' stack.Peek ());  		}  		TokenName = "";  		Token = "";  		ctx = stack.Peek ();  		break;  	case '[':  		if (QuoteMode) {  			Token += aJSON [i];  			break;  		}  		stack.Push (new JSONArray ());  		if (ctx != null) {  			TokenName = TokenName.Trim ();  			if (ctx is JSONArray)  				ctx.Add (stack.Peek ());  			else if (TokenName != "")  				ctx.Add (TokenName' stack.Peek ());  		}  		TokenName = "";  		Token = "";  		ctx = stack.Peek ();  		break;  	case '}':  	case ']':  		if (QuoteMode) {  			Token += aJSON [i];  			break;  		}  		if (stack.Count == 0)  			throw new Exception ("JSON Parse: Too many closing brackets");  		stack.Pop ();  		if (Token != "") {  			TokenName = TokenName.Trim ();  			if (ctx is JSONArray)  				ctx.Add (Token);  			else if (TokenName != "")  				ctx.Add (TokenName' Token);  		}  		TokenName = "";  		Token = "";  		if (stack.Count > 0)  			ctx = stack.Peek ();  		break;  	case ':':  		if (QuoteMode) {  			Token += aJSON [i];  			break;  		}  		TokenName = Token;  		Token = "";  		break;  	case '"':  		QuoteMode ^= true;  		break;  	case ''':  		if (QuoteMode) {  			Token += aJSON [i];  			break;  		}  		if (Token != "") {  			if (ctx is JSONArray)  				ctx.Add (Token);  			else if (TokenName != "")  				ctx.Add (TokenName' Token);  		}  		TokenName = "";  		Token = "";  		break;  	case '\r':  	case '\n':  		break;  	case ' ':  	case '\t':  		if (QuoteMode)  			Token += aJSON [i];  		break;  	case '\\':  		++i;  		if (QuoteMode) {  			char C = aJSON [i];  			switch (C) {  			case 't':  				Token += '\t';  				break;  			case 'r':  				Token += '\r';  				break;  			case 'n':  				Token += '\n';  				break;  			case 'b':  				Token += '\b';  				break;  			case 'f':  				Token += '\f';  				break;  			case 'u': {  				string s = aJSON.Substring (i + 1' 4);  				Token += (char)int.Parse (s' System.Globalization.NumberStyles.AllowHexSpecifier);  				i += 4;  				break;  			}  			default:  				Token += C;  				break;  			}  		}  		break;  	default:  		Token += aJSON [i];  		break;  	}  	++i;  }  
Magic Number,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Parse,The following statement contains a magic number: switch (aJSON [i]) {  case '{':  	if (QuoteMode) {  		Token += aJSON [i];  		break;  	}  	stack.Push (new JSONClass ());  	if (ctx != null) {  		TokenName = TokenName.Trim ();  		if (ctx is JSONArray)  			ctx.Add (stack.Peek ());  		else if (TokenName != "")  			ctx.Add (TokenName' stack.Peek ());  	}  	TokenName = "";  	Token = "";  	ctx = stack.Peek ();  	break;  case '[':  	if (QuoteMode) {  		Token += aJSON [i];  		break;  	}  	stack.Push (new JSONArray ());  	if (ctx != null) {  		TokenName = TokenName.Trim ();  		if (ctx is JSONArray)  			ctx.Add (stack.Peek ());  		else if (TokenName != "")  			ctx.Add (TokenName' stack.Peek ());  	}  	TokenName = "";  	Token = "";  	ctx = stack.Peek ();  	break;  case '}':  case ']':  	if (QuoteMode) {  		Token += aJSON [i];  		break;  	}  	if (stack.Count == 0)  		throw new Exception ("JSON Parse: Too many closing brackets");  	stack.Pop ();  	if (Token != "") {  		TokenName = TokenName.Trim ();  		if (ctx is JSONArray)  			ctx.Add (Token);  		else if (TokenName != "")  			ctx.Add (TokenName' Token);  	}  	TokenName = "";  	Token = "";  	if (stack.Count > 0)  		ctx = stack.Peek ();  	break;  case ':':  	if (QuoteMode) {  		Token += aJSON [i];  		break;  	}  	TokenName = Token;  	Token = "";  	break;  case '"':  	QuoteMode ^= true;  	break;  case ''':  	if (QuoteMode) {  		Token += aJSON [i];  		break;  	}  	if (Token != "") {  		if (ctx is JSONArray)  			ctx.Add (Token);  		else if (TokenName != "")  			ctx.Add (TokenName' Token);  	}  	TokenName = "";  	Token = "";  	break;  case '\r':  case '\n':  	break;  case ' ':  case '\t':  	if (QuoteMode)  		Token += aJSON [i];  	break;  case '\\':  	++i;  	if (QuoteMode) {  		char C = aJSON [i];  		switch (C) {  		case 't':  			Token += '\t';  			break;  		case 'r':  			Token += '\r';  			break;  		case 'n':  			Token += '\n';  			break;  		case 'b':  			Token += '\b';  			break;  		case 'f':  			Token += '\f';  			break;  		case 'u': {  			string s = aJSON.Substring (i + 1' 4);  			Token += (char)int.Parse (s' System.Globalization.NumberStyles.AllowHexSpecifier);  			i += 4;  			break;  		}  		default:  			Token += C;  			break;  		}  	}  	break;  default:  	Token += aJSON [i];  	break;  }  
Magic Number,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Parse,The following statement contains a magic number: switch (aJSON [i]) {  case '{':  	if (QuoteMode) {  		Token += aJSON [i];  		break;  	}  	stack.Push (new JSONClass ());  	if (ctx != null) {  		TokenName = TokenName.Trim ();  		if (ctx is JSONArray)  			ctx.Add (stack.Peek ());  		else if (TokenName != "")  			ctx.Add (TokenName' stack.Peek ());  	}  	TokenName = "";  	Token = "";  	ctx = stack.Peek ();  	break;  case '[':  	if (QuoteMode) {  		Token += aJSON [i];  		break;  	}  	stack.Push (new JSONArray ());  	if (ctx != null) {  		TokenName = TokenName.Trim ();  		if (ctx is JSONArray)  			ctx.Add (stack.Peek ());  		else if (TokenName != "")  			ctx.Add (TokenName' stack.Peek ());  	}  	TokenName = "";  	Token = "";  	ctx = stack.Peek ();  	break;  case '}':  case ']':  	if (QuoteMode) {  		Token += aJSON [i];  		break;  	}  	if (stack.Count == 0)  		throw new Exception ("JSON Parse: Too many closing brackets");  	stack.Pop ();  	if (Token != "") {  		TokenName = TokenName.Trim ();  		if (ctx is JSONArray)  			ctx.Add (Token);  		else if (TokenName != "")  			ctx.Add (TokenName' Token);  	}  	TokenName = "";  	Token = "";  	if (stack.Count > 0)  		ctx = stack.Peek ();  	break;  case ':':  	if (QuoteMode) {  		Token += aJSON [i];  		break;  	}  	TokenName = Token;  	Token = "";  	break;  case '"':  	QuoteMode ^= true;  	break;  case ''':  	if (QuoteMode) {  		Token += aJSON [i];  		break;  	}  	if (Token != "") {  		if (ctx is JSONArray)  			ctx.Add (Token);  		else if (TokenName != "")  			ctx.Add (TokenName' Token);  	}  	TokenName = "";  	Token = "";  	break;  case '\r':  case '\n':  	break;  case ' ':  case '\t':  	if (QuoteMode)  		Token += aJSON [i];  	break;  case '\\':  	++i;  	if (QuoteMode) {  		char C = aJSON [i];  		switch (C) {  		case 't':  			Token += '\t';  			break;  		case 'r':  			Token += '\r';  			break;  		case 'n':  			Token += '\n';  			break;  		case 'b':  			Token += '\b';  			break;  		case 'f':  			Token += '\f';  			break;  		case 'u': {  			string s = aJSON.Substring (i + 1' 4);  			Token += (char)int.Parse (s' System.Globalization.NumberStyles.AllowHexSpecifier);  			i += 4;  			break;  		}  		default:  			Token += C;  			break;  		}  	}  	break;  default:  	Token += aJSON [i];  	break;  }  
Magic Number,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Parse,The following statement contains a magic number: if (QuoteMode) {  	char C = aJSON [i];  	switch (C) {  	case 't':  		Token += '\t';  		break;  	case 'r':  		Token += '\r';  		break;  	case 'n':  		Token += '\n';  		break;  	case 'b':  		Token += '\b';  		break;  	case 'f':  		Token += '\f';  		break;  	case 'u': {  		string s = aJSON.Substring (i + 1' 4);  		Token += (char)int.Parse (s' System.Globalization.NumberStyles.AllowHexSpecifier);  		i += 4;  		break;  	}  	default:  		Token += C;  		break;  	}  }  
Magic Number,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Parse,The following statement contains a magic number: if (QuoteMode) {  	char C = aJSON [i];  	switch (C) {  	case 't':  		Token += '\t';  		break;  	case 'r':  		Token += '\r';  		break;  	case 'n':  		Token += '\n';  		break;  	case 'b':  		Token += '\b';  		break;  	case 'f':  		Token += '\f';  		break;  	case 'u': {  		string s = aJSON.Substring (i + 1' 4);  		Token += (char)int.Parse (s' System.Globalization.NumberStyles.AllowHexSpecifier);  		i += 4;  		break;  	}  	default:  		Token += C;  		break;  	}  }  
Magic Number,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Parse,The following statement contains a magic number: switch (C) {  case 't':  	Token += '\t';  	break;  case 'r':  	Token += '\r';  	break;  case 'n':  	Token += '\n';  	break;  case 'b':  	Token += '\b';  	break;  case 'f':  	Token += '\f';  	break;  case 'u': {  	string s = aJSON.Substring (i + 1' 4);  	Token += (char)int.Parse (s' System.Globalization.NumberStyles.AllowHexSpecifier);  	i += 4;  	break;  }  default:  	Token += C;  	break;  }  
Magic Number,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Parse,The following statement contains a magic number: switch (C) {  case 't':  	Token += '\t';  	break;  case 'r':  	Token += '\r';  	break;  case 'n':  	Token += '\n';  	break;  case 'b':  	Token += '\b';  	break;  case 'f':  	Token += '\f';  	break;  case 'u': {  	string s = aJSON.Substring (i + 1' 4);  	Token += (char)int.Parse (s' System.Globalization.NumberStyles.AllowHexSpecifier);  	i += 4;  	break;  }  default:  	Token += C;  	break;  }  
Magic Number,SimpleJSON,JSONNode,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,Parse,The following statement contains a magic number: i += 4;  
Magic Number,SimpleJSON,JSONArray,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,ToString,The following statement contains a magic number: foreach (JSONNode N in m_List) {  	if (result.Length > 2)  		result += "' ";  	result += N.ToString ();  }  
Magic Number,SimpleJSON,JSONArray,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,ToString,The following statement contains a magic number: if (result.Length > 2)  	result += "' ";  
Magic Number,SimpleJSON,JSONArray,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,ToString,The following statement contains a magic number: foreach (JSONNode N in m_List) {  	if (result.Length > 3)  		result += "' ";  	result += "\n" + aPrefix + "   ";  	result += N.ToString (aPrefix + "   ");  }  
Magic Number,SimpleJSON,JSONArray,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,ToString,The following statement contains a magic number: if (result.Length > 3)  	result += "' ";  
Magic Number,SimpleJSON,JSONClass,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,ToString,The following statement contains a magic number: foreach (KeyValuePair<string' JSONNode> N in m_Dict) {  	if (result.Length > 2)  		result += "' ";  	result += "\"" + Escape (N.Key) + "\":" + N.Value.ToString ();  }  
Magic Number,SimpleJSON,JSONClass,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,ToString,The following statement contains a magic number: if (result.Length > 2)  	result += "' ";  
Magic Number,SimpleJSON,JSONClass,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,ToString,The following statement contains a magic number: foreach (KeyValuePair<string' JSONNode> N in m_Dict) {  	if (result.Length > 3)  		result += "' ";  	result += "\n" + aPrefix + "   ";  	result += "\"" + Escape (N.Key) + "\" : " + N.Value.ToString (aPrefix + "   ");  }  
Magic Number,SimpleJSON,JSONClass,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\thirdparty\SimpleJSON.cs,ToString,The following statement contains a magic number: if (result.Length > 3)  	result += "' ";  
Magic Number,strange.examples.strangerobots.ui,HUDView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\ui\view\HUDView.cs,SetLives,The following statement contains a magic number: if (livesGOs == null) {  	GameObject proto = livesBlock.transform.FindChild ("ship").gameObject;  	livesGOs = new GameObject[9];  	livesGOs [0] = proto;  	for (int a = 1; a < 9; a++) {  		GameObject go = GameObject.Instantiate (proto) as GameObject;  		go.transform.parent = proto.transform.parent;  		Vector3 pos = proto.transform.localPosition;  		pos.x = pos.x - (go.renderer.bounds.size.x * a);  		go.transform.localPosition = pos;  		livesGOs [a] = go;  	}  }  
Magic Number,strange.examples.strangerobots.ui,HUDView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\ui\view\HUDView.cs,SetLives,The following statement contains a magic number: if (livesGOs == null) {  	GameObject proto = livesBlock.transform.FindChild ("ship").gameObject;  	livesGOs = new GameObject[9];  	livesGOs [0] = proto;  	for (int a = 1; a < 9; a++) {  		GameObject go = GameObject.Instantiate (proto) as GameObject;  		go.transform.parent = proto.transform.parent;  		Vector3 pos = proto.transform.localPosition;  		pos.x = pos.x - (go.renderer.bounds.size.x * a);  		go.transform.localPosition = pos;  		livesGOs [a] = go;  	}  }  
Magic Number,strange.examples.strangerobots.ui,HUDView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\ui\view\HUDView.cs,SetLives,The following statement contains a magic number: livesGOs = new GameObject[9];  
Magic Number,strange.examples.strangerobots.ui,HUDView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\ui\view\HUDView.cs,SetLives,The following statement contains a magic number: for (int a = 1; a < 9; a++) {  	GameObject go = GameObject.Instantiate (proto) as GameObject;  	go.transform.parent = proto.transform.parent;  	Vector3 pos = proto.transform.localPosition;  	pos.x = pos.x - (go.renderer.bounds.size.x * a);  	go.transform.localPosition = pos;  	livesGOs [a] = go;  }  
Magic Number,strange.examples.strangerobots.ui,HUDView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\ui\view\HUDView.cs,SetLives,The following statement contains a magic number: for (int a = 0; a < 9; a++) {  	livesGOs [a].SetActive (a < value - 1);  }  
Magic Number,strange.examples.strangerobots.game,CreateGameFieldCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\level\CreateGameFieldCommand.cs,Execute,The following statement contains a magic number: for (int x = 0; x < w; x++) {  	for (int y = 0; y < h; y++) {  		a++;  		float zPos = ((float)x + .5f - halfW) * level.magnifier;  		float xPos = ((float)y + .5f - halfH) * level.magnifier;  		GameObject tile = (a % 2 == 0) ? evenTile : oddTile;  		GameObject newTile = GameObject.Instantiate (tile' new Vector3 (xPos' 0f' zPos)' Quaternion.identity) as GameObject;  		newTile.transform.parent = gameField.transform;  	}  }  
Magic Number,strange.examples.strangerobots.game,CreateGameFieldCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\level\CreateGameFieldCommand.cs,Execute,The following statement contains a magic number: for (int y = 0; y < h; y++) {  	a++;  	float zPos = ((float)x + .5f - halfW) * level.magnifier;  	float xPos = ((float)y + .5f - halfH) * level.magnifier;  	GameObject tile = (a % 2 == 0) ? evenTile : oddTile;  	GameObject newTile = GameObject.Instantiate (tile' new Vector3 (xPos' 0f' zPos)' Quaternion.identity) as GameObject;  	newTile.transform.parent = gameField.transform;  }  
Magic Number,strange.examples.strangerobots.game,ControlsView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\view\ControlsView.cs,Update,The following statement contains a magic number: if (Input.GetMouseButtonDown (0) && acceptingInput) {  	Ray ray = gameCamera.ScreenPointToRay (Input.mousePosition);  	RaycastHit hit;  	if (Physics.Raycast (ray.origin' ray.direction' out hit' 2000) && controls.Contains (hit.collider.gameObject)) {  		moveSignal.Dispatch (hit.collider.gameObject.name);  	}  }  
Magic Number,strange.examples.strangerobots.game,ControlsView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\view\ControlsView.cs,Update,The following statement contains a magic number: if (Physics.Raycast (ray.origin' ray.direction' out hit' 2000) && controls.Contains (hit.collider.gameObject)) {  	moveSignal.Dispatch (hit.collider.gameObject.name);  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (legalMove) {  	//Move player  	player.x = xDest;  	player.y = yDest;  	level.player = player;  	//Move all enemies iteratively' recording kills  	int bb = level.enemies.Count;  	for (int b = 0; b < bb; b++) {  		ObjectStatus enemy = level.enemies [b];  		if (enemy.destroyed)  			continue;  		int enemyXPos = enemy.x;  		int enemyYPos = enemy.y;  		int xDist = enemy.x - player.x;  		int yDist = enemy.y - player.y;  		float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  		if (theta >= -45 && theta <= 45) {  			enemyXPos -= 1;  		}  		else if (theta >= 135 || theta <= -135) {  			enemyXPos += 1;  		}  		if (theta >= 45 && theta <= 135) {  			enemyYPos -= 1;  		}  		else if (theta <= -45 && theta >= -135) {  			enemyYPos += 1;  		}  		enemy.x = enemyXPos;  		enemy.y = enemyYPos;  		level.enemies [b] = enemy;  		//loop to mark collisions  		for (int c = 0; c < bb; c++) {  			ObjectStatus other = level.enemies [c];  			if (b != c && other.x == enemy.x && other.y == enemy.y) {  				other.destroyed = enemy.destroyed = true;  			}  		}  	}  	//Note if player was killed  }  //If no...  else {  	//Reject?  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (legalMove) {  	//Move player  	player.x = xDest;  	player.y = yDest;  	level.player = player;  	//Move all enemies iteratively' recording kills  	int bb = level.enemies.Count;  	for (int b = 0; b < bb; b++) {  		ObjectStatus enemy = level.enemies [b];  		if (enemy.destroyed)  			continue;  		int enemyXPos = enemy.x;  		int enemyYPos = enemy.y;  		int xDist = enemy.x - player.x;  		int yDist = enemy.y - player.y;  		float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  		if (theta >= -45 && theta <= 45) {  			enemyXPos -= 1;  		}  		else if (theta >= 135 || theta <= -135) {  			enemyXPos += 1;  		}  		if (theta >= 45 && theta <= 135) {  			enemyYPos -= 1;  		}  		else if (theta <= -45 && theta >= -135) {  			enemyYPos += 1;  		}  		enemy.x = enemyXPos;  		enemy.y = enemyYPos;  		level.enemies [b] = enemy;  		//loop to mark collisions  		for (int c = 0; c < bb; c++) {  			ObjectStatus other = level.enemies [c];  			if (b != c && other.x == enemy.x && other.y == enemy.y) {  				other.destroyed = enemy.destroyed = true;  			}  		}  	}  	//Note if player was killed  }  //If no...  else {  	//Reject?  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (legalMove) {  	//Move player  	player.x = xDest;  	player.y = yDest;  	level.player = player;  	//Move all enemies iteratively' recording kills  	int bb = level.enemies.Count;  	for (int b = 0; b < bb; b++) {  		ObjectStatus enemy = level.enemies [b];  		if (enemy.destroyed)  			continue;  		int enemyXPos = enemy.x;  		int enemyYPos = enemy.y;  		int xDist = enemy.x - player.x;  		int yDist = enemy.y - player.y;  		float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  		if (theta >= -45 && theta <= 45) {  			enemyXPos -= 1;  		}  		else if (theta >= 135 || theta <= -135) {  			enemyXPos += 1;  		}  		if (theta >= 45 && theta <= 135) {  			enemyYPos -= 1;  		}  		else if (theta <= -45 && theta >= -135) {  			enemyYPos += 1;  		}  		enemy.x = enemyXPos;  		enemy.y = enemyYPos;  		level.enemies [b] = enemy;  		//loop to mark collisions  		for (int c = 0; c < bb; c++) {  			ObjectStatus other = level.enemies [c];  			if (b != c && other.x == enemy.x && other.y == enemy.y) {  				other.destroyed = enemy.destroyed = true;  			}  		}  	}  	//Note if player was killed  }  //If no...  else {  	//Reject?  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (legalMove) {  	//Move player  	player.x = xDest;  	player.y = yDest;  	level.player = player;  	//Move all enemies iteratively' recording kills  	int bb = level.enemies.Count;  	for (int b = 0; b < bb; b++) {  		ObjectStatus enemy = level.enemies [b];  		if (enemy.destroyed)  			continue;  		int enemyXPos = enemy.x;  		int enemyYPos = enemy.y;  		int xDist = enemy.x - player.x;  		int yDist = enemy.y - player.y;  		float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  		if (theta >= -45 && theta <= 45) {  			enemyXPos -= 1;  		}  		else if (theta >= 135 || theta <= -135) {  			enemyXPos += 1;  		}  		if (theta >= 45 && theta <= 135) {  			enemyYPos -= 1;  		}  		else if (theta <= -45 && theta >= -135) {  			enemyYPos += 1;  		}  		enemy.x = enemyXPos;  		enemy.y = enemyYPos;  		level.enemies [b] = enemy;  		//loop to mark collisions  		for (int c = 0; c < bb; c++) {  			ObjectStatus other = level.enemies [c];  			if (b != c && other.x == enemy.x && other.y == enemy.y) {  				other.destroyed = enemy.destroyed = true;  			}  		}  	}  	//Note if player was killed  }  //If no...  else {  	//Reject?  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (legalMove) {  	//Move player  	player.x = xDest;  	player.y = yDest;  	level.player = player;  	//Move all enemies iteratively' recording kills  	int bb = level.enemies.Count;  	for (int b = 0; b < bb; b++) {  		ObjectStatus enemy = level.enemies [b];  		if (enemy.destroyed)  			continue;  		int enemyXPos = enemy.x;  		int enemyYPos = enemy.y;  		int xDist = enemy.x - player.x;  		int yDist = enemy.y - player.y;  		float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  		if (theta >= -45 && theta <= 45) {  			enemyXPos -= 1;  		}  		else if (theta >= 135 || theta <= -135) {  			enemyXPos += 1;  		}  		if (theta >= 45 && theta <= 135) {  			enemyYPos -= 1;  		}  		else if (theta <= -45 && theta >= -135) {  			enemyYPos += 1;  		}  		enemy.x = enemyXPos;  		enemy.y = enemyYPos;  		level.enemies [b] = enemy;  		//loop to mark collisions  		for (int c = 0; c < bb; c++) {  			ObjectStatus other = level.enemies [c];  			if (b != c && other.x == enemy.x && other.y == enemy.y) {  				other.destroyed = enemy.destroyed = true;  			}  		}  	}  	//Note if player was killed  }  //If no...  else {  	//Reject?  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (legalMove) {  	//Move player  	player.x = xDest;  	player.y = yDest;  	level.player = player;  	//Move all enemies iteratively' recording kills  	int bb = level.enemies.Count;  	for (int b = 0; b < bb; b++) {  		ObjectStatus enemy = level.enemies [b];  		if (enemy.destroyed)  			continue;  		int enemyXPos = enemy.x;  		int enemyYPos = enemy.y;  		int xDist = enemy.x - player.x;  		int yDist = enemy.y - player.y;  		float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  		if (theta >= -45 && theta <= 45) {  			enemyXPos -= 1;  		}  		else if (theta >= 135 || theta <= -135) {  			enemyXPos += 1;  		}  		if (theta >= 45 && theta <= 135) {  			enemyYPos -= 1;  		}  		else if (theta <= -45 && theta >= -135) {  			enemyYPos += 1;  		}  		enemy.x = enemyXPos;  		enemy.y = enemyYPos;  		level.enemies [b] = enemy;  		//loop to mark collisions  		for (int c = 0; c < bb; c++) {  			ObjectStatus other = level.enemies [c];  			if (b != c && other.x == enemy.x && other.y == enemy.y) {  				other.destroyed = enemy.destroyed = true;  			}  		}  	}  	//Note if player was killed  }  //If no...  else {  	//Reject?  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (legalMove) {  	//Move player  	player.x = xDest;  	player.y = yDest;  	level.player = player;  	//Move all enemies iteratively' recording kills  	int bb = level.enemies.Count;  	for (int b = 0; b < bb; b++) {  		ObjectStatus enemy = level.enemies [b];  		if (enemy.destroyed)  			continue;  		int enemyXPos = enemy.x;  		int enemyYPos = enemy.y;  		int xDist = enemy.x - player.x;  		int yDist = enemy.y - player.y;  		float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  		if (theta >= -45 && theta <= 45) {  			enemyXPos -= 1;  		}  		else if (theta >= 135 || theta <= -135) {  			enemyXPos += 1;  		}  		if (theta >= 45 && theta <= 135) {  			enemyYPos -= 1;  		}  		else if (theta <= -45 && theta >= -135) {  			enemyYPos += 1;  		}  		enemy.x = enemyXPos;  		enemy.y = enemyYPos;  		level.enemies [b] = enemy;  		//loop to mark collisions  		for (int c = 0; c < bb; c++) {  			ObjectStatus other = level.enemies [c];  			if (b != c && other.x == enemy.x && other.y == enemy.y) {  				other.destroyed = enemy.destroyed = true;  			}  		}  	}  	//Note if player was killed  }  //If no...  else {  	//Reject?  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (legalMove) {  	//Move player  	player.x = xDest;  	player.y = yDest;  	level.player = player;  	//Move all enemies iteratively' recording kills  	int bb = level.enemies.Count;  	for (int b = 0; b < bb; b++) {  		ObjectStatus enemy = level.enemies [b];  		if (enemy.destroyed)  			continue;  		int enemyXPos = enemy.x;  		int enemyYPos = enemy.y;  		int xDist = enemy.x - player.x;  		int yDist = enemy.y - player.y;  		float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  		if (theta >= -45 && theta <= 45) {  			enemyXPos -= 1;  		}  		else if (theta >= 135 || theta <= -135) {  			enemyXPos += 1;  		}  		if (theta >= 45 && theta <= 135) {  			enemyYPos -= 1;  		}  		else if (theta <= -45 && theta >= -135) {  			enemyYPos += 1;  		}  		enemy.x = enemyXPos;  		enemy.y = enemyYPos;  		level.enemies [b] = enemy;  		//loop to mark collisions  		for (int c = 0; c < bb; c++) {  			ObjectStatus other = level.enemies [c];  			if (b != c && other.x == enemy.x && other.y == enemy.y) {  				other.destroyed = enemy.destroyed = true;  			}  		}  	}  	//Note if player was killed  }  //If no...  else {  	//Reject?  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: for (int b = 0; b < bb; b++) {  	ObjectStatus enemy = level.enemies [b];  	if (enemy.destroyed)  		continue;  	int enemyXPos = enemy.x;  	int enemyYPos = enemy.y;  	int xDist = enemy.x - player.x;  	int yDist = enemy.y - player.y;  	float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  	if (theta >= -45 && theta <= 45) {  		enemyXPos -= 1;  	}  	else if (theta >= 135 || theta <= -135) {  		enemyXPos += 1;  	}  	if (theta >= 45 && theta <= 135) {  		enemyYPos -= 1;  	}  	else if (theta <= -45 && theta >= -135) {  		enemyYPos += 1;  	}  	enemy.x = enemyXPos;  	enemy.y = enemyYPos;  	level.enemies [b] = enemy;  	//loop to mark collisions  	for (int c = 0; c < bb; c++) {  		ObjectStatus other = level.enemies [c];  		if (b != c && other.x == enemy.x && other.y == enemy.y) {  			other.destroyed = enemy.destroyed = true;  		}  	}  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: for (int b = 0; b < bb; b++) {  	ObjectStatus enemy = level.enemies [b];  	if (enemy.destroyed)  		continue;  	int enemyXPos = enemy.x;  	int enemyYPos = enemy.y;  	int xDist = enemy.x - player.x;  	int yDist = enemy.y - player.y;  	float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  	if (theta >= -45 && theta <= 45) {  		enemyXPos -= 1;  	}  	else if (theta >= 135 || theta <= -135) {  		enemyXPos += 1;  	}  	if (theta >= 45 && theta <= 135) {  		enemyYPos -= 1;  	}  	else if (theta <= -45 && theta >= -135) {  		enemyYPos += 1;  	}  	enemy.x = enemyXPos;  	enemy.y = enemyYPos;  	level.enemies [b] = enemy;  	//loop to mark collisions  	for (int c = 0; c < bb; c++) {  		ObjectStatus other = level.enemies [c];  		if (b != c && other.x == enemy.x && other.y == enemy.y) {  			other.destroyed = enemy.destroyed = true;  		}  	}  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: for (int b = 0; b < bb; b++) {  	ObjectStatus enemy = level.enemies [b];  	if (enemy.destroyed)  		continue;  	int enemyXPos = enemy.x;  	int enemyYPos = enemy.y;  	int xDist = enemy.x - player.x;  	int yDist = enemy.y - player.y;  	float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  	if (theta >= -45 && theta <= 45) {  		enemyXPos -= 1;  	}  	else if (theta >= 135 || theta <= -135) {  		enemyXPos += 1;  	}  	if (theta >= 45 && theta <= 135) {  		enemyYPos -= 1;  	}  	else if (theta <= -45 && theta >= -135) {  		enemyYPos += 1;  	}  	enemy.x = enemyXPos;  	enemy.y = enemyYPos;  	level.enemies [b] = enemy;  	//loop to mark collisions  	for (int c = 0; c < bb; c++) {  		ObjectStatus other = level.enemies [c];  		if (b != c && other.x == enemy.x && other.y == enemy.y) {  			other.destroyed = enemy.destroyed = true;  		}  	}  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: for (int b = 0; b < bb; b++) {  	ObjectStatus enemy = level.enemies [b];  	if (enemy.destroyed)  		continue;  	int enemyXPos = enemy.x;  	int enemyYPos = enemy.y;  	int xDist = enemy.x - player.x;  	int yDist = enemy.y - player.y;  	float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  	if (theta >= -45 && theta <= 45) {  		enemyXPos -= 1;  	}  	else if (theta >= 135 || theta <= -135) {  		enemyXPos += 1;  	}  	if (theta >= 45 && theta <= 135) {  		enemyYPos -= 1;  	}  	else if (theta <= -45 && theta >= -135) {  		enemyYPos += 1;  	}  	enemy.x = enemyXPos;  	enemy.y = enemyYPos;  	level.enemies [b] = enemy;  	//loop to mark collisions  	for (int c = 0; c < bb; c++) {  		ObjectStatus other = level.enemies [c];  		if (b != c && other.x == enemy.x && other.y == enemy.y) {  			other.destroyed = enemy.destroyed = true;  		}  	}  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: for (int b = 0; b < bb; b++) {  	ObjectStatus enemy = level.enemies [b];  	if (enemy.destroyed)  		continue;  	int enemyXPos = enemy.x;  	int enemyYPos = enemy.y;  	int xDist = enemy.x - player.x;  	int yDist = enemy.y - player.y;  	float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  	if (theta >= -45 && theta <= 45) {  		enemyXPos -= 1;  	}  	else if (theta >= 135 || theta <= -135) {  		enemyXPos += 1;  	}  	if (theta >= 45 && theta <= 135) {  		enemyYPos -= 1;  	}  	else if (theta <= -45 && theta >= -135) {  		enemyYPos += 1;  	}  	enemy.x = enemyXPos;  	enemy.y = enemyYPos;  	level.enemies [b] = enemy;  	//loop to mark collisions  	for (int c = 0; c < bb; c++) {  		ObjectStatus other = level.enemies [c];  		if (b != c && other.x == enemy.x && other.y == enemy.y) {  			other.destroyed = enemy.destroyed = true;  		}  	}  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: for (int b = 0; b < bb; b++) {  	ObjectStatus enemy = level.enemies [b];  	if (enemy.destroyed)  		continue;  	int enemyXPos = enemy.x;  	int enemyYPos = enemy.y;  	int xDist = enemy.x - player.x;  	int yDist = enemy.y - player.y;  	float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  	if (theta >= -45 && theta <= 45) {  		enemyXPos -= 1;  	}  	else if (theta >= 135 || theta <= -135) {  		enemyXPos += 1;  	}  	if (theta >= 45 && theta <= 135) {  		enemyYPos -= 1;  	}  	else if (theta <= -45 && theta >= -135) {  		enemyYPos += 1;  	}  	enemy.x = enemyXPos;  	enemy.y = enemyYPos;  	level.enemies [b] = enemy;  	//loop to mark collisions  	for (int c = 0; c < bb; c++) {  		ObjectStatus other = level.enemies [c];  		if (b != c && other.x == enemy.x && other.y == enemy.y) {  			other.destroyed = enemy.destroyed = true;  		}  	}  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: for (int b = 0; b < bb; b++) {  	ObjectStatus enemy = level.enemies [b];  	if (enemy.destroyed)  		continue;  	int enemyXPos = enemy.x;  	int enemyYPos = enemy.y;  	int xDist = enemy.x - player.x;  	int yDist = enemy.y - player.y;  	float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  	if (theta >= -45 && theta <= 45) {  		enemyXPos -= 1;  	}  	else if (theta >= 135 || theta <= -135) {  		enemyXPos += 1;  	}  	if (theta >= 45 && theta <= 135) {  		enemyYPos -= 1;  	}  	else if (theta <= -45 && theta >= -135) {  		enemyYPos += 1;  	}  	enemy.x = enemyXPos;  	enemy.y = enemyYPos;  	level.enemies [b] = enemy;  	//loop to mark collisions  	for (int c = 0; c < bb; c++) {  		ObjectStatus other = level.enemies [c];  		if (b != c && other.x == enemy.x && other.y == enemy.y) {  			other.destroyed = enemy.destroyed = true;  		}  	}  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: for (int b = 0; b < bb; b++) {  	ObjectStatus enemy = level.enemies [b];  	if (enemy.destroyed)  		continue;  	int enemyXPos = enemy.x;  	int enemyYPos = enemy.y;  	int xDist = enemy.x - player.x;  	int yDist = enemy.y - player.y;  	float theta = Mathf.Atan2 ((float)yDist' (float)xDist) * Mathf.Rad2Deg;  	if (theta >= -45 && theta <= 45) {  		enemyXPos -= 1;  	}  	else if (theta >= 135 || theta <= -135) {  		enemyXPos += 1;  	}  	if (theta >= 45 && theta <= 135) {  		enemyYPos -= 1;  	}  	else if (theta <= -45 && theta >= -135) {  		enemyYPos += 1;  	}  	enemy.x = enemyXPos;  	enemy.y = enemyYPos;  	level.enemies [b] = enemy;  	//loop to mark collisions  	for (int c = 0; c < bb; c++) {  		ObjectStatus other = level.enemies [c];  		if (b != c && other.x == enemy.x && other.y == enemy.y) {  			other.destroyed = enemy.destroyed = true;  		}  	}  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (theta >= -45 && theta <= 45) {  	enemyXPos -= 1;  }  else if (theta >= 135 || theta <= -135) {  	enemyXPos += 1;  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (theta >= -45 && theta <= 45) {  	enemyXPos -= 1;  }  else if (theta >= 135 || theta <= -135) {  	enemyXPos += 1;  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (theta >= -45 && theta <= 45) {  	enemyXPos -= 1;  }  else if (theta >= 135 || theta <= -135) {  	enemyXPos += 1;  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (theta >= -45 && theta <= 45) {  	enemyXPos -= 1;  }  else if (theta >= 135 || theta <= -135) {  	enemyXPos += 1;  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (theta >= 135 || theta <= -135) {  	enemyXPos += 1;  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (theta >= 135 || theta <= -135) {  	enemyXPos += 1;  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (theta >= 45 && theta <= 135) {  	enemyYPos -= 1;  }  else if (theta <= -45 && theta >= -135) {  	enemyYPos += 1;  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (theta >= 45 && theta <= 135) {  	enemyYPos -= 1;  }  else if (theta <= -45 && theta >= -135) {  	enemyYPos += 1;  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (theta >= 45 && theta <= 135) {  	enemyYPos -= 1;  }  else if (theta <= -45 && theta >= -135) {  	enemyYPos += 1;  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (theta >= 45 && theta <= 135) {  	enemyYPos -= 1;  }  else if (theta <= -45 && theta >= -135) {  	enemyYPos += 1;  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (theta <= -45 && theta >= -135) {  	enemyYPos += 1;  }  
Magic Number,strange.examples.strangerobots.game,StartTurnCommand,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\controller\StartTurnCommand.cs,Execute,The following statement contains a magic number: if (theta <= -45 && theta >= -135) {  	enemyYPos += 1;  }  
Magic Number,strange.examples.strangerobots.game,GamePieceView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\view\GamePieceView.cs,Update,The following statement contains a magic number: if (startTime != 0) {  	if (phase == 1) {  		float fracJourney = (Time.time - startTime) / journeySeconds;  		Quaternion q = Quaternion.Slerp (startRot' endRot' fracJourney);  		transform.rotation = q;  		if (Quaternion.Angle (transform.rotation' endRot) < .1f) {  			startTime = Time.time;  			transform.rotation = endRot;  			phase = 2;  		}  	}  	if (phase == 2) {  		float fracJourney = (Time.time - startTime) / journeySeconds;  		Vector3 pos = Vector3.Lerp (startPos' endPos' fracJourney);  		transform.position = pos;  		if (Vector3.Distance (pos' endPos) < .1f) {  			startTime = 0;  			phase = 0;  			endAnimationSignal.Dispatch ();  		}  	}  }  
Magic Number,strange.examples.strangerobots.game,GamePieceView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\view\GamePieceView.cs,Update,The following statement contains a magic number: if (startTime != 0) {  	if (phase == 1) {  		float fracJourney = (Time.time - startTime) / journeySeconds;  		Quaternion q = Quaternion.Slerp (startRot' endRot' fracJourney);  		transform.rotation = q;  		if (Quaternion.Angle (transform.rotation' endRot) < .1f) {  			startTime = Time.time;  			transform.rotation = endRot;  			phase = 2;  		}  	}  	if (phase == 2) {  		float fracJourney = (Time.time - startTime) / journeySeconds;  		Vector3 pos = Vector3.Lerp (startPos' endPos' fracJourney);  		transform.position = pos;  		if (Vector3.Distance (pos' endPos) < .1f) {  			startTime = 0;  			phase = 0;  			endAnimationSignal.Dispatch ();  		}  	}  }  
Magic Number,strange.examples.strangerobots.game,GamePieceView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\view\GamePieceView.cs,Update,The following statement contains a magic number: if (phase == 1) {  	float fracJourney = (Time.time - startTime) / journeySeconds;  	Quaternion q = Quaternion.Slerp (startRot' endRot' fracJourney);  	transform.rotation = q;  	if (Quaternion.Angle (transform.rotation' endRot) < .1f) {  		startTime = Time.time;  		transform.rotation = endRot;  		phase = 2;  	}  }  
Magic Number,strange.examples.strangerobots.game,GamePieceView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\view\GamePieceView.cs,Update,The following statement contains a magic number: if (Quaternion.Angle (transform.rotation' endRot) < .1f) {  	startTime = Time.time;  	transform.rotation = endRot;  	phase = 2;  }  
Magic Number,strange.examples.strangerobots.game,GamePieceView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\view\GamePieceView.cs,Update,The following statement contains a magic number: phase = 2;  
Magic Number,strange.examples.strangerobots.game,GamePieceView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\view\GamePieceView.cs,Update,The following statement contains a magic number: if (phase == 2) {  	float fracJourney = (Time.time - startTime) / journeySeconds;  	Vector3 pos = Vector3.Lerp (startPos' endPos' fracJourney);  	transform.position = pos;  	if (Vector3.Distance (pos' endPos) < .1f) {  		startTime = 0;  		phase = 0;  		endAnimationSignal.Dispatch ();  	}  }  
Missing Default,UnityTest,Assertions,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Assertions.cs,CheckAssertions,The following switch statement is missing a default case: switch (comparer.compareToType) {  case ComparerBase.CompareToType.CompareToObject:  	message += " (" + comparer.other + ")." + comparer.otherPropertyPath + " failed.";  	break;  case ComparerBase.CompareToType.CompareToConstantValue:  	message += comparer.ConstValue + " failed.";  	break;  case ComparerBase.CompareToType.CompareToNull:  	message += " failed.";  	break;  }  
Missing Default,UnityTest,ColliderComparer,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\ColliderComparer.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.Intersects:  	return a.Intersects (b);  case CompareType.DoesNotIntersect:  	return !a.Intersects (b);  }  
Missing Default,UnityTest,FloatComparer,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\FloatComparer.cs,Compare,The following switch statement is missing a default case: switch (compareTypes) {  case CompareTypes.Equal:  	return Math.Abs (a - b) < floatingPointError;  case CompareTypes.NotEqual:  	return Math.Abs (a - b) > floatingPointError;  case CompareTypes.Greater:  	return a > b;  case CompareTypes.Less:  	return a < b;  }  
Missing Default,UnityTest,IntComparer,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\IntComparer.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.Equal:  	return a == b;  case CompareType.NotEqual:  	return a != b;  case CompareType.Greater:  	return a > b;  case CompareType.GreaterOrEqual:  	return a >= b;  case CompareType.Less:  	return a < b;  case CompareType.LessOrEqual:  	return a <= b;  }  
Missing Default,UnityTest,IsRenderedByCamera,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\IsRenderedByCamera.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.IsVisible:  	return isVisible;  case CompareType.IsNotVisible:  	return !isVisible;  }  
Missing Default,UnityTest,StringComparer,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\StringComparer.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.Equal:  	return String.Compare (a' b' comparisonType) == 0;  case CompareType.NotEqual:  	return String.Compare (a' b' comparisonType) != 0;  case CompareType.Longer:  	return String.Compare (a' b' comparisonType) > 0;  case CompareType.Shorter:  	return String.Compare (a' b' comparisonType) < 0;  }  
Missing Default,UnityTest,Vector2Comparer,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\Vector2Comparer.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.MagnitudeEquals:  	return AreVectorMagnitudeEqual (a.magnitude' b.magnitude' floatingPointError);  case CompareType.MagnitudeNotEquals:  	return !AreVectorMagnitudeEqual (a.magnitude' b.magnitude' floatingPointError);  }  
Missing Default,UnityTest,Vector3Comparer,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\Vector3Comparer.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.MagnitudeEquals:  	return AreVectorMagnitudeEqual (a.magnitude' b.magnitude' floatingPointError);  case CompareType.MagnitudeNotEquals:  	return !AreVectorMagnitudeEqual (a.magnitude' b.magnitude' floatingPointError);  }  
Missing Default,UnityTest,Vector4Comparer,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\Assertions\Comparers\Vector4Comparer.cs,Compare,The following switch statement is missing a default case: switch (compareType) {  case CompareType.MagnitudeEquals:  	return AreVectorMagnitudeEqual (a.magnitude' b.magnitude' floatingPointError);  case CompareType.MagnitudeNotEquals:  	return !AreVectorMagnitudeEqual (a.magnitude' b.magnitude' floatingPointError);  }  
Missing Default,UnityTest,TestRunner,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\TestRunner.cs,StateMachine,The following switch statement is missing a default case: switch (testState) {  case TestState.Success:  	LogMessage (finishedMessage);  	FinishTest (TestResult.ResultType.Success);  	break;  case TestState.Failure:  	LogMessage (failedMessage);  	FinishTest (TestResult.ResultType.Failed);  	break;  case TestState.Exception:  	LogMessage (failedExceptionMessage);  	FinishTest (TestResult.ResultType.FailedException);  	break;  case TestState.Timeout:  	LogMessage (timeoutMessage);  	FinishTest (TestResult.ResultType.Timeout);  	break;  case TestState.Ignored:  	LogMessage (ignoredMessage);  	FinishTest (TestResult.ResultType.Ignored);  	break;  }  
Missing Default,UnityTest.IntegrationTestRunner,XmlResultWriter,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\ResultWriter\XmlResultWriter.cs,WriteResultElement,The following switch statement is missing a default case: switch (result.ResultState) {  case TestResultState.Ignored:  case TestResultState.NotRunnable:  case TestResultState.Skipped:  	WriteReasonElement (result);  	break;  case TestResultState.Failure:  case TestResultState.Error:  case TestResultState.Cancelled:  	WriteFailureElement (result);  	break;  case TestResultState.Success:  case TestResultState.Inconclusive:  	if (result.Message != null)  		WriteReasonElement (result);  	break;  }  
Missing Default,strange.examples.strangerobots.game,GameDebugView,C:\repos\strangeioc_strangerobots\StrangeRobots\Assets\scripts\strangerobots\game\view\GameDebugView.cs,OnGUI,The following switch statement is missing a default case: switch (state) {  case ScreenState.IDLE:  	if (GUI.Button (screenUtil.GetScreenRect (.4f' .45f' .2f' .1f)' "Start Game")) {  		startGameSignal.Dispatch ();  	}  	GUI.TextField (screenUtil.GetScreenRect (0f' 0f' .4f' .05f)' "Last Score: " + score);  	break;  case ScreenState.START_LEVEL:  	if (GUI.Button (screenUtil.GetScreenRect (.4f' .45f' .2f' .05f)' "Start Level " + level)) {  		startLevelSignal.Dispatch ();  	}  	GUI.TextField (screenUtil.GetScreenRect (.4f' .5f' .4f' .05f)' "Score: " + score);  	GUI.TextField (screenUtil.GetScreenRect (.4f' .55f' .4f' .05f)' "Lives remaining: " + lives);  	break;  case ScreenState.END_GAME:  	if (GUI.Button (screenUtil.GetScreenRect (.45f' .1f' .2f' .1f)' "Play Again")) {  		startGameSignal.Dispatch ();  	}  	GUI.TextField (screenUtil.GetScreenRect (.45f' .2f' .4f' .05f)' "Final Score: " + score);  	break;  case ScreenState.LEVEL_IN_PROGRESS:  	GUI.TextField (screenUtil.GetScreenRect (0f' 0f' .4f' .05f)' "Score: " + score);  	GUI.TextField (screenUtil.GetScreenRect (.6f' 0f' .4f' .05f)' "Lives Remaining: " + lives);  	GUI.TextField (screenUtil.GetScreenRect (0f' .95f' .2f' .05f)' "Level: " + level);  	break;  }  
