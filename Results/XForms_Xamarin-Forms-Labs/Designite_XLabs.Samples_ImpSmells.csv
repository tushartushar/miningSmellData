Implementation smell,Namespace,Class,File,Method,Description
Long Method,XLabs.Samples.Pages.Controls,ButtonGroupPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ButtonGroupPage.cs,ButtonGroupPage,The method has 125 lines of code.
Long Method,XLabs.Samples.Pages.Controls,IconButtonPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconButtonPage.cs,IconButtonPage,The method has 148 lines of code.
Long Method,XLabs.Samples.Pages.Controls,IconLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconLabelPage.cs,IconLabelPage,The method has 175 lines of code.
Long Method,XLabs.Samples.Pages.Services,ExtendedDeviceInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\ExtendedDeviceInfoPage.cs,ExtendedDeviceInfoPage,The method has 201 lines of code.
Complex Method,XLabs.Samples.Pages.Services,ExtendedDeviceInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\ExtendedDeviceInfoPage.cs,ExtendedDeviceInfoPage,Cyclomatic complexity of the method is 9
Long Parameter List,XLabs.Samples.ViewModel,BaseViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\BaseViewModel.cs,SetField,The method has 5 parameters. Parameters: field' value' action' additionalprops' propertyName
Long Identifier,XLabs.Samples.ViewModel,MvvmSampleViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\MvvmSampleViewModel.cs,,The length of the parameter _navigateToViewModelButtonText is 30.
Long Statement,XLabs.Samples,App,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\App.xaml.cs,GetMainPage,The length of the statement  "            mainTab.CurrentPageChanged += () => Debug.WriteLine("ExtendedTabbedPage CurrentPageChanged {0}"' mainTab.CurrentPage.Title); " is 124.
Long Statement,XLabs.Samples,App,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\App.xaml.cs,GetServicesPage,The length of the statement  "                        await mainPage.Navigation.PushAsync(new FontManagerPage(Resolver.Resolve<IDisplay>()' Resolver.Resolve<IFontManager>())); " is 121.
Long Statement,XLabs.Samples.Pages.Services,EmailPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\EmailPage.cs,TakePicture,The length of the statement  "			return await _mediaPicker.TakePhotoAsync(new CameraMediaStorageOptions { DefaultCamera = CameraDevice.Front' MaxPixelDimension = 400 }).ContinueWith(t => " is 153.
Long Statement,XLabs.Samples.ViewModel,CameraViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\CameraViewModel.cs,TakePicture,The length of the statement  "			return await _mediaPicker.TakePhotoAsync(new CameraMediaStorageOptions { DefaultCamera = CameraDevice.Front' MaxPixelDimension = 400 }).ContinueWith(t => " is 153.
Long Statement,XLabs.Samples.ViewModel,GeolocatorViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\GeolocatorViewModel.cs,EmailPosition,The length of the statement  "				//string.Format("<html><head><title>My location during {1}.</title></head><body><a href=\"{0}\"> Timezone: {2}.</a></body></html>"' position.ToUri().ToString()' position.Timestamp' System.TimeZoneInfo.Local.DisplayName)'  " is 220.
Magic Number,XLabs.Samples.Pages.Controls,ButtonGroupPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ButtonGroupPage.cs,ButtonGroupPage,The following statement contains a magic number: var buttonGroupQuantity = new ButtonGroup              {                  IsNumber = true'                  Rounded = true'                  ViewBackgroundColor = Color.Black'                  BorderColor = Color.White'                  OutlineColor = Color.Black'                  BackgroundColor = Device.OnPlatform(Color.Accent' Color.Accent' Color.White)'                  TextColor = Device.OnPlatform(Color.White' Color.White' Color.Black)'                  SelectedTextColor = Device.OnPlatform(Color.Black' Color.White' Color.White)'                  SelectedBackgroundColor = Device.OnPlatform(Color.White' Color.Black' Color.Black)'                  SelectedBorderColor = Device.OnPlatform(Color.White' Color.Silver' Color.Silver)'                  SelectedFrameBackgroundColor = Device.OnPlatform(Color.Black' Color.Black' Color.Black)'                  SelectedIndex = 3'                  HorizontalOptions = LayoutOptions.FillAndExpand'                  VerticalOptions = LayoutOptions.Center'                  Padding = new Thickness(5)'                  Font = Device.OnPlatform(                      Font.OfSize("HelveticaNeue-Light"' NamedSize.Medium)'                      Font.OfSize("Roboto Light"' NamedSize.Medium)'                      Font.OfSize("Segoe WP Light"' NamedSize.Medium))'                  Items = buttonGroupQuantityItems'              };
Magic Number,XLabs.Samples.Pages.Controls,ButtonGroupPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ButtonGroupPage.cs,ButtonGroupPage,The following statement contains a magic number: var buttonGroupQuantity = new ButtonGroup              {                  IsNumber = true'                  Rounded = true'                  ViewBackgroundColor = Color.Black'                  BorderColor = Color.White'                  OutlineColor = Color.Black'                  BackgroundColor = Device.OnPlatform(Color.Accent' Color.Accent' Color.White)'                  TextColor = Device.OnPlatform(Color.White' Color.White' Color.Black)'                  SelectedTextColor = Device.OnPlatform(Color.Black' Color.White' Color.White)'                  SelectedBackgroundColor = Device.OnPlatform(Color.White' Color.Black' Color.Black)'                  SelectedBorderColor = Device.OnPlatform(Color.White' Color.Silver' Color.Silver)'                  SelectedFrameBackgroundColor = Device.OnPlatform(Color.Black' Color.Black' Color.Black)'                  SelectedIndex = 3'                  HorizontalOptions = LayoutOptions.FillAndExpand'                  VerticalOptions = LayoutOptions.Center'                  Padding = new Thickness(5)'                  Font = Device.OnPlatform(                      Font.OfSize("HelveticaNeue-Light"' NamedSize.Medium)'                      Font.OfSize("Roboto Light"' NamedSize.Medium)'                      Font.OfSize("Segoe WP Light"' NamedSize.Medium))'                  Items = buttonGroupQuantityItems'              };
Magic Number,XLabs.Samples.Pages.Controls,ButtonGroupPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ButtonGroupPage.cs,ButtonGroupPage,The following statement contains a magic number: var buttonGroupTagCloud = new ButtonGroup              {                  Rounded = false'                  IsNumber = false'                  ViewBackgroundColor = Color.White'                  BorderColor = Color.White'                  OutlineColor = Color.Black'                  BackgroundColor = Device.OnPlatform(Color.Accent' Color.Accent' Color.White)'                  TextColor = Device.OnPlatform(Color.White' Color.Black' Color.Black)'                  SelectedTextColor = Device.OnPlatform(Color.Black' Color.White' Color.White)'                  SelectedBackgroundColor = Device.OnPlatform(Color.White' Color.Accent' Color.Accent)'                  SelectedBorderColor = Device.OnPlatform(Color.White' Color.Accent' Color.Accent)'                  SelectedFrameBackgroundColor = Device.OnPlatform(Color.White' Color.Accent' Color.Accent)'                  SelectedIndex = 3'                  HorizontalOptions = LayoutOptions.FillAndExpand'                  VerticalOptions = LayoutOptions.Center'                  Padding = new Thickness(5)'                  Font = Device.OnPlatform(                      Font.OfSize("HelveticaNeue-Light"' NamedSize.Medium)'                      Font.OfSize("Roboto Light"' NamedSize.Medium)'                      Font.OfSize("Segoe WP Light"' NamedSize.Medium))'                  Items = buttonGroupTagCloudItems'              };
Magic Number,XLabs.Samples.Pages.Controls,ButtonGroupPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ButtonGroupPage.cs,ButtonGroupPage,The following statement contains a magic number: var buttonGroupTagCloud = new ButtonGroup              {                  Rounded = false'                  IsNumber = false'                  ViewBackgroundColor = Color.White'                  BorderColor = Color.White'                  OutlineColor = Color.Black'                  BackgroundColor = Device.OnPlatform(Color.Accent' Color.Accent' Color.White)'                  TextColor = Device.OnPlatform(Color.White' Color.Black' Color.Black)'                  SelectedTextColor = Device.OnPlatform(Color.Black' Color.White' Color.White)'                  SelectedBackgroundColor = Device.OnPlatform(Color.White' Color.Accent' Color.Accent)'                  SelectedBorderColor = Device.OnPlatform(Color.White' Color.Accent' Color.Accent)'                  SelectedFrameBackgroundColor = Device.OnPlatform(Color.White' Color.Accent' Color.Accent)'                  SelectedIndex = 3'                  HorizontalOptions = LayoutOptions.FillAndExpand'                  VerticalOptions = LayoutOptions.Center'                  Padding = new Thickness(5)'                  Font = Device.OnPlatform(                      Font.OfSize("HelveticaNeue-Light"' NamedSize.Medium)'                      Font.OfSize("Roboto Light"' NamedSize.Medium)'                      Font.OfSize("Segoe WP Light"' NamedSize.Medium))'                  Items = buttonGroupTagCloudItems'              };
Magic Number,XLabs.Samples.Pages.Controls,ButtonGroupPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ButtonGroupPage.cs,ButtonGroupPage,The following statement contains a magic number: var buttonGroupMovieStartTimes = new ButtonGroup              {                  Rounded = true'                  IsNumber = false'                  ViewBackgroundColor = Color.Black'                  BackgroundColor = Color.Silver'                  TextColor = Color.White'                  BorderColor = Color.White'                  OutlineColor = Color.Black'                  SelectedBackgroundColor = Color.Silver'                  SelectedTextColor = Color.Black'                  SelectedBorderColor = Color.Black'                  SelectedFrameBackgroundColor = Device.OnPlatform(Color.Black' Color.Black' Color.Black)'                  SelectedIndex = 3'                  HorizontalOptions = LayoutOptions.FillAndExpand'                  VerticalOptions = LayoutOptions.Center'                  Padding = new Thickness(5)'                  Font = Device.OnPlatform(                          Font.OfSize("HelveticaNeue-Light"' NamedSize.Medium)'                          Font.OfSize("Roboto Light"' NamedSize.Medium)'                          Font.OfSize("Segoe WP Light"' NamedSize.Medium))'                  Items = buttonGroupMovieStartTimesItems'              };
Magic Number,XLabs.Samples.Pages.Controls,ButtonGroupPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ButtonGroupPage.cs,ButtonGroupPage,The following statement contains a magic number: var buttonGroupMovieStartTimes = new ButtonGroup              {                  Rounded = true'                  IsNumber = false'                  ViewBackgroundColor = Color.Black'                  BackgroundColor = Color.Silver'                  TextColor = Color.White'                  BorderColor = Color.White'                  OutlineColor = Color.Black'                  SelectedBackgroundColor = Color.Silver'                  SelectedTextColor = Color.Black'                  SelectedBorderColor = Color.Black'                  SelectedFrameBackgroundColor = Device.OnPlatform(Color.Black' Color.Black' Color.Black)'                  SelectedIndex = 3'                  HorizontalOptions = LayoutOptions.FillAndExpand'                  VerticalOptions = LayoutOptions.Center'                  Padding = new Thickness(5)'                  Font = Device.OnPlatform(                          Font.OfSize("HelveticaNeue-Light"' NamedSize.Medium)'                          Font.OfSize("Roboto Light"' NamedSize.Medium)'                          Font.OfSize("Segoe WP Light"' NamedSize.Medium))'                  Items = buttonGroupMovieStartTimesItems'              };
Magic Number,XLabs.Samples.Pages.Controls,ButtonGroupPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ButtonGroupPage.cs,ButtonGroupPage,The following statement contains a magic number: Padding = new Thickness(10' Device.OnPlatform(20' 0' 0)' 10' 5);
Magic Number,XLabs.Samples.Pages.Controls,ButtonGroupPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ButtonGroupPage.cs,ButtonGroupPage,The following statement contains a magic number: Padding = new Thickness(10' Device.OnPlatform(20' 0' 0)' 10' 5);
Magic Number,XLabs.Samples.Pages.Controls,ButtonGroupPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ButtonGroupPage.cs,ButtonGroupPage,The following statement contains a magic number: Padding = new Thickness(10' Device.OnPlatform(20' 0' 0)' 10' 5);
Magic Number,XLabs.Samples.Pages.Controls,ButtonGroupPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ButtonGroupPage.cs,ButtonGroupPage,The following statement contains a magic number: Padding = new Thickness(10' Device.OnPlatform(20' 0' 0)' 10' 5);
Magic Number,XLabs.Samples.Pages.Controls,ButtonPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ButtonPage.xaml.cs,ButtonPage,The following statement contains a magic number: FacebookButton.Font = Font.OfSize("Open 24 Display St"' 20);
Magic Number,XLabs.Samples.Pages.Controls,CalendarPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\CalendarPage.xaml.cs,CalendarPage,The following statement contains a magic number: _calendarView = new CalendarView() {  				//BackgroundColor = Color.Blue  				MinDate = CalendarView.FirstDayOfMonth(DateTime.Now)'  				MaxDate = CalendarView.LastDayOfMonth(DateTime.Now.AddMonths(3))'  				HighlightedDateBackgroundColor = Color.FromRgb(227	'227'	227	)'  				ShouldHighlightDaysOfWeekLabels = false'  				SelectionBackgroundStyle = CalendarView.BackgroundStyle.CircleFill'  				TodayBackgroundStyle = CalendarView.BackgroundStyle.CircleOutline'  				HighlightedDaysOfWeek = new DayOfWeek[]{DayOfWeek.Saturday'DayOfWeek.Sunday}'  				ShowNavigationArrows = true'  				MonthTitleFont = Font.OfSize("Open 24 Display St"'NamedSize.Medium)    			};
Magic Number,XLabs.Samples.Pages.Controls,CalendarPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\CalendarPage.xaml.cs,CalendarPage,The following statement contains a magic number: _calendarView = new CalendarView() {  				//BackgroundColor = Color.Blue  				MinDate = CalendarView.FirstDayOfMonth(DateTime.Now)'  				MaxDate = CalendarView.LastDayOfMonth(DateTime.Now.AddMonths(3))'  				HighlightedDateBackgroundColor = Color.FromRgb(227	'227'	227	)'  				ShouldHighlightDaysOfWeekLabels = false'  				SelectionBackgroundStyle = CalendarView.BackgroundStyle.CircleFill'  				TodayBackgroundStyle = CalendarView.BackgroundStyle.CircleOutline'  				HighlightedDaysOfWeek = new DayOfWeek[]{DayOfWeek.Saturday'DayOfWeek.Sunday}'  				ShowNavigationArrows = true'  				MonthTitleFont = Font.OfSize("Open 24 Display St"'NamedSize.Medium)    			};
Magic Number,XLabs.Samples.Pages.Controls,CalendarPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\CalendarPage.xaml.cs,CalendarPage,The following statement contains a magic number: _calendarView = new CalendarView() {  				//BackgroundColor = Color.Blue  				MinDate = CalendarView.FirstDayOfMonth(DateTime.Now)'  				MaxDate = CalendarView.LastDayOfMonth(DateTime.Now.AddMonths(3))'  				HighlightedDateBackgroundColor = Color.FromRgb(227	'227'	227	)'  				ShouldHighlightDaysOfWeekLabels = false'  				SelectionBackgroundStyle = CalendarView.BackgroundStyle.CircleFill'  				TodayBackgroundStyle = CalendarView.BackgroundStyle.CircleOutline'  				HighlightedDaysOfWeek = new DayOfWeek[]{DayOfWeek.Saturday'DayOfWeek.Sunday}'  				ShowNavigationArrows = true'  				MonthTitleFont = Font.OfSize("Open 24 Display St"'NamedSize.Medium)    			};
Magic Number,XLabs.Samples.Pages.Controls,CalendarPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\CalendarPage.xaml.cs,CalendarPage,The following statement contains a magic number: _calendarView = new CalendarView() {  				//BackgroundColor = Color.Blue  				MinDate = CalendarView.FirstDayOfMonth(DateTime.Now)'  				MaxDate = CalendarView.LastDayOfMonth(DateTime.Now.AddMonths(3))'  				HighlightedDateBackgroundColor = Color.FromRgb(227	'227'	227	)'  				ShouldHighlightDaysOfWeekLabels = false'  				SelectionBackgroundStyle = CalendarView.BackgroundStyle.CircleFill'  				TodayBackgroundStyle = CalendarView.BackgroundStyle.CircleOutline'  				HighlightedDaysOfWeek = new DayOfWeek[]{DayOfWeek.Saturday'DayOfWeek.Sunday}'  				ShowNavigationArrows = true'  				MonthTitleFont = Font.OfSize("Open 24 Display St"'NamedSize.Medium)    			};
Magic Number,XLabs.Samples.Pages.Controls,CalendarPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\CalendarPage.xaml.cs,CalendarPage,The following statement contains a magic number: _relativeLayout.Children.Add(_calendarView'  				Constraint.Constant(0)'  				Constraint.Constant(0)'  				Constraint.RelativeToParent(p => p.Width)'  				Constraint.RelativeToParent(p => p.Height * 2/3));
Magic Number,XLabs.Samples.Pages.Controls,CalendarPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\CalendarPage.xaml.cs,CalendarPage,The following statement contains a magic number: _relativeLayout.Children.Add(_calendarView'  				Constraint.Constant(0)'  				Constraint.Constant(0)'  				Constraint.RelativeToParent(p => p.Width)'  				Constraint.RelativeToParent(p => p.Height * 2/3));
Magic Number,XLabs.Samples.Pages.Controls,CalendarPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\CalendarPage.xaml.cs,CalendarPage,The following statement contains a magic number: _relativeLayout.Children.Add(_stacker'  				Constraint.Constant(0)'  				Constraint.RelativeToParent(p => p.Height *2/3)'  				Constraint.RelativeToParent(p => p.Width)'  				Constraint.RelativeToParent(p => p.Height *1/3)  			);
Magic Number,XLabs.Samples.Pages.Controls,CalendarPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\CalendarPage.xaml.cs,CalendarPage,The following statement contains a magic number: _relativeLayout.Children.Add(_stacker'  				Constraint.Constant(0)'  				Constraint.RelativeToParent(p => p.Height *2/3)'  				Constraint.RelativeToParent(p => p.Width)'  				Constraint.RelativeToParent(p => p.Height *1/3)  			);
Magic Number,XLabs.Samples.Pages.Controls,CalendarPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\CalendarPage.xaml.cs,CalendarPage,The following statement contains a magic number: _relativeLayout.Children.Add(_stacker'  				Constraint.Constant(0)'  				Constraint.RelativeToParent(p => p.Height *2/3)'  				Constraint.RelativeToParent(p => p.Width)'  				Constraint.RelativeToParent(p => p.Height *1/3)  			);
Magic Number,XLabs.Samples.Pages.Controls,ExtendedLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedLabelPage.xaml.cs,ExtendedLabelPage,The following statement contains a magic number: var label = new ExtendedLabel  			{  				Text = "From code' using Device.OnPlatform' Underlined"'  				FontName = "Open 24 Display St.ttf"'  				FriendlyFontName = Device.OnPlatform(""' ""' "Open 24 Display St")'  				IsUnderline = true'  				FontSize = 22'  			};
Magic Number,XLabs.Samples.Pages.Controls,ExtendedLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedLabelPage.xaml.cs,ExtendedLabelPage,The following statement contains a magic number: var label2 = new ExtendedLabel  			{  				Text = "From code' Strikethrough"'  				FontName = "Open 24 Display St.ttf"'  				FriendlyFontName = Device.OnPlatform(""' ""' "Open 24 Display St")'  				IsUnderline = false'  				IsStrikeThrough = true'  				FontSize = 22'  			};
Magic Number,XLabs.Samples.Pages.Controls,ExtendedLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedLabelPage.xaml.cs,ExtendedLabelPage,The following statement contains a magic number: var font = Font.OfSize("Open 24 Display St"' 22);
Magic Number,XLabs.Samples.Pages.Controls,ExtendedScrollViewPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedScrollView.xaml.cs,ExtendedScrollViewPage,The following statement contains a magic number: i < 10
Magic Number,XLabs.Samples.Pages.Controls,ExtendedSliderPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedSliderPage.cs,ExtendedSliderPage,The following statement contains a magic number: var sliderMain = new ExtendedSlider  			{  				Minimum = 0.0f'  				Maximum = 5.0f'  				Value = 0.0f'  				StepValue = 1.0f'  				HorizontalOptions = LayoutOptions.FillAndExpand'  			};
Magic Number,XLabs.Samples.Pages.Controls,ExtendedSliderPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedSliderPage.cs,ExtendedSliderPage,The following statement contains a magic number: var grid = new Grid  			{  				// BackgroundColor = Color.Black'  				Padding = 10'  				RowDefinitions =  				{  					new RowDefinition {Height = GridLength.Auto}'  				}'  				ColumnDefinitions =  				{  					new ColumnDefinition {Width = new GridLength(1' GridUnitType.Star)}'  					new ColumnDefinition {Width = new GridLength(1' GridUnitType.Star)}'  					new ColumnDefinition {Width = new GridLength(1' GridUnitType.Star)}'  					new ColumnDefinition {Width = new GridLength(1' GridUnitType.Star)}'  					new ColumnDefinition {Width = new GridLength(1' GridUnitType.Star)}'  				}'  			};
Magic Number,XLabs.Samples.Pages.Controls,ExtendedSliderPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedSliderPage.cs,ExtendedSliderPage,The following statement contains a magic number: i < 6
Magic Number,XLabs.Samples.Pages.Controls,ExtendedSliderPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedSliderPage.cs,ExtendedSliderPage,The following statement contains a magic number: Content = new StackLayout  			{  				Padding = new Thickness(10' Device.OnPlatform(20' 0' 0)' 10' 10)'  				Orientation = StackOrientation.Vertical'  				HorizontalOptions = LayoutOptions.FillAndExpand'  				VerticalOptions = LayoutOptions.FillAndExpand'  				Children = { grid' sliderMain' labelCurrentValue }'  			};
Magic Number,XLabs.Samples.Pages.Controls,ExtendedSliderPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedSliderPage.cs,ExtendedSliderPage,The following statement contains a magic number: Content = new StackLayout  			{  				Padding = new Thickness(10' Device.OnPlatform(20' 0' 0)' 10' 10)'  				Orientation = StackOrientation.Vertical'  				HorizontalOptions = LayoutOptions.FillAndExpand'  				VerticalOptions = LayoutOptions.FillAndExpand'  				Children = { grid' sliderMain' labelCurrentValue }'  			};
Magic Number,XLabs.Samples.Pages.Controls,ExtendedSliderPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedSliderPage.cs,ExtendedSliderPage,The following statement contains a magic number: Content = new StackLayout  			{  				Padding = new Thickness(10' Device.OnPlatform(20' 0' 0)' 10' 10)'  				Orientation = StackOrientation.Vertical'  				HorizontalOptions = LayoutOptions.FillAndExpand'  				VerticalOptions = LayoutOptions.FillAndExpand'  				Children = { grid' sliderMain' labelCurrentValue }'  			};
Magic Number,XLabs.Samples.Pages.Controls,ExtendedSliderPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedSliderPage.cs,ExtendedSliderPage,The following statement contains a magic number: Content = new StackLayout  			{  				Padding = new Thickness(10' Device.OnPlatform(20' 0' 0)' 10' 10)'  				Orientation = StackOrientation.Vertical'  				HorizontalOptions = LayoutOptions.FillAndExpand'  				VerticalOptions = LayoutOptions.FillAndExpand'  				Children = { grid' sliderMain' labelCurrentValue }'  			};
Magic Number,XLabs.Samples.Pages.Controls,ExtendedTimePickerPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedTimePickerPage.cs,ExtendedTimePickerPage,The following statement contains a magic number: timePicker.Time = new TimeSpan(11' 12' 0);
Magic Number,XLabs.Samples.Pages.Controls,ExtendedTimePickerPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedTimePickerPage.cs,ExtendedTimePickerPage,The following statement contains a magic number: timePicker.Time = new TimeSpan(11' 12' 0);
Magic Number,XLabs.Samples.Pages.Controls,ExtendedTimePickerPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedTimePickerPage.cs,ExtendedTimePickerPage,The following statement contains a magic number: timePicker.MinimumTime = new TimeSpan(10' 10' 0);
Magic Number,XLabs.Samples.Pages.Controls,ExtendedTimePickerPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedTimePickerPage.cs,ExtendedTimePickerPage,The following statement contains a magic number: timePicker.MinimumTime = new TimeSpan(10' 10' 0);
Magic Number,XLabs.Samples.Pages.Controls,ExtendedTimePickerPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedTimePickerPage.cs,ExtendedTimePickerPage,The following statement contains a magic number: timePicker.MaximumTime = new TimeSpan(18' 40' 0);
Magic Number,XLabs.Samples.Pages.Controls,ExtendedTimePickerPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\ExtendedTimePickerPage.cs,ExtendedTimePickerPage,The following statement contains a magic number: timePicker.MaximumTime = new TimeSpan(18' 40' 0);
Magic Number,XLabs.Samples.Pages.Controls,IconButtonPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconButtonPage.cs,IconButtonPage,The following statement contains a magic number: IconButton btn2 = new IconButton()              {                  Icon = "\uf1d8"'                  Text = "Different color and size"'                  IconColor = Color.Red'                  TextColor = Color.White'                  IconSize = 40'                  BackgroundColor = Color.Gray'                  FontSize = 20              };
Magic Number,XLabs.Samples.Pages.Controls,IconButtonPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconButtonPage.cs,IconButtonPage,The following statement contains a magic number: IconButton btn2 = new IconButton()              {                  Icon = "\uf1d8"'                  Text = "Different color and size"'                  IconColor = Color.Red'                  TextColor = Color.White'                  IconSize = 40'                  BackgroundColor = Color.Gray'                  FontSize = 20              };
Magic Number,XLabs.Samples.Pages.Controls,IconButtonPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconButtonPage.cs,IconButtonPage,The following statement contains a magic number: Device.OnPlatform(null' () =>              {                  //Orientation boottom and top only supported on Android                  btn3 = new IconButton()                  {                      Icon = "\uf1d8"'                      Text = "Orientation icon on top"'                      TextColor = Color.White'                      IconColor = Color.White'                      BackgroundColor = Color.Gray'                      FontSize = 20'                      Orientation = Enums.ImageOrientation.ImageOnTop                    };              }' null);
Magic Number,XLabs.Samples.Pages.Controls,IconButtonPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconButtonPage.cs,IconButtonPage,The following statement contains a magic number: IconButton btn4 = new IconButton()              {                  Icon = "\uf1d8"'                  Text = "Orientation icon on the right"'                  TextColor = Color.White'                  IconColor = Color.White'                  BackgroundColor = Color.Gray'                  FontSize = 20'                  Orientation = Enums.ImageOrientation.ImageToRight                };
Magic Number,XLabs.Samples.Pages.Controls,IconButtonPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconButtonPage.cs,IconButtonPage,The following statement contains a magic number: Device.OnPlatform(null' () =>              {                  //Orientation boottom and top only supported on Android                  btn5 = new IconButton()                  {                      Icon = "\uf1d8"'                      Text = "Orientation icon on bottom"'                      TextColor = Color.White'                      IconColor = Color.White'                      BackgroundColor = Color.Gray'                      FontSize = 20'                      Orientation = Enums.ImageOrientation.ImageOnBottom'                      };              }' null);
Magic Number,XLabs.Samples.Pages.Controls,IconButtonPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconButtonPage.cs,IconButtonPage,The following statement contains a magic number: IconButton btn6 = new IconButton()              {                  Icon = "\uf1d8"'                  Text = "TextAlignment Center"'                  TextColor = Color.White'                  IconColor = Color.White'                  FontSize = 20'                  BackgroundColor = Color.Gray'                  TextAlignement = TextAlignment.Center                  };
Magic Number,XLabs.Samples.Pages.Controls,IconButtonPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconButtonPage.cs,IconButtonPage,The following statement contains a magic number: IconButton btn7 = new IconButton()              {                  Icon = "\uf1d8"'                  Text = "TextAlignment End"'                  TextColor = Color.White'                  IconColor = Color.White'                  FontSize = 20'                  BackgroundColor = Color.Gray'                  TextAlignement = TextAlignment.End                  };
Magic Number,XLabs.Samples.Pages.Controls,IconButtonPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconButtonPage.cs,IconButtonPage,The following statement contains a magic number: IconButton btn8 = new IconButton()              {                  Icon = "\uf1d8"'                  Text = " TextAlignment Start"'                  TextColor = Color.White'                  IconColor = Color.White'                  FontSize = 20'                  BackgroundColor = Color.Gray'                  TextAlignement = TextAlignment.Start                  };
Magic Number,XLabs.Samples.Pages.Controls,IconButtonPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconButtonPage.cs,IconButtonPage,The following statement contains a magic number: IconButton btn9 = new IconButton()              {                  Icon = "\uf1d8"'                  Text = "With icon separator"'                  ShowIconSeparator = true'                  TextColor = Color.Red'                  IconColor = Color.White'                  IconSize = 20'                  BackgroundColor = Color.Gray'                  FontSize = 20              };
Magic Number,XLabs.Samples.Pages.Controls,IconButtonPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconButtonPage.cs,IconButtonPage,The following statement contains a magic number: IconButton btn9 = new IconButton()              {                  Icon = "\uf1d8"'                  Text = "With icon separator"'                  ShowIconSeparator = true'                  TextColor = Color.Red'                  IconColor = Color.White'                  IconSize = 20'                  BackgroundColor = Color.Gray'                  FontSize = 20              };
Magic Number,XLabs.Samples.Pages.Controls,IconLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconLabelPage.cs,IconLabelPage,The following statement contains a magic number: IconLabel label2 = new IconLabel()              {                  Icon = "\uf1d8"'                  Text = "Different color and size"'                  IconColor = Color.Red'                  TextColor = Color.White'                  IconSize = 50'                  FontSize = 20              };
Magic Number,XLabs.Samples.Pages.Controls,IconLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconLabelPage.cs,IconLabelPage,The following statement contains a magic number: IconLabel label2 = new IconLabel()              {                  Icon = "\uf1d8"'                  Text = "Different color and size"'                  IconColor = Color.Red'                  TextColor = Color.White'                  IconSize = 50'                  FontSize = 20              };
Magic Number,XLabs.Samples.Pages.Controls,IconLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconLabelPage.cs,IconLabelPage,The following statement contains a magic number: Device.OnPlatform(null'() =>              {                  //Orientation boottom and top only supported on Android                  label3 = new IconLabel()                  {                      Icon = "\uf1d8"'                      Text = "Orientation icon on top"'                      TextColor = Color.White'                      IconColor = Color.White'                      FontSize = 20'                      Orientation = Enums.ImageOrientation.ImageOnTop                    };              }'null);
Magic Number,XLabs.Samples.Pages.Controls,IconLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconLabelPage.cs,IconLabelPage,The following statement contains a magic number: IconLabel label4 = new IconLabel()              {                  Icon = "\uf1d8"'                  Text = "Orientation icon on the right"'                  TextColor = Color.White'                  IconColor = Color.White'                  FontSize = 20'                  Orientation = Enums.ImageOrientation.ImageToRight                };
Magic Number,XLabs.Samples.Pages.Controls,IconLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconLabelPage.cs,IconLabelPage,The following statement contains a magic number: Device.OnPlatform(null'() =>              {                  //Orientation boottom and top only supported on Android                  label5 = new IconLabel()                  {                      Icon = "\uf1d8"'                      Text = "Orientation icon on bottom"'                      TextColor = Color.White'                      IconColor = Color.White'                      FontSize = 20'                      Orientation = Enums.ImageOrientation.ImageOnBottom'                                      };              }'null);
Magic Number,XLabs.Samples.Pages.Controls,IconLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconLabelPage.cs,IconLabelPage,The following statement contains a magic number: IconLabel label6 = new IconLabel()              {                  Icon = "\uf1d8"'                  Text = "TextAlignment Center"'                  TextColor = Color.White'                  IconColor = Color.White'                  FontSize = 20'                  TextAlignement = TextAlignment.Center                  };
Magic Number,XLabs.Samples.Pages.Controls,IconLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconLabelPage.cs,IconLabelPage,The following statement contains a magic number: IconLabel label7 = new IconLabel()              {                  Icon = "\uf1d8"'                  Text = "TextAlignment End"'                  TextColor = Color.White'                  IconColor = Color.White'                  FontSize = 20'                  TextAlignement = TextAlignment.End                  };
Magic Number,XLabs.Samples.Pages.Controls,IconLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconLabelPage.cs,IconLabelPage,The following statement contains a magic number: IconLabel label8 = new IconLabel()              {                  Icon = "\uf1d8"'                  Text = " TextAlignment Start"'                  TextColor = Color.White'                  IconColor = Color.White'                  FontSize = 20'                  TextAlignement = TextAlignment.Start                  };
Magic Number,XLabs.Samples.Pages.Controls,IconLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconLabelPage.cs,IconLabelPage,The following statement contains a magic number: IconLabel label9 = new IconLabel()              {                  Icon = "\uf1d8"'                  Text = "With icon separator"'                  ShowIconSeparator = true'                  TextColor = Color.Red'                  IconColor = Color.White'                  IconSize = 20'                  FontSize = 20              };
Magic Number,XLabs.Samples.Pages.Controls,IconLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconLabelPage.cs,IconLabelPage,The following statement contains a magic number: IconLabel label9 = new IconLabel()              {                  Icon = "\uf1d8"'                  Text = "With icon separator"'                  ShowIconSeparator = true'                  TextColor = Color.Red'                  IconColor = Color.White'                  IconSize = 20'                  FontSize = 20              };
Magic Number,XLabs.Samples.Pages.Controls,IconLabelPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\IconLabelPage.cs,IconLabelPage,The following statement contains a magic number: IconLabel SwitchIcon = new IconLabel()              {                  Icon = up'                                   IconColor = Color.Blue'                  IconSize = 30'                                };
Magic Number,XLabs.Samples.Pages.Controls,RepeaterViewPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\RepeaterViewPage.cs,RepeaterViewPage,The following statement contains a magic number: var repeater = new RepeaterView<Thing>  			{  				Spacing = 10'  				ItemsSource = viewModel.Things'  				ItemTemplate = new DataTemplate(() =>  				{  					var nameLabel = new Label { Font = Font.SystemFontOfSize(NamedSize.Medium) };  					nameLabel.SetBinding(Label.TextProperty' RepeaterViewViewModel.ThingsNamePropertyName);    					var descriptionLabel = new Label { Font = Font.SystemFontOfSize(NamedSize.Small) };  					descriptionLabel.SetBinding(Label.TextProperty' RepeaterViewViewModel.ThingsDescriptionPropertyName);    					ViewCell cell = new ViewCell  					{  						View = new StackLayout  						{  							Spacing = 0'  							Children =  							{  								nameLabel'  								descriptionLabel  							}  						}  					};    					return cell;  				})  			};
Magic Number,XLabs.Samples.Pages.Controls,RepeaterViewPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\RepeaterViewPage.cs,RepeaterViewPage,The following statement contains a magic number: Content = new StackLayout  			{  				Padding = 20'  				Spacing = 5'  				Children =   				{  					new Label   					{   						Text = "RepeaterView Demo"'   						Font = Font.SystemFontOfSize(NamedSize.Large)  					}'  					repeater'  					removeButton'  					addButton  				}  			};
Magic Number,XLabs.Samples.Pages.Controls,RepeaterViewPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\RepeaterViewPage.cs,RepeaterViewPage,The following statement contains a magic number: Content = new StackLayout  			{  				Padding = 20'  				Spacing = 5'  				Children =   				{  					new Label   					{   						Text = "RepeaterView Demo"'   						Font = Font.SystemFontOfSize(NamedSize.Large)  					}'  					repeater'  					removeButton'  					addButton  				}  			};
Magic Number,XLabs.Samples.Pages.Controls,SegmentPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\SegmentPage.cs,SegmentPage,The following statement contains a magic number: segment.SelectedSegmentChanged += (sender' segmentIndex) =>  			{  				switch (segmentIndex)  				{  					case 0:  						segment.TintColor = Color.Green;  						break;  					case 1:  						segment.TintColor = Color.Yellow;  						break;  					case 2:  						segment.TintColor = Color.Red;  						break;  				}  			};
Magic Number,XLabs.Samples.Pages.Controls,SegmentPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\SegmentPage.cs,SegmentPage,The following statement contains a magic number: Content = new StackLayout  			{  				Padding = new Thickness(10' Device.OnPlatform(20' 0' 0)' 10' 10)'  				Orientation = StackOrientation.Vertical'  				HorizontalOptions = LayoutOptions.FillAndExpand'  				VerticalOptions = LayoutOptions.FillAndExpand'  				Children = { segment }'  			};
Magic Number,XLabs.Samples.Pages.Controls,SegmentPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\SegmentPage.cs,SegmentPage,The following statement contains a magic number: Content = new StackLayout  			{  				Padding = new Thickness(10' Device.OnPlatform(20' 0' 0)' 10' 10)'  				Orientation = StackOrientation.Vertical'  				HorizontalOptions = LayoutOptions.FillAndExpand'  				VerticalOptions = LayoutOptions.FillAndExpand'  				Children = { segment }'  			};
Magic Number,XLabs.Samples.Pages.Controls,SegmentPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\SegmentPage.cs,SegmentPage,The following statement contains a magic number: Content = new StackLayout  			{  				Padding = new Thickness(10' Device.OnPlatform(20' 0' 0)' 10' 10)'  				Orientation = StackOrientation.Vertical'  				HorizontalOptions = LayoutOptions.FillAndExpand'  				VerticalOptions = LayoutOptions.FillAndExpand'  				Children = { segment }'  			};
Magic Number,XLabs.Samples.Pages.Controls,SegmentPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\SegmentPage.cs,SegmentPage,The following statement contains a magic number: Content = new StackLayout  			{  				Padding = new Thickness(10' Device.OnPlatform(20' 0' 0)' 10' 10)'  				Orientation = StackOrientation.Vertical'  				HorizontalOptions = LayoutOptions.FillAndExpand'  				VerticalOptions = LayoutOptions.FillAndExpand'  				Children = { segment }'  			};
Magic Number,XLabs.Samples.Pages.Controls,SeparatorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\SeparatorPage.cs,SeparatorPage,The following statement contains a magic number: separator = new Separator() {  				Color = Color.Green'  				Thickness = 5  			};
Magic Number,XLabs.Samples.Pages.Controls,SeparatorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\SeparatorPage.cs,SeparatorPage,The following statement contains a magic number: separator = new Separator() {  				Color = Color.Blue'  				SpacingBefore = 2'  				SpacingAfter = 20  			};
Magic Number,XLabs.Samples.Pages.Controls,SeparatorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\SeparatorPage.cs,SeparatorPage,The following statement contains a magic number: separator = new Separator() {  				Color = Color.Blue'  				SpacingBefore = 2'  				SpacingAfter = 20  			};
Magic Number,XLabs.Samples.Pages.Controls,SeparatorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\SeparatorPage.cs,SeparatorPage,The following statement contains a magic number: separator = new Separator() {  				Color = Color.Blue'  				SpacingBefore = 20'  				SpacingAfter = 2  			};
Magic Number,XLabs.Samples.Pages.Controls,SeparatorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\SeparatorPage.cs,SeparatorPage,The following statement contains a magic number: separator = new Separator() {  				Color = Color.Blue'  				SpacingBefore = 20'  				SpacingAfter = 2  			};
Magic Number,XLabs.Samples.Pages.Controls,SeparatorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\SeparatorPage.cs,SeparatorPage,The following statement contains a magic number: stackLayout.BackgroundColor = Color.Gray.MultiplyAlpha(0.2);
Magic Number,XLabs.Samples.Pages.Controls,UsPresidentList,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\UsPresidentList.cs,OnAppearing,The following statement contains a magic number: var list = new ListView              {                  HasUnevenRows = true'                  ItemsSource = items'                  ItemTemplate = new DataTemplate(() =>                  {                      var image = new CircleImage                      {                          Aspect = Aspect.AspectFill'                          HeightRequest = Device.OnPlatform(50' 75' 75)'                          WidthRequest = Device.OnPlatform(50' 75' 75)'                      };                      image.SetBinding(Image.SourceProperty' "Image");                      var label = new Label                      {                          FontSize = Device.GetNamedSize(NamedSize.Medium' typeof (Label))'                          YAlign = TextAlignment.Center'                          XAlign = TextAlignment.Center                      };                      label.SetBinding(Label.TextProperty' "Title");                        return new ViewCell                      {                          View = new StackLayout                          {                              Padding = new Thickness(20)'                              Spacing = 10'                              Orientation = StackOrientation.Horizontal'                              Children = { image' label }                          }                      };                  })              };
Magic Number,XLabs.Samples.Pages.Controls,UsPresidentList,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\UsPresidentList.cs,OnAppearing,The following statement contains a magic number: var list = new ListView              {                  HasUnevenRows = true'                  ItemsSource = items'                  ItemTemplate = new DataTemplate(() =>                  {                      var image = new CircleImage                      {                          Aspect = Aspect.AspectFill'                          HeightRequest = Device.OnPlatform(50' 75' 75)'                          WidthRequest = Device.OnPlatform(50' 75' 75)'                      };                      image.SetBinding(Image.SourceProperty' "Image");                      var label = new Label                      {                          FontSize = Device.GetNamedSize(NamedSize.Medium' typeof (Label))'                          YAlign = TextAlignment.Center'                          XAlign = TextAlignment.Center                      };                      label.SetBinding(Label.TextProperty' "Title");                        return new ViewCell                      {                          View = new StackLayout                          {                              Padding = new Thickness(20)'                              Spacing = 10'                              Orientation = StackOrientation.Horizontal'                              Children = { image' label }                          }                      };                  })              };
Magic Number,XLabs.Samples.Pages.Controls,UsPresidentList,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\UsPresidentList.cs,OnAppearing,The following statement contains a magic number: var list = new ListView              {                  HasUnevenRows = true'                  ItemsSource = items'                  ItemTemplate = new DataTemplate(() =>                  {                      var image = new CircleImage                      {                          Aspect = Aspect.AspectFill'                          HeightRequest = Device.OnPlatform(50' 75' 75)'                          WidthRequest = Device.OnPlatform(50' 75' 75)'                      };                      image.SetBinding(Image.SourceProperty' "Image");                      var label = new Label                      {                          FontSize = Device.GetNamedSize(NamedSize.Medium' typeof (Label))'                          YAlign = TextAlignment.Center'                          XAlign = TextAlignment.Center                      };                      label.SetBinding(Label.TextProperty' "Title");                        return new ViewCell                      {                          View = new StackLayout                          {                              Padding = new Thickness(20)'                              Spacing = 10'                              Orientation = StackOrientation.Horizontal'                              Children = { image' label }                          }                      };                  })              };
Magic Number,XLabs.Samples.Pages.Controls,UsPresidentList,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\UsPresidentList.cs,OnAppearing,The following statement contains a magic number: var list = new ListView              {                  HasUnevenRows = true'                  ItemsSource = items'                  ItemTemplate = new DataTemplate(() =>                  {                      var image = new CircleImage                      {                          Aspect = Aspect.AspectFill'                          HeightRequest = Device.OnPlatform(50' 75' 75)'                          WidthRequest = Device.OnPlatform(50' 75' 75)'                      };                      image.SetBinding(Image.SourceProperty' "Image");                      var label = new Label                      {                          FontSize = Device.GetNamedSize(NamedSize.Medium' typeof (Label))'                          YAlign = TextAlignment.Center'                          XAlign = TextAlignment.Center                      };                      label.SetBinding(Label.TextProperty' "Title");                        return new ViewCell                      {                          View = new StackLayout                          {                              Padding = new Thickness(20)'                              Spacing = 10'                              Orientation = StackOrientation.Horizontal'                              Children = { image' label }                          }                      };                  })              };
Magic Number,XLabs.Samples.Pages.Controls,UsPresidentList,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\UsPresidentList.cs,OnAppearing,The following statement contains a magic number: var list = new ListView              {                  HasUnevenRows = true'                  ItemsSource = items'                  ItemTemplate = new DataTemplate(() =>                  {                      var image = new CircleImage                      {                          Aspect = Aspect.AspectFill'                          HeightRequest = Device.OnPlatform(50' 75' 75)'                          WidthRequest = Device.OnPlatform(50' 75' 75)'                      };                      image.SetBinding(Image.SourceProperty' "Image");                      var label = new Label                      {                          FontSize = Device.GetNamedSize(NamedSize.Medium' typeof (Label))'                          YAlign = TextAlignment.Center'                          XAlign = TextAlignment.Center                      };                      label.SetBinding(Label.TextProperty' "Title");                        return new ViewCell                      {                          View = new StackLayout                          {                              Padding = new Thickness(20)'                              Spacing = 10'                              Orientation = StackOrientation.Horizontal'                              Children = { image' label }                          }                      };                  })              };
Magic Number,XLabs.Samples.Pages.Controls,UsPresidentList,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\UsPresidentList.cs,OnAppearing,The following statement contains a magic number: var list = new ListView              {                  HasUnevenRows = true'                  ItemsSource = items'                  ItemTemplate = new DataTemplate(() =>                  {                      var image = new CircleImage                      {                          Aspect = Aspect.AspectFill'                          HeightRequest = Device.OnPlatform(50' 75' 75)'                          WidthRequest = Device.OnPlatform(50' 75' 75)'                      };                      image.SetBinding(Image.SourceProperty' "Image");                      var label = new Label                      {                          FontSize = Device.GetNamedSize(NamedSize.Medium' typeof (Label))'                          YAlign = TextAlignment.Center'                          XAlign = TextAlignment.Center                      };                      label.SetBinding(Label.TextProperty' "Title");                        return new ViewCell                      {                          View = new StackLayout                          {                              Padding = new Thickness(20)'                              Spacing = 10'                              Orientation = StackOrientation.Horizontal'                              Children = { image' label }                          }                      };                  })              };
Magic Number,XLabs.Samples.Pages.Controls,UsPresidentList,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\UsPresidentList.cs,OnAppearing,The following statement contains a magic number: var list = new ListView              {                  HasUnevenRows = true'                  ItemsSource = items'                  ItemTemplate = new DataTemplate(() =>                  {                      var image = new CircleImage                      {                          Aspect = Aspect.AspectFill'                          HeightRequest = Device.OnPlatform(50' 75' 75)'                          WidthRequest = Device.OnPlatform(50' 75' 75)'                      };                      image.SetBinding(Image.SourceProperty' "Image");                      var label = new Label                      {                          FontSize = Device.GetNamedSize(NamedSize.Medium' typeof (Label))'                          YAlign = TextAlignment.Center'                          XAlign = TextAlignment.Center                      };                      label.SetBinding(Label.TextProperty' "Title");                        return new ViewCell                      {                          View = new StackLayout                          {                              Padding = new Thickness(20)'                              Spacing = 10'                              Orientation = StackOrientation.Horizontal'                              Children = { image' label }                          }                      };                  })              };
Magic Number,XLabs.Samples.Pages.Controls,UsPresidentList,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\UsPresidentList.cs,OnAppearing,The following statement contains a magic number: var list = new ListView              {                  HasUnevenRows = true'                  ItemsSource = items'                  ItemTemplate = new DataTemplate(() =>                  {                      var image = new CircleImage                      {                          Aspect = Aspect.AspectFill'                          HeightRequest = Device.OnPlatform(50' 75' 75)'                          WidthRequest = Device.OnPlatform(50' 75' 75)'                      };                      image.SetBinding(Image.SourceProperty' "Image");                      var label = new Label                      {                          FontSize = Device.GetNamedSize(NamedSize.Medium' typeof (Label))'                          YAlign = TextAlignment.Center'                          XAlign = TextAlignment.Center                      };                      label.SetBinding(Label.TextProperty' "Title");                        return new ViewCell                      {                          View = new StackLayout                          {                              Padding = new Thickness(20)'                              Spacing = 10'                              Orientation = StackOrientation.Horizontal'                              Children = { image' label }                          }                      };                  })              };
Magic Number,XLabs.Samples.Pages.Controls.Charts,BoundChartViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\Charts\BoundChartViewModel.cs,GetChartData,The following statement contains a magic number: var seriesValues1 = new List<Tuple<string' double>>()  			{  				new Tuple<string' double>("Jan"'   rnd.Next(0'100))'  				new Tuple<string' double>("Feb"'   rnd.Next(0'100))'  				new Tuple<string' double>("March"' rnd.Next(0'100))  			};
Magic Number,XLabs.Samples.Pages.Controls.Charts,BoundChartViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\Charts\BoundChartViewModel.cs,GetChartData,The following statement contains a magic number: var seriesValues1 = new List<Tuple<string' double>>()  			{  				new Tuple<string' double>("Jan"'   rnd.Next(0'100))'  				new Tuple<string' double>("Feb"'   rnd.Next(0'100))'  				new Tuple<string' double>("March"' rnd.Next(0'100))  			};
Magic Number,XLabs.Samples.Pages.Controls.Charts,BoundChartViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\Charts\BoundChartViewModel.cs,GetChartData,The following statement contains a magic number: var seriesValues1 = new List<Tuple<string' double>>()  			{  				new Tuple<string' double>("Jan"'   rnd.Next(0'100))'  				new Tuple<string' double>("Feb"'   rnd.Next(0'100))'  				new Tuple<string' double>("March"' rnd.Next(0'100))  			};
Magic Number,XLabs.Samples.Pages.Controls.Charts,BoundChartViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\Charts\BoundChartViewModel.cs,GetChartData,The following statement contains a magic number: var seriesValues2 = new List<Tuple<string' double>>()  			{  				new Tuple<string' double>("Jan"'   rnd.Next(0'100))'  				new Tuple<string' double>("Feb"'   rnd.Next(0'100))'  				new Tuple<string' double>("March"' rnd.Next(0'100))  			};
Magic Number,XLabs.Samples.Pages.Controls.Charts,BoundChartViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\Charts\BoundChartViewModel.cs,GetChartData,The following statement contains a magic number: var seriesValues2 = new List<Tuple<string' double>>()  			{  				new Tuple<string' double>("Jan"'   rnd.Next(0'100))'  				new Tuple<string' double>("Feb"'   rnd.Next(0'100))'  				new Tuple<string' double>("March"' rnd.Next(0'100))  			};
Magic Number,XLabs.Samples.Pages.Controls.Charts,BoundChartViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\Charts\BoundChartViewModel.cs,GetChartData,The following statement contains a magic number: var seriesValues2 = new List<Tuple<string' double>>()  			{  				new Tuple<string' double>("Jan"'   rnd.Next(0'100))'  				new Tuple<string' double>("Feb"'   rnd.Next(0'100))'  				new Tuple<string' double>("March"' rnd.Next(0'100))  			};
Magic Number,XLabs.Samples.Pages.Controls.Charts,BoundChartViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\Charts\BoundChartViewModel.cs,GetChartData,The following statement contains a magic number: var seriesValues3 = new List<Tuple<string' double>>()  			{  				new Tuple<string' double>("Jan"'   rnd.Next(0'100))'  				new Tuple<string' double>("Feb"'   rnd.Next(0'100))'  				new Tuple<string' double>("March"' rnd.Next(0'100))  			};
Magic Number,XLabs.Samples.Pages.Controls.Charts,BoundChartViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\Charts\BoundChartViewModel.cs,GetChartData,The following statement contains a magic number: var seriesValues3 = new List<Tuple<string' double>>()  			{  				new Tuple<string' double>("Jan"'   rnd.Next(0'100))'  				new Tuple<string' double>("Feb"'   rnd.Next(0'100))'  				new Tuple<string' double>("March"' rnd.Next(0'100))  			};
Magic Number,XLabs.Samples.Pages.Controls.Charts,BoundChartViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\Charts\BoundChartViewModel.cs,GetChartData,The following statement contains a magic number: var seriesValues3 = new List<Tuple<string' double>>()  			{  				new Tuple<string' double>("Jan"'   rnd.Next(0'100))'  				new Tuple<string' double>("Feb"'   rnd.Next(0'100))'  				new Tuple<string' double>("March"' rnd.Next(0'100))  			};
Magic Number,XLabs.Samples.Pages.Samples,OrientationPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Samples\OrientationPage.cs,OrientationPage,The following statement contains a magic number: rl.Children.Add(                  box1'                  Constraint.Constant(0)'                  Constraint.Constant(0)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Width / 2 : p.Width)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Height : p.Height / 2));
Magic Number,XLabs.Samples.Pages.Samples,OrientationPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Samples\OrientationPage.cs,OrientationPage,The following statement contains a magic number: rl.Children.Add(                  box1'                  Constraint.Constant(0)'                  Constraint.Constant(0)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Width / 2 : p.Width)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Height : p.Height / 2));
Magic Number,XLabs.Samples.Pages.Samples,OrientationPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Samples\OrientationPage.cs,OrientationPage,The following statement contains a magic number: rl.Children.Add(                  box2'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Width / 2 : 0)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? 0 : p.Height / 2)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Width / 2 : p.Width)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Height : p.Height / 2));
Magic Number,XLabs.Samples.Pages.Samples,OrientationPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Samples\OrientationPage.cs,OrientationPage,The following statement contains a magic number: rl.Children.Add(                  box2'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Width / 2 : 0)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? 0 : p.Height / 2)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Width / 2 : p.Width)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Height : p.Height / 2));
Magic Number,XLabs.Samples.Pages.Samples,OrientationPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Samples\OrientationPage.cs,OrientationPage,The following statement contains a magic number: rl.Children.Add(                  box2'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Width / 2 : 0)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? 0 : p.Height / 2)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Width / 2 : p.Width)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Height : p.Height / 2));
Magic Number,XLabs.Samples.Pages.Samples,OrientationPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Samples\OrientationPage.cs,OrientationPage,The following statement contains a magic number: rl.Children.Add(                  box2'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Width / 2 : 0)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? 0 : p.Height / 2)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Width / 2 : p.Width)'                  Constraint.RelativeToParent(p => device.Orientation.HasFlag(Orientation.Portrait) ? p.Height : p.Height / 2));
Magic Number,XLabs.Samples.Pages.Samples,WebPageLoadSample,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Samples\WebPageLoadSample.cs,WebPageLoadSample,The following statement contains a magic number: this.Padding = new Thickness(0' 20' 0' 0);
Magic Number,XLabs.Samples.Pages.Samples,WebPageLoadSample,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Samples\WebPageLoadSample.cs,WebPageLoadSample,The following statement contains a magic number: this.addressLabel = new Label()              {                  StyleId = "UrlLoaded"'                  FontSize = 8              };
Magic Number,XLabs.Samples.Pages.Samples,WebPageLoadSample,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Samples\WebPageLoadSample.cs,WebPageLoadSample,The following statement contains a magic number: var labelHeight = Device.OnPlatform(10' 10' 20);
Magic Number,XLabs.Samples.Pages.Samples,WebPageLoadSample,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Samples\WebPageLoadSample.cs,WebPageLoadSample,The following statement contains a magic number: var labelHeight = Device.OnPlatform(10' 10' 20);
Magic Number,XLabs.Samples.Pages.Samples,WebPageLoadSample,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Samples\WebPageLoadSample.cs,WebPageLoadSample,The following statement contains a magic number: var labelHeight = Device.OnPlatform(10' 10' 20);
Magic Number,XLabs.Samples.Pages.Samples,WebPageLoadSample,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Samples\WebPageLoadSample.cs,CircleUrls,The following statement contains a magic number: await Task.Delay(10000);
Magic Number,XLabs.Samples.Pages.Services,AbsoluteLayoutWithDisplayInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: var originX = display.WidthRequestInInches(display.ScreenWidthInches() / 2);
Magic Number,XLabs.Samples.Pages.Services,AbsoluteLayoutWithDisplayInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: var originY = display.HeightRequestInInches(display.ScreenHeightInches() / 2);
Magic Number,XLabs.Samples.Pages.Services,AbsoluteLayoutWithDisplayInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: abs.Children.Add(new Frame()  				{  					BackgroundColor = Color.Navy'  				}'  				new Rectangle(originX - inchX/2' originY - inchY/2' inchX' inchY));
Magic Number,XLabs.Samples.Pages.Services,AbsoluteLayoutWithDisplayInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: abs.Children.Add(new Frame()  				{  					BackgroundColor = Color.Navy'  				}'  				new Rectangle(originX - inchX/2' originY - inchY/2' inchX' inchY));
Magic Number,XLabs.Samples.Pages.Services,AbsoluteLayoutWithDisplayInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: abs.Children.Add(new Frame()  				{  					BackgroundColor = Color.White  				}'  				new Rectangle(originX - inchX/16' originY - inchY/16' inchX/8' inchY/8));
Magic Number,XLabs.Samples.Pages.Services,AbsoluteLayoutWithDisplayInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: abs.Children.Add(new Frame()  				{  					BackgroundColor = Color.White  				}'  				new Rectangle(originX - inchX/16' originY - inchY/16' inchX/8' inchY/8));
Magic Number,XLabs.Samples.Pages.Services,AbsoluteLayoutWithDisplayInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: abs.Children.Add(new Frame()  				{  					BackgroundColor = Color.White  				}'  				new Rectangle(originX - inchX/16' originY - inchY/16' inchX/8' inchY/8));
Magic Number,XLabs.Samples.Pages.Services,AbsoluteLayoutWithDisplayInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AbsoluteLayoutWithDisplayInfoPage.cs,AbsoluteLayoutWithDisplayInfoPage,The following statement contains a magic number: abs.Children.Add(new Frame()  				{  					BackgroundColor = Color.White  				}'  				new Rectangle(originX - inchX/16' originY - inchY/16' inchX/8' inchY/8));
Magic Number,XLabs.Samples.Pages.Services,AcceleratorSensorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: _xsensor = new SensorBarView ()               {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,AcceleratorSensorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: _xsensor = new SensorBarView ()               {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,AcceleratorSensorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: _xsensor = new SensorBarView ()               {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,AcceleratorSensorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: _xsensor = new SensorBarView ()               {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,AcceleratorSensorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: _ysensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,AcceleratorSensorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: _ysensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,AcceleratorSensorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: _ysensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,AcceleratorSensorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: _ysensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,AcceleratorSensorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: _zsensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,AcceleratorSensorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: _zsensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,AcceleratorSensorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: _zsensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,AcceleratorSensorPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\AcceleratorSensorPage.cs,AcceleratorSensorPage,The following statement contains a magic number: _zsensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,EmailPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\EmailPage.cs,EmailPage,The following statement contains a magic number: Padding = new Thickness(0' Device.OnPlatform(20' 0' 0)' 0' 0);
Magic Number,XLabs.Samples.Pages.Services,EmailPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\EmailPage.cs,TakePicture,The following statement contains a magic number: return await _mediaPicker.TakePhotoAsync(new CameraMediaStorageOptions { DefaultCamera = CameraDevice.Front' MaxPixelDimension = 400 }).ContinueWith(t =>  			{  				if (t.IsFaulted)  				{  					Status = t.Exception.InnerException.ToString();  				}  				else if (t.IsCanceled)  				{  					Status = "Canceled";  				}  				else  				{  					var mediaFile = t.Result;    					_path = mediaFile.Path;    					Status = string.Format("Path: {0}"' _path);    					return mediaFile;  				}    				return null;  			}' _scheduler);
Magic Number,XLabs.Samples.Pages.Services,ExtendedDeviceInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\ExtendedDeviceInfoPage.cs,ExtendedDeviceInfoPage,The following statement contains a magic number: mem = device.TotalMemory / 1024 / 1024d;
Magic Number,XLabs.Samples.Pages.Services,ExtendedDeviceInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\ExtendedDeviceInfoPage.cs,ExtendedDeviceInfoPage,The following statement contains a magic number: mem = device.TotalMemory / 1024 / 1024d;
Magic Number,XLabs.Samples.Pages.Services,ExtendedDeviceInfoPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\ExtendedDeviceInfoPage.cs,ExtendedDeviceInfoPage,The following statement contains a magic number: device.TotalMemory < 1073741824
Magic Number,XLabs.Samples.Pages.Services,FontManagerPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\FontManagerPage.cs,FontManagerPage,The following statement contains a magic number: var label = new Label()                  {                      Font = font'                      HeightRequest = heightRequest + 10'                      Text = string.Format("System font {0} is {1:0.000}in tall."' namedSize' height)'                      XAlign = TextAlignment.Center                  };
Magic Number,XLabs.Samples.Pages.Services,FontManagerPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\FontManagerPage.cs,FontManagerPage,The following statement contains a magic number: var f = Font.SystemFontOfSize(24);
Magic Number,XLabs.Samples.Pages.Services,GyroscopePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\GyroscopePage.cs,GyroscopePage,The following statement contains a magic number: this.xsensor = new SensorBarView ()               {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,GyroscopePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\GyroscopePage.cs,GyroscopePage,The following statement contains a magic number: this.xsensor = new SensorBarView ()               {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,GyroscopePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\GyroscopePage.cs,GyroscopePage,The following statement contains a magic number: this.xsensor = new SensorBarView ()               {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,GyroscopePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\GyroscopePage.cs,GyroscopePage,The following statement contains a magic number: this.xsensor = new SensorBarView ()               {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,GyroscopePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\GyroscopePage.cs,GyroscopePage,The following statement contains a magic number: this.ysensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,GyroscopePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\GyroscopePage.cs,GyroscopePage,The following statement contains a magic number: this.ysensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,GyroscopePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\GyroscopePage.cs,GyroscopePage,The following statement contains a magic number: this.ysensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,GyroscopePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\GyroscopePage.cs,GyroscopePage,The following statement contains a magic number: this.ysensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,GyroscopePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\GyroscopePage.cs,GyroscopePage,The following statement contains a magic number: this.zsensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,GyroscopePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\GyroscopePage.cs,GyroscopePage,The following statement contains a magic number: this.zsensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,GyroscopePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\GyroscopePage.cs,GyroscopePage,The following statement contains a magic number: this.zsensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,GyroscopePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\GyroscopePage.cs,GyroscopePage,The following statement contains a magic number: this.zsensor = new SensorBarView()              {                  HeightRequest = 75'                  WidthRequest = 250'                  MinimumHeightRequest = 10'                  MinimumWidthRequest = 50'                  BackgroundColor = BackgroundColor  //                VerticalOptions = LayoutOptions.Fill'  //                HorizontalOptions = LayoutOptions.Fill              };
Magic Number,XLabs.Samples.Pages.Services,NfcDevicePage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Services\NfcDevicePage.cs,NfcDevicePage,The following statement contains a magic number: Padding = new Thickness(0' Device.OnPlatform(20' 0' 0)' 0' 0);
Magic Number,XLabs.Samples.ViewModel,AutoCompleteViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\AutoCompleteViewModel.cs,AutoCompleteViewModel,The following statement contains a magic number: i < 10
Magic Number,XLabs.Samples.ViewModel,CameraViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\CameraViewModel.cs,TakePicture,The following statement contains a magic number: return await _mediaPicker.TakePhotoAsync(new CameraMediaStorageOptions { DefaultCamera = CameraDevice.Front' MaxPixelDimension = 400 }).ContinueWith(t =>  			{  				if (t.IsFaulted)  				{  					Status = t.Exception.InnerException.ToString();  				}  				else if (t.IsCanceled)  				{  					Status = "Canceled";  				}  				else  				{  					var mediaFile = t.Result;    					ImageSource = ImageSource.FromStream(() => mediaFile.Source);    					return mediaFile;  				}    				return null;  			}' _scheduler);
Magic Number,XLabs.Samples.ViewModel,CameraViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\CameraViewModel.cs,SelectPicture,The following statement contains a magic number: var mediaFile = await _mediaPicker.SelectPhotoAsync(new CameraMediaStorageOptions  					{  						DefaultCamera = CameraDevice.Front'  						MaxPixelDimension = 400  					});
Magic Number,XLabs.Samples.ViewModel,CameraViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\CameraViewModel.cs,ConvertBytesToMegabytes,The following statement contains a magic number: return (bytes / 1024f) / 1024f;
Magic Number,XLabs.Samples.ViewModel,CameraViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\CameraViewModel.cs,ConvertBytesToMegabytes,The following statement contains a magic number: return (bytes / 1024f) / 1024f;
Magic Number,XLabs.Samples.ViewModel,GeolocatorViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\GeolocatorViewModel.cs,GetPosition,The following statement contains a magic number: await  				Geolocator.GetPositionAsync(10000' _cancelSource.Token' true)  					.ContinueWith(t =>  					{  						IsBusy = false;  						if (t.IsFaulted)  						{  							PositionStatus = ((GeolocationException) t.Exception.InnerException).Error.ToString();  						}  						else if (t.IsCanceled)  						{  							PositionStatus = "Canceled";  						}  						else  						{  							PositionStatus = t.Result.Timestamp.ToString("G");  							PositionLatitude = "La: " + t.Result.Latitude.ToString("N4");  							PositionLongitude = "Lo: " + t.Result.Longitude.ToString("N4");  						}  					}' _scheduler);
Magic Number,XLabs.Samples.ViewModel,MainViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\MainViewModel.cs,MainViewModel,The following statement contains a magic number: i < 10
Magic Number,XLabs.Samples.ViewModel,MainViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\MainViewModel.cs,AddImages,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,XLabs.Samples.ViewModel,MainViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\MainViewModel.cs,AddImages,The following statement contains a magic number: i < 5
Magic Number,XLabs.Samples.ViewModel,MainViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\MainViewModel.cs,RemoveImages,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,XLabs.Samples.ViewModel,MainViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\MainViewModel.cs,RemoveImages,The following statement contains a magic number: i < 5
Magic Number,XLabs.Samples.ViewModel,MainViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\MainViewModel.cs,StartTimer,The following statement contains a magic number: Device.StartTimer(new TimeSpan(6000)' () =>              {                  DeviceTimerInfo = "This text was updated using the Device Timer";                  return true;              });
Magic Number,XLabs.Samples.ViewModel,RepeaterViewViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\RepeaterViewViewModel.cs,LoadData,The following statement contains a magic number: NextItemNumber = 3;
Magic Number,XLabs.Samples.ViewModel,WaveRecorderViewModel,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\WaveRecorderViewModel.cs,WaveRecorderViewModel,The following statement contains a magic number: SampleRate = 16000;
Missing Default,XLabs.Samples,App,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\App.xaml.cs,GetServicesPage,The following switch statement is missing a default case: switch (e.SelectedItem.ToString().ToLower())                  {                      case "texttospeech":                          await mainPage.Navigation.PushAsync(new TextToSpeechPage());                          break;                      case "deviceextended":                          await mainPage.Navigation.PushAsync(new ExtendedDeviceInfoPage(Resolver.Resolve<IDevice>()));                          break;                      case "phoneservice":                          await mainPage.Navigation.PushAsync(new PhoneServicePage());                          break;                      case "geolocator":                          await mainPage.Navigation.PushAsync(ViewFactory.CreatePage<GeolocatorViewModel' Page>() as Page);                          break;                      case "camera":                          await mainPage.Navigation.PushAsync(ViewFactory.CreatePage<CameraViewModel' Page>() as Page);                          break;                      case "accelerometer":                          await mainPage.Navigation.PushAsync(new AcceleratorSensorPage());                          break;                      case "gyroscope":                          await mainPage.Navigation.PushAsync(new GyroscopePage());                          break;                      case "display":                          await mainPage.Navigation.PushAsync(new AbsoluteLayoutWithDisplayInfoPage(Resolver.Resolve<IDisplay>()));                          break;                      case "cache":                          await mainPage.Navigation.PushAsync(ViewFactory.CreatePage<CacheServiceViewModel' Page>() as Page);                          break;                      case "sound":                          await mainPage.Navigation.PushAsync(ViewFactory.CreatePage<SoundServiceViewModel' Page>() as Page);                          break;                      //case "bluetooth":                      //    await mainPage.Navigation.PushAsync(new BluetoothPage());                      //    break;                      case "fontmanager":                          await mainPage.Navigation.PushAsync(new FontManagerPage(Resolver.Resolve<IDisplay>()' Resolver.Resolve<IFontManager>()));                          break;                      case "nfc":                          await mainPage.Navigation.PushAsync(new NfcDevicePage());                          break;                      case "waverecorder":                          await mainPage.Navigation.PushAsync(ViewFactory.CreatePage<WaveRecorderViewModel' Page>() as Page);                          break;                      case "email":                          await mainPage.Navigation.PushAsync(new EmailPage());                          break;                      case "securestorage":                          await mainPage.Navigation.PushAsync(new SecureStoragePage());                          break;                  }
Missing Default,XLabs.Samples.Pages.Controls,SegmentPage,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\Pages\Controls\SegmentPage.cs,SegmentPage,The following switch statement is missing a default case: switch (segmentIndex)  				{  					case 0:  						segment.TintColor = Color.Green;  						break;  					case 1:  						segment.TintColor = Color.Yellow;  						break;  					case 2:  						segment.TintColor = Color.Red;  						break;  				}
Missing Default,XLabs.Samples.ViewModel,GestureSampleVm,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\Samples\XLabs.Samples\XLabs.Samples\ViewModel\GestureSampleVM.cs,OnGesture,The following switch statement is missing a default case: switch (gr.GestureType)              {                  case GestureType.SingleTap:                      Gestures.Insert(0' string.Format("Gesture:{0} param is {1}"' gr.GestureType' obj));                      break;                  case GestureType.DoubleTap:                      Gestures.Insert(0' string.Format("Gesture:{0} param is {1}"' gr.GestureType' obj));                      break;                  case GestureType.LongPress:                      Gestures.Insert(0' string.Format("Gesture:{0} param is {1}"' gr.GestureType' obj));                      break;                  case GestureType.Swipe:                      Gestures.Insert(0'string.Format("Gesture:{0} Direction: {1} param is {2}"'gr.GestureType'gr.Direction'obj));                      break;              }
