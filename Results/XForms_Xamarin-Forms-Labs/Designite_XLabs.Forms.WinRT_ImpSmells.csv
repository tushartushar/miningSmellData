Implementation smell,Namespace,Class,File,Method,Description
Long Statement,XLabs.Forms.Controls,RadioButtonRenderer,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.WinRT.Shared\Controls\RadioButton\RadioButtonRenderer.cs,ElementOnPropertyChanged,The length of the statement  "                    System.Diagnostics.Debug.WriteLine("Property change for {0} has not been implemented."' propertyChangedEventArgs.PropertyName); " is 127.
Long Statement,XLabs.Forms,ColorExtensions,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.WinRT.Shared\Extensions\ColorExtensions.cs,ToMediaColor,The length of the statement  "            return Color.FromArgb((byte)(color.A * 255.0)' (byte)(color.R * 255.0)' (byte)(color.G * 255.0)' (byte)(color.B * 255.0)); " is 122.
Magic Number,XLabs.Forms.Controls,ImageButtonRenderer,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.Shared\Controls\ImageButtonRenderer.cs,GetWidth,The following statement contains a magic number: const int DefaultWidth = 50;
Magic Number,XLabs.Forms.Controls,ImageButtonRenderer,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.Shared\Controls\ImageButtonRenderer.cs,GetHeight,The following statement contains a magic number: const int DefaultHeight = 50;
Magic Number,XLabs.Forms.Controls,ImageButtonRenderer,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.Shared\Controls\ImageButtonRenderer.cs,AssignContent,The following statement contains a magic number: var label = new TextBlock                  {                      TextAlignment = GetTextAlignment(sourceButton.Orientation)'                      FontSize = 16'                      VerticalAlignment = Windows.UI.Xaml.VerticalAlignment.Center'                      Text = sourceButton.Text                  };
Magic Number,XLabs.Forms.Controls,ImageButtonRenderer,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.Shared\Controls\ImageButtonRenderer.cs,GetImageAsync,The following statement contains a magic number: image.Height = Convert.ToDouble(height / 2);
Magic Number,XLabs.Forms.Controls,ImageButtonRenderer,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.Shared\Controls\ImageButtonRenderer.cs,GetImageAsync,The following statement contains a magic number: image.Width = Convert.ToDouble(width / 2);
Magic Number,XLabs.Forms.Controls,ImageButtonRenderer,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.Shared\Controls\ImageButtonRenderer.cs,SetImageMargin,The following statement contains a magic number: const int DefaultMargin = 10;
Magic Number,XLabs.Forms.Controls,CheckBoxRenderer,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.WinRT.Shared\Controls\CheckBox\CheckBoxRenderer.cs,UpdateFont,The following statement contains a magic number: Control.FontSize = (Element.FontSize > 0) ? (float)Element.FontSize : 12.0f;
Magic Number,XLabs.Forms.Controls,RadioButtonRenderer,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.WinRT.Shared\Controls\RadioButton\RadioButtonRenderer.cs,UpdateFont,The following statement contains a magic number: Control.FontSize = (Element.FontSize > 0) ? (float)Element.FontSize : 12.0f;
Magic Number,XLabs.Forms.Services,FontManager,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.Shared\Services\FontManager.cs,GetHeight,The following statement contains a magic number: var multiplier = Application.Current.MainPage.Scale / 100d;
Magic Number,XLabs.Forms,ColorExtensions,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.WinRT.Shared\Extensions\ColorExtensions.cs,ToMediaColor,The following statement contains a magic number: return Color.FromArgb((byte)(color.A * 255.0)' (byte)(color.R * 255.0)' (byte)(color.G * 255.0)' (byte)(color.B * 255.0));
Magic Number,XLabs.Forms,ColorExtensions,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.WinRT.Shared\Extensions\ColorExtensions.cs,ToMediaColor,The following statement contains a magic number: return Color.FromArgb((byte)(color.A * 255.0)' (byte)(color.R * 255.0)' (byte)(color.G * 255.0)' (byte)(color.B * 255.0));
Magic Number,XLabs.Forms,ColorExtensions,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.WinRT.Shared\Extensions\ColorExtensions.cs,ToMediaColor,The following statement contains a magic number: return Color.FromArgb((byte)(color.A * 255.0)' (byte)(color.R * 255.0)' (byte)(color.G * 255.0)' (byte)(color.B * 255.0));
Magic Number,XLabs.Forms,ColorExtensions,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.WinRT.Shared\Extensions\ColorExtensions.cs,ToMediaColor,The following statement contains a magic number: return Color.FromArgb((byte)(color.A * 255.0)' (byte)(color.R * 255.0)' (byte)(color.G * 255.0)' (byte)(color.B * 255.0));
Magic Number,XLabs.Forms,FontExtensions,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.WinRT.Shared\Extensions\FontExtensions.cs,GetHeight,The following statement contains a magic number: switch (font.NamedSize)              {                  case NamedSize.Micro:                      return (double)Application.Current.Resources["PhoneFontSizeSmall"] - 3.0;                  case NamedSize.Small:                      return (double)Application.Current.Resources["PhoneFontSizeSmall"];                  case NamedSize.Default:                  case NamedSize.Medium:                      return (double)Application.Current.Resources["PhoneFontSizeNormal"];                  case NamedSize.Large:                      return (double)Application.Current.Resources["PhoneFontSizeLarge"];                  default:                      throw new ArgumentOutOfRangeException();              }
Missing Default,XLabs.Forms.Controls,ImageButtonRenderer,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.Shared\Controls\ImageButtonRenderer.cs,SetImageMargin,The following switch statement is missing a default case: switch (orientation)              {                  case ImageOrientation.ImageToLeft:                      right = DefaultMargin;                      break;                  case ImageOrientation.ImageOnTop:                      bottom = DefaultMargin;                      break;                  case ImageOrientation.ImageToRight:                      left = DefaultMargin;                      break;                  case ImageOrientation.ImageOnBottom:                      top = DefaultMargin;                      break;              }
Missing Default,XLabs.Forms,AlignmentExtensions,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.WinRT.Shared\Extensions\AlignmentExtensions.cs,ToContentVerticalAlignment,The following switch statement is missing a default case: switch (alignment)              {                  case TextAlignment.Center:                      return VerticalAlignment.Center;                  case TextAlignment.End:                      return VerticalAlignment.Bottom;                  case TextAlignment.Start:                      return VerticalAlignment.Top;              }
Missing Default,XLabs.Forms,AlignmentExtensions,D:\research\architectureSmells\repos\XForms_Xamarin-Forms-Labs\src\Forms\XLabs.Forms.WinRT.Shared\Extensions\AlignmentExtensions.cs,ToContentHorizontalAlignment,The following switch statement is missing a default case: switch (alignment)              {                  case TextAlignment.Center:                      return HorizontalAlignment.Center;                  case TextAlignment.End:                      return HorizontalAlignment.Right;                  case TextAlignment.Start:                      return HorizontalAlignment.Left;              }
