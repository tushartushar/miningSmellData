Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SubSonic.Handlers,RESTHandler,C:\repos\subsonic_SubSonic-3.0\SubSonic.Web\Handlers\RESTHandler.cs,GenerateReturnSet,Cyclomatic complexity of the method is 10
Complex Method,SubSonic.Handlers,XmlToJSONParser,C:\repos\subsonic_SubSonic-3.0\SubSonic.Web\Handlers\XmlToJSONParser.cs,XmlToJSONnode,Cyclomatic complexity of the method is 8
Long Statement,SubSonic.Handlers,RESTHandler,C:\repos\subsonic_SubSonic-3.0\SubSonic.Web\Handlers\RESTHandler.cs,FormatOutput,The length of the statement  "                result = result.Replace("<NewDataSet>"' String.Concat("<"' tableName' ">")).Replace("</NewDataSet>"' String.Concat("</"' tableName' ">")); " is 138.
Long Statement,SubSonic.Handlers,RESTHandler,C:\repos\subsonic_SubSonic-3.0\SubSonic.Web\Handlers\RESTHandler.cs,FormatOutput,The length of the statement  "                result = result.Replace("<Table>"' String.Concat("<"' itemName' ">")).Replace("</Table>"' String.Concat("</"' itemName' ">")); " is 126.
Magic Number,SubSonic.Handlers,RESTfullUrl,C:\repos\subsonic_SubSonic-3.0\SubSonic.Web\Handlers\RESTfullUrl.cs,ParseUrl,The following statement contains a magic number: int tableSPIndex = bits.Length - 2;
Magic Number,SubSonic.Handlers,XmlToJSONParser,C:\repos\subsonic_SubSonic-3.0\SubSonic.Web\Handlers\XmlToJSONParser.cs,XmlToJSONnode,The following statement contains a magic number: foreach(string childname in childNodeNames.Keys)              {                  ArrayList alChild = (ArrayList)childNodeNames[childname];                  if(alChild.Count == 1)                      OutputNode(childname' alChild[0]' sbJSON' true);                  else                  {                      sbJSON.Append(childname + ": [ ");                      foreach(object Child in alChild)                          OutputNode(childname' Child' sbJSON' false);                      sbJSON.Remove(sbJSON.Length - 2' 2);                      sbJSON.Append(" ]' ");                  }              }
Magic Number,SubSonic.Handlers,XmlToJSONParser,C:\repos\subsonic_SubSonic-3.0\SubSonic.Web\Handlers\XmlToJSONParser.cs,XmlToJSONnode,The following statement contains a magic number: foreach(string childname in childNodeNames.Keys)              {                  ArrayList alChild = (ArrayList)childNodeNames[childname];                  if(alChild.Count == 1)                      OutputNode(childname' alChild[0]' sbJSON' true);                  else                  {                      sbJSON.Append(childname + ": [ ");                      foreach(object Child in alChild)                          OutputNode(childname' Child' sbJSON' false);                      sbJSON.Remove(sbJSON.Length - 2' 2);                      sbJSON.Append(" ]' ");                  }              }
Magic Number,SubSonic.Handlers,XmlToJSONParser,C:\repos\subsonic_SubSonic-3.0\SubSonic.Web\Handlers\XmlToJSONParser.cs,XmlToJSONnode,The following statement contains a magic number: sbJSON.Remove(sbJSON.Length - 2' 2);
Magic Number,SubSonic.Handlers,XmlToJSONParser,C:\repos\subsonic_SubSonic-3.0\SubSonic.Web\Handlers\XmlToJSONParser.cs,XmlToJSONnode,The following statement contains a magic number: sbJSON.Remove(sbJSON.Length - 2' 2);
Magic Number,SubSonic.Handlers,XmlToJSONParser,C:\repos\subsonic_SubSonic-3.0\SubSonic.Web\Handlers\XmlToJSONParser.cs,SafeJSON,The following statement contains a magic number: StringBuilder sb = new StringBuilder(len + 4);
Magic Number,SubSonic.Handlers,XmlToJSONParser,C:\repos\subsonic_SubSonic-3.0\SubSonic.Web\Handlers\XmlToJSONParser.cs,SafeJSON,The following statement contains a magic number: for(i = 0; i < len; i += 1)              {                  char c = s[i];                  if((c == '\\') || (c == '"') || (c == '>'))                  {                      sb.Append('\\');                      sb.Append(c);                  }                  else if(c == '\b')                      sb.Append("\\b");                  else if(c == '\t')                      sb.Append("\\t");                  else if(c == '\n')                      sb.Append("\\n");                  else if(c == '\f')                      sb.Append("\\f");                  else if(c == '\r')                      sb.Append("\\r");                  else                  {                      if(c < ' ')                      {                          //t = "000" + Integer.toHexString(c);                          string tmp = new string(c' 1);                          t = "000" + int.Parse(tmp' NumberStyles.HexNumber);                          sb.Append("\\u" + t.Substring(t.Length - 4));                      }                      else                          sb.Append(c);                  }              }
